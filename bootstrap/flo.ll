; ModuleID = '../src/main.flo'
source_filename = "../src/main.flo"
target triple = "x86_64-pc-linux-gnu"

%CodeGen = type <{ ptr, ptr, ptr, ptr, ptr, i1, ptr, ptr, ptr, ptr, ptr }>
%TypeChecker = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1, i1, ptr }>
%string = type <{ ptr, ptr, i64, i64 }>
%FlagBool = type <{ i64, ptr, ptr, i1 }>
%Flag = type <{ i64, ptr, ptr }>
%FlagString = type <{ i64, ptr, ptr, ptr }>
%FlagInt = type <{ i64, ptr, ptr, i64 }>
%Compiler = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_FloFile_ = type <{ ptr, ptr, i64, i64 }>
%Array_FloError_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_FileId_ = type <{ ptr, i64, i64 }>
%Program = type <{ i1, ptr }>
%Array_Module_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_Generic_ = type <{ ptr, i64, i64 }>
%Module = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_string_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%Map_string_CGClassType_ = type <{ ptr, i64, i64 }>
%Map_string_CGEnumType_ = type <{ ptr, i64, i64 }>
%Array_Enum_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Enum_ = type <{ i1, i64, i64, ptr }>
%Array_Class_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Class_ = type <{ i1, i64, i64, ptr }>
%Array_ConstDeclaration_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_ConstDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_VarDeclaration_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_VarDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_Function_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Function_ = type <{ i1, i64, i64, ptr }>
%MapIterator_string_LLVMValueRef_ = type <{ i1, ptr, i64, i64 }>
%MapIterator_string_CGClassType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_string_CGClassType_ = type <{ ptr, ptr }>
%MapIterator_string_CGEnumType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_string_CGEnumType_ = type <{ ptr, ptr }>
%ArrayIterator_Module_ = type <{ i1, i64, i64, ptr }>
%Array_Var_ = type <{ ptr, ptr, i64, i64 }>
%Class = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i1 }>
%Array_ClassField_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassMethod_ = type <{ ptr, ptr, i64, i64 }>
%Enum = type <{ ptr, ptr, ptr, ptr }>
%Array_EnumField_ = type <{ ptr, ptr, i64, i64 }>
%EnumField = type <{ ptr, ptr, ptr }>
%ScopeId = type <{ i64, i64 }>
%Array_Scope_ = type <{ ptr, ptr, i64, i64 }>
%Array_Const_ = type <{ ptr, ptr, i64, i64 }>
%GeneratedModule = type <{ ptr, ptr, ptr, ptr }>
%FloFile = type <{ ptr, ptr }>
%FloError = type <{ i64, ptr, ptr }>
%FloRange = type <{ i64, i64, i64, i64 }>
%Range = type <{ i64, i64 }>
%RangeIterator = type <{ i1, i64, i64 }>
%MapEntry_string_FileId_ = type <{ ptr, ptr }>
%File = type <{ ptr, i64 }>
%ArrayIterator_FloError_ = type <{ i1, i64, i64, ptr }>
%MapIterator_string_FileId_ = type <{ i1, ptr, i64, i64 }>
%StringBuilder = type <{ ptr, ptr, i64, ptr, i64 }>
%Array_ScopeId_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_VarId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_VarId_ = type <{ ptr, ptr }>
%Scope = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_string_EnumId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_EnumId_ = type <{ ptr, ptr }>
%Map_string_Type_ = type <{ ptr, i64, i64 }>
%MapEntry_string_Type_ = type <{ ptr, ptr }>
%Map_string_ClassId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_ClassId_ = type <{ ptr, ptr }>
%Map_string_PropId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_PropId_ = type <{ ptr, ptr }>
%Array_FunctionArg_ = type <{ ptr, ptr, i64, i64 }>
%Array_Statement_ = type <{ ptr, ptr, i64, i64 }>
%Array_Type_ = type <{ ptr, ptr, i64, i64 }>
%Array_Token_ = type <{ ptr, ptr, i64, i64 }>
%Array_Array_Token__ = type <{ ptr, ptr, i64, i64 }>
%Array_uint_ = type <{ ptr, ptr, i64, i64 }>
%Array_ImportClause_ = type <{ ptr, ptr, i64, i64 }>
%Array_ImportNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_VarDeclarationStatement_ = type <{ ptr, ptr, i64, i64 }>
%Array_EnumNodeField_ = type <{ ptr, ptr, i64, i64 }>
%Array_EnumNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_TypeAliasNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_ConstDeclarationStatement_ = type <{ ptr, ptr, i64, i64 }>
%Array_ArgNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_StatementNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_MethodNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_FieldNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_TypeNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_GenericParameterNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassDeclarationNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_FunctionDeclarationNode_ = type <{ ptr, ptr, i64, i64 }>
%ModuleAST = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Lexer = type <{ i8, ptr, ptr, i64, i64, i64 }>
%Token = type <{ i64, ptr }>
%StrToken = type <{ i64, ptr, ptr, ptr, ptr }>
%IntToken = type <{ i64, ptr, i64 }>
%IdentifierToken = type <{ i64, ptr, ptr }>
%FloatToken = type <{ i64, ptr, double }>
%CharToken = type <{ i64, ptr, i8 }>
%Parser = type <{ ptr, ptr, ptr, i64 }>
%FunctionDeclarationNode = type <{ ptr, ptr, ptr, ptr, i1 }>
%TypeNode = type <{ ptr, i64 }>
%RecordTypeNode = type <{ ptr, i64, ptr, ptr }>
%ClassDeclarationNode = type <{ ptr, ptr, ptr, ptr, ptr }>
%FieldNode = type <{ ptr, i64, ptr, ptr }>
%MethodNode = type <{ ptr, ptr, ptr, i64, ptr, i1, i1 }>
%EnumNode = type <{ ptr, ptr, ptr }>
%EnumNodeField = type <{ ptr, ptr }>
%ImportNode = type <{ ptr, ptr, ptr }>
%ImportClause = type <{ ptr, ptr }>
%TypeAliasNode = type <{ ptr, ptr }>
%BlockNode = type <{ ptr, ptr }>
%TupleTypeNode = type <{ ptr, i64, ptr }>
%FunctionTypeNode = type <{ ptr, i64, ptr, ptr }>
%PointerTypeNode = type <{ ptr, i64, ptr }>
%ArrayTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_ExpressionNode_ = type <{ ptr, ptr, i64, i64 }>
%StatementNode = type <{ ptr, i64 }>
%ExpressionNode = type <{ ptr, i64, i64 }>
%StringExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%VarDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%NewExpressionNode = type <{ ptr, i64, i64, ptr, i1, ptr }>
%IfStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%WhileStatementNode = type <{ ptr, i64, ptr, ptr }>
%ForStatementNode = type <{ ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr }>
%ReturnStatementNode = type <{ ptr, i64, ptr }>
%ConstDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%TupleExpressionNode = type <{ ptr, i64, i64, ptr }>
%ArgNode = type <{ ptr, ptr, ptr }>
%IntExpressionNode = type <{ ptr, i64, i64, ptr }>
%FloatExpressionNode = type <{ ptr, i64, i64, ptr }>
%CharExpressionNode = type <{ ptr, i64, i64, ptr }>
%VarAccessExpressionNode = type <{ ptr, i64, i64, ptr }>
%CallExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%ExpressionIndexNode = type <{ ptr, i64, i64, ptr, ptr }>
%MemberExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%UnaryExpressionNode = type <{ ptr, i64, i64, i64, ptr }>
%ArrayExpressionNode = type <{ ptr, i64, i64, ptr }>
%BinaryExpressionNode = type <{ ptr, i64, i64, ptr, i64, ptr }>
%MatchExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_MatchExpressionCaseNode_ = type <{ ptr, ptr, i64, i64 }>
%MatchExpressionCaseNode = type <{ ptr, ptr }>
%TypeCastExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TernaryExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%ArrayIterator_ImportNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_TypeAliasNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ConstDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%ConstDeclaration = type <{ i64, ptr, ptr, i1 }>
%ArrayIterator_VarDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%VarDeclaration = type <{ i64, ptr, ptr, i1 }>
%VarId = type <{ i64, i64, i64 }>
%Var = type <{ ptr, ptr, ptr }>
%Expression = type <{ i64, i1, i64, ptr }>
%ArrayIterator_FunctionDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%Function = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1 }>
%Block = type <{ ptr, i1, i1, i1, ptr }>
%FunctionType = type <{ i64, ptr, ptr, i1 }>
%ReturnStatement = type <{ i64, ptr }>
%TypeId = type <{ i64, i64, i64 }>
%MapIterator_string_Type_ = type <{ i1, ptr, i64, i64 }>
%GenericType = type <{ i64, ptr, ptr, ptr }>
%ObjectType = type <{ i64, ptr }>
%Array_Expression_ = type <{ ptr, ptr, i64, i64 }>
%StringExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%IntrinsicCall = type <{ i64, i1, i64, ptr, i64, ptr }>
%TypeCastExpression = type <{ i64, i1, i64, ptr, ptr }>
%FunctionArg = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapIterator_string_PropId_ = type <{ i1, ptr, i64, i64 }>
%PropId = type <{ i64, ptr, i64 }>
%ClassMethod = type <{ ptr, i1, i64, ptr, ptr, ptr, ptr, i1, ptr, i64 }>
%ClassField = type <{ ptr, i1, i64, ptr, ptr, ptr, i64 }>
%Array_MatchExpressionCase_ = type <{ ptr, ptr, i64, i64 }>
%Type = type <{ i64 }>
%MatchExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr, i1 }>
%ArrayIterator_MatchExpressionCaseNode_ = type <{ i1, i64, i64, ptr }>
%MatchExpressionCase = type <{ i64, ptr, ptr }>
%Const = type <{ ptr, ptr, ptr }>
%EnumType = type <{ i64, ptr }>
%MemberExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%CallExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%BinaryExpression = type <{ i64, i1, i64, ptr, ptr, i64, ptr }>
%IntType = type <{ i64, i1 }>
%NewExpression = type <{ i64, i1, i64, ptr, ptr, i1, ptr }>
%VarAccessExpression = type <{ i64, i1, i64, ptr, ptr }>
%PointerType = type <{ i64, ptr }>
%ArrayType = type <{ i64, ptr, i64 }>
%ArrayIterator_TypeNode_ = type <{ i1, i64, i64, ptr }>
%TupleType = type <{ i64, ptr }>
%IfStatement = type <{ i64, ptr, ptr, ptr }>
%ForStatement = type <{ i64, ptr, ptr, ptr, ptr, ptr }>
%UnaryExpression = type <{ i64, i1, i64, ptr, i64, ptr }>
%WhileStatement = type <{ i64, ptr, ptr }>
%IndexExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%TernaryExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapEntry_string_Generic_ = type <{ ptr, ptr }>
%Generic = type <{ i64, ptr }>
%IntExpression = type <{ i64, i1, i64, ptr, i64 }>
%ArrayIterator_StatementNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ImportClause_ = type <{ i1, i64, i64, ptr }>
%ModuleVarId = type <{ i64, i64, i64, ptr }>
%ArrayIterator_ArgNode_ = type <{ i1, i64, i64, ptr }>
%ArrayExpression = type <{ i64, i1, i64, ptr, ptr }>
%FloatExpression = type <{ i64, i1, i64, ptr, double }>
%ArrayIterator_ExpressionNode_ = type <{ i1, i64, i64, ptr }>
%TupleExpression = type <{ i64, i1, i64, ptr, ptr }>
%BooleanExpression = type <{ i64, i1, i64, ptr, i1 }>
%ArrayIterator_Expression_ = type <{ i1, i64, i64, ptr }>
%MapEntry_string_LLVMValueRef_ = type <{ ptr, ptr }>
%MapIterator_string_VarId_ = type <{ i1, ptr, i64, i64 }>
%ArrayIterator_ScopeId_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Type_ = type <{ i1, i64, i64, ptr }>
%Map_string_uint_ = type <{ ptr, i64, i64 }>
%MapEntry_string_uint_ = type <{ ptr, i64 }>
%ArrayIterator_MatchExpressionCase_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Statement_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassMethod_ = type <{ i1, i64, i64, ptr }>
%CGClassType = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_LLVMValueRef_ = type <{ ptr, ptr, i64, i64 }>
%CGEnumType = type <{ ptr, ptr, ptr }>
%Array_LLVMTypeRef_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_EnumField_ = type <{ i1, i64, i64, ptr }>
%IntrinsicResult = type <{ ptr, ptr }>
%ArrayIterator_LLVMValueRef_ = type <{ i1, i64, i64, ptr }>

@VTablestring = internal global { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @string_find, ptr @string_substring, ptr @string_get_byte, ptr @string_get_bytes, ptr @string_replace, ptr @string_to_cstring, ptr @string_ends_with, ptr @string_starts_with }
@VTableGeneratedModule = internal global { ptr, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @GeneratedModule_run_passes, ptr @GeneratedModule_exec, ptr @GeneratedModule_set_target_machine, ptr @GeneratedModule_write_obj, ptr @GeneratedModule_write_ir, ptr @GeneratedModule_write_bc, ptr @GeneratedModule_write_asm }
@0 = private unnamed_addr constant [8 x i8] c"Panic: \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"error: %s\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@4 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00", align 1
@5 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@VTableArray_FloError_ = internal global { ptr, ptr, ptr } { ptr @Array_FloError__pop, ptr @Array_FloError__ensure_capacity, ptr @Array_FloError__find }
@VTableArray_FloFile_ = internal global { ptr, ptr, ptr } { ptr @Array_FloFile__pop, ptr @Array_FloFile__ensure_capacity, ptr @Array_FloFile__find }
@6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@VTableCompiler = internal global { ptr, ptr, ptr, ptr, ptr, ptr } { ptr @Compiler_set_std_path, ptr @Compiler_register_file, ptr @Compiler_set_current_file, ptr @Compiler_print_errors, ptr @Compiler_add_builtins, ptr @Compiler___del__ }
@VTableFile = internal global { ptr, ptr, ptr, ptr, ptr } { ptr @File_read_all, ptr @File_read_bytes_length, ptr @File_write_bytes_length, ptr @File_write_string, ptr @File_close }
@VTableStringBuilder = internal global { ptr, ptr, ptr, ptr } { ptr @StringBuilder_add_bytes_length, ptr @StringBuilder_append_string, ptr @StringBuilder_add_byte, ptr @StringBuilder_get_string }
@7 = private unnamed_addr constant [22 x i8] c"builtins/builtins.flo\00", align 1
@8 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@9 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00", align 1
@10 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00", align 1
@12 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00", align 1
@13 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00", align 1
@14 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00", align 1
@15 = private unnamed_addr constant [10 x i8] c"[Error]: \00", align 1
@16 = private unnamed_addr constant [19 x i8] c"File '%s', line %u\00", align 1
@17 = internal global [13 x i8] c"FlagType.INT\00"
@18 = internal global [14 x i8] c"FlagType.BOOL\00"
@19 = internal global [13 x i8] c"FlagType.STR\00"
@FlagType_names = internal unnamed_addr constant [3 x ptr] [ptr @17, ptr @18, ptr @19]
@flags_length = internal unnamed_addr global i64 0
@flags_buffer = internal unnamed_addr global [250 x ptr] zeroinitializer
@VTableArray_ScopeId_ = internal global { ptr, ptr, ptr } { ptr @Array_ScopeId__pop, ptr @Array_ScopeId__ensure_capacity, ptr @Array_ScopeId__find }
@VTableArray_Scope_ = internal global { ptr, ptr, ptr } { ptr @Array_Scope__pop, ptr @Array_Scope__ensure_capacity, ptr @Array_Scope__find }
@VTableArray_VarDeclaration_ = internal global { ptr, ptr, ptr } { ptr @Array_VarDeclaration__pop, ptr @Array_VarDeclaration__ensure_capacity, ptr @Array_VarDeclaration__find }
@VTableArray_Var_ = internal global { ptr, ptr, ptr } { ptr @Array_Var__pop, ptr @Array_Var__ensure_capacity, ptr @Array_Var__find }
@VTableArray_ConstDeclaration_ = internal global { ptr, ptr, ptr } { ptr @Array_ConstDeclaration__pop, ptr @Array_ConstDeclaration__ensure_capacity, ptr @Array_ConstDeclaration__find }
@VTableArray_EnumField_ = internal global { ptr, ptr, ptr } { ptr @Array_EnumField__pop, ptr @Array_EnumField__ensure_capacity, ptr @Array_EnumField__find }
@VTableArray_Enum_ = internal global { ptr, ptr, ptr } { ptr @Array_Enum__pop, ptr @Array_Enum__ensure_capacity, ptr @Array_Enum__find }
@VTableArray_Const_ = internal global { ptr, ptr, ptr } { ptr @Array_Const__pop, ptr @Array_Const__ensure_capacity, ptr @Array_Const__find }
@VTableArray_FunctionArg_ = internal global { ptr, ptr, ptr } { ptr @Array_FunctionArg__pop, ptr @Array_FunctionArg__ensure_capacity, ptr @Array_FunctionArg__find }
@VTableArray_Statement_ = internal global { ptr, ptr, ptr } { ptr @Array_Statement__pop, ptr @Array_Statement__ensure_capacity, ptr @Array_Statement__find }
@VTableArray_Type_ = internal global { ptr, ptr, ptr } { ptr @Array_Type__pop, ptr @Array_Type__ensure_capacity, ptr @Array_Type__find }
@VTableArray_ClassMethod_ = internal global { ptr, ptr, ptr } { ptr @Array_ClassMethod__pop, ptr @Array_ClassMethod__ensure_capacity, ptr @Array_ClassMethod__find }
@VTableArray_ClassField_ = internal global { ptr, ptr, ptr } { ptr @Array_ClassField__pop, ptr @Array_ClassField__ensure_capacity, ptr @Array_ClassField__find }
@VTableArray_Class_ = internal global { ptr, ptr, ptr } { ptr @Array_Class__pop, ptr @Array_Class__ensure_capacity, ptr @Array_Class__find }
@VTableArray_Function_ = internal global { ptr, ptr, ptr } { ptr @Array_Function__pop, ptr @Array_Function__ensure_capacity, ptr @Array_Function__find }
@VTableArray_Module_ = internal global { ptr, ptr, ptr } { ptr @Array_Module__pop, ptr @Array_Module__ensure_capacity, ptr @Array_Module__find }
@VTableArray_Token_ = internal global { ptr, ptr, ptr } { ptr @Array_Token__pop, ptr @Array_Token__ensure_capacity, ptr @Array_Token__find }
@VTableArray_Array_Token__ = internal global { ptr, ptr, ptr } { ptr @Array_Array_Token___pop, ptr @Array_Array_Token___ensure_capacity, ptr @Array_Array_Token___find }
@VTableArray_uint_ = internal global { ptr, ptr, ptr } { ptr @Array_uint__pop, ptr @Array_uint__ensure_capacity, ptr @Array_uint__find }
@VTableArray_ImportClause_ = internal global { ptr, ptr, ptr } { ptr @Array_ImportClause__pop, ptr @Array_ImportClause__ensure_capacity, ptr @Array_ImportClause__find }
@VTableArray_ImportNode_ = internal global { ptr, ptr, ptr } { ptr @Array_ImportNode__pop, ptr @Array_ImportNode__ensure_capacity, ptr @Array_ImportNode__find }
@VTableArray_VarDeclarationStatement_ = internal global { ptr, ptr, ptr } { ptr @Array_VarDeclarationStatement__pop, ptr @Array_VarDeclarationStatement__ensure_capacity, ptr @Array_VarDeclarationStatement__find }
@VTableArray_EnumNodeField_ = internal global { ptr, ptr, ptr } { ptr @Array_EnumNodeField__pop, ptr @Array_EnumNodeField__ensure_capacity, ptr @Array_EnumNodeField__find }
@VTableArray_EnumNode_ = internal global { ptr, ptr, ptr } { ptr @Array_EnumNode__pop, ptr @Array_EnumNode__ensure_capacity, ptr @Array_EnumNode__find }
@VTableArray_TypeAliasNode_ = internal global { ptr, ptr, ptr } { ptr @Array_TypeAliasNode__pop, ptr @Array_TypeAliasNode__ensure_capacity, ptr @Array_TypeAliasNode__find }
@VTableArray_ConstDeclarationStatement_ = internal global { ptr, ptr, ptr } { ptr @Array_ConstDeclarationStatement__pop, ptr @Array_ConstDeclarationStatement__ensure_capacity, ptr @Array_ConstDeclarationStatement__find }
@VTableArray_ArgNode_ = internal global { ptr, ptr, ptr } { ptr @Array_ArgNode__pop, ptr @Array_ArgNode__ensure_capacity, ptr @Array_ArgNode__find }
@VTableArray_StatementNode_ = internal global { ptr, ptr, ptr } { ptr @Array_StatementNode__pop, ptr @Array_StatementNode__ensure_capacity, ptr @Array_StatementNode__find }
@VTableArray_MethodNode_ = internal global { ptr, ptr, ptr } { ptr @Array_MethodNode__pop, ptr @Array_MethodNode__ensure_capacity, ptr @Array_MethodNode__find }
@VTableArray_FieldNode_ = internal global { ptr, ptr, ptr } { ptr @Array_FieldNode__pop, ptr @Array_FieldNode__ensure_capacity, ptr @Array_FieldNode__find }
@VTableArray_TypeNode_ = internal global { ptr, ptr, ptr } { ptr @Array_TypeNode__pop, ptr @Array_TypeNode__ensure_capacity, ptr @Array_TypeNode__find }
@VTableArray_GenericParameterNode_ = internal global { ptr, ptr, ptr } { ptr @Array_GenericParameterNode__pop, ptr @Array_GenericParameterNode__ensure_capacity, ptr @Array_GenericParameterNode__find }
@VTableArray_ClassDeclarationNode_ = internal global { ptr, ptr, ptr } { ptr @Array_ClassDeclarationNode__pop, ptr @Array_ClassDeclarationNode__ensure_capacity, ptr @Array_ClassDeclarationNode__find }
@VTableArray_FunctionDeclarationNode_ = internal global { ptr, ptr, ptr } { ptr @Array_FunctionDeclarationNode__pop, ptr @Array_FunctionDeclarationNode__ensure_capacity, ptr @Array_FunctionDeclarationNode__find }
@20 = private unnamed_addr constant [6 x i8] c"0.0.1\00", align 1
@21 = private unnamed_addr constant [23 x i8] c"Show this help message\00", align 1
@22 = private unnamed_addr constant [6 x i8] c"-emit\00", align 1
@23 = private unnamed_addr constant [276 x i8] c"Emit output in a particular format. Options are:\0A\09\09 \E2\80\A2 exe - Generates an executable.\0A\09\09 \E2\80\A2 llvm-ir - Generates a file containing LLVM IR.\0A\09\09 \E2\80\A2 llvm-bc - Generates a file containing LLVM bitcode.\0A\09\09 \E2\80\A2 obj - Generates an object file\0A\09\09 \E2\80\A2 asm - Generates Assembly code.\00", align 1
@24 = private unnamed_addr constant [36 x i8] c"Specify file to put the output into\00", align 1
@25 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@26 = private unnamed_addr constant [26 x i8] c"Specify runtime directory\00", align 1
@27 = private unnamed_addr constant [20 x i8] c"/usr/local/flo/lib/\00", align 1
@28 = private unnamed_addr constant [8 x i8] c"-target\00", align 1
@29 = private unnamed_addr constant [34 x i8] c"Compile to specific target triple\00", align 1
@30 = private unnamed_addr constant [69 x i8] c"Specify a library to link against (should be a comma seperated list)\00", align 1
@31 = private unnamed_addr constant [42 x i8] c"Specify the compiler's optimization level\00", align 1
@32 = private unnamed_addr constant [13 x i8] c"Show version\00", align 1
@33 = private unnamed_addr constant [34 x i8] c"Missing value after -%s argument.\00", align 1
@34 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@35 = private unnamed_addr constant [30 x i8] c" [OPTIONS]? <file>\0A\0AOPTIONS:\0A\00", align 1
@36 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@37 = private unnamed_addr constant [7 x i8] c" <val>\00", align 1
@38 = private unnamed_addr constant [25 x i8] c"No input file specified.\00", align 1
@39 = private unnamed_addr constant [33 x i8] c"Runtime directory not found '%s'\00", align 1
@40 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00", align 1
@41 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@42 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@43 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@44 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@45 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@46 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@48 = private unnamed_addr constant [4 x i8] c"fnc\00", align 1
@49 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@50 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@51 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@52 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@53 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@54 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@55 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@56 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@57 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@58 = private unnamed_addr constant [4 x i8] c"033\00", align 1
@59 = private unnamed_addr constant [4 x i8] c"x1b\00", align 1
@60 = private unnamed_addr constant [6 x i8] c"u001b\00", align 1
@61 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@62 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00", align 1
@VTableArray_ExpressionNode_ = internal global { ptr, ptr, ptr } { ptr @Array_ExpressionNode__pop, ptr @Array_ExpressionNode__ensure_capacity, ptr @Array_ExpressionNode__find }
@63 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00", align 1
@64 = private unnamed_addr constant [13 x i8] c"Expected '='\00", align 1
@65 = private unnamed_addr constant [13 x i8] c"Expected ':'\00", align 1
@66 = private unnamed_addr constant [13 x i8] c"Expected '('\00", align 1
@67 = private unnamed_addr constant [13 x i8] c"Expected ')'\00", align 1
@68 = private unnamed_addr constant [13 x i8] c"Expected '{'\00", align 1
@69 = private unnamed_addr constant [13 x i8] c"Expected '}'\00", align 1
@70 = private unnamed_addr constant [13 x i8] c"Expected ','\00", align 1
@71 = private unnamed_addr constant [13 x i8] c"Expected '<'\00", align 1
@72 = private unnamed_addr constant [13 x i8] c"Expected '>'\00", align 1
@73 = private unnamed_addr constant [14 x i8] c"Expected '->'\00", align 1
@74 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@75 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@76 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00", align 1
@VTableArray_MatchExpressionCaseNode_ = internal global { ptr, ptr, ptr } { ptr @Array_MatchExpressionCaseNode__pop, ptr @Array_MatchExpressionCaseNode__ensure_capacity, ptr @Array_MatchExpressionCaseNode__find }
@77 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00", align 1
@78 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00", align 1
@79 = private unnamed_addr constant [88 x i8] c"Illegal expression expected: 'fnc', 'class', 'type', 'enum', 'import', 'const' or 'let'\00", align 1
@VTableArray_Expression_ = internal global { ptr, ptr, ptr } { ptr @Array_Expression__pop, ptr @Array_Expression__ensure_capacity, ptr @Array_Expression__find }
@VTableArray_MatchExpressionCase_ = internal global { ptr, ptr, ptr } { ptr @Array_MatchExpressionCase__pop, ptr @Array_MatchExpressionCase__ensure_capacity, ptr @Array_MatchExpressionCase__find }
@80 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@81 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00", align 1
@82 = private unnamed_addr constant [4 x i8] c"%s*\00", align 1
@83 = private unnamed_addr constant [7 x i8] c"%s[%u]\00", align 1
@84 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@85 = private unnamed_addr constant [10 x i8] c"Namespace\00", align 1
@86 = private unnamed_addr constant [7 x i8] c"Record\00", align 1
@87 = private unnamed_addr constant [4 x i8] c"i%u\00", align 1
@88 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@89 = private unnamed_addr constant [4 x i8] c"%s4\00", align 1
@90 = private unnamed_addr constant [4 x i8] c"%s8\00", align 1
@91 = private unnamed_addr constant [5 x i8] c"%s16\00", align 1
@92 = private unnamed_addr constant [5 x i8] c"%s32\00", align 1
@93 = private unnamed_addr constant [5 x i8] c"%s64\00", align 1
@94 = private unnamed_addr constant [6 x i8] c"%s128\00", align 1
@95 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@96 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@97 = private unnamed_addr constant [7 x i8] c"record\00", align 1
@98 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@99 = private unnamed_addr constant [13 x i8] c"__generics__\00", align 1
@100 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@101 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00", align 1
@102 = private unnamed_addr constant [41 x i8] c"Generic expects %u parameters but got %u\00", align 1
@103 = private unnamed_addr constant [4 x i8] c"%s_\00", align 1
@104 = private unnamed_addr constant [6 x i8] c"%s_%s\00", align 1
@105 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00", align 1
@106 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00", align 1
@107 = private unnamed_addr constant [52 x i8] c"Import statement path can't be a a formatted string\00", align 1
@108 = private unnamed_addr constant [28 x i8] c"%s not found in module \22\22%s\00", align 1
@109 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00", align 1
@110 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00", align 1
@111 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00", align 1
@112 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00", align 1
@113 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00", align 1
@114 = private unnamed_addr constant [7 x i8] c"__eq__\00", align 1
@115 = private unnamed_addr constant [8 x i8] c"__add__\00", align 1
@116 = private unnamed_addr constant [8 x i8] c"__sub__\00", align 1
@117 = private unnamed_addr constant [8 x i8] c"__mul__\00", align 1
@118 = private unnamed_addr constant [8 x i8] c"__div__\00", align 1
@119 = private unnamed_addr constant [7 x i8] c"__or__\00", align 1
@120 = private unnamed_addr constant [8 x i8] c"__ora__\00", align 1
@121 = private unnamed_addr constant [12 x i8] c"__getitem__\00", align 1
@122 = private unnamed_addr constant [12 x i8] c"__setitem__\00", align 1
@123 = private unnamed_addr constant [7 x i8] c"__sl__\00", align 1
@124 = private unnamed_addr constant [7 x i8] c"__sr__\00", align 1
@125 = private unnamed_addr constant [8 x i8] c"__sla__\00", align 1
@126 = private unnamed_addr constant [8 x i8] c"__sra__\00", align 1
@127 = private unnamed_addr constant [7 x i8] c"__in__\00", align 1
@128 = private unnamed_addr constant [7 x i8] c"__lt__\00", align 1
@129 = private unnamed_addr constant [7 x i8] c"__lg__\00", align 1
@130 = private unnamed_addr constant [7 x i8] c"__ne__\00", align 1
@131 = private unnamed_addr constant [7 x i8] c"__le__\00", align 1
@132 = private unnamed_addr constant [7 x i8] c"__ge__\00", align 1
@133 = private unnamed_addr constant [8 x i8] c"__pow__\00", align 1
@134 = private unnamed_addr constant [8 x i8] c"__mod__\00", align 1
@135 = private unnamed_addr constant [8 x i8] c"__del__\00", align 1
@136 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00", align 1
@137 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00", align 1
@138 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00", align 1
@139 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00", align 1
@140 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00", align 1
@141 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00", align 1
@142 = private unnamed_addr constant [65 x i8] c"Expected %u arguments for binary operator overload %s but got %u\00", align 1
@143 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00", align 1
@144 = private unnamed_addr constant [75 x i8] c"__iter__ method must return an iteratable object {done: bool, next(): any}\00", align 1
@145 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00", align 1
@146 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00", align 1
@147 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00", align 1
@148 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00", align 1
@149 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@150 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00", align 1
@151 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00", align 1
@152 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00", align 1
@153 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@154 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00", align 1
@155 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00", align 1
@156 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00", align 1
@157 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00", align 1
@158 = private unnamed_addr constant [24 x i8] c"length has to be an int\00", align 1
@159 = private unnamed_addr constant [24 x i8] c"length has to be a uint\00", align 1
@160 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00", align 1
@161 = private unnamed_addr constant [29 x i8] c"length should be an unsigned\00", align 1
@162 = private unnamed_addr constant [4 x i8] c"u16\00", align 1
@163 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@164 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@165 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@166 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@167 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@168 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00", align 1
@169 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00", align 1
@170 = private unnamed_addr constant [38 x i8] c"Const 'null' cannot be of type 'void'\00", align 1
@171 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00", align 1
@172 = private unnamed_addr constant [34 x i8] c"Assigment target is not a mutable\00", align 1
@173 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00", align 1
@174 = private unnamed_addr constant [7 x i8] c"__gt__\00", align 1
@175 = private unnamed_addr constant [8 x i8] c"__and__\00", align 1
@176 = private unnamed_addr constant [8 x i8] c"__xor__\00", align 1
@177 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00", align 1
@178 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00", align 1
@179 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00", align 1
@180 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00", align 1
@181 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@182 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00", align 1
@183 = private unnamed_addr constant [8 x i8] c"++(pre)\00", align 1
@184 = private unnamed_addr constant [8 x i8] c"--(pre)\00", align 1
@185 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00", align 1
@186 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00", align 1
@187 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@188 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00", align 1
@189 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00", align 1
@190 = private unnamed_addr constant [55 x i8] c"Expected %u argument(s) on constructor call but got %u\00", align 1
@191 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00", align 1
@192 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %u argument(s)\00", align 1
@193 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00", align 1
@194 = private unnamed_addr constant [68 x i8] c"New operator expects either an a pointer or an object not a(n) '%s'\00", align 1
@195 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00", align 1
@196 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00", align 1
@197 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00", align 1
@198 = private unnamed_addr constant [50 x i8] c"Property '%s' is not a static member in class '%s\00", align 1
@199 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00", align 1
@200 = private unnamed_addr constant [10 x i8] c"copy_from\00", align 1
@201 = private unnamed_addr constant [10 x i8] c"move_from\00", align 1
@202 = private unnamed_addr constant [10 x i8] c"fill_with\00", align 1
@203 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@204 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@205 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00", align 1
@206 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00", align 1
@207 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00", align 1
@208 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00", align 1
@209 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00", align 1
@210 = private unnamed_addr constant [87 x i8] c"Expected an unsigned integer for tuple index but index value is '%s' (which is signed)\00", align 1
@211 = private unnamed_addr constant [41 x i8] c"Expected an constant int for tuple index\00", align 1
@212 = private unnamed_addr constant [37 x i8] c"Index out of range for tuple type %s\00", align 1
@213 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00", align 1
@214 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00", align 1
@215 = private unnamed_addr constant [52 x i8] c"Expected %u argument(s) on function call but got %u\00", align 1
@216 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00", align 1
@217 = private unnamed_addr constant [58 x i8] c"Expected argument %u to be of type '%s' but got type '%s'\00", align 1
@218 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00", align 1
@219 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %u\00", align 1
@220 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %u\00", align 1
@221 = private unnamed_addr constant [7 x i8] c"3.4E38\00", align 1
@222 = private unnamed_addr constant [32 x i8] c"Cannot match on constant 'null'\00", align 1
@223 = private unnamed_addr constant [85 x i8] c"Operator overload == for '%s' should return a boolean to be used in match expression\00", align 1
@224 = private unnamed_addr constant [67 x i8] c"Expected type '%s' from match expression subject but got type '%s'\00", align 1
@225 = private unnamed_addr constant [57 x i8] c"Expected match case block to yield '%s' but yielded '%s'\00", align 1
@226 = private unnamed_addr constant [56 x i8] c"Non-exhaustable match expression, expected an else-case\00", align 1
@227 = private unnamed_addr constant [62 x i8] c"Expected match else-case block to yield '%s' but yielded '%s'\00", align 1
@228 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00", align 1
@229 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00", align 1
@230 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00", align 1
@231 = private unnamed_addr constant [39 x i8] c"Cannot declare a variable of type void\00", align 1
@232 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00", align 1
@233 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00", align 1
@234 = private unnamed_addr constant [58 x i8] c"Expected type '%s' but got type '%s' on const declaration\00", align 1
@235 = private unnamed_addr constant [36 x i8] c"Cannot declare a const of type void\00", align 1
@236 = private unnamed_addr constant [29 x i8] c"Iterator has to be an object\00", align 1
@237 = private unnamed_addr constant [47 x i8] c"Iterator type has to have __iter__ as property\00", align 1
@238 = private unnamed_addr constant [7 x i8] c"tmp_it\00", align 1
@239 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00", align 1
@240 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00", align 1
@241 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00", align 1
@242 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00", align 1
@VTableArray_LLVMValueRef_ = internal global { ptr, ptr, ptr } { ptr @Array_LLVMValueRef__pop, ptr @Array_LLVMValueRef__ensure_capacity, ptr @Array_LLVMValueRef__find }
@VTableArray_LLVMTypeRef_ = internal global { ptr, ptr, ptr } { ptr @Array_LLVMTypeRef__pop, ptr @Array_LLVMTypeRef__ensure_capacity, ptr @Array_LLVMTypeRef__find }
@243 = private unnamed_addr constant [9 x i8] c"%u;%d;%u\00", align 1
@244 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00", align 1
@245 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@246 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@247 = private unnamed_addr constant [6 x i8] c"%s {\0A\00", align 1
@248 = private unnamed_addr constant [7 x i8] c" ... }\00", align 1
@249 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@250 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@251 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@252 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00", align 1
@253 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@254 = private unnamed_addr constant [18 x i8] c"string_from_bytes\00", align 1
@255 = private unnamed_addr constant [55 x i8] c"Could not find function 'string.from_bytes' in program\00", align 1
@256 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_array_exp)\00", align 1
@257 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_tuple_exp)\00", align 1
@258 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00", align 1
@259 = private unnamed_addr constant [9 x i8] c"%s;%d;%u\00", align 1
@260 = private unnamed_addr constant [10 x i8] c"memberidx\00", align 1
@261 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@262 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@263 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00", align 1
@264 = private unnamed_addr constant [34 x i8] c"Unknown bin expression case case!\00", align 1
@265 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00", align 1
@266 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00", align 1
@267 = private unnamed_addr constant [11 x i8] c"true_block\00", align 1
@268 = private unnamed_addr constant [12 x i8] c"false_block\00", align 1
@269 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@270 = private unnamed_addr constant [8 x i8] c"ternary\00", align 1
@271 = private unnamed_addr constant [11 x i8] c"match.else\00", align 1
@272 = private unnamed_addr constant [10 x i8] c"match.end\00", align 1
@273 = private unnamed_addr constant [11 x i8] c"match.case\00", align 1
@274 = private unnamed_addr constant [16 x i8] c"match.case.else\00", align 1
@275 = private unnamed_addr constant [15 x i8] c"match.phi.node\00", align 1
@276 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00", align 1
@277 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00", align 1
@278 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00", align 1
@279 = private unnamed_addr constant [11 x i8] c"to_cstring\00", align 1
@280 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00", align 1
@281 = private unnamed_addr constant [9 x i8] c"if.entry\00", align 1
@282 = private unnamed_addr constant [6 x i8] c"ifend\00", align 1
@283 = private unnamed_addr constant [10 x i8] c"for.entry\00", align 1
@284 = private unnamed_addr constant [9 x i8] c"for.cond\00", align 1
@285 = private unnamed_addr constant [9 x i8] c"for.body\00", align 1
@286 = private unnamed_addr constant [9 x i8] c"for.incr\00", align 1
@287 = private unnamed_addr constant [8 x i8] c"for.end\00", align 1
@288 = private unnamed_addr constant [12 x i8] c"while.entry\00", align 1
@289 = private unnamed_addr constant [10 x i8] c"while.end\00", align 1
@290 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00", align 1
@291 = private unnamed_addr constant [76 x i8] c"This should not happen: could not find function %s_%s (declare_class_props)\00", align 1
@292 = private unnamed_addr constant [9 x i8] c"VTable%s\00", align 1
@293 = private unnamed_addr constant [15 x i8] c"%s_constructor\00", align 1
@294 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@295 = private unnamed_addr constant [9 x i8] c"%s_names\00", align 1
@296 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@297 = private unnamed_addr constant [14 x i8] c"/tmp/output.o\00", align 1
@298 = private unnamed_addr constant [5 x i8] c"-l%s\00", align 1
@299 = private unnamed_addr constant [11 x i8] c"-target %s\00", align 1
@300 = private unnamed_addr constant [79 x i8] c"FlagString {\0A 'name': %s, \0A 'value': %s, \0A 'description': %s, \0A 'type': %s, \0A}\00", align 1
@301 = private unnamed_addr constant [37 x i8] c"%s -no-pie %s /tmp/output.o %s -o %s\00", align 1
@302 = private unnamed_addr constant [8 x i8] c"llvm-ir\00", align 1
@303 = private unnamed_addr constant [8 x i8] c"llvm-bc\00", align 1
@304 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@305 = private unnamed_addr constant [4 x i8] c"asm\00", align 1

; Function Attrs: nofree
declare void @system(ptr nocapture noundef readonly) local_unnamed_addr #0

define i64 @main(i64 %0, ptr nocapture readonly %1) local_unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca %CodeGen, align 8
  %5 = alloca %TypeChecker, align 8
  %6 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %6, ptr noundef nonnull align 8 dereferenceable(5) @20, i64 5, i1 false)
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i, align 4
  %8 = alloca %FlagBool, align 8
  %9 = tail call ptr @malloc(i32 1)
  store i8 104, ptr %9, align 8
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i124 = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i124, align 8
  %memberidx1.i.i125 = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i126, align 4
  %11 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %11, ptr noundef nonnull align 8 dereferenceable(22) @21, i64 22, i1 false)
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i127 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i127, align 8
  %memberidx1.i.i128 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 22, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 22, ptr %memberidx2.i.i129, align 4
  store i64 1, ptr %8, align 8
  %memberidx1.i.i130 = getelementptr inbounds %Flag, ptr %8, i64 0, i32 1
  store ptr %10, ptr %memberidx1.i.i130, align 8
  %memberidx2.i.i131 = getelementptr inbounds %Flag, ptr %8, i64 0, i32 2
  store ptr %12, ptr %memberidx2.i.i131, align 8
  %13 = load i64, ptr @flags_length, align 8
  %14 = icmp slt i64 %13, 250
  br i1 %14, label %if.entry.i.i.i, label %FlagBool_constructor.exit

if.entry.i.i.i:                                   ; preds = %2
  %15 = add nsw i64 %13, 1
  store i64 %15, ptr @flags_length, align 8
  %16 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %13
  store ptr %8, ptr %16, align 8
  br label %FlagBool_constructor.exit

FlagBool_constructor.exit:                        ; preds = %2, %if.entry.i.i.i
  %memberidx.i = getelementptr inbounds %FlagBool, ptr %8, i64 0, i32 3
  store i1 false, ptr %memberidx.i, align 8
  %17 = alloca %FlagString, align 8
  %18 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %18, ptr noundef nonnull align 8 dereferenceable(5) @22, i64 5, i1 false)
  %19 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i132 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i132, align 8
  %memberidx1.i.i133 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i134, align 4
  %20 = call ptr @malloc(i32 275)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(275) %20, ptr noundef nonnull align 8 dereferenceable(275) @23, i64 275, i1 false)
  %21 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i135 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i135, align 8
  %memberidx1.i.i136 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 275, ptr %memberidx1.i.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 275, ptr %memberidx2.i.i137, align 4
  %22 = call ptr @malloc(i32 4)
  store i32 1667594341, ptr %22, align 8
  %23 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i.i138 = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %22, ptr %memberidx.i.i138, align 8
  %memberidx1.i.i139 = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i139, align 4
  %memberidx2.i.i140 = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i140, align 4
  store i64 2, ptr %17, align 8
  %memberidx1.i.i141 = getelementptr inbounds %Flag, ptr %17, i64 0, i32 1
  store ptr %19, ptr %memberidx1.i.i141, align 8
  %memberidx2.i.i142 = getelementptr inbounds %Flag, ptr %17, i64 0, i32 2
  store ptr %21, ptr %memberidx2.i.i142, align 8
  %24 = load i64, ptr @flags_length, align 8
  %25 = icmp slt i64 %24, 250
  br i1 %25, label %if.entry.i.i.i143, label %FlagString_constructor.exit

if.entry.i.i.i143:                                ; preds = %FlagBool_constructor.exit
  %26 = add nsw i64 %24, 1
  store i64 %26, ptr @flags_length, align 8
  %27 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %24
  store ptr %17, ptr %27, align 8
  br label %FlagString_constructor.exit

FlagString_constructor.exit:                      ; preds = %FlagBool_constructor.exit, %if.entry.i.i.i143
  %memberidx.i144 = getelementptr inbounds %FlagString, ptr %17, i64 0, i32 3
  store ptr %23, ptr %memberidx.i144, align 8
  %28 = alloca %FlagString, align 8
  %29 = call ptr @malloc(i32 1)
  store i8 111, ptr %29, align 8
  %30 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i145 = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i145, align 8
  %memberidx1.i.i146 = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i146, align 4
  %memberidx2.i.i147 = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i147, align 4
  %31 = call ptr @malloc(i32 35)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %31, ptr noundef nonnull align 8 dereferenceable(35) @24, i64 35, i1 false)
  %32 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i148 = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i148, align 8
  %memberidx1.i.i149 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i149, align 4
  %memberidx2.i.i150 = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i150, align 4
  %33 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %33, ptr noundef nonnull align 8 dereferenceable(6) @25, i64 6, i1 false)
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i151 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i151, align 8
  %memberidx1.i.i152 = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i153, align 4
  store i64 2, ptr %28, align 8
  %memberidx1.i.i154 = getelementptr inbounds %Flag, ptr %28, i64 0, i32 1
  store ptr %30, ptr %memberidx1.i.i154, align 8
  %memberidx2.i.i155 = getelementptr inbounds %Flag, ptr %28, i64 0, i32 2
  store ptr %32, ptr %memberidx2.i.i155, align 8
  %35 = load i64, ptr @flags_length, align 8
  %36 = icmp slt i64 %35, 250
  br i1 %36, label %if.entry.i.i.i156, label %FlagString_constructor.exit158

if.entry.i.i.i156:                                ; preds = %FlagString_constructor.exit
  %37 = add nsw i64 %35, 1
  store i64 %37, ptr @flags_length, align 8
  %38 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %35
  store ptr %28, ptr %38, align 8
  br label %FlagString_constructor.exit158

FlagString_constructor.exit158:                   ; preds = %FlagString_constructor.exit, %if.entry.i.i.i156
  %memberidx.i157 = getelementptr inbounds %FlagString, ptr %28, i64 0, i32 3
  store ptr %34, ptr %memberidx.i157, align 8
  %39 = alloca %FlagString, align 8
  %40 = call ptr @malloc(i32 1)
  store i8 73, ptr %40, align 8
  %41 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %41, align 8
  %memberidx.i.i159 = getelementptr inbounds %string, ptr %41, i64 0, i32 1
  store ptr %40, ptr %memberidx.i.i159, align 8
  %memberidx1.i.i160 = getelementptr inbounds %string, ptr %41, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i160, align 4
  %memberidx2.i.i161 = getelementptr inbounds %string, ptr %41, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i161, align 4
  %42 = call ptr @malloc(i32 25)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(25) %42, ptr noundef nonnull align 8 dereferenceable(25) @26, i64 25, i1 false)
  %43 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i162 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i162, align 8
  %memberidx1.i.i163 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  store i64 25, ptr %memberidx1.i.i163, align 4
  %memberidx2.i.i164 = getelementptr inbounds %string, ptr %43, i64 0, i32 3
  store i64 25, ptr %memberidx2.i.i164, align 4
  %44 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %44, ptr noundef nonnull align 8 dereferenceable(19) @27, i64 19, i1 false)
  %45 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i165 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i165, align 8
  %memberidx1.i.i166 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 19, ptr %memberidx1.i.i166, align 4
  %memberidx2.i.i167 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 19, ptr %memberidx2.i.i167, align 4
  store i64 2, ptr %39, align 8
  %memberidx1.i.i168 = getelementptr inbounds %Flag, ptr %39, i64 0, i32 1
  store ptr %41, ptr %memberidx1.i.i168, align 8
  %memberidx2.i.i169 = getelementptr inbounds %Flag, ptr %39, i64 0, i32 2
  store ptr %43, ptr %memberidx2.i.i169, align 8
  %46 = load i64, ptr @flags_length, align 8
  %47 = icmp slt i64 %46, 250
  br i1 %47, label %if.entry.i.i.i170, label %FlagString_constructor.exit172

if.entry.i.i.i170:                                ; preds = %FlagString_constructor.exit158
  %48 = add nsw i64 %46, 1
  store i64 %48, ptr @flags_length, align 8
  %49 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %46
  store ptr %39, ptr %49, align 8
  br label %FlagString_constructor.exit172

FlagString_constructor.exit172:                   ; preds = %FlagString_constructor.exit158, %if.entry.i.i.i170
  %memberidx.i171 = getelementptr inbounds %FlagString, ptr %39, i64 0, i32 3
  store ptr %45, ptr %memberidx.i171, align 8
  %50 = alloca %FlagString, align 8
  %51 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %51, ptr noundef nonnull align 8 dereferenceable(7) @28, i64 7, i1 false)
  %52 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i.i173 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i.i173, align 8
  %memberidx1.i.i174 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i174, align 4
  %memberidx2.i.i175 = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i175, align 4
  %53 = call ptr @malloc(i32 33)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %53, ptr noundef nonnull align 8 dereferenceable(33) @29, i64 33, i1 false)
  %54 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i176 = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i176, align 8
  %memberidx1.i.i177 = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i178, align 4
  %55 = call ptr @LLVMGetDefaultTargetTriple()
  %56 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %55)
  %57 = trunc i64 %56 to i32
  %58 = call ptr @malloc(i32 %57)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %55, i64 %56, i1 false)
  %59 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i179 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i179, align 8
  %memberidx1.i.i180 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i.i180, align 4
  %memberidx2.i.i181 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i.i181, align 4
  store i64 2, ptr %50, align 8
  %memberidx1.i.i182 = getelementptr inbounds %Flag, ptr %50, i64 0, i32 1
  store ptr %52, ptr %memberidx1.i.i182, align 8
  %memberidx2.i.i183 = getelementptr inbounds %Flag, ptr %50, i64 0, i32 2
  store ptr %54, ptr %memberidx2.i.i183, align 8
  %60 = load i64, ptr @flags_length, align 8
  %61 = icmp slt i64 %60, 250
  br i1 %61, label %if.entry.i.i.i184, label %FlagString_constructor.exit186

if.entry.i.i.i184:                                ; preds = %FlagString_constructor.exit172
  %62 = add nsw i64 %60, 1
  store i64 %62, ptr @flags_length, align 8
  %63 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %60
  store ptr %50, ptr %63, align 8
  br label %FlagString_constructor.exit186

FlagString_constructor.exit186:                   ; preds = %FlagString_constructor.exit172, %if.entry.i.i.i184
  %memberidx.i185 = getelementptr inbounds %FlagString, ptr %50, i64 0, i32 3
  store ptr %59, ptr %memberidx.i185, align 8
  %64 = alloca %FlagString, align 8
  %65 = call ptr @malloc(i32 1)
  store i8 108, ptr %65, align 8
  %66 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i189, align 4
  %67 = call ptr @malloc(i32 68)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %67, ptr noundef nonnull align 8 dereferenceable(68) @30, i64 68, i1 false)
  %68 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %68, align 8
  %memberidx.i.i190 = getelementptr inbounds %string, ptr %68, i64 0, i32 1
  store ptr %67, ptr %memberidx.i.i190, align 8
  %memberidx1.i.i191 = getelementptr inbounds %string, ptr %68, i64 0, i32 2
  store i64 68, ptr %memberidx1.i.i191, align 4
  %memberidx2.i.i192 = getelementptr inbounds %string, ptr %68, i64 0, i32 3
  store i64 68, ptr %memberidx2.i.i192, align 4
  store i64 2, ptr %64, align 8
  %memberidx1.i.i193 = getelementptr inbounds %Flag, ptr %64, i64 0, i32 1
  store ptr %66, ptr %memberidx1.i.i193, align 8
  %memberidx2.i.i194 = getelementptr inbounds %Flag, ptr %64, i64 0, i32 2
  store ptr %68, ptr %memberidx2.i.i194, align 8
  %69 = load i64, ptr @flags_length, align 8
  %70 = icmp slt i64 %69, 250
  br i1 %70, label %if.entry.i.i.i195, label %FlagString_constructor.exit197

if.entry.i.i.i195:                                ; preds = %FlagString_constructor.exit186
  %71 = add nsw i64 %69, 1
  store i64 %71, ptr @flags_length, align 8
  %72 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %69
  store ptr %64, ptr %72, align 8
  br label %FlagString_constructor.exit197

FlagString_constructor.exit197:                   ; preds = %FlagString_constructor.exit186, %if.entry.i.i.i195
  %memberidx.i196 = getelementptr inbounds %FlagString, ptr %64, i64 0, i32 3
  store ptr null, ptr %memberidx.i196, align 8
  %73 = alloca %FlagInt, align 8
  %74 = call ptr @malloc(i32 1)
  store i8 79, ptr %74, align 8
  %75 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i198 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i198, align 8
  %memberidx1.i.i199 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i199, align 4
  %memberidx2.i.i200 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i200, align 4
  %76 = call ptr @malloc(i32 41)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(41) %76, ptr noundef nonnull align 8 dereferenceable(41) @31, i64 41, i1 false)
  %77 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i.i201 = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i.i201, align 8
  %memberidx1.i.i202 = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 41, ptr %memberidx1.i.i202, align 4
  %memberidx2.i.i203 = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 41, ptr %memberidx2.i.i203, align 4
  store i64 0, ptr %73, align 8
  %memberidx1.i.i204 = getelementptr inbounds %Flag, ptr %73, i64 0, i32 1
  store ptr %75, ptr %memberidx1.i.i204, align 8
  %memberidx2.i.i205 = getelementptr inbounds %Flag, ptr %73, i64 0, i32 2
  store ptr %77, ptr %memberidx2.i.i205, align 8
  %78 = load i64, ptr @flags_length, align 8
  %79 = icmp slt i64 %78, 250
  br i1 %79, label %if.entry.i.i.i206, label %FlagInt_constructor.exit

if.entry.i.i.i206:                                ; preds = %FlagString_constructor.exit197
  %80 = add nsw i64 %78, 1
  store i64 %80, ptr @flags_length, align 8
  %81 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %78
  store ptr %73, ptr %81, align 8
  br label %FlagInt_constructor.exit

FlagInt_constructor.exit:                         ; preds = %FlagString_constructor.exit197, %if.entry.i.i.i206
  %memberidx.i207 = getelementptr inbounds %FlagInt, ptr %73, i64 0, i32 3
  store i64 1, ptr %memberidx.i207, align 8
  %82 = alloca %FlagBool, align 8
  %83 = call ptr @malloc(i32 1)
  store i8 118, ptr %83, align 8
  %84 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i.i208 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i.i208, align 8
  %memberidx1.i.i209 = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i210 = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i210, align 4
  %85 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %85, ptr noundef nonnull align 8 dereferenceable(12) @32, i64 12, i1 false)
  %86 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %86, align 8
  %memberidx.i.i211 = getelementptr inbounds %string, ptr %86, i64 0, i32 1
  store ptr %85, ptr %memberidx.i.i211, align 8
  %memberidx1.i.i212 = getelementptr inbounds %string, ptr %86, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i212, align 4
  %memberidx2.i.i213 = getelementptr inbounds %string, ptr %86, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i213, align 4
  store i64 1, ptr %82, align 8
  %memberidx1.i.i214 = getelementptr inbounds %Flag, ptr %82, i64 0, i32 1
  store ptr %84, ptr %memberidx1.i.i214, align 8
  %memberidx2.i.i215 = getelementptr inbounds %Flag, ptr %82, i64 0, i32 2
  store ptr %86, ptr %memberidx2.i.i215, align 8
  %87 = load i64, ptr @flags_length, align 8
  %88 = icmp slt i64 %87, 250
  br i1 %88, label %if.entry.i.i.i216, label %FlagBool_constructor.exit218

if.entry.i.i.i216:                                ; preds = %FlagInt_constructor.exit
  %89 = add nsw i64 %87, 1
  store i64 %89, ptr @flags_length, align 8
  %90 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %87
  store ptr %82, ptr %90, align 8
  br label %FlagBool_constructor.exit218

FlagBool_constructor.exit218:                     ; preds = %FlagInt_constructor.exit, %if.entry.i.i.i216
  %memberidx.i217 = getelementptr inbounds %FlagBool, ptr %82, i64 0, i32 3
  store i1 false, ptr %memberidx.i217, align 8
  %91 = call fastcc ptr @parse_flags(i64 %0, ptr %1)
  %92 = load i1, ptr %memberidx.i217, align 8
  br i1 %92, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_check.exit, %ifend26, %ifend19, %ifend43, %if.entry17, %if.entry10, %if.entry5, %if.entry2, %if.entry
  %common.ret.op = phi i64 [ 0, %if.entry ], [ 0, %if.entry2 ], [ 1, %if.entry5 ], [ 1, %if.entry10 ], [ 1, %if.entry17 ], [ %code.0, %ifend43 ], [ 1, %ifend19 ], [ 1, %ifend26 ], [ 1, %TypeChecker_check.exit ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %FlagBool_constructor.exit218
  %93 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %94 = call ptr %93(ptr nonnull %7)
  %95 = load i64, ptr %memberidx1.i.i, align 4
  %96 = call i64 @write(i64 1, ptr %94, i64 %95)
  %97 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %98 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %98)
  call void @free(ptr nonnull %7)
  br label %common.ret

ifend:                                            ; preds = %FlagBool_constructor.exit218
  %99 = load i1, ptr %memberidx.i, align 8
  br i1 %99, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %100 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %100, ptr noundef nonnull align 8 dereferenceable(7) @34, i64 7, i1 false)
  %101 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %101, align 8
  %memberidx.i.i220 = getelementptr inbounds %string, ptr %101, i64 0, i32 1
  store ptr %100, ptr %memberidx.i.i220, align 8
  %memberidx1.i.i221 = getelementptr inbounds %string, ptr %101, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i221, align 4
  %memberidx2.i.i222 = getelementptr inbounds %string, ptr %101, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i222, align 4
  %102 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %103 = call ptr %102(ptr nonnull %101)
  %104 = load i64, ptr %memberidx1.i.i221, align 4
  %105 = call i64 @write(i64 1, ptr %103, i64 %104)
  %106 = load ptr, ptr %memberidx.i.i220, align 8
  call void @free(ptr %106)
  call void @free(ptr %101)
  %107 = load ptr, ptr %1, align 8
  %108 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %107)
  %109 = trunc i64 %108 to i32
  %110 = call ptr @malloc(i32 %109)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %110, ptr align 8 %107, i64 %108, i1 false)
  %111 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %111, align 8
  %memberidx.i.i225 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  store ptr %110, ptr %memberidx.i.i225, align 8
  %memberidx1.i.i226 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  store i64 %108, ptr %memberidx1.i.i226, align 4
  %memberidx2.i.i227 = getelementptr inbounds %string, ptr %111, i64 0, i32 3
  store i64 %108, ptr %memberidx2.i.i227, align 4
  %112 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %113 = call ptr %112(ptr nonnull %111)
  %114 = load i64, ptr %memberidx1.i.i226, align 4
  %115 = call i64 @write(i64 1, ptr %113, i64 %114)
  %116 = load ptr, ptr %memberidx.i.i225, align 8
  call void @free(ptr %116)
  call void @free(ptr %111)
  %117 = call ptr @malloc(i32 29)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %117, ptr noundef nonnull align 8 dereferenceable(29) @35, i64 29, i1 false)
  %118 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i.i231 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i.i231, align 8
  %memberidx1.i.i232 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 29, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 29, ptr %memberidx2.i.i233, align 4
  %119 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %120 = call ptr %119(ptr nonnull %118)
  %121 = load i64, ptr %memberidx1.i.i232, align 4
  %122 = call i64 @write(i64 1, ptr %120, i64 %121)
  %123 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %124 = load ptr, ptr %memberidx.i.i231, align 8
  call void @free(ptr %124)
  call void @free(ptr %118)
  call fastcc void @print_flags()
  br label %common.ret

ifend4:                                           ; preds = %ifend
  %125 = icmp eq ptr %91, null
  br i1 %125, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend4
  %126 = call ptr @malloc(i32 24)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %126, ptr noundef nonnull align 8 dereferenceable(24) @38, i64 24, i1 false)
  %127 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i.i237 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i.i237, align 8
  %memberidx1.i.i238 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 24, ptr %memberidx1.i.i238, align 4
  %memberidx2.i.i239 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 24, ptr %memberidx2.i.i239, align 4
  call fastcc void @print_message_error(i64 4, ptr nonnull %127)
  br label %common.ret

ifend7:                                           ; preds = %ifend4
  %128 = tail call ptr @malloc(i32 64)
  store ptr @VTableCompiler, ptr %128, align 8
  %memberidx.i240 = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 5
  %129 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FloFile_, ptr %129, align 8
  %memberidx.i.i241 = getelementptr inbounds %Array_FloFile_, ptr %129, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i241, align 4
  %memberidx1.i.i242 = getelementptr inbounds %Array_FloFile_, ptr %129, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i242, align 4
  %memberidx2.i.i243 = getelementptr inbounds %Array_FloFile_, ptr %129, i64 0, i32 1
  %130 = call ptr @malloc(i32 64)
  store ptr %130, ptr %memberidx2.i.i243, align 8
  store i64 0, ptr %memberidx.i.i241, align 4
  store ptr %129, ptr %memberidx.i240, align 8
  %memberidx3.i = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 1
  store ptr null, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 3
  store ptr null, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 6
  %131 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FloError_, ptr %131, align 8
  %memberidx.i13.i = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 2
  store i64 0, ptr %memberidx.i13.i, align 4
  %memberidx1.i14.i = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 3
  store i64 8, ptr %memberidx1.i14.i, align 4
  %memberidx2.i15.i = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 1
  %132 = call ptr @malloc(i32 64)
  store ptr %132, ptr %memberidx2.i15.i, align 8
  store i64 0, ptr %memberidx.i13.i, align 4
  store ptr %131, ptr %memberidx5.i, align 8
  %133 = call ptr @malloc(i32 24)
  %134 = call ptr @malloc(i32 2048)
  store ptr %134, ptr %133, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend7, %for.body.i.i
  %i.0.i.i510 = phi i64 [ 0, %ifend7 ], [ %137, %for.body.i.i ]
  %135 = load ptr, ptr %133, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %i.0.i.i510
  store ptr null, ptr %136, align 8
  %137 = add nuw nsw i64 %i.0.i.i510, 1
  %138 = icmp ult i64 %i.0.i.i510, 255
  br i1 %138, label %for.body.i.i, label %Compiler_constructor.exit

Compiler_constructor.exit:                        ; preds = %for.body.i.i
  %memberidx8.i = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 7
  %memberidx2.i16.i = getelementptr inbounds %Map_string_FileId_, ptr %133, i64 0, i32 1
  store i64 256, ptr %memberidx2.i16.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_FileId_, ptr %133, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %133, ptr %memberidx8.i, align 8
  %139 = load ptr, ptr %128, align 8
  %140 = load ptr, ptr %139, align 8
  %141 = load ptr, ptr %memberidx.i171, align 8
  %142 = call i1 %140(ptr nonnull %128, ptr %141)
  br i1 %142, label %ifend12, label %if.entry10

if.entry10:                                       ; preds = %Compiler_constructor.exit
  %143 = load ptr, ptr %memberidx.i171, align 8
  %144 = load ptr, ptr %143, align 8
  %memberidx14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %144, i64 0, i32 5
  %145 = load ptr, ptr %memberidx14, align 8
  %146 = call ptr %145(ptr nonnull %143)
  %147 = alloca ptr, align 8
  %148 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %147, ptr nonnull @39, ptr %146)
  %149 = load ptr, ptr %147, align 8
  %150 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %150, align 8
  %memberidx.i244 = getelementptr inbounds %string, ptr %150, i64 0, i32 1
  store ptr %149, ptr %memberidx.i244, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %150, i64 0, i32 2
  store i64 %148, ptr %memberidx1.i, align 4
  %memberidx2.i245 = getelementptr inbounds %string, ptr %150, i64 0, i32 3
  store i64 %148, ptr %memberidx2.i245, align 4
  tail call void @free(ptr %146)
  call fastcc void @print_message_error(i64 3, ptr nonnull %150)
  br label %common.ret

ifend12:                                          ; preds = %Compiler_constructor.exit
  %151 = load ptr, ptr %128, align 8
  %memberidx15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %151, i64 0, i32 1
  %152 = load ptr, ptr %memberidx15, align 8
  %153 = call ptr %152(ptr nonnull %128, ptr nonnull %91)
  %154 = load ptr, ptr %128, align 8
  %memberidx16 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %154, i64 0, i32 2
  %155 = load ptr, ptr %memberidx16, align 8
  %156 = call i1 %155(ptr nonnull %128, ptr %153)
  br i1 %156, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend12
  %157 = load ptr, ptr %91, align 8
  %memberidx20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %157, i64 0, i32 5
  %158 = load ptr, ptr %memberidx20, align 8
  %159 = call ptr %158(ptr nonnull %91)
  %160 = alloca ptr, align 8
  %161 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %160, ptr nonnull @40, ptr %159)
  %162 = load ptr, ptr %160, align 8
  %163 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %163, align 8
  %memberidx.i246 = getelementptr inbounds %string, ptr %163, i64 0, i32 1
  store ptr %162, ptr %memberidx.i246, align 8
  %memberidx1.i247 = getelementptr inbounds %string, ptr %163, i64 0, i32 2
  store i64 %161, ptr %memberidx1.i247, align 4
  %memberidx2.i248 = getelementptr inbounds %string, ptr %163, i64 0, i32 3
  store i64 %161, ptr %memberidx2.i248, align 4
  tail call void @free(ptr %159)
  call fastcc void @print_message_error(i64 3, ptr nonnull %163)
  br label %common.ret

ifend19:                                          ; preds = %ifend12
  %164 = load ptr, ptr %memberidx4.i, align 8
  %165 = load ptr, ptr %memberidx5.i, align 8
  %166 = call fastcc ptr @Lexer_tokenize(ptr %164, ptr %165)
  %167 = load ptr, ptr %128, align 8
  %memberidx23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %167, i64 0, i32 3
  %168 = load ptr, ptr %memberidx23, align 8
  %169 = call i1 %168(ptr nonnull %128)
  br i1 %169, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend19
  %170 = load ptr, ptr %memberidx5.i, align 8
  %171 = call fastcc ptr @Parser_parse(ptr %166, ptr %170)
  %172 = load ptr, ptr %128, align 8
  %memberidx28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %172, i64 0, i32 3
  %173 = load ptr, ptr %memberidx28, align 8
  %174 = call i1 %173(ptr nonnull %128)
  br i1 %174, label %common.ret, label %ifend31

ifend31:                                          ; preds = %ifend26
  call void @llvm.lifetime.start.p0(i64 58, ptr nonnull %5)
  %memberidx.i.i249 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 5
  store ptr %128, ptr %memberidx.i.i249, align 8
  %memberidx1.i.i250 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 6
  store i1 false, ptr %memberidx1.i.i250, align 8
  %175 = call ptr @malloc(i32 9)
  store i1 false, ptr %175, align 1
  %memberidx1.i.i.i251 = getelementptr inbounds %Program, ptr %175, i64 0, i32 1
  %176 = call ptr @malloc(i32 32)
  store ptr @VTableArray_Module_, ptr %176, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %176, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %176, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %176, i64 0, i32 1
  %177 = call ptr @malloc(i32 64)
  store ptr %177, ptr %memberidx2.i.i.i.i, align 8
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  store ptr %176, ptr %memberidx1.i.i.i251, align 8
  store ptr %175, ptr %5, align 8
  %178 = call ptr @malloc(i32 24)
  %179 = call ptr @malloc(i32 2048)
  store ptr %179, ptr %178, align 8
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %ifend31, %for.body.i.i.i
  %i.0.i.i.i509 = phi i64 [ 0, %ifend31 ], [ %182, %for.body.i.i.i ]
  %180 = load ptr, ptr %178, align 8
  %181 = getelementptr inbounds ptr, ptr %180, i64 %i.0.i.i.i509
  store ptr null, ptr %181, align 8
  %182 = add nuw nsw i64 %i.0.i.i.i509, 1
  %183 = icmp ult i64 %i.0.i.i.i509, 255
  br i1 %183, label %for.body.i.i.i, label %TypeChecker_constructor.exit.i

TypeChecker_constructor.exit.i:                   ; preds = %for.body.i.i.i
  %memberidx3.i.i252 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 8
  %memberidx2.i.i.i = getelementptr inbounds %Map_string_Generic_, ptr %178, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i7.i.i = getelementptr inbounds %Map_string_Generic_, ptr %178, i64 0, i32 2
  store i64 0, ptr %memberidx3.i7.i.i, align 4
  store ptr %178, ptr %memberidx3.i.i252, align 8
  %184 = load ptr, ptr %memberidx.i.i249, align 8
  %185 = load ptr, ptr %184, align 8
  %memberidx1.i9.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %185, i64 0, i32 1
  %186 = load ptr, ptr %memberidx1.i9.i, align 8
  %187 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %187, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %188 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %188, align 8
  %memberidx.i.i.i10.i = getelementptr inbounds %string, ptr %188, i64 0, i32 1
  store ptr %187, ptr %memberidx.i.i.i10.i, align 8
  %memberidx1.i.i.i11.i = getelementptr inbounds %string, ptr %188, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i.i11.i, align 4
  %memberidx2.i.i.i12.i = getelementptr inbounds %string, ptr %188, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i.i12.i, align 4
  %189 = call ptr %186(ptr nonnull %184, ptr nonnull %188)
  %190 = call ptr @malloc(i32 56)
  call fastcc void @ModuleAST_constructor(ptr %190)
  %191 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %191, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %192 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %192, align 8
  %memberidx.i.i3.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 1
  store ptr %191, ptr %memberidx.i.i3.i.i, align 8
  %memberidx1.i.i4.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i4.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i5.i.i, align 4
  %193 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %5, ptr %190, ptr nonnull %192)
  %194 = load ptr, ptr %memberidx.i.i249, align 8
  %memberidx1.i14.i254 = getelementptr inbounds %Compiler, ptr %194, i64 0, i32 4
  %195 = load ptr, ptr %memberidx1.i14.i254, align 8
  %196 = call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr nonnull %5, ptr %195, ptr null)
  %memberidx.i15.i = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 4
  %197 = load ptr, ptr %5, align 8
  %memberidx1.i.i16.i = getelementptr inbounds %Program, ptr %197, i64 0, i32 1
  %198 = load ptr, ptr %memberidx1.i.i16.i, align 8
  %memberidx.i.i.i17.i = getelementptr inbounds %Array_Module_, ptr %198, i64 0, i32 1
  %199 = load ptr, ptr %memberidx.i.i.i17.i, align 8
  %200 = load ptr, ptr %199, align 8
  %memberidx1.i18.i = getelementptr inbounds %Module, ptr %200, i64 0, i32 5
  %201 = load ptr, ptr %memberidx1.i18.i, align 8
  store ptr %201, ptr %memberidx.i15.i, align 8
  %202 = load ptr, ptr %memberidx1.i.i16.i, align 8
  %memberidx.i.i.i255 = getelementptr inbounds %Array_Module_, ptr %202, i64 0, i32 1
  %203 = load ptr, ptr %memberidx.i.i.i255, align 8
  %204 = getelementptr inbounds ptr, ptr %203, i64 1
  %205 = load ptr, ptr %204, align 8
  call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %5, ptr %205)
  %206 = load ptr, ptr %memberidx.i.i249, align 8
  %memberidx1.i21.i = getelementptr inbounds %Compiler, ptr %206, i64 0, i32 6
  %207 = load ptr, ptr %memberidx1.i21.i, align 8
  %memberidx2.i.i256 = getelementptr inbounds %Array_FloError_, ptr %207, i64 0, i32 2
  %208 = load i64, ptr %memberidx2.i.i256, align 4
  %209 = icmp sgt i64 %208, 0
  br i1 %209, label %TypeChecker_check.exit, label %ifend.i

ifend.i:                                          ; preds = %TypeChecker_constructor.exit.i
  %210 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %5, ptr %171, ptr nonnull %91)
  %211 = load ptr, ptr %5, align 8
  br label %TypeChecker_check.exit

TypeChecker_check.exit:                           ; preds = %TypeChecker_constructor.exit.i, %ifend.i
  %common.ret.op.i = phi ptr [ %211, %ifend.i ], [ null, %TypeChecker_constructor.exit.i ]
  call void @llvm.lifetime.end.p0(i64 58, ptr nonnull %5)
  %212 = load ptr, ptr %128, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %212, i64 0, i32 3
  %213 = load ptr, ptr %memberidx32, align 8
  %214 = call i1 %213(ptr nonnull %128)
  br i1 %214, label %common.ret, label %ifend35

ifend35:                                          ; preds = %TypeChecker_check.exit
  call void @llvm.lifetime.start.p0(i64 81, ptr nonnull %4)
  %memberidx.i257 = getelementptr inbounds %Program, ptr %common.ret.op.i, i64 0, i32 1
  %215 = load ptr, ptr %memberidx.i257, align 8
  %memberidx.i.i258 = getelementptr inbounds %Array_Module_, ptr %215, i64 0, i32 1
  %216 = load ptr, ptr %memberidx.i.i258, align 8
  %217 = getelementptr inbounds ptr, ptr %216, i64 2
  %218 = load ptr, ptr %217, align 8
  %219 = load ptr, ptr %218, align 8
  %memberidx.i80.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 4
  store ptr %common.ret.op.i, ptr %memberidx.i80.i, align 8
  %220 = call ptr @malloc(i32 24)
  %221 = call ptr @malloc(i32 2048)
  store ptr %221, ptr %220, align 8
  br label %for.body.i.i.i261

for.body.i.i.i261:                                ; preds = %ifend35, %for.body.i.i.i261
  %i.0.i.i.i259508 = phi i64 [ 0, %ifend35 ], [ %224, %for.body.i.i.i261 ]
  %222 = load ptr, ptr %220, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %i.0.i.i.i259508
  store ptr null, ptr %223, align 8
  %224 = add nuw nsw i64 %i.0.i.i.i259508, 1
  %225 = icmp ult i64 %i.0.i.i.i259508, 255
  br i1 %225, label %for.body.i.i.i261, label %Map_string_LLVMValueRef__constructor.exit.i.i

Map_string_LLVMValueRef__constructor.exit.i.i:    ; preds = %for.body.i.i.i261
  %memberidx1.i81.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 6
  %memberidx2.i.i82.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %220, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i82.i, align 4
  %memberidx3.i.i.i262 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %220, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i262, align 4
  store ptr %220, ptr %memberidx1.i81.i, align 8
  %226 = call ptr @malloc(i32 24)
  %227 = call ptr @malloc(i32 2048)
  store ptr %227, ptr %226, align 8
  br label %for.body.i22.i.i

for.body.i22.i.i:                                 ; preds = %Map_string_LLVMValueRef__constructor.exit.i.i, %for.body.i22.i.i
  %i.0.i20.i.i507 = phi i64 [ 0, %Map_string_LLVMValueRef__constructor.exit.i.i ], [ %230, %for.body.i22.i.i ]
  %228 = load ptr, ptr %226, align 8
  %229 = getelementptr inbounds ptr, ptr %228, i64 %i.0.i20.i.i507
  store ptr null, ptr %229, align 8
  %230 = add nuw nsw i64 %i.0.i20.i.i507, 1
  %231 = icmp ult i64 %i.0.i20.i.i507, 255
  br i1 %231, label %for.body.i22.i.i, label %Map_string_LLVMValueRef__constructor.exit25.i.i

Map_string_LLVMValueRef__constructor.exit25.i.i:  ; preds = %for.body.i22.i.i
  %memberidx2.i.i263 = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 7
  %memberidx2.i23.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %226, i64 0, i32 1
  store i64 256, ptr %memberidx2.i23.i.i, align 4
  %memberidx3.i24.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %226, i64 0, i32 2
  store i64 0, ptr %memberidx3.i24.i.i, align 4
  store ptr %226, ptr %memberidx2.i.i263, align 8
  %232 = call ptr @malloc(i32 24)
  %233 = call ptr @malloc(i32 2048)
  store ptr %233, ptr %232, align 8
  br label %for.body.i28.i.i

for.body.i28.i.i:                                 ; preds = %Map_string_LLVMValueRef__constructor.exit25.i.i, %for.body.i28.i.i
  %i.0.i26.i.i506 = phi i64 [ 0, %Map_string_LLVMValueRef__constructor.exit25.i.i ], [ %236, %for.body.i28.i.i ]
  %234 = load ptr, ptr %232, align 8
  %235 = getelementptr inbounds ptr, ptr %234, i64 %i.0.i26.i.i506
  store ptr null, ptr %235, align 8
  %236 = add nuw nsw i64 %i.0.i26.i.i506, 1
  %237 = icmp ult i64 %i.0.i26.i.i506, 255
  br i1 %237, label %for.body.i28.i.i, label %Map_string_CGClassType__constructor.exit.i.i

Map_string_CGClassType__constructor.exit.i.i:     ; preds = %for.body.i28.i.i
  %memberidx3.i.i264 = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 8
  %memberidx2.i29.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %232, i64 0, i32 1
  store i64 256, ptr %memberidx2.i29.i.i, align 4
  %memberidx3.i30.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %232, i64 0, i32 2
  store i64 0, ptr %memberidx3.i30.i.i, align 4
  store ptr %232, ptr %memberidx3.i.i264, align 8
  %238 = call ptr @malloc(i32 24)
  %239 = call ptr @malloc(i32 2048)
  store ptr %239, ptr %238, align 8
  br label %for.body.i33.i.i

for.body.i33.i.i:                                 ; preds = %Map_string_CGClassType__constructor.exit.i.i, %for.body.i33.i.i
  %i.0.i31.i.i505 = phi i64 [ 0, %Map_string_CGClassType__constructor.exit.i.i ], [ %242, %for.body.i33.i.i ]
  %240 = load ptr, ptr %238, align 8
  %241 = getelementptr inbounds ptr, ptr %240, i64 %i.0.i31.i.i505
  store ptr null, ptr %241, align 8
  %242 = add nuw nsw i64 %i.0.i31.i.i505, 1
  %243 = icmp ult i64 %i.0.i31.i.i505, 255
  br i1 %243, label %for.body.i33.i.i, label %Map_string_CGEnumType__constructor.exit.i.i

Map_string_CGEnumType__constructor.exit.i.i:      ; preds = %for.body.i33.i.i
  %memberidx4.i.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 9
  %memberidx2.i34.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %238, i64 0, i32 1
  store i64 256, ptr %memberidx2.i34.i.i, align 4
  %memberidx3.i35.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %238, i64 0, i32 2
  store i64 0, ptr %memberidx3.i35.i.i, align 4
  store ptr %238, ptr %memberidx4.i.i, align 8
  %244 = call ptr @malloc(i32 24)
  %245 = call ptr @malloc(i32 2048)
  store ptr %245, ptr %244, align 8
  br label %for.body.i38.i.i

for.body.i38.i.i:                                 ; preds = %Map_string_CGEnumType__constructor.exit.i.i, %for.body.i38.i.i
  %i.0.i36.i.i504 = phi i64 [ 0, %Map_string_CGEnumType__constructor.exit.i.i ], [ %248, %for.body.i38.i.i ]
  %246 = load ptr, ptr %244, align 8
  %247 = getelementptr inbounds ptr, ptr %246, i64 %i.0.i36.i.i504
  store ptr null, ptr %247, align 8
  %248 = add nuw nsw i64 %i.0.i36.i.i504, 1
  %249 = icmp ult i64 %i.0.i36.i.i504, 255
  br i1 %249, label %for.body.i38.i.i, label %CodeGen_constructor.exit.i

CodeGen_constructor.exit.i:                       ; preds = %for.body.i38.i.i
  %memberidx5.i83.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 10
  %memberidx2.i39.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %244, i64 0, i32 1
  store i64 256, ptr %memberidx2.i39.i.i, align 4
  %memberidx3.i40.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %244, i64 0, i32 2
  store i64 0, ptr %memberidx3.i40.i.i, align 4
  store ptr %244, ptr %memberidx5.i83.i, align 8
  %memberidx6.i.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 5
  store i1 true, ptr %memberidx6.i.i, align 8
  %memberidx8.i.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx8.i.i, i8 0, i64 16, i1 false)
  %250 = load ptr, ptr %219, align 8
  %memberidx10.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %250, i64 0, i32 5
  %251 = load ptr, ptr %memberidx10.i.i, align 8
  %252 = call ptr %251(ptr nonnull %219)
  %253 = call ptr @LLVMModuleCreateWithName(ptr %252)
  store ptr %253, ptr %4, align 8
  %memberidx8.i265 = getelementptr inbounds %Module, ptr %218, i64 0, i32 6
  %254 = load ptr, ptr %memberidx8.i265, align 8
  %255 = call ptr @malloc(i32 25)
  %memberidx.i84.i = getelementptr inbounds %Array_Enum_, ptr %254, i64 0, i32 1
  %256 = load ptr, ptr %memberidx.i84.i, align 8
  %memberidx1.i85.i = getelementptr inbounds %Array_Enum_, ptr %254, i64 0, i32 2
  %257 = load i64, ptr %memberidx1.i85.i, align 4
  store i1 false, ptr %255, align 1
  %memberidx1.i.i.i266 = getelementptr inbounds %ArrayIterator_Enum_, ptr %255, i64 0, i32 1
  %memberidx2.i.i86.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %255, i64 0, i32 3
  store ptr %256, ptr %memberidx2.i.i86.i, align 8
  %memberidx3.i.i87.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %255, i64 0, i32 2
  store i64 %257, ptr %memberidx3.i.i87.i, align 4
  store i64 1, ptr %memberidx1.i.i.i266, align 4
  %258 = icmp slt i64 %257, 1
  br i1 %258, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %CodeGen_constructor.exit.i, %for.body.i
  %259 = phi i64 [ %260, %for.body.i ], [ 1, %CodeGen_constructor.exit.i ]
  %enum_.0.i502.in = phi ptr [ %261, %for.body.i ], [ %256, %CodeGen_constructor.exit.i ]
  %enum_.0.i502 = load ptr, ptr %enum_.0.i502.in, align 8
  call fastcc void @CodeGen_declare_enum(ptr nonnull %4, ptr %enum_.0.i502)
  %260 = add nuw nsw i64 %259, 1
  store i64 %260, ptr %memberidx1.i.i.i266, align 4
  %261 = getelementptr inbounds ptr, ptr %256, i64 %259
  %.not574 = icmp slt i64 %259, %257
  br i1 %.not574, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %CodeGen_constructor.exit.i
  call void @free(ptr nonnull %255)
  %memberidx11.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 3
  %262 = load ptr, ptr %memberidx11.i, align 8
  %263 = call ptr @malloc(i32 25)
  %memberidx.i94.i = getelementptr inbounds %Array_Class_, ptr %262, i64 0, i32 1
  %264 = load ptr, ptr %memberidx.i94.i, align 8
  %memberidx1.i95.i = getelementptr inbounds %Array_Class_, ptr %262, i64 0, i32 2
  %265 = load i64, ptr %memberidx1.i95.i, align 4
  store i1 false, ptr %263, align 1
  %memberidx1.i.i96.i = getelementptr inbounds %ArrayIterator_Class_, ptr %263, i64 0, i32 1
  %memberidx2.i.i97.i = getelementptr inbounds %ArrayIterator_Class_, ptr %263, i64 0, i32 3
  store ptr %264, ptr %memberidx2.i.i97.i, align 8
  %memberidx3.i.i98.i = getelementptr inbounds %ArrayIterator_Class_, ptr %263, i64 0, i32 2
  store i64 %265, ptr %memberidx3.i.i98.i, align 4
  store i64 1, ptr %memberidx1.i.i96.i, align 4
  %266 = icmp slt i64 %265, 1
  br i1 %266, label %for.end15.i, label %for.body13.i

for.body13.i:                                     ; preds = %for.end.i, %for.body13.i
  %267 = phi i64 [ %268, %for.body13.i ], [ 1, %for.end.i ]
  %class_.0.i499.in = phi ptr [ %269, %for.body13.i ], [ %264, %for.end.i ]
  %class_.0.i499 = load ptr, ptr %class_.0.i499.in, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %4, ptr %class_.0.i499)
  %268 = add nuw nsw i64 %267, 1
  store i64 %268, ptr %memberidx1.i.i96.i, align 4
  %269 = getelementptr inbounds ptr, ptr %264, i64 %267
  %.not575 = icmp slt i64 %267, %265
  br i1 %.not575, label %for.body13.i, label %for.end15.i

for.end15.i:                                      ; preds = %for.body13.i, %for.end.i
  call void @free(ptr nonnull %263)
  %memberidx18.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 8
  %270 = load ptr, ptr %memberidx18.i, align 8
  %271 = call ptr @malloc(i32 25)
  %memberidx.i105.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %270, i64 0, i32 1
  %272 = load ptr, ptr %memberidx.i105.i, align 8
  %memberidx1.i106.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %270, i64 0, i32 2
  %273 = load i64, ptr %memberidx1.i106.i, align 4
  store i1 false, ptr %271, align 1
  %memberidx1.i.i107.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %271, i64 0, i32 1
  %memberidx2.i.i108.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %271, i64 0, i32 3
  store ptr %272, ptr %memberidx2.i.i108.i, align 8
  %memberidx3.i.i109.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %271, i64 0, i32 2
  store i64 %273, ptr %memberidx3.i.i109.i, align 4
  store i64 1, ptr %memberidx1.i.i107.i, align 4
  %274 = icmp slt i64 %273, 1
  br i1 %274, label %for.end22.i, label %for.body20.i

for.body20.i:                                     ; preds = %for.end15.i, %for.body20.i
  %275 = phi i64 [ %276, %for.body20.i ], [ 1, %for.end15.i ]
  %const_.0.i496.in = phi ptr [ %277, %for.body20.i ], [ %272, %for.end15.i ]
  %const_.0.i496 = load ptr, ptr %const_.0.i496.in, align 8
  call fastcc void @CodeGen_codegen_const_declaration(ptr nonnull %4, ptr null, ptr %const_.0.i496)
  %276 = add nuw nsw i64 %275, 1
  store i64 %276, ptr %memberidx1.i.i107.i, align 4
  %277 = getelementptr inbounds ptr, ptr %272, i64 %275
  %.not576 = icmp slt i64 %275, %273
  br i1 %.not576, label %for.body20.i, label %for.end22.i

for.end22.i:                                      ; preds = %for.body20.i, %for.end15.i
  call void @free(ptr nonnull %271)
  %memberidx25.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 9
  %278 = load ptr, ptr %memberidx25.i, align 8
  %279 = call ptr @malloc(i32 25)
  %memberidx.i116.i = getelementptr inbounds %Array_VarDeclaration_, ptr %278, i64 0, i32 1
  %280 = load ptr, ptr %memberidx.i116.i, align 8
  %memberidx1.i117.i = getelementptr inbounds %Array_VarDeclaration_, ptr %278, i64 0, i32 2
  %281 = load i64, ptr %memberidx1.i117.i, align 4
  store i1 false, ptr %279, align 1
  %memberidx1.i.i118.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %279, i64 0, i32 1
  %memberidx2.i.i119.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %279, i64 0, i32 3
  store ptr %280, ptr %memberidx2.i.i119.i, align 8
  %memberidx3.i.i120.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %279, i64 0, i32 2
  store i64 %281, ptr %memberidx3.i.i120.i, align 4
  store i64 1, ptr %memberidx1.i.i118.i, align 4
  %282 = icmp slt i64 %281, 1
  br i1 %282, label %for.end29.i, label %for.body27.i

for.body27.i:                                     ; preds = %for.end22.i, %for.body27.i
  %283 = phi i64 [ %284, %for.body27.i ], [ 1, %for.end22.i ]
  %var_.0.i493.in = phi ptr [ %285, %for.body27.i ], [ %280, %for.end22.i ]
  %var_.0.i493 = load ptr, ptr %var_.0.i493.in, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr nonnull %4, ptr null, ptr %var_.0.i493)
  %284 = add nuw nsw i64 %283, 1
  store i64 %284, ptr %memberidx1.i.i118.i, align 4
  %285 = getelementptr inbounds ptr, ptr %280, i64 %283
  %.not577 = icmp slt i64 %283, %281
  br i1 %.not577, label %for.body27.i, label %for.end29.i

for.end29.i:                                      ; preds = %for.body27.i, %for.end22.i
  call void @free(ptr nonnull %279)
  %286 = load ptr, ptr %memberidx11.i, align 8
  %287 = call ptr @malloc(i32 25)
  %memberidx.i127.i = getelementptr inbounds %Array_Class_, ptr %286, i64 0, i32 1
  %288 = load ptr, ptr %memberidx.i127.i, align 8
  %memberidx1.i128.i = getelementptr inbounds %Array_Class_, ptr %286, i64 0, i32 2
  %289 = load i64, ptr %memberidx1.i128.i, align 4
  store i1 false, ptr %287, align 1
  %memberidx1.i.i129.i = getelementptr inbounds %ArrayIterator_Class_, ptr %287, i64 0, i32 1
  %memberidx2.i.i130.i = getelementptr inbounds %ArrayIterator_Class_, ptr %287, i64 0, i32 3
  store ptr %288, ptr %memberidx2.i.i130.i, align 8
  %memberidx3.i.i131.i = getelementptr inbounds %ArrayIterator_Class_, ptr %287, i64 0, i32 2
  store i64 %289, ptr %memberidx3.i.i131.i, align 4
  store i64 1, ptr %memberidx1.i.i129.i, align 4
  %290 = icmp slt i64 %289, 1
  br i1 %290, label %for.end36.i, label %for.body34.i

for.body34.i:                                     ; preds = %for.end29.i, %for.body34.i
  %291 = phi i64 [ %292, %for.body34.i ], [ 1, %for.end29.i ]
  %class_4.0.i490.in = phi ptr [ %293, %for.body34.i ], [ %288, %for.end29.i ]
  %class_4.0.i490 = load ptr, ptr %class_4.0.i490.in, align 8
  call fastcc void @CodeGen_codegen_class(ptr nonnull %4, ptr %class_4.0.i490)
  %292 = add nuw nsw i64 %291, 1
  store i64 %292, ptr %memberidx1.i.i129.i, align 4
  %293 = getelementptr inbounds ptr, ptr %288, i64 %291
  %.not578 = icmp slt i64 %291, %289
  br i1 %.not578, label %for.body34.i, label %for.end36.i

for.end36.i:                                      ; preds = %for.body34.i, %for.end29.i
  call void @free(ptr nonnull %287)
  %memberidx39.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 4
  %294 = load ptr, ptr %memberidx39.i, align 8
  %295 = call ptr @malloc(i32 25)
  %memberidx.i138.i = getelementptr inbounds %Array_Function_, ptr %294, i64 0, i32 1
  %296 = load ptr, ptr %memberidx.i138.i, align 8
  %memberidx1.i139.i = getelementptr inbounds %Array_Function_, ptr %294, i64 0, i32 2
  %297 = load i64, ptr %memberidx1.i139.i, align 4
  store i1 false, ptr %295, align 1
  %memberidx1.i.i140.i = getelementptr inbounds %ArrayIterator_Function_, ptr %295, i64 0, i32 1
  %memberidx2.i.i141.i = getelementptr inbounds %ArrayIterator_Function_, ptr %295, i64 0, i32 3
  store ptr %296, ptr %memberidx2.i.i141.i, align 8
  %memberidx3.i.i142.i = getelementptr inbounds %ArrayIterator_Function_, ptr %295, i64 0, i32 2
  store i64 %297, ptr %memberidx3.i.i142.i, align 4
  store i64 1, ptr %memberidx1.i.i140.i, align 4
  %298 = icmp slt i64 %297, 1
  br i1 %298, label %for.end43.i, label %for.body41.i

for.body41.i:                                     ; preds = %for.end36.i, %for.body41.i
  %299 = phi i64 [ %300, %for.body41.i ], [ 1, %for.end36.i ]
  %func_.0.i487.in = phi ptr [ %301, %for.body41.i ], [ %296, %for.end36.i ]
  %func_.0.i487 = load ptr, ptr %func_.0.i487.in, align 8
  call fastcc void @CodeGen_codegen_function(ptr nonnull %4, ptr %func_.0.i487)
  %300 = add nuw nsw i64 %299, 1
  store i64 %300, ptr %memberidx1.i.i140.i, align 4
  %301 = getelementptr inbounds ptr, ptr %296, i64 %299
  %.not579 = icmp slt i64 %299, %297
  br i1 %.not579, label %for.body41.i, label %for.end43.i

for.end43.i:                                      ; preds = %for.body41.i, %for.end36.i
  call void @free(ptr nonnull %295)
  %302 = load ptr, ptr %memberidx1.i81.i, align 8
  %303 = call ptr @malloc(i32 25)
  %304 = load ptr, ptr %302, align 8
  %memberidx1.i.i150.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %302, i64 0, i32 1
  %305 = load i64, ptr %memberidx1.i.i150.i, align 4
  %memberidx2.i.i151.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %302, i64 0, i32 2
  %306 = load i64, ptr %memberidx2.i.i151.i, align 4
  store i1 false, ptr %303, align 1
  %memberidx1.i.i.i152.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %303, i64 0, i32 1
  store ptr %304, ptr %memberidx1.i.i.i152.i, align 8
  %memberidx2.i.i.i153.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %303, i64 0, i32 2
  %memberidx3.i.i.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %303, i64 0, i32 3
  store i64 %306, ptr %memberidx3.i.i.i.i, align 4
  %307 = add nsw i64 %305, -1
  store i64 %307, ptr %memberidx2.i.i.i153.i, align 4
  %308 = icmp sgt i64 %305, 0
  br i1 %308, label %while.entry.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i

while.entry.i.i.i:                                ; preds = %for.end43.i, %ifend.i.i.i
  %309 = phi i64 [ %312, %ifend.i.i.i ], [ %307, %for.end43.i ]
  %310 = phi ptr [ %incdec.ptr.i.i.i, %ifend.i.i.i ], [ %304, %for.end43.i ]
  %incdec.ptr.i.i.i = getelementptr inbounds ptr, ptr %310, i64 1
  %311 = load ptr, ptr %310, align 8
  %.not.i.i.i = icmp eq ptr %311, null
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit

ifend.i.i.i:                                      ; preds = %while.entry.i.i.i
  %312 = add nsw i64 %309, -1
  store i64 %312, ptr %memberidx2.i.i.i153.i, align 4
  %313 = icmp sgt i64 %309, 0
  br i1 %313, label %while.entry.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit

MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit: ; preds = %while.entry.i.i.i, %ifend.i.i.i
  %memberidx2.i.i.i153.i.promoted557 = phi i64 [ %309, %while.entry.i.i.i ], [ %312, %ifend.i.i.i ]
  store ptr %incdec.ptr.i.i.i, ptr %memberidx1.i.i.i152.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit.i.i

MapIterator_string_LLVMValueRef__next.exit.i.i:   ; preds = %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit, %for.end43.i
  %memberidx2.i.i.i153.i.promoted = phi i64 [ %memberidx2.i.i.i153.i.promoted557, %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit ], [ %307, %for.end43.i ]
  %memberidx1.i.i.i152.i.promoted482 = phi ptr [ %incdec.ptr.i.i.i, %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit ], [ %304, %for.end43.i ]
  %storemerge378478 = icmp slt i64 %306, 1
  br i1 %storemerge378478, label %for.end.i.i, label %for.body.i.i268

for.body.i.i268:                                  ; preds = %MapIterator_string_LLVMValueRef__next.exit.i.i, %MapIterator_string_LLVMValueRef__next.exit82.i.i
  %314 = phi i64 [ %325, %MapIterator_string_LLVMValueRef__next.exit82.i.i ], [ %memberidx2.i.i.i153.i.promoted, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %incdec.ptr.i76.i.i.lcssa484 = phi ptr [ %incdec.ptr.i76.i.i.lcssa483, %MapIterator_string_LLVMValueRef__next.exit82.i.i ], [ %memberidx1.i.i.i152.i.promoted482, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %storemerge397479.in = phi i64 [ %storemerge397479, %MapIterator_string_LLVMValueRef__next.exit82.i.i ], [ %306, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %storemerge397479 = add nsw i64 %storemerge397479.in, -1
  %var_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i76.i.i.lcssa484, i64 -1
  %var_entry.0.i.i = load ptr, ptr %var_entry.0.i.i.in, align 8
  %315 = load ptr, ptr %var_entry.0.i.i, align 8
  %memberidx.i73.i.i = getelementptr inbounds %string, ptr %315, i64 0, i32 1
  %316 = load ptr, ptr %memberidx.i73.i.i, align 8
  call void @free(ptr %316)
  call void @free(ptr %315)
  %317 = add nsw i64 %314, -1
  %318 = icmp sgt i64 %314, 0
  br i1 %318, label %while.entry.i78.i.i.preheader, label %MapIterator_string_LLVMValueRef__next.exit82.i.i

while.entry.i78.i.i.preheader:                    ; preds = %for.body.i.i268
  %319 = shl i64 %314, 3
  %uglygep554 = getelementptr i8, ptr %incdec.ptr.i76.i.i.lcssa484, i64 %319
  br label %while.entry.i78.i.i

while.entry.i78.i.i:                              ; preds = %while.entry.i78.i.i.preheader, %ifend.i81.i.i
  %320 = phi i64 [ %323, %ifend.i81.i.i ], [ %317, %while.entry.i78.i.i.preheader ]
  %321 = phi ptr [ %incdec.ptr.i76.i.i, %ifend.i81.i.i ], [ %incdec.ptr.i76.i.i.lcssa484, %while.entry.i78.i.i.preheader ]
  %incdec.ptr.i76.i.i = getelementptr inbounds ptr, ptr %321, i64 1
  %322 = load ptr, ptr %321, align 8
  %.not.i77.i.i = icmp eq ptr %322, null
  br i1 %.not.i77.i.i, label %ifend.i81.i.i, label %MapIterator_string_LLVMValueRef__next.exit82.i.i

ifend.i81.i.i:                                    ; preds = %while.entry.i78.i.i
  %323 = add nsw i64 %320, -1
  %324 = icmp sgt i64 %320, 0
  br i1 %324, label %while.entry.i78.i.i, label %MapIterator_string_LLVMValueRef__next.exit82.i.i

MapIterator_string_LLVMValueRef__next.exit82.i.i: ; preds = %ifend.i81.i.i, %while.entry.i78.i.i, %for.body.i.i268
  %325 = phi i64 [ %317, %for.body.i.i268 ], [ -1, %ifend.i81.i.i ], [ %320, %while.entry.i78.i.i ]
  %incdec.ptr.i76.i.i.lcssa483 = phi ptr [ %incdec.ptr.i76.i.i.lcssa484, %for.body.i.i268 ], [ %uglygep554, %ifend.i81.i.i ], [ %incdec.ptr.i76.i.i, %while.entry.i78.i.i ]
  %storemerge378 = icmp slt i64 %storemerge397479.in, 2
  br i1 %storemerge378, label %for.cond.i.i267.for.end.i.i_crit_edge, label %for.body.i.i268

for.cond.i.i267.for.end.i.i_crit_edge:            ; preds = %MapIterator_string_LLVMValueRef__next.exit82.i.i
  store ptr %incdec.ptr.i76.i.i.lcssa483, ptr %memberidx1.i.i.i152.i, align 8
  store i64 %325, ptr %memberidx2.i.i.i153.i, align 4
  %.pre = load ptr, ptr %302, align 8
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i267.for.end.i.i_crit_edge, %MapIterator_string_LLVMValueRef__next.exit.i.i
  %326 = phi ptr [ %.pre, %for.cond.i.i267.for.end.i.i_crit_edge ], [ %304, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  call void @free(ptr nonnull %303)
  call void @free(ptr %326)
  call void @free(ptr %302)
  %327 = load ptr, ptr %memberidx2.i.i263, align 8
  %328 = call ptr @malloc(i32 25)
  %329 = load ptr, ptr %327, align 8
  %memberidx1.i92.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %327, i64 0, i32 1
  %330 = load i64, ptr %memberidx1.i92.i.i, align 4
  %memberidx2.i93.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %327, i64 0, i32 2
  %331 = load i64, ptr %memberidx2.i93.i.i, align 4
  store i1 false, ptr %328, align 1
  %memberidx1.i.i94.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %328, i64 0, i32 1
  store ptr %329, ptr %memberidx1.i.i94.i.i, align 8
  %memberidx2.i.i95.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %328, i64 0, i32 2
  %memberidx3.i.i96.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %328, i64 0, i32 3
  store i64 %331, ptr %memberidx3.i.i96.i.i, align 4
  %332 = add nsw i64 %330, -1
  store i64 %332, ptr %memberidx2.i.i95.i.i, align 4
  %333 = icmp sgt i64 %330, 0
  br i1 %333, label %while.entry.i101.i.i, label %MapIterator_string_LLVMValueRef__next.exit105.i.i

while.entry.i101.i.i:                             ; preds = %for.end.i.i, %ifend.i104.i.i
  %334 = phi i64 [ %337, %ifend.i104.i.i ], [ %332, %for.end.i.i ]
  %335 = phi ptr [ %incdec.ptr.i99.i.i, %ifend.i104.i.i ], [ %329, %for.end.i.i ]
  %incdec.ptr.i99.i.i = getelementptr inbounds ptr, ptr %335, i64 1
  %336 = load ptr, ptr %335, align 8
  %.not.i100.i.i = icmp eq ptr %336, null
  br i1 %.not.i100.i.i, label %ifend.i104.i.i, label %MapIterator_string_LLVMValueRef__next.exit105.i.i.loopexit

ifend.i104.i.i:                                   ; preds = %while.entry.i101.i.i
  %337 = add nsw i64 %334, -1
  store i64 %337, ptr %memberidx2.i.i95.i.i, align 4
  %338 = icmp sgt i64 %334, 0
  br i1 %338, label %while.entry.i101.i.i, label %MapIterator_string_LLVMValueRef__next.exit105.i.i.loopexit

MapIterator_string_LLVMValueRef__next.exit105.i.i.loopexit: ; preds = %while.entry.i101.i.i, %ifend.i104.i.i
  %memberidx2.i.i95.i.i.promoted560 = phi i64 [ %334, %while.entry.i101.i.i ], [ %337, %ifend.i104.i.i ]
  store ptr %incdec.ptr.i99.i.i, ptr %memberidx1.i.i94.i.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit105.i.i

MapIterator_string_LLVMValueRef__next.exit105.i.i: ; preds = %MapIterator_string_LLVMValueRef__next.exit105.i.i.loopexit, %for.end.i.i
  %memberidx2.i.i95.i.i.promoted = phi i64 [ %memberidx2.i.i95.i.i.promoted560, %MapIterator_string_LLVMValueRef__next.exit105.i.i.loopexit ], [ %332, %for.end.i.i ]
  %memberidx1.i.i94.i.i.promoted472 = phi ptr [ %incdec.ptr.i99.i.i, %MapIterator_string_LLVMValueRef__next.exit105.i.i.loopexit ], [ %329, %for.end.i.i ]
  %storemerge380468 = icmp slt i64 %331, 1
  br i1 %storemerge380468, label %for.end13.i.i, label %for.body11.i.i

for.body11.i.i:                                   ; preds = %MapIterator_string_LLVMValueRef__next.exit105.i.i, %MapIterator_string_LLVMValueRef__next.exit129.i.i
  %339 = phi i64 [ %350, %MapIterator_string_LLVMValueRef__next.exit129.i.i ], [ %memberidx2.i.i95.i.i.promoted, %MapIterator_string_LLVMValueRef__next.exit105.i.i ]
  %incdec.ptr.i123.i.i.lcssa474 = phi ptr [ %incdec.ptr.i123.i.i.lcssa473, %MapIterator_string_LLVMValueRef__next.exit129.i.i ], [ %memberidx1.i.i94.i.i.promoted472, %MapIterator_string_LLVMValueRef__next.exit105.i.i ]
  %storemerge398469.in = phi i64 [ %storemerge398469, %MapIterator_string_LLVMValueRef__next.exit129.i.i ], [ %331, %MapIterator_string_LLVMValueRef__next.exit105.i.i ]
  %storemerge398469 = add nsw i64 %storemerge398469.in, -1
  %string_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i123.i.i.lcssa474, i64 -1
  %string_entry.0.i.i = load ptr, ptr %string_entry.0.i.i.in, align 8
  %340 = load ptr, ptr %string_entry.0.i.i, align 8
  %memberidx.i120.i.i = getelementptr inbounds %string, ptr %340, i64 0, i32 1
  %341 = load ptr, ptr %memberidx.i120.i.i, align 8
  call void @free(ptr %341)
  call void @free(ptr %340)
  %342 = add nsw i64 %339, -1
  %343 = icmp sgt i64 %339, 0
  br i1 %343, label %while.entry.i125.i.i.preheader, label %MapIterator_string_LLVMValueRef__next.exit129.i.i

while.entry.i125.i.i.preheader:                   ; preds = %for.body11.i.i
  %344 = shl i64 %339, 3
  %uglygep553 = getelementptr i8, ptr %incdec.ptr.i123.i.i.lcssa474, i64 %344
  br label %while.entry.i125.i.i

while.entry.i125.i.i:                             ; preds = %while.entry.i125.i.i.preheader, %ifend.i128.i.i
  %345 = phi i64 [ %348, %ifend.i128.i.i ], [ %342, %while.entry.i125.i.i.preheader ]
  %346 = phi ptr [ %incdec.ptr.i123.i.i, %ifend.i128.i.i ], [ %incdec.ptr.i123.i.i.lcssa474, %while.entry.i125.i.i.preheader ]
  %incdec.ptr.i123.i.i = getelementptr inbounds ptr, ptr %346, i64 1
  %347 = load ptr, ptr %346, align 8
  %.not.i124.i.i = icmp eq ptr %347, null
  br i1 %.not.i124.i.i, label %ifend.i128.i.i, label %MapIterator_string_LLVMValueRef__next.exit129.i.i

ifend.i128.i.i:                                   ; preds = %while.entry.i125.i.i
  %348 = add nsw i64 %345, -1
  %349 = icmp sgt i64 %345, 0
  br i1 %349, label %while.entry.i125.i.i, label %MapIterator_string_LLVMValueRef__next.exit129.i.i

MapIterator_string_LLVMValueRef__next.exit129.i.i: ; preds = %ifend.i128.i.i, %while.entry.i125.i.i, %for.body11.i.i
  %350 = phi i64 [ %342, %for.body11.i.i ], [ -1, %ifend.i128.i.i ], [ %345, %while.entry.i125.i.i ]
  %incdec.ptr.i123.i.i.lcssa473 = phi ptr [ %incdec.ptr.i123.i.i.lcssa474, %for.body11.i.i ], [ %uglygep553, %ifend.i128.i.i ], [ %incdec.ptr.i123.i.i, %while.entry.i125.i.i ]
  %storemerge380 = icmp slt i64 %storemerge398469.in, 2
  br i1 %storemerge380, label %for.cond10.i.i.for.end13.i.i_crit_edge, label %for.body11.i.i

for.cond10.i.i.for.end13.i.i_crit_edge:           ; preds = %MapIterator_string_LLVMValueRef__next.exit129.i.i
  store ptr %incdec.ptr.i123.i.i.lcssa473, ptr %memberidx1.i.i94.i.i, align 8
  store i64 %350, ptr %memberidx2.i.i95.i.i, align 4
  %.pre561 = load ptr, ptr %327, align 8
  br label %for.end13.i.i

for.end13.i.i:                                    ; preds = %for.cond10.i.i.for.end13.i.i_crit_edge, %MapIterator_string_LLVMValueRef__next.exit105.i.i
  %351 = phi ptr [ %.pre561, %for.cond10.i.i.for.end13.i.i_crit_edge ], [ %329, %MapIterator_string_LLVMValueRef__next.exit105.i.i ]
  call void @free(ptr nonnull %328)
  call void @free(ptr %351)
  call void @free(ptr %327)
  %352 = load ptr, ptr %memberidx5.i83.i, align 8
  %353 = call ptr @malloc(i32 25)
  %354 = load ptr, ptr %352, align 8
  %memberidx1.i130.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %352, i64 0, i32 1
  %355 = load i64, ptr %memberidx1.i130.i.i, align 4
  %memberidx2.i131.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %352, i64 0, i32 2
  %356 = load i64, ptr %memberidx2.i131.i.i, align 4
  store i1 false, ptr %353, align 1
  %memberidx1.i.i132.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %353, i64 0, i32 1
  store ptr %354, ptr %memberidx1.i.i132.i.i, align 8
  %memberidx2.i.i133.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %353, i64 0, i32 2
  %memberidx3.i.i134.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %353, i64 0, i32 3
  store i64 %356, ptr %memberidx3.i.i134.i.i, align 4
  %357 = add nsw i64 %355, -1
  store i64 %357, ptr %memberidx2.i.i133.i.i, align 4
  %358 = icmp sgt i64 %355, 0
  br i1 %358, label %while.entry.i139.i.i, label %MapIterator_string_LLVMValueRef__next.exit143.i.i

while.entry.i139.i.i:                             ; preds = %for.end13.i.i, %ifend.i142.i.i
  %359 = phi i64 [ %362, %ifend.i142.i.i ], [ %357, %for.end13.i.i ]
  %360 = phi ptr [ %incdec.ptr.i137.i.i, %ifend.i142.i.i ], [ %354, %for.end13.i.i ]
  %incdec.ptr.i137.i.i = getelementptr inbounds ptr, ptr %360, i64 1
  %361 = load ptr, ptr %360, align 8
  %.not.i138.i.i = icmp eq ptr %361, null
  br i1 %.not.i138.i.i, label %ifend.i142.i.i, label %MapIterator_string_LLVMValueRef__next.exit143.i.i.loopexit

ifend.i142.i.i:                                   ; preds = %while.entry.i139.i.i
  %362 = add nsw i64 %359, -1
  store i64 %362, ptr %memberidx2.i.i133.i.i, align 4
  %363 = icmp sgt i64 %359, 0
  br i1 %363, label %while.entry.i139.i.i, label %MapIterator_string_LLVMValueRef__next.exit143.i.i.loopexit

MapIterator_string_LLVMValueRef__next.exit143.i.i.loopexit: ; preds = %while.entry.i139.i.i, %ifend.i142.i.i
  %memberidx2.i.i133.i.i.promoted564 = phi i64 [ %359, %while.entry.i139.i.i ], [ %362, %ifend.i142.i.i ]
  store ptr %incdec.ptr.i137.i.i, ptr %memberidx1.i.i132.i.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit143.i.i

MapIterator_string_LLVMValueRef__next.exit143.i.i: ; preds = %MapIterator_string_LLVMValueRef__next.exit143.i.i.loopexit, %for.end13.i.i
  %memberidx2.i.i133.i.i.promoted = phi i64 [ %memberidx2.i.i133.i.i.promoted564, %MapIterator_string_LLVMValueRef__next.exit143.i.i.loopexit ], [ %357, %for.end13.i.i ]
  %memberidx1.i.i132.i.i.promoted462 = phi ptr [ %incdec.ptr.i137.i.i, %MapIterator_string_LLVMValueRef__next.exit143.i.i.loopexit ], [ %354, %for.end13.i.i ]
  %storemerge382458 = icmp slt i64 %356, 1
  br i1 %storemerge382458, label %for.end22.i.i, label %for.body20.i.i

for.body20.i.i:                                   ; preds = %MapIterator_string_LLVMValueRef__next.exit143.i.i, %MapIterator_string_LLVMValueRef__next.exit162.i.i
  %364 = phi i64 [ %375, %MapIterator_string_LLVMValueRef__next.exit162.i.i ], [ %memberidx2.i.i133.i.i.promoted, %MapIterator_string_LLVMValueRef__next.exit143.i.i ]
  %incdec.ptr.i156.i.i.lcssa464 = phi ptr [ %incdec.ptr.i156.i.i.lcssa463, %MapIterator_string_LLVMValueRef__next.exit162.i.i ], [ %memberidx1.i.i132.i.i.promoted462, %MapIterator_string_LLVMValueRef__next.exit143.i.i ]
  %storemerge399459.in = phi i64 [ %storemerge399459, %MapIterator_string_LLVMValueRef__next.exit162.i.i ], [ %356, %MapIterator_string_LLVMValueRef__next.exit143.i.i ]
  %storemerge399459 = add nsw i64 %storemerge399459.in, -1
  %func_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i156.i.i.lcssa464, i64 -1
  %func_entry.0.i.i = load ptr, ptr %func_entry.0.i.i.in, align 8
  %365 = load ptr, ptr %func_entry.0.i.i, align 8
  %memberidx.i153.i.i = getelementptr inbounds %string, ptr %365, i64 0, i32 1
  %366 = load ptr, ptr %memberidx.i153.i.i, align 8
  call void @free(ptr %366)
  call void @free(ptr %365)
  %367 = add nsw i64 %364, -1
  %368 = icmp sgt i64 %364, 0
  br i1 %368, label %while.entry.i158.i.i.preheader, label %MapIterator_string_LLVMValueRef__next.exit162.i.i

while.entry.i158.i.i.preheader:                   ; preds = %for.body20.i.i
  %369 = shl i64 %364, 3
  %uglygep552 = getelementptr i8, ptr %incdec.ptr.i156.i.i.lcssa464, i64 %369
  br label %while.entry.i158.i.i

while.entry.i158.i.i:                             ; preds = %while.entry.i158.i.i.preheader, %ifend.i161.i.i
  %370 = phi i64 [ %373, %ifend.i161.i.i ], [ %367, %while.entry.i158.i.i.preheader ]
  %371 = phi ptr [ %incdec.ptr.i156.i.i, %ifend.i161.i.i ], [ %incdec.ptr.i156.i.i.lcssa464, %while.entry.i158.i.i.preheader ]
  %incdec.ptr.i156.i.i = getelementptr inbounds ptr, ptr %371, i64 1
  %372 = load ptr, ptr %371, align 8
  %.not.i157.i.i = icmp eq ptr %372, null
  br i1 %.not.i157.i.i, label %ifend.i161.i.i, label %MapIterator_string_LLVMValueRef__next.exit162.i.i

ifend.i161.i.i:                                   ; preds = %while.entry.i158.i.i
  %373 = add nsw i64 %370, -1
  %374 = icmp sgt i64 %370, 0
  br i1 %374, label %while.entry.i158.i.i, label %MapIterator_string_LLVMValueRef__next.exit162.i.i

MapIterator_string_LLVMValueRef__next.exit162.i.i: ; preds = %ifend.i161.i.i, %while.entry.i158.i.i, %for.body20.i.i
  %375 = phi i64 [ %367, %for.body20.i.i ], [ -1, %ifend.i161.i.i ], [ %370, %while.entry.i158.i.i ]
  %incdec.ptr.i156.i.i.lcssa463 = phi ptr [ %incdec.ptr.i156.i.i.lcssa464, %for.body20.i.i ], [ %uglygep552, %ifend.i161.i.i ], [ %incdec.ptr.i156.i.i, %while.entry.i158.i.i ]
  %storemerge382 = icmp slt i64 %storemerge399459.in, 2
  br i1 %storemerge382, label %for.cond19.i.i.for.end22.i.i_crit_edge, label %for.body20.i.i

for.cond19.i.i.for.end22.i.i_crit_edge:           ; preds = %MapIterator_string_LLVMValueRef__next.exit162.i.i
  store ptr %incdec.ptr.i156.i.i.lcssa463, ptr %memberidx1.i.i132.i.i, align 8
  store i64 %375, ptr %memberidx2.i.i133.i.i, align 4
  %.pre565 = load ptr, ptr %352, align 8
  br label %for.end22.i.i

for.end22.i.i:                                    ; preds = %for.cond19.i.i.for.end22.i.i_crit_edge, %MapIterator_string_LLVMValueRef__next.exit143.i.i
  %376 = phi ptr [ %.pre565, %for.cond19.i.i.for.end22.i.i_crit_edge ], [ %354, %MapIterator_string_LLVMValueRef__next.exit143.i.i ]
  call void @free(ptr nonnull %353)
  call void @free(ptr %376)
  call void @free(ptr %352)
  %377 = load ptr, ptr %memberidx3.i.i264, align 8
  %378 = call ptr @malloc(i32 25)
  %379 = load ptr, ptr %377, align 8
  %memberidx1.i172.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %377, i64 0, i32 1
  %380 = load i64, ptr %memberidx1.i172.i.i, align 4
  %memberidx2.i173.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %377, i64 0, i32 2
  %381 = load i64, ptr %memberidx2.i173.i.i, align 4
  store i1 false, ptr %378, align 1
  %memberidx1.i.i174.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %378, i64 0, i32 1
  store ptr %379, ptr %memberidx1.i.i174.i.i, align 8
  %memberidx2.i.i175.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %378, i64 0, i32 2
  %memberidx3.i.i176.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %378, i64 0, i32 3
  store i64 %381, ptr %memberidx3.i.i176.i.i, align 4
  %382 = add nsw i64 %380, -1
  store i64 %382, ptr %memberidx2.i.i175.i.i, align 4
  %383 = icmp sgt i64 %380, 0
  br i1 %383, label %while.entry.i167.i.i, label %MapIterator_string_CGClassType__next.exit171.i.i

while.entry.i167.i.i:                             ; preds = %for.end22.i.i, %ifend.i170.i.i
  %384 = phi i64 [ %387, %ifend.i170.i.i ], [ %382, %for.end22.i.i ]
  %385 = phi ptr [ %incdec.ptr.i165.i.i, %ifend.i170.i.i ], [ %379, %for.end22.i.i ]
  %incdec.ptr.i165.i.i = getelementptr inbounds ptr, ptr %385, i64 1
  %386 = load ptr, ptr %385, align 8
  %.not.i166.i.i = icmp eq ptr %386, null
  br i1 %.not.i166.i.i, label %ifend.i170.i.i, label %MapIterator_string_CGClassType__next.exit171.i.i.loopexit

ifend.i170.i.i:                                   ; preds = %while.entry.i167.i.i
  %387 = add nsw i64 %384, -1
  store i64 %387, ptr %memberidx2.i.i175.i.i, align 4
  %388 = icmp sgt i64 %384, 0
  br i1 %388, label %while.entry.i167.i.i, label %MapIterator_string_CGClassType__next.exit171.i.i.loopexit

MapIterator_string_CGClassType__next.exit171.i.i.loopexit: ; preds = %while.entry.i167.i.i, %ifend.i170.i.i
  %memberidx2.i.i175.i.i.promoted568 = phi i64 [ %384, %while.entry.i167.i.i ], [ %387, %ifend.i170.i.i ]
  store ptr %incdec.ptr.i165.i.i, ptr %memberidx1.i.i174.i.i, align 8
  br label %MapIterator_string_CGClassType__next.exit171.i.i

MapIterator_string_CGClassType__next.exit171.i.i: ; preds = %MapIterator_string_CGClassType__next.exit171.i.i.loopexit, %for.end22.i.i
  %memberidx2.i.i175.i.i.promoted = phi i64 [ %memberidx2.i.i175.i.i.promoted568, %MapIterator_string_CGClassType__next.exit171.i.i.loopexit ], [ %382, %for.end22.i.i ]
  %memberidx1.i.i174.i.i.promoted452 = phi ptr [ %incdec.ptr.i165.i.i, %MapIterator_string_CGClassType__next.exit171.i.i.loopexit ], [ %379, %for.end22.i.i ]
  %storemerge384448 = icmp slt i64 %381, 1
  br i1 %storemerge384448, label %for.end31.i.i, label %for.body29.i.i

for.body29.i.i:                                   ; preds = %MapIterator_string_CGClassType__next.exit171.i.i, %MapIterator_string_CGClassType__next.exit.i.i
  %389 = phi i64 [ %401, %MapIterator_string_CGClassType__next.exit.i.i ], [ %memberidx2.i.i175.i.i.promoted, %MapIterator_string_CGClassType__next.exit171.i.i ]
  %incdec.ptr.i146.i.i.lcssa454 = phi ptr [ %incdec.ptr.i146.i.i.lcssa453, %MapIterator_string_CGClassType__next.exit.i.i ], [ %memberidx1.i.i174.i.i.promoted452, %MapIterator_string_CGClassType__next.exit171.i.i ]
  %storemerge400449.in = phi i64 [ %storemerge400449, %MapIterator_string_CGClassType__next.exit.i.i ], [ %381, %MapIterator_string_CGClassType__next.exit171.i.i ]
  %storemerge400449 = add nsw i64 %storemerge400449.in, -1
  %class_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i146.i.i.lcssa454, i64 -1
  %class_entry.0.i.i = load ptr, ptr %class_entry.0.i.i.in, align 8
  %390 = load ptr, ptr %class_entry.0.i.i, align 8
  %memberidx.i152.i.i = getelementptr inbounds %string, ptr %390, i64 0, i32 1
  %391 = load ptr, ptr %memberidx.i152.i.i, align 8
  call void @free(ptr %391)
  call void @free(ptr %390)
  %memberidx34.i.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %class_entry.0.i.i, i64 0, i32 1
  %392 = load ptr, ptr %memberidx34.i.i, align 8
  call void @free(ptr %392)
  %393 = add nsw i64 %389, -1
  %394 = icmp sgt i64 %389, 0
  br i1 %394, label %while.entry.i148.i.i.preheader, label %MapIterator_string_CGClassType__next.exit.i.i

while.entry.i148.i.i.preheader:                   ; preds = %for.body29.i.i
  %395 = shl i64 %389, 3
  %uglygep551 = getelementptr i8, ptr %incdec.ptr.i146.i.i.lcssa454, i64 %395
  br label %while.entry.i148.i.i

while.entry.i148.i.i:                             ; preds = %while.entry.i148.i.i.preheader, %ifend.i151.i.i
  %396 = phi i64 [ %399, %ifend.i151.i.i ], [ %393, %while.entry.i148.i.i.preheader ]
  %397 = phi ptr [ %incdec.ptr.i146.i.i, %ifend.i151.i.i ], [ %incdec.ptr.i146.i.i.lcssa454, %while.entry.i148.i.i.preheader ]
  %incdec.ptr.i146.i.i = getelementptr inbounds ptr, ptr %397, i64 1
  %398 = load ptr, ptr %397, align 8
  %.not.i147.i.i = icmp eq ptr %398, null
  br i1 %.not.i147.i.i, label %ifend.i151.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

ifend.i151.i.i:                                   ; preds = %while.entry.i148.i.i
  %399 = add nsw i64 %396, -1
  %400 = icmp sgt i64 %396, 0
  br i1 %400, label %while.entry.i148.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

MapIterator_string_CGClassType__next.exit.i.i:    ; preds = %ifend.i151.i.i, %while.entry.i148.i.i, %for.body29.i.i
  %401 = phi i64 [ %393, %for.body29.i.i ], [ -1, %ifend.i151.i.i ], [ %396, %while.entry.i148.i.i ]
  %incdec.ptr.i146.i.i.lcssa453 = phi ptr [ %incdec.ptr.i146.i.i.lcssa454, %for.body29.i.i ], [ %uglygep551, %ifend.i151.i.i ], [ %incdec.ptr.i146.i.i, %while.entry.i148.i.i ]
  %storemerge384 = icmp slt i64 %storemerge400449.in, 2
  br i1 %storemerge384, label %for.cond28.i.i.for.end31.i.i_crit_edge, label %for.body29.i.i

for.cond28.i.i.for.end31.i.i_crit_edge:           ; preds = %MapIterator_string_CGClassType__next.exit.i.i
  store ptr %incdec.ptr.i146.i.i.lcssa453, ptr %memberidx1.i.i174.i.i, align 8
  store i64 %401, ptr %memberidx2.i.i175.i.i, align 4
  %.pre569 = load ptr, ptr %377, align 8
  br label %for.end31.i.i

for.end31.i.i:                                    ; preds = %for.cond28.i.i.for.end31.i.i_crit_edge, %MapIterator_string_CGClassType__next.exit171.i.i
  %402 = phi ptr [ %.pre569, %for.cond28.i.i.for.end31.i.i_crit_edge ], [ %379, %MapIterator_string_CGClassType__next.exit171.i.i ]
  call void @free(ptr nonnull %378)
  call void @free(ptr %402)
  call void @free(ptr %377)
  %403 = load ptr, ptr %memberidx4.i.i, align 8
  %404 = call ptr @malloc(i32 25)
  %405 = load ptr, ptr %403, align 8
  %memberidx1.i115.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %403, i64 0, i32 1
  %406 = load i64, ptr %memberidx1.i115.i.i, align 4
  %memberidx2.i116.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %403, i64 0, i32 2
  %407 = load i64, ptr %memberidx2.i116.i.i, align 4
  store i1 false, ptr %404, align 1
  %memberidx1.i.i117.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %404, i64 0, i32 1
  store ptr %405, ptr %memberidx1.i.i117.i.i, align 8
  %memberidx2.i.i118.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %404, i64 0, i32 2
  %memberidx3.i.i119.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %404, i64 0, i32 3
  store i64 %407, ptr %memberidx3.i.i119.i.i, align 4
  %408 = add nsw i64 %406, -1
  store i64 %408, ptr %memberidx2.i.i118.i.i, align 4
  %409 = icmp sgt i64 %406, 0
  br i1 %409, label %while.entry.i110.i.i, label %MapIterator_string_CGEnumType__next.exit114.i.i

while.entry.i110.i.i:                             ; preds = %for.end31.i.i, %ifend.i113.i.i
  %410 = phi i64 [ %413, %ifend.i113.i.i ], [ %408, %for.end31.i.i ]
  %411 = phi ptr [ %incdec.ptr.i108.i.i, %ifend.i113.i.i ], [ %405, %for.end31.i.i ]
  %incdec.ptr.i108.i.i = getelementptr inbounds ptr, ptr %411, i64 1
  %412 = load ptr, ptr %411, align 8
  %.not.i109.i.i = icmp eq ptr %412, null
  br i1 %.not.i109.i.i, label %ifend.i113.i.i, label %MapIterator_string_CGEnumType__next.exit114.i.i.loopexit

ifend.i113.i.i:                                   ; preds = %while.entry.i110.i.i
  %413 = add nsw i64 %410, -1
  store i64 %413, ptr %memberidx2.i.i118.i.i, align 4
  %414 = icmp sgt i64 %410, 0
  br i1 %414, label %while.entry.i110.i.i, label %MapIterator_string_CGEnumType__next.exit114.i.i.loopexit

MapIterator_string_CGEnumType__next.exit114.i.i.loopexit: ; preds = %while.entry.i110.i.i, %ifend.i113.i.i
  %memberidx2.i.i118.i.i.promoted572 = phi i64 [ %410, %while.entry.i110.i.i ], [ %413, %ifend.i113.i.i ]
  store ptr %incdec.ptr.i108.i.i, ptr %memberidx1.i.i117.i.i, align 8
  br label %MapIterator_string_CGEnumType__next.exit114.i.i

MapIterator_string_CGEnumType__next.exit114.i.i:  ; preds = %MapIterator_string_CGEnumType__next.exit114.i.i.loopexit, %for.end31.i.i
  %memberidx2.i.i118.i.i.promoted = phi i64 [ %memberidx2.i.i118.i.i.promoted572, %MapIterator_string_CGEnumType__next.exit114.i.i.loopexit ], [ %408, %for.end31.i.i ]
  %memberidx1.i.i117.i.i.promoted442 = phi ptr [ %incdec.ptr.i108.i.i, %MapIterator_string_CGEnumType__next.exit114.i.i.loopexit ], [ %405, %for.end31.i.i ]
  %storemerge386438 = icmp slt i64 %407, 1
  br i1 %storemerge386438, label %CodeGen_destroy.exit.i, label %for.body39.i.i

for.body39.i.i:                                   ; preds = %MapIterator_string_CGEnumType__next.exit114.i.i, %MapIterator_string_CGEnumType__next.exit.i.i
  %415 = phi i64 [ %427, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %memberidx2.i.i118.i.i.promoted, %MapIterator_string_CGEnumType__next.exit114.i.i ]
  %incdec.ptr.i85.i.i.lcssa444 = phi ptr [ %incdec.ptr.i85.i.i.lcssa443, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %memberidx1.i.i117.i.i.promoted442, %MapIterator_string_CGEnumType__next.exit114.i.i ]
  %storemerge401439.in = phi i64 [ %storemerge401439, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %407, %MapIterator_string_CGEnumType__next.exit114.i.i ]
  %storemerge401439 = add nsw i64 %storemerge401439.in, -1
  %enum_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i85.i.i.lcssa444, i64 -1
  %enum_entry.0.i.i = load ptr, ptr %enum_entry.0.i.i.in, align 8
  %416 = load ptr, ptr %enum_entry.0.i.i, align 8
  %memberidx.i91.i.i = getelementptr inbounds %string, ptr %416, i64 0, i32 1
  %417 = load ptr, ptr %memberidx.i91.i.i, align 8
  call void @free(ptr %417)
  call void @free(ptr %416)
  %memberidx44.i.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %enum_entry.0.i.i, i64 0, i32 1
  %418 = load ptr, ptr %memberidx44.i.i, align 8
  call void @free(ptr %418)
  %419 = add nsw i64 %415, -1
  %420 = icmp sgt i64 %415, 0
  br i1 %420, label %while.entry.i87.i.i.preheader, label %MapIterator_string_CGEnumType__next.exit.i.i

while.entry.i87.i.i.preheader:                    ; preds = %for.body39.i.i
  %421 = shl i64 %415, 3
  %uglygep = getelementptr i8, ptr %incdec.ptr.i85.i.i.lcssa444, i64 %421
  br label %while.entry.i87.i.i

while.entry.i87.i.i:                              ; preds = %while.entry.i87.i.i.preheader, %ifend.i90.i.i
  %422 = phi i64 [ %425, %ifend.i90.i.i ], [ %419, %while.entry.i87.i.i.preheader ]
  %423 = phi ptr [ %incdec.ptr.i85.i.i, %ifend.i90.i.i ], [ %incdec.ptr.i85.i.i.lcssa444, %while.entry.i87.i.i.preheader ]
  %incdec.ptr.i85.i.i = getelementptr inbounds ptr, ptr %423, i64 1
  %424 = load ptr, ptr %423, align 8
  %.not.i86.i.i = icmp eq ptr %424, null
  br i1 %.not.i86.i.i, label %ifend.i90.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

ifend.i90.i.i:                                    ; preds = %while.entry.i87.i.i
  %425 = add nsw i64 %422, -1
  %426 = icmp sgt i64 %422, 0
  br i1 %426, label %while.entry.i87.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

MapIterator_string_CGEnumType__next.exit.i.i:     ; preds = %ifend.i90.i.i, %while.entry.i87.i.i, %for.body39.i.i
  %427 = phi i64 [ %419, %for.body39.i.i ], [ -1, %ifend.i90.i.i ], [ %422, %while.entry.i87.i.i ]
  %incdec.ptr.i85.i.i.lcssa443 = phi ptr [ %incdec.ptr.i85.i.i.lcssa444, %for.body39.i.i ], [ %uglygep, %ifend.i90.i.i ], [ %incdec.ptr.i85.i.i, %while.entry.i87.i.i ]
  %storemerge386 = icmp slt i64 %storemerge401439.in, 2
  br i1 %storemerge386, label %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, label %for.body39.i.i

for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge:  ; preds = %MapIterator_string_CGEnumType__next.exit.i.i
  store ptr %incdec.ptr.i85.i.i.lcssa443, ptr %memberidx1.i.i117.i.i, align 8
  store i64 %427, ptr %memberidx2.i.i118.i.i, align 4
  %.pre573 = load ptr, ptr %403, align 8
  br label %CodeGen_destroy.exit.i

CodeGen_destroy.exit.i:                           ; preds = %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, %MapIterator_string_CGEnumType__next.exit114.i.i
  %428 = phi ptr [ %.pre573, %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge ], [ %405, %MapIterator_string_CGEnumType__next.exit114.i.i ]
  call void @free(ptr nonnull %404)
  call void @free(ptr %428)
  call void @free(ptr %403)
  %429 = load ptr, ptr %memberidx.i257, align 8
  %430 = call ptr @malloc(i32 25)
  %memberidx.i.i156.i = getelementptr inbounds %Array_Module_, ptr %429, i64 0, i32 1
  %431 = load ptr, ptr %memberidx.i.i156.i, align 8
  %memberidx1.i.i157.i = getelementptr inbounds %Array_Module_, ptr %429, i64 0, i32 2
  %432 = load i64, ptr %memberidx1.i.i157.i, align 4
  %memberidx1.i.i.i158.i = getelementptr inbounds %ArrayIterator_Module_, ptr %430, i64 0, i32 1
  %memberidx2.i.i.i159.i = getelementptr inbounds %ArrayIterator_Module_, ptr %430, i64 0, i32 3
  store ptr %431, ptr %memberidx2.i.i.i159.i, align 8
  %memberidx3.i.i.i160.i = getelementptr inbounds %ArrayIterator_Module_, ptr %430, i64 0, i32 2
  store i64 %432, ptr %memberidx3.i.i.i160.i, align 4
  store i64 1, ptr %memberidx1.i.i.i158.i, align 4
  %433 = icmp slt i64 %432, 1
  %module.0.i.i434 = load ptr, ptr %431, align 8
  store i1 %433, ptr %430, align 1
  br i1 %433, label %Program___del__.exit.i, label %for.body.i166.i

for.body.i166.i:                                  ; preds = %CodeGen_destroy.exit.i, %Module___del__.exit.i.i
  %434 = phi i64 [ %550, %Module___del__.exit.i.i ], [ 1, %CodeGen_destroy.exit.i ]
  %module.0.i.i435 = phi ptr [ %module.0.i.i, %Module___del__.exit.i.i ], [ %module.0.i.i434, %CodeGen_destroy.exit.i ]
  %memberidx.i9.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 4
  %435 = load ptr, ptr %memberidx.i9.i.i, align 8
  %436 = call ptr @malloc(i32 25)
  %memberidx.i.i.i163.i = getelementptr inbounds %Array_Function_, ptr %435, i64 0, i32 1
  %437 = load ptr, ptr %memberidx.i.i.i163.i, align 8
  %memberidx1.i.i10.i.i = getelementptr inbounds %Array_Function_, ptr %435, i64 0, i32 2
  %438 = load i64, ptr %memberidx1.i.i10.i.i, align 4
  %439 = icmp slt i64 %438, 1
  br i1 %439, label %for.end.i.i.i, label %for.body.i.i168.i

for.body.i.i168.i:                                ; preds = %for.body.i166.i, %for.body.i.i168.i
  %440 = phi i64 [ %441, %for.body.i.i168.i ], [ 1, %for.body.i166.i ]
  %func.0.i.i.i403.in = phi ptr [ %442, %for.body.i.i168.i ], [ %437, %for.body.i166.i ]
  %func.0.i.i.i403 = load ptr, ptr %func.0.i.i.i403.in, align 8
  call void @free(ptr %func.0.i.i.i403)
  %441 = add nuw nsw i64 %440, 1
  %442 = getelementptr inbounds ptr, ptr %437, i64 %440
  %.not580 = icmp slt i64 %440, %438
  br i1 %.not580, label %for.body.i.i168.i, label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i168.i, %for.body.i166.i
  call void @free(ptr nonnull %436)
  %memberidx8.i.i169.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 1
  %443 = load ptr, ptr %memberidx8.i.i169.i, align 8
  %444 = call ptr @malloc(i32 25)
  %memberidx.i94.i.i.i = getelementptr inbounds %Array_Var_, ptr %443, i64 0, i32 1
  %445 = load ptr, ptr %memberidx.i94.i.i.i, align 8
  %memberidx1.i95.i.i.i = getelementptr inbounds %Array_Var_, ptr %443, i64 0, i32 2
  %446 = load i64, ptr %memberidx1.i95.i.i.i, align 4
  %447 = icmp slt i64 %446, 1
  br i1 %447, label %for.end12.i.i.i, label %for.body10.i.i.i

for.body10.i.i.i:                                 ; preds = %for.end.i.i.i, %for.body10.i.i.i
  %448 = phi i64 [ %449, %for.body10.i.i.i ], [ 1, %for.end.i.i.i ]
  %var.0.i.i.i405.in = phi ptr [ %450, %for.body10.i.i.i ], [ %445, %for.end.i.i.i ]
  %var.0.i.i.i405 = load ptr, ptr %var.0.i.i.i405.in, align 8
  call void @free(ptr %var.0.i.i.i405)
  %449 = add nuw nsw i64 %448, 1
  %450 = getelementptr inbounds ptr, ptr %445, i64 %448
  %.not581 = icmp slt i64 %448, %446
  br i1 %.not581, label %for.body10.i.i.i, label %for.end12.i.i.i

for.end12.i.i.i:                                  ; preds = %for.body10.i.i.i, %for.end.i.i.i
  call void @free(ptr nonnull %444)
  %memberidx15.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 3
  %451 = load ptr, ptr %memberidx15.i.i.i, align 8
  %452 = call ptr @malloc(i32 25)
  %memberidx.i107.i.i.i = getelementptr inbounds %Array_Class_, ptr %451, i64 0, i32 1
  %453 = load ptr, ptr %memberidx.i107.i.i.i, align 8
  %memberidx1.i108.i.i.i = getelementptr inbounds %Array_Class_, ptr %451, i64 0, i32 2
  %454 = load i64, ptr %memberidx1.i108.i.i.i, align 4
  %memberidx1.i.i109.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %452, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i109.i.i.i, align 4
  %memberidx2.i.i110.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %452, i64 0, i32 3
  store ptr %453, ptr %memberidx2.i.i110.i.i.i, align 8
  %455 = icmp slt i64 %454, 1
  br i1 %455, label %for.end19.i.i.i, label %for.body17.i.i.i

for.body17.i.i.i:                                 ; preds = %for.end12.i.i.i, %Class___del__.exit.i.i.i
  %456 = phi i64 [ %481, %Class___del__.exit.i.i.i ], [ 1, %for.end12.i.i.i ]
  %mod_class.0.i.i.i417.in = phi ptr [ %482, %Class___del__.exit.i.i.i ], [ %453, %for.end12.i.i.i ]
  %mod_class.0.i.i.i417 = load ptr, ptr %mod_class.0.i.i.i417.in, align 8
  %457 = load ptr, ptr %mod_class.0.i.i.i417, align 8
  call void @free(ptr %457)
  %memberidx2.i116.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i417, i64 0, i32 1
  %458 = load ptr, ptr %memberidx2.i116.i.i.i, align 8
  %memberidx.i.i.i.i170.i = getelementptr inbounds %string, ptr %458, i64 0, i32 1
  %459 = load ptr, ptr %memberidx.i.i.i.i170.i, align 8
  call void @free(ptr %459)
  call void @free(ptr %458)
  %memberidx3.i.i12.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i417, i64 0, i32 2
  %460 = load ptr, ptr %memberidx3.i.i12.i.i, align 8
  %.not.i.i.i.i = icmp eq ptr %460, null
  br i1 %.not.i.i.i.i, label %for.entry.i.i.i.i, label %if.entry.i.i.i.i

if.entry.i.i.i.i:                                 ; preds = %for.body17.i.i.i
  call void @free(ptr nonnull %460)
  br label %for.entry.i.i.i.i

for.entry.i.i.i.i:                                ; preds = %if.entry.i.i.i.i, %for.body17.i.i.i
  %memberidx5.i117.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i417, i64 0, i32 4
  %461 = load ptr, ptr %memberidx5.i117.i.i.i, align 8
  %462 = call ptr @malloc(i32 25)
  %memberidx.i29.i.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %461, i64 0, i32 1
  %463 = load ptr, ptr %memberidx.i29.i.i.i.i, align 8
  %memberidx1.i.i118.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %461, i64 0, i32 2
  %464 = load i64, ptr %memberidx1.i.i118.i.i.i, align 4
  %465 = icmp slt i64 %464, 1
  br i1 %465, label %for.end.i.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.entry.i.i.i.i, %for.body.i.i.i.i
  %466 = phi i64 [ %467, %for.body.i.i.i.i ], [ 1, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i409.in = phi ptr [ %468, %for.body.i.i.i.i ], [ %463, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i409 = load ptr, ptr %field.0.i.i.i.i409.in, align 8
  call void @free(ptr %field.0.i.i.i.i409)
  %467 = add nuw nsw i64 %466, 1
  %468 = getelementptr inbounds ptr, ptr %463, i64 %466
  %.not582 = icmp slt i64 %466, %464
  br i1 %.not582, label %for.body.i.i.i.i, label %for.end.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %for.body.i.i.i.i, %for.entry.i.i.i.i
  call void @free(ptr nonnull %462)
  %memberidx8.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i417, i64 0, i32 5
  %469 = load ptr, ptr %memberidx8.i.i.i.i, align 8
  %470 = call ptr @malloc(i32 25)
  %memberidx.i34.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %469, i64 0, i32 1
  %471 = load ptr, ptr %memberidx.i34.i.i.i.i, align 8
  %memberidx1.i35.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %469, i64 0, i32 2
  %472 = load i64, ptr %memberidx1.i35.i.i.i.i, align 4
  %473 = icmp slt i64 %472, 1
  br i1 %473, label %Class___del__.exit.i.i.i, label %for.body10.i.i.i.i

for.body10.i.i.i.i:                               ; preds = %for.end.i.i.i.i, %for.body10.i.i.i.i
  %474 = phi i64 [ %475, %for.body10.i.i.i.i ], [ 1, %for.end.i.i.i.i ]
  %method.0.i.i.i.i413.in = phi ptr [ %476, %for.body10.i.i.i.i ], [ %471, %for.end.i.i.i.i ]
  %method.0.i.i.i.i413 = load ptr, ptr %method.0.i.i.i.i413.in, align 8
  call void @free(ptr %method.0.i.i.i.i413)
  %475 = add nuw nsw i64 %474, 1
  %476 = getelementptr inbounds ptr, ptr %471, i64 %474
  %.not583 = icmp slt i64 %474, %472
  br i1 %.not583, label %for.body10.i.i.i.i, label %Class___del__.exit.i.i.i

Class___del__.exit.i.i.i:                         ; preds = %for.body10.i.i.i.i, %for.end.i.i.i.i
  call void @free(ptr nonnull %470)
  %memberidx14.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i417, i64 0, i32 6
  %477 = load ptr, ptr %memberidx14.i.i.i.i, align 8
  %478 = load ptr, ptr %477, align 8
  call void @free(ptr %478)
  call void @free(ptr %477)
  %memberidx15.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i417, i64 0, i32 7
  %479 = load ptr, ptr %memberidx15.i.i.i.i, align 8
  %480 = load ptr, ptr %479, align 8
  call void @free(ptr %480)
  call void @free(ptr %479)
  call void @free(ptr %mod_class.0.i.i.i417)
  %481 = add nuw nsw i64 %456, 1
  store i64 %481, ptr %memberidx1.i.i109.i.i.i, align 4
  %482 = getelementptr inbounds ptr, ptr %453, i64 %456
  %.not584 = icmp slt i64 %456, %454
  br i1 %.not584, label %for.body17.i.i.i, label %for.end19.i.i.i

for.end19.i.i.i:                                  ; preds = %Class___del__.exit.i.i.i, %for.end12.i.i.i
  call void @free(ptr nonnull %452)
  %memberidx22.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 6
  %483 = load ptr, ptr %memberidx22.i.i.i, align 8
  %484 = call ptr @malloc(i32 25)
  %memberidx.i123.i.i.i = getelementptr inbounds %Array_Enum_, ptr %483, i64 0, i32 1
  %485 = load ptr, ptr %memberidx.i123.i.i.i, align 8
  %memberidx1.i124.i.i.i = getelementptr inbounds %Array_Enum_, ptr %483, i64 0, i32 2
  %486 = load i64, ptr %memberidx1.i124.i.i.i, align 4
  %memberidx1.i.i125.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %484, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i125.i.i.i, align 4
  %memberidx2.i.i126.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %484, i64 0, i32 3
  store ptr %485, ptr %memberidx2.i.i126.i.i.i, align 8
  %487 = icmp slt i64 %486, 1
  br i1 %487, label %for.end26.i.i.i, label %for.body24.i.i.i

for.body24.i.i.i:                                 ; preds = %for.end19.i.i.i, %Enum___del__.exit.i.i.i
  %488 = phi i64 [ %508, %Enum___del__.exit.i.i.i ], [ 1, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i424.in = phi ptr [ %509, %Enum___del__.exit.i.i.i ], [ %485, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i424 = load ptr, ptr %mod_enum.0.i.i.i424.in, align 8
  %489 = load ptr, ptr %mod_enum.0.i.i.i424, align 8
  call void @free(ptr %489)
  %memberidx1.i131.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i424, i64 0, i32 1
  %490 = load ptr, ptr %memberidx1.i131.i.i.i, align 8
  %memberidx.i.i132.i.i.i = getelementptr inbounds %string, ptr %490, i64 0, i32 1
  %491 = load ptr, ptr %memberidx.i.i132.i.i.i, align 8
  call void @free(ptr %491)
  call void @free(ptr %490)
  %memberidx2.i133.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i424, i64 0, i32 2
  %492 = load ptr, ptr %memberidx2.i133.i.i.i, align 8
  %493 = call ptr @malloc(i32 25)
  %memberidx.i13.i.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %492, i64 0, i32 1
  %494 = load ptr, ptr %memberidx.i13.i.i.i.i, align 8
  %memberidx1.i.i134.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %492, i64 0, i32 2
  %495 = load i64, ptr %memberidx1.i.i134.i.i.i, align 4
  %496 = icmp slt i64 %495, 1
  br i1 %496, label %Enum___del__.exit.i.i.i, label %for.body.i143.i.i.i

for.body.i143.i.i.i:                              ; preds = %for.body24.i.i.i, %for.body.i143.i.i.i
  %497 = phi i64 [ %502, %for.body.i143.i.i.i ], [ 1, %for.body24.i.i.i ]
  %field.0.i141.i.i.i420.in = phi ptr [ %503, %for.body.i143.i.i.i ], [ %494, %for.body24.i.i.i ]
  %field.0.i141.i.i.i420 = load ptr, ptr %field.0.i141.i.i.i420.in, align 8
  %498 = load ptr, ptr %field.0.i141.i.i.i420, align 8
  call void @free(ptr %498)
  %memberidx1.i15.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i141.i.i.i420, i64 0, i32 1
  %499 = load ptr, ptr %memberidx1.i15.i.i.i.i, align 8
  %memberidx.i.i.i.i.i.i = getelementptr inbounds %string, ptr %499, i64 0, i32 1
  %500 = load ptr, ptr %memberidx.i.i.i.i.i.i, align 8
  call void @free(ptr %500)
  call void @free(ptr %499)
  %memberidx2.i16.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i141.i.i.i420, i64 0, i32 2
  %501 = load ptr, ptr %memberidx2.i16.i.i.i.i, align 8
  call void @free(ptr %501)
  call void @free(ptr %field.0.i141.i.i.i420)
  %502 = add nuw nsw i64 %497, 1
  %503 = getelementptr inbounds ptr, ptr %494, i64 %497
  %.not585 = icmp slt i64 %497, %495
  br i1 %.not585, label %for.body.i143.i.i.i, label %Enum___del__.exit.i.i.i

Enum___del__.exit.i.i.i:                          ; preds = %for.body.i143.i.i.i, %for.body24.i.i.i
  call void @free(ptr nonnull %493)
  %504 = load ptr, ptr %memberidx2.i133.i.i.i, align 8
  %memberidx.i20.i.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %504, i64 0, i32 1
  %505 = load ptr, ptr %memberidx.i20.i.i.i.i, align 8
  call void @free(ptr %505)
  call void @free(ptr %504)
  %memberidx5.i144.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i424, i64 0, i32 3
  %506 = load ptr, ptr %memberidx5.i144.i.i.i, align 8
  %507 = load ptr, ptr %506, align 8
  call void @free(ptr %507)
  call void @free(ptr %506)
  call void @free(ptr %mod_enum.0.i.i.i424)
  %508 = add nuw nsw i64 %488, 1
  store i64 %508, ptr %memberidx1.i.i125.i.i.i, align 4
  %509 = getelementptr inbounds ptr, ptr %485, i64 %488
  %.not586 = icmp slt i64 %488, %486
  br i1 %.not586, label %for.body24.i.i.i, label %for.end26.i.i.i

for.end26.i.i.i:                                  ; preds = %Enum___del__.exit.i.i.i, %for.end19.i.i.i
  call void @free(ptr nonnull %484)
  %memberidx29.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 8
  %510 = load ptr, ptr %memberidx29.i.i.i, align 8
  %511 = call ptr @malloc(i32 25)
  %memberidx.i149.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %510, i64 0, i32 1
  %512 = load ptr, ptr %memberidx.i149.i.i.i, align 8
  %memberidx1.i150.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %510, i64 0, i32 2
  %513 = load i64, ptr %memberidx1.i150.i.i.i, align 4
  %514 = icmp slt i64 %513, 1
  br i1 %514, label %for.end33.i.i.i, label %for.body31.i.i.i

for.body31.i.i.i:                                 ; preds = %for.end26.i.i.i, %for.body31.i.i.i
  %515 = phi i64 [ %516, %for.body31.i.i.i ], [ 1, %for.end26.i.i.i ]
  %global_const.0.i.i.i427.in = phi ptr [ %517, %for.body31.i.i.i ], [ %512, %for.end26.i.i.i ]
  %global_const.0.i.i.i427 = load ptr, ptr %global_const.0.i.i.i427.in, align 8
  call void @free(ptr %global_const.0.i.i.i427)
  %516 = add nuw nsw i64 %515, 1
  %517 = getelementptr inbounds ptr, ptr %512, i64 %515
  %.not587 = icmp slt i64 %515, %513
  br i1 %.not587, label %for.body31.i.i.i, label %for.end33.i.i.i

for.end33.i.i.i:                                  ; preds = %for.body31.i.i.i, %for.end26.i.i.i
  call void @free(ptr nonnull %511)
  %memberidx36.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 9
  %518 = load ptr, ptr %memberidx36.i.i.i, align 8
  %519 = call ptr @malloc(i32 25)
  %memberidx.i160.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %518, i64 0, i32 1
  %520 = load ptr, ptr %memberidx.i160.i.i.i, align 8
  %memberidx1.i161.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %518, i64 0, i32 2
  %521 = load i64, ptr %memberidx1.i161.i.i.i, align 4
  %522 = icmp slt i64 %521, 1
  br i1 %522, label %Module___del__.exit.i.i, label %for.body38.i.i.i

for.body38.i.i.i:                                 ; preds = %for.end33.i.i.i, %for.body38.i.i.i
  %523 = phi i64 [ %524, %for.body38.i.i.i ], [ 1, %for.end33.i.i.i ]
  %global_var.0.i.i.i431.in = phi ptr [ %525, %for.body38.i.i.i ], [ %520, %for.end33.i.i.i ]
  %global_var.0.i.i.i431 = load ptr, ptr %global_var.0.i.i.i431.in, align 8
  call void @free(ptr %global_var.0.i.i.i431)
  %524 = add nuw nsw i64 %523, 1
  %525 = getelementptr inbounds ptr, ptr %520, i64 %523
  %.not588 = icmp slt i64 %523, %521
  br i1 %.not588, label %for.body38.i.i.i, label %Module___del__.exit.i.i

Module___del__.exit.i.i:                          ; preds = %for.body38.i.i.i, %for.end33.i.i.i
  call void @free(ptr nonnull %519)
  %memberidx42.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 7
  %526 = load ptr, ptr %memberidx42.i.i.i, align 8
  %memberidx43.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 5
  %527 = load ptr, ptr %memberidx43.i.i.i, align 8
  %memberidx44.i.i.i = getelementptr inbounds %ScopeId, ptr %527, i64 0, i32 1
  %528 = load i64, ptr %memberidx44.i.i.i, align 4
  %memberidx.i171.i.i.i = getelementptr inbounds %Array_Scope_, ptr %526, i64 0, i32 1
  %529 = load ptr, ptr %memberidx.i171.i.i.i, align 8
  %530 = getelementptr inbounds ptr, ptr %529, i64 %528
  %531 = load ptr, ptr %530, align 8
  call fastcc void @Scope___del__(ptr %531)
  call void @free(ptr %531)
  %532 = load ptr, ptr %module.0.i.i435, align 8
  %memberidx.i172.i.i.i = getelementptr inbounds %string, ptr %532, i64 0, i32 1
  %533 = load ptr, ptr %memberidx.i172.i.i.i, align 8
  call void @free(ptr %533)
  call void @free(ptr %532)
  %534 = load ptr, ptr %memberidx.i9.i.i, align 8
  %memberidx.i173.i.i.i = getelementptr inbounds %Array_Function_, ptr %534, i64 0, i32 1
  %535 = load ptr, ptr %memberidx.i173.i.i.i, align 8
  call void @free(ptr %535)
  call void @free(ptr %534)
  %536 = load ptr, ptr %memberidx8.i.i169.i, align 8
  %memberidx.i174.i.i.i = getelementptr inbounds %Array_Var_, ptr %536, i64 0, i32 1
  %537 = load ptr, ptr %memberidx.i174.i.i.i, align 8
  call void @free(ptr %537)
  call void @free(ptr %536)
  %538 = load ptr, ptr %memberidx15.i.i.i, align 8
  %memberidx.i175.i.i.i = getelementptr inbounds %Array_Class_, ptr %538, i64 0, i32 1
  %539 = load ptr, ptr %memberidx.i175.i.i.i, align 8
  call void @free(ptr %539)
  call void @free(ptr %538)
  %540 = load ptr, ptr %memberidx22.i.i.i, align 8
  %memberidx.i115.i.i.i = getelementptr inbounds %Array_Enum_, ptr %540, i64 0, i32 1
  %541 = load ptr, ptr %memberidx.i115.i.i.i, align 8
  call void @free(ptr %541)
  call void @free(ptr %540)
  %542 = load ptr, ptr %memberidx42.i.i.i, align 8
  %memberidx.i106.i.i.i = getelementptr inbounds %Array_Scope_, ptr %542, i64 0, i32 1
  %543 = load ptr, ptr %memberidx.i106.i.i.i, align 8
  call void @free(ptr %543)
  call void @free(ptr %542)
  %544 = load ptr, ptr %memberidx29.i.i.i, align 8
  %memberidx.i102.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %544, i64 0, i32 1
  %545 = load ptr, ptr %memberidx.i102.i.i.i, align 8
  call void @free(ptr %545)
  call void @free(ptr %544)
  %546 = load ptr, ptr %memberidx36.i.i.i, align 8
  %memberidx.i93.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %546, i64 0, i32 1
  %547 = load ptr, ptr %memberidx.i93.i.i.i, align 8
  call void @free(ptr %547)
  call void @free(ptr %546)
  %memberidx53.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i435, i64 0, i32 2
  %548 = load ptr, ptr %memberidx53.i.i.i, align 8
  %memberidx.i89.i.i.i = getelementptr inbounds %Array_Const_, ptr %548, i64 0, i32 1
  %549 = load ptr, ptr %memberidx.i89.i.i.i, align 8
  call void @free(ptr %549)
  call void @free(ptr %548)
  call void @free(ptr %module.0.i.i435)
  %550 = add nuw nsw i64 %434, 1
  store i64 %550, ptr %memberidx1.i.i.i158.i, align 4
  %551 = getelementptr inbounds ptr, ptr %431, i64 %434
  %552 = icmp sge i64 %434, %432
  %module.0.i.i = load ptr, ptr %551, align 8
  store i1 %552, ptr %430, align 1
  br i1 %552, label %Program___del__.exit.i, label %for.body.i166.i

Program___del__.exit.i:                           ; preds = %Module___del__.exit.i.i, %CodeGen_destroy.exit.i
  call void @free(ptr nonnull %430)
  %553 = load ptr, ptr %memberidx.i257, align 8
  %memberidx.i8.i.i = getelementptr inbounds %Array_Module_, ptr %553, i64 0, i32 1
  %554 = load ptr, ptr %memberidx.i8.i.i, align 8
  call void @free(ptr %554)
  call void @free(ptr %553)
  call void @free(ptr %common.ret.op.i)
  %555 = call ptr @malloc(i32 32)
  %556 = load ptr, ptr %4, align 8
  store ptr @VTableGeneratedModule, ptr %555, align 8
  %memberidx.i79.i = getelementptr inbounds %GeneratedModule, ptr %555, i64 0, i32 1
  store ptr %556, ptr %memberidx.i79.i, align 8
  %memberidx1.i.i269 = getelementptr inbounds %GeneratedModule, ptr %555, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i269, align 8
  %557 = call i1 @LLVMVerifyModule(ptr %556, i64 1, ptr nonnull %memberidx1.i.i269)
  br i1 %557, label %if.entry.i.i, label %CodeGen_codegen.exit

if.entry.i.i:                                     ; preds = %Program___del__.exit.i
  %558 = load ptr, ptr %555, align 8
  %memberidx5.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %558, i64 0, i32 4
  %559 = load ptr, ptr %memberidx5.i.i, align 8
  %560 = call ptr @malloc(i32 8)
  store i64 7812670522611888741, ptr %560, align 8
  %561 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %561, align 8
  %memberidx.i.i.i.i270 = getelementptr inbounds %string, ptr %561, i64 0, i32 1
  store ptr %560, ptr %memberidx.i.i.i.i270, align 8
  %memberidx1.i.i.i.i271 = getelementptr inbounds %string, ptr %561, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i271, align 4
  %memberidx2.i.i.i.i272 = getelementptr inbounds %string, ptr %561, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i.i.i272, align 4
  call void %559(ptr nonnull %555, ptr nonnull %561)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %562 = load ptr, ptr %memberidx1.i.i269, align 8
  %563 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %562)
  %564 = trunc i64 %563 to i32
  %565 = call ptr @malloc(i32 %564)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %565, ptr align 8 %562, i64 %563, i1 false)
  %566 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %566, align 8
  %memberidx.i.i15.i.i = getelementptr inbounds %string, ptr %566, i64 0, i32 1
  store ptr %565, ptr %memberidx.i.i15.i.i, align 8
  %memberidx1.i.i16.i.i = getelementptr inbounds %string, ptr %566, i64 0, i32 2
  store i64 %563, ptr %memberidx1.i.i16.i.i, align 4
  %memberidx2.i.i17.i.i = getelementptr inbounds %string, ptr %566, i64 0, i32 3
  store i64 %563, ptr %memberidx2.i.i17.i.i, align 4
  %567 = load ptr, ptr %memberidx1.i.i269, align 8
  call void @LLVMDisposeMessage(ptr %567)
  %568 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %569 = call ptr %568(ptr nonnull %566)
  %570 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %569)
  %571 = load ptr, ptr %3, align 8
  %572 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %572, align 8
  %memberidx.i.i12.i.i = getelementptr inbounds %string, ptr %572, i64 0, i32 1
  store ptr %571, ptr %memberidx.i.i12.i.i, align 8
  %memberidx1.i.i13.i.i = getelementptr inbounds %string, ptr %572, i64 0, i32 2
  store i64 %570, ptr %memberidx1.i.i13.i.i, align 4
  %memberidx2.i.i14.i.i = getelementptr inbounds %string, ptr %572, i64 0, i32 3
  store i64 %570, ptr %memberidx2.i.i14.i.i, align 4
  call void @free(ptr %569)
  %573 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %573, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %574 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %574, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %string, ptr %574, i64 0, i32 1
  store ptr %573, ptr %memberidx.i.i.i.i.i, align 8
  %memberidx1.i.i.i.i.i = getelementptr inbounds %string, ptr %574, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %string, ptr %574, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i.i, align 4
  %575 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %576 = call ptr %575(ptr nonnull %574)
  %577 = load i64, ptr %memberidx1.i.i.i.i.i, align 4
  %578 = call i64 @write(i64 1, ptr %576, i64 %577)
  %579 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  call void @free(ptr %579)
  call void @free(ptr %574)
  %580 = load ptr, ptr %572, align 8
  %memberidx.i.i.i18.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %580, i64 0, i32 3
  %581 = load ptr, ptr %memberidx.i.i.i18.i.i, align 8
  %582 = call ptr %581(ptr nonnull %572)
  %583 = load i64, ptr %memberidx1.i.i13.i.i, align 4
  %584 = call i64 @write(i64 1, ptr %582, i64 %583)
  %585 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %586 = load ptr, ptr %memberidx.i.i12.i.i, align 8
  call void @free(ptr %586)
  call void @free(ptr %572)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %CodeGen_codegen.exit

CodeGen_codegen.exit:                             ; preds = %Program___del__.exit.i, %if.entry.i.i
  call void @LLVM_InitializeAllTargetInfos()
  call void @LLVM_InitializeAllTargets()
  call void @LLVM_InitializeAllTargetMCs()
  call void @LLVM_InitializeAllAsmParsers()
  call void @LLVM_InitializeAllAsmPrinters()
  call void @llvm.lifetime.end.p0(i64 81, ptr nonnull %4)
  %587 = load ptr, ptr %555, align 8
  %588 = load ptr, ptr %587, align 8
  %589 = load i64, ptr %memberidx.i207, align 8
  call void %588(ptr nonnull %555, i64 %589)
  %590 = load ptr, ptr %555, align 8
  %memberidx38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %590, i64 0, i32 2
  %591 = load ptr, ptr %memberidx38, align 8
  %592 = load ptr, ptr %memberidx.i185, align 8
  call void %591(ptr nonnull %555, ptr %592)
  %593 = load ptr, ptr %memberidx.i144, align 8
  %594 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %594, ptr noundef nonnull align 8 dereferenceable(3) @296, i64 3, i1 false)
  %595 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %595, align 8
  %memberidx.i.i275 = getelementptr inbounds %string, ptr %595, i64 0, i32 1
  store ptr %594, ptr %memberidx.i.i275, align 8
  %memberidx1.i.i276 = getelementptr inbounds %string, ptr %595, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i276, align 4
  %memberidx2.i.i277 = getelementptr inbounds %string, ptr %595, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i277, align 4
  %memberidx.i278 = getelementptr inbounds %string, ptr %593, i64 0, i32 2
  %596 = load i64, ptr %memberidx.i278, align 4
  %.not.i = icmp eq i64 %596, 3
  br i1 %.not.i, label %ifend.i283, label %else42

ifend.i283:                                       ; preds = %CodeGen_codegen.exit
  %memberidx2.i281 = getelementptr inbounds %string, ptr %593, i64 0, i32 1
  %597 = load ptr, ptr %memberidx2.i281, align 8
  %598 = call i64 @memcmp(ptr %597, ptr nonnull %594, i64 3)
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %if.entry41, label %else42

if.entry41:                                       ; preds = %ifend.i283
  %600 = call ptr @malloc(i32 13)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %600, ptr noundef nonnull align 8 dereferenceable(13) @297, i64 13, i1 false)
  %601 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %601, align 8
  %memberidx.i.i284 = getelementptr inbounds %string, ptr %601, i64 0, i32 1
  store ptr %600, ptr %memberidx.i.i284, align 8
  %memberidx1.i.i285 = getelementptr inbounds %string, ptr %601, i64 0, i32 2
  store i64 13, ptr %memberidx1.i.i285, align 4
  %memberidx2.i.i286 = getelementptr inbounds %string, ptr %601, i64 0, i32 3
  store i64 13, ptr %memberidx2.i.i286, align 4
  %602 = load ptr, ptr %555, align 8
  %memberidx44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %602, i64 0, i32 3
  %603 = load ptr, ptr %memberidx44, align 8
  call void %603(ptr nonnull %555, ptr nonnull %601)
  %604 = load ptr, ptr %memberidx.i196, align 8
  %.not = icmp eq ptr %604, null
  br i1 %.not, label %false_block, label %true_block

else42:                                           ; preds = %CodeGen_codegen.exit, %ifend.i283
  %605 = load ptr, ptr %memberidx.i144, align 8
  %606 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %606, ptr noundef nonnull align 8 dereferenceable(7) @302, i64 7, i1 false)
  %607 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %607, align 8
  %memberidx.i.i287 = getelementptr inbounds %string, ptr %607, i64 0, i32 1
  store ptr %606, ptr %memberidx.i.i287, align 8
  %memberidx1.i.i288 = getelementptr inbounds %string, ptr %607, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i288, align 4
  %memberidx2.i.i289 = getelementptr inbounds %string, ptr %607, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i289, align 4
  %memberidx.i290 = getelementptr inbounds %string, ptr %605, i64 0, i32 2
  %608 = load i64, ptr %memberidx.i290, align 4
  %.not.i292 = icmp eq i64 %608, 7
  br i1 %.not.i292, label %ifend.i296, label %else62

ifend.i296:                                       ; preds = %else42
  %memberidx2.i294 = getelementptr inbounds %string, ptr %605, i64 0, i32 1
  %609 = load ptr, ptr %memberidx2.i294, align 8
  %610 = call i64 @memcmp(ptr %609, ptr nonnull %606, i64 7)
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %if.entry61, label %else62

ifend43:                                          ; preds = %if.entry82, %else83, %if.entry75, %if.entry68, %if.entry61, %end
  %code.0 = phi i64 [ 0, %end ], [ 0, %if.entry61 ], [ 0, %if.entry68 ], [ 0, %if.entry75 ], [ 0, %if.entry82 ], [ %727, %else83 ]
  tail call void @free(ptr %171)
  br label %common.ret

true_block:                                       ; preds = %if.entry41
  %612 = load ptr, ptr %604, align 8
  %memberidx47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %612, i64 0, i32 5
  %613 = load ptr, ptr %memberidx47, align 8
  %614 = call ptr %613(ptr nonnull %604)
  %615 = alloca ptr, align 8
  %616 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %615, ptr nonnull @298, ptr %614)
  %617 = load ptr, ptr %615, align 8
  %618 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %618, align 8
  %memberidx.i298 = getelementptr inbounds %string, ptr %618, i64 0, i32 1
  store ptr %617, ptr %memberidx.i298, align 8
  %memberidx1.i299 = getelementptr inbounds %string, ptr %618, i64 0, i32 2
  store i64 %616, ptr %memberidx1.i299, align 4
  %memberidx2.i300 = getelementptr inbounds %string, ptr %618, i64 0, i32 3
  store i64 %616, ptr %memberidx2.i300, align 4
  tail call void @free(ptr %614)
  br label %end

false_block:                                      ; preds = %if.entry41
  %619 = call ptr @malloc(i32 0)
  %620 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %620, align 8
  %memberidx.i.i301 = getelementptr inbounds %string, ptr %620, i64 0, i32 1
  store ptr %619, ptr %memberidx.i.i301, align 8
  %memberidx1.i.i302 = getelementptr inbounds %string, ptr %620, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i302, i8 0, i64 16, i1 false)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %618, %true_block ], [ %620, %false_block ]
  %621 = call ptr @malloc(i32 8)
  store i64 3832894680125762659, ptr %621, align 8
  %622 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %622, align 8
  %memberidx.i.i304 = getelementptr inbounds %string, ptr %622, i64 0, i32 1
  store ptr %621, ptr %memberidx.i.i304, align 8
  %memberidx1.i.i305 = getelementptr inbounds %string, ptr %622, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i305, align 4
  %memberidx2.i.i306 = getelementptr inbounds %string, ptr %622, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i306, align 4
  %623 = load ptr, ptr %ternary, align 8
  %memberidx48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %623, i64 0, i32 5
  %624 = load ptr, ptr %memberidx48, align 8
  %625 = call ptr %624(ptr nonnull %ternary)
  %626 = alloca ptr, align 8
  %627 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %626, ptr nonnull @299, ptr %625)
  %628 = load ptr, ptr %626, align 8
  %629 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %629, align 8
  %memberidx.i307 = getelementptr inbounds %string, ptr %629, i64 0, i32 1
  store ptr %628, ptr %memberidx.i307, align 8
  %memberidx1.i308 = getelementptr inbounds %string, ptr %629, i64 0, i32 2
  store i64 %627, ptr %memberidx1.i308, align 4
  %memberidx2.i309 = getelementptr inbounds %string, ptr %629, i64 0, i32 3
  store i64 %627, ptr %memberidx2.i309, align 4
  tail call void @free(ptr %625)
  %630 = load ptr, ptr %622, align 8
  %memberidx49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %630, i64 0, i32 5
  %631 = load ptr, ptr %memberidx49, align 8
  %632 = call ptr %631(ptr nonnull %622)
  %633 = load ptr, ptr %629, align 8
  %memberidx50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %633, i64 0, i32 5
  %634 = load ptr, ptr %memberidx50, align 8
  %635 = call ptr %634(ptr nonnull %629)
  %636 = load ptr, ptr %memberidx1.i.i193, align 8
  %637 = load ptr, ptr %636, align 8
  %memberidx52 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %637, i64 0, i32 5
  %638 = load ptr, ptr %memberidx52, align 8
  %639 = call ptr %638(ptr nonnull %636)
  %640 = load ptr, ptr %memberidx.i196, align 8
  %641 = load ptr, ptr %640, align 8
  %memberidx54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %641, i64 0, i32 5
  %642 = load ptr, ptr %memberidx54, align 8
  %643 = call ptr %642(ptr nonnull %640)
  %644 = load ptr, ptr %memberidx2.i.i194, align 8
  %645 = load ptr, ptr %644, align 8
  %memberidx56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %645, i64 0, i32 5
  %646 = load ptr, ptr %memberidx56, align 8
  %647 = call ptr %646(ptr nonnull %644)
  %648 = load i64, ptr %64, align 8
  %649 = getelementptr inbounds ptr, ptr @FlagType_names, i64 %648
  %650 = load ptr, ptr %649, align 8
  %651 = alloca ptr, align 8
  %652 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %651, ptr nonnull @300, ptr %639, ptr %643, ptr %647, ptr %650)
  %653 = load ptr, ptr %651, align 8
  %654 = load ptr, ptr %memberidx.i157, align 8
  %655 = load ptr, ptr %654, align 8
  %memberidx59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %655, i64 0, i32 5
  %656 = load ptr, ptr %memberidx59, align 8
  %657 = call ptr %656(ptr nonnull %654)
  %658 = alloca ptr, align 8
  %659 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %658, ptr nonnull @301, ptr %632, ptr %635, ptr %653, ptr %657)
  %660 = load ptr, ptr %658, align 8
  tail call void @free(ptr %632)
  tail call void @free(ptr %635)
  tail call void @free(ptr %639)
  tail call void @free(ptr %643)
  tail call void @free(ptr %647)
  tail call void @free(ptr %653)
  tail call void @free(ptr %657)
  call void @system(ptr %660)
  %661 = load ptr, ptr %memberidx.i307, align 8
  call void @free(ptr %661)
  tail call void @free(ptr nonnull %629)
  %memberidx.i311 = getelementptr inbounds %string, ptr %ternary, i64 0, i32 1
  %662 = load ptr, ptr %memberidx.i311, align 8
  call void @free(ptr %662)
  tail call void @free(ptr nonnull %ternary)
  %663 = load ptr, ptr %memberidx.i.i304, align 8
  call void @free(ptr %663)
  tail call void @free(ptr nonnull %622)
  br label %ifend43

if.entry61:                                       ; preds = %ifend.i296
  %664 = load ptr, ptr %555, align 8
  %memberidx64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %664, i64 0, i32 4
  %665 = load ptr, ptr %memberidx64, align 8
  %666 = load ptr, ptr %memberidx.i157, align 8
  %667 = load ptr, ptr %666, align 8
  %memberidx66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %667, i64 0, i32 5
  %668 = load ptr, ptr %memberidx66, align 8
  %669 = call ptr %668(ptr nonnull %666)
  %670 = alloca ptr, align 8
  %671 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %670, ptr nonnull @6, ptr %669)
  %672 = load ptr, ptr %670, align 8
  %673 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %673, align 8
  %memberidx.i313 = getelementptr inbounds %string, ptr %673, i64 0, i32 1
  store ptr %672, ptr %memberidx.i313, align 8
  %memberidx1.i314 = getelementptr inbounds %string, ptr %673, i64 0, i32 2
  store i64 %671, ptr %memberidx1.i314, align 4
  %memberidx2.i315 = getelementptr inbounds %string, ptr %673, i64 0, i32 3
  store i64 %671, ptr %memberidx2.i315, align 4
  tail call void @free(ptr %669)
  call void %665(ptr nonnull %555, ptr nonnull %673)
  br label %ifend43

else62:                                           ; preds = %else42, %ifend.i296
  %674 = load ptr, ptr %memberidx.i144, align 8
  %675 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %675, ptr noundef nonnull align 8 dereferenceable(7) @303, i64 7, i1 false)
  %676 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %676, align 8
  %memberidx.i.i316 = getelementptr inbounds %string, ptr %676, i64 0, i32 1
  store ptr %675, ptr %memberidx.i.i316, align 8
  %memberidx1.i.i317 = getelementptr inbounds %string, ptr %676, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i317, align 4
  %memberidx2.i.i318 = getelementptr inbounds %string, ptr %676, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i318, align 4
  %memberidx.i319 = getelementptr inbounds %string, ptr %674, i64 0, i32 2
  %677 = load i64, ptr %memberidx.i319, align 4
  %.not.i321 = icmp eq i64 %677, 7
  br i1 %.not.i321, label %ifend.i325, label %else69

ifend.i325:                                       ; preds = %else62
  %memberidx2.i323 = getelementptr inbounds %string, ptr %674, i64 0, i32 1
  %678 = load ptr, ptr %memberidx2.i323, align 8
  %679 = call i64 @memcmp(ptr %678, ptr nonnull %675, i64 7)
  %680 = icmp eq i64 %679, 0
  br i1 %680, label %if.entry68, label %else69

if.entry68:                                       ; preds = %ifend.i325
  %681 = load ptr, ptr %555, align 8
  %memberidx71 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %681, i64 0, i32 5
  %682 = load ptr, ptr %memberidx71, align 8
  %683 = load ptr, ptr %memberidx.i157, align 8
  %684 = load ptr, ptr %683, align 8
  %memberidx73 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %684, i64 0, i32 5
  %685 = load ptr, ptr %memberidx73, align 8
  %686 = call ptr %685(ptr nonnull %683)
  %687 = alloca ptr, align 8
  %688 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %687, ptr nonnull @6, ptr %686)
  %689 = load ptr, ptr %687, align 8
  %690 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %690, align 8
  %memberidx.i327 = getelementptr inbounds %string, ptr %690, i64 0, i32 1
  store ptr %689, ptr %memberidx.i327, align 8
  %memberidx1.i328 = getelementptr inbounds %string, ptr %690, i64 0, i32 2
  store i64 %688, ptr %memberidx1.i328, align 4
  %memberidx2.i329 = getelementptr inbounds %string, ptr %690, i64 0, i32 3
  store i64 %688, ptr %memberidx2.i329, align 4
  tail call void @free(ptr %686)
  call void %682(ptr nonnull %555, ptr nonnull %690)
  br label %ifend43

else69:                                           ; preds = %else62, %ifend.i325
  %691 = load ptr, ptr %memberidx.i144, align 8
  %692 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %692, ptr noundef nonnull align 8 dereferenceable(3) @304, i64 3, i1 false)
  %693 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %693, align 8
  %memberidx.i.i330 = getelementptr inbounds %string, ptr %693, i64 0, i32 1
  store ptr %692, ptr %memberidx.i.i330, align 8
  %memberidx1.i.i331 = getelementptr inbounds %string, ptr %693, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i331, align 4
  %memberidx2.i.i332 = getelementptr inbounds %string, ptr %693, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i332, align 4
  %memberidx.i333 = getelementptr inbounds %string, ptr %691, i64 0, i32 2
  %694 = load i64, ptr %memberidx.i333, align 4
  %.not.i335 = icmp eq i64 %694, 3
  br i1 %.not.i335, label %ifend.i339, label %else76

ifend.i339:                                       ; preds = %else69
  %memberidx2.i337 = getelementptr inbounds %string, ptr %691, i64 0, i32 1
  %695 = load ptr, ptr %memberidx2.i337, align 8
  %696 = call i64 @memcmp(ptr %695, ptr nonnull %692, i64 3)
  %697 = icmp eq i64 %696, 0
  br i1 %697, label %if.entry75, label %else76

if.entry75:                                       ; preds = %ifend.i339
  %698 = load ptr, ptr %555, align 8
  %memberidx78 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %698, i64 0, i32 3
  %699 = load ptr, ptr %memberidx78, align 8
  %700 = load ptr, ptr %memberidx.i157, align 8
  %701 = load ptr, ptr %700, align 8
  %memberidx80 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %701, i64 0, i32 5
  %702 = load ptr, ptr %memberidx80, align 8
  %703 = call ptr %702(ptr nonnull %700)
  %704 = alloca ptr, align 8
  %705 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %704, ptr nonnull @6, ptr %703)
  %706 = load ptr, ptr %704, align 8
  %707 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %707, align 8
  %memberidx.i341 = getelementptr inbounds %string, ptr %707, i64 0, i32 1
  store ptr %706, ptr %memberidx.i341, align 8
  %memberidx1.i342 = getelementptr inbounds %string, ptr %707, i64 0, i32 2
  store i64 %705, ptr %memberidx1.i342, align 4
  %memberidx2.i343 = getelementptr inbounds %string, ptr %707, i64 0, i32 3
  store i64 %705, ptr %memberidx2.i343, align 4
  tail call void @free(ptr %703)
  call void %699(ptr nonnull %555, ptr nonnull %707)
  br label %ifend43

else76:                                           ; preds = %else69, %ifend.i339
  %708 = load ptr, ptr %memberidx.i144, align 8
  %709 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %709, ptr noundef nonnull align 8 dereferenceable(3) @305, i64 3, i1 false)
  %710 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %710, align 8
  %memberidx.i.i344 = getelementptr inbounds %string, ptr %710, i64 0, i32 1
  store ptr %709, ptr %memberidx.i.i344, align 8
  %memberidx1.i.i345 = getelementptr inbounds %string, ptr %710, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i345, align 4
  %memberidx2.i.i346 = getelementptr inbounds %string, ptr %710, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i346, align 4
  %memberidx.i347 = getelementptr inbounds %string, ptr %708, i64 0, i32 2
  %711 = load i64, ptr %memberidx.i347, align 4
  %.not.i349 = icmp eq i64 %711, 3
  br i1 %.not.i349, label %ifend.i353, label %else83

ifend.i353:                                       ; preds = %else76
  %memberidx2.i351 = getelementptr inbounds %string, ptr %708, i64 0, i32 1
  %712 = load ptr, ptr %memberidx2.i351, align 8
  %713 = call i64 @memcmp(ptr %712, ptr nonnull %709, i64 3)
  %714 = icmp eq i64 %713, 0
  br i1 %714, label %if.entry82, label %else83

if.entry82:                                       ; preds = %ifend.i353
  %715 = load ptr, ptr %555, align 8
  %memberidx85 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %715, i64 0, i32 6
  %716 = load ptr, ptr %memberidx85, align 8
  %717 = load ptr, ptr %memberidx.i157, align 8
  %718 = load ptr, ptr %717, align 8
  %memberidx87 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %718, i64 0, i32 5
  %719 = load ptr, ptr %memberidx87, align 8
  %720 = call ptr %719(ptr nonnull %717)
  %721 = alloca ptr, align 8
  %722 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %721, ptr nonnull @6, ptr %720)
  %723 = load ptr, ptr %721, align 8
  %724 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %724, align 8
  %memberidx.i355 = getelementptr inbounds %string, ptr %724, i64 0, i32 1
  store ptr %723, ptr %memberidx.i355, align 8
  %memberidx1.i356 = getelementptr inbounds %string, ptr %724, i64 0, i32 2
  store i64 %722, ptr %memberidx1.i356, align 4
  %memberidx2.i357 = getelementptr inbounds %string, ptr %724, i64 0, i32 3
  store i64 %722, ptr %memberidx2.i357, align 4
  tail call void @free(ptr %720)
  call void %716(ptr nonnull %555, ptr nonnull %724)
  br label %ifend43

else83:                                           ; preds = %else76, %ifend.i353
  %725 = load ptr, ptr %555, align 8
  %memberidx88 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %725, i64 0, i32 1
  %726 = load ptr, ptr %memberidx88, align 8
  %727 = call i64 %726(ptr nonnull %555)
  br label %ifend43
}

define internal i64 @string_find(ptr nocapture readonly %0, ptr nocapture readonly %1, i64 %2) {
for.entry:
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = sub nuw i64 %3, %4
  %.not19 = icmp slt i64 %5, %2
  br i1 %.not19, label %common.ret, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %memberidx3 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %index.020 = phi i64 [ %2, %for.body.lr.ph ], [ %15, %ifend ]
  %6 = load ptr, ptr %memberidx2, align 8
  %7 = load i8, ptr %6, align 1
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 %index.020
  %10 = load i8, ptr %9, align 1
  %11 = icmp eq i8 %7, %10
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %if.entry, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %index.020, %if.entry ], [ -1, %ifend ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %for.body
  %12 = load i64, ptr %memberidx1, align 4
  %13 = tail call i64 @memcmp(ptr nonnull %6, ptr nonnull %9, i64 %12)
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %common.ret, label %ifend

ifend:                                            ; preds = %if.entry, %for.body
  %15 = add nsw i64 %index.020, 1
  %.not.not = icmp slt i64 %index.020, %5
  br i1 %.not.not, label %for.body, label %common.ret
}

define internal noalias ptr @string_substring(ptr nocapture readonly %0, i64 %1, i64 %2) {
  %4 = trunc i64 %2 to i32
  %5 = tail call ptr @malloc(i32 %4)
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 536870912 %7, i64 %2, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 %2, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 %2, ptr %memberidx2.i, align 4
  ret ptr %8
}

define internal ptr @string_replace(ptr %0, ptr %1, ptr nocapture readonly %2) {
  %4 = load ptr, ptr %0, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i64 %5(ptr nonnull %0, ptr %1, i64 0)
  %7 = icmp sgt i64 %6, -1
  br i1 %7, label %if.entry, label %common.ret

common.ret:                                       ; preds = %3, %if.entry
  %common.ret.op = phi ptr [ %26, %if.entry ], [ %0, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx1 = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %8 = load i64, ptr %memberidx1, align 4
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = sub nuw i64 %8, %9
  %memberidx3 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  %11 = load i64, ptr %memberidx3, align 4
  %12 = add nuw i64 %10, %11
  %13 = trunc i64 %12 to i32
  %14 = tail call ptr @malloc(i32 %13)
  %memberidx4 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx4, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %15, i64 %6, i1 false)
  %16 = getelementptr inbounds i8, ptr %14, i64 %6
  %memberidx5 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  %17 = load ptr, ptr %memberidx5, align 8
  %18 = load i64, ptr %memberidx3, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %16, ptr align 8 %17, i64 %18, i1 false)
  %19 = add nsw i64 %18, %6
  %20 = getelementptr inbounds i8, ptr %14, i64 %19
  %21 = load i64, ptr %memberidx2, align 4
  %22 = add nsw i64 %21, %6
  %23 = getelementptr inbounds i8, ptr %15, i64 %22
  %24 = load i64, ptr %memberidx1, align 4
  %25 = sub nuw i64 %24, %22
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %20, ptr align 536870912 %23, i64 %25, i1 false)
  %26 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %14, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  br label %common.ret
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn
define internal ptr @string_get_bytes(ptr nocapture readonly %0) #1 {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %2 = load ptr, ptr %memberidx, align 8
  ret ptr %2
}

define internal noalias ptr @string_to_cstring(ptr nocapture readonly %0) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = trunc i64 %2 to i32
  %4 = add i32 %3, 1
  %5 = tail call ptr @malloc(i32 %4)
  %memberidx1 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %memberidx, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %6, i64 %7, i1 false)
  %8 = getelementptr inbounds i8, ptr %5, i64 %7
  store i8 0, ptr %8, align 1
  ret ptr %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn
define internal i8 @string_get_byte(ptr nocapture readonly %0, i64 %1) #2 {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 %1
  %5 = load i8, ptr %4, align 1
  ret i8 %5
}

define internal i1 @string_ends_with(ptr nocapture readonly %0, ptr nocapture readonly %1) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp slt i64 %3, %4
  br i1 %5, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend
  %common.ret.op = phi i1 [ %12, %ifend ], [ false, %2 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 %3
  %8 = sub i64 0, %4
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %memberidx5 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %10 = load ptr, ptr %memberidx5, align 8
  %11 = tail call i64 @memcmp(ptr %9, ptr %10, i64 %4)
  %12 = icmp eq i64 %11, 0
  br label %common.ret
}

define internal i1 @string_starts_with(ptr nocapture readonly %0, ptr nocapture readonly %1) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp slt i64 %3, %4
  br i1 %5, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend
  %common.ret.op = phi i1 [ %9, %ifend ], [ false, %2 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = tail call i64 @memcmp(ptr %6, ptr %7, i64 %4)
  %9 = icmp eq i64 %8, 0
  br label %common.ret
}

declare noalias ptr @malloc(i32) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1)
declare noalias noundef ptr @realloc(ptr allocptr nocapture, i64 noundef) local_unnamed_addr #4

declare i64 @memcmp(ptr, ptr, i64) local_unnamed_addr

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free")
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture) local_unnamed_addr #6

define internal void @GeneratedModule_write_bc(ptr nocapture readonly %0, ptr %1) {
  %3 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr %4(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call i64 @LLVMWriteBitcodeToFile(ptr %6, ptr %5)
  tail call void @free(ptr %5)
  %memberidx.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal i64 @GeneratedModule_exec(ptr %0) {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %engine = alloca ptr, align 8
  tail call void @LLVMLinkInMCJIT()
  store ptr null, ptr %engine, align 8
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %5 = call i1 @LLVMCreateExecutionEngineForModule(ptr nonnull %engine, ptr %4, ptr nonnull %memberidx1)
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %6)
  %8 = trunc i64 %7 to i32
  %9 = call ptr @malloc(i32 %8)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %6, i64 %7, i1 false)
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i34 = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i34, align 8
  %memberidx1.i.i35 = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %7, ptr %memberidx1.i.i35, align 4
  %memberidx2.i.i36 = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %7, ptr %memberidx2.i.i36, align 4
  %11 = load ptr, ptr %memberidx1, align 8
  call void @LLVMDisposeMessage(ptr %11)
  %12 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %13 = call ptr %12(ptr nonnull %10)
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %13)
  %15 = load ptr, ptr %3, align 8
  %16 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i.i, align 4
  call void @free(ptr %13)
  %17 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %17, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %18 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i.i37 = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i.i37, align 8
  %memberidx1.i.i.i38 = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i39, align 4
  %19 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %20 = call ptr %19(ptr nonnull %18)
  %21 = load i64, ptr %memberidx1.i.i.i38, align 4
  %22 = call i64 @write(i64 1, ptr %20, i64 %21)
  %23 = load ptr, ptr %memberidx.i.i.i37, align 8
  call void @free(ptr %23)
  call void @free(ptr %18)
  %24 = load ptr, ptr %16, align 8
  %memberidx.i.i.i55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %24, i64 0, i32 3
  %25 = load ptr, ptr %memberidx.i.i.i55, align 8
  %26 = call ptr %25(ptr nonnull %16)
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %28 = call i64 @write(i64 1, ptr %26, i64 %27)
  %29 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %30 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %30)
  call void @free(ptr %16)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %1, %if.entry
  %31 = load ptr, ptr %memberidx, align 8
  %32 = call ptr @LLVMGetNamedFunction(ptr %31, ptr nonnull @3)
  %33 = icmp eq ptr %32, null
  br i1 %33, label %if.entry4, label %ifend6

common.ret:                                       ; preds = %if.entry12, %ifend6, %if.entry4
  %common.ret.op = phi i64 [ 1, %if.entry4 ], [ %51, %ifend6 ], [ %51, %if.entry12 ]
  %.sink = load ptr, ptr %engine, align 8
  call void @LLVMDisposeExecutionEngine(ptr %.sink)
  ret i64 %common.ret.op

if.entry4:                                        ; preds = %ifend
  %34 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %34, ptr noundef nonnull align 8 dereferenceable(48) @4, i64 48, i1 false)
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i26 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i26, align 8
  %memberidx1.i.i27 = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 48, ptr %memberidx1.i.i27, align 4
  %memberidx2.i.i28 = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 48, ptr %memberidx2.i.i28, align 4
  %36 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %36, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %37 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %38 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %39 = call ptr %38(ptr nonnull %37)
  %40 = load i64, ptr %memberidx1.i.i.i, align 4
  %41 = call i64 @write(i64 1, ptr %39, i64 %40)
  %42 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %42)
  call void @free(ptr %37)
  %43 = load ptr, ptr %35, align 8
  %memberidx.i.i.i43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %43, i64 0, i32 3
  %44 = load ptr, ptr %memberidx.i.i.i43, align 8
  %45 = call ptr %44(ptr nonnull %35)
  %46 = load i64, ptr %memberidx1.i.i27, align 4
  %47 = call i64 @write(i64 1, ptr %45, i64 %46)
  %48 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %49 = load ptr, ptr %memberidx.i.i26, align 8
  call void @free(ptr %49)
  call void @free(ptr %35)
  call void @exit(i64 -1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %50 = load ptr, ptr %engine, align 8
  %51 = call i64 @LLVMRunFunctionAsMain(ptr %50, ptr nonnull %32, i64 0, ptr null, ptr null)
  %52 = load ptr, ptr %engine, align 8
  %53 = load ptr, ptr %memberidx, align 8
  %54 = call i1 @LLVMRemoveModule(ptr %52, ptr %53, ptr nonnull %memberidx, ptr nonnull %memberidx1)
  br i1 %54, label %if.entry12, label %common.ret

if.entry12:                                       ; preds = %ifend6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %55 = load ptr, ptr %memberidx1, align 8
  %56 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %55)
  %57 = trunc i64 %56 to i32
  %58 = call ptr @malloc(i32 %57)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %55, i64 %56, i1 false)
  %59 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i46 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i.i47, align 4
  %memberidx2.i.i48 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i.i48, align 4
  %60 = load ptr, ptr %memberidx1, align 8
  call void @LLVMDisposeMessage(ptr %60)
  %61 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %62 = call ptr %61(ptr nonnull %59)
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @2, ptr %62)
  %64 = load ptr, ptr %2, align 8
  %65 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i.i31 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i.i31, align 8
  %memberidx1.i.i32 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx1.i.i32, align 4
  %memberidx2.i.i33 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 %63, ptr %memberidx2.i.i33, align 4
  call void @free(ptr %62)
  %66 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %66, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %67 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %67, align 8
  %memberidx.i.i.i49 = getelementptr inbounds %string, ptr %67, i64 0, i32 1
  store ptr %66, ptr %memberidx.i.i.i49, align 8
  %memberidx1.i.i.i50 = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i50, align 4
  %memberidx2.i.i.i51 = getelementptr inbounds %string, ptr %67, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i51, align 4
  %68 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %69 = call ptr %68(ptr nonnull %67)
  %70 = load i64, ptr %memberidx1.i.i.i50, align 4
  %71 = call i64 @write(i64 1, ptr %69, i64 %70)
  %72 = load ptr, ptr %memberidx.i.i.i49, align 8
  call void @free(ptr %72)
  call void @free(ptr %67)
  %73 = load ptr, ptr %65, align 8
  %memberidx.i.i.i58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %73, i64 0, i32 3
  %74 = load ptr, ptr %memberidx.i.i.i58, align 8
  %75 = call ptr %74(ptr nonnull %65)
  %76 = load i64, ptr %memberidx1.i.i32, align 4
  %77 = call i64 @write(i64 1, ptr %75, i64 %76)
  %78 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %79 = load ptr, ptr %memberidx.i.i31, align 8
  call void @free(ptr %79)
  call void @free(ptr %65)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal void @GeneratedModule_set_target_machine(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %target = alloca ptr, align 8
  %memberidx = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = add nuw i64 %4, 1
  %6 = alloca i8, i64 %5, align 1
  %7 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call ptr %8(ptr nonnull %1)
  %10 = load i64, ptr %memberidx, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %6, ptr align 8 %9, i64 %10, i1 false)
  %11 = getelementptr inbounds i8, ptr %6, i64 %10
  store i8 0, ptr %11, align 1
  store ptr null, ptr %target, align 8
  %memberidx4 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %12 = call i1 @LLVMGetTargetFromTriple(ptr nonnull %6, ptr nonnull %target, ptr nonnull %memberidx4)
  br i1 %12, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %13 = load ptr, ptr %memberidx4, align 8
  %14 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %13)
  %15 = trunc i64 %14 to i32
  %16 = call ptr @malloc(i32 %15)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %13, i64 %14, i1 false)
  %17 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i24 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i24, align 8
  %memberidx1.i.i25 = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i.i25, align 4
  %memberidx2.i.i26 = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i.i26, align 4
  %18 = load ptr, ptr %memberidx4, align 8
  call void @LLVMDisposeMessage(ptr %18)
  %19 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %20 = call ptr %19(ptr nonnull %17)
  %21 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %20)
  %22 = load ptr, ptr %3, align 8
  %23 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %22, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 %21, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 %21, ptr %memberidx2.i.i, align 4
  call void @free(ptr %20)
  %24 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %24, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %25 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %25, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %25, i64 0, i32 1
  store ptr %24, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %25, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %25, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %26 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %27 = call ptr %26(ptr nonnull %25)
  %28 = load i64, ptr %memberidx1.i.i.i, align 4
  %29 = call i64 @write(i64 1, ptr %27, i64 %28)
  %30 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %30)
  call void @free(ptr %25)
  %31 = load ptr, ptr %23, align 8
  %memberidx.i.i.i27 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %31, i64 0, i32 3
  %32 = load ptr, ptr %memberidx.i.i.i27, align 8
  %33 = call ptr %32(ptr nonnull %23)
  %34 = load i64, ptr %memberidx1.i.i, align 4
  %35 = call i64 @write(i64 1, ptr %33, i64 %34)
  %36 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %37 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %37)
  call void @free(ptr %23)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  %memberidx6 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 3
  %38 = load ptr, ptr %target, align 8
  %39 = call ptr @LLVMGetHostCPUFeatures()
  %40 = call ptr @LLVMCreateTargetMachine(ptr %38, ptr nonnull %6, ptr nonnull @5, ptr %39, i64 3, i64 0, i64 0)
  store ptr %40, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %41 = load ptr, ptr %memberidx7, align 8
  %42 = call ptr @LLVMCreateTargetDataLayout(ptr %40)
  call void @LLVMSetDataLayout(ptr %41, ptr %42)
  %43 = load ptr, ptr %memberidx7, align 8
  %44 = load ptr, ptr %memberidx6, align 8
  %45 = call ptr @LLVMGetTargetMachineTriple(ptr %44)
  call void @LLVMSetTarget(ptr %43, ptr %45)
  ret void
}

define internal void @GeneratedModule_write_ir(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %8 = tail call i1 @LLVMPrintModuleToFile(ptr %7, ptr %6, ptr nonnull %memberidx2)
  br i1 %8, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9)
  %11 = trunc i64 %10 to i32
  %12 = tail call ptr @malloc(i32 %11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %9, i64 %10, i1 false)
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i10 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i10, align 8
  %memberidx1.i.i11 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %10, ptr %memberidx1.i.i11, align 4
  %memberidx2.i.i12 = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %10, ptr %memberidx2.i.i12, align 4
  %14 = load ptr, ptr %memberidx2, align 8
  tail call void @LLVMDisposeMessage(ptr %14)
  %15 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %16 = tail call ptr %15(ptr nonnull %13)
  %17 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %16)
  %18 = load ptr, ptr %3, align 8
  %19 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 %17, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 %17, ptr %memberidx2.i.i, align 4
  call void @free(ptr %16)
  %20 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %21 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %22 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %23 = call ptr %22(ptr nonnull %21)
  %24 = load i64, ptr %memberidx1.i.i.i, align 4
  %25 = call i64 @write(i64 1, ptr %23, i64 %24)
  %26 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %26)
  call void @free(ptr %21)
  %27 = load ptr, ptr %19, align 8
  %memberidx.i.i.i13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx.i.i.i13, align 8
  %29 = call ptr %28(ptr nonnull %19)
  %30 = load i64, ptr %memberidx1.i.i, align 4
  %31 = call i64 @write(i64 1, ptr %29, i64 %30)
  %32 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %33 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %33)
  call void @free(ptr %19)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr %6)
  %memberidx.i9 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i9, align 8
  call void @free(ptr %34)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal void @GeneratedModule_run_passes(ptr nocapture readonly %0, i64 %1) {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %while.end
  ret void

ifend:                                            ; preds = %2
  %4 = tail call ptr @LLVMCreatePassManager()
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @LLVMCreateFunctionPassManagerForModule(ptr %5)
  %7 = tail call ptr @LLVMPassManagerBuilderCreate()
  tail call void @LLVMAddInternalizePass(ptr %4, i64 1)
  tail call void @LLVMAddGlobalDCEPass(ptr %4)
  tail call void @LLVMAddGlobalOptimizerPass(ptr %4)
  tail call void @LLVMAddInstructionCombiningPass(ptr %4)
  tail call void @LLVMAddScalarReplAggregatesPass(ptr %4)
  tail call void @LLVMAddFunctionInliningPass(ptr %4)
  tail call void @LLVMPassManagerBuilderSetOptLevel(ptr %7, i64 %1)
  tail call void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr %7, i64 255)
  tail call void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr %7, ptr %6)
  %8 = load ptr, ptr %memberidx, align 8
  %9 = tail call ptr @LLVMGetFirstFunction(ptr %8)
  %.not = icmp eq ptr %9, null
  br i1 %.not, label %while.end, label %while.entry

while.entry:                                      ; preds = %ifend, %while.entry
  %func.0 = phi ptr [ %11, %while.entry ], [ %9, %ifend ]
  %10 = tail call i1 @LLVMRunFunctionPassManager(ptr %6, ptr nonnull %func.0)
  %11 = tail call ptr @LLVMGetNextFunction(ptr nonnull %func.0)
  %.not23 = icmp eq ptr %11, null
  br i1 %.not23, label %while.end, label %while.entry

while.end:                                        ; preds = %while.entry, %ifend
  tail call void @LLVMPassManagerBuilderPopulateModulePassManager(ptr %7, ptr %4)
  %12 = load ptr, ptr %memberidx, align 8
  %13 = tail call i1 @LLVMRunPassManager(ptr %4, ptr %12)
  tail call void @LLVMDisposePassManager(ptr %6)
  tail call void @LLVMPassManagerBuilderDispose(ptr %7)
  tail call void @LLVMDisposePassManager(ptr %4)
  br label %common.ret
}

define internal void @GeneratedModule_write_asm(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %9 = tail call i1 @LLVMTargetMachineEmitToFile(ptr %7, ptr %8, ptr %6, i64 0, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = tail call ptr @malloc(i32 %12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i12 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i12, align 8
  %memberidx1.i.i13 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i13, align 4
  %memberidx2.i.i14 = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i14, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  tail call void @LLVMDisposeMessage(ptr %15)
  %16 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %17)
  %19 = load ptr, ptr %3, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i, align 4
  call void @free(ptr %17)
  %21 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %21, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %22 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %23 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %24 = call ptr %23(ptr nonnull %22)
  %25 = load i64, ptr %memberidx1.i.i.i, align 4
  %26 = call i64 @write(i64 1, ptr %24, i64 %25)
  %27 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %27)
  call void @free(ptr %22)
  %28 = load ptr, ptr %20, align 8
  %memberidx.i.i.i15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx.i.i.i15, align 8
  %30 = call ptr %29(ptr nonnull %20)
  %31 = load i64, ptr %memberidx1.i.i, align 4
  %32 = call i64 @write(i64 1, ptr %30, i64 %31)
  %33 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %34 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %34)
  call void @free(ptr %20)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr %6)
  %memberidx.i11 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i11, align 8
  call void @free(ptr %35)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal void @GeneratedModule_write_obj(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %9 = tail call i1 @LLVMTargetMachineEmitToFile(ptr %7, ptr %8, ptr %6, i64 1, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = tail call ptr @malloc(i32 %12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i12 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i12, align 8
  %memberidx1.i.i13 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i13, align 4
  %memberidx2.i.i14 = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i14, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  tail call void @LLVMDisposeMessage(ptr %15)
  %16 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %17)
  %19 = load ptr, ptr %3, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i, align 4
  call void @free(ptr %17)
  %21 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %21, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %22 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %23 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %24 = call ptr %23(ptr nonnull %22)
  %25 = load i64, ptr %memberidx1.i.i.i, align 4
  %26 = call i64 @write(i64 1, ptr %24, i64 %25)
  %27 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %27)
  call void @free(ptr %22)
  %28 = load ptr, ptr %20, align 8
  %memberidx.i.i.i15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx.i.i.i15, align 8
  %30 = call ptr %29(ptr nonnull %20)
  %31 = load i64, ptr %memberidx1.i.i, align 4
  %32 = call i64 @write(i64 1, ptr %30, i64 %31)
  %33 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %34 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %34)
  call void @free(ptr %20)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr %6)
  %memberidx.i11 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i11, align 8
  call void @free(ptr %35)
  tail call void @free(ptr nonnull %1)
  ret void
}

declare i1 @LLVMVerifyModule(ptr, i64, ptr) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeMessage(ptr) local_unnamed_addr

; Function Attrs: nofree
declare noundef i64 @write(i64 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #0

declare void @exit(i64) local_unnamed_addr

declare i64 @asprintf(ptr, ptr, ...) local_unnamed_addr

declare ptr @LLVMCreatePassManager() local_unnamed_addr

declare ptr @LLVMCreateFunctionPassManagerForModule(ptr) local_unnamed_addr

declare ptr @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMAddInternalizePass(ptr, i64) local_unnamed_addr

declare void @LLVMAddGlobalDCEPass(ptr) local_unnamed_addr

declare void @LLVMAddGlobalOptimizerPass(ptr) local_unnamed_addr

declare void @LLVMAddInstructionCombiningPass(ptr) local_unnamed_addr

declare void @LLVMAddScalarReplAggregatesPass(ptr) local_unnamed_addr

declare void @LLVMAddFunctionInliningPass(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetFirstFunction(ptr) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNextFunction(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateModulePassManager(ptr, ptr) local_unnamed_addr

declare i1 @LLVMRunPassManager(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposePassManager(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(ptr) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNamedFunction(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(ptr) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(ptr, ptr, i64, ptr, ptr) local_unnamed_addr

declare i1 @LLVMRemoveModule(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetMachine(ptr, ptr, ptr, ptr, i64, i64, i64) local_unnamed_addr

declare ptr @LLVMGetHostCPUFeatures() local_unnamed_addr

declare void @LLVMSetDataLayout(ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetDataLayout(ptr) local_unnamed_addr

declare void @LLVMSetTarget(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetTargetMachineTriple(ptr) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMWriteBitcodeToFile(ptr, ptr) local_unnamed_addr

define internal i1 @Compiler_print_errors(ptr nocapture readonly %0) {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %if.entry, label %common.ret

common.ret:                                       ; preds = %1, %print_error.exit
  ret i1 %5

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load i64, ptr %9, align 4
  %memberidx.i12 = getelementptr inbounds %Array_FloFile_, ptr %8, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i12, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx6 = getelementptr inbounds %FloFile, ptr %13, i64 0, i32 1
  %14 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %memberidx7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %16 = load i64, ptr %7, align 4
  %memberidx1.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i, align 8
  tail call fastcc void @print_message_error(i64 %16, ptr %17)
  %18 = load ptr, ptr %14, align 8
  %memberidx2.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx2.i, align 8
  %20 = tail call ptr %19(ptr nonnull %14)
  %memberidx3.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 2
  %21 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %FloRange, ptr %21, i64 0, i32 3
  %22 = load i64, ptr %memberidx4.i, align 4
  %23 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @16, ptr %20, i64 %22)
  %24 = load ptr, ptr %2, align 8
  %25 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %25, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %25, i64 0, i32 1
  store ptr %24, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %25, i64 0, i32 2
  store i64 %23, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %25, i64 0, i32 3
  store i64 %23, ptr %memberidx2.i.i, align 4
  call void @free(ptr %20)
  %26 = load ptr, ptr %25, align 8
  %memberidx.i.i.i10.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %26, i64 0, i32 3
  %27 = load ptr, ptr %memberidx.i.i.i10.i, align 8
  %28 = call ptr %27(ptr nonnull %25)
  %29 = load i64, ptr %memberidx1.i.i, align 4
  %30 = call i64 @write(i64 1, ptr %28, i64 %29)
  %31 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %32 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %32)
  call void @free(ptr %25)
  %33 = load ptr, ptr %memberidx3.i, align 8
  %memberidx.i9.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i9.i, align 4
  %35 = load ptr, ptr %15, align 8
  %memberidx.i.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %35, i64 0, i32 2
  %36 = load ptr, ptr %memberidx.i.i.i, align 8
  %37 = call i8 %36(ptr nonnull %15, i64 %34)
  %38 = icmp ne i8 %37, 10
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  %39 = load i64, ptr %memberidx1.i.i.i, align 4
  %40 = icmp sgt i64 %39, %34
  %41 = and i1 %38, %40
  br i1 %41, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %start.0.i.i.i = phi i64 [ %42, %while.entry.i.i.i ], [ %34, %if.entry ]
  %42 = add nsw i64 %start.0.i.i.i, 1
  %43 = load ptr, ptr %15, align 8
  %memberidx2.i.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %43, i64 0, i32 2
  %44 = load ptr, ptr %memberidx2.i.i.i, align 8
  %45 = call i8 %44(ptr nonnull %15, i64 %42)
  %46 = icmp ne i8 %45, 10
  %47 = load i64, ptr %memberidx1.i.i.i, align 4
  %48 = icmp slt i64 %42, %47
  %49 = and i1 %46, %48
  br i1 %49, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

get_next_line_index.exit.i.i:                     ; preds = %while.entry.i.i.i, %if.entry
  %start.1.i.i.i = phi i64 [ %34, %if.entry ], [ %42, %while.entry.i.i.i ]
  %50 = load i64, ptr %33, align 4
  %memberidx4.i.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 2
  %51 = load i64, ptr %memberidx4.i.i, align 4
  %52 = sub nsw i64 %50, %51
  %53 = load ptr, ptr %15, align 8
  %memberidx5.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx5.i.i, align 8
  %55 = sub nuw i64 %start.1.i.i.i, %52
  %56 = call ptr %54(ptr nonnull %15, i64 %52, i64 %55)
  %57 = load ptr, ptr %56, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %57, i64 0, i32 3
  %58 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %59 = call ptr %58(ptr nonnull %56)
  %memberidx1.i.i.i.i.i = getelementptr inbounds %string, ptr %56, i64 0, i32 2
  %60 = load i64, ptr %memberidx1.i.i.i.i.i, align 4
  %61 = call i64 @write(i64 1, ptr %59, i64 %60)
  %62 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %56, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i.i, align 8
  call void @free(ptr %63)
  call void @free(ptr %56)
  %64 = load i64, ptr %memberidx4.i.i, align 4
  %65 = load i64, ptr %memberidx.i9.i, align 4
  %66 = load i64, ptr %33, align 4
  %67 = sub nuw i64 %65, %66
  %68 = call ptr @malloc(i32 16)
  store i64 0, ptr %68, align 4
  %memberidx1.i29.i.i = getelementptr inbounds %Range, ptr %68, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i29.i.i, align 4
  %69 = call ptr @malloc(i32 17)
  %memberidx.i.i31.i.i = getelementptr inbounds %RangeIterator, ptr %69, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i31.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %69, i64 0, i32 2
  store i64 %64, ptr %memberidx1.i.i.i.i, align 4
  %70 = icmp slt i64 %64, 1
  store i1 %70, ptr %69, align 1
  br i1 %70, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %get_next_line_index.exit.i.i, %for.body.i.i
  %storemerge15 = phi i64 [ %79, %for.body.i.i ], [ 1, %get_next_line_index.exit.i.i ]
  %71 = call ptr @malloc(i32 1)
  store i8 32, ptr %71, align 8
  %72 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %72, align 8
  %memberidx.i.i34.i.i = getelementptr inbounds %string, ptr %72, i64 0, i32 1
  store ptr %71, ptr %memberidx.i.i34.i.i, align 8
  %memberidx1.i.i35.i.i = getelementptr inbounds %string, ptr %72, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i35.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %72, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i.i, align 4
  %73 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %74 = call ptr %73(ptr nonnull %72)
  %75 = load i64, ptr %memberidx1.i.i35.i.i, align 4
  %76 = call i64 @write(i64 1, ptr %74, i64 %75)
  %77 = load ptr, ptr %memberidx.i.i34.i.i, align 8
  call void @free(ptr %77)
  call void @free(ptr %72)
  %78 = icmp sge i64 %storemerge15, %64
  store i1 %78, ptr %69, align 1
  %79 = add nuw nsw i64 %storemerge15, 1
  br i1 %78, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.body.i.i, %get_next_line_index.exit.i.i
  call void @free(ptr nonnull %69)
  %80 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %80, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %81 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %81, align 8
  %memberidx.i.i.i40.i.i = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  store ptr %80, ptr %memberidx.i.i.i40.i.i, align 8
  %memberidx1.i.i.i41.i.i = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i41.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %string, ptr %81, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i.i, align 4
  %82 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %83 = call ptr %82(ptr nonnull %81)
  %84 = load i64, ptr %memberidx1.i.i.i41.i.i, align 4
  %85 = call i64 @write(i64 1, ptr %83, i64 %84)
  %86 = load ptr, ptr %memberidx.i.i.i40.i.i, align 8
  call void @free(ptr %86)
  call void @free(ptr %81)
  %87 = call ptr @malloc(i32 16)
  store i64 0, ptr %87, align 4
  %memberidx1.i42.i.i = getelementptr inbounds %Range, ptr %87, i64 0, i32 1
  store i64 %67, ptr %memberidx1.i42.i.i, align 4
  %88 = call ptr @malloc(i32 17)
  %memberidx.i.i44.i.i = getelementptr inbounds %RangeIterator, ptr %88, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i44.i.i, align 4
  %memberidx1.i.i45.i.i = getelementptr inbounds %RangeIterator, ptr %88, i64 0, i32 2
  store i64 %67, ptr %memberidx1.i.i45.i.i, align 4
  %89 = icmp slt i64 %67, 1
  store i1 %89, ptr %88, align 1
  br i1 %89, label %print_error.exit, label %for.body12.i.i

for.body12.i.i:                                   ; preds = %for.end.i.i, %for.body12.i.i
  %storemerge1314 = phi i64 [ %98, %for.body12.i.i ], [ 1, %for.end.i.i ]
  %90 = call ptr @malloc(i32 1)
  store i8 94, ptr %90, align 8
  %91 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %91, align 8
  %memberidx.i.i48.i.i = getelementptr inbounds %string, ptr %91, i64 0, i32 1
  store ptr %90, ptr %memberidx.i.i48.i.i, align 8
  %memberidx1.i.i49.i.i = getelementptr inbounds %string, ptr %91, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i49.i.i, align 4
  %memberidx2.i.i50.i.i = getelementptr inbounds %string, ptr %91, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i50.i.i, align 4
  %92 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %93 = call ptr %92(ptr nonnull %91)
  %94 = load i64, ptr %memberidx1.i.i49.i.i, align 4
  %95 = call i64 @write(i64 1, ptr %93, i64 %94)
  %96 = load ptr, ptr %memberidx.i.i48.i.i, align 8
  call void @free(ptr %96)
  call void @free(ptr %91)
  %97 = icmp sge i64 %storemerge1314, %67
  store i1 %97, ptr %88, align 1
  %98 = add nuw nsw i64 %storemerge1314, 1
  br i1 %97, label %print_error.exit, label %for.body12.i.i

print_error.exit:                                 ; preds = %for.body12.i.i, %for.end.i.i
  call void @free(ptr nonnull %88)
  %99 = call ptr @malloc(i32 4)
  store i32 1831885595, ptr %99, align 8
  %100 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i.i1.i.i.i = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i.i1.i.i.i, align 8
  %memberidx1.i.i2.i.i.i = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i2.i.i.i, align 4
  %memberidx2.i.i3.i.i.i = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i3.i.i.i, align 4
  %101 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %102 = call ptr %101(ptr nonnull %100)
  %103 = load i64, ptr %memberidx1.i.i2.i.i.i, align 4
  %104 = call i64 @write(i64 1, ptr %102, i64 %103)
  %105 = load ptr, ptr %memberidx.i.i1.i.i.i, align 8
  call void @free(ptr %105)
  call void @free(ptr %100)
  %106 = call ptr @malloc(i32 1)
  store i8 10, ptr %106, align 8
  %107 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %107, align 8
  %memberidx.i.i59.i.i = getelementptr inbounds %string, ptr %107, i64 0, i32 1
  store ptr %106, ptr %memberidx.i.i59.i.i, align 8
  %memberidx1.i.i60.i.i = getelementptr inbounds %string, ptr %107, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i60.i.i, align 4
  %memberidx2.i.i61.i.i = getelementptr inbounds %string, ptr %107, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i61.i.i, align 4
  %108 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %109 = call ptr %108(ptr nonnull %107)
  %110 = load i64, ptr %memberidx1.i.i60.i.i, align 4
  %111 = call i64 @write(i64 1, ptr %109, i64 %110)
  %112 = load ptr, ptr %memberidx.i.i59.i.i, align 8
  call void @free(ptr %112)
  call void @free(ptr %107)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal i1 @Compiler_set_std_path(ptr nocapture writeonly %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx.i, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %7 = tail call i64 @access(ptr %6, i64 0)
  %8 = icmp eq i64 %7, 0
  tail call void @free(ptr %6)
  br i1 %8, label %ifend, label %common.ret

common.ret:                                       ; preds = %2, %ifend
  ret i1 %8

ifend:                                            ; preds = %2
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  store ptr %1, ptr %memberidx, align 8
  %9 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %9, ptr noundef nonnull align 8 dereferenceable(21) @7, i64 21, i1 false)
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 21, ptr %memberidx2.i.i, align 4
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %11 = load ptr, ptr %1, align 8
  %memberidx.i6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %memberidx.i6, align 8
  %13 = tail call ptr %12(ptr nonnull %1)
  %14 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %15 = tail call ptr %14(ptr nonnull %10)
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @8, ptr %13, ptr %15)
  %17 = load ptr, ptr %3, align 8
  %18 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i7 = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i7, align 8
  %memberidx1.i.i8 = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx1.i.i8, align 4
  %memberidx2.i.i9 = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 %16, ptr %memberidx2.i.i9, align 4
  call void @free(ptr %13)
  call void @free(ptr %15)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  store ptr %18, ptr %memberidx1, align 8
  %19 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr %10)
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FloError__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FloError__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_FloError__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal ptr @Compiler_register_file(ptr nocapture readonly %0, ptr %1) {
  %buf.i.i = alloca [400 x i8], align 1
  %3 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i, align 4
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1.i, align 8
  %8 = tail call ptr %4(ptr nonnull %1, ptr nonnull %6, ptr %7)
  %9 = tail call ptr @malloc(i32 4)
  store i32 1869375022, ptr %9, align 8
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i6.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i6.i, align 8
  %memberidx1.i.i7.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i7.i, align 4
  %memberidx2.i.i8.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i8.i, align 4
  %11 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 6
  %12 = load ptr, ptr %memberidx2.i, align 8
  %13 = tail call i1 %12(ptr nonnull %8, ptr nonnull %10)
  br i1 %13, label %Compiler_find_module_path.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = load i64, ptr %memberidx1.i.i7.i, align 4
  %16 = add nuw i64 %15, %14
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %18 = tail call ptr @realloc(ptr %17, i64 %16)
  store ptr %18, ptr %memberidx2.i.i, align 8
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = getelementptr inbounds i8, ptr %18, i64 %19
  %21 = load ptr, ptr %memberidx.i.i6.i, align 8
  %22 = load i64, ptr %memberidx1.i.i7.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %20, ptr align 8 %21, i64 %22, i1 false)
  store i64 %16, ptr %memberidx.i.i, align 4
  br label %Compiler_find_module_path.exit

Compiler_find_module_path.exit:                   ; preds = %2, %if.entry.i
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %buf.i.i)
  %23 = load ptr, ptr %8, align 8
  %memberidx.i9.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx.i9.i, align 8
  %25 = tail call ptr %24(ptr nonnull %8)
  %26 = call ptr @realpath(ptr %25, ptr nonnull %buf.i.i)
  %27 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %buf.i.i)
  %28 = trunc i64 %27 to i32
  %29 = call ptr @malloc(i32 %28)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr nonnull align 8 %buf.i.i, i64 %27, i1 false)
  %30 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 %27, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 %27, ptr %memberidx2.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %buf.i.i)
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 7
  %31 = load ptr, ptr %memberidx, align 8
  %32 = call fastcc i64 @Map_string_FileId__hash_fnc(ptr nonnull %30)
  %memberidx.i15 = getelementptr inbounds %Map_string_FileId_, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i15, align 4
  %34 = urem i64 %32, %33
  %35 = load ptr, ptr %31, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %.not.i = icmp eq ptr %37, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_find_module_path.exit, %else.i
  %38 = phi ptr [ %48, %else.i ], [ %35, %Compiler_find_module_path.exit ]
  %39 = phi i64 [ %49, %else.i ], [ %33, %Compiler_find_module_path.exit ]
  %40 = phi ptr [ %53, %else.i ], [ %37, %Compiler_find_module_path.exit ]
  %hash.0.i = phi i64 [ %51, %else.i ], [ %34, %Compiler_find_module_path.exit ]
  %41 = load ptr, ptr %40, align 8
  %memberidx.i.i16 = getelementptr inbounds %string, ptr %41, i64 0, i32 2
  %42 = load i64, ptr %memberidx.i.i16, align 4
  %43 = load i64, ptr %memberidx1.i.i.i.i, align 4
  %.not.i.i = icmp eq i64 %42, %43
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i18 = getelementptr inbounds %string, ptr %41, i64 0, i32 1
  %44 = load ptr, ptr %memberidx2.i.i18, align 8
  %45 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %46 = call i64 @memcmp(ptr %44, ptr %45, i64 %42)
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i15, align 4
  %.pre29 = load ptr, ptr %31, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre30.pre = load ptr, ptr %31, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre30.pre, i64 %hash.0.i
  %.pre31.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre31.pre, null
  br i1 %.not25.i, label %ifend, label %Map_string_FileId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %48 = phi ptr [ %.pre29, %ifend.i.i.else.i_crit_edge ], [ %38, %while.entry.i ]
  %49 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %39, %while.entry.i ]
  %50 = add nuw i64 %hash.0.i, 1
  %51 = urem i64 %50, %49
  %52 = getelementptr inbounds ptr, ptr %48, i64 %51
  %53 = load ptr, ptr %52, align 8
  %.not26.i = icmp eq ptr %53, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_string_FileId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_FileId_, ptr %.pre31.pre, i64 0, i32 1
  %54 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %54, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_FileId____getitem__.exit, %Array_FloFile____sl__.exit
  %common.ret.op = phi ptr [ %55, %Array_FloFile____sl__.exit ], [ %54, %Map_string_FileId____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %Compiler_find_module_path.exit, %while.end.i, %Map_string_FileId____getitem__.exit
  %55 = tail call ptr @malloc(i32 8)
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %56, i64 0, i32 2
  %57 = load i64, ptr %memberidx2, align 4
  store i64 %57, ptr %55, align 4
  %58 = load ptr, ptr %memberidx, align 8
  call fastcc void @Map_string_FileId____setitem__(ptr %58, ptr nonnull %30, ptr nonnull %55)
  %59 = load ptr, ptr %memberidx1, align 8
  %60 = tail call ptr @malloc(i32 16)
  store ptr %30, ptr %60, align 8
  %memberidx1.i19 = getelementptr inbounds %FloFile, ptr %60, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i19, align 8
  %memberidx.i20 = getelementptr inbounds %Array_FloFile_, ptr %59, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_FloFile_, ptr %59, i64 0, i32 3
  %62 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %61, %62
  br i1 %.not.i22, label %ifend.Array_FloFile____sl__.exit_crit_edge, label %if.entry.i25

ifend.Array_FloFile____sl__.exit_crit_edge:       ; preds = %ifend
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_FloFile_, ptr %59, i64 0, i32 1
  %.pre33 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_FloFile____sl__.exit

if.entry.i25:                                     ; preds = %ifend
  %63 = shl nuw i64 %62, 1
  store i64 %63, ptr %memberidx1.i21, align 4
  %memberidx2.i.i24 = getelementptr inbounds %Array_FloFile_, ptr %59, i64 0, i32 1
  %64 = load ptr, ptr %memberidx2.i.i24, align 8
  %65 = shl i64 %62, 4
  %66 = call ptr @realloc(ptr %64, i64 %65)
  store ptr %66, ptr %memberidx2.i.i24, align 8
  %.pre32 = load i64, ptr %memberidx.i20, align 4
  br label %Array_FloFile____sl__.exit

Array_FloFile____sl__.exit:                       ; preds = %ifend.Array_FloFile____sl__.exit_crit_edge, %if.entry.i25
  %67 = phi ptr [ %.pre33, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %66, %if.entry.i25 ]
  %68 = phi i64 [ %61, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %.pre32, %if.entry.i25 ]
  %69 = add nsw i64 %68, 1
  store i64 %69, ptr %memberidx.i20, align 4
  %70 = getelementptr inbounds ptr, ptr %67, i64 %68
  store ptr %60, ptr %70, align 8
  br label %common.ret
}

define internal i1 @Compiler_set_current_file(ptr nocapture %0, ptr %1) {
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %1, align 4
  %memberidx.i = getelementptr inbounds %Array_FloFile_, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i64 %4
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %memberidx.i14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %9, i64 0, i32 5
  %10 = load ptr, ptr %memberidx.i14, align 8
  %11 = tail call ptr %10(ptr nonnull %8)
  %12 = tail call i64 @access(ptr %11, i64 0)
  %13 = icmp eq i64 %12, 0
  tail call void @free(ptr %11)
  br i1 %13, label %ifend, label %common.ret

common.ret:                                       ; preds = %2, %Compiler_unlink_current_file_contents.exit
  ret i1 %13

ifend:                                            ; preds = %2
  %14 = load ptr, ptr %7, align 8
  %15 = load ptr, ptr %14, align 8
  %memberidx.i15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i15, align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = tail call i64 @open(ptr %17, i64 4, i64 438)
  tail call void @free(ptr %17)
  %19 = icmp slt i64 %18, 0
  br i1 %19, label %File_open_for_reading.exit, label %ifend.i

ifend.i:                                          ; preds = %ifend
  %20 = tail call ptr @malloc(i32 16)
  store ptr @VTableFile, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %File, ptr %20, i64 0, i32 1
  store i64 %18, ptr %memberidx.i.i, align 4
  br label %File_open_for_reading.exit

File_open_for_reading.exit:                       ; preds = %ifend, %ifend.i
  %common.ret.op.i = phi ptr [ %20, %ifend.i ], [ null, %ifend ]
  %memberidx.i16 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %21 = load ptr, ptr %memberidx.i16, align 8
  %.not.i = icmp eq ptr %21, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %File_open_for_reading.exit
  %memberidx.i.i17 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i.i17, align 8
  tail call void @free(ptr %22)
  tail call void @free(ptr nonnull %21)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %File_open_for_reading.exit, %if.entry.i
  %23 = load ptr, ptr %common.ret.op.i, align 8
  %24 = load ptr, ptr %23, align 8
  %25 = tail call ptr %24(ptr nonnull %common.ret.op.i)
  store ptr %25, ptr %memberidx.i16, align 8
  %memberidx6 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  store ptr %1, ptr %memberidx6, align 8
  %26 = load ptr, ptr %common.ret.op.i, align 8
  %memberidx7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr }, ptr %26, i64 0, i32 4
  %27 = load ptr, ptr %memberidx7, align 8
  tail call void %27(ptr nonnull %common.ret.op.i)
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FloFile__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FloFile__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_FloFile__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal ptr @Compiler_add_builtins(ptr %0) {
  %2 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call ptr %3(ptr nonnull %0, ptr %4)
  ret ptr %5
}

define internal void @Compiler___del__(ptr nocapture readonly %0) {
for.entry:
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %1 = load ptr, ptr %memberidx, align 8
  %2 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_FloFile_, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_FloFile_, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1.i, align 4
  %5 = icmp slt i64 %4, 1
  br i1 %5, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %6 = phi i64 [ %11, %for.body ], [ 1, %for.entry ]
  %file.089.in = phi ptr [ %12, %for.body ], [ %3, %for.entry ]
  %file.089 = load ptr, ptr %file.089.in, align 8
  %7 = load ptr, ptr %file.089, align 8
  %memberidx.i.i38 = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i38, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx1.i39 = getelementptr inbounds %FloFile, ptr %file.089, i64 0, i32 1
  %9 = load ptr, ptr %memberidx1.i39, align 8
  %memberidx.i3.i = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i3.i, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  tail call void @free(ptr %file.089)
  %11 = add nuw nsw i64 %6, 1
  %12 = getelementptr inbounds ptr, ptr %3, i64 %6
  %.not = icmp slt i64 %6, %4
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %2)
  %13 = load ptr, ptr %memberidx, align 8
  %memberidx.i43 = getelementptr inbounds %Array_FloFile_, ptr %13, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i43, align 8
  tail call void @free(ptr %14)
  tail call void @free(ptr %13)
  %memberidx6 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %15 = load ptr, ptr %memberidx6, align 8
  %16 = tail call ptr @malloc(i32 25)
  %memberidx.i44 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i44, align 8
  %memberidx1.i45 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 2
  %18 = load i64, ptr %memberidx1.i45, align 4
  store i1 false, ptr %16, align 1
  %memberidx1.i.i46 = getelementptr inbounds %ArrayIterator_FloError_, ptr %16, i64 0, i32 1
  %memberidx2.i.i47 = getelementptr inbounds %ArrayIterator_FloError_, ptr %16, i64 0, i32 3
  store ptr %17, ptr %memberidx2.i.i47, align 8
  %memberidx3.i.i48 = getelementptr inbounds %ArrayIterator_FloError_, ptr %16, i64 0, i32 2
  store i64 %18, ptr %memberidx3.i.i48, align 4
  store i64 1, ptr %memberidx1.i.i46, align 4
  %19 = icmp slt i64 %18, 1
  br i1 %19, label %for.end10, label %for.body8

for.body8:                                        ; preds = %for.end, %for.body8
  %20 = phi i64 [ %21, %for.body8 ], [ 1, %for.end ]
  %error.085.in = phi ptr [ %22, %for.body8 ], [ %17, %for.end ]
  %error.085 = load ptr, ptr %error.085.in, align 8
  tail call void @free(ptr %error.085)
  %21 = add nuw nsw i64 %20, 1
  %22 = getelementptr inbounds ptr, ptr %17, i64 %20
  %.not101 = icmp slt i64 %20, %18
  br i1 %.not101, label %for.body8, label %for.cond7.for.end10_crit_edge

for.cond7.for.end10_crit_edge:                    ; preds = %for.body8
  store i64 %21, ptr %memberidx1.i.i46, align 4
  br label %for.end10

for.end10:                                        ; preds = %for.cond7.for.end10_crit_edge, %for.end
  tail call void @free(ptr nonnull %16)
  %23 = load ptr, ptr %memberidx6, align 8
  %memberidx.i55 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i55, align 8
  tail call void @free(ptr %24)
  tail call void @free(ptr %23)
  %memberidx14 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 7
  %25 = load ptr, ptr %memberidx14, align 8
  %26 = tail call ptr @malloc(i32 25)
  %27 = load ptr, ptr %25, align 8
  %memberidx1.i56 = getelementptr inbounds %Map_string_FileId_, ptr %25, i64 0, i32 1
  %28 = load i64, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %Map_string_FileId_, ptr %25, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i57, align 4
  store i1 false, ptr %26, align 1
  %memberidx1.i.i58 = getelementptr inbounds %MapIterator_string_FileId_, ptr %26, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i.i58, align 8
  %memberidx2.i.i59 = getelementptr inbounds %MapIterator_string_FileId_, ptr %26, i64 0, i32 2
  %memberidx3.i.i60 = getelementptr inbounds %MapIterator_string_FileId_, ptr %26, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i60, align 4
  %30 = add nsw i64 %28, -1
  store i64 %30, ptr %memberidx2.i.i59, align 4
  %31 = icmp sgt i64 %28, 0
  br i1 %31, label %while.entry.i, label %MapIterator_string_FileId__next.exit

while.entry.i:                                    ; preds = %for.end10, %ifend.i
  %32 = phi i64 [ %35, %ifend.i ], [ %30, %for.end10 ]
  %33 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %27, %for.end10 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %33, i64 1
  %34 = load ptr, ptr %33, align 8
  %.not.i63 = icmp eq ptr %34, null
  br i1 %.not.i63, label %ifend.i, label %MapIterator_string_FileId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %35 = add nsw i64 %32, -1
  store i64 %35, ptr %memberidx2.i.i59, align 4
  %36 = icmp sgt i64 %32, 0
  br i1 %36, label %while.entry.i, label %MapIterator_string_FileId__next.exit.loopexit

MapIterator_string_FileId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %memberidx2.i.i59.promoted100 = phi i64 [ %35, %ifend.i ], [ %32, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i58, align 8
  br label %MapIterator_string_FileId__next.exit

MapIterator_string_FileId__next.exit:             ; preds = %MapIterator_string_FileId__next.exit.loopexit, %for.end10
  %memberidx2.i.i59.promoted = phi i64 [ %memberidx2.i.i59.promoted100, %MapIterator_string_FileId__next.exit.loopexit ], [ %30, %for.end10 ]
  %memberidx1.i.i58.promoted81 = phi ptr [ %incdec.ptr.i, %MapIterator_string_FileId__next.exit.loopexit ], [ %27, %for.end10 ]
  %storemerge7478 = icmp slt i64 %29, 1
  br i1 %storemerge7478, label %for.end18, label %for.body16

for.body16:                                       ; preds = %MapIterator_string_FileId__next.exit, %MapIterator_string_FileId__next.exit72
  %37 = phi i64 [ %46, %MapIterator_string_FileId__next.exit72 ], [ %memberidx2.i.i59.promoted, %MapIterator_string_FileId__next.exit ]
  %incdec.ptr.i66.lcssa83 = phi ptr [ %incdec.ptr.i66.lcssa82, %MapIterator_string_FileId__next.exit72 ], [ %memberidx1.i.i58.promoted81, %MapIterator_string_FileId__next.exit ]
  %storemerge7579.in = phi i64 [ %storemerge7579, %MapIterator_string_FileId__next.exit72 ], [ %29, %MapIterator_string_FileId__next.exit ]
  %storemerge7579 = add nsw i64 %storemerge7579.in, -1
  %file_id.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i66.lcssa83, i64 -1
  %file_id.0 = load ptr, ptr %file_id.0.in, align 8
  tail call void @free(ptr %file_id.0)
  %38 = add nsw i64 %37, -1
  %39 = icmp sgt i64 %37, 0
  br i1 %39, label %while.entry.i68.preheader, label %MapIterator_string_FileId__next.exit72

while.entry.i68.preheader:                        ; preds = %for.body16
  %40 = shl i64 %37, 3
  %uglygep = getelementptr i8, ptr %incdec.ptr.i66.lcssa83, i64 %40
  br label %while.entry.i68

while.entry.i68:                                  ; preds = %while.entry.i68.preheader, %ifend.i71
  %41 = phi i64 [ %44, %ifend.i71 ], [ %38, %while.entry.i68.preheader ]
  %42 = phi ptr [ %incdec.ptr.i66, %ifend.i71 ], [ %incdec.ptr.i66.lcssa83, %while.entry.i68.preheader ]
  %incdec.ptr.i66 = getelementptr inbounds ptr, ptr %42, i64 1
  %43 = load ptr, ptr %42, align 8
  %.not.i67 = icmp eq ptr %43, null
  br i1 %.not.i67, label %ifend.i71, label %MapIterator_string_FileId__next.exit72

ifend.i71:                                        ; preds = %while.entry.i68
  %44 = add nsw i64 %41, -1
  %45 = icmp sgt i64 %41, 0
  br i1 %45, label %while.entry.i68, label %MapIterator_string_FileId__next.exit72

MapIterator_string_FileId__next.exit72:           ; preds = %while.entry.i68, %ifend.i71, %for.body16
  %46 = phi i64 [ %38, %for.body16 ], [ %41, %while.entry.i68 ], [ -1, %ifend.i71 ]
  %incdec.ptr.i66.lcssa82 = phi ptr [ %incdec.ptr.i66.lcssa83, %for.body16 ], [ %incdec.ptr.i66, %while.entry.i68 ], [ %uglygep, %ifend.i71 ]
  %storemerge74 = icmp slt i64 %storemerge7579.in, 2
  br i1 %storemerge74, label %for.cond15.for.end18_crit_edge, label %for.body16

for.cond15.for.end18_crit_edge:                   ; preds = %MapIterator_string_FileId__next.exit72
  store ptr %incdec.ptr.i66.lcssa82, ptr %memberidx1.i.i58, align 8
  store i64 %46, ptr %memberidx2.i.i59, align 4
  br label %for.end18

for.end18:                                        ; preds = %for.cond15.for.end18_crit_edge, %MapIterator_string_FileId__next.exit
  tail call void @free(ptr nonnull %26)
  %47 = load ptr, ptr %memberidx14, align 8
  %48 = load ptr, ptr %47, align 8
  tail call void @free(ptr %48)
  tail call void @free(ptr %47)
  %memberidx.i37 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %49 = load ptr, ptr %memberidx.i37, align 8
  %.not.i = icmp eq ptr %49, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end18
  %memberidx.i.i = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %50)
  tail call void @free(ptr nonnull %49)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %for.end18, %if.entry.i
  ret void
}

define internal fastcc void @Map_string_FileId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_FileId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_FileId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_FileId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_FileId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_FileId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_FileId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_FileId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal i64 @File_write_string(ptr nocapture readonly %0, ptr %1) {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  %4 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %4, i64 0, i32 3
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2, align 4
  %8 = tail call i64 @write(i64 %3, ptr %6, i64 %7)
  ret i64 %8
}

define internal ptr @File_read_all(ptr nocapture readonly %0) {
  %buffer = alloca [1024 x i8], align 1
  %2 = alloca %StringBuilder, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %buffer, i8 0, i64 1024, i1 false)
  store ptr @VTableStringBuilder, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 2
  store i64 1024, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 1
  %3 = tail call ptr @malloc(i32 1024)
  store ptr %3, ptr %memberidx1.i, align 8
  %memberidx3.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 3
  store ptr %3, ptr %memberidx3.i, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 8
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = call i64 @read(i64 %4, ptr nonnull %buffer, i64 1024)
  %.not = icmp eq i64 %5, 0
  br i1 %.not, label %while.end, label %while.entry

while.entry:                                      ; preds = %1, %while.entry
  %read_len.0 = phi i64 [ %9, %while.entry ], [ %5, %1 ]
  %6 = load ptr, ptr %2, align 8
  %7 = load ptr, ptr %6, align 8
  call void %7(ptr nonnull %2, ptr nonnull %buffer, i64 %read_len.0)
  %8 = load i64, ptr %memberidx, align 4
  %9 = call i64 @read(i64 %8, ptr nonnull %buffer, i64 1024)
  %.not6 = icmp eq i64 %9, 0
  br i1 %.not6, label %while.end.loopexit, label %while.entry

while.end.loopexit:                               ; preds = %while.entry
  %.pre = load ptr, ptr %2, align 8
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %1
  %10 = phi ptr [ %.pre, %while.end.loopexit ], [ @VTableStringBuilder, %1 ]
  %memberidx3 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx3, align 8
  %12 = call ptr %11(ptr nonnull %2)
  ret ptr %12
}

; Function Attrs: nofree
define internal i64 @File_read_bytes_length(ptr nocapture readonly %0, ptr nocapture %1, i64 %2) #0 {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call i64 @read(i64 %4, ptr %1, i64 %2)
  ret i64 %5
}

; Function Attrs: nofree
define internal i64 @File_write_bytes_length(ptr nocapture readonly %0, ptr nocapture readonly %1, i64 %2) #0 {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call i64 @write(i64 %4, ptr %1, i64 %2)
  ret i64 %5
}

define internal void @File_close(ptr nocapture readonly %0) {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %2 = load i64, ptr %memberidx, align 4
  %3 = tail call i64 @close(i64 %2)
  ret void
}

; Function Attrs: nofree
declare noundef i64 @open(ptr nocapture noundef readonly, i64 noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nounwind willreturn
define internal void @StringBuilder_add_byte(ptr nocapture %0, i8 %1) #10 {
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = sub nuw i64 %3, %4
  %6 = icmp slt i64 %5, 2
  br i1 %6, label %if.entry, label %.ifend_crit_edge

.ifend_crit_edge:                                 ; preds = %2
  %memberidx2.phi.trans.insert = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre = load ptr, ptr %memberidx2.phi.trans.insert, align 8
  br label %ifend

if.entry:                                         ; preds = %2
  %7 = shl nuw i64 %3, 1
  store i64 %7, ptr %memberidx, align 4
  %memberidx2.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %9 = tail call ptr @realloc(ptr %8, i64 %7)
  store ptr %9, ptr %memberidx2.i, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx1, align 4
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  store ptr %11, ptr %memberidx5.i, align 8
  br label %ifend

ifend:                                            ; preds = %.ifend_crit_edge, %if.entry
  %12 = phi ptr [ %.pre, %.ifend_crit_edge ], [ %11, %if.entry ]
  %memberidx2 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  store i8 %1, ptr %12, align 1
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 1
  store ptr %14, ptr %memberidx2, align 8
  %15 = load i64, ptr %memberidx1, align 4
  %16 = add nuw i64 %15, 1
  store i64 %16, ptr %memberidx1, align 4
  ret void
}

; Function Attrs: nounwind
define internal void @StringBuilder_add_bytes_length(ptr nocapture %0, ptr nocapture readonly %1, i64 %2) #9 {
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %5 = load i64, ptr %memberidx1, align 4
  %6 = sub nuw i64 %4, %5
  %.not = icmp sgt i64 %6, %2
  br i1 %.not, label %.while.end_crit_edge, label %while.entry.preheader

.while.end_crit_edge:                             ; preds = %3
  %memberidx4.phi.trans.insert = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre23 = load ptr, ptr %memberidx4.phi.trans.insert, align 8
  br label %while.end

while.entry.preheader:                            ; preds = %3
  %memberidx2.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %7 = phi ptr [ %.pre, %while.entry.preheader ], [ %10, %while.entry ]
  %8 = phi i64 [ %4, %while.entry.preheader ], [ %13, %while.entry ]
  %9 = shl nuw i64 %8, 1
  store i64 %9, ptr %memberidx, align 4
  %10 = tail call ptr @realloc(ptr %7, i64 %9)
  store ptr %10, ptr %memberidx2.i, align 8
  %11 = load i64, ptr %memberidx1, align 4
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  store ptr %12, ptr %memberidx5.i, align 8
  %13 = load i64, ptr %memberidx, align 4
  %14 = sub nuw i64 %13, %11
  %.not22 = icmp sgt i64 %14, %2
  br i1 %.not22, label %while.end.loopexit, label %while.entry

while.end.loopexit:                               ; preds = %while.entry
  %15 = getelementptr inbounds i8, ptr %10, i64 %11
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %.while.end_crit_edge
  %16 = phi ptr [ %.pre23, %.while.end_crit_edge ], [ %15, %while.end.loopexit ]
  %memberidx4 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %1, i64 %2, i1 false)
  %17 = load ptr, ptr %memberidx4, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 %2
  store ptr %18, ptr %memberidx4, align 8
  %19 = load i64, ptr %memberidx1, align 4
  %20 = add nuw i64 %19, %2
  store i64 %20, ptr %memberidx1, align 4
  ret void
}

define internal void @StringBuilder_append_string(ptr %0, ptr %1) {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call ptr %6(ptr nonnull %1)
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %8 = load i64, ptr %memberidx2, align 4
  tail call void %4(ptr nonnull %0, ptr %7, i64 %8)
  ret void
}

define internal noalias ptr @StringBuilder_get_string(ptr nocapture readonly %0) {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %3, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %4, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %4, ptr %memberidx2.i, align 4
  ret ptr %2
}

; Function Attrs: nofree
declare noundef i64 @read(i64 noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare noundef i64 @access(ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #11

declare i64 @close(i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef ptr @realpath(ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #11

declare ptr @dirname(ptr) local_unnamed_addr

define internal fastcc void @print_message_error(i64 %0, ptr %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %4, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  store ptr %3, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %5 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %6 = tail call ptr %5(ptr nonnull %4)
  %7 = load i64, ptr %memberidx1.i.i.i, align 4
  %8 = tail call i64 @write(i64 1, ptr %6, i64 %7)
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %9)
  tail call void @free(ptr %4)
  switch i64 %0, label %else11 [
    i64 0, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 5, label %if.entry7
    i64 1, label %if.entry10
  ]

if.entry:                                         ; preds = %2
  %10 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %10, ptr noundef nonnull align 8 dereferenceable(21) @10, i64 21, i1 false)
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i, align 4
  br label %ifend

ifend:                                            ; preds = %if.entry10, %else11, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink61 = phi ptr [ %38, %if.entry10 ], [ %40, %else11 ], [ %36, %if.entry7 ], [ %34, %if.entry4 ], [ %32, %if.entry1 ], [ %11, %if.entry ]
  %.sink60 = phi i64 [ 14, %if.entry10 ], [ 9, %else11 ], [ 14, %if.entry7 ], [ 12, %if.entry4 ], [ 16, %if.entry1 ], [ 21, %if.entry ]
  %memberidx1.i.i44.sink = phi ptr [ %memberidx1.i.i44, %if.entry10 ], [ %memberidx1.i.i50, %else11 ], [ %memberidx1.i.i38, %if.entry7 ], [ %memberidx1.i.i32, %if.entry4 ], [ %memberidx1.i.i26, %if.entry1 ], [ %memberidx1.i.i, %if.entry ]
  %memberidx.i.i43.sink = phi ptr [ %memberidx.i.i43, %if.entry10 ], [ %memberidx.i.i49, %else11 ], [ %memberidx.i.i37, %if.entry7 ], [ %memberidx.i.i31, %if.entry4 ], [ %memberidx.i.i25, %if.entry1 ], [ %memberidx.i.i, %if.entry ]
  %memberidx2.i.i45 = getelementptr inbounds %string, ptr %.sink61, i64 0, i32 3
  store i64 %.sink60, ptr %memberidx2.i.i45, align 4
  %12 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %13 = tail call ptr %12(ptr nonnull %.sink61)
  %14 = load i64, ptr %memberidx1.i.i44.sink, align 4
  %15 = tail call i64 @write(i64 1, ptr %13, i64 %14)
  %16 = load ptr, ptr %memberidx.i.i43.sink, align 8
  tail call void @free(ptr %16)
  tail call void @free(ptr %.sink61)
  %17 = tail call ptr @malloc(i32 4)
  store i32 1831885595, ptr %17, align 8
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i1.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i1.i, align 8
  %memberidx1.i.i2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i2.i, align 4
  %memberidx2.i.i3.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i3.i, align 4
  %19 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %20 = tail call ptr %19(ptr nonnull %18)
  %21 = load i64, ptr %memberidx1.i.i2.i, align 4
  %22 = tail call i64 @write(i64 1, ptr %20, i64 %21)
  %23 = load ptr, ptr %memberidx.i.i1.i, align 8
  tail call void @free(ptr %23)
  tail call void @free(ptr %18)
  %24 = load ptr, ptr %1, align 8
  %memberidx.i.i.i22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %24, i64 0, i32 3
  %25 = load ptr, ptr %memberidx.i.i.i22, align 8
  %26 = tail call ptr %25(ptr nonnull %1)
  %memberidx1.i.i.i23 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %27 = load i64, ptr %memberidx1.i.i.i23, align 4
  %28 = tail call i64 @write(i64 1, ptr %26, i64 %27)
  %29 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %memberidx.i.i24 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i.i24, align 8
  tail call void @free(ptr %30)
  tail call void @free(ptr %1)
  ret void

if.entry1:                                        ; preds = %2
  %31 = tail call ptr @malloc(i32 16)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %31, ptr noundef nonnull align 8 dereferenceable(16) @11, i64 16, i1 false)
  %32 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i25 = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i25, align 8
  %memberidx1.i.i26 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 16, ptr %memberidx1.i.i26, align 4
  br label %ifend

if.entry4:                                        ; preds = %2
  %33 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %33, ptr noundef nonnull align 8 dereferenceable(12) @12, i64 12, i1 false)
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i31 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i31, align 8
  %memberidx1.i.i32 = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i32, align 4
  br label %ifend

if.entry7:                                        ; preds = %2
  %35 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %35, ptr noundef nonnull align 8 dereferenceable(14) @13, i64 14, i1 false)
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i.i37 = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i.i37, align 8
  %memberidx1.i.i38 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i38, align 4
  br label %ifend

if.entry10:                                       ; preds = %2
  %37 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %37, ptr noundef nonnull align 8 dereferenceable(14) @14, i64 14, i1 false)
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i.i43 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i.i43, align 8
  %memberidx1.i.i44 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i44, align 4
  br label %ifend

else11:                                           ; preds = %2
  %39 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %39, ptr noundef nonnull align 8 dereferenceable(9) @15, i64 9, i1 false)
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i49 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i50, align 4
  br label %ifend
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ScopeId__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ScopeId__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ScopeId__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc void @Map_string_VarId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_VarId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_VarId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_VarId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_VarId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nounwind willreturn
define internal fastcc void @Scope___del__(ptr nocapture readonly %0) unnamed_addr #10 {
  %2 = load ptr, ptr %0, align 8
  tail call void @free(ptr %2)
  %memberidx1 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load ptr, ptr %3, align 8
  tail call void @free(ptr %4)
  tail call void @free(ptr %3)
  %memberidx2 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %memberidx2, align 8
  %6 = load ptr, ptr %5, align 8
  tail call void @free(ptr %6)
  tail call void @free(ptr %5)
  %memberidx3 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load ptr, ptr %7, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx4 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load ptr, ptr %9, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  %memberidx5 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = load ptr, ptr %11, align 8
  tail call void @free(ptr %12)
  tail call void @free(ptr %11)
  ret void
}

define internal fastcc void @Map_string_EnumId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_EnumId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_EnumId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_EnumId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_EnumId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_string_Type__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_Type_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_Type____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_Type__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_Type_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_Type__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_string_ClassId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_ClassId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_ClassId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_ClassId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_ClassId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Scope__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Scope__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Scope__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_VarDeclaration__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_VarDeclaration__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_VarDeclaration__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Var__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Var__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Var__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ConstDeclaration__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ConstDeclaration__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ConstDeclaration__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc void @Map_string_PropId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_PropId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_PropId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_PropId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_PropId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumField__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_EnumField__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Enum__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Enum__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Enum__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Const__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Const__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Const__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FunctionArg__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FunctionArg__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_FunctionArg__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Statement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Statement__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Statement__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Type__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Type__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Type__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassMethod__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassMethod__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ClassMethod__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassField__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ClassField__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Class__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Class__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Class__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Function__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Function__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Function__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Module__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Module__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Module__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Token__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Token__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Token__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Array_Token___pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Array_Token___find(ptr nocapture readonly %0, ptr nocapture readonly %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx1.i = getelementptr inbounds %Array_Token_, ptr %1, i64 0, i32 2
  %5 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i13.i = getelementptr inbounds %Array_Token_, ptr %1, i64 0, i32 1
  %6 = icmp sgt i64 %5, 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.010 = phi i64 [ 0, %for.body.lr.ph ], [ %18, %ifend ]
  %7 = getelementptr inbounds ptr, ptr %4, i64 %i.010
  %8 = load ptr, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %9, %5
  br i1 %.not.i, label %for.cond.i.preheader, label %ifend

for.cond.i.preheader:                             ; preds = %for.body
  br i1 %6, label %for.body.i.lr.ph, label %common.ret

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i, align 8
  %11 = load ptr, ptr %memberidx.i13.i, align 8
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %12 = add nuw nsw i64 %i.0.i8, 1
  %13 = icmp slt i64 %12, %5
  br i1 %13, label %for.body.i, label %common.ret

for.body.i:                                       ; preds = %for.body.i.lr.ph, %for.cond.i
  %i.0.i8 = phi i64 [ 0, %for.body.i.lr.ph ], [ %12, %for.cond.i ]
  %14 = getelementptr inbounds ptr, ptr %10, i64 %i.0.i8
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds ptr, ptr %11, i64 %i.0.i8
  %17 = load ptr, ptr %16, align 8
  %.not12.i = icmp eq ptr %15, %17
  br i1 %.not12.i, label %for.cond.i, label %ifend

common.ret:                                       ; preds = %ifend, %for.cond.i.preheader, %for.cond.i, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.010, %for.cond.i ], [ %i.010, %for.cond.i.preheader ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body.i, %for.body
  %18 = add nuw nsw i64 %i.010, 1
  %19 = icmp slt i64 %18, %2
  br i1 %19, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Array_Token___ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal i64 @Array_uint__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds i64, ptr %4, i64 %2
  %6 = load i64, ptr %5, align 4
  ret i64 %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_uint__find(ptr nocapture readonly %0, i64 %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds i64, ptr %4, i64 %i.06
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_uint__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ImportClause__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ImportClause__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ImportClause__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ImportNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ImportNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ImportNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_VarDeclarationStatement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_VarDeclarationStatement__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_VarDeclarationStatement__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumNodeField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumNodeField__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_EnumNodeField__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_EnumNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_TypeAliasNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_TypeAliasNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_TypeAliasNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ConstDeclarationStatement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ConstDeclarationStatement__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ConstDeclarationStatement__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ArgNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ArgNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ArgNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_StatementNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_StatementNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_StatementNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_MethodNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_MethodNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_MethodNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FieldNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FieldNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_FieldNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_TypeNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_TypeNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_TypeNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_GenericParameterNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_GenericParameterNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_GenericParameterNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassDeclarationNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassDeclarationNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ClassDeclarationNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FunctionDeclarationNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FunctionDeclarationNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_FunctionDeclarationNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc void @ModuleAST_constructor(ptr nocapture writeonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionDeclarationNode_, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 1
  %3 = tail call ptr @malloc(i32 64)
  store ptr %3, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  store ptr %2, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassDeclarationNode_, ptr %4, align 8
  %memberidx.i27 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i27, align 4
  %memberidx1.i28 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i28, align 4
  %memberidx2.i29 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i29, align 8
  store i64 0, ptr %memberidx.i27, align 4
  store ptr %4, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 3
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ImportNode_, ptr %6, align 8
  %memberidx.i30 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i30, align 4
  %memberidx1.i31 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i31, align 4
  %memberidx2.i32 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i32, align 8
  store i64 0, ptr %memberidx.i30, align 4
  store ptr %6, ptr %memberidx6, align 8
  %memberidx9 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 4
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ConstDeclarationStatement_, ptr %8, align 8
  %memberidx.i33 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i33, align 4
  %memberidx1.i34 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i34, align 4
  %memberidx2.i35 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i35, align 8
  store i64 0, ptr %memberidx.i33, align 4
  store ptr %8, ptr %memberidx9, align 8
  %memberidx12 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 5
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_VarDeclarationStatement_, ptr %10, align 8
  %memberidx.i36 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 2
  store i64 0, ptr %memberidx.i36, align 4
  %memberidx1.i37 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i38, align 8
  store i64 0, ptr %memberidx.i36, align 4
  store ptr %10, ptr %memberidx12, align 8
  %memberidx15 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 2
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumNode_, ptr %12, align 8
  %memberidx.i39 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx.i39, align 4
  %memberidx1.i40 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 3
  store i64 8, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %memberidx2.i41, align 8
  store i64 0, ptr %memberidx.i39, align 4
  store ptr %12, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeAliasNode_, ptr %14, align 8
  %memberidx.i42 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 2
  store i64 0, ptr %memberidx.i42, align 4
  %memberidx1.i43 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 3
  store i64 8, ptr %memberidx1.i43, align 4
  %memberidx2.i44 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 1
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %memberidx2.i44, align 8
  store i64 0, ptr %memberidx.i42, align 4
  store ptr %14, ptr %memberidx18, align 8
  ret void
}

declare ptr @LLVMGetDefaultTargetTriple() local_unnamed_addr

define internal fastcc ptr @parse_flags(i64 %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = icmp sgt i64 %0, 1
  br i1 %2, label %for.body, label %common.ret

for.body:                                         ; preds = %for.entry, %for.incr
  %arg.075 = phi ptr [ %arg.1, %for.incr ], [ null, %for.entry ]
  %i.074 = phi i64 [ %6, %for.incr ], [ 1, %for.entry ]
  %3 = getelementptr inbounds ptr, ptr %1, i64 %i.074
  %4 = load ptr, ptr %3, align 8
  %5 = load i8, ptr %4, align 1
  %.not = icmp eq i8 %5, 45
  br i1 %.not, label %ifend, label %if.entry

for.incr:                                         ; preds = %if.entry1, %if.entry, %for.end8
  %i.1 = phi i64 [ %i.074, %if.entry1 ], [ %i.074, %if.entry ], [ %i.2, %for.end8 ]
  %arg.1 = phi ptr [ %19, %if.entry1 ], [ %arg.075, %if.entry ], [ %arg.075, %for.end8 ]
  %6 = add nsw i64 %i.1, 1
  %7 = icmp slt i64 %6, %0
  br i1 %7, label %for.body, label %common.ret

common.ret:                                       ; preds = %for.incr, %for.entry, %if.entry17
  %arg.071 = phi ptr [ %arg.075, %if.entry17 ], [ null, %for.entry ], [ %arg.1, %for.incr ]
  ret ptr %arg.071

if.entry:                                         ; preds = %for.body
  %8 = icmp eq ptr %arg.075, null
  br i1 %8, label %if.entry1, label %for.incr

ifend:                                            ; preds = %for.body
  %9 = getelementptr inbounds i8, ptr %4, i64 1
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9)
  %11 = trunc i64 %10 to i32
  %12 = tail call ptr @malloc(i32 %11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr nonnull align 8 %9, i64 %10, i1 false)
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %10, ptr %memberidx2.i.i, align 4
  %14 = load i64, ptr @flags_length, align 8
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body6, label %for.end8

if.entry1:                                        ; preds = %if.entry
  %16 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4)
  %17 = trunc i64 %16 to i32
  %18 = tail call ptr @malloc(i32 %17)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr nonnull align 8 %4, i64 %16, i1 false)
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i55 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i55, align 8
  %memberidx1.i.i56 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 %16, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 %16, ptr %memberidx2.i.i57, align 4
  br label %for.incr

for.body6:                                        ; preds = %ifend, %for.incr7
  %j.073 = phi i64 [ %29, %for.incr7 ], [ 0, %ifend ]
  %20 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %j.073
  %21 = load ptr, ptr %20, align 8
  %memberidx = getelementptr inbounds %Flag, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp eq i64 %23, %24
  br i1 %.not.i, label %ifend.i, label %for.incr7

ifend.i:                                          ; preds = %for.body6
  %memberidx2.i = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i, align 8
  %26 = load ptr, ptr %memberidx.i.i, align 8
  %27 = tail call i64 @memcmp(ptr %25, ptr %26, i64 %23)
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %if.entry9, label %for.incr7

for.incr7:                                        ; preds = %for.body6, %ifend.i, %if.entry13
  %29 = add nuw nsw i64 %j.073, 1
  %30 = load i64, ptr @flags_length, align 8
  %31 = icmp slt i64 %29, %30
  br i1 %31, label %for.body6, label %for.end8

for.end8:                                         ; preds = %for.incr7, %ifend, %if.entry28, %ifend24
  %i.2 = phi i64 [ %35, %if.entry28 ], [ %35, %ifend24 ], [ %i.074, %ifend ], [ %i.074, %for.incr7 ]
  %32 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %32)
  tail call void @free(ptr nonnull %13)
  br label %for.incr

if.entry9:                                        ; preds = %ifend.i
  %33 = load i64, ptr %21, align 4
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %if.entry13, label %ifend15

if.entry13:                                       ; preds = %if.entry9
  %memberidx16 = getelementptr inbounds %FlagBool, ptr %21, i64 0, i32 3
  store i1 true, ptr %memberidx16, align 1
  br label %for.incr7

ifend15:                                          ; preds = %if.entry9
  %35 = add nuw i64 %i.074, 1
  %.not54 = icmp slt i64 %35, %0
  br i1 %.not54, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend15
  %36 = load ptr, ptr %13, align 8
  %memberidx20 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx20, align 8
  %38 = tail call ptr %37(ptr nonnull %13)
  %39 = alloca ptr, align 8
  %40 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %39, ptr nonnull @33, ptr %38)
  %41 = load ptr, ptr %39, align 8
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i59 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i59, align 8
  %memberidx1.i60 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 %40, ptr %memberidx1.i60, align 4
  %memberidx2.i61 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 %40, ptr %memberidx2.i61, align 4
  tail call void @free(ptr %38)
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i62 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %43, i64 0, i32 3
  %44 = load ptr, ptr %memberidx.i.i62, align 8
  %45 = call ptr %44(ptr nonnull %42)
  %46 = load i64, ptr %memberidx1.i60, align 4
  %47 = call i64 @write(i64 1, ptr %45, i64 %46)
  %48 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  br label %common.ret

ifend19:                                          ; preds = %ifend15
  %49 = getelementptr inbounds ptr, ptr %1, i64 %35
  %50 = load ptr, ptr %49, align 8
  %51 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %50)
  %52 = trunc i64 %51 to i32
  %53 = tail call ptr @malloc(i32 %52)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %53, ptr align 8 %50, i64 %51, i1 false)
  %54 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i64 = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i64, align 8
  %memberidx1.i.i65 = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 %51, ptr %memberidx1.i.i65, align 4
  %memberidx2.i.i66 = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 %51, ptr %memberidx2.i.i66, align 4
  %55 = load i64, ptr %21, align 4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %FlagInt, ptr %21, i64 0, i32 3
  %57 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %58 = tail call ptr %57(ptr nonnull %54)
  %59 = tail call i64 @atol(ptr nocapture %58)
  tail call void @free(ptr %58)
  store i64 %59, ptr %memberidx25, align 4
  %60 = load ptr, ptr %memberidx.i.i64, align 8
  tail call void @free(ptr %60)
  tail call void @free(ptr nonnull %54)
  %.pr = load i64, ptr %21, align 4
  br label %ifend24

ifend24:                                          ; preds = %ifend19, %if.entry22
  %61 = phi i64 [ %55, %ifend19 ], [ %.pr, %if.entry22 ]
  %62 = icmp eq i64 %61, 2
  br i1 %62, label %if.entry28, label %for.end8

if.entry28:                                       ; preds = %ifend24
  %memberidx31 = getelementptr inbounds %FlagString, ptr %21, i64 0, i32 3
  store ptr %54, ptr %memberidx31, align 8
  br label %for.end8
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i64 @atol(ptr nocapture) local_unnamed_addr #12

define internal fastcc void @print_flags() unnamed_addr {
for.entry:
  %0 = load i64, ptr @flags_length, align 8
  %1 = icmp sgt i64 %0, 0
  br i1 %1, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %ifend
  %i.038 = phi i64 [ %45, %ifend ], [ 0, %for.entry ]
  %2 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %i.038
  %3 = load ptr, ptr %2, align 8
  %memberidx = getelementptr inbounds %Flag, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %5, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = call ptr %6(ptr nonnull %4)
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @36, ptr %7)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 %9, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %11, i64 0, i32 3
  store i64 %9, ptr %memberidx2.i, align 4
  tail call void @free(ptr %7)
  %12 = load ptr, ptr %11, align 8
  %memberidx.i14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx.i14, align 8
  %14 = call ptr %13(ptr nonnull %11)
  %15 = load i64, ptr %memberidx1.i, align 4
  %16 = call i64 @write(i64 1, ptr %14, i64 %15)
  %17 = load i64, ptr %3, align 4
  switch i64 %17, label %else5 [
    i64 0, label %if.entry
    i64 2, label %if.entry4
  ]

for.end:                                          ; preds = %ifend, %for.entry
  ret void

if.entry:                                         ; preds = %for.body
  %18 = call ptr @malloc(i32 4)
  store i32 1047411744, ptr %18, align 8
  %19 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i16 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i16, align 8
  %memberidx1.i.i17 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i17, align 4
  br label %ifend

ifend:                                            ; preds = %if.entry4, %else5, %if.entry
  %.sink42 = phi ptr [ %49, %if.entry4 ], [ %51, %else5 ], [ %19, %if.entry ]
  %.sink = phi i64 [ 6, %if.entry4 ], [ 1, %else5 ], [ 4, %if.entry ]
  %memberidx1.i.i31.sink = phi ptr [ %memberidx1.i.i31, %if.entry4 ], [ %memberidx1.i.i36, %else5 ], [ %memberidx1.i.i17, %if.entry ]
  %memberidx2.i.i32 = getelementptr inbounds %string, ptr %.sink42, i64 0, i32 3
  store i64 %.sink, ptr %memberidx2.i.i32, align 4
  %20 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %21 = call ptr %20(ptr nonnull %.sink42)
  %22 = load i64, ptr %memberidx1.i.i31.sink, align 4
  %23 = call i64 @write(i64 1, ptr %21, i64 %22)
  %24 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %25 = call ptr @malloc(i32 2)
  store i16 2313, ptr %25, align 8
  %26 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i.i20 = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %25, ptr %memberidx.i.i20, align 8
  %memberidx1.i.i21 = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i21, align 4
  %memberidx2.i.i22 = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i22, align 4
  %27 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %28 = call ptr %27(ptr nonnull %26)
  %29 = load i64, ptr %memberidx1.i.i21, align 4
  %30 = call i64 @write(i64 1, ptr %28, i64 %29)
  %memberidx7 = getelementptr inbounds %Flag, ptr %3, i64 0, i32 2
  %31 = load ptr, ptr %memberidx7, align 8
  %32 = load ptr, ptr %31, align 8
  %memberidx8 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx8, align 8
  %34 = call ptr %33(ptr nonnull %31)
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @6, ptr %34)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i25 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i25, align 8
  %memberidx1.i26 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i26, align 4
  %memberidx2.i27 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i27, align 4
  tail call void @free(ptr %34)
  %39 = load ptr, ptr %38, align 8
  %memberidx.i.i28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i64 0, i32 3
  %40 = load ptr, ptr %memberidx.i.i28, align 8
  %41 = call ptr %40(ptr nonnull %38)
  %42 = load i64, ptr %memberidx1.i26, align 4
  %43 = call i64 @write(i64 1, ptr %41, i64 %42)
  %44 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %45 = add nuw nsw i64 %i.038, 1
  %46 = load i64, ptr @flags_length, align 8
  %47 = icmp slt i64 %45, %46
  br i1 %47, label %for.body, label %for.end

if.entry4:                                        ; preds = %for.body
  %48 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %48, ptr noundef nonnull align 8 dereferenceable(6) @37, i64 6, i1 false)
  %49 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i30 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i30, align 8
  %memberidx1.i.i31 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i31, align 4
  br label %ifend

else5:                                            ; preds = %for.body
  %50 = call ptr @malloc(i32 1)
  store i8 32, ptr %50, align 8
  %51 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i35 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i35, align 8
  %memberidx1.i.i36 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i36, align 4
  br label %ifend
}

define internal fastcc ptr @Lexer_tokenize(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Lexer, align 8
  %memberidx.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 1
  store ptr %0, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 2
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 5
  store i64 1, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 4
  store i64 0, ptr %memberidx4.i, align 4
  %memberidx2.i.i24 = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx2.i.i24, align 4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %end.i.thread, label %end.i

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i26, align 8
  store i64 0, ptr %memberidx2.i, align 4
  %8 = tail call i8 %7(ptr nonnull %0, i64 0)
  store i8 %8, ptr %3, align 8
  switch i8 %8, label %if.entry10.i [
    i8 10, label %if.entry.i28
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i28:                                     ; preds = %end.i
  store i64 0, ptr %memberidx4.i, align 4
  store i64 2, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit

if.entry10.i:                                     ; preds = %end.i
  store i64 1, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i28, %if.entry10.i
  %9 = phi i64 [ -1, %end.i.thread ], [ 0, %end.i ], [ 0, %if.entry.i28 ], [ 0, %if.entry10.i ]
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Token_, ptr %10, align 8
  %memberidx.i30 = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 2
  %memberidx1.i31 = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i31, align 4
  %memberidx2.i32 = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i32, align 8
  store i64 0, ptr %memberidx.i30, align 4
  %12 = load i64, ptr %memberidx2.i.i24, align 4
  %13 = icmp sge i64 %9, %12
  %memberidx3 = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 2
  %14 = load i64, ptr %memberidx3, align 4
  %15 = icmp ne i64 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %while.end, label %while.entry

while.entry:                                      ; preds = %Lexer_advance.exit, %Lexer_advance.exit59
  %17 = phi ptr [ %24, %Lexer_advance.exit59 ], [ %11, %Lexer_advance.exit ]
  %18 = phi i64 [ %25, %Lexer_advance.exit59 ], [ 8, %Lexer_advance.exit ]
  %19 = phi i64 [ %26, %Lexer_advance.exit59 ], [ 0, %Lexer_advance.exit ]
  %20 = call fastcc ptr @Lexer_lex_token(ptr nonnull %3)
  %.not.i62 = icmp slt i64 %19, %18
  br i1 %.not.i62, label %Array_Token____sl__.exit67, label %if.entry.i65

if.entry.i65:                                     ; preds = %while.entry
  %21 = shl nuw i64 %18, 1
  store i64 %21, ptr %memberidx1.i31, align 4
  %22 = shl i64 %18, 4
  %23 = call ptr @realloc(ptr %17, i64 %22)
  store ptr %23, ptr %memberidx2.i32, align 8
  br label %Array_Token____sl__.exit67

Array_Token____sl__.exit67:                       ; preds = %while.entry, %if.entry.i65
  %24 = phi ptr [ %17, %while.entry ], [ %23, %if.entry.i65 ]
  %25 = phi i64 [ %18, %while.entry ], [ %21, %if.entry.i65 ]
  %26 = add nuw nsw i64 %19, 1
  store i64 %26, ptr %memberidx.i30, align 4
  %27 = getelementptr inbounds ptr, ptr %24, i64 %19
  store ptr %20, ptr %27, align 8
  %28 = load i64, ptr %memberidx2.i, align 4
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i.i45 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i.i45, align 4
  %.not = icmp slt i64 %28, %30
  br i1 %.not, label %end.i51, label %end.i51.thread

end.i51.thread:                                   ; preds = %Array_Token____sl__.exit67
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit59

end.i51:                                          ; preds = %Array_Token____sl__.exit67
  %31 = load ptr, ptr %29, align 8
  %memberidx2.i47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %31, i64 0, i32 2
  %32 = load ptr, ptr %memberidx2.i47, align 8
  %33 = add nsw i64 %28, 1
  store i64 %33, ptr %memberidx2.i, align 4
  %34 = call i8 %32(ptr nonnull %29, i64 %33)
  store i8 %34, ptr %3, align 8
  switch i8 %34, label %if.entry10.i58 [
    i8 10, label %if.entry.i54
    i8 0, label %Lexer_advance.exit59
  ]

if.entry.i54:                                     ; preds = %end.i51
  store i64 0, ptr %memberidx4.i, align 4
  %35 = load i64, ptr %memberidx3.i, align 4
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit59

if.entry10.i58:                                   ; preds = %end.i51
  %37 = load i64, ptr %memberidx4.i, align 4
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit59

Lexer_advance.exit59:                             ; preds = %end.i51.thread, %end.i51, %if.entry.i54, %if.entry10.i58
  %39 = load i64, ptr %memberidx2.i, align 4
  %40 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i42 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx2.i42, align 4
  %42 = icmp sge i64 %39, %41
  %43 = load ptr, ptr %memberidx1.i, align 8
  %memberidx5 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx5, align 4
  %45 = icmp ne i64 %44, 0
  %46 = or i1 %42, %45
  br i1 %46, label %while.end, label %while.entry

while.end:                                        ; preds = %Lexer_advance.exit59, %Lexer_advance.exit
  %47 = phi ptr [ %11, %Lexer_advance.exit ], [ %24, %Lexer_advance.exit59 ]
  %48 = phi i64 [ 8, %Lexer_advance.exit ], [ %25, %Lexer_advance.exit59 ]
  %49 = phi i64 [ 0, %Lexer_advance.exit ], [ %26, %Lexer_advance.exit59 ]
  %50 = tail call ptr @malloc(i32 16)
  %51 = tail call ptr @malloc(i32 32)
  %52 = load i64, ptr %memberidx4.i, align 4
  %53 = load i64, ptr %memberidx3.i, align 4
  %memberidx2.i38 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %51, i8 0, i64 16, i1 false)
  store i64 %52, ptr %memberidx2.i38, align 4
  %memberidx3.i39 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 3
  store i64 %53, ptr %memberidx3.i39, align 4
  store i64 46, ptr %50, align 4
  %memberidx1.i36 = getelementptr inbounds %Token, ptr %50, i64 0, i32 1
  store ptr %51, ptr %memberidx1.i36, align 8
  %.not.i = icmp slt i64 %49, %48
  br i1 %.not.i, label %Array_Token____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %while.end
  %54 = shl nuw i64 %48, 1
  store i64 %54, ptr %memberidx1.i31, align 4
  %55 = shl i64 %48, 4
  %56 = call ptr @realloc(ptr %47, i64 %55)
  store ptr %56, ptr %memberidx2.i32, align 8
  %.pre = load i64, ptr %memberidx.i30, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %while.end, %if.entry.i
  %57 = phi ptr [ %47, %while.end ], [ %56, %if.entry.i ]
  %58 = phi i64 [ %49, %while.end ], [ %.pre, %if.entry.i ]
  %59 = add nsw i64 %58, 1
  store i64 %59, ptr %memberidx.i30, align 4
  %60 = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %50, ptr %60, align 8
  ret ptr %10
}

define internal fastcc ptr @Lexer_string_token(ptr %0) unnamed_addr {
  %2 = alloca %StringBuilder, align 8
  %3 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Array_Token__, ptr %3, align 8
  %memberidx.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 64)
  store ptr %4, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_uint_, ptr %5, align 8
  %memberidx.i71 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i71, align 4
  %memberidx1.i72 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i72, align 4
  %memberidx2.i73 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i73, align 8
  store i64 0, ptr %memberidx.i71, align 4
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %7, %9
  br i1 %.not, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %1
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %1
  %10 = load ptr, ptr %8, align 8
  %memberidx2.i75 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %memberidx2.i75, align 8
  %12 = add nsw i64 %7, 1
  store i64 %12, ptr %memberidx.i.i, align 4
  %13 = tail call i8 %11(ptr nonnull %8, i64 %12)
  store i8 %13, ptr %0, align 1
  switch i8 %13, label %if.entry10.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i, align 4
  %memberidx7.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %14 = load i64, ptr %memberidx7.i, align 4
  %15 = add nsw i64 %14, 1
  store i64 %15, ptr %memberidx7.i, align 4
  br label %Lexer_advance.exit

if.entry10.i:                                     ; preds = %end.i
  %memberidx13.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %16 = load i64, ptr %memberidx13.i, align 4
  %17 = add nsw i64 %16, 1
  store i64 %17, ptr %memberidx13.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry10.i
  %18 = alloca %StringBuilder, align 8
  store ptr @VTableStringBuilder, ptr %18, align 8
  %memberidx.i76 = getelementptr inbounds %StringBuilder, ptr %18, i64 0, i32 2
  store i64 1, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %StringBuilder, ptr %18, i64 0, i32 1
  %19 = tail call ptr @malloc(i32 1)
  store ptr %19, ptr %memberidx1.i77, align 8
  %memberidx3.i78 = getelementptr inbounds %StringBuilder, ptr %18, i64 0, i32 3
  store ptr %19, ptr %memberidx3.i78, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %18, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 8
  %20 = load i64, ptr %memberidx.i.i, align 4
  %21 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i82 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i82, align 4
  %.not248 = icmp slt i64 %20, %22
  br i1 %.not248, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Lexer_advance.exit
  %memberidx6.i115 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx7.i116 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %.pre = load i8, ptr %0, align 1
  br label %while.entry.outer

while.entry.outer:                                ; preds = %while.entry.preheader, %Lexer_advance.exit144
  %23 = phi i8 [ %.pre, %while.entry.preheader ], [ %131, %Lexer_advance.exit144 ]
  %escape_next.0.ph = phi i1 [ false, %while.entry.preheader ], [ %117, %Lexer_advance.exit144 ]
  %length.0.ph = phi i64 [ 2, %while.entry.preheader ], [ %116, %Lexer_advance.exit144 ]
  %24 = icmp ne i8 %23, 34
  %25 = or i1 %escape_next.0.ph, %24
  br i1 %25, label %ifend.lr.ph, label %while.end

ifend.lr.ph:                                      ; preds = %while.entry.outer
  %26 = add nsw i64 %length.0.ph, -2
  br label %ifend

while.end:                                        ; preds = %while.entry.outer, %Lexer_advance.exit144, %Array_Array_Token_____sl__.exit, %Lexer_advance.exit
  %length.1 = phi i64 [ 2, %Lexer_advance.exit ], [ %length.0.ph, %Array_Array_Token_____sl__.exit ], [ %length.0.ph, %while.entry.outer ], [ %116, %Lexer_advance.exit144 ]
  %27 = call ptr @malloc(i32 32)
  %28 = load i64, ptr %memberidx.i.i, align 4
  %29 = sub i64 1, %length.1
  %30 = add i64 %29, %28
  %31 = add nsw i64 %28, 1
  %memberidx2.i84 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %32 = load i64, ptr %memberidx2.i84, align 4
  %33 = sub nuw i64 %32, %length.1
  %memberidx3.i85 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %34 = load i64, ptr %memberidx3.i85, align 4
  store i64 %30, ptr %27, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i86, align 4
  %memberidx2.i.i87 = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 2
  store i64 %33, ptr %memberidx2.i.i87, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 3
  store i64 %34, ptr %memberidx3.i.i, align 4
  %35 = load ptr, ptr %18, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %35, i64 0, i32 3
  %36 = load ptr, ptr %memberidx32, align 8
  %37 = call ptr %36(ptr nonnull %18)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2)
  %memberidx.i88 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx.i88, align 4
  store ptr @VTableStringBuilder, ptr %2, align 8
  %memberidx.i.i89 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 2
  %39 = icmp eq i64 %38, 0
  %ternary.i.i = select i1 %39, i64 1, i64 %38
  store i64 %ternary.i.i, ptr %memberidx.i.i89, align 8
  %memberidx1.i.i90 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 1
  %40 = trunc i64 %ternary.i.i to i32
  %41 = call ptr @malloc(i32 %40)
  store ptr %41, ptr %memberidx1.i.i90, align 8
  %memberidx3.i.i91 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 3
  store ptr %41, ptr %memberidx3.i.i91, align 8
  %memberidx5.i.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i, align 8
  %42 = load i64, ptr %memberidx.i88, align 4
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %for.body.i, label %unescape.exit

for.body.i:                                       ; preds = %while.end, %for.incr.i
  %i.0.i275 = phi i64 [ %48, %for.incr.i ], [ 0, %while.end ]
  %44 = load ptr, ptr %37, align 8
  %memberidx2.i92 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %44, i64 0, i32 2
  %45 = load ptr, ptr %memberidx2.i92, align 8
  %46 = call i8 %45(ptr nonnull %37, i64 %i.0.i275)
  %47 = icmp eq i8 %46, 92
  br i1 %47, label %if.entry.i93, label %ifend.i

for.incr.i:                                       ; preds = %if.entry16.i, %if.entry8.i, %ifend.i
  %i.1.i = phi i64 [ %51, %if.entry8.i ], [ %83, %if.entry16.i ], [ %i.2.i, %ifend.i ]
  %48 = add nsw i64 %i.1.i, 1
  %49 = load i64, ptr %memberidx.i88, align 4
  %50 = icmp slt i64 %48, %49
  br i1 %50, label %for.body.i, label %unescape.exit.loopexit

if.entry.i93:                                     ; preds = %for.body.i
  %51 = add nuw i64 %i.0.i275, 3
  %52 = load i64, ptr %memberidx.i88, align 4
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %if.entry4.i, label %ifend6.i

ifend.i:                                          ; preds = %ifend27.i.i, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split256, %get_escape_char.exit.i.fold.split257, %get_escape_char.exit.i.fold.split258, %get_escape_char.exit.i.fold.split259, %get_escape_char.exit.i.fold.split260, %get_escape_char.exit.i.fold.split261, %get_escape_char.exit.i.fold.split262, %get_escape_char.exit.i.fold.split263, %ifend6.i, %for.body.i
  %char.0.i = phi i8 [ %46, %for.body.i ], [ 7, %ifend6.i ], [ %69, %ifend27.i.i ], [ 8, %get_escape_char.exit.i.fold.split ], [ 9, %get_escape_char.exit.i.fold.split256 ], [ 12, %get_escape_char.exit.i.fold.split257 ], [ 10, %get_escape_char.exit.i.fold.split258 ], [ 13, %get_escape_char.exit.i.fold.split259 ], [ 11, %get_escape_char.exit.i.fold.split260 ], [ 0, %get_escape_char.exit.i.fold.split261 ], [ %69, %get_escape_char.exit.i.fold.split262 ], [ %69, %get_escape_char.exit.i.fold.split263 ]
  %i.2.i = phi i64 [ %i.0.i275, %for.body.i ], [ %68, %ifend6.i ], [ %68, %ifend27.i.i ], [ %68, %get_escape_char.exit.i.fold.split ], [ %68, %get_escape_char.exit.i.fold.split256 ], [ %68, %get_escape_char.exit.i.fold.split257 ], [ %68, %get_escape_char.exit.i.fold.split258 ], [ %68, %get_escape_char.exit.i.fold.split259 ], [ %68, %get_escape_char.exit.i.fold.split260 ], [ %68, %get_escape_char.exit.i.fold.split261 ], [ %68, %get_escape_char.exit.i.fold.split262 ], [ %68, %get_escape_char.exit.i.fold.split263 ]
  %54 = load ptr, ptr %2, align 8
  %memberidx21.i = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %54, i64 0, i32 2
  %55 = load ptr, ptr %memberidx21.i, align 8
  call void %55(ptr nonnull %2, i8 %char.0.i)
  br label %for.incr.i

if.entry4.i:                                      ; preds = %if.entry.i93
  %56 = load ptr, ptr %37, align 8
  %memberidx7.i94 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %56, i64 0, i32 3
  %57 = load ptr, ptr %memberidx7.i94, align 8
  %58 = call ptr %57(ptr nonnull %37)
  %59 = getelementptr i8, ptr %58, i64 1
  %60 = getelementptr i8, ptr %59, i64 %i.0.i275
  %61 = call i64 @memcmp(ptr %60, ptr nonnull @58, i64 3)
  %62 = icmp eq i64 %61, 0
  %63 = call i64 @memcmp(ptr %60, ptr nonnull @59, i64 3)
  %64 = icmp eq i64 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %if.entry8.i, label %ifend10.i

ifend6.i:                                         ; preds = %if.entry13.i, %ifend10.i, %if.entry.i93
  %66 = load ptr, ptr %37, align 8
  %memberidx20.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %66, i64 0, i32 2
  %67 = load ptr, ptr %memberidx20.i, align 8
  %68 = add nsw i64 %i.0.i275, 1
  %69 = call i8 %67(ptr nonnull %37, i64 %68)
  switch i8 %69, label %ifend27.i.i [
    i8 97, label %ifend.i
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split256
    i8 102, label %get_escape_char.exit.i.fold.split257
    i8 110, label %get_escape_char.exit.i.fold.split258
    i8 114, label %get_escape_char.exit.i.fold.split259
    i8 118, label %get_escape_char.exit.i.fold.split260
    i8 48, label %get_escape_char.exit.i.fold.split261
    i8 39, label %get_escape_char.exit.i.fold.split262
    i8 34, label %get_escape_char.exit.i.fold.split263
  ]

ifend27.i.i:                                      ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split:                ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split256:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split257:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split258:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split259:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split260:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split261:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split262:             ; preds = %ifend6.i
  br label %ifend.i

get_escape_char.exit.i.fold.split263:             ; preds = %ifend6.i
  br label %ifend.i

if.entry8.i:                                      ; preds = %if.entry4.i
  %70 = load ptr, ptr %2, align 8
  %memberidx11.i = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %memberidx11.i, align 8
  %72 = call ptr @malloc(i32 1)
  store i8 27, ptr %72, align 8
  %73 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i, align 4
  call void %71(ptr nonnull %2, ptr nonnull %73)
  br label %for.incr.i

ifend10.i:                                        ; preds = %if.entry4.i
  %74 = add nuw i64 %i.0.i275, 6
  %75 = load i64, ptr %memberidx.i88, align 4
  %76 = icmp slt i64 %74, %75
  br i1 %76, label %if.entry13.i, label %ifend6.i

if.entry13.i:                                     ; preds = %ifend10.i
  %77 = call i64 @memcmp(ptr %60, ptr nonnull @60, i64 5)
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %if.entry16.i, label %ifend6.i

if.entry16.i:                                     ; preds = %if.entry13.i
  %79 = load ptr, ptr %2, align 8
  %memberidx19.i = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx19.i, align 8
  %81 = call ptr @malloc(i32 1)
  store i8 27, ptr %81, align 8
  %82 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %82, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  store ptr %81, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i45.i, align 4
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %82, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i46.i, align 4
  call void %80(ptr nonnull %2, ptr nonnull %82)
  %83 = add nuw i64 %i.0.i275, 5
  br label %for.incr.i

unescape.exit.loopexit:                           ; preds = %for.incr.i
  %.pre295 = load ptr, ptr %2, align 8
  br label %unescape.exit

unescape.exit:                                    ; preds = %unescape.exit.loopexit, %while.end
  %84 = phi ptr [ %.pre295, %unescape.exit.loopexit ], [ @VTableStringBuilder, %while.end ]
  %memberidx22.i = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %84, i64 0, i32 3
  %85 = load ptr, ptr %memberidx22.i, align 8
  %86 = call ptr %85(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2)
  %87 = tail call ptr @malloc(i32 40)
  store i64 34, ptr %87, align 4
  %memberidx1.i.i95 = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i.i95, align 8
  %memberidx.i96 = getelementptr inbounds %StrToken, ptr %87, i64 0, i32 2
  store ptr %86, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %StrToken, ptr %87, i64 0, i32 3
  store ptr %5, ptr %memberidx1.i97, align 8
  %memberidx2.i98 = getelementptr inbounds %StrToken, ptr %87, i64 0, i32 4
  store ptr %3, ptr %memberidx2.i98, align 8
  ret ptr %87

ifend:                                            ; preds = %ifend.lr.ph, %Array_Array_Token_____sl__.exit
  %88 = phi i8 [ %23, %ifend.lr.ph ], [ %199, %Array_Array_Token_____sl__.exit ]
  %escape_next.0276 = phi i1 [ %escape_next.0.ph, %ifend.lr.ph ], [ false, %Array_Array_Token_____sl__.exit ]
  %89 = icmp ne i8 %88, 36
  %90 = or i1 %escape_next.0276, %89
  br i1 %90, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend
  %91 = load i64, ptr %memberidx.i71, align 4
  %92 = load i64, ptr %memberidx1.i72, align 4
  %.not.i101 = icmp slt i64 %91, %92
  br i1 %.not.i101, label %if.entry6.Array_uint____sl__.exit_crit_edge, label %if.entry.i104

if.entry6.Array_uint____sl__.exit_crit_edge:      ; preds = %if.entry6
  %.pre283 = load ptr, ptr %memberidx2.i73, align 8
  br label %Array_uint____sl__.exit

if.entry.i104:                                    ; preds = %if.entry6
  %93 = shl nuw i64 %92, 1
  store i64 %93, ptr %memberidx1.i72, align 4
  %94 = load ptr, ptr %memberidx2.i73, align 8
  %95 = shl i64 %92, 4
  %96 = call ptr @realloc(ptr %94, i64 %95)
  store ptr %96, ptr %memberidx2.i73, align 8
  %.pre282 = load i64, ptr %memberidx.i71, align 4
  br label %Array_uint____sl__.exit

Array_uint____sl__.exit:                          ; preds = %if.entry6.Array_uint____sl__.exit_crit_edge, %if.entry.i104
  %97 = phi ptr [ %.pre283, %if.entry6.Array_uint____sl__.exit_crit_edge ], [ %96, %if.entry.i104 ]
  %98 = phi i64 [ %91, %if.entry6.Array_uint____sl__.exit_crit_edge ], [ %.pre282, %if.entry.i104 ]
  %99 = add nsw i64 %98, 1
  store i64 %99, ptr %memberidx.i71, align 4
  %100 = getelementptr inbounds i64, ptr %97, i64 %98
  store i64 %26, ptr %100, align 4
  %101 = load i64, ptr %memberidx.i.i, align 4
  %102 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i108 = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  %103 = load i64, ptr %memberidx2.i.i108, align 4
  %.not249 = icmp slt i64 %101, %103
  br i1 %.not249, label %end.i114, label %end.i114.thread

end.i114.thread:                                  ; preds = %Array_uint____sl__.exit
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit123

end.i114:                                         ; preds = %Array_uint____sl__.exit
  %104 = load ptr, ptr %102, align 8
  %memberidx2.i110 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %104, i64 0, i32 2
  %105 = load ptr, ptr %memberidx2.i110, align 8
  %106 = add nsw i64 %101, 1
  store i64 %106, ptr %memberidx.i.i, align 4
  %107 = call i8 %105(ptr nonnull %102, i64 %106)
  store i8 %107, ptr %0, align 1
  switch i8 %107, label %if.entry10.i122 [
    i8 10, label %if.entry.i117
    i8 0, label %Lexer_advance.exit123
  ]

if.entry.i117:                                    ; preds = %end.i114
  store i64 0, ptr %memberidx6.i115, align 4
  %108 = load i64, ptr %memberidx7.i116, align 4
  %109 = add nsw i64 %108, 1
  store i64 %109, ptr %memberidx7.i116, align 4
  br label %Lexer_advance.exit123

if.entry10.i122:                                  ; preds = %end.i114
  %110 = load i64, ptr %memberidx6.i115, align 4
  %111 = add nsw i64 %110, 1
  store i64 %111, ptr %memberidx6.i115, align 4
  br label %Lexer_advance.exit123

Lexer_advance.exit123:                            ; preds = %end.i114.thread, %end.i114, %if.entry.i117, %if.entry10.i122
  %112 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Token_, ptr %112, align 8
  %memberidx.i124 = getelementptr inbounds %Array_Token_, ptr %112, i64 0, i32 2
  store i64 0, ptr %memberidx.i124, align 4
  %memberidx1.i125 = getelementptr inbounds %Array_Token_, ptr %112, i64 0, i32 3
  store i64 8, ptr %memberidx1.i125, align 4
  %memberidx2.i126 = getelementptr inbounds %Array_Token_, ptr %112, i64 0, i32 1
  %113 = call ptr @malloc(i32 64)
  store ptr %113, ptr %memberidx2.i126, align 8
  store i64 0, ptr %memberidx.i124, align 4
  %114 = load i8, ptr %0, align 1
  %115 = icmp eq i8 %114, 40
  br i1 %115, label %if.entry12, label %else13

ifend8:                                           ; preds = %ifend
  %116 = add nuw nsw i64 %length.0.ph, 1
  %117 = icmp eq i8 %88, 92
  %118 = load ptr, ptr %18, align 8
  %memberidx30 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %118, i64 0, i32 2
  %119 = load ptr, ptr %memberidx30, align 8
  call void %119(ptr nonnull %18, i8 %88)
  %120 = load i64, ptr %memberidx.i.i, align 4
  %121 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i129 = getelementptr inbounds %string, ptr %121, i64 0, i32 2
  %122 = load i64, ptr %memberidx2.i.i129, align 4
  %.not254 = icmp slt i64 %120, %122
  br i1 %.not254, label %end.i135, label %end.i135.thread

end.i135.thread:                                  ; preds = %ifend8
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit144

end.i135:                                         ; preds = %ifend8
  %123 = load ptr, ptr %121, align 8
  %memberidx2.i131 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %123, i64 0, i32 2
  %124 = load ptr, ptr %memberidx2.i131, align 8
  %125 = add nsw i64 %120, 1
  store i64 %125, ptr %memberidx.i.i, align 4
  %126 = call i8 %124(ptr nonnull %121, i64 %125)
  store i8 %126, ptr %0, align 1
  switch i8 %126, label %if.entry10.i143 [
    i8 10, label %if.entry.i138
    i8 0, label %Lexer_advance.exit144
  ]

if.entry.i138:                                    ; preds = %end.i135
  store i64 0, ptr %memberidx6.i115, align 4
  %127 = load i64, ptr %memberidx7.i116, align 4
  %128 = add nsw i64 %127, 1
  store i64 %128, ptr %memberidx7.i116, align 4
  br label %Lexer_advance.exit144

if.entry10.i143:                                  ; preds = %end.i135
  %129 = load i64, ptr %memberidx6.i115, align 4
  %130 = add nsw i64 %129, 1
  store i64 %130, ptr %memberidx6.i115, align 4
  br label %Lexer_advance.exit144

Lexer_advance.exit144:                            ; preds = %end.i135.thread, %end.i135, %if.entry.i138, %if.entry10.i143
  %131 = phi i8 [ 0, %end.i135.thread ], [ %126, %end.i135 ], [ 10, %if.entry.i138 ], [ %126, %if.entry10.i143 ]
  %132 = load i64, ptr %memberidx.i.i, align 4
  %133 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i147 = getelementptr inbounds %string, ptr %133, i64 0, i32 2
  %134 = load i64, ptr %memberidx2.i147, align 4
  %.not255 = icmp slt i64 %132, %134
  br i1 %.not255, label %while.entry.outer, label %while.end

if.entry12:                                       ; preds = %Lexer_advance.exit123
  %135 = load i64, ptr %memberidx.i.i, align 4
  %136 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i150 = getelementptr inbounds %string, ptr %136, i64 0, i32 2
  %137 = load i64, ptr %memberidx2.i.i150, align 4
  %.not251 = icmp slt i64 %135, %137
  br i1 %.not251, label %end.i156, label %end.i156.thread

end.i156.thread:                                  ; preds = %if.entry12
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit165

end.i156:                                         ; preds = %if.entry12
  %138 = load ptr, ptr %136, align 8
  %memberidx2.i152 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %138, i64 0, i32 2
  %139 = load ptr, ptr %memberidx2.i152, align 8
  %140 = add nsw i64 %135, 1
  store i64 %140, ptr %memberidx.i.i, align 4
  %141 = call i8 %139(ptr nonnull %136, i64 %140)
  store i8 %141, ptr %0, align 1
  switch i8 %141, label %if.entry10.i164 [
    i8 10, label %if.entry.i159
    i8 0, label %Lexer_advance.exit165
  ]

if.entry.i159:                                    ; preds = %end.i156
  store i64 0, ptr %memberidx6.i115, align 4
  %142 = load i64, ptr %memberidx7.i116, align 4
  %143 = add nsw i64 %142, 1
  store i64 %143, ptr %memberidx7.i116, align 4
  br label %Lexer_advance.exit165

if.entry10.i164:                                  ; preds = %end.i156
  %144 = load i64, ptr %memberidx6.i115, align 4
  %145 = add nsw i64 %144, 1
  store i64 %145, ptr %memberidx6.i115, align 4
  br label %Lexer_advance.exit165

Lexer_advance.exit165:                            ; preds = %end.i156.thread, %end.i156, %if.entry.i159, %if.entry10.i164
  %146 = phi i8 [ 0, %end.i156.thread ], [ %141, %end.i156 ], [ 10, %if.entry.i159 ], [ %141, %if.entry10.i164 ]
  %147 = icmp eq i8 %146, 41
  %148 = load i64, ptr %memberidx.i.i, align 4
  %149 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i168 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  %150 = load i64, ptr %memberidx2.i168, align 4
  %151 = icmp sge i64 %148, %150
  %152 = or i1 %147, %151
  br i1 %152, label %ifend14, label %while.entry15

else13:                                           ; preds = %Lexer_advance.exit123
  %153 = call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %154 = load i64, ptr %memberidx.i124, align 4
  %155 = load i64, ptr %memberidx1.i125, align 4
  %.not.i171 = icmp slt i64 %154, %155
  br i1 %.not.i171, label %else13.Array_Token____sl__.exit_crit_edge, label %if.entry.i174

else13.Array_Token____sl__.exit_crit_edge:        ; preds = %else13
  %.pre285 = load ptr, ptr %memberidx2.i126, align 8
  br label %Array_Token____sl__.exit

if.entry.i174:                                    ; preds = %else13
  %156 = shl nuw i64 %155, 1
  store i64 %156, ptr %memberidx1.i125, align 4
  %157 = load ptr, ptr %memberidx2.i126, align 8
  %158 = shl i64 %155, 4
  %159 = call ptr @realloc(ptr %157, i64 %158)
  store ptr %159, ptr %memberidx2.i126, align 8
  %.pre284 = load i64, ptr %memberidx.i124, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %else13.Array_Token____sl__.exit_crit_edge, %if.entry.i174
  %160 = phi ptr [ %.pre285, %else13.Array_Token____sl__.exit_crit_edge ], [ %159, %if.entry.i174 ]
  %161 = phi i64 [ %154, %else13.Array_Token____sl__.exit_crit_edge ], [ %.pre284, %if.entry.i174 ]
  %162 = add nsw i64 %161, 1
  store i64 %162, ptr %memberidx.i124, align 4
  %163 = getelementptr inbounds ptr, ptr %160, i64 %161
  store ptr %153, ptr %163, align 8
  %.pre288 = load i64, ptr %memberidx.i.i, align 4
  %.pre289 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i179.phi.trans.insert = getelementptr inbounds %string, ptr %.pre289, i64 0, i32 2
  %.pre290 = load i64, ptr %memberidx2.i.i179.phi.trans.insert, align 4
  br label %ifend14

ifend14:                                          ; preds = %Lexer_advance.exit242, %Lexer_advance.exit165, %Array_Token____sl__.exit
  %164 = phi i64 [ %150, %Lexer_advance.exit165 ], [ %.pre290, %Array_Token____sl__.exit ], [ %233, %Lexer_advance.exit242 ]
  %165 = phi ptr [ %149, %Lexer_advance.exit165 ], [ %.pre289, %Array_Token____sl__.exit ], [ %232, %Lexer_advance.exit242 ]
  %166 = phi i64 [ %148, %Lexer_advance.exit165 ], [ %.pre288, %Array_Token____sl__.exit ], [ %231, %Lexer_advance.exit242 ]
  %.not250 = icmp slt i64 %166, %164
  br i1 %.not250, label %end.i185, label %end.i185.thread

end.i185.thread:                                  ; preds = %ifend14
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit194

end.i185:                                         ; preds = %ifend14
  %167 = load ptr, ptr %165, align 8
  %memberidx2.i181 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %167, i64 0, i32 2
  %168 = load ptr, ptr %memberidx2.i181, align 8
  %169 = add nsw i64 %166, 1
  store i64 %169, ptr %memberidx.i.i, align 4
  %170 = call i8 %168(ptr nonnull %165, i64 %169)
  store i8 %170, ptr %0, align 1
  switch i8 %170, label %if.entry10.i193 [
    i8 10, label %if.entry.i188
    i8 0, label %Lexer_advance.exit194
  ]

if.entry.i188:                                    ; preds = %end.i185
  store i64 0, ptr %memberidx6.i115, align 4
  %171 = load i64, ptr %memberidx7.i116, align 4
  %172 = add nsw i64 %171, 1
  store i64 %172, ptr %memberidx7.i116, align 4
  br label %Lexer_advance.exit194

if.entry10.i193:                                  ; preds = %end.i185
  %173 = load i64, ptr %memberidx6.i115, align 4
  %174 = add nsw i64 %173, 1
  store i64 %174, ptr %memberidx6.i115, align 4
  br label %Lexer_advance.exit194

Lexer_advance.exit194:                            ; preds = %end.i185.thread, %end.i185, %if.entry.i188, %if.entry10.i193
  %175 = tail call ptr @malloc(i32 16)
  %176 = tail call ptr @malloc(i32 32)
  %177 = load i64, ptr %memberidx6.i115, align 4
  %178 = load i64, ptr %memberidx7.i116, align 4
  %memberidx2.i196 = getelementptr inbounds %FloRange, ptr %176, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %176, i8 0, i64 16, i1 false)
  store i64 %177, ptr %memberidx2.i196, align 4
  %memberidx3.i197 = getelementptr inbounds %FloRange, ptr %176, i64 0, i32 3
  store i64 %178, ptr %memberidx3.i197, align 4
  store i64 46, ptr %175, align 4
  %memberidx1.i198 = getelementptr inbounds %Token, ptr %175, i64 0, i32 1
  store ptr %176, ptr %memberidx1.i198, align 8
  %179 = load i64, ptr %memberidx.i124, align 4
  %180 = load i64, ptr %memberidx1.i125, align 4
  %.not.i201 = icmp slt i64 %179, %180
  br i1 %.not.i201, label %Lexer_advance.exit194.Array_Token____sl__.exit207_crit_edge, label %if.entry.i204

Lexer_advance.exit194.Array_Token____sl__.exit207_crit_edge: ; preds = %Lexer_advance.exit194
  %.pre292 = load ptr, ptr %memberidx2.i126, align 8
  br label %Array_Token____sl__.exit207

if.entry.i204:                                    ; preds = %Lexer_advance.exit194
  %181 = shl nuw i64 %180, 1
  store i64 %181, ptr %memberidx1.i125, align 4
  %182 = load ptr, ptr %memberidx2.i126, align 8
  %183 = shl i64 %180, 4
  %184 = call ptr @realloc(ptr %182, i64 %183)
  store ptr %184, ptr %memberidx2.i126, align 8
  %.pre291 = load i64, ptr %memberidx.i124, align 4
  br label %Array_Token____sl__.exit207

Array_Token____sl__.exit207:                      ; preds = %Lexer_advance.exit194.Array_Token____sl__.exit207_crit_edge, %if.entry.i204
  %185 = phi ptr [ %.pre292, %Lexer_advance.exit194.Array_Token____sl__.exit207_crit_edge ], [ %184, %if.entry.i204 ]
  %186 = phi i64 [ %179, %Lexer_advance.exit194.Array_Token____sl__.exit207_crit_edge ], [ %.pre291, %if.entry.i204 ]
  %187 = add nsw i64 %186, 1
  store i64 %187, ptr %memberidx.i124, align 4
  %188 = getelementptr inbounds ptr, ptr %185, i64 %186
  store ptr %175, ptr %188, align 8
  %189 = load i64, ptr %memberidx.i, align 4
  %190 = load i64, ptr %memberidx1.i, align 4
  %.not.i210 = icmp slt i64 %189, %190
  br i1 %.not.i210, label %Array_Token____sl__.exit207.Array_Array_Token_____sl__.exit_crit_edge, label %if.entry.i213

Array_Token____sl__.exit207.Array_Array_Token_____sl__.exit_crit_edge: ; preds = %Array_Token____sl__.exit207
  %.pre294 = load ptr, ptr %memberidx2.i, align 8
  br label %Array_Array_Token_____sl__.exit

if.entry.i213:                                    ; preds = %Array_Token____sl__.exit207
  %191 = shl nuw i64 %190, 1
  store i64 %191, ptr %memberidx1.i, align 4
  %192 = load ptr, ptr %memberidx2.i, align 8
  %193 = shl i64 %190, 4
  %194 = call ptr @realloc(ptr %192, i64 %193)
  store ptr %194, ptr %memberidx2.i, align 8
  %.pre293 = load i64, ptr %memberidx.i, align 4
  br label %Array_Array_Token_____sl__.exit

Array_Array_Token_____sl__.exit:                  ; preds = %Array_Token____sl__.exit207.Array_Array_Token_____sl__.exit_crit_edge, %if.entry.i213
  %195 = phi ptr [ %.pre294, %Array_Token____sl__.exit207.Array_Array_Token_____sl__.exit_crit_edge ], [ %194, %if.entry.i213 ]
  %196 = phi i64 [ %189, %Array_Token____sl__.exit207.Array_Array_Token_____sl__.exit_crit_edge ], [ %.pre293, %if.entry.i213 ]
  %197 = add nsw i64 %196, 1
  store i64 %197, ptr %memberidx.i, align 4
  %198 = getelementptr inbounds ptr, ptr %195, i64 %196
  store ptr %112, ptr %198, align 8
  %199 = load i8, ptr %0, align 1
  %.not278 = icmp eq i8 %199, 34
  br i1 %.not278, label %while.end, label %ifend

while.entry15:                                    ; preds = %Lexer_advance.exit165, %Lexer_advance.exit242
  %200 = phi i8 [ %227, %Lexer_advance.exit242 ], [ %146, %Lexer_advance.exit165 ]
  %active_open_pars.0 = phi i64 [ %active_open_pars.2, %Lexer_advance.exit242 ], [ 0, %Lexer_advance.exit165 ]
  %201 = icmp eq i8 %200, 40
  %202 = zext i1 %201 to i64
  %spec.select = add nsw i64 %active_open_pars.0, %202
  %203 = icmp eq i8 %200, 41
  %204 = sext i1 %203 to i64
  %active_open_pars.2 = add nsw i64 %spec.select, %204
  %205 = call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %206 = load i64, ptr %memberidx.i124, align 4
  %207 = load i64, ptr %memberidx1.i125, align 4
  %.not.i218 = icmp slt i64 %206, %207
  br i1 %.not.i218, label %while.entry15.Array_Token____sl__.exit224_crit_edge, label %if.entry.i221

while.entry15.Array_Token____sl__.exit224_crit_edge: ; preds = %while.entry15
  %.pre287 = load ptr, ptr %memberidx2.i126, align 8
  br label %Array_Token____sl__.exit224

if.entry.i221:                                    ; preds = %while.entry15
  %208 = shl nuw i64 %207, 1
  store i64 %208, ptr %memberidx1.i125, align 4
  %209 = load ptr, ptr %memberidx2.i126, align 8
  %210 = shl i64 %207, 4
  %211 = call ptr @realloc(ptr %209, i64 %210)
  store ptr %211, ptr %memberidx2.i126, align 8
  %.pre286 = load i64, ptr %memberidx.i124, align 4
  br label %Array_Token____sl__.exit224

Array_Token____sl__.exit224:                      ; preds = %while.entry15.Array_Token____sl__.exit224_crit_edge, %if.entry.i221
  %212 = phi ptr [ %.pre287, %while.entry15.Array_Token____sl__.exit224_crit_edge ], [ %211, %if.entry.i221 ]
  %213 = phi i64 [ %206, %while.entry15.Array_Token____sl__.exit224_crit_edge ], [ %.pre286, %if.entry.i221 ]
  %214 = add nsw i64 %213, 1
  store i64 %214, ptr %memberidx.i124, align 4
  %215 = getelementptr inbounds ptr, ptr %212, i64 %213
  store ptr %205, ptr %215, align 8
  %216 = load i64, ptr %memberidx.i.i, align 4
  %217 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i227 = getelementptr inbounds %string, ptr %217, i64 0, i32 2
  %218 = load i64, ptr %memberidx2.i.i227, align 4
  %.not252 = icmp slt i64 %216, %218
  br i1 %.not252, label %end.i233, label %end.i233.thread

end.i233.thread:                                  ; preds = %Array_Token____sl__.exit224
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit242

end.i233:                                         ; preds = %Array_Token____sl__.exit224
  %219 = load ptr, ptr %217, align 8
  %memberidx2.i229 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %219, i64 0, i32 2
  %220 = load ptr, ptr %memberidx2.i229, align 8
  %221 = add nsw i64 %216, 1
  store i64 %221, ptr %memberidx.i.i, align 4
  %222 = call i8 %220(ptr nonnull %217, i64 %221)
  store i8 %222, ptr %0, align 1
  switch i8 %222, label %if.entry10.i241 [
    i8 10, label %if.entry.i236
    i8 0, label %Lexer_advance.exit242
  ]

if.entry.i236:                                    ; preds = %end.i233
  store i64 0, ptr %memberidx6.i115, align 4
  %223 = load i64, ptr %memberidx7.i116, align 4
  %224 = add nsw i64 %223, 1
  store i64 %224, ptr %memberidx7.i116, align 4
  br label %Lexer_advance.exit242

if.entry10.i241:                                  ; preds = %end.i233
  %225 = load i64, ptr %memberidx6.i115, align 4
  %226 = add nsw i64 %225, 1
  store i64 %226, ptr %memberidx6.i115, align 4
  br label %Lexer_advance.exit242

Lexer_advance.exit242:                            ; preds = %end.i233.thread, %end.i233, %if.entry.i236, %if.entry10.i241
  %227 = phi i8 [ 0, %end.i233.thread ], [ %222, %end.i233 ], [ 10, %if.entry.i236 ], [ %222, %if.entry10.i241 ]
  %228 = icmp ne i8 %227, 41
  %229 = icmp ne i64 %active_open_pars.2, 0
  %230 = or i1 %229, %228
  %231 = load i64, ptr %memberidx.i.i, align 4
  %232 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i245 = getelementptr inbounds %string, ptr %232, i64 0, i32 2
  %233 = load i64, ptr %memberidx2.i245, align 4
  %.not253 = icmp slt i64 %231, %233
  %234 = and i1 %230, %.not253
  br i1 %234, label %while.entry15, label %ifend14
}

define internal fastcc ptr @Lexer_base_int_token(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %3, %5
  br i1 %.not, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  %6 = load ptr, ptr %4, align 8
  %memberidx2.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i, align 8
  %8 = add nsw i64 %3, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %9 = tail call i8 %7(ptr nonnull %4, i64 %8)
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry10.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i, align 4
  %memberidx7.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx7.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx7.i, align 4
  br label %Lexer_advance.exit

if.entry10.i:                                     ; preds = %end.i
  %memberidx13.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx13.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx13.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry10.i
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = add nsw i64 %14, 1
  %16 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i15 = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i15, align 4
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %if.entry.i16, label %Lexer_peek.exit

if.entry.i16:                                     ; preds = %Lexer_advance.exit
  %19 = load ptr, ptr %16, align 8
  %memberidx4.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %19, i64 0, i32 2
  %20 = load ptr, ptr %memberidx4.i, align 8
  %21 = tail call i8 %20(ptr nonnull %16, i64 %15)
  br label %Lexer_peek.exit

Lexer_peek.exit:                                  ; preds = %Lexer_advance.exit, %if.entry.i16
  %common.ret.op.i = phi i8 [ %21, %if.entry.i16 ], [ 0, %Lexer_advance.exit ]
  %22 = add i8 %common.ret.op.i, -97
  %23 = icmp ult i8 %22, 26
  %24 = add i8 %common.ret.op.i, -32
  %common.ret.op.i17 = select i1 %23, i8 %24, i8 %common.ret.op.i
  %25 = icmp slt i64 %1, 10
  %26 = icmp sgt i8 %common.ret.op.i17, 47
  %27 = sext i8 %common.ret.op.i17 to i64
  %28 = add nsw i64 %1, 48
  %29 = icmp sge i64 %28, %27
  %30 = and i1 %26, %29
  br i1 %25, label %in_base_range.exit34, label %ifend.i33

ifend.i33:                                        ; preds = %Lexer_peek.exit
  %31 = icmp sgt i8 %common.ret.op.i17, 64
  %32 = add nuw nsw i64 %1, 65
  %33 = icmp sge i64 %32, %27
  %34 = and i1 %31, %33
  %35 = or i1 %30, %34
  br label %in_base_range.exit34

in_base_range.exit34:                             ; preds = %Lexer_peek.exit, %ifend.i33
  %common.ret.op.i31 = phi i1 [ %35, %ifend.i33 ], [ %30, %Lexer_peek.exit ]
  %36 = load i64, ptr %memberidx.i.i, align 4
  %37 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i55 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i55, align 4
  %.not65 = icmp slt i64 %36, %38
  %39 = and i1 %common.ret.op.i31, %.not65
  br i1 %39, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %in_base_range.exit34
  %memberidx6.i44 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx7.i45 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %40 = add nsw i64 %1, 48
  %41 = add nuw nsw i64 %1, 65
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %in_base_range.exit
  %42 = phi i64 [ %88, %in_base_range.exit ], [ %38, %while.entry.preheader ]
  %43 = phi ptr [ %87, %in_base_range.exit ], [ %37, %while.entry.preheader ]
  %44 = phi i64 [ %86, %in_base_range.exit ], [ %36, %while.entry.preheader ]
  %length.0 = phi i64 [ %49, %in_base_range.exit ], [ 3, %while.entry.preheader ]
  %current_char.0 = phi i8 [ %common.ret.op.i23, %in_base_range.exit ], [ %common.ret.op.i17, %while.entry.preheader ]
  %value.0 = phi i64 [ %48, %in_base_range.exit ], [ 0, %while.entry.preheader ]
  %45 = mul nuw i64 %value.0, %1
  %46 = icmp sgt i8 %current_char.0, 64
  %spec.select.v = select i1 %46, i8 -55, i8 -48
  %spec.select = add i8 %spec.select.v, %current_char.0
  %47 = zext i8 %spec.select to i64
  %48 = add nuw i64 %45, %47
  %49 = add nuw nsw i64 %length.0, 1
  %.not66 = icmp slt i64 %44, %42
  br i1 %.not66, label %end.i43, label %end.i43.thread

end.i43.thread:                                   ; preds = %while.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit52

while.end:                                        ; preds = %in_base_range.exit, %in_base_range.exit34
  %length.1 = phi i64 [ 3, %in_base_range.exit34 ], [ %49, %in_base_range.exit ]
  %value.1 = phi i64 [ 0, %in_base_range.exit34 ], [ %48, %in_base_range.exit ]
  %50 = tail call ptr @malloc(i32 24)
  %51 = tail call ptr @malloc(i32 32)
  %52 = load i64, ptr %memberidx.i.i, align 4
  %53 = sub i64 1, %length.1
  %54 = add i64 %53, %52
  %55 = add nsw i64 %52, 1
  %memberidx2.i59 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %56 = load i64, ptr %memberidx2.i59, align 4
  %57 = sub nuw i64 %56, %length.1
  %memberidx3.i60 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %58 = load i64, ptr %memberidx3.i60, align 4
  store i64 %54, ptr %51, align 4
  %memberidx1.i.i61 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 1
  store i64 %55, ptr %memberidx1.i.i61, align 4
  %memberidx2.i.i62 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 2
  store i64 %57, ptr %memberidx2.i.i62, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 3
  store i64 %58, ptr %memberidx3.i.i, align 4
  store i64 31, ptr %50, align 4
  %memberidx1.i.i56 = getelementptr inbounds %Token, ptr %50, i64 0, i32 1
  store ptr %51, ptr %memberidx1.i.i56, align 8
  %memberidx.i57 = getelementptr inbounds %IntToken, ptr %50, i64 0, i32 2
  store i64 %value.1, ptr %memberidx.i57, align 4
  ret ptr %50

end.i43:                                          ; preds = %while.entry
  %59 = load ptr, ptr %43, align 8
  %memberidx2.i39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %59, i64 0, i32 2
  %60 = load ptr, ptr %memberidx2.i39, align 8
  %61 = add nsw i64 %44, 1
  store i64 %61, ptr %memberidx.i.i, align 4
  %62 = tail call i8 %60(ptr nonnull %43, i64 %61)
  store i8 %62, ptr %0, align 1
  switch i8 %62, label %if.entry10.i51 [
    i8 10, label %if.entry.i46
    i8 0, label %Lexer_advance.exit52
  ]

if.entry.i46:                                     ; preds = %end.i43
  store i64 0, ptr %memberidx6.i44, align 4
  %63 = load i64, ptr %memberidx7.i45, align 4
  %64 = add nsw i64 %63, 1
  store i64 %64, ptr %memberidx7.i45, align 4
  br label %Lexer_advance.exit52

if.entry10.i51:                                   ; preds = %end.i43
  %65 = load i64, ptr %memberidx6.i44, align 4
  %66 = add nsw i64 %65, 1
  store i64 %66, ptr %memberidx6.i44, align 4
  br label %Lexer_advance.exit52

Lexer_advance.exit52:                             ; preds = %end.i43.thread, %end.i43, %if.entry.i46, %if.entry10.i51
  %67 = load i64, ptr %memberidx.i.i, align 4
  %68 = add nsw i64 %67, 1
  %69 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i26 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  %70 = load i64, ptr %memberidx2.i26, align 4
  %71 = icmp slt i64 %68, %70
  br i1 %71, label %if.entry.i29, label %Lexer_peek.exit30

if.entry.i29:                                     ; preds = %Lexer_advance.exit52
  %72 = load ptr, ptr %69, align 8
  %memberidx4.i28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %72, i64 0, i32 2
  %73 = load ptr, ptr %memberidx4.i28, align 8
  %74 = tail call i8 %73(ptr nonnull %69, i64 %68)
  br label %Lexer_peek.exit30

Lexer_peek.exit30:                                ; preds = %Lexer_advance.exit52, %if.entry.i29
  %common.ret.op.i27 = phi i8 [ %74, %if.entry.i29 ], [ 0, %Lexer_advance.exit52 ]
  %75 = add i8 %common.ret.op.i27, -97
  %76 = icmp ult i8 %75, 26
  %77 = add i8 %common.ret.op.i27, -32
  %common.ret.op.i23 = select i1 %76, i8 %77, i8 %common.ret.op.i27
  %78 = icmp sgt i8 %common.ret.op.i23, 47
  %79 = sext i8 %common.ret.op.i23 to i64
  %80 = icmp sge i64 %40, %79
  %81 = and i1 %78, %80
  br i1 %25, label %in_base_range.exit, label %ifend.i

ifend.i:                                          ; preds = %Lexer_peek.exit30
  %82 = icmp sgt i8 %common.ret.op.i23, 64
  %83 = icmp sge i64 %41, %79
  %84 = and i1 %82, %83
  %85 = or i1 %81, %84
  br label %in_base_range.exit

in_base_range.exit:                               ; preds = %Lexer_peek.exit30, %ifend.i
  %common.ret.op.i21 = phi i1 [ %85, %ifend.i ], [ %81, %Lexer_peek.exit30 ]
  %86 = load i64, ptr %memberidx.i.i, align 4
  %87 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i20 = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i20, align 4
  %.not67 = icmp slt i64 %86, %88
  %89 = and i1 %common.ret.op.i21, %.not67
  br i1 %89, label %while.entry, label %while.end
}

define internal fastcc ptr @Lexer_lex_token(ptr %0) unnamed_addr {
  %2 = load i8, ptr %0, align 1
  switch i8 %2, label %ifend [
    i8 32, label %if.entry
    i8 9, label %if.entry
  ]

common.ret:                                       ; preds = %ifend6.i972, %Lexer_advance.exit93.i964, %ifend3.i939, %Lexer_advance.exit.i898, %ifend6.i865, %Lexer_advance.exit93.i857, %ifend3.i832, %Lexer_advance.exit.i791, %ifend.i758, %Lexer_advance.exit.i750, %ifend.i717, %Lexer_advance.exit.i709, %ifend.i563, %Lexer_advance.exit.i555, %ifend.i457, %Lexer_advance.exit.i449, %ifend.i416, %Lexer_advance.exit.i415, %ifend6.i391, %Lexer_advance.exit93.i383, %ifend3.i363, %Lexer_advance.exit.i334, %ifend6.i, %Lexer_advance.exit93.i, %Lexer_advance.exit55.i, %Lexer_advance.exit.i296, %ifend3.i, %Lexer_advance.exit49.i, %Lexer_advance.exit.i271, %end.i226, %if.entry6.i200, %if.entry2.i, %if.entry.i198, %ifend5.i, %ifend.i, %Array_FloError____sl__.exit, %if.entry87, %Lexer_dot_token.exit, %if.entry69, %if.entry66, %Lexer_char_token.exit, %if.entry60, %if.entry57, %if.entry54, %if.entry51, %if.entry48, %if.entry45, %if.entry42, %Lexer_advance.exit519, %if.entry18, %if.entry15, %if.entry12, %if.entry6, %Lexer_advance.exit
  %common.ret.op = phi ptr [ %14, %Lexer_advance.exit ], [ %262, %if.entry6 ], [ %375, %if.entry12 ], [ %382, %if.entry15 ], [ %389, %if.entry18 ], [ %839, %Lexer_advance.exit519 ], [ %872, %if.entry42 ], [ %879, %if.entry45 ], [ %886, %if.entry48 ], [ %893, %if.entry51 ], [ %900, %if.entry54 ], [ %907, %if.entry57 ], [ %914, %if.entry60 ], [ %955, %Lexer_char_token.exit ], [ %964, %if.entry66 ], [ %971, %if.entry69 ], [ %1237, %Lexer_dot_token.exit ], [ %1246, %if.entry87 ], [ null, %Array_FloError____sl__.exit ], [ %237, %ifend.i ], [ %238, %ifend5.i ], [ %275, %if.entry.i198 ], [ %286, %if.entry2.i ], [ %297, %if.entry6.i200 ], [ %338, %end.i226 ], [ %415, %Lexer_advance.exit.i271 ], [ %448, %ifend3.i ], [ %440, %Lexer_advance.exit49.i ], [ %474, %Lexer_advance.exit.i296 ], [ %532, %ifend6.i ], [ %499, %Lexer_advance.exit55.i ], [ %524, %Lexer_advance.exit93.i ], [ %559, %Lexer_advance.exit.i334 ], [ %592, %ifend3.i363 ], [ %610, %Lexer_advance.exit93.i383 ], [ %618, %ifend6.i391 ], [ %645, %Lexer_advance.exit.i415 ], [ %653, %ifend.i416 ], [ %679, %Lexer_advance.exit.i449 ], [ %687, %ifend.i457 ], [ %857, %Lexer_advance.exit.i555 ], [ %865, %ifend.i563 ], [ %997, %Lexer_advance.exit.i709 ], [ %1005, %ifend.i717 ], [ %1031, %Lexer_advance.exit.i750 ], [ %1039, %ifend.i758 ], [ %1065, %Lexer_advance.exit.i791 ], [ %1098, %ifend3.i832 ], [ %1116, %Lexer_advance.exit93.i857 ], [ %1124, %ifend6.i865 ], [ %1151, %Lexer_advance.exit.i898 ], [ %1184, %ifend3.i939 ], [ %1202, %Lexer_advance.exit93.i964 ], [ %1210, %ifend6.i972 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1, %1
  %memberidx.i.i169 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i169, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i170 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i.i170, align 4
  %.not1140 = icmp slt i64 %3, %5
  br i1 %.not1140, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %if.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %if.entry
  %6 = load ptr, ptr %4, align 8
  %memberidx2.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i, align 8
  %8 = add nsw i64 %3, 1
  store i64 %8, ptr %memberidx.i.i169, align 4
  %9 = tail call i8 %7(ptr nonnull %4, i64 %8)
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry10.i [
    i8 10, label %if.entry.i172
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i172:                                    ; preds = %end.i
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i, align 4
  %memberidx7.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx7.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx7.i, align 4
  br label %Lexer_advance.exit

if.entry10.i:                                     ; preds = %end.i
  %memberidx13.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx13.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx13.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i172, %if.entry10.i
  %14 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend:                                            ; preds = %1
  %15 = and i8 %2, -33
  %16 = add i8 %15, -65
  %17 = icmp ult i8 %16, 26
  %18 = icmp eq i8 %2, 95
  %19 = or i1 %18, %17
  br i1 %19, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %memberidx.i176 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i176, align 4
  %21 = add nsw i64 %20, 1
  %memberidx1.i.i178 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i.i179 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i.i179, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i.i, label %Lexer_peek.exit.i

if.entry.i.i:                                     ; preds = %if.entry3
  %25 = load ptr, ptr %22, align 8
  %memberidx4.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %25, i64 0, i32 2
  %26 = load ptr, ptr %memberidx4.i.i, align 8
  %27 = tail call i8 %26(ptr nonnull %22, i64 %21)
  %.pre1254 = load i64, ptr %memberidx.i176, align 4
  %.pre1255 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i32.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1255, i64 0, i32 2
  %.pre1256 = load i64, ptr %memberidx2.i32.i.phi.trans.insert, align 4
  %.pre1266 = add nsw i64 %.pre1254, 1
  br label %Lexer_peek.exit.i

Lexer_peek.exit.i:                                ; preds = %if.entry.i.i, %if.entry3
  %.pre-phi = phi i64 [ %.pre1266, %if.entry.i.i ], [ %21, %if.entry3 ]
  %28 = phi i64 [ %.pre1256, %if.entry.i.i ], [ %23, %if.entry3 ]
  %29 = phi ptr [ %.pre1255, %if.entry.i.i ], [ %22, %if.entry3 ]
  %30 = phi i64 [ %.pre1254, %if.entry.i.i ], [ %20, %if.entry3 ]
  %31 = icmp slt i64 %.pre-phi, %28
  br i1 %31, label %if.entry.i35.i, label %Lexer_peek.exit36.i

if.entry.i35.i:                                   ; preds = %Lexer_peek.exit.i
  %32 = load ptr, ptr %29, align 8
  %memberidx4.i34.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %32, i64 0, i32 2
  %33 = load ptr, ptr %memberidx4.i34.i, align 8
  %34 = tail call i8 %33(ptr nonnull %29, i64 %.pre-phi)
  %.pre1257 = load i64, ptr %memberidx.i176, align 4
  %.pre1258 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i59.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1258, i64 0, i32 2
  %.pre1259 = load i64, ptr %memberidx2.i59.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit36.i

Lexer_peek.exit36.i:                              ; preds = %if.entry.i35.i, %Lexer_peek.exit.i
  %35 = phi i64 [ %.pre1259, %if.entry.i35.i ], [ %28, %Lexer_peek.exit.i ]
  %36 = phi ptr [ %.pre1258, %if.entry.i35.i ], [ %29, %Lexer_peek.exit.i ]
  %37 = phi i64 [ %.pre1257, %if.entry.i35.i ], [ %30, %Lexer_peek.exit.i ]
  %common.ret.op.i33.i = phi i8 [ %34, %if.entry.i35.i ], [ 0, %Lexer_peek.exit.i ]
  %38 = and i8 %common.ret.op.i33.i, -33
  %39 = add i8 %38, -65
  %40 = icmp ult i8 %39, 26
  %41 = icmp eq i8 %common.ret.op.i33.i, 95
  %42 = or i1 %41, %40
  %43 = add i8 %common.ret.op.i33.i, -48
  %44 = icmp ult i8 %43, 10
  %45 = or i1 %44, %42
  %.not1134 = icmp slt i64 %37, %35
  %46 = and i1 %.not1134, %45
  br i1 %46, label %while.entry.i.preheader, label %while.end.i

while.entry.i.preheader:                          ; preds = %Lexer_peek.exit36.i
  %memberidx6.i79.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx7.i80.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Lexer_peek.exit93.i
  %47 = phi i64 [ %67, %Lexer_peek.exit93.i ], [ %35, %while.entry.i.preheader ]
  %48 = phi ptr [ %68, %Lexer_peek.exit93.i ], [ %36, %while.entry.i.preheader ]
  %49 = phi i64 [ %69, %Lexer_peek.exit93.i ], [ %37, %while.entry.i.preheader ]
  %length.0.i = phi i64 [ %50, %Lexer_peek.exit93.i ], [ 1, %while.entry.i.preheader ]
  %50 = add nuw nsw i64 %length.0.i, 1
  %.not1138 = icmp slt i64 %49, %47
  br i1 %.not1138, label %end.i78.i, label %end.i78.i.thread

end.i78.i.thread:                                 ; preds = %while.entry.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit86.i

end.i78.i:                                        ; preds = %while.entry.i
  %51 = load ptr, ptr %48, align 8
  %memberidx2.i74.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %51, i64 0, i32 2
  %52 = load ptr, ptr %memberidx2.i74.i, align 8
  %53 = add nsw i64 %49, 1
  store i64 %53, ptr %memberidx.i176, align 4
  %54 = tail call i8 %52(ptr nonnull %48, i64 %53)
  store i8 %54, ptr %0, align 1
  switch i8 %54, label %if.entry10.i85.i [
    i8 10, label %if.entry.i81.i
    i8 0, label %Lexer_advance.exit86.i
  ]

if.entry.i81.i:                                   ; preds = %end.i78.i
  store i64 0, ptr %memberidx6.i79.i, align 4
  %55 = load i64, ptr %memberidx7.i80.i, align 4
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx7.i80.i, align 4
  br label %Lexer_advance.exit86.i

if.entry10.i85.i:                                 ; preds = %end.i78.i
  %57 = load i64, ptr %memberidx6.i79.i, align 4
  %58 = add nsw i64 %57, 1
  store i64 %58, ptr %memberidx6.i79.i, align 4
  br label %Lexer_advance.exit86.i

Lexer_advance.exit86.i:                           ; preds = %end.i78.i.thread, %end.i78.i, %if.entry10.i85.i, %if.entry.i81.i
  %59 = load i64, ptr %memberidx.i176, align 4
  %60 = add nsw i64 %59, 1
  %61 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i89.i = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i89.i, align 4
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %if.entry.i92.i, label %Lexer_peek.exit93.i

if.entry.i92.i:                                   ; preds = %Lexer_advance.exit86.i
  %64 = load ptr, ptr %61, align 8
  %memberidx4.i91.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %64, i64 0, i32 2
  %65 = load ptr, ptr %memberidx4.i91.i, align 8
  %66 = tail call i8 %65(ptr nonnull %61, i64 %60)
  %.pre1260 = load i64, ptr %memberidx.i176, align 4
  %.pre1261 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i100.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1261, i64 0, i32 2
  %.pre1262 = load i64, ptr %memberidx2.i100.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit93.i

Lexer_peek.exit93.i:                              ; preds = %if.entry.i92.i, %Lexer_advance.exit86.i
  %67 = phi i64 [ %.pre1262, %if.entry.i92.i ], [ %62, %Lexer_advance.exit86.i ]
  %68 = phi ptr [ %.pre1261, %if.entry.i92.i ], [ %61, %Lexer_advance.exit86.i ]
  %69 = phi i64 [ %.pre1260, %if.entry.i92.i ], [ %59, %Lexer_advance.exit86.i ]
  %common.ret.op.i90.i = phi i8 [ %66, %if.entry.i92.i ], [ 0, %Lexer_advance.exit86.i ]
  %70 = and i8 %common.ret.op.i90.i, -33
  %71 = add i8 %70, -65
  %72 = icmp ult i8 %71, 26
  %73 = icmp eq i8 %common.ret.op.i90.i, 95
  %74 = or i1 %73, %72
  %75 = add i8 %common.ret.op.i90.i, -48
  %76 = icmp ult i8 %75, 10
  %77 = or i1 %76, %74
  %.not1139 = icmp slt i64 %69, %67
  %78 = and i1 %.not1139, %77
  br i1 %78, label %while.entry.i, label %while.end.i

while.end.i:                                      ; preds = %Lexer_peek.exit93.i, %Lexer_peek.exit36.i
  %79 = phi ptr [ %36, %Lexer_peek.exit36.i ], [ %68, %Lexer_peek.exit93.i ]
  %length.1.i = phi i64 [ 1, %Lexer_peek.exit36.i ], [ %50, %Lexer_peek.exit93.i ]
  %80 = load ptr, ptr %79, align 8
  %memberidx2.i181 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx2.i181, align 8
  %82 = tail call ptr %81(ptr nonnull %79, i64 %20, i64 %length.1.i)
  %83 = tail call ptr @malloc(i32 32)
  %84 = load i64, ptr %memberidx.i176, align 4
  %85 = sub i64 1, %length.1.i
  %86 = add i64 %85, %84
  %87 = add nsw i64 %84, 1
  %memberidx2.i102.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %88 = load i64, ptr %memberidx2.i102.i, align 4
  %89 = sub nuw i64 %88, %length.1.i
  %memberidx3.i103.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %90 = load i64, ptr %memberidx3.i103.i, align 4
  store i64 %86, ptr %83, align 4
  %memberidx1.i.i104.i = getelementptr inbounds %FloRange, ptr %83, i64 0, i32 1
  store i64 %87, ptr %memberidx1.i.i104.i, align 4
  %memberidx2.i.i105.i = getelementptr inbounds %FloRange, ptr %83, i64 0, i32 2
  store i64 %89, ptr %memberidx2.i.i105.i, align 4
  %memberidx3.i.i106.i = getelementptr inbounds %FloRange, ptr %83, i64 0, i32 3
  store i64 %90, ptr %memberidx3.i.i106.i, align 4
  %91 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %91, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  %92 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i.i.i, align 4
  %memberidx.i.i94.i = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i.i.i = icmp eq i64 %93, 3
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %ifend.i.i

ifend.i.i.i:                                      ; preds = %while.end.i
  %memberidx2.i.i96.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %94 = load ptr, ptr %memberidx2.i.i96.i, align 8
  %95 = tail call i64 @memcmp(ptr %94, ptr nonnull %91, i64 3)
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %if.entry.i183, label %ifend.i.i

ifend.i.i:                                        ; preds = %while.end.i, %ifend.i.i.i
  %97 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %97, align 8
  %98 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i.i89.i.i = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i89.i.i, align 8
  %memberidx1.i.i90.i.i = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i90.i.i, align 4
  %memberidx2.i.i91.i.i = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i91.i.i, align 4
  %99 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i94.i.i = icmp eq i64 %99, 2
  br i1 %.not.i94.i.i, label %ifend.i98.i.i, label %ifend3.i.i

ifend.i98.i.i:                                    ; preds = %ifend.i.i
  %memberidx2.i96.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %100 = load ptr, ptr %memberidx2.i96.i.i, align 8
  %101 = tail call i64 @memcmp(ptr %100, ptr nonnull %97, i64 2)
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %if.entry.i183, label %ifend3.i.i

ifend3.i.i:                                       ; preds = %ifend.i.i, %ifend.i98.i.i
  %103 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %103, ptr noundef nonnull align 8 dereferenceable(5) @42, i64 5, i1 false)
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %104, align 8
  %memberidx.i.i100.i.i = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  store ptr %103, ptr %memberidx.i.i100.i.i, align 8
  %memberidx1.i.i101.i.i = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i101.i.i, align 4
  %memberidx2.i.i102.i.i = getelementptr inbounds %string, ptr %104, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i102.i.i, align 4
  %105 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i105.i.i = icmp eq i64 %105, 5
  br i1 %.not.i105.i.i, label %ifend.i109.i.i, label %ifend6.i.i

ifend.i109.i.i:                                   ; preds = %ifend3.i.i
  %memberidx2.i107.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %106 = load ptr, ptr %memberidx2.i107.i.i, align 8
  %107 = tail call i64 @memcmp(ptr %106, ptr nonnull %103, i64 5)
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %if.entry.i183, label %ifend6.i.i

ifend6.i.i:                                       ; preds = %ifend3.i.i, %ifend.i109.i.i
  %109 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %109, ptr noundef nonnull align 8 dereferenceable(3) @43, i64 3, i1 false)
  %110 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %110, align 8
  %memberidx.i.i111.i.i = getelementptr inbounds %string, ptr %110, i64 0, i32 1
  store ptr %109, ptr %memberidx.i.i111.i.i, align 8
  %memberidx1.i.i112.i.i = getelementptr inbounds %string, ptr %110, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i112.i.i, align 4
  %memberidx2.i.i113.i.i = getelementptr inbounds %string, ptr %110, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i113.i.i, align 4
  %111 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i116.i.i = icmp eq i64 %111, 3
  br i1 %.not.i116.i.i, label %ifend.i120.i.i, label %ifend9.i.i

ifend.i120.i.i:                                   ; preds = %ifend6.i.i
  %memberidx2.i118.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %112 = load ptr, ptr %memberidx2.i118.i.i, align 8
  %113 = tail call i64 @memcmp(ptr %112, ptr nonnull %109, i64 3)
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %if.entry.i183, label %ifend9.i.i

ifend9.i.i:                                       ; preds = %ifend6.i.i, %ifend.i120.i.i
  %115 = tail call ptr @malloc(i32 2)
  store i16 26217, ptr %115, align 8
  %116 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %116, align 8
  %memberidx.i.i122.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 1
  store ptr %115, ptr %memberidx.i.i122.i.i, align 8
  %memberidx1.i.i123.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i123.i.i, align 4
  %memberidx2.i.i124.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i124.i.i, align 4
  %117 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i127.i.i = icmp eq i64 %117, 2
  br i1 %.not.i127.i.i, label %ifend.i131.i.i, label %ifend12.i.i

ifend.i131.i.i:                                   ; preds = %ifend9.i.i
  %memberidx2.i129.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %118 = load ptr, ptr %memberidx2.i129.i.i, align 8
  %119 = tail call i64 @memcmp(ptr %118, ptr nonnull %115, i64 2)
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %if.entry.i183, label %ifend12.i.i

ifend12.i.i:                                      ; preds = %ifend9.i.i, %ifend.i131.i.i
  %121 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %121, ptr noundef nonnull align 8 dereferenceable(5) @44, i64 5, i1 false)
  %122 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %122, align 8
  %memberidx.i.i133.i.i = getelementptr inbounds %string, ptr %122, i64 0, i32 1
  store ptr %121, ptr %memberidx.i.i133.i.i, align 8
  %memberidx1.i.i134.i.i = getelementptr inbounds %string, ptr %122, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i134.i.i, align 4
  %memberidx2.i.i135.i.i = getelementptr inbounds %string, ptr %122, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i135.i.i, align 4
  %123 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i138.i.i = icmp eq i64 %123, 5
  br i1 %.not.i138.i.i, label %ifend.i142.i.i, label %ifend15.i.i

ifend.i142.i.i:                                   ; preds = %ifend12.i.i
  %memberidx2.i140.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %124 = load ptr, ptr %memberidx2.i140.i.i, align 8
  %125 = tail call i64 @memcmp(ptr %124, ptr nonnull %121, i64 5)
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %if.entry.i183, label %ifend15.i.i

ifend15.i.i:                                      ; preds = %ifend12.i.i, %ifend.i142.i.i
  %127 = tail call ptr @malloc(i32 4)
  store i32 1702063205, ptr %127, align 8
  %128 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %128, align 8
  %memberidx.i.i144.i.i = getelementptr inbounds %string, ptr %128, i64 0, i32 1
  store ptr %127, ptr %memberidx.i.i144.i.i, align 8
  %memberidx1.i.i145.i.i = getelementptr inbounds %string, ptr %128, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i145.i.i, align 4
  %memberidx2.i.i146.i.i = getelementptr inbounds %string, ptr %128, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i146.i.i, align 4
  %129 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i149.i.i = icmp eq i64 %129, 4
  br i1 %.not.i149.i.i, label %ifend.i153.i.i, label %ifend18.i.i

ifend.i153.i.i:                                   ; preds = %ifend15.i.i
  %memberidx2.i151.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %130 = load ptr, ptr %memberidx2.i151.i.i, align 8
  %131 = tail call i64 @memcmp(ptr %130, ptr nonnull %127, i64 4)
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %if.entry.i183, label %ifend18.i.i

ifend18.i.i:                                      ; preds = %ifend15.i.i, %ifend.i153.i.i
  %133 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %133, ptr noundef nonnull align 8 dereferenceable(3) @46, i64 3, i1 false)
  %134 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %134, align 8
  %memberidx.i.i155.i.i = getelementptr inbounds %string, ptr %134, i64 0, i32 1
  store ptr %133, ptr %memberidx.i.i155.i.i, align 8
  %memberidx1.i.i156.i.i = getelementptr inbounds %string, ptr %134, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i156.i.i, align 4
  %memberidx2.i.i157.i.i = getelementptr inbounds %string, ptr %134, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i157.i.i, align 4
  %135 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i160.i.i = icmp eq i64 %135, 3
  br i1 %.not.i160.i.i, label %ifend.i164.i.i, label %ifend21.i.i

ifend.i164.i.i:                                   ; preds = %ifend18.i.i
  %memberidx2.i162.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %136 = load ptr, ptr %memberidx2.i162.i.i, align 8
  %137 = tail call i64 @memcmp(ptr %136, ptr nonnull %133, i64 3)
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %if.entry.i183, label %ifend21.i.i

ifend21.i.i:                                      ; preds = %ifend18.i.i, %ifend.i164.i.i
  %139 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %139, ptr noundef nonnull align 8 dereferenceable(5) @47, i64 5, i1 false)
  %140 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %140, align 8
  %memberidx.i.i166.i.i = getelementptr inbounds %string, ptr %140, i64 0, i32 1
  store ptr %139, ptr %memberidx.i.i166.i.i, align 8
  %memberidx1.i.i167.i.i = getelementptr inbounds %string, ptr %140, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i167.i.i, align 4
  %memberidx2.i.i168.i.i = getelementptr inbounds %string, ptr %140, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i168.i.i, align 4
  %141 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i171.i.i = icmp eq i64 %141, 5
  br i1 %.not.i171.i.i, label %ifend.i175.i.i, label %ifend24.i.i

ifend.i175.i.i:                                   ; preds = %ifend21.i.i
  %memberidx2.i173.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %142 = load ptr, ptr %memberidx2.i173.i.i, align 8
  %143 = tail call i64 @memcmp(ptr %142, ptr nonnull %139, i64 5)
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %if.entry.i183, label %ifend24.i.i

ifend24.i.i:                                      ; preds = %ifend21.i.i, %ifend.i175.i.i
  %145 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %145, ptr noundef nonnull align 8 dereferenceable(3) @48, i64 3, i1 false)
  %146 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %146, align 8
  %memberidx.i.i177.i.i = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  store ptr %145, ptr %memberidx.i.i177.i.i, align 8
  %memberidx1.i.i178.i.i = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i178.i.i, align 4
  %memberidx2.i.i179.i.i = getelementptr inbounds %string, ptr %146, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i179.i.i, align 4
  %147 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i182.i.i = icmp eq i64 %147, 3
  br i1 %.not.i182.i.i, label %ifend.i186.i.i, label %ifend27.i.i

ifend.i186.i.i:                                   ; preds = %ifend24.i.i
  %memberidx2.i184.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %148 = load ptr, ptr %memberidx2.i184.i.i, align 8
  %149 = tail call i64 @memcmp(ptr %148, ptr nonnull %145, i64 3)
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %if.entry.i183, label %ifend27.i.i

ifend27.i.i:                                      ; preds = %ifend24.i.i, %ifend.i186.i.i
  %151 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %151, ptr noundef nonnull align 8 dereferenceable(5) @49, i64 5, i1 false)
  %152 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %152, align 8
  %memberidx.i.i188.i.i = getelementptr inbounds %string, ptr %152, i64 0, i32 1
  store ptr %151, ptr %memberidx.i.i188.i.i, align 8
  %memberidx1.i.i189.i.i = getelementptr inbounds %string, ptr %152, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i189.i.i, align 4
  %memberidx2.i.i190.i.i = getelementptr inbounds %string, ptr %152, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i190.i.i, align 4
  %153 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i193.i.i = icmp eq i64 %153, 5
  br i1 %.not.i193.i.i, label %ifend.i197.i.i, label %ifend30.i.i

ifend.i197.i.i:                                   ; preds = %ifend27.i.i
  %memberidx2.i195.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %154 = load ptr, ptr %memberidx2.i195.i.i, align 8
  %155 = tail call i64 @memcmp(ptr %154, ptr nonnull %151, i64 5)
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %if.entry.i183, label %ifend30.i.i

ifend30.i.i:                                      ; preds = %ifend27.i.i, %ifend.i197.i.i
  %157 = tail call ptr @malloc(i32 8)
  store i64 7310870969309884259, ptr %157, align 8
  %158 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %158, align 8
  %memberidx.i.i199.i.i = getelementptr inbounds %string, ptr %158, i64 0, i32 1
  store ptr %157, ptr %memberidx.i.i199.i.i, align 8
  %memberidx1.i.i200.i.i = getelementptr inbounds %string, ptr %158, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i200.i.i, align 4
  %memberidx2.i.i201.i.i = getelementptr inbounds %string, ptr %158, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i201.i.i, align 4
  %159 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i204.i.i = icmp eq i64 %159, 8
  br i1 %.not.i204.i.i, label %ifend.i208.i.i, label %ifend33.i.i

ifend.i208.i.i:                                   ; preds = %ifend30.i.i
  %memberidx2.i206.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %160 = load ptr, ptr %memberidx2.i206.i.i, align 8
  %161 = tail call i64 @memcmp(ptr %160, ptr nonnull %157, i64 8)
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %if.entry.i183, label %ifend33.i.i

ifend33.i.i:                                      ; preds = %ifend30.i.i, %ifend.i208.i.i
  %163 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %163, ptr noundef nonnull align 8 dereferenceable(6) @50, i64 6, i1 false)
  %164 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %164, align 8
  %memberidx.i.i210.i.i = getelementptr inbounds %string, ptr %164, i64 0, i32 1
  store ptr %163, ptr %memberidx.i.i210.i.i, align 8
  %memberidx1.i.i211.i.i = getelementptr inbounds %string, ptr %164, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i211.i.i, align 4
  %memberidx2.i.i212.i.i = getelementptr inbounds %string, ptr %164, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i212.i.i, align 4
  %165 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i215.i.i = icmp eq i64 %165, 6
  br i1 %.not.i215.i.i, label %ifend.i219.i.i, label %ifend36.i.i

ifend.i219.i.i:                                   ; preds = %ifend33.i.i
  %memberidx2.i217.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %166 = load ptr, ptr %memberidx2.i217.i.i, align 8
  %167 = tail call i64 @memcmp(ptr %166, ptr nonnull %163, i64 6)
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %if.entry.i183, label %ifend36.i.i

ifend36.i.i:                                      ; preds = %ifend33.i.i, %ifend.i219.i.i
  %169 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %169, ptr noundef nonnull align 8 dereferenceable(6) @51, i64 6, i1 false)
  %170 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %170, align 8
  %memberidx.i.i221.i.i = getelementptr inbounds %string, ptr %170, i64 0, i32 1
  store ptr %169, ptr %memberidx.i.i221.i.i, align 8
  %memberidx1.i.i222.i.i = getelementptr inbounds %string, ptr %170, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i222.i.i, align 4
  %memberidx2.i.i223.i.i = getelementptr inbounds %string, ptr %170, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i223.i.i, align 4
  %171 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i226.i.i = icmp eq i64 %171, 6
  br i1 %.not.i226.i.i, label %ifend.i230.i.i, label %ifend39.i.i

ifend.i230.i.i:                                   ; preds = %ifend36.i.i
  %memberidx2.i228.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %172 = load ptr, ptr %memberidx2.i228.i.i, align 8
  %173 = tail call i64 @memcmp(ptr %172, ptr nonnull %169, i64 6)
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %if.entry.i183, label %ifend39.i.i

ifend39.i.i:                                      ; preds = %ifend36.i.i, %ifend.i230.i.i
  %175 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %175, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %176 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %176, align 8
  %memberidx.i.i232.i.i = getelementptr inbounds %string, ptr %176, i64 0, i32 1
  store ptr %175, ptr %memberidx.i.i232.i.i, align 8
  %memberidx1.i.i233.i.i = getelementptr inbounds %string, ptr %176, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i233.i.i, align 4
  %memberidx2.i.i234.i.i = getelementptr inbounds %string, ptr %176, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i234.i.i, align 4
  %177 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i237.i.i = icmp eq i64 %177, 7
  br i1 %.not.i237.i.i, label %ifend.i241.i.i, label %ifend42.i.i

ifend.i241.i.i:                                   ; preds = %ifend39.i.i
  %memberidx2.i239.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %178 = load ptr, ptr %memberidx2.i239.i.i, align 8
  %179 = tail call i64 @memcmp(ptr %178, ptr nonnull %175, i64 7)
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %if.entry.i183, label %ifend42.i.i

ifend42.i.i:                                      ; preds = %ifend39.i.i, %ifend.i241.i.i
  %181 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %181, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %182 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %182, align 8
  %memberidx.i.i243.i.i = getelementptr inbounds %string, ptr %182, i64 0, i32 1
  store ptr %181, ptr %memberidx.i.i243.i.i, align 8
  %memberidx1.i.i244.i.i = getelementptr inbounds %string, ptr %182, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i244.i.i, align 4
  %memberidx2.i.i245.i.i = getelementptr inbounds %string, ptr %182, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i245.i.i, align 4
  %183 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i248.i.i = icmp eq i64 %183, 6
  br i1 %.not.i248.i.i, label %ifend.i252.i.i, label %ifend45.i.i

ifend.i252.i.i:                                   ; preds = %ifend42.i.i
  %memberidx2.i250.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %184 = load ptr, ptr %memberidx2.i250.i.i, align 8
  %185 = tail call i64 @memcmp(ptr %184, ptr nonnull %181, i64 6)
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %if.entry.i183, label %ifend45.i.i

ifend45.i.i:                                      ; preds = %ifend42.i.i, %ifend.i252.i.i
  %187 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %187, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %188 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %188, align 8
  %memberidx.i.i254.i.i = getelementptr inbounds %string, ptr %188, i64 0, i32 1
  store ptr %187, ptr %memberidx.i.i254.i.i, align 8
  %memberidx1.i.i255.i.i = getelementptr inbounds %string, ptr %188, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i255.i.i, align 4
  %memberidx2.i.i256.i.i = getelementptr inbounds %string, ptr %188, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i256.i.i, align 4
  %189 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i259.i.i = icmp eq i64 %189, 9
  br i1 %.not.i259.i.i, label %ifend.i263.i.i, label %ifend48.i.i

ifend.i263.i.i:                                   ; preds = %ifend45.i.i
  %memberidx2.i261.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %190 = load ptr, ptr %memberidx2.i261.i.i, align 8
  %191 = tail call i64 @memcmp(ptr %190, ptr nonnull %187, i64 9)
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %if.entry.i183, label %ifend48.i.i

ifend48.i.i:                                      ; preds = %ifend45.i.i, %ifend.i263.i.i
  %193 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %193, align 8
  %194 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %194, align 8
  %memberidx.i.i265.i.i = getelementptr inbounds %string, ptr %194, i64 0, i32 1
  store ptr %193, ptr %memberidx.i.i265.i.i, align 8
  %memberidx1.i.i266.i.i = getelementptr inbounds %string, ptr %194, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i266.i.i, align 4
  %memberidx2.i.i267.i.i = getelementptr inbounds %string, ptr %194, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i267.i.i, align 4
  %195 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i270.i.i = icmp eq i64 %195, 2
  br i1 %.not.i270.i.i, label %ifend.i274.i.i, label %ifend51.i.i

ifend.i274.i.i:                                   ; preds = %ifend48.i.i
  %memberidx2.i272.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %196 = load ptr, ptr %memberidx2.i272.i.i, align 8
  %197 = tail call i64 @memcmp(ptr %196, ptr nonnull %193, i64 2)
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %if.entry.i183, label %ifend51.i.i

ifend51.i.i:                                      ; preds = %ifend48.i.i, %ifend.i274.i.i
  %199 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %199, ptr noundef nonnull align 8 dereferenceable(5) @55, i64 5, i1 false)
  %200 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %200, align 8
  %memberidx.i.i276.i.i = getelementptr inbounds %string, ptr %200, i64 0, i32 1
  store ptr %199, ptr %memberidx.i.i276.i.i, align 8
  %memberidx1.i.i277.i.i = getelementptr inbounds %string, ptr %200, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i277.i.i, align 4
  %memberidx2.i.i278.i.i = getelementptr inbounds %string, ptr %200, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i278.i.i, align 4
  %201 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i281.i.i = icmp eq i64 %201, 5
  br i1 %.not.i281.i.i, label %ifend.i285.i.i, label %ifend54.i.i

ifend.i285.i.i:                                   ; preds = %ifend51.i.i
  %memberidx2.i283.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %202 = load ptr, ptr %memberidx2.i283.i.i, align 8
  %203 = tail call i64 @memcmp(ptr %202, ptr nonnull %199, i64 5)
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %if.entry.i183, label %ifend54.i.i

ifend54.i.i:                                      ; preds = %ifend51.i.i, %ifend.i285.i.i
  %205 = tail call ptr @malloc(i32 4)
  store i32 1836412517, ptr %205, align 8
  %206 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %206, align 8
  %memberidx.i.i287.i.i = getelementptr inbounds %string, ptr %206, i64 0, i32 1
  store ptr %205, ptr %memberidx.i.i287.i.i, align 8
  %memberidx1.i.i288.i.i = getelementptr inbounds %string, ptr %206, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i288.i.i, align 4
  %memberidx2.i.i289.i.i = getelementptr inbounds %string, ptr %206, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i289.i.i, align 4
  %207 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i292.i.i = icmp eq i64 %207, 4
  br i1 %.not.i292.i.i, label %ifend.i296.i.i, label %ifend57.i.i

ifend.i296.i.i:                                   ; preds = %ifend54.i.i
  %memberidx2.i294.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %208 = load ptr, ptr %memberidx2.i294.i.i, align 8
  %209 = tail call i64 @memcmp(ptr %208, ptr nonnull %205, i64 4)
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %if.entry.i183, label %ifend57.i.i

ifend57.i.i:                                      ; preds = %ifend54.i.i, %ifend.i296.i.i
  %211 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %211, ptr noundef nonnull align 8 dereferenceable(3) @56, i64 3, i1 false)
  %212 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %212, align 8
  %memberidx.i.i298.i.i = getelementptr inbounds %string, ptr %212, i64 0, i32 1
  store ptr %211, ptr %memberidx.i.i298.i.i, align 8
  %memberidx1.i.i299.i.i = getelementptr inbounds %string, ptr %212, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i299.i.i, align 4
  %memberidx2.i.i300.i.i = getelementptr inbounds %string, ptr %212, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i300.i.i, align 4
  %213 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i303.i.i = icmp eq i64 %213, 3
  br i1 %.not.i303.i.i, label %ifend.i307.i.i, label %ifend60.i.i

ifend.i307.i.i:                                   ; preds = %ifend57.i.i
  %memberidx2.i305.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %214 = load ptr, ptr %memberidx2.i305.i.i, align 8
  %215 = tail call i64 @memcmp(ptr %214, ptr nonnull %211, i64 3)
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %if.entry.i183, label %ifend60.i.i

ifend60.i.i:                                      ; preds = %ifend57.i.i, %ifend.i307.i.i
  %217 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %217, ptr noundef nonnull align 8 dereferenceable(3) @57, i64 3, i1 false)
  %218 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %218, align 8
  %memberidx.i.i309.i.i = getelementptr inbounds %string, ptr %218, i64 0, i32 1
  store ptr %217, ptr %memberidx.i.i309.i.i, align 8
  %memberidx1.i.i310.i.i = getelementptr inbounds %string, ptr %218, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i310.i.i, align 4
  %memberidx2.i.i311.i.i = getelementptr inbounds %string, ptr %218, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i311.i.i, align 4
  %219 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i314.i.i = icmp eq i64 %219, 3
  br i1 %.not.i314.i.i, label %ifend.i318.i.i, label %ifend63.i.i

ifend.i318.i.i:                                   ; preds = %ifend60.i.i
  %memberidx2.i316.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %220 = load ptr, ptr %memberidx2.i316.i.i, align 8
  %221 = tail call i64 @memcmp(ptr %220, ptr nonnull %217, i64 3)
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %if.entry.i183, label %ifend63.i.i

ifend63.i.i:                                      ; preds = %ifend60.i.i, %ifend.i318.i.i
  %223 = tail call ptr @malloc(i32 2)
  store i16 29537, ptr %223, align 8
  %224 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %224, align 8
  %memberidx.i.i320.i.i = getelementptr inbounds %string, ptr %224, i64 0, i32 1
  store ptr %223, ptr %memberidx.i.i320.i.i, align 8
  %memberidx1.i.i321.i.i = getelementptr inbounds %string, ptr %224, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i321.i.i, align 4
  %memberidx2.i.i322.i.i = getelementptr inbounds %string, ptr %224, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i322.i.i, align 4
  %225 = load i64, ptr %memberidx.i.i94.i, align 4
  %.not.i325.i.i = icmp eq i64 %225, 2
  br i1 %.not.i325.i.i, label %ifend.i329.i.i, label %ifend.i

ifend.i329.i.i:                                   ; preds = %ifend63.i.i
  %memberidx2.i327.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %226 = load ptr, ptr %memberidx2.i327.i.i, align 8
  %227 = tail call i64 @memcmp(ptr %226, ptr nonnull %223, i64 2)
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %if.entry.i183, label %ifend.i

if.entry.i183:                                    ; preds = %ifend.i329.i.i, %ifend.i.i.i, %ifend.i98.i.i, %ifend.i109.i.i, %ifend.i120.i.i, %ifend.i131.i.i, %ifend.i142.i.i, %ifend.i153.i.i, %ifend.i164.i.i, %ifend.i175.i.i, %ifend.i186.i.i, %ifend.i197.i.i, %ifend.i208.i.i, %ifend.i219.i.i, %ifend.i230.i.i, %ifend.i241.i.i, %ifend.i252.i.i, %ifend.i263.i.i, %ifend.i274.i.i, %ifend.i285.i.i, %ifend.i296.i.i, %ifend.i307.i.i, %ifend.i318.i.i
  %common.ret.op.i97.i.ph = phi i64 [ 73, %ifend.i318.i.i ], [ 72, %ifend.i307.i.i ], [ 71, %ifend.i296.i.i ], [ 70, %ifend.i285.i.i ], [ 69, %ifend.i274.i.i ], [ 68, %ifend.i263.i.i ], [ 67, %ifend.i252.i.i ], [ 66, %ifend.i241.i.i ], [ 65, %ifend.i230.i.i ], [ 64, %ifend.i219.i.i ], [ 63, %ifend.i208.i.i ], [ 62, %ifend.i197.i.i ], [ 61, %ifend.i186.i.i ], [ 60, %ifend.i175.i.i ], [ 59, %ifend.i164.i.i ], [ 58, %ifend.i153.i.i ], [ 57, %ifend.i142.i.i ], [ 56, %ifend.i131.i.i ], [ 55, %ifend.i120.i.i ], [ 54, %ifend.i109.i.i ], [ 9, %ifend.i98.i.i ], [ 8, %ifend.i.i.i ], [ 74, %ifend.i329.i.i ]
  %229 = load i64, ptr %memberidx.i176, align 4
  %230 = add nsw i64 %229, 1
  %231 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i65.i = getelementptr inbounds %string, ptr %231, i64 0, i32 2
  %232 = load i64, ptr %memberidx2.i65.i, align 4
  %233 = icmp slt i64 %230, %232
  br i1 %233, label %if.entry.i68.i, label %ifend5.i

if.entry.i68.i:                                   ; preds = %if.entry.i183
  %234 = load ptr, ptr %231, align 8
  %memberidx4.i67.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %234, i64 0, i32 2
  %235 = load ptr, ptr %memberidx4.i67.i, align 8
  %236 = tail call i8 %235(ptr nonnull %231, i64 %230)
  %phi.cmp1135 = icmp eq i8 %236, 61
  br i1 %phi.cmp1135, label %if.entry3.i, label %ifend5.i

ifend.i:                                          ; preds = %ifend63.i.i, %ifend.i329.i.i
  %237 = tail call ptr @malloc(i32 24)
  store i64 53, ptr %237, align 4
  %memberidx1.i.i61.i = getelementptr inbounds %Token, ptr %237, i64 0, i32 1
  store ptr %83, ptr %memberidx1.i.i61.i, align 8
  %memberidx.i62.i = getelementptr inbounds %IdentifierToken, ptr %237, i64 0, i32 2
  store ptr %82, ptr %memberidx.i62.i, align 8
  br label %common.ret

if.entry3.i:                                      ; preds = %if.entry.i68.i
  %trunc = trunc i64 %common.ret.op.i97.i.ph to i7
  switch i7 %trunc, label %ifend5.i [
    i7 8, label %if.entry6.i
    i7 9, label %if.entry9.i
  ]

ifend5.i:                                         ; preds = %if.entry3.i, %end.i48.i.thread, %if.entry.i51.i, %if.entry10.i55.i, %end.i48.i, %end.i.i.thread, %if.entry.i39.i, %if.entry10.i.i, %end.i.i, %if.entry.i183, %if.entry.i68.i
  %keyword.0.i = phi i64 [ %common.ret.op.i97.i.ph, %if.entry.i68.i ], [ %common.ret.op.i97.i.ph, %if.entry.i183 ], [ 19, %end.i.i ], [ 19, %if.entry10.i.i ], [ 19, %if.entry.i39.i ], [ 19, %end.i.i.thread ], [ 18, %end.i48.i ], [ 18, %if.entry10.i55.i ], [ 18, %if.entry.i51.i ], [ 18, %end.i48.i.thread ], [ %common.ret.op.i97.i.ph, %if.entry3.i ]
  %238 = tail call ptr @malloc(i32 16)
  store i64 %keyword.0.i, ptr %238, align 4
  %memberidx1.i60.i = getelementptr inbounds %Token, ptr %238, i64 0, i32 1
  store ptr %83, ptr %memberidx1.i60.i, align 8
  br label %common.ret

if.entry6.i:                                      ; preds = %if.entry3.i
  %239 = load i64, ptr %memberidx.i176, align 4
  %240 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i.i42.i = getelementptr inbounds %string, ptr %240, i64 0, i32 2
  %241 = load i64, ptr %memberidx2.i.i42.i, align 4
  %.not1137 = icmp slt i64 %239, %241
  br i1 %.not1137, label %end.i48.i, label %end.i48.i.thread

end.i48.i.thread:                                 ; preds = %if.entry6.i
  store i8 0, ptr %0, align 1
  br label %ifend5.i

end.i48.i:                                        ; preds = %if.entry6.i
  %242 = load ptr, ptr %240, align 8
  %memberidx2.i44.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %242, i64 0, i32 2
  %243 = load ptr, ptr %memberidx2.i44.i, align 8
  %244 = add nsw i64 %239, 1
  store i64 %244, ptr %memberidx.i176, align 4
  %245 = tail call i8 %243(ptr nonnull %240, i64 %244)
  store i8 %245, ptr %0, align 1
  switch i8 %245, label %if.entry10.i55.i [
    i8 10, label %if.entry.i51.i
    i8 0, label %ifend5.i
  ]

if.entry.i51.i:                                   ; preds = %end.i48.i
  store i64 0, ptr %memberidx2.i102.i, align 4
  %246 = load i64, ptr %memberidx3.i103.i, align 4
  %247 = add nsw i64 %246, 1
  store i64 %247, ptr %memberidx3.i103.i, align 4
  br label %ifend5.i

if.entry10.i55.i:                                 ; preds = %end.i48.i
  %248 = load i64, ptr %memberidx2.i102.i, align 4
  %249 = add nsw i64 %248, 1
  store i64 %249, ptr %memberidx2.i102.i, align 4
  br label %ifend5.i

if.entry9.i:                                      ; preds = %if.entry3.i
  %250 = load i64, ptr %memberidx.i176, align 4
  %251 = load ptr, ptr %memberidx1.i.i178, align 8
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %251, i64 0, i32 2
  %252 = load i64, ptr %memberidx2.i.i.i, align 4
  %.not1136 = icmp slt i64 %250, %252
  br i1 %.not1136, label %end.i.i, label %end.i.i.thread

end.i.i.thread:                                   ; preds = %if.entry9.i
  store i8 0, ptr %0, align 1
  br label %ifend5.i

end.i.i:                                          ; preds = %if.entry9.i
  %253 = load ptr, ptr %251, align 8
  %memberidx2.i38.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %253, i64 0, i32 2
  %254 = load ptr, ptr %memberidx2.i38.i, align 8
  %255 = add nsw i64 %250, 1
  store i64 %255, ptr %memberidx.i176, align 4
  %256 = tail call i8 %254(ptr nonnull %251, i64 %255)
  store i8 %256, ptr %0, align 1
  switch i8 %256, label %if.entry10.i.i [
    i8 10, label %if.entry.i39.i
    i8 0, label %ifend5.i
  ]

if.entry.i39.i:                                   ; preds = %end.i.i
  store i64 0, ptr %memberidx2.i102.i, align 4
  %257 = load i64, ptr %memberidx3.i103.i, align 4
  %258 = add nsw i64 %257, 1
  store i64 %258, ptr %memberidx3.i103.i, align 4
  br label %ifend5.i

if.entry10.i.i:                                   ; preds = %end.i.i
  %259 = load i64, ptr %memberidx2.i102.i, align 4
  %260 = add nsw i64 %259, 1
  store i64 %260, ptr %memberidx2.i102.i, align 4
  br label %ifend5.i

ifend5:                                           ; preds = %ifend
  %261 = icmp eq i8 %2, 34
  br i1 %261, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend5
  %262 = tail call fastcc ptr @Lexer_string_token(ptr nonnull %0)
  br label %common.ret

ifend8:                                           ; preds = %ifend5
  %263 = add i8 %2, -48
  %264 = icmp ult i8 %263, 10
  br i1 %264, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend8
  %memberidx.i.i190 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %265 = load i64, ptr %memberidx.i.i190, align 4
  %266 = add nsw i64 %265, 1
  %memberidx1.i.i191 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %267 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %string, ptr %267, i64 0, i32 2
  %268 = load i64, ptr %memberidx2.i.i192, align 4
  %269 = icmp slt i64 %266, %268
  br i1 %269, label %Lexer_peek.exit.i196, label %ifend.i199

Lexer_peek.exit.i196:                             ; preds = %if.entry9
  %270 = icmp eq i8 %2, 48
  %271 = load ptr, ptr %267, align 8
  %memberidx4.i.i193 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %271, i64 0, i32 2
  %272 = load ptr, ptr %memberidx4.i.i193, align 8
  %273 = tail call i8 %272(ptr nonnull %267, i64 %266)
  %phi.cmp1128 = icmp eq i8 %273, 98
  %274 = and i1 %270, %phi.cmp1128
  br i1 %274, label %if.entry.i198, label %Lexer_peek.exit.i196.ifend.i199_crit_edge

Lexer_peek.exit.i196.ifend.i199_crit_edge:        ; preds = %Lexer_peek.exit.i196
  %.pre1239 = load i64, ptr %memberidx.i.i190, align 4
  %.pre1240 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i49.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1240, i64 0, i32 2
  %.pre1241 = load i64, ptr %memberidx2.i49.i.phi.trans.insert, align 4
  %.pre1267 = add nsw i64 %.pre1239, 1
  br label %ifend.i199

if.entry.i198:                                    ; preds = %Lexer_peek.exit.i196
  %275 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 2)
  br label %common.ret

ifend.i199:                                       ; preds = %Lexer_peek.exit.i196.ifend.i199_crit_edge, %if.entry9
  %.pre-phi1268 = phi i64 [ %.pre1267, %Lexer_peek.exit.i196.ifend.i199_crit_edge ], [ %266, %if.entry9 ]
  %276 = phi i64 [ %.pre1241, %Lexer_peek.exit.i196.ifend.i199_crit_edge ], [ %268, %if.entry9 ]
  %277 = phi ptr [ %.pre1240, %Lexer_peek.exit.i196.ifend.i199_crit_edge ], [ %267, %if.entry9 ]
  %278 = phi i64 [ %.pre1239, %Lexer_peek.exit.i196.ifend.i199_crit_edge ], [ %265, %if.entry9 ]
  %279 = icmp slt i64 %.pre-phi1268, %276
  br i1 %279, label %Lexer_peek.exit53.i, label %ifend4.i

Lexer_peek.exit53.i:                              ; preds = %ifend.i199
  %280 = load i8, ptr %0, align 1
  %281 = icmp eq i8 %280, 48
  %282 = load ptr, ptr %277, align 8
  %memberidx4.i51.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %282, i64 0, i32 2
  %283 = load ptr, ptr %memberidx4.i51.i, align 8
  %284 = tail call i8 %283(ptr nonnull %277, i64 %.pre-phi1268)
  %phi.cmp1129 = icmp eq i8 %284, 111
  %285 = and i1 %281, %phi.cmp1129
  br i1 %285, label %if.entry2.i, label %Lexer_peek.exit53.i.ifend4.i_crit_edge

Lexer_peek.exit53.i.ifend4.i_crit_edge:           ; preds = %Lexer_peek.exit53.i
  %.pre1242 = load i64, ptr %memberidx.i.i190, align 4
  %.pre1243 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i56.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1243, i64 0, i32 2
  %.pre1244 = load i64, ptr %memberidx2.i56.i.phi.trans.insert, align 4
  %.pre1269 = add nsw i64 %.pre1242, 1
  br label %ifend4.i

if.entry2.i:                                      ; preds = %Lexer_peek.exit53.i
  %286 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 8)
  br label %common.ret

ifend4.i:                                         ; preds = %Lexer_peek.exit53.i.ifend4.i_crit_edge, %ifend.i199
  %.pre-phi1270 = phi i64 [ %.pre1269, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %.pre-phi1268, %ifend.i199 ]
  %287 = phi i64 [ %.pre1244, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %276, %ifend.i199 ]
  %288 = phi ptr [ %.pre1243, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %277, %ifend.i199 ]
  %289 = phi i64 [ %.pre1242, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %278, %ifend.i199 ]
  %290 = icmp slt i64 %.pre-phi1270, %287
  br i1 %290, label %Lexer_peek.exit60.i, label %ifend8.i201

Lexer_peek.exit60.i:                              ; preds = %ifend4.i
  %291 = load i8, ptr %0, align 1
  %292 = icmp eq i8 %291, 48
  %293 = load ptr, ptr %288, align 8
  %memberidx4.i58.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %293, i64 0, i32 2
  %294 = load ptr, ptr %memberidx4.i58.i, align 8
  %295 = tail call i8 %294(ptr nonnull %288, i64 %.pre-phi1270)
  %phi.cmp1130 = icmp eq i8 %295, 120
  %296 = and i1 %292, %phi.cmp1130
  br i1 %296, label %if.entry6.i200, label %Lexer_peek.exit60.i.ifend8.i201_crit_edge

Lexer_peek.exit60.i.ifend8.i201_crit_edge:        ; preds = %Lexer_peek.exit60.i
  %.pre1245 = load i64, ptr %memberidx.i.i190, align 4
  %.pre1246 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i63.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1246, i64 0, i32 2
  %.pre1247 = load i64, ptr %memberidx2.i63.i.phi.trans.insert, align 4
  %.pre1271 = add nsw i64 %.pre1245, 1
  br label %ifend8.i201

if.entry6.i200:                                   ; preds = %Lexer_peek.exit60.i
  %297 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 16)
  br label %common.ret

ifend8.i201:                                      ; preds = %Lexer_peek.exit60.i.ifend8.i201_crit_edge, %ifend4.i
  %.pre-phi1272 = phi i64 [ %.pre1271, %Lexer_peek.exit60.i.ifend8.i201_crit_edge ], [ %.pre-phi1270, %ifend4.i ]
  %298 = phi i64 [ %.pre1247, %Lexer_peek.exit60.i.ifend8.i201_crit_edge ], [ %287, %ifend4.i ]
  %299 = phi ptr [ %.pre1246, %Lexer_peek.exit60.i.ifend8.i201_crit_edge ], [ %288, %ifend4.i ]
  %300 = phi i64 [ %.pre1245, %Lexer_peek.exit60.i.ifend8.i201_crit_edge ], [ %289, %ifend4.i ]
  %301 = icmp slt i64 %.pre-phi1272, %298
  br i1 %301, label %if.entry.i66.i, label %Lexer_peek.exit67.i

if.entry.i66.i:                                   ; preds = %ifend8.i201
  %302 = load ptr, ptr %299, align 8
  %memberidx4.i65.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %302, i64 0, i32 2
  %303 = load ptr, ptr %memberidx4.i65.i, align 8
  %304 = tail call i8 %303(ptr nonnull %299, i64 %.pre-phi1272)
  %.pre1248 = load i64, ptr %memberidx.i.i190, align 4
  %.pre1249 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i71.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1249, i64 0, i32 2
  %.pre1250 = load i64, ptr %memberidx2.i71.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit67.i

Lexer_peek.exit67.i:                              ; preds = %if.entry.i66.i, %ifend8.i201
  %305 = phi i64 [ %.pre1250, %if.entry.i66.i ], [ %298, %ifend8.i201 ]
  %306 = phi ptr [ %.pre1249, %if.entry.i66.i ], [ %299, %ifend8.i201 ]
  %307 = phi i64 [ %.pre1248, %if.entry.i66.i ], [ %300, %ifend8.i201 ]
  %common.ret.op.i64.i = phi i8 [ %304, %if.entry.i66.i ], [ 0, %ifend8.i201 ]
  %308 = add i8 %common.ret.op.i64.i, -48
  %309 = icmp ult i8 %308, 10
  %310 = icmp eq i8 %common.ret.op.i64.i, 46
  %311 = or i1 %310, %309
  %.not1131 = icmp slt i64 %307, %305
  %312 = and i1 %311, %.not1131
  br i1 %312, label %while.entry.i203.preheader, label %while.end.i208

while.entry.i203.preheader:                       ; preds = %Lexer_peek.exit67.i
  %memberidx6.i.i213 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx7.i.i214 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i203

while.entry.i203:                                 ; preds = %while.entry.i203.preheader, %Lexer_peek.exit97.i
  %313 = phi i64 [ %364, %Lexer_peek.exit97.i ], [ %305, %while.entry.i203.preheader ]
  %314 = phi ptr [ %365, %Lexer_peek.exit97.i ], [ %306, %while.entry.i203.preheader ]
  %315 = phi i64 [ %366, %Lexer_peek.exit97.i ], [ %307, %while.entry.i203.preheader ]
  %length.0.i202 = phi i64 [ %344, %Lexer_peek.exit97.i ], [ 1, %while.entry.i203.preheader ]
  %is_float.0.i = phi i1 [ %spec.select, %Lexer_peek.exit97.i ], [ false, %while.entry.i203.preheader ]
  %next_char.0.i = phi i8 [ %common.ret.op.i94.i, %Lexer_peek.exit97.i ], [ %common.ret.op.i64.i, %while.entry.i203.preheader ]
  %316 = icmp eq i8 %next_char.0.i, 46
  %317 = add nsw i64 %315, 2
  %318 = icmp slt i64 %317, %313
  br i1 %318, label %if.entry.i78.i, label %Lexer_peek.exit79.i

if.entry.i78.i:                                   ; preds = %while.entry.i203
  %319 = load ptr, ptr %314, align 8
  %memberidx4.i77.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %319, i64 0, i32 2
  %320 = load ptr, ptr %memberidx4.i77.i, align 8
  %321 = tail call i8 %320(ptr nonnull %314, i64 %317)
  br label %Lexer_peek.exit79.i

Lexer_peek.exit79.i:                              ; preds = %if.entry.i78.i, %while.entry.i203
  %common.ret.op.i76.i = phi i8 [ %321, %if.entry.i78.i ], [ 0, %while.entry.i203 ]
  %322 = add i8 %common.ret.op.i76.i, -58
  %323 = icmp ult i8 %322, -10
  %324 = or i1 %is_float.0.i, %323
  %325 = and i1 %316, %324
  br i1 %325, label %while.end.i208, label %ifend11.i

while.end.i208:                                   ; preds = %Lexer_peek.exit97.i, %Lexer_peek.exit79.i, %Lexer_peek.exit67.i
  %length.1.i204 = phi i64 [ 1, %Lexer_peek.exit67.i ], [ %344, %Lexer_peek.exit97.i ], [ %length.0.i202, %Lexer_peek.exit79.i ]
  %is_float.1.i = phi i1 [ false, %Lexer_peek.exit67.i ], [ %spec.select, %Lexer_peek.exit97.i ], [ %is_float.0.i, %Lexer_peek.exit79.i ]
  %326 = tail call ptr @malloc(i32 32)
  %327 = load i64, ptr %memberidx.i.i190, align 4
  %328 = sub nsw i64 %327, %length.1.i204
  %329 = add nsw i64 %328, 1
  %330 = add nsw i64 %327, 1
  %memberidx2.i83.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %331 = load i64, ptr %memberidx2.i83.i, align 4
  %332 = sub nuw i64 %331, %length.1.i204
  %memberidx3.i.i205 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %333 = load i64, ptr %memberidx3.i.i205, align 4
  store i64 %329, ptr %326, align 4
  %memberidx1.i.i84.i = getelementptr inbounds %FloRange, ptr %326, i64 0, i32 1
  store i64 %330, ptr %memberidx1.i.i84.i, align 4
  %memberidx2.i.i.i206 = getelementptr inbounds %FloRange, ptr %326, i64 0, i32 2
  store i64 %332, ptr %memberidx2.i.i.i206, align 4
  %memberidx3.i.i.i207 = getelementptr inbounds %FloRange, ptr %326, i64 0, i32 3
  store i64 %333, ptr %memberidx3.i.i.i207, align 4
  %334 = load ptr, ptr %memberidx1.i.i191, align 8
  %335 = load ptr, ptr %334, align 8
  %memberidx17.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %335, i64 0, i32 1
  %336 = load ptr, ptr %memberidx17.i, align 8
  %337 = tail call ptr %336(ptr nonnull %334, i64 %329, i64 %length.1.i204)
  %338 = tail call ptr @malloc(i32 24)
  %339 = load ptr, ptr %337, align 8
  %memberidx19.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %339, i64 0, i32 5
  %340 = load ptr, ptr %memberidx19.i, align 8
  %341 = tail call ptr %340(ptr nonnull %337)
  br i1 %is_float.1.i, label %true_block.i, label %false_block.i224

ifend11.i:                                        ; preds = %Lexer_peek.exit79.i
  %342 = load i8, ptr %0, align 1
  %343 = icmp eq i8 %342, 46
  %spec.select = select i1 %343, i1 true, i1 %is_float.0.i
  %344 = add nuw nsw i64 %length.0.i202, 1
  %345 = load i64, ptr %memberidx.i.i190, align 4
  %346 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i86.i = getelementptr inbounds %string, ptr %346, i64 0, i32 2
  %347 = load i64, ptr %memberidx2.i.i86.i, align 4
  %.not1132 = icmp slt i64 %345, %347
  br i1 %.not1132, label %end.i.i212, label %end.i.i212.thread

end.i.i212.thread:                                ; preds = %ifend11.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i219

end.i.i212:                                       ; preds = %ifend11.i
  %348 = load ptr, ptr %346, align 8
  %memberidx2.i88.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %348, i64 0, i32 2
  %349 = load ptr, ptr %memberidx2.i88.i, align 8
  %350 = add nsw i64 %345, 1
  store i64 %350, ptr %memberidx.i.i190, align 4
  %351 = tail call i8 %349(ptr nonnull %346, i64 %350)
  store i8 %351, ptr %0, align 1
  switch i8 %351, label %if.entry10.i.i218 [
    i8 10, label %if.entry.i90.i
    i8 0, label %Lexer_advance.exit.i219
  ]

if.entry.i90.i:                                   ; preds = %end.i.i212
  store i64 0, ptr %memberidx6.i.i213, align 4
  %352 = load i64, ptr %memberidx7.i.i214, align 4
  %353 = add nsw i64 %352, 1
  store i64 %353, ptr %memberidx7.i.i214, align 4
  br label %Lexer_advance.exit.i219

if.entry10.i.i218:                                ; preds = %end.i.i212
  %354 = load i64, ptr %memberidx6.i.i213, align 4
  %355 = add nsw i64 %354, 1
  store i64 %355, ptr %memberidx6.i.i213, align 4
  br label %Lexer_advance.exit.i219

Lexer_advance.exit.i219:                          ; preds = %end.i.i212.thread, %end.i.i212, %if.entry10.i.i218, %if.entry.i90.i
  %356 = load i64, ptr %memberidx.i.i190, align 4
  %357 = add nsw i64 %356, 1
  %358 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i93.i = getelementptr inbounds %string, ptr %358, i64 0, i32 2
  %359 = load i64, ptr %memberidx2.i93.i, align 4
  %360 = icmp slt i64 %357, %359
  br i1 %360, label %if.entry.i96.i, label %Lexer_peek.exit97.i

if.entry.i96.i:                                   ; preds = %Lexer_advance.exit.i219
  %361 = load ptr, ptr %358, align 8
  %memberidx4.i95.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %361, i64 0, i32 2
  %362 = load ptr, ptr %memberidx4.i95.i, align 8
  %363 = tail call i8 %362(ptr nonnull %358, i64 %357)
  %.pre1251 = load i64, ptr %memberidx.i.i190, align 4
  %.pre1252 = load ptr, ptr %memberidx1.i.i191, align 8
  %memberidx2.i100.i222.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1252, i64 0, i32 2
  %.pre1253 = load i64, ptr %memberidx2.i100.i222.phi.trans.insert, align 4
  br label %Lexer_peek.exit97.i

Lexer_peek.exit97.i:                              ; preds = %if.entry.i96.i, %Lexer_advance.exit.i219
  %364 = phi i64 [ %.pre1253, %if.entry.i96.i ], [ %359, %Lexer_advance.exit.i219 ]
  %365 = phi ptr [ %.pre1252, %if.entry.i96.i ], [ %358, %Lexer_advance.exit.i219 ]
  %366 = phi i64 [ %.pre1251, %if.entry.i96.i ], [ %356, %Lexer_advance.exit.i219 ]
  %common.ret.op.i94.i = phi i8 [ %363, %if.entry.i96.i ], [ 0, %Lexer_advance.exit.i219 ]
  %367 = add i8 %common.ret.op.i94.i, -48
  %368 = icmp ult i8 %367, 10
  %369 = icmp eq i8 %common.ret.op.i94.i, 46
  %370 = or i1 %369, %368
  %.not1133 = icmp slt i64 %366, %364
  %371 = and i1 %370, %.not1133
  br i1 %371, label %while.entry.i203, label %while.end.i208

true_block.i:                                     ; preds = %while.end.i208
  %372 = tail call double @atof(ptr %341)
  tail call void @free(ptr %341)
  store i64 32, ptr %338, align 4
  %memberidx1.i.i80.i = getelementptr inbounds %Token, ptr %338, i64 0, i32 1
  store ptr %326, ptr %memberidx1.i.i80.i, align 8
  %memberidx.i81.i = getelementptr inbounds %FloatToken, ptr %338, i64 0, i32 2
  store double %372, ptr %memberidx.i81.i, align 8
  br label %end.i226

false_block.i224:                                 ; preds = %while.end.i208
  %373 = tail call i64 @atol(ptr nocapture %341)
  tail call void @free(ptr %341)
  store i64 31, ptr %338, align 4
  %memberidx1.i.i.i223 = getelementptr inbounds %Token, ptr %338, i64 0, i32 1
  store ptr %326, ptr %memberidx1.i.i.i223, align 8
  %memberidx.i72.i = getelementptr inbounds %IntToken, ptr %338, i64 0, i32 2
  store i64 %373, ptr %memberidx.i72.i, align 4
  br label %end.i226

end.i226:                                         ; preds = %false_block.i224, %true_block.i
  %memberidx.i68.i = getelementptr inbounds %string, ptr %337, i64 0, i32 1
  %374 = load ptr, ptr %memberidx.i68.i, align 8
  tail call void @free(ptr %374)
  tail call void @free(ptr nonnull %337)
  br label %common.ret

ifend11:                                          ; preds = %ifend8
  switch i8 %2, label %ifend89 [
    i8 58, label %if.entry12
    i8 59, label %if.entry15
    i8 44, label %if.entry18
    i8 43, label %if.entry21
    i8 45, label %if.entry24
    i8 42, label %if.entry27
    i8 37, label %if.entry30
    i8 94, label %if.entry33
    i8 47, label %if.entry36
    i8 40, label %if.entry42
    i8 41, label %if.entry45
    i8 123, label %if.entry48
    i8 125, label %if.entry51
    i8 91, label %if.entry54
    i8 93, label %if.entry57
    i8 13, label %if.entry60
    i8 10, label %if.entry60
    i8 39, label %if.entry63
    i8 63, label %if.entry66
    i8 38, label %if.entry69
    i8 61, label %if.entry72
    i8 33, label %if.entry75
    i8 62, label %if.entry78
    i8 60, label %if.entry81
    i8 46, label %if.entry84
    i8 0, label %if.entry87
  ]

if.entry12:                                       ; preds = %ifend11
  %375 = tail call ptr @malloc(i32 16)
  %376 = tail call ptr @malloc(i32 32)
  %memberidx.i227 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %377 = load i64, ptr %memberidx.i227, align 4
  %378 = add nsw i64 %377, 1
  %memberidx2.i228 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %379 = load i64, ptr %memberidx2.i228, align 4
  %380 = add i64 %379, -1
  %memberidx3.i229 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %381 = load i64, ptr %memberidx3.i229, align 4
  store i64 %377, ptr %376, align 4
  %memberidx1.i.i230 = getelementptr inbounds %FloRange, ptr %376, i64 0, i32 1
  store i64 %378, ptr %memberidx1.i.i230, align 4
  %memberidx2.i.i231 = getelementptr inbounds %FloRange, ptr %376, i64 0, i32 2
  store i64 %380, ptr %memberidx2.i.i231, align 4
  %memberidx3.i.i232 = getelementptr inbounds %FloRange, ptr %376, i64 0, i32 3
  store i64 %381, ptr %memberidx3.i.i232, align 4
  store i64 1, ptr %375, align 4
  %memberidx1.i233 = getelementptr inbounds %Token, ptr %375, i64 0, i32 1
  store ptr %376, ptr %memberidx1.i233, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend11
  %382 = tail call ptr @malloc(i32 16)
  %383 = tail call ptr @malloc(i32 32)
  %memberidx.i234 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %384 = load i64, ptr %memberidx.i234, align 4
  %385 = add nsw i64 %384, 1
  %memberidx2.i235 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %386 = load i64, ptr %memberidx2.i235, align 4
  %387 = add i64 %386, -1
  %memberidx3.i236 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %388 = load i64, ptr %memberidx3.i236, align 4
  store i64 %384, ptr %383, align 4
  %memberidx1.i.i237 = getelementptr inbounds %FloRange, ptr %383, i64 0, i32 1
  store i64 %385, ptr %memberidx1.i.i237, align 4
  %memberidx2.i.i238 = getelementptr inbounds %FloRange, ptr %383, i64 0, i32 2
  store i64 %387, ptr %memberidx2.i.i238, align 4
  %memberidx3.i.i239 = getelementptr inbounds %FloRange, ptr %383, i64 0, i32 3
  store i64 %388, ptr %memberidx3.i.i239, align 4
  store i64 2, ptr %382, align 4
  %memberidx1.i240 = getelementptr inbounds %Token, ptr %382, i64 0, i32 1
  store ptr %383, ptr %memberidx1.i240, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend11
  %389 = tail call ptr @malloc(i32 16)
  %390 = tail call ptr @malloc(i32 32)
  %memberidx.i241 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %391 = load i64, ptr %memberidx.i241, align 4
  %392 = add nsw i64 %391, 1
  %memberidx2.i242 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %393 = load i64, ptr %memberidx2.i242, align 4
  %394 = add i64 %393, -1
  %memberidx3.i243 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %395 = load i64, ptr %memberidx3.i243, align 4
  store i64 %391, ptr %390, align 4
  %memberidx1.i.i244 = getelementptr inbounds %FloRange, ptr %390, i64 0, i32 1
  store i64 %392, ptr %memberidx1.i.i244, align 4
  %memberidx2.i.i245 = getelementptr inbounds %FloRange, ptr %390, i64 0, i32 2
  store i64 %394, ptr %memberidx2.i.i245, align 4
  %memberidx3.i.i246 = getelementptr inbounds %FloRange, ptr %390, i64 0, i32 3
  store i64 %395, ptr %memberidx3.i.i246, align 4
  store i64 3, ptr %389, align 4
  %memberidx1.i247 = getelementptr inbounds %Token, ptr %389, i64 0, i32 1
  store ptr %390, ptr %memberidx1.i247, align 8
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i.i248 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %396 = load i64, ptr %memberidx.i.i248, align 4
  %397 = add nsw i64 %396, 1
  %memberidx1.i.i249 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %398 = load ptr, ptr %memberidx1.i.i249, align 8
  %memberidx2.i.i250 = getelementptr inbounds %string, ptr %398, i64 0, i32 2
  %399 = load i64, ptr %memberidx2.i.i250, align 4
  %400 = icmp slt i64 %397, %399
  br i1 %400, label %if.entry.i.i252, label %else.i272

if.entry.i.i252:                                  ; preds = %if.entry21
  %401 = load ptr, ptr %398, align 8
  %memberidx4.i.i251 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %401, i64 0, i32 2
  %402 = load ptr, ptr %memberidx4.i.i251, align 8
  %403 = tail call i8 %402(ptr nonnull %398, i64 %397)
  %phi.cmp1124 = icmp eq i8 %403, 43
  %404 = load i64, ptr %memberidx.i.i248, align 4
  %405 = load ptr, ptr %memberidx1.i.i249, align 8
  %memberidx2.i.i.i258 = getelementptr inbounds %string, ptr %405, i64 0, i32 2
  %406 = load i64, ptr %memberidx2.i.i.i258, align 4
  br i1 %phi.cmp1124, label %if.entry.i259, label %if.entry.i.i252.else.i272_crit_edge

if.entry.i.i252.else.i272_crit_edge:              ; preds = %if.entry.i.i252
  %.pre1273 = add nsw i64 %404, 1
  br label %else.i272

if.entry.i259:                                    ; preds = %if.entry.i.i252
  %.not1127 = icmp slt i64 %404, %406
  br i1 %.not1127, label %end.i.i263, label %end.i.i263.thread

end.i.i263.thread:                                ; preds = %if.entry.i259
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i271

end.i.i263:                                       ; preds = %if.entry.i259
  %407 = load ptr, ptr %405, align 8
  %memberidx2.i11.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %407, i64 0, i32 2
  %408 = load ptr, ptr %memberidx2.i11.i, align 8
  %409 = add nsw i64 %404, 1
  store i64 %409, ptr %memberidx.i.i248, align 4
  %410 = tail call i8 %408(ptr nonnull %405, i64 %409)
  store i8 %410, ptr %0, align 1
  switch i8 %410, label %if.entry10.i.i269 [
    i8 10, label %if.entry.i12.i
    i8 0, label %Lexer_advance.exit.i271
  ]

if.entry.i12.i:                                   ; preds = %end.i.i263
  %memberidx6.i.i264 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i264, align 4
  %memberidx7.i.i265 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %411 = load i64, ptr %memberidx7.i.i265, align 4
  %412 = add nsw i64 %411, 1
  store i64 %412, ptr %memberidx7.i.i265, align 4
  br label %Lexer_advance.exit.i271

if.entry10.i.i269:                                ; preds = %end.i.i263
  %memberidx13.i.i268 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %413 = load i64, ptr %memberidx13.i.i268, align 4
  %414 = add nsw i64 %413, 1
  store i64 %414, ptr %memberidx13.i.i268, align 4
  br label %Lexer_advance.exit.i271

Lexer_advance.exit.i271:                          ; preds = %end.i.i263.thread, %end.i.i263, %if.entry10.i.i269, %if.entry.i12.i
  %415 = tail call ptr @malloc(i32 16)
  %416 = tail call ptr @malloc(i32 32)
  %417 = load i64, ptr %memberidx.i.i248, align 4
  %418 = add nsw i64 %417, -1
  %419 = add nsw i64 %417, 1
  %memberidx2.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %420 = load i64, ptr %memberidx2.i14.i, align 4
  %421 = add i64 %420, -2
  %memberidx3.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %422 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %418, ptr %416, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %FloRange, ptr %416, i64 0, i32 1
  store i64 %419, ptr %memberidx1.i.i16.i, align 4
  %memberidx2.i.i17.i = getelementptr inbounds %FloRange, ptr %416, i64 0, i32 2
  store i64 %421, ptr %memberidx2.i.i17.i, align 4
  %memberidx3.i.i.i270 = getelementptr inbounds %FloRange, ptr %416, i64 0, i32 3
  store i64 %422, ptr %memberidx3.i.i.i270, align 4
  store i64 23, ptr %415, align 4
  %memberidx1.i18.i = getelementptr inbounds %Token, ptr %415, i64 0, i32 1
  store ptr %416, ptr %memberidx1.i18.i, align 8
  br label %common.ret

else.i272:                                        ; preds = %if.entry.i.i252.else.i272_crit_edge, %if.entry21
  %.pre-phi1274 = phi i64 [ %.pre1273, %if.entry.i.i252.else.i272_crit_edge ], [ %397, %if.entry21 ]
  %423 = phi i64 [ %406, %if.entry.i.i252.else.i272_crit_edge ], [ %399, %if.entry21 ]
  %424 = phi ptr [ %405, %if.entry.i.i252.else.i272_crit_edge ], [ %398, %if.entry21 ]
  %425 = icmp slt i64 %.pre-phi1274, %423
  br i1 %425, label %if.entry.i31.i, label %ifend3.i

if.entry.i31.i:                                   ; preds = %else.i272
  %426 = load ptr, ptr %424, align 8
  %memberidx4.i30.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %426, i64 0, i32 2
  %427 = load ptr, ptr %memberidx4.i30.i, align 8
  %428 = tail call i8 %427(ptr nonnull %424, i64 %.pre-phi1274)
  %phi.cmp1125 = icmp eq i8 %428, 61
  br i1 %phi.cmp1125, label %if.entry1.i, label %ifend3.i

if.entry1.i:                                      ; preds = %if.entry.i31.i
  %429 = load i64, ptr %memberidx.i.i248, align 4
  %430 = load ptr, ptr %memberidx1.i.i249, align 8
  %memberidx2.i.i35.i = getelementptr inbounds %string, ptr %430, i64 0, i32 2
  %431 = load i64, ptr %memberidx2.i.i35.i, align 4
  %.not1126 = icmp slt i64 %429, %431
  br i1 %.not1126, label %end.i41.i, label %end.i41.i.thread

end.i41.i.thread:                                 ; preds = %if.entry1.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit49.i

end.i41.i:                                        ; preds = %if.entry1.i
  %432 = load ptr, ptr %430, align 8
  %memberidx2.i37.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %432, i64 0, i32 2
  %433 = load ptr, ptr %memberidx2.i37.i, align 8
  %434 = add nsw i64 %429, 1
  store i64 %434, ptr %memberidx.i.i248, align 4
  %435 = tail call i8 %433(ptr nonnull %430, i64 %434)
  store i8 %435, ptr %0, align 1
  switch i8 %435, label %if.entry10.i48.i [
    i8 10, label %if.entry.i44.i
    i8 0, label %Lexer_advance.exit49.i
  ]

if.entry.i44.i:                                   ; preds = %end.i41.i
  %memberidx6.i42.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i42.i, align 4
  %memberidx7.i43.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %436 = load i64, ptr %memberidx7.i43.i, align 4
  %437 = add nsw i64 %436, 1
  store i64 %437, ptr %memberidx7.i43.i, align 4
  br label %Lexer_advance.exit49.i

if.entry10.i48.i:                                 ; preds = %end.i41.i
  %memberidx13.i47.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %438 = load i64, ptr %memberidx13.i47.i, align 4
  %439 = add nsw i64 %438, 1
  store i64 %439, ptr %memberidx13.i47.i, align 4
  br label %Lexer_advance.exit49.i

Lexer_advance.exit49.i:                           ; preds = %end.i41.i.thread, %end.i41.i, %if.entry10.i48.i, %if.entry.i44.i
  %440 = tail call ptr @malloc(i32 16)
  %441 = tail call ptr @malloc(i32 32)
  %442 = load i64, ptr %memberidx.i.i248, align 4
  %443 = add nsw i64 %442, -1
  %444 = add nsw i64 %442, 1
  %memberidx2.i51.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %445 = load i64, ptr %memberidx2.i51.i, align 4
  %446 = add i64 %445, -2
  %memberidx3.i52.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %447 = load i64, ptr %memberidx3.i52.i, align 4
  store i64 %443, ptr %441, align 4
  %memberidx1.i.i53.i = getelementptr inbounds %FloRange, ptr %441, i64 0, i32 1
  store i64 %444, ptr %memberidx1.i.i53.i, align 4
  %memberidx2.i.i54.i = getelementptr inbounds %FloRange, ptr %441, i64 0, i32 2
  store i64 %446, ptr %memberidx2.i.i54.i, align 4
  %memberidx3.i.i55.i = getelementptr inbounds %FloRange, ptr %441, i64 0, i32 3
  store i64 %447, ptr %memberidx3.i.i55.i, align 4
  store i64 14, ptr %440, align 4
  %memberidx1.i56.i = getelementptr inbounds %Token, ptr %440, i64 0, i32 1
  store ptr %441, ptr %memberidx1.i56.i, align 8
  br label %common.ret

ifend3.i:                                         ; preds = %else.i272, %if.entry.i31.i
  %448 = tail call ptr @malloc(i32 16)
  %449 = tail call ptr @malloc(i32 32)
  %450 = load i64, ptr %memberidx.i.i248, align 4
  %451 = add nsw i64 %450, 1
  %memberidx2.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %452 = load i64, ptr %memberidx2.i21.i, align 4
  %453 = add i64 %452, -1
  %memberidx3.i22.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %454 = load i64, ptr %memberidx3.i22.i, align 4
  store i64 %450, ptr %449, align 4
  %memberidx1.i.i23.i = getelementptr inbounds %FloRange, ptr %449, i64 0, i32 1
  store i64 %451, ptr %memberidx1.i.i23.i, align 4
  %memberidx2.i.i24.i = getelementptr inbounds %FloRange, ptr %449, i64 0, i32 2
  store i64 %453, ptr %memberidx2.i.i24.i, align 4
  %memberidx3.i.i25.i = getelementptr inbounds %FloRange, ptr %449, i64 0, i32 3
  store i64 %454, ptr %memberidx3.i.i25.i, align 4
  store i64 6, ptr %448, align 4
  %memberidx1.i19.i = getelementptr inbounds %Token, ptr %448, i64 0, i32 1
  store ptr %449, ptr %memberidx1.i19.i, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend11
  %memberidx.i.i273 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %455 = load i64, ptr %memberidx.i.i273, align 4
  %456 = add nsw i64 %455, 1
  %memberidx1.i.i274 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %457 = load ptr, ptr %memberidx1.i.i274, align 8
  %memberidx2.i.i275 = getelementptr inbounds %string, ptr %457, i64 0, i32 2
  %458 = load i64, ptr %memberidx2.i.i275, align 4
  %459 = icmp slt i64 %456, %458
  br i1 %459, label %if.entry.i.i277, label %else.i297

if.entry.i.i277:                                  ; preds = %if.entry24
  %460 = load ptr, ptr %457, align 8
  %memberidx4.i.i276 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %460, i64 0, i32 2
  %461 = load ptr, ptr %memberidx4.i.i276, align 8
  %462 = tail call i8 %461(ptr nonnull %457, i64 %456)
  %phi.cmp1118 = icmp eq i8 %462, 45
  %463 = load i64, ptr %memberidx.i.i273, align 4
  %464 = load ptr, ptr %memberidx1.i.i274, align 8
  %memberidx2.i.i.i283 = getelementptr inbounds %string, ptr %464, i64 0, i32 2
  %465 = load i64, ptr %memberidx2.i.i.i283, align 4
  br i1 %phi.cmp1118, label %if.entry.i284, label %if.entry.i.i277.else.i297_crit_edge

if.entry.i.i277.else.i297_crit_edge:              ; preds = %if.entry.i.i277
  %.pre1275 = add nsw i64 %463, 1
  br label %else.i297

if.entry.i284:                                    ; preds = %if.entry.i.i277
  %.not1123 = icmp slt i64 %463, %465
  br i1 %.not1123, label %end.i.i288, label %end.i.i288.thread

end.i.i288.thread:                                ; preds = %if.entry.i284
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i296

end.i.i288:                                       ; preds = %if.entry.i284
  %466 = load ptr, ptr %464, align 8
  %memberidx2.i17.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %466, i64 0, i32 2
  %467 = load ptr, ptr %memberidx2.i17.i, align 8
  %468 = add nsw i64 %463, 1
  store i64 %468, ptr %memberidx.i.i273, align 4
  %469 = tail call i8 %467(ptr nonnull %464, i64 %468)
  store i8 %469, ptr %0, align 1
  switch i8 %469, label %if.entry10.i.i294 [
    i8 10, label %if.entry.i18.i
    i8 0, label %Lexer_advance.exit.i296
  ]

if.entry.i18.i:                                   ; preds = %end.i.i288
  %memberidx6.i.i289 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i289, align 4
  %memberidx7.i.i290 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %470 = load i64, ptr %memberidx7.i.i290, align 4
  %471 = add nsw i64 %470, 1
  store i64 %471, ptr %memberidx7.i.i290, align 4
  br label %Lexer_advance.exit.i296

if.entry10.i.i294:                                ; preds = %end.i.i288
  %memberidx13.i.i293 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %472 = load i64, ptr %memberidx13.i.i293, align 4
  %473 = add nsw i64 %472, 1
  store i64 %473, ptr %memberidx13.i.i293, align 4
  br label %Lexer_advance.exit.i296

Lexer_advance.exit.i296:                          ; preds = %end.i.i288.thread, %end.i.i288, %if.entry10.i.i294, %if.entry.i18.i
  %474 = tail call ptr @malloc(i32 16)
  %475 = tail call ptr @malloc(i32 32)
  %476 = load i64, ptr %memberidx.i.i273, align 4
  %477 = add nsw i64 %476, -1
  %478 = add nsw i64 %476, 1
  %memberidx2.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %479 = load i64, ptr %memberidx2.i20.i, align 4
  %480 = add i64 %479, -2
  %memberidx3.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %481 = load i64, ptr %memberidx3.i21.i, align 4
  store i64 %477, ptr %475, align 4
  %memberidx1.i.i22.i = getelementptr inbounds %FloRange, ptr %475, i64 0, i32 1
  store i64 %478, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %FloRange, ptr %475, i64 0, i32 2
  store i64 %480, ptr %memberidx2.i.i23.i, align 4
  %memberidx3.i.i.i295 = getelementptr inbounds %FloRange, ptr %475, i64 0, i32 3
  store i64 %481, ptr %memberidx3.i.i.i295, align 4
  store i64 24, ptr %474, align 4
  %memberidx1.i24.i = getelementptr inbounds %Token, ptr %474, i64 0, i32 1
  store ptr %475, ptr %memberidx1.i24.i, align 8
  br label %common.ret

else.i297:                                        ; preds = %if.entry.i.i277.else.i297_crit_edge, %if.entry24
  %.pre-phi1276 = phi i64 [ %.pre1275, %if.entry.i.i277.else.i297_crit_edge ], [ %456, %if.entry24 ]
  %482 = phi i64 [ %465, %if.entry.i.i277.else.i297_crit_edge ], [ %458, %if.entry24 ]
  %483 = phi ptr [ %464, %if.entry.i.i277.else.i297_crit_edge ], [ %457, %if.entry24 ]
  %484 = icmp slt i64 %.pre-phi1276, %482
  br i1 %484, label %if.entry.i37.i, label %else2.i

if.entry.i37.i:                                   ; preds = %else.i297
  %485 = load ptr, ptr %483, align 8
  %memberidx4.i36.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %485, i64 0, i32 2
  %486 = load ptr, ptr %memberidx4.i36.i, align 8
  %487 = tail call i8 %486(ptr nonnull %483, i64 %.pre-phi1276)
  %phi.cmp1119 = icmp eq i8 %487, 61
  %488 = load i64, ptr %memberidx.i.i273, align 4
  %489 = load ptr, ptr %memberidx1.i.i274, align 8
  %memberidx2.i.i41.i = getelementptr inbounds %string, ptr %489, i64 0, i32 2
  %490 = load i64, ptr %memberidx2.i.i41.i, align 4
  br i1 %phi.cmp1119, label %if.entry1.i298, label %if.entry.i37.i.else2.i_crit_edge

if.entry.i37.i.else2.i_crit_edge:                 ; preds = %if.entry.i37.i
  %.pre1277 = add nsw i64 %488, 1
  br label %else2.i

if.entry1.i298:                                   ; preds = %if.entry.i37.i
  %.not1122 = icmp slt i64 %488, %490
  br i1 %.not1122, label %end.i47.i, label %end.i47.i.thread

end.i47.i.thread:                                 ; preds = %if.entry1.i298
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit55.i

end.i47.i:                                        ; preds = %if.entry1.i298
  %491 = load ptr, ptr %489, align 8
  %memberidx2.i43.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %491, i64 0, i32 2
  %492 = load ptr, ptr %memberidx2.i43.i, align 8
  %493 = add nsw i64 %488, 1
  store i64 %493, ptr %memberidx.i.i273, align 4
  %494 = tail call i8 %492(ptr nonnull %489, i64 %493)
  store i8 %494, ptr %0, align 1
  switch i8 %494, label %if.entry10.i54.i [
    i8 10, label %if.entry.i50.i
    i8 0, label %Lexer_advance.exit55.i
  ]

if.entry.i50.i:                                   ; preds = %end.i47.i
  %memberidx6.i48.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i48.i, align 4
  %memberidx7.i49.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %495 = load i64, ptr %memberidx7.i49.i, align 4
  %496 = add nsw i64 %495, 1
  store i64 %496, ptr %memberidx7.i49.i, align 4
  br label %Lexer_advance.exit55.i

if.entry10.i54.i:                                 ; preds = %end.i47.i
  %memberidx13.i53.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %497 = load i64, ptr %memberidx13.i53.i, align 4
  %498 = add nsw i64 %497, 1
  store i64 %498, ptr %memberidx13.i53.i, align 4
  br label %Lexer_advance.exit55.i

Lexer_advance.exit55.i:                           ; preds = %end.i47.i.thread, %end.i47.i, %if.entry10.i54.i, %if.entry.i50.i
  %499 = tail call ptr @malloc(i32 16)
  %500 = tail call ptr @malloc(i32 32)
  %501 = load i64, ptr %memberidx.i.i273, align 4
  %502 = add nsw i64 %501, -1
  %503 = add nsw i64 %501, 1
  %memberidx2.i57.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %504 = load i64, ptr %memberidx2.i57.i, align 4
  %505 = add i64 %504, -2
  %memberidx3.i58.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %506 = load i64, ptr %memberidx3.i58.i, align 4
  store i64 %502, ptr %500, align 4
  %memberidx1.i.i59.i = getelementptr inbounds %FloRange, ptr %500, i64 0, i32 1
  store i64 %503, ptr %memberidx1.i.i59.i, align 4
  %memberidx2.i.i60.i = getelementptr inbounds %FloRange, ptr %500, i64 0, i32 2
  store i64 %505, ptr %memberidx2.i.i60.i, align 4
  %memberidx3.i.i61.i = getelementptr inbounds %FloRange, ptr %500, i64 0, i32 3
  store i64 %506, ptr %memberidx3.i.i61.i, align 4
  store i64 13, ptr %499, align 4
  %memberidx1.i62.i299 = getelementptr inbounds %Token, ptr %499, i64 0, i32 1
  store ptr %500, ptr %memberidx1.i62.i299, align 8
  br label %common.ret

else2.i:                                          ; preds = %if.entry.i37.i.else2.i_crit_edge, %else.i297
  %.pre-phi1278 = phi i64 [ %.pre1277, %if.entry.i37.i.else2.i_crit_edge ], [ %.pre-phi1276, %else.i297 ]
  %507 = phi i64 [ %490, %if.entry.i37.i.else2.i_crit_edge ], [ %482, %else.i297 ]
  %508 = phi ptr [ %489, %if.entry.i37.i.else2.i_crit_edge ], [ %483, %else.i297 ]
  %509 = icmp slt i64 %.pre-phi1278, %507
  br i1 %509, label %if.entry.i75.i, label %ifend6.i

if.entry.i75.i:                                   ; preds = %else2.i
  %510 = load ptr, ptr %508, align 8
  %memberidx4.i74.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %510, i64 0, i32 2
  %511 = load ptr, ptr %memberidx4.i74.i, align 8
  %512 = tail call i8 %511(ptr nonnull %508, i64 %.pre-phi1278)
  %phi.cmp1120 = icmp eq i8 %512, 62
  br i1 %phi.cmp1120, label %if.entry4.i, label %ifend6.i

if.entry4.i:                                      ; preds = %if.entry.i75.i
  %513 = load i64, ptr %memberidx.i.i273, align 4
  %514 = load ptr, ptr %memberidx1.i.i274, align 8
  %memberidx2.i.i79.i = getelementptr inbounds %string, ptr %514, i64 0, i32 2
  %515 = load i64, ptr %memberidx2.i.i79.i, align 4
  %.not1121 = icmp slt i64 %513, %515
  br i1 %.not1121, label %end.i85.i, label %end.i85.i.thread

end.i85.i.thread:                                 ; preds = %if.entry4.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit93.i

end.i85.i:                                        ; preds = %if.entry4.i
  %516 = load ptr, ptr %514, align 8
  %memberidx2.i81.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %516, i64 0, i32 2
  %517 = load ptr, ptr %memberidx2.i81.i, align 8
  %518 = add nsw i64 %513, 1
  store i64 %518, ptr %memberidx.i.i273, align 4
  %519 = tail call i8 %517(ptr nonnull %514, i64 %518)
  store i8 %519, ptr %0, align 1
  switch i8 %519, label %if.entry10.i92.i [
    i8 10, label %if.entry.i88.i
    i8 0, label %Lexer_advance.exit93.i
  ]

if.entry.i88.i:                                   ; preds = %end.i85.i
  %memberidx6.i86.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i86.i, align 4
  %memberidx7.i87.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %520 = load i64, ptr %memberidx7.i87.i, align 4
  %521 = add nsw i64 %520, 1
  store i64 %521, ptr %memberidx7.i87.i, align 4
  br label %Lexer_advance.exit93.i

if.entry10.i92.i:                                 ; preds = %end.i85.i
  %memberidx13.i91.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %522 = load i64, ptr %memberidx13.i91.i, align 4
  %523 = add nsw i64 %522, 1
  store i64 %523, ptr %memberidx13.i91.i, align 4
  br label %Lexer_advance.exit93.i

Lexer_advance.exit93.i:                           ; preds = %end.i85.i.thread, %end.i85.i, %if.entry10.i92.i, %if.entry.i88.i
  %524 = tail call ptr @malloc(i32 16)
  %525 = tail call ptr @malloc(i32 32)
  %526 = load i64, ptr %memberidx.i.i273, align 4
  %527 = add nsw i64 %526, -1
  %528 = add nsw i64 %526, 1
  %memberidx2.i65.i300 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %529 = load i64, ptr %memberidx2.i65.i300, align 4
  %530 = add i64 %529, -2
  %memberidx3.i66.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %531 = load i64, ptr %memberidx3.i66.i, align 4
  store i64 %527, ptr %525, align 4
  %memberidx1.i.i67.i = getelementptr inbounds %FloRange, ptr %525, i64 0, i32 1
  store i64 %528, ptr %memberidx1.i.i67.i, align 4
  %memberidx2.i.i68.i = getelementptr inbounds %FloRange, ptr %525, i64 0, i32 2
  store i64 %530, ptr %memberidx2.i.i68.i, align 4
  %memberidx3.i.i69.i = getelementptr inbounds %FloRange, ptr %525, i64 0, i32 3
  store i64 %531, ptr %memberidx3.i.i69.i, align 4
  store i64 45, ptr %524, align 4
  %memberidx1.i63.i = getelementptr inbounds %Token, ptr %524, i64 0, i32 1
  store ptr %525, ptr %memberidx1.i63.i, align 8
  br label %common.ret

ifend6.i:                                         ; preds = %else2.i, %if.entry.i75.i
  %532 = tail call ptr @malloc(i32 16)
  %533 = tail call ptr @malloc(i32 32)
  %534 = load i64, ptr %memberidx.i.i273, align 4
  %535 = add nsw i64 %534, -1
  %536 = add nsw i64 %534, 1
  %memberidx2.i27.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %537 = load i64, ptr %memberidx2.i27.i, align 4
  %538 = add i64 %537, -2
  %memberidx3.i28.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %539 = load i64, ptr %memberidx3.i28.i, align 4
  store i64 %535, ptr %533, align 4
  %memberidx1.i.i29.i = getelementptr inbounds %FloRange, ptr %533, i64 0, i32 1
  store i64 %536, ptr %memberidx1.i.i29.i, align 4
  %memberidx2.i.i30.i = getelementptr inbounds %FloRange, ptr %533, i64 0, i32 2
  store i64 %538, ptr %memberidx2.i.i30.i, align 4
  %memberidx3.i.i31.i = getelementptr inbounds %FloRange, ptr %533, i64 0, i32 3
  store i64 %539, ptr %memberidx3.i.i31.i, align 4
  store i64 5, ptr %532, align 4
  %memberidx1.i25.i = getelementptr inbounds %Token, ptr %532, i64 0, i32 1
  store ptr %533, ptr %memberidx1.i25.i, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %memberidx.i.i302 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %540 = load i64, ptr %memberidx.i.i302, align 4
  %541 = add nsw i64 %540, 1
  %memberidx1.i.i303 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %542 = load ptr, ptr %memberidx1.i.i303, align 8
  %memberidx2.i.i304 = getelementptr inbounds %string, ptr %542, i64 0, i32 2
  %543 = load i64, ptr %memberidx2.i.i304, align 4
  %544 = icmp slt i64 %541, %543
  br i1 %544, label %if.entry.i.i306, label %else.i338

if.entry.i.i306:                                  ; preds = %if.entry27
  %545 = load ptr, ptr %542, align 8
  %memberidx4.i.i305 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %545, i64 0, i32 2
  %546 = load ptr, ptr %memberidx4.i.i305, align 8
  %547 = tail call i8 %546(ptr nonnull %542, i64 %541)
  %phi.cmp1112 = icmp eq i8 %547, 61
  %548 = load i64, ptr %memberidx.i.i302, align 4
  %549 = load ptr, ptr %memberidx1.i.i303, align 8
  %memberidx2.i.i.i312 = getelementptr inbounds %string, ptr %549, i64 0, i32 2
  %550 = load i64, ptr %memberidx2.i.i.i312, align 4
  br i1 %phi.cmp1112, label %if.entry.i313, label %if.entry.i.i306.else.i338_crit_edge

if.entry.i.i306.else.i338_crit_edge:              ; preds = %if.entry.i.i306
  %.pre1279 = add nsw i64 %548, 1
  br label %else.i338

if.entry.i313:                                    ; preds = %if.entry.i.i306
  %.not1117 = icmp slt i64 %548, %550
  br i1 %.not1117, label %end.i.i319, label %end.i.i319.thread

end.i.i319.thread:                                ; preds = %if.entry.i313
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i334

end.i.i319:                                       ; preds = %if.entry.i313
  %551 = load ptr, ptr %549, align 8
  %memberidx2.i17.i315 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %551, i64 0, i32 2
  %552 = load ptr, ptr %memberidx2.i17.i315, align 8
  %553 = add nsw i64 %548, 1
  store i64 %553, ptr %memberidx.i.i302, align 4
  %554 = tail call i8 %552(ptr nonnull %549, i64 %553)
  store i8 %554, ptr %0, align 1
  switch i8 %554, label %if.entry10.i.i326 [
    i8 10, label %if.entry.i18.i322
    i8 0, label %Lexer_advance.exit.i334
  ]

if.entry.i18.i322:                                ; preds = %end.i.i319
  %memberidx6.i.i320 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i320, align 4
  %memberidx7.i.i321 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %555 = load i64, ptr %memberidx7.i.i321, align 4
  %556 = add nsw i64 %555, 1
  store i64 %556, ptr %memberidx7.i.i321, align 4
  br label %Lexer_advance.exit.i334

if.entry10.i.i326:                                ; preds = %end.i.i319
  %memberidx13.i.i325 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %557 = load i64, ptr %memberidx13.i.i325, align 4
  %558 = add nsw i64 %557, 1
  store i64 %558, ptr %memberidx13.i.i325, align 4
  br label %Lexer_advance.exit.i334

Lexer_advance.exit.i334:                          ; preds = %end.i.i319.thread, %end.i.i319, %if.entry10.i.i326, %if.entry.i18.i322
  %559 = tail call ptr @malloc(i32 16)
  %560 = tail call ptr @malloc(i32 32)
  %561 = load i64, ptr %memberidx.i.i302, align 4
  %562 = add nsw i64 %561, -1
  %563 = add nsw i64 %561, 1
  %memberidx2.i20.i328 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %564 = load i64, ptr %memberidx2.i20.i328, align 4
  %565 = add i64 %564, -2
  %memberidx3.i21.i329 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %566 = load i64, ptr %memberidx3.i21.i329, align 4
  store i64 %562, ptr %560, align 4
  %memberidx1.i.i22.i330 = getelementptr inbounds %FloRange, ptr %560, i64 0, i32 1
  store i64 %563, ptr %memberidx1.i.i22.i330, align 4
  %memberidx2.i.i23.i331 = getelementptr inbounds %FloRange, ptr %560, i64 0, i32 2
  store i64 %565, ptr %memberidx2.i.i23.i331, align 4
  %memberidx3.i.i.i332 = getelementptr inbounds %FloRange, ptr %560, i64 0, i32 3
  store i64 %566, ptr %memberidx3.i.i.i332, align 4
  store i64 12, ptr %559, align 4
  %memberidx1.i24.i333 = getelementptr inbounds %Token, ptr %559, i64 0, i32 1
  store ptr %560, ptr %memberidx1.i24.i333, align 8
  br label %common.ret

else.i338:                                        ; preds = %if.entry.i.i306.else.i338_crit_edge, %if.entry27
  %.pre-phi1280 = phi i64 [ %.pre1279, %if.entry.i.i306.else.i338_crit_edge ], [ %541, %if.entry27 ]
  %567 = phi i64 [ %550, %if.entry.i.i306.else.i338_crit_edge ], [ %543, %if.entry27 ]
  %568 = phi ptr [ %549, %if.entry.i.i306.else.i338_crit_edge ], [ %542, %if.entry27 ]
  %569 = icmp slt i64 %.pre-phi1280, %567
  br i1 %569, label %if.entry.i37.i340, label %ifend3.i363

if.entry.i37.i340:                                ; preds = %else.i338
  %570 = load ptr, ptr %568, align 8
  %memberidx4.i36.i339 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %570, i64 0, i32 2
  %571 = load ptr, ptr %memberidx4.i36.i339, align 8
  %572 = tail call i8 %571(ptr nonnull %568, i64 %.pre-phi1280)
  %phi.cmp1113 = icmp eq i8 %572, 42
  br i1 %phi.cmp1113, label %if.entry1.i346, label %ifend3.i363

if.entry1.i346:                                   ; preds = %if.entry.i37.i340
  %573 = load i64, ptr %memberidx.i.i302, align 4
  %574 = load ptr, ptr %memberidx1.i.i303, align 8
  %memberidx2.i.i41.i345 = getelementptr inbounds %string, ptr %574, i64 0, i32 2
  %575 = load i64, ptr %memberidx2.i.i41.i345, align 4
  %.not1114 = icmp slt i64 %573, %575
  br i1 %.not1114, label %end.i47.i352, label %end.i47.i352.thread

end.i47.i352.thread:                              ; preds = %if.entry1.i346
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit55.i361

end.i47.i352:                                     ; preds = %if.entry1.i346
  %576 = load ptr, ptr %574, align 8
  %memberidx2.i43.i348 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %576, i64 0, i32 2
  %577 = load ptr, ptr %memberidx2.i43.i348, align 8
  %578 = add nsw i64 %573, 1
  store i64 %578, ptr %memberidx.i.i302, align 4
  %579 = tail call i8 %577(ptr nonnull %574, i64 %578)
  store i8 %579, ptr %0, align 1
  switch i8 %579, label %if.entry10.i54.i359 [
    i8 10, label %if.entry.i50.i355
    i8 0, label %Lexer_advance.exit55.i361
  ]

if.entry.i50.i355:                                ; preds = %end.i47.i352
  %memberidx6.i48.i353 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i48.i353, align 4
  %memberidx7.i49.i354 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %580 = load i64, ptr %memberidx7.i49.i354, align 4
  %581 = add nsw i64 %580, 1
  store i64 %581, ptr %memberidx7.i49.i354, align 4
  br label %Lexer_advance.exit55.i361

if.entry10.i54.i359:                              ; preds = %end.i47.i352
  %memberidx13.i53.i358 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %582 = load i64, ptr %memberidx13.i53.i358, align 4
  %583 = add nsw i64 %582, 1
  store i64 %583, ptr %memberidx13.i53.i358, align 4
  br label %Lexer_advance.exit55.i361

Lexer_advance.exit55.i361:                        ; preds = %end.i47.i352.thread, %end.i47.i352, %if.entry10.i54.i359, %if.entry.i50.i355
  %584 = load i64, ptr %memberidx.i.i302, align 4
  %585 = add nsw i64 %584, 1
  %586 = load ptr, ptr %memberidx1.i.i303, align 8
  %memberidx2.i58.i = getelementptr inbounds %string, ptr %586, i64 0, i32 2
  %587 = load i64, ptr %memberidx2.i58.i, align 4
  %588 = icmp slt i64 %585, %587
  br i1 %588, label %if.entry.i61.i, label %ifend6.i391

if.entry.i61.i:                                   ; preds = %Lexer_advance.exit55.i361
  %589 = load ptr, ptr %586, align 8
  %memberidx4.i60.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %589, i64 0, i32 2
  %590 = load ptr, ptr %memberidx4.i60.i, align 8
  %591 = tail call i8 %590(ptr nonnull %586, i64 %585)
  %phi.cmp1115 = icmp eq i8 %591, 61
  br i1 %phi.cmp1115, label %if.entry4.i367, label %ifend6.i391

ifend3.i363:                                      ; preds = %else.i338, %if.entry.i37.i340
  %592 = tail call ptr @malloc(i32 16)
  %593 = tail call ptr @malloc(i32 32)
  %594 = load i64, ptr %memberidx.i.i302, align 4
  %595 = add nsw i64 %594, 1
  %memberidx2.i64.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %596 = load i64, ptr %memberidx2.i64.i, align 4
  %597 = add i64 %596, -1
  %memberidx3.i65.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %598 = load i64, ptr %memberidx3.i65.i, align 4
  store i64 %594, ptr %593, align 4
  %memberidx1.i.i66.i = getelementptr inbounds %FloRange, ptr %593, i64 0, i32 1
  store i64 %595, ptr %memberidx1.i.i66.i, align 4
  %memberidx2.i.i67.i = getelementptr inbounds %FloRange, ptr %593, i64 0, i32 2
  store i64 %597, ptr %memberidx2.i.i67.i, align 4
  %memberidx3.i.i68.i = getelementptr inbounds %FloRange, ptr %593, i64 0, i32 3
  store i64 %598, ptr %memberidx3.i.i68.i, align 4
  store i64 4, ptr %592, align 4
  %memberidx1.i69.i = getelementptr inbounds %Token, ptr %592, i64 0, i32 1
  store ptr %593, ptr %memberidx1.i69.i, align 8
  br label %common.ret

if.entry4.i367:                                   ; preds = %if.entry.i61.i
  %599 = load i64, ptr %memberidx.i.i302, align 4
  %600 = load ptr, ptr %memberidx1.i.i303, align 8
  %memberidx2.i.i79.i366 = getelementptr inbounds %string, ptr %600, i64 0, i32 2
  %601 = load i64, ptr %memberidx2.i.i79.i366, align 4
  %.not1116 = icmp slt i64 %599, %601
  br i1 %.not1116, label %end.i85.i373, label %end.i85.i373.thread

end.i85.i373.thread:                              ; preds = %if.entry4.i367
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit93.i383

end.i85.i373:                                     ; preds = %if.entry4.i367
  %602 = load ptr, ptr %600, align 8
  %memberidx2.i81.i369 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %602, i64 0, i32 2
  %603 = load ptr, ptr %memberidx2.i81.i369, align 8
  %604 = add nsw i64 %599, 1
  store i64 %604, ptr %memberidx.i.i302, align 4
  %605 = tail call i8 %603(ptr nonnull %600, i64 %604)
  store i8 %605, ptr %0, align 1
  switch i8 %605, label %if.entry10.i92.i380 [
    i8 10, label %if.entry.i88.i376
    i8 0, label %Lexer_advance.exit93.i383
  ]

if.entry.i88.i376:                                ; preds = %end.i85.i373
  %memberidx6.i86.i374 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i86.i374, align 4
  %memberidx7.i87.i375 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %606 = load i64, ptr %memberidx7.i87.i375, align 4
  %607 = add nsw i64 %606, 1
  store i64 %607, ptr %memberidx7.i87.i375, align 4
  br label %Lexer_advance.exit93.i383

if.entry10.i92.i380:                              ; preds = %end.i85.i373
  %memberidx13.i91.i379 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %608 = load i64, ptr %memberidx13.i91.i379, align 4
  %609 = add nsw i64 %608, 1
  store i64 %609, ptr %memberidx13.i91.i379, align 4
  br label %Lexer_advance.exit93.i383

Lexer_advance.exit93.i383:                        ; preds = %end.i85.i373.thread, %end.i85.i373, %if.entry10.i92.i380, %if.entry.i88.i376
  %610 = tail call ptr @malloc(i32 16)
  %611 = tail call ptr @malloc(i32 32)
  %612 = load i64, ptr %memberidx.i.i302, align 4
  %613 = add nsw i64 %612, -2
  %614 = add nsw i64 %612, 1
  %memberidx2.i72.i381 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %615 = load i64, ptr %memberidx2.i72.i381, align 4
  %616 = add i64 %615, -3
  %memberidx3.i73.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %617 = load i64, ptr %memberidx3.i73.i, align 4
  store i64 %613, ptr %611, align 4
  %memberidx1.i.i74.i = getelementptr inbounds %FloRange, ptr %611, i64 0, i32 1
  store i64 %614, ptr %memberidx1.i.i74.i, align 4
  %memberidx2.i.i75.i = getelementptr inbounds %FloRange, ptr %611, i64 0, i32 2
  store i64 %616, ptr %memberidx2.i.i75.i, align 4
  %memberidx3.i.i76.i = getelementptr inbounds %FloRange, ptr %611, i64 0, i32 3
  store i64 %617, ptr %memberidx3.i.i76.i, align 4
  store i64 17, ptr %610, align 4
  %memberidx1.i70.i382 = getelementptr inbounds %Token, ptr %610, i64 0, i32 1
  store ptr %611, ptr %memberidx1.i70.i382, align 8
  br label %common.ret

ifend6.i391:                                      ; preds = %Lexer_advance.exit55.i361, %if.entry.i61.i
  %618 = tail call ptr @malloc(i32 16)
  %619 = tail call ptr @malloc(i32 32)
  %620 = load i64, ptr %memberidx.i.i302, align 4
  %621 = add nsw i64 %620, -1
  %622 = add nsw i64 %620, 1
  %memberidx2.i27.i385 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %623 = load i64, ptr %memberidx2.i27.i385, align 4
  %624 = add i64 %623, -2
  %memberidx3.i28.i386 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %625 = load i64, ptr %memberidx3.i28.i386, align 4
  store i64 %621, ptr %619, align 4
  %memberidx1.i.i29.i387 = getelementptr inbounds %FloRange, ptr %619, i64 0, i32 1
  store i64 %622, ptr %memberidx1.i.i29.i387, align 4
  %memberidx2.i.i30.i388 = getelementptr inbounds %FloRange, ptr %619, i64 0, i32 2
  store i64 %624, ptr %memberidx2.i.i30.i388, align 4
  %memberidx3.i.i31.i389 = getelementptr inbounds %FloRange, ptr %619, i64 0, i32 3
  store i64 %625, ptr %memberidx3.i.i31.i389, align 4
  store i64 11, ptr %618, align 4
  %memberidx1.i25.i390 = getelementptr inbounds %Token, ptr %618, i64 0, i32 1
  store ptr %619, ptr %memberidx1.i25.i390, align 8
  br label %common.ret

if.entry30:                                       ; preds = %ifend11
  %memberidx.i.i392 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %626 = load i64, ptr %memberidx.i.i392, align 4
  %627 = add nsw i64 %626, 1
  %memberidx1.i.i393 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %628 = load ptr, ptr %memberidx1.i.i393, align 8
  %memberidx2.i.i394 = getelementptr inbounds %string, ptr %628, i64 0, i32 2
  %629 = load i64, ptr %memberidx2.i.i394, align 4
  %630 = icmp slt i64 %627, %629
  br i1 %630, label %if.entry.i.i396, label %ifend.i416

if.entry.i.i396:                                  ; preds = %if.entry30
  %631 = load ptr, ptr %628, align 8
  %memberidx4.i.i395 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %631, i64 0, i32 2
  %632 = load ptr, ptr %memberidx4.i.i395, align 8
  %633 = tail call i8 %632(ptr nonnull %628, i64 %627)
  %phi.cmp1110 = icmp eq i8 %633, 61
  br i1 %phi.cmp1110, label %if.entry.i403, label %ifend.i416

if.entry.i403:                                    ; preds = %if.entry.i.i396
  %634 = load i64, ptr %memberidx.i.i392, align 4
  %635 = load ptr, ptr %memberidx1.i.i393, align 8
  %memberidx2.i.i.i402 = getelementptr inbounds %string, ptr %635, i64 0, i32 2
  %636 = load i64, ptr %memberidx2.i.i.i402, align 4
  %.not1111 = icmp slt i64 %634, %636
  br i1 %.not1111, label %end.i.i407, label %end.i.i407.thread

end.i.i407.thread:                                ; preds = %if.entry.i403
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i415

end.i.i407:                                       ; preds = %if.entry.i403
  %637 = load ptr, ptr %635, align 8
  %memberidx2.i5.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %637, i64 0, i32 2
  %638 = load ptr, ptr %memberidx2.i5.i, align 8
  %639 = add nsw i64 %634, 1
  store i64 %639, ptr %memberidx.i.i392, align 4
  %640 = tail call i8 %638(ptr nonnull %635, i64 %639)
  store i8 %640, ptr %0, align 1
  switch i8 %640, label %if.entry10.i.i413 [
    i8 10, label %if.entry.i6.i
    i8 0, label %Lexer_advance.exit.i415
  ]

if.entry.i6.i:                                    ; preds = %end.i.i407
  %memberidx6.i.i408 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i408, align 4
  %memberidx7.i.i409 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %641 = load i64, ptr %memberidx7.i.i409, align 4
  %642 = add nsw i64 %641, 1
  store i64 %642, ptr %memberidx7.i.i409, align 4
  br label %Lexer_advance.exit.i415

if.entry10.i.i413:                                ; preds = %end.i.i407
  %memberidx13.i.i412 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %643 = load i64, ptr %memberidx13.i.i412, align 4
  %644 = add nsw i64 %643, 1
  store i64 %644, ptr %memberidx13.i.i412, align 4
  br label %Lexer_advance.exit.i415

Lexer_advance.exit.i415:                          ; preds = %end.i.i407.thread, %end.i.i407, %if.entry10.i.i413, %if.entry.i6.i
  %645 = tail call ptr @malloc(i32 16)
  %646 = tail call ptr @malloc(i32 32)
  %647 = load i64, ptr %memberidx.i.i392, align 4
  %648 = add nsw i64 %647, -1
  %649 = add nsw i64 %647, 1
  %memberidx2.i8.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %650 = load i64, ptr %memberidx2.i8.i, align 4
  %651 = add i64 %650, -2
  %memberidx3.i9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %652 = load i64, ptr %memberidx3.i9.i, align 4
  store i64 %648, ptr %646, align 4
  %memberidx1.i.i10.i = getelementptr inbounds %FloRange, ptr %646, i64 0, i32 1
  store i64 %649, ptr %memberidx1.i.i10.i, align 4
  %memberidx2.i.i11.i = getelementptr inbounds %FloRange, ptr %646, i64 0, i32 2
  store i64 %651, ptr %memberidx2.i.i11.i, align 4
  %memberidx3.i.i.i414 = getelementptr inbounds %FloRange, ptr %646, i64 0, i32 3
  store i64 %652, ptr %memberidx3.i.i.i414, align 4
  store i64 16, ptr %645, align 4
  %memberidx1.i12.i = getelementptr inbounds %Token, ptr %645, i64 0, i32 1
  store ptr %646, ptr %memberidx1.i12.i, align 8
  br label %common.ret

ifend.i416:                                       ; preds = %if.entry30, %if.entry.i.i396
  %653 = tail call ptr @malloc(i32 16)
  %654 = tail call ptr @malloc(i32 32)
  %655 = load i64, ptr %memberidx.i.i392, align 4
  %656 = add nsw i64 %655, 1
  %memberidx2.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %657 = load i64, ptr %memberidx2.i15.i, align 4
  %658 = add i64 %657, -1
  %memberidx3.i16.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %659 = load i64, ptr %memberidx3.i16.i, align 4
  store i64 %655, ptr %654, align 4
  %memberidx1.i.i17.i = getelementptr inbounds %FloRange, ptr %654, i64 0, i32 1
  store i64 %656, ptr %memberidx1.i.i17.i, align 4
  %memberidx2.i.i18.i = getelementptr inbounds %FloRange, ptr %654, i64 0, i32 2
  store i64 %658, ptr %memberidx2.i.i18.i, align 4
  %memberidx3.i.i19.i = getelementptr inbounds %FloRange, ptr %654, i64 0, i32 3
  store i64 %659, ptr %memberidx3.i.i19.i, align 4
  store i64 10, ptr %653, align 4
  %memberidx1.i13.i = getelementptr inbounds %Token, ptr %653, i64 0, i32 1
  store ptr %654, ptr %memberidx1.i13.i, align 8
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i.i417 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %660 = load i64, ptr %memberidx.i.i417, align 4
  %661 = add nsw i64 %660, 1
  %memberidx1.i.i418 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %662 = load ptr, ptr %memberidx1.i.i418, align 8
  %memberidx2.i.i419 = getelementptr inbounds %string, ptr %662, i64 0, i32 2
  %663 = load i64, ptr %memberidx2.i.i419, align 4
  %664 = icmp slt i64 %661, %663
  br i1 %664, label %if.entry.i.i421, label %ifend.i457

if.entry.i.i421:                                  ; preds = %if.entry33
  %665 = load ptr, ptr %662, align 8
  %memberidx4.i.i420 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %665, i64 0, i32 2
  %666 = load ptr, ptr %memberidx4.i.i420, align 8
  %667 = tail call i8 %666(ptr nonnull %662, i64 %661)
  %phi.cmp1108 = icmp eq i8 %667, 61
  br i1 %phi.cmp1108, label %if.entry.i428, label %ifend.i457

if.entry.i428:                                    ; preds = %if.entry.i.i421
  %668 = load i64, ptr %memberidx.i.i417, align 4
  %669 = load ptr, ptr %memberidx1.i.i418, align 8
  %memberidx2.i.i.i427 = getelementptr inbounds %string, ptr %669, i64 0, i32 2
  %670 = load i64, ptr %memberidx2.i.i.i427, align 4
  %.not1109 = icmp slt i64 %668, %670
  br i1 %.not1109, label %end.i.i434, label %end.i.i434.thread

end.i.i434.thread:                                ; preds = %if.entry.i428
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i449

end.i.i434:                                       ; preds = %if.entry.i428
  %671 = load ptr, ptr %669, align 8
  %memberidx2.i5.i430 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %671, i64 0, i32 2
  %672 = load ptr, ptr %memberidx2.i5.i430, align 8
  %673 = add nsw i64 %668, 1
  store i64 %673, ptr %memberidx.i.i417, align 4
  %674 = tail call i8 %672(ptr nonnull %669, i64 %673)
  store i8 %674, ptr %0, align 1
  switch i8 %674, label %if.entry10.i.i441 [
    i8 10, label %if.entry.i6.i437
    i8 0, label %Lexer_advance.exit.i449
  ]

if.entry.i6.i437:                                 ; preds = %end.i.i434
  %memberidx6.i.i435 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i435, align 4
  %memberidx7.i.i436 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %675 = load i64, ptr %memberidx7.i.i436, align 4
  %676 = add nsw i64 %675, 1
  store i64 %676, ptr %memberidx7.i.i436, align 4
  br label %Lexer_advance.exit.i449

if.entry10.i.i441:                                ; preds = %end.i.i434
  %memberidx13.i.i440 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %677 = load i64, ptr %memberidx13.i.i440, align 4
  %678 = add nsw i64 %677, 1
  store i64 %678, ptr %memberidx13.i.i440, align 4
  br label %Lexer_advance.exit.i449

Lexer_advance.exit.i449:                          ; preds = %end.i.i434.thread, %end.i.i434, %if.entry10.i.i441, %if.entry.i6.i437
  %679 = tail call ptr @malloc(i32 16)
  %680 = tail call ptr @malloc(i32 32)
  %681 = load i64, ptr %memberidx.i.i417, align 4
  %682 = add nsw i64 %681, -1
  %683 = add nsw i64 %681, 1
  %memberidx2.i8.i443 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %684 = load i64, ptr %memberidx2.i8.i443, align 4
  %685 = add i64 %684, -2
  %memberidx3.i9.i444 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %686 = load i64, ptr %memberidx3.i9.i444, align 4
  store i64 %682, ptr %680, align 4
  %memberidx1.i.i10.i445 = getelementptr inbounds %FloRange, ptr %680, i64 0, i32 1
  store i64 %683, ptr %memberidx1.i.i10.i445, align 4
  %memberidx2.i.i11.i446 = getelementptr inbounds %FloRange, ptr %680, i64 0, i32 2
  store i64 %685, ptr %memberidx2.i.i11.i446, align 4
  %memberidx3.i.i.i447 = getelementptr inbounds %FloRange, ptr %680, i64 0, i32 3
  store i64 %686, ptr %memberidx3.i.i.i447, align 4
  store i64 20, ptr %679, align 4
  %memberidx1.i12.i448 = getelementptr inbounds %Token, ptr %679, i64 0, i32 1
  store ptr %680, ptr %memberidx1.i12.i448, align 8
  br label %common.ret

ifend.i457:                                       ; preds = %if.entry33, %if.entry.i.i421
  %687 = tail call ptr @malloc(i32 16)
  %688 = tail call ptr @malloc(i32 32)
  %689 = load i64, ptr %memberidx.i.i417, align 4
  %690 = add nsw i64 %689, 1
  %memberidx2.i15.i451 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %691 = load i64, ptr %memberidx2.i15.i451, align 4
  %692 = add i64 %691, -1
  %memberidx3.i16.i452 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %693 = load i64, ptr %memberidx3.i16.i452, align 4
  store i64 %689, ptr %688, align 4
  %memberidx1.i.i17.i453 = getelementptr inbounds %FloRange, ptr %688, i64 0, i32 1
  store i64 %690, ptr %memberidx1.i.i17.i453, align 4
  %memberidx2.i.i18.i454 = getelementptr inbounds %FloRange, ptr %688, i64 0, i32 2
  store i64 %692, ptr %memberidx2.i.i18.i454, align 4
  %memberidx3.i.i19.i455 = getelementptr inbounds %FloRange, ptr %688, i64 0, i32 3
  store i64 %693, ptr %memberidx3.i.i19.i455, align 4
  store i64 51, ptr %687, align 4
  %memberidx1.i13.i456 = getelementptr inbounds %Token, ptr %687, i64 0, i32 1
  store ptr %688, ptr %memberidx1.i13.i456, align 8
  br label %common.ret

if.entry36:                                       ; preds = %ifend11
  %memberidx.i.i458 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %694 = load i64, ptr %memberidx.i.i458, align 4
  %695 = add nsw i64 %694, 1
  %memberidx1.i.i459 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %696 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i460 = getelementptr inbounds %string, ptr %696, i64 0, i32 2
  %697 = load i64, ptr %memberidx2.i.i460, align 4
  %698 = icmp slt i64 %695, %697
  br i1 %698, label %Lexer_peek.exit.i464, label %else.i483

Lexer_peek.exit.i464:                             ; preds = %if.entry36
  %699 = load ptr, ptr %696, align 8
  %memberidx4.i.i461 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %699, i64 0, i32 2
  %700 = load ptr, ptr %memberidx4.i.i461, align 8
  %701 = tail call i8 %700(ptr nonnull %696, i64 %695)
  %702 = icmp eq i8 %701, 42
  %703 = load i64, ptr %memberidx.i.i458, align 4
  %704 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i.i467 = getelementptr inbounds %string, ptr %704, i64 0, i32 2
  %705 = load i64, ptr %memberidx2.i.i.i467, align 4
  br i1 %702, label %if.entry.i468, label %Lexer_peek.exit.i464.else.i483_crit_edge

Lexer_peek.exit.i464.else.i483_crit_edge:         ; preds = %Lexer_peek.exit.i464
  %.pre1281 = add nsw i64 %703, 1
  br label %else.i483

if.entry.i468:                                    ; preds = %Lexer_peek.exit.i464
  %.not1102 = icmp slt i64 %703, %705
  br i1 %.not1102, label %end.i.i473, label %end.i.i473.thread

end.i.i473.thread:                                ; preds = %if.entry.i468
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i480

end.i.i473:                                       ; preds = %if.entry.i468
  %706 = load ptr, ptr %704, align 8
  %memberidx2.i27.i469 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %706, i64 0, i32 2
  %707 = load ptr, ptr %memberidx2.i27.i469, align 8
  %708 = add nsw i64 %703, 1
  store i64 %708, ptr %memberidx.i.i458, align 4
  %709 = tail call i8 %707(ptr nonnull %704, i64 %708)
  store i8 %709, ptr %0, align 1
  switch i8 %709, label %if.entry10.i.i479 [
    i8 10, label %if.entry.i28.i
    i8 0, label %Lexer_advance.exit.i480
  ]

if.entry.i28.i:                                   ; preds = %end.i.i473
  %memberidx6.i.i474 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i474, align 4
  %memberidx7.i.i475 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %710 = load i64, ptr %memberidx7.i.i475, align 4
  %711 = add nsw i64 %710, 1
  store i64 %711, ptr %memberidx7.i.i475, align 4
  br label %Lexer_advance.exit.i480

if.entry10.i.i479:                                ; preds = %end.i.i473
  %memberidx13.i.i478 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %712 = load i64, ptr %memberidx13.i.i478, align 4
  %713 = add nsw i64 %712, 1
  store i64 %713, ptr %memberidx13.i.i478, align 4
  br label %Lexer_advance.exit.i480

Lexer_advance.exit.i480:                          ; preds = %end.i.i473.thread, %end.i.i473, %if.entry10.i.i479, %if.entry.i28.i
  %714 = load i64, ptr %memberidx.i.i458, align 4
  %715 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i31.i = getelementptr inbounds %string, ptr %715, i64 0, i32 2
  %716 = load i64, ptr %memberidx2.i31.i, align 4
  %.not1103 = icmp slt i64 %714, %716
  br i1 %.not1103, label %while.entry.i486.preheader, label %while.end.i494

while.entry.i486.preheader:                       ; preds = %Lexer_advance.exit.i480
  %memberidx6.i106.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx7.i107.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i486

else.i483:                                        ; preds = %Lexer_peek.exit.i464.else.i483_crit_edge, %if.entry36
  %.pre-phi1282 = phi i64 [ %.pre1281, %Lexer_peek.exit.i464.else.i483_crit_edge ], [ %695, %if.entry36 ]
  %717 = phi i64 [ %705, %Lexer_peek.exit.i464.else.i483_crit_edge ], [ %697, %if.entry36 ]
  %718 = phi ptr [ %704, %Lexer_peek.exit.i464.else.i483_crit_edge ], [ %696, %if.entry36 ]
  %719 = icmp slt i64 %.pre-phi1282, %717
  br i1 %719, label %Lexer_peek.exit48.i, label %ifend41

Lexer_peek.exit48.i:                              ; preds = %else.i483
  %720 = load ptr, ptr %718, align 8
  %memberidx4.i46.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %720, i64 0, i32 2
  %721 = load ptr, ptr %memberidx4.i46.i, align 8
  %722 = tail call i8 %721(ptr nonnull %718, i64 %.pre-phi1282)
  %723 = icmp eq i8 %722, 47
  %724 = load i64, ptr %memberidx.i.i458, align 4
  %725 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i136.i = getelementptr inbounds %string, ptr %725, i64 0, i32 2
  %726 = load i64, ptr %memberidx2.i.i136.i, align 4
  br i1 %723, label %if.entry4.i496, label %Lexer_peek.exit48.i.ifend41_crit_edge

Lexer_peek.exit48.i.ifend41_crit_edge:            ; preds = %Lexer_peek.exit48.i
  %.pre1283 = add nsw i64 %724, 1
  br label %ifend41

while.entry.i486:                                 ; preds = %while.entry.i486.preheader, %Lexer_advance.exit113.i
  %727 = phi i64 [ %716, %while.entry.i486.preheader ], [ %781, %Lexer_advance.exit113.i ]
  %728 = phi ptr [ %715, %while.entry.i486.preheader ], [ %780, %Lexer_advance.exit113.i ]
  %729 = phi i64 [ %714, %while.entry.i486.preheader ], [ %779, %Lexer_advance.exit113.i ]
  %730 = add nsw i64 %729, 1
  %731 = icmp slt i64 %730, %727
  br i1 %731, label %if.entry.i54.i, label %Lexer_peek.exit55.i

if.entry.i54.i:                                   ; preds = %while.entry.i486
  %732 = load ptr, ptr %728, align 8
  %memberidx4.i53.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %732, i64 0, i32 2
  %733 = load ptr, ptr %memberidx4.i53.i, align 8
  %734 = tail call i8 %733(ptr nonnull %728, i64 %730)
  %.pre1216 = load i64, ptr %memberidx.i.i458, align 4
  %.pre1217 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i58.i489.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1217, i64 0, i32 2
  %.pre1218 = load i64, ptr %memberidx2.i58.i489.phi.trans.insert, align 4
  br label %Lexer_peek.exit55.i

Lexer_peek.exit55.i:                              ; preds = %if.entry.i54.i, %while.entry.i486
  %735 = phi i64 [ %.pre1218, %if.entry.i54.i ], [ %727, %while.entry.i486 ]
  %736 = phi ptr [ %.pre1217, %if.entry.i54.i ], [ %728, %while.entry.i486 ]
  %737 = phi i64 [ %.pre1216, %if.entry.i54.i ], [ %729, %while.entry.i486 ]
  %common.ret.op.i52.i = phi i8 [ %734, %if.entry.i54.i ], [ 0, %while.entry.i486 ]
  %738 = add nsw i64 %737, 2
  %739 = icmp slt i64 %738, %735
  br i1 %739, label %Lexer_peek.exit62.i493, label %ifend3.i495

Lexer_peek.exit62.i493:                           ; preds = %Lexer_peek.exit55.i
  %740 = icmp eq i8 %common.ret.op.i52.i, 42
  %741 = load ptr, ptr %736, align 8
  %memberidx4.i60.i490 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %741, i64 0, i32 2
  %742 = load ptr, ptr %memberidx4.i60.i490, align 8
  %743 = tail call i8 %742(ptr nonnull %736, i64 %738)
  %744 = icmp eq i8 %743, 47
  %745 = and i1 %740, %744
  %.pre1222.pre = load i64, ptr %memberidx.i.i458, align 4
  %.pre1223.pre = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i65.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1223.pre, i64 0, i32 2
  %.pre1224.pre = load i64, ptr %memberidx2.i.i65.i.phi.trans.insert.phi.trans.insert, align 4
  br i1 %745, label %while.end.i494, label %ifend3.i495

while.end.i494:                                   ; preds = %Lexer_advance.exit113.i, %Lexer_peek.exit62.i493, %Lexer_advance.exit.i480
  %746 = phi i64 [ %716, %Lexer_advance.exit.i480 ], [ %.pre1224.pre, %Lexer_peek.exit62.i493 ], [ %781, %Lexer_advance.exit113.i ]
  %747 = phi ptr [ %715, %Lexer_advance.exit.i480 ], [ %.pre1223.pre, %Lexer_peek.exit62.i493 ], [ %780, %Lexer_advance.exit113.i ]
  %748 = phi i64 [ %714, %Lexer_advance.exit.i480 ], [ %.pre1222.pre, %Lexer_peek.exit62.i493 ], [ %779, %Lexer_advance.exit113.i ]
  %.not1106 = icmp slt i64 %748, %746
  br i1 %.not1106, label %end.i71.i, label %end.i71.i.thread

end.i71.i.thread:                                 ; preds = %while.end.i494
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit79.i

end.i71.i:                                        ; preds = %while.end.i494
  %749 = load ptr, ptr %747, align 8
  %memberidx2.i67.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %749, i64 0, i32 2
  %750 = load ptr, ptr %memberidx2.i67.i, align 8
  %751 = add nsw i64 %748, 1
  store i64 %751, ptr %memberidx.i.i458, align 4
  %752 = tail call i8 %750(ptr nonnull %747, i64 %751)
  store i8 %752, ptr %0, align 1
  switch i8 %752, label %if.entry10.i78.i [
    i8 10, label %if.entry.i74.i
    i8 0, label %Lexer_advance.exit79.i
  ]

if.entry.i74.i:                                   ; preds = %end.i71.i
  %memberidx6.i72.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i72.i, align 4
  %memberidx7.i73.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %753 = load i64, ptr %memberidx7.i73.i, align 4
  %754 = add nsw i64 %753, 1
  store i64 %754, ptr %memberidx7.i73.i, align 4
  br label %Lexer_advance.exit79.i

if.entry10.i78.i:                                 ; preds = %end.i71.i
  %memberidx13.i77.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %755 = load i64, ptr %memberidx13.i77.i, align 4
  %756 = add nsw i64 %755, 1
  store i64 %756, ptr %memberidx13.i77.i, align 4
  br label %Lexer_advance.exit79.i

Lexer_advance.exit79.i:                           ; preds = %end.i71.i.thread, %end.i71.i, %if.entry10.i78.i, %if.entry.i74.i
  %757 = load i64, ptr %memberidx.i.i458, align 4
  %758 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i82.i = getelementptr inbounds %string, ptr %758, i64 0, i32 2
  %759 = load i64, ptr %memberidx2.i.i82.i, align 4
  %.not1107 = icmp slt i64 %757, %759
  br i1 %.not1107, label %end.i88.i, label %end.i88.i.thread

end.i88.i.thread:                                 ; preds = %Lexer_advance.exit79.i
  store i8 0, ptr %0, align 1
  br label %if.entry39

end.i88.i:                                        ; preds = %Lexer_advance.exit79.i
  %760 = load ptr, ptr %758, align 8
  %memberidx2.i84.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %760, i64 0, i32 2
  %761 = load ptr, ptr %memberidx2.i84.i, align 8
  %762 = add nsw i64 %757, 1
  store i64 %762, ptr %memberidx.i.i458, align 4
  %763 = tail call i8 %761(ptr nonnull %758, i64 %762)
  store i8 %763, ptr %0, align 1
  switch i8 %763, label %if.entry10.i95.i [
    i8 10, label %if.entry.i91.i
    i8 0, label %if.entry39
  ]

if.entry.i91.i:                                   ; preds = %end.i88.i
  %memberidx6.i89.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i89.i, align 4
  %memberidx7.i90.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %764 = load i64, ptr %memberidx7.i90.i, align 4
  %765 = add nsw i64 %764, 1
  store i64 %765, ptr %memberidx7.i90.i, align 4
  br label %if.entry39

if.entry10.i95.i:                                 ; preds = %end.i88.i
  %memberidx13.i94.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %766 = load i64, ptr %memberidx13.i94.i, align 4
  %767 = add nsw i64 %766, 1
  store i64 %767, ptr %memberidx13.i94.i, align 4
  br label %if.entry39

ifend3.i495:                                      ; preds = %Lexer_peek.exit62.i493, %Lexer_peek.exit55.i
  %768 = phi i64 [ %735, %Lexer_peek.exit55.i ], [ %.pre1224.pre, %Lexer_peek.exit62.i493 ]
  %769 = phi ptr [ %736, %Lexer_peek.exit55.i ], [ %.pre1223.pre, %Lexer_peek.exit62.i493 ]
  %770 = phi i64 [ %737, %Lexer_peek.exit55.i ], [ %.pre1222.pre, %Lexer_peek.exit62.i493 ]
  %.not1104 = icmp slt i64 %770, %768
  br i1 %.not1104, label %end.i105.i, label %end.i105.i.thread

end.i105.i.thread:                                ; preds = %ifend3.i495
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit113.i

end.i105.i:                                       ; preds = %ifend3.i495
  %771 = load ptr, ptr %769, align 8
  %memberidx2.i101.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %771, i64 0, i32 2
  %772 = load ptr, ptr %memberidx2.i101.i, align 8
  %773 = add nsw i64 %770, 1
  store i64 %773, ptr %memberidx.i.i458, align 4
  %774 = tail call i8 %772(ptr nonnull %769, i64 %773)
  store i8 %774, ptr %0, align 1
  switch i8 %774, label %if.entry10.i112.i [
    i8 10, label %if.entry.i108.i
    i8 0, label %Lexer_advance.exit113.i
  ]

if.entry.i108.i:                                  ; preds = %end.i105.i
  store i64 0, ptr %memberidx6.i106.i, align 4
  %775 = load i64, ptr %memberidx7.i107.i, align 4
  %776 = add nsw i64 %775, 1
  store i64 %776, ptr %memberidx7.i107.i, align 4
  br label %Lexer_advance.exit113.i

if.entry10.i112.i:                                ; preds = %end.i105.i
  %777 = load i64, ptr %memberidx6.i106.i, align 4
  %778 = add nsw i64 %777, 1
  store i64 %778, ptr %memberidx6.i106.i, align 4
  br label %Lexer_advance.exit113.i

Lexer_advance.exit113.i:                          ; preds = %end.i105.i.thread, %end.i105.i, %if.entry10.i112.i, %if.entry.i108.i
  %779 = load i64, ptr %memberidx.i.i458, align 4
  %780 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i116.i = getelementptr inbounds %string, ptr %780, i64 0, i32 2
  %781 = load i64, ptr %memberidx2.i116.i, align 4
  %.not1105 = icmp slt i64 %779, %781
  br i1 %.not1105, label %while.entry.i486, label %while.end.i494

if.entry4.i496:                                   ; preds = %Lexer_peek.exit48.i
  %.not1099 = icmp slt i64 %724, %726
  br i1 %.not1099, label %end.i142.i, label %end.i142.i.thread

end.i142.i.thread:                                ; preds = %if.entry4.i496
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit150.i

end.i142.i:                                       ; preds = %if.entry4.i496
  %782 = load ptr, ptr %725, align 8
  %memberidx2.i138.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %782, i64 0, i32 2
  %783 = load ptr, ptr %memberidx2.i138.i, align 8
  %784 = add nsw i64 %724, 1
  store i64 %784, ptr %memberidx.i.i458, align 4
  %785 = tail call i8 %783(ptr nonnull %725, i64 %784)
  store i8 %785, ptr %0, align 1
  switch i8 %785, label %if.entry10.i149.i [
    i8 10, label %if.entry.i145.i
    i8 0, label %Lexer_advance.exit150.i
  ]

if.entry.i145.i:                                  ; preds = %end.i142.i
  %memberidx6.i143.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i143.i, align 4
  %memberidx7.i144.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %786 = load i64, ptr %memberidx7.i144.i, align 4
  %787 = add nsw i64 %786, 1
  store i64 %787, ptr %memberidx7.i144.i, align 4
  br label %Lexer_advance.exit150.i

if.entry10.i149.i:                                ; preds = %end.i142.i
  %memberidx13.i148.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %788 = load i64, ptr %memberidx13.i148.i, align 4
  %789 = add nsw i64 %788, 1
  store i64 %789, ptr %memberidx13.i148.i, align 4
  br label %Lexer_advance.exit150.i

Lexer_advance.exit150.i:                          ; preds = %end.i142.i.thread, %end.i142.i, %if.entry10.i149.i, %if.entry.i145.i
  %790 = load i64, ptr %memberidx.i.i458, align 4
  %791 = add nsw i64 %790, 1
  %792 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i153.i = getelementptr inbounds %string, ptr %792, i64 0, i32 2
  %793 = load i64, ptr %memberidx2.i153.i, align 4
  %794 = icmp slt i64 %791, %793
  br i1 %794, label %if.entry.i156.i, label %Lexer_peek.exit157.i

if.entry.i156.i:                                  ; preds = %Lexer_advance.exit150.i
  %795 = load ptr, ptr %792, align 8
  %memberidx4.i155.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %795, i64 0, i32 2
  %796 = load ptr, ptr %memberidx4.i155.i, align 8
  %797 = tail call i8 %796(ptr nonnull %792, i64 %791)
  %phi.cmp1100 = icmp eq i8 %797, 10
  %.pre1210 = load i64, ptr %memberidx.i.i458, align 4
  %.pre1211 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i160.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1211, i64 0, i32 2
  %.pre1212 = load i64, ptr %memberidx2.i160.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit157.i

Lexer_peek.exit157.i:                             ; preds = %if.entry.i156.i, %Lexer_advance.exit150.i
  %798 = phi i64 [ %.pre1212, %if.entry.i156.i ], [ %793, %Lexer_advance.exit150.i ]
  %799 = phi ptr [ %.pre1211, %if.entry.i156.i ], [ %792, %Lexer_advance.exit150.i ]
  %800 = phi i64 [ %.pre1210, %if.entry.i156.i ], [ %790, %Lexer_advance.exit150.i ]
  %common.ret.op.i154.i = phi i1 [ %phi.cmp1100, %if.entry.i156.i ], [ false, %Lexer_advance.exit150.i ]
  %801 = icmp sge i64 %800, %798
  %802 = or i1 %common.ret.op.i154.i, %801
  br i1 %802, label %if.entry39, label %while.entry7.i.preheader

while.entry7.i.preheader:                         ; preds = %Lexer_peek.exit157.i
  %memberidx6.i126.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx7.i127.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry7.i

while.entry7.i:                                   ; preds = %while.entry7.i.preheader, %Lexer_peek.exit41.i
  %803 = phi i64 [ %798, %while.entry7.i.preheader ], [ %822, %Lexer_peek.exit41.i ]
  %804 = phi ptr [ %799, %while.entry7.i.preheader ], [ %823, %Lexer_peek.exit41.i ]
  %805 = phi i64 [ %800, %while.entry7.i.preheader ], [ %824, %Lexer_peek.exit41.i ]
  %.not1101 = icmp slt i64 %805, %803
  br i1 %.not1101, label %end.i125.i, label %end.i125.i.thread

end.i125.i.thread:                                ; preds = %while.entry7.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit133.i

end.i125.i:                                       ; preds = %while.entry7.i
  %806 = load ptr, ptr %804, align 8
  %memberidx2.i121.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %806, i64 0, i32 2
  %807 = load ptr, ptr %memberidx2.i121.i, align 8
  %808 = add nsw i64 %805, 1
  store i64 %808, ptr %memberidx.i.i458, align 4
  %809 = tail call i8 %807(ptr nonnull %804, i64 %808)
  store i8 %809, ptr %0, align 1
  switch i8 %809, label %if.entry10.i132.i [
    i8 10, label %if.entry.i128.i
    i8 0, label %Lexer_advance.exit133.i
  ]

if.entry.i128.i:                                  ; preds = %end.i125.i
  store i64 0, ptr %memberidx6.i126.i, align 4
  %810 = load i64, ptr %memberidx7.i127.i, align 4
  %811 = add nsw i64 %810, 1
  store i64 %811, ptr %memberidx7.i127.i, align 4
  br label %Lexer_advance.exit133.i

if.entry10.i132.i:                                ; preds = %end.i125.i
  %812 = load i64, ptr %memberidx6.i126.i, align 4
  %813 = add nsw i64 %812, 1
  store i64 %813, ptr %memberidx6.i126.i, align 4
  br label %Lexer_advance.exit133.i

Lexer_advance.exit133.i:                          ; preds = %end.i125.i.thread, %end.i125.i, %if.entry10.i132.i, %if.entry.i128.i
  %814 = load i64, ptr %memberidx.i.i458, align 4
  %815 = add nsw i64 %814, 1
  %816 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i37.i498 = getelementptr inbounds %string, ptr %816, i64 0, i32 2
  %817 = load i64, ptr %memberidx2.i37.i498, align 4
  %818 = icmp slt i64 %815, %817
  br i1 %818, label %if.entry.i40.i, label %Lexer_peek.exit41.i

if.entry.i40.i:                                   ; preds = %Lexer_advance.exit133.i
  %819 = load ptr, ptr %816, align 8
  %memberidx4.i39.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %819, i64 0, i32 2
  %820 = load ptr, ptr %memberidx4.i39.i, align 8
  %821 = tail call i8 %820(ptr nonnull %816, i64 %815)
  %.pre1213 = load i64, ptr %memberidx.i.i458, align 4
  %.pre1214 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i34.i501.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1214, i64 0, i32 2
  %.pre1215 = load i64, ptr %memberidx2.i34.i501.phi.trans.insert, align 4
  br label %Lexer_peek.exit41.i

Lexer_peek.exit41.i:                              ; preds = %if.entry.i40.i, %Lexer_advance.exit133.i
  %822 = phi i64 [ %.pre1215, %if.entry.i40.i ], [ %817, %Lexer_advance.exit133.i ]
  %823 = phi ptr [ %.pre1214, %if.entry.i40.i ], [ %816, %Lexer_advance.exit133.i ]
  %824 = phi i64 [ %.pre1213, %if.entry.i40.i ], [ %814, %Lexer_advance.exit133.i ]
  %common.ret.op.i38.i = phi i8 [ %821, %if.entry.i40.i ], [ 0, %Lexer_advance.exit133.i ]
  %825 = icmp eq i8 %common.ret.op.i38.i, 10
  %826 = icmp sge i64 %824, %822
  %827 = or i1 %825, %826
  br i1 %827, label %if.entry39, label %while.entry7.i

if.entry39:                                       ; preds = %Lexer_peek.exit41.i, %end.i88.i.thread, %Lexer_peek.exit157.i, %end.i88.i, %if.entry10.i95.i, %if.entry.i91.i
  %828 = load i64, ptr %memberidx.i.i458, align 4
  %829 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i504 = getelementptr inbounds %string, ptr %829, i64 0, i32 2
  %830 = load i64, ptr %memberidx2.i.i504, align 4
  %.not1098 = icmp slt i64 %828, %830
  br i1 %.not1098, label %end.i510, label %end.i510.thread

end.i510.thread:                                  ; preds = %if.entry39
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit519

end.i510:                                         ; preds = %if.entry39
  %831 = load ptr, ptr %829, align 8
  %memberidx2.i506 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %831, i64 0, i32 2
  %832 = load ptr, ptr %memberidx2.i506, align 8
  %833 = add nsw i64 %828, 1
  store i64 %833, ptr %memberidx.i.i458, align 4
  %834 = tail call i8 %832(ptr nonnull %829, i64 %833)
  store i8 %834, ptr %0, align 1
  switch i8 %834, label %if.entry10.i518 [
    i8 10, label %if.entry.i513
    i8 0, label %Lexer_advance.exit519
  ]

if.entry.i513:                                    ; preds = %end.i510
  %memberidx6.i511 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i511, align 4
  %memberidx7.i512 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %835 = load i64, ptr %memberidx7.i512, align 4
  %836 = add nsw i64 %835, 1
  store i64 %836, ptr %memberidx7.i512, align 4
  br label %Lexer_advance.exit519

if.entry10.i518:                                  ; preds = %end.i510
  %memberidx13.i517 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %837 = load i64, ptr %memberidx13.i517, align 4
  %838 = add nsw i64 %837, 1
  store i64 %838, ptr %memberidx13.i517, align 4
  br label %Lexer_advance.exit519

Lexer_advance.exit519:                            ; preds = %end.i510.thread, %end.i510, %if.entry.i513, %if.entry10.i518
  %839 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend41:                                          ; preds = %Lexer_peek.exit48.i.ifend41_crit_edge, %else.i483
  %.pre-phi1284 = phi i64 [ %.pre1283, %Lexer_peek.exit48.i.ifend41_crit_edge ], [ %.pre-phi1282, %else.i483 ]
  %840 = phi i64 [ %726, %Lexer_peek.exit48.i.ifend41_crit_edge ], [ %717, %else.i483 ]
  %841 = phi ptr [ %725, %Lexer_peek.exit48.i.ifend41_crit_edge ], [ %718, %else.i483 ]
  %842 = icmp slt i64 %.pre-phi1284, %840
  br i1 %842, label %if.entry.i.i527, label %ifend.i563

if.entry.i.i527:                                  ; preds = %ifend41
  %843 = load ptr, ptr %841, align 8
  %memberidx4.i.i526 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %843, i64 0, i32 2
  %844 = load ptr, ptr %memberidx4.i.i526, align 8
  %845 = tail call i8 %844(ptr nonnull %841, i64 %.pre-phi1284)
  %phi.cmp1096 = icmp eq i8 %845, 61
  br i1 %phi.cmp1096, label %if.entry.i534, label %ifend.i563

if.entry.i534:                                    ; preds = %if.entry.i.i527
  %846 = load i64, ptr %memberidx.i.i458, align 4
  %847 = load ptr, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i.i533 = getelementptr inbounds %string, ptr %847, i64 0, i32 2
  %848 = load i64, ptr %memberidx2.i.i.i533, align 4
  %.not1097 = icmp slt i64 %846, %848
  br i1 %.not1097, label %end.i.i540, label %end.i.i540.thread

end.i.i540.thread:                                ; preds = %if.entry.i534
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i555

end.i.i540:                                       ; preds = %if.entry.i534
  %849 = load ptr, ptr %847, align 8
  %memberidx2.i5.i536 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %849, i64 0, i32 2
  %850 = load ptr, ptr %memberidx2.i5.i536, align 8
  %851 = add nsw i64 %846, 1
  store i64 %851, ptr %memberidx.i.i458, align 4
  %852 = tail call i8 %850(ptr nonnull %847, i64 %851)
  store i8 %852, ptr %0, align 1
  switch i8 %852, label %if.entry10.i.i547 [
    i8 10, label %if.entry.i6.i543
    i8 0, label %Lexer_advance.exit.i555
  ]

if.entry.i6.i543:                                 ; preds = %end.i.i540
  %memberidx6.i.i541 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i541, align 4
  %memberidx7.i.i542 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %853 = load i64, ptr %memberidx7.i.i542, align 4
  %854 = add nsw i64 %853, 1
  store i64 %854, ptr %memberidx7.i.i542, align 4
  br label %Lexer_advance.exit.i555

if.entry10.i.i547:                                ; preds = %end.i.i540
  %memberidx13.i.i546 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %855 = load i64, ptr %memberidx13.i.i546, align 4
  %856 = add nsw i64 %855, 1
  store i64 %856, ptr %memberidx13.i.i546, align 4
  br label %Lexer_advance.exit.i555

Lexer_advance.exit.i555:                          ; preds = %end.i.i540.thread, %end.i.i540, %if.entry10.i.i547, %if.entry.i6.i543
  %857 = tail call ptr @malloc(i32 16)
  %858 = tail call ptr @malloc(i32 32)
  %859 = load i64, ptr %memberidx.i.i458, align 4
  %860 = add nsw i64 %859, -1
  %861 = add nsw i64 %859, 1
  %memberidx2.i8.i549 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %862 = load i64, ptr %memberidx2.i8.i549, align 4
  %863 = add i64 %862, -2
  %memberidx3.i9.i550 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %864 = load i64, ptr %memberidx3.i9.i550, align 4
  store i64 %860, ptr %858, align 4
  %memberidx1.i.i10.i551 = getelementptr inbounds %FloRange, ptr %858, i64 0, i32 1
  store i64 %861, ptr %memberidx1.i.i10.i551, align 4
  %memberidx2.i.i11.i552 = getelementptr inbounds %FloRange, ptr %858, i64 0, i32 2
  store i64 %863, ptr %memberidx2.i.i11.i552, align 4
  %memberidx3.i.i.i553 = getelementptr inbounds %FloRange, ptr %858, i64 0, i32 3
  store i64 %864, ptr %memberidx3.i.i.i553, align 4
  store i64 15, ptr %857, align 4
  %memberidx1.i12.i554 = getelementptr inbounds %Token, ptr %857, i64 0, i32 1
  store ptr %858, ptr %memberidx1.i12.i554, align 8
  br label %common.ret

ifend.i563:                                       ; preds = %ifend41, %if.entry.i.i527
  %865 = tail call ptr @malloc(i32 16)
  %866 = tail call ptr @malloc(i32 32)
  %867 = load i64, ptr %memberidx.i.i458, align 4
  %868 = add nsw i64 %867, 1
  %memberidx2.i15.i557 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %869 = load i64, ptr %memberidx2.i15.i557, align 4
  %870 = add i64 %869, -1
  %memberidx3.i16.i558 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %871 = load i64, ptr %memberidx3.i16.i558, align 4
  store i64 %867, ptr %866, align 4
  %memberidx1.i.i17.i559 = getelementptr inbounds %FloRange, ptr %866, i64 0, i32 1
  store i64 %868, ptr %memberidx1.i.i17.i559, align 4
  %memberidx2.i.i18.i560 = getelementptr inbounds %FloRange, ptr %866, i64 0, i32 2
  store i64 %870, ptr %memberidx2.i.i18.i560, align 4
  %memberidx3.i.i19.i561 = getelementptr inbounds %FloRange, ptr %866, i64 0, i32 3
  store i64 %871, ptr %memberidx3.i.i19.i561, align 4
  store i64 7, ptr %865, align 4
  %memberidx1.i13.i562 = getelementptr inbounds %Token, ptr %865, i64 0, i32 1
  store ptr %866, ptr %memberidx1.i13.i562, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %872 = tail call ptr @malloc(i32 16)
  %873 = tail call ptr @malloc(i32 32)
  %memberidx.i564 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %874 = load i64, ptr %memberidx.i564, align 4
  %875 = add nsw i64 %874, 1
  %memberidx2.i565 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %876 = load i64, ptr %memberidx2.i565, align 4
  %877 = add i64 %876, -1
  %memberidx3.i566 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %878 = load i64, ptr %memberidx3.i566, align 4
  store i64 %874, ptr %873, align 4
  %memberidx1.i.i567 = getelementptr inbounds %FloRange, ptr %873, i64 0, i32 1
  store i64 %875, ptr %memberidx1.i.i567, align 4
  %memberidx2.i.i568 = getelementptr inbounds %FloRange, ptr %873, i64 0, i32 2
  store i64 %877, ptr %memberidx2.i.i568, align 4
  %memberidx3.i.i569 = getelementptr inbounds %FloRange, ptr %873, i64 0, i32 3
  store i64 %878, ptr %memberidx3.i.i569, align 4
  store i64 25, ptr %872, align 4
  %memberidx1.i570 = getelementptr inbounds %Token, ptr %872, i64 0, i32 1
  store ptr %873, ptr %memberidx1.i570, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend11
  %879 = tail call ptr @malloc(i32 16)
  %880 = tail call ptr @malloc(i32 32)
  %memberidx.i571 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %881 = load i64, ptr %memberidx.i571, align 4
  %882 = add nsw i64 %881, 1
  %memberidx2.i572 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %883 = load i64, ptr %memberidx2.i572, align 4
  %884 = add i64 %883, -1
  %memberidx3.i573 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %885 = load i64, ptr %memberidx3.i573, align 4
  store i64 %881, ptr %880, align 4
  %memberidx1.i.i574 = getelementptr inbounds %FloRange, ptr %880, i64 0, i32 1
  store i64 %882, ptr %memberidx1.i.i574, align 4
  %memberidx2.i.i575 = getelementptr inbounds %FloRange, ptr %880, i64 0, i32 2
  store i64 %884, ptr %memberidx2.i.i575, align 4
  %memberidx3.i.i576 = getelementptr inbounds %FloRange, ptr %880, i64 0, i32 3
  store i64 %885, ptr %memberidx3.i.i576, align 4
  store i64 26, ptr %879, align 4
  %memberidx1.i577 = getelementptr inbounds %Token, ptr %879, i64 0, i32 1
  store ptr %880, ptr %memberidx1.i577, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend11
  %886 = tail call ptr @malloc(i32 16)
  %887 = tail call ptr @malloc(i32 32)
  %memberidx.i578 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %888 = load i64, ptr %memberidx.i578, align 4
  %889 = add nsw i64 %888, 1
  %memberidx2.i579 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %890 = load i64, ptr %memberidx2.i579, align 4
  %891 = add i64 %890, -1
  %memberidx3.i580 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %892 = load i64, ptr %memberidx3.i580, align 4
  store i64 %888, ptr %887, align 4
  %memberidx1.i.i581 = getelementptr inbounds %FloRange, ptr %887, i64 0, i32 1
  store i64 %889, ptr %memberidx1.i.i581, align 4
  %memberidx2.i.i582 = getelementptr inbounds %FloRange, ptr %887, i64 0, i32 2
  store i64 %891, ptr %memberidx2.i.i582, align 4
  %memberidx3.i.i583 = getelementptr inbounds %FloRange, ptr %887, i64 0, i32 3
  store i64 %892, ptr %memberidx3.i.i583, align 4
  store i64 27, ptr %886, align 4
  %memberidx1.i584 = getelementptr inbounds %Token, ptr %886, i64 0, i32 1
  store ptr %887, ptr %memberidx1.i584, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend11
  %893 = tail call ptr @malloc(i32 16)
  %894 = tail call ptr @malloc(i32 32)
  %memberidx.i585 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %895 = load i64, ptr %memberidx.i585, align 4
  %896 = add nsw i64 %895, 1
  %memberidx2.i586 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %897 = load i64, ptr %memberidx2.i586, align 4
  %898 = add i64 %897, -1
  %memberidx3.i587 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %899 = load i64, ptr %memberidx3.i587, align 4
  store i64 %895, ptr %894, align 4
  %memberidx1.i.i588 = getelementptr inbounds %FloRange, ptr %894, i64 0, i32 1
  store i64 %896, ptr %memberidx1.i.i588, align 4
  %memberidx2.i.i589 = getelementptr inbounds %FloRange, ptr %894, i64 0, i32 2
  store i64 %898, ptr %memberidx2.i.i589, align 4
  %memberidx3.i.i590 = getelementptr inbounds %FloRange, ptr %894, i64 0, i32 3
  store i64 %899, ptr %memberidx3.i.i590, align 4
  store i64 28, ptr %893, align 4
  %memberidx1.i591 = getelementptr inbounds %Token, ptr %893, i64 0, i32 1
  store ptr %894, ptr %memberidx1.i591, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend11
  %900 = tail call ptr @malloc(i32 16)
  %901 = tail call ptr @malloc(i32 32)
  %memberidx.i592 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %902 = load i64, ptr %memberidx.i592, align 4
  %903 = add nsw i64 %902, 1
  %memberidx2.i593 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %904 = load i64, ptr %memberidx2.i593, align 4
  %905 = add i64 %904, -1
  %memberidx3.i594 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %906 = load i64, ptr %memberidx3.i594, align 4
  store i64 %902, ptr %901, align 4
  %memberidx1.i.i595 = getelementptr inbounds %FloRange, ptr %901, i64 0, i32 1
  store i64 %903, ptr %memberidx1.i.i595, align 4
  %memberidx2.i.i596 = getelementptr inbounds %FloRange, ptr %901, i64 0, i32 2
  store i64 %905, ptr %memberidx2.i.i596, align 4
  %memberidx3.i.i597 = getelementptr inbounds %FloRange, ptr %901, i64 0, i32 3
  store i64 %906, ptr %memberidx3.i.i597, align 4
  store i64 29, ptr %900, align 4
  %memberidx1.i598 = getelementptr inbounds %Token, ptr %900, i64 0, i32 1
  store ptr %901, ptr %memberidx1.i598, align 8
  br label %common.ret

if.entry57:                                       ; preds = %ifend11
  %907 = tail call ptr @malloc(i32 16)
  %908 = tail call ptr @malloc(i32 32)
  %memberidx.i599 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %909 = load i64, ptr %memberidx.i599, align 4
  %910 = add nsw i64 %909, 1
  %memberidx2.i600 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %911 = load i64, ptr %memberidx2.i600, align 4
  %912 = add i64 %911, -1
  %memberidx3.i601 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %913 = load i64, ptr %memberidx3.i601, align 4
  store i64 %909, ptr %908, align 4
  %memberidx1.i.i602 = getelementptr inbounds %FloRange, ptr %908, i64 0, i32 1
  store i64 %910, ptr %memberidx1.i.i602, align 4
  %memberidx2.i.i603 = getelementptr inbounds %FloRange, ptr %908, i64 0, i32 2
  store i64 %912, ptr %memberidx2.i.i603, align 4
  %memberidx3.i.i604 = getelementptr inbounds %FloRange, ptr %908, i64 0, i32 3
  store i64 %913, ptr %memberidx3.i.i604, align 4
  store i64 30, ptr %907, align 4
  %memberidx1.i605 = getelementptr inbounds %Token, ptr %907, i64 0, i32 1
  store ptr %908, ptr %memberidx1.i605, align 8
  br label %common.ret

if.entry60:                                       ; preds = %ifend11, %ifend11
  %914 = tail call ptr @malloc(i32 16)
  %915 = tail call ptr @malloc(i32 32)
  %memberidx.i606 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %916 = load i64, ptr %memberidx.i606, align 4
  %917 = add nsw i64 %916, 1
  %memberidx2.i607 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %918 = load i64, ptr %memberidx2.i607, align 4
  %919 = add i64 %918, -1
  %memberidx3.i608 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %920 = load i64, ptr %memberidx3.i608, align 4
  store i64 %916, ptr %915, align 4
  %memberidx1.i.i609 = getelementptr inbounds %FloRange, ptr %915, i64 0, i32 1
  store i64 %917, ptr %memberidx1.i.i609, align 4
  %memberidx2.i.i610 = getelementptr inbounds %FloRange, ptr %915, i64 0, i32 2
  store i64 %919, ptr %memberidx2.i.i610, align 4
  %memberidx3.i.i611 = getelementptr inbounds %FloRange, ptr %915, i64 0, i32 3
  store i64 %920, ptr %memberidx3.i.i611, align 4
  store i64 33, ptr %914, align 4
  %memberidx1.i612 = getelementptr inbounds %Token, ptr %914, i64 0, i32 1
  store ptr %915, ptr %memberidx1.i612, align 8
  br label %common.ret

if.entry63:                                       ; preds = %ifend11
  %memberidx.i.i.i613 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %921 = load i64, ptr %memberidx.i.i.i613, align 4
  %memberidx1.i.i.i614 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %922 = load ptr, ptr %memberidx1.i.i.i614, align 8
  %memberidx2.i.i.i615 = getelementptr inbounds %string, ptr %922, i64 0, i32 2
  %923 = load i64, ptr %memberidx2.i.i.i615, align 4
  %.not1093 = icmp slt i64 %921, %923
  br i1 %.not1093, label %end.i.i621, label %end.i.i621.thread

end.i.i621.thread:                                ; preds = %if.entry63
  store i8 0, ptr %0, align 1
  br label %ifend.i649

end.i.i621:                                       ; preds = %if.entry63
  %924 = load ptr, ptr %922, align 8
  %memberidx2.i.i617 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %924, i64 0, i32 2
  %925 = load ptr, ptr %memberidx2.i.i617, align 8
  %926 = add nsw i64 %921, 1
  store i64 %926, ptr %memberidx.i.i.i613, align 4
  %927 = tail call i8 %925(ptr nonnull %922, i64 %926)
  store i8 %927, ptr %0, align 1
  switch i8 %927, label %Lexer_advance.exit.i629 [
    i8 10, label %if.entry.i.i624
    i8 0, label %ifend.i649
  ]

if.entry.i.i624:                                  ; preds = %end.i.i621
  %memberidx6.i.i622 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i622, align 4
  %memberidx7.i.i623 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %928 = load i64, ptr %memberidx7.i.i623, align 4
  %929 = add nsw i64 %928, 1
  store i64 %929, ptr %memberidx7.i.i623, align 4
  br label %ifend.i649

Lexer_advance.exit.i629:                          ; preds = %end.i.i621
  %memberidx13.i.i627 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %930 = load i64, ptr %memberidx13.i.i627, align 4
  %931 = add nsw i64 %930, 1
  store i64 %931, ptr %memberidx13.i.i627, align 4
  %932 = icmp eq i8 %927, 92
  br i1 %932, label %if.entry.i630, label %ifend.i649

if.entry.i630:                                    ; preds = %Lexer_advance.exit.i629
  %933 = load i64, ptr %memberidx.i.i.i613, align 4
  %934 = load ptr, ptr %memberidx1.i.i.i614, align 8
  %memberidx2.i.i12.i = getelementptr inbounds %string, ptr %934, i64 0, i32 2
  %935 = load i64, ptr %memberidx2.i.i12.i, align 4
  %.not1095 = icmp slt i64 %933, %935
  br i1 %.not1095, label %end.i18.i, label %end.i18.i.thread

end.i18.i.thread:                                 ; preds = %if.entry.i630
  store i8 0, ptr %0, align 1
  br label %ifend27.i.i643

end.i18.i:                                        ; preds = %if.entry.i630
  %936 = load ptr, ptr %934, align 8
  %memberidx2.i14.i632 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %936, i64 0, i32 2
  %937 = load ptr, ptr %memberidx2.i14.i632, align 8
  %938 = add nsw i64 %933, 1
  store i64 %938, ptr %memberidx.i.i.i613, align 4
  %939 = tail call i8 %937(ptr nonnull %934, i64 %938)
  store i8 %939, ptr %0, align 1
  switch i8 %939, label %Lexer_advance.exit26.i [
    i8 10, label %if.entry.i21.i
    i8 0, label %ifend27.i.i643
  ]

if.entry.i21.i:                                   ; preds = %end.i18.i
  store i64 0, ptr %memberidx13.i.i627, align 4
  %memberidx7.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %940 = load i64, ptr %memberidx7.i20.i, align 4
  %941 = add nsw i64 %940, 1
  store i64 %941, ptr %memberidx7.i20.i, align 4
  br label %ifend27.i.i643

Lexer_advance.exit26.i:                           ; preds = %end.i18.i
  %942 = load i64, ptr %memberidx13.i.i627, align 4
  %943 = add nsw i64 %942, 1
  store i64 %943, ptr %memberidx13.i.i627, align 4
  switch i8 %939, label %ifend27.i.i643 [
    i8 97, label %ifend.i649
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split1141
    i8 102, label %get_escape_char.exit.i.fold.split1142
    i8 110, label %get_escape_char.exit.i.fold.split1143
    i8 114, label %get_escape_char.exit.i.fold.split1144
    i8 118, label %get_escape_char.exit.i.fold.split1145
    i8 48, label %get_escape_char.exit.i.fold.split1146
    i8 39, label %get_escape_char.exit.i.fold.split1147
    i8 34, label %get_escape_char.exit.i.fold.split1148
  ]

ifend27.i.i643:                                   ; preds = %if.entry.i21.i, %end.i18.i, %end.i18.i.thread, %Lexer_advance.exit26.i
  %ternary.i17.i11861188 = phi i8 [ %939, %Lexer_advance.exit26.i ], [ 10, %if.entry.i21.i ], [ %939, %end.i18.i ], [ 0, %end.i18.i.thread ]
  br label %ifend.i649

get_escape_char.exit.i.fold.split:                ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1141:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1142:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1143:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1144:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1145:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1146:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1147:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

get_escape_char.exit.i.fold.split1148:            ; preds = %Lexer_advance.exit26.i
  br label %ifend.i649

ifend.i649:                                       ; preds = %if.entry.i.i624, %end.i.i621, %end.i.i621.thread, %ifend27.i.i643, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split1141, %get_escape_char.exit.i.fold.split1142, %get_escape_char.exit.i.fold.split1143, %get_escape_char.exit.i.fold.split1144, %get_escape_char.exit.i.fold.split1145, %get_escape_char.exit.i.fold.split1146, %get_escape_char.exit.i.fold.split1147, %get_escape_char.exit.i.fold.split1148, %Lexer_advance.exit26.i, %Lexer_advance.exit.i629
  %length.0.i645 = phi i64 [ 3, %Lexer_advance.exit.i629 ], [ 5, %Lexer_advance.exit26.i ], [ 5, %get_escape_char.exit.i.fold.split1148 ], [ 5, %get_escape_char.exit.i.fold.split1147 ], [ 5, %get_escape_char.exit.i.fold.split1146 ], [ 5, %get_escape_char.exit.i.fold.split1145 ], [ 5, %get_escape_char.exit.i.fold.split1144 ], [ 5, %get_escape_char.exit.i.fold.split1143 ], [ 5, %get_escape_char.exit.i.fold.split1142 ], [ 5, %get_escape_char.exit.i.fold.split1141 ], [ 5, %get_escape_char.exit.i.fold.split ], [ 5, %ifend27.i.i643 ], [ 3, %end.i.i621.thread ], [ 3, %end.i.i621 ], [ 3, %if.entry.i.i624 ]
  %value.0.i = phi i8 [ %927, %Lexer_advance.exit.i629 ], [ 7, %Lexer_advance.exit26.i ], [ %939, %get_escape_char.exit.i.fold.split1148 ], [ %939, %get_escape_char.exit.i.fold.split1147 ], [ 0, %get_escape_char.exit.i.fold.split1146 ], [ 11, %get_escape_char.exit.i.fold.split1145 ], [ 13, %get_escape_char.exit.i.fold.split1144 ], [ 10, %get_escape_char.exit.i.fold.split1143 ], [ 12, %get_escape_char.exit.i.fold.split1142 ], [ 9, %get_escape_char.exit.i.fold.split1141 ], [ 8, %get_escape_char.exit.i.fold.split ], [ %ternary.i17.i11861188, %ifend27.i.i643 ], [ 0, %end.i.i621.thread ], [ %927, %end.i.i621 ], [ 10, %if.entry.i.i624 ]
  %944 = load i64, ptr %memberidx.i.i.i613, align 4
  %945 = load ptr, ptr %memberidx1.i.i.i614, align 8
  %memberidx2.i.i35.i648 = getelementptr inbounds %string, ptr %945, i64 0, i32 2
  %946 = load i64, ptr %memberidx2.i.i35.i648, align 4
  %.not1094 = icmp slt i64 %944, %946
  br i1 %.not1094, label %end.i41.i655, label %end.i41.i655.thread

end.i41.i655.thread:                              ; preds = %ifend.i649
  store i8 0, ptr %0, align 1
  br label %Lexer_char_token.exit

end.i41.i655:                                     ; preds = %ifend.i649
  %947 = load ptr, ptr %945, align 8
  %memberidx2.i37.i651 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %947, i64 0, i32 2
  %948 = load ptr, ptr %memberidx2.i37.i651, align 8
  %949 = add nsw i64 %944, 1
  store i64 %949, ptr %memberidx.i.i.i613, align 4
  %950 = tail call i8 %948(ptr nonnull %945, i64 %949)
  store i8 %950, ptr %0, align 1
  switch i8 %950, label %if.entry10.i49.i [
    i8 10, label %if.entry.i44.i658
    i8 0, label %Lexer_char_token.exit
  ]

if.entry.i44.i658:                                ; preds = %end.i41.i655
  %memberidx6.i42.i656 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i42.i656, align 4
  %memberidx7.i43.i657 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %951 = load i64, ptr %memberidx7.i43.i657, align 4
  %952 = add nsw i64 %951, 1
  store i64 %952, ptr %memberidx7.i43.i657, align 4
  br label %Lexer_char_token.exit

if.entry10.i49.i:                                 ; preds = %end.i41.i655
  %memberidx13.i48.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %953 = load i64, ptr %memberidx13.i48.i, align 4
  %954 = add nsw i64 %953, 1
  store i64 %954, ptr %memberidx13.i48.i, align 4
  br label %Lexer_char_token.exit

Lexer_char_token.exit:                            ; preds = %end.i41.i655.thread, %end.i41.i655, %if.entry.i44.i658, %if.entry10.i49.i
  %955 = tail call ptr @malloc(i32 17)
  %956 = tail call ptr @malloc(i32 32)
  %957 = load i64, ptr %memberidx.i.i.i613, align 4
  %958 = sub nsw i64 1, %length.0.i645
  %959 = add i64 %958, %957
  %960 = add nsw i64 %957, 1
  %memberidx2.i29.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %961 = load i64, ptr %memberidx2.i29.i, align 4
  %962 = sub nuw i64 %961, %length.0.i645
  %memberidx3.i30.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %963 = load i64, ptr %memberidx3.i30.i, align 4
  store i64 %959, ptr %956, align 4
  %memberidx1.i.i31.i = getelementptr inbounds %FloRange, ptr %956, i64 0, i32 1
  store i64 %960, ptr %memberidx1.i.i31.i, align 4
  %memberidx2.i.i32.i = getelementptr inbounds %FloRange, ptr %956, i64 0, i32 2
  store i64 %962, ptr %memberidx2.i.i32.i, align 4
  %memberidx3.i.i.i661 = getelementptr inbounds %FloRange, ptr %956, i64 0, i32 3
  store i64 %963, ptr %memberidx3.i.i.i661, align 4
  store i64 35, ptr %955, align 4
  %memberidx1.i.i27.i = getelementptr inbounds %Token, ptr %955, i64 0, i32 1
  store ptr %956, ptr %memberidx1.i.i27.i, align 8
  %memberidx.i.i662 = getelementptr inbounds %CharToken, ptr %955, i64 0, i32 2
  store i8 %value.0.i, ptr %memberidx.i.i662, align 1
  br label %common.ret

if.entry66:                                       ; preds = %ifend11
  %964 = tail call ptr @malloc(i32 16)
  %965 = tail call ptr @malloc(i32 32)
  %memberidx.i663 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %966 = load i64, ptr %memberidx.i663, align 4
  %967 = add nsw i64 %966, 1
  %memberidx2.i664 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %968 = load i64, ptr %memberidx2.i664, align 4
  %969 = add i64 %968, -1
  %memberidx3.i665 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %970 = load i64, ptr %memberidx3.i665, align 4
  store i64 %966, ptr %965, align 4
  %memberidx1.i.i666 = getelementptr inbounds %FloRange, ptr %965, i64 0, i32 1
  store i64 %967, ptr %memberidx1.i.i666, align 4
  %memberidx2.i.i667 = getelementptr inbounds %FloRange, ptr %965, i64 0, i32 2
  store i64 %969, ptr %memberidx2.i.i667, align 4
  %memberidx3.i.i668 = getelementptr inbounds %FloRange, ptr %965, i64 0, i32 3
  store i64 %970, ptr %memberidx3.i.i668, align 4
  store i64 36, ptr %964, align 4
  %memberidx1.i669 = getelementptr inbounds %Token, ptr %964, i64 0, i32 1
  store ptr %965, ptr %memberidx1.i669, align 8
  br label %common.ret

if.entry69:                                       ; preds = %ifend11
  %971 = tail call ptr @malloc(i32 16)
  %972 = tail call ptr @malloc(i32 32)
  %memberidx.i670 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %973 = load i64, ptr %memberidx.i670, align 4
  %974 = add nsw i64 %973, 1
  %memberidx2.i671 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %975 = load i64, ptr %memberidx2.i671, align 4
  %976 = add i64 %975, -1
  %memberidx3.i672 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %977 = load i64, ptr %memberidx3.i672, align 4
  store i64 %973, ptr %972, align 4
  %memberidx1.i.i673 = getelementptr inbounds %FloRange, ptr %972, i64 0, i32 1
  store i64 %974, ptr %memberidx1.i.i673, align 4
  %memberidx2.i.i674 = getelementptr inbounds %FloRange, ptr %972, i64 0, i32 2
  store i64 %976, ptr %memberidx2.i.i674, align 4
  %memberidx3.i.i675 = getelementptr inbounds %FloRange, ptr %972, i64 0, i32 3
  store i64 %977, ptr %memberidx3.i.i675, align 4
  store i64 37, ptr %971, align 4
  %memberidx1.i676 = getelementptr inbounds %Token, ptr %971, i64 0, i32 1
  store ptr %972, ptr %memberidx1.i676, align 8
  br label %common.ret

if.entry72:                                       ; preds = %ifend11
  %memberidx.i.i677 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %978 = load i64, ptr %memberidx.i.i677, align 4
  %979 = add nsw i64 %978, 1
  %memberidx1.i.i678 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %980 = load ptr, ptr %memberidx1.i.i678, align 8
  %memberidx2.i.i679 = getelementptr inbounds %string, ptr %980, i64 0, i32 2
  %981 = load i64, ptr %memberidx2.i.i679, align 4
  %982 = icmp slt i64 %979, %981
  br i1 %982, label %if.entry.i.i681, label %ifend.i717

if.entry.i.i681:                                  ; preds = %if.entry72
  %983 = load ptr, ptr %980, align 8
  %memberidx4.i.i680 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %983, i64 0, i32 2
  %984 = load ptr, ptr %memberidx4.i.i680, align 8
  %985 = tail call i8 %984(ptr nonnull %980, i64 %979)
  %phi.cmp1091 = icmp eq i8 %985, 61
  br i1 %phi.cmp1091, label %if.entry.i688, label %ifend.i717

if.entry.i688:                                    ; preds = %if.entry.i.i681
  %986 = load i64, ptr %memberidx.i.i677, align 4
  %987 = load ptr, ptr %memberidx1.i.i678, align 8
  %memberidx2.i.i.i687 = getelementptr inbounds %string, ptr %987, i64 0, i32 2
  %988 = load i64, ptr %memberidx2.i.i.i687, align 4
  %.not1092 = icmp slt i64 %986, %988
  br i1 %.not1092, label %end.i.i694, label %end.i.i694.thread

end.i.i694.thread:                                ; preds = %if.entry.i688
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i709

end.i.i694:                                       ; preds = %if.entry.i688
  %989 = load ptr, ptr %987, align 8
  %memberidx2.i5.i690 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %989, i64 0, i32 2
  %990 = load ptr, ptr %memberidx2.i5.i690, align 8
  %991 = add nsw i64 %986, 1
  store i64 %991, ptr %memberidx.i.i677, align 4
  %992 = tail call i8 %990(ptr nonnull %987, i64 %991)
  store i8 %992, ptr %0, align 1
  switch i8 %992, label %if.entry10.i.i701 [
    i8 10, label %if.entry.i6.i697
    i8 0, label %Lexer_advance.exit.i709
  ]

if.entry.i6.i697:                                 ; preds = %end.i.i694
  %memberidx6.i.i695 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i695, align 4
  %memberidx7.i.i696 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %993 = load i64, ptr %memberidx7.i.i696, align 4
  %994 = add nsw i64 %993, 1
  store i64 %994, ptr %memberidx7.i.i696, align 4
  br label %Lexer_advance.exit.i709

if.entry10.i.i701:                                ; preds = %end.i.i694
  %memberidx13.i.i700 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %995 = load i64, ptr %memberidx13.i.i700, align 4
  %996 = add nsw i64 %995, 1
  store i64 %996, ptr %memberidx13.i.i700, align 4
  br label %Lexer_advance.exit.i709

Lexer_advance.exit.i709:                          ; preds = %end.i.i694.thread, %end.i.i694, %if.entry10.i.i701, %if.entry.i6.i697
  %997 = tail call ptr @malloc(i32 16)
  %998 = tail call ptr @malloc(i32 32)
  %999 = load i64, ptr %memberidx.i.i677, align 4
  %1000 = add nsw i64 %999, -1
  %1001 = add nsw i64 %999, 1
  %memberidx2.i8.i703 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1002 = load i64, ptr %memberidx2.i8.i703, align 4
  %1003 = add i64 %1002, -2
  %memberidx3.i9.i704 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1004 = load i64, ptr %memberidx3.i9.i704, align 4
  store i64 %1000, ptr %998, align 4
  %memberidx1.i.i10.i705 = getelementptr inbounds %FloRange, ptr %998, i64 0, i32 1
  store i64 %1001, ptr %memberidx1.i.i10.i705, align 4
  %memberidx2.i.i11.i706 = getelementptr inbounds %FloRange, ptr %998, i64 0, i32 2
  store i64 %1003, ptr %memberidx2.i.i11.i706, align 4
  %memberidx3.i.i.i707 = getelementptr inbounds %FloRange, ptr %998, i64 0, i32 3
  store i64 %1004, ptr %memberidx3.i.i.i707, align 4
  store i64 39, ptr %997, align 4
  %memberidx1.i12.i708 = getelementptr inbounds %Token, ptr %997, i64 0, i32 1
  store ptr %998, ptr %memberidx1.i12.i708, align 8
  br label %common.ret

ifend.i717:                                       ; preds = %if.entry72, %if.entry.i.i681
  %1005 = tail call ptr @malloc(i32 16)
  %1006 = tail call ptr @malloc(i32 32)
  %1007 = load i64, ptr %memberidx.i.i677, align 4
  %1008 = add nsw i64 %1007, 1
  %memberidx2.i15.i711 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1009 = load i64, ptr %memberidx2.i15.i711, align 4
  %1010 = add i64 %1009, -1
  %memberidx3.i16.i712 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1011 = load i64, ptr %memberidx3.i16.i712, align 4
  store i64 %1007, ptr %1006, align 4
  %memberidx1.i.i17.i713 = getelementptr inbounds %FloRange, ptr %1006, i64 0, i32 1
  store i64 %1008, ptr %memberidx1.i.i17.i713, align 4
  %memberidx2.i.i18.i714 = getelementptr inbounds %FloRange, ptr %1006, i64 0, i32 2
  store i64 %1010, ptr %memberidx2.i.i18.i714, align 4
  %memberidx3.i.i19.i715 = getelementptr inbounds %FloRange, ptr %1006, i64 0, i32 3
  store i64 %1011, ptr %memberidx3.i.i19.i715, align 4
  store i64 38, ptr %1005, align 4
  %memberidx1.i13.i716 = getelementptr inbounds %Token, ptr %1005, i64 0, i32 1
  store ptr %1006, ptr %memberidx1.i13.i716, align 8
  br label %common.ret

if.entry75:                                       ; preds = %ifend11
  %memberidx.i.i718 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1012 = load i64, ptr %memberidx.i.i718, align 4
  %1013 = add nsw i64 %1012, 1
  %memberidx1.i.i719 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1014 = load ptr, ptr %memberidx1.i.i719, align 8
  %memberidx2.i.i720 = getelementptr inbounds %string, ptr %1014, i64 0, i32 2
  %1015 = load i64, ptr %memberidx2.i.i720, align 4
  %1016 = icmp slt i64 %1013, %1015
  br i1 %1016, label %if.entry.i.i722, label %ifend.i758

if.entry.i.i722:                                  ; preds = %if.entry75
  %1017 = load ptr, ptr %1014, align 8
  %memberidx4.i.i721 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1017, i64 0, i32 2
  %1018 = load ptr, ptr %memberidx4.i.i721, align 8
  %1019 = tail call i8 %1018(ptr nonnull %1014, i64 %1013)
  %phi.cmp1089 = icmp eq i8 %1019, 61
  br i1 %phi.cmp1089, label %if.entry.i729, label %ifend.i758

if.entry.i729:                                    ; preds = %if.entry.i.i722
  %1020 = load i64, ptr %memberidx.i.i718, align 4
  %1021 = load ptr, ptr %memberidx1.i.i719, align 8
  %memberidx2.i.i.i728 = getelementptr inbounds %string, ptr %1021, i64 0, i32 2
  %1022 = load i64, ptr %memberidx2.i.i.i728, align 4
  %.not1090 = icmp slt i64 %1020, %1022
  br i1 %.not1090, label %end.i.i735, label %end.i.i735.thread

end.i.i735.thread:                                ; preds = %if.entry.i729
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i750

end.i.i735:                                       ; preds = %if.entry.i729
  %1023 = load ptr, ptr %1021, align 8
  %memberidx2.i5.i731 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1023, i64 0, i32 2
  %1024 = load ptr, ptr %memberidx2.i5.i731, align 8
  %1025 = add nsw i64 %1020, 1
  store i64 %1025, ptr %memberidx.i.i718, align 4
  %1026 = tail call i8 %1024(ptr nonnull %1021, i64 %1025)
  store i8 %1026, ptr %0, align 1
  switch i8 %1026, label %if.entry10.i.i742 [
    i8 10, label %if.entry.i6.i738
    i8 0, label %Lexer_advance.exit.i750
  ]

if.entry.i6.i738:                                 ; preds = %end.i.i735
  %memberidx6.i.i736 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i736, align 4
  %memberidx7.i.i737 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1027 = load i64, ptr %memberidx7.i.i737, align 4
  %1028 = add nsw i64 %1027, 1
  store i64 %1028, ptr %memberidx7.i.i737, align 4
  br label %Lexer_advance.exit.i750

if.entry10.i.i742:                                ; preds = %end.i.i735
  %memberidx13.i.i741 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1029 = load i64, ptr %memberidx13.i.i741, align 4
  %1030 = add nsw i64 %1029, 1
  store i64 %1030, ptr %memberidx13.i.i741, align 4
  br label %Lexer_advance.exit.i750

Lexer_advance.exit.i750:                          ; preds = %end.i.i735.thread, %end.i.i735, %if.entry10.i.i742, %if.entry.i6.i738
  %1031 = tail call ptr @malloc(i32 16)
  %1032 = tail call ptr @malloc(i32 32)
  %1033 = load i64, ptr %memberidx.i.i718, align 4
  %1034 = add nsw i64 %1033, -1
  %1035 = add nsw i64 %1033, 1
  %memberidx2.i8.i744 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1036 = load i64, ptr %memberidx2.i8.i744, align 4
  %1037 = add i64 %1036, -2
  %memberidx3.i9.i745 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1038 = load i64, ptr %memberidx3.i9.i745, align 4
  store i64 %1034, ptr %1032, align 4
  %memberidx1.i.i10.i746 = getelementptr inbounds %FloRange, ptr %1032, i64 0, i32 1
  store i64 %1035, ptr %memberidx1.i.i10.i746, align 4
  %memberidx2.i.i11.i747 = getelementptr inbounds %FloRange, ptr %1032, i64 0, i32 2
  store i64 %1037, ptr %memberidx2.i.i11.i747, align 4
  %memberidx3.i.i.i748 = getelementptr inbounds %FloRange, ptr %1032, i64 0, i32 3
  store i64 %1038, ptr %memberidx3.i.i.i748, align 4
  store i64 40, ptr %1031, align 4
  %memberidx1.i12.i749 = getelementptr inbounds %Token, ptr %1031, i64 0, i32 1
  store ptr %1032, ptr %memberidx1.i12.i749, align 8
  br label %common.ret

ifend.i758:                                       ; preds = %if.entry75, %if.entry.i.i722
  %1039 = tail call ptr @malloc(i32 16)
  %1040 = tail call ptr @malloc(i32 32)
  %1041 = load i64, ptr %memberidx.i.i718, align 4
  %1042 = add nsw i64 %1041, 1
  %memberidx2.i15.i752 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1043 = load i64, ptr %memberidx2.i15.i752, align 4
  %1044 = add i64 %1043, -1
  %memberidx3.i16.i753 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1045 = load i64, ptr %memberidx3.i16.i753, align 4
  store i64 %1041, ptr %1040, align 4
  %memberidx1.i.i17.i754 = getelementptr inbounds %FloRange, ptr %1040, i64 0, i32 1
  store i64 %1042, ptr %memberidx1.i.i17.i754, align 4
  %memberidx2.i.i18.i755 = getelementptr inbounds %FloRange, ptr %1040, i64 0, i32 2
  store i64 %1044, ptr %memberidx2.i.i18.i755, align 4
  %memberidx3.i.i19.i756 = getelementptr inbounds %FloRange, ptr %1040, i64 0, i32 3
  store i64 %1045, ptr %memberidx3.i.i19.i756, align 4
  store i64 47, ptr %1039, align 4
  %memberidx1.i13.i757 = getelementptr inbounds %Token, ptr %1039, i64 0, i32 1
  store ptr %1040, ptr %memberidx1.i13.i757, align 8
  br label %common.ret

if.entry78:                                       ; preds = %ifend11
  %memberidx.i.i759 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1046 = load i64, ptr %memberidx.i.i759, align 4
  %1047 = add nsw i64 %1046, 1
  %memberidx1.i.i760 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1048 = load ptr, ptr %memberidx1.i.i760, align 8
  %memberidx2.i.i761 = getelementptr inbounds %string, ptr %1048, i64 0, i32 2
  %1049 = load i64, ptr %memberidx2.i.i761, align 4
  %1050 = icmp slt i64 %1047, %1049
  br i1 %1050, label %if.entry.i.i763, label %else.i795

if.entry.i.i763:                                  ; preds = %if.entry78
  %1051 = load ptr, ptr %1048, align 8
  %memberidx4.i.i762 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1051, i64 0, i32 2
  %1052 = load ptr, ptr %memberidx4.i.i762, align 8
  %1053 = tail call i8 %1052(ptr nonnull %1048, i64 %1047)
  %phi.cmp1083 = icmp eq i8 %1053, 61
  %1054 = load i64, ptr %memberidx.i.i759, align 4
  %1055 = load ptr, ptr %memberidx1.i.i760, align 8
  %memberidx2.i.i.i769 = getelementptr inbounds %string, ptr %1055, i64 0, i32 2
  %1056 = load i64, ptr %memberidx2.i.i.i769, align 4
  br i1 %phi.cmp1083, label %if.entry.i770, label %if.entry.i.i763.else.i795_crit_edge

if.entry.i.i763.else.i795_crit_edge:              ; preds = %if.entry.i.i763
  %.pre1285 = add nsw i64 %1054, 1
  br label %else.i795

if.entry.i770:                                    ; preds = %if.entry.i.i763
  %.not1088 = icmp slt i64 %1054, %1056
  br i1 %.not1088, label %end.i.i776, label %end.i.i776.thread

end.i.i776.thread:                                ; preds = %if.entry.i770
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i791

end.i.i776:                                       ; preds = %if.entry.i770
  %1057 = load ptr, ptr %1055, align 8
  %memberidx2.i17.i772 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1057, i64 0, i32 2
  %1058 = load ptr, ptr %memberidx2.i17.i772, align 8
  %1059 = add nsw i64 %1054, 1
  store i64 %1059, ptr %memberidx.i.i759, align 4
  %1060 = tail call i8 %1058(ptr nonnull %1055, i64 %1059)
  store i8 %1060, ptr %0, align 1
  switch i8 %1060, label %if.entry10.i.i783 [
    i8 10, label %if.entry.i18.i779
    i8 0, label %Lexer_advance.exit.i791
  ]

if.entry.i18.i779:                                ; preds = %end.i.i776
  %memberidx6.i.i777 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i777, align 4
  %memberidx7.i.i778 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1061 = load i64, ptr %memberidx7.i.i778, align 4
  %1062 = add nsw i64 %1061, 1
  store i64 %1062, ptr %memberidx7.i.i778, align 4
  br label %Lexer_advance.exit.i791

if.entry10.i.i783:                                ; preds = %end.i.i776
  %memberidx13.i.i782 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1063 = load i64, ptr %memberidx13.i.i782, align 4
  %1064 = add nsw i64 %1063, 1
  store i64 %1064, ptr %memberidx13.i.i782, align 4
  br label %Lexer_advance.exit.i791

Lexer_advance.exit.i791:                          ; preds = %end.i.i776.thread, %end.i.i776, %if.entry10.i.i783, %if.entry.i18.i779
  %1065 = tail call ptr @malloc(i32 16)
  %1066 = tail call ptr @malloc(i32 32)
  %1067 = load i64, ptr %memberidx.i.i759, align 4
  %1068 = add nsw i64 %1067, -1
  %1069 = add nsw i64 %1067, 1
  %memberidx2.i20.i785 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1070 = load i64, ptr %memberidx2.i20.i785, align 4
  %1071 = add i64 %1070, -2
  %memberidx3.i21.i786 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1072 = load i64, ptr %memberidx3.i21.i786, align 4
  store i64 %1068, ptr %1066, align 4
  %memberidx1.i.i22.i787 = getelementptr inbounds %FloRange, ptr %1066, i64 0, i32 1
  store i64 %1069, ptr %memberidx1.i.i22.i787, align 4
  %memberidx2.i.i23.i788 = getelementptr inbounds %FloRange, ptr %1066, i64 0, i32 2
  store i64 %1071, ptr %memberidx2.i.i23.i788, align 4
  %memberidx3.i.i.i789 = getelementptr inbounds %FloRange, ptr %1066, i64 0, i32 3
  store i64 %1072, ptr %memberidx3.i.i.i789, align 4
  store i64 44, ptr %1065, align 4
  %memberidx1.i24.i790 = getelementptr inbounds %Token, ptr %1065, i64 0, i32 1
  store ptr %1066, ptr %memberidx1.i24.i790, align 8
  br label %common.ret

else.i795:                                        ; preds = %if.entry.i.i763.else.i795_crit_edge, %if.entry78
  %.pre-phi1286 = phi i64 [ %.pre1285, %if.entry.i.i763.else.i795_crit_edge ], [ %1047, %if.entry78 ]
  %1073 = phi i64 [ %1056, %if.entry.i.i763.else.i795_crit_edge ], [ %1049, %if.entry78 ]
  %1074 = phi ptr [ %1055, %if.entry.i.i763.else.i795_crit_edge ], [ %1048, %if.entry78 ]
  %1075 = icmp slt i64 %.pre-phi1286, %1073
  br i1 %1075, label %if.entry.i37.i797, label %ifend3.i832

if.entry.i37.i797:                                ; preds = %else.i795
  %1076 = load ptr, ptr %1074, align 8
  %memberidx4.i36.i796 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1076, i64 0, i32 2
  %1077 = load ptr, ptr %memberidx4.i36.i796, align 8
  %1078 = tail call i8 %1077(ptr nonnull %1074, i64 %.pre-phi1286)
  %phi.cmp1084 = icmp eq i8 %1078, 62
  br i1 %phi.cmp1084, label %if.entry1.i803, label %ifend3.i832

if.entry1.i803:                                   ; preds = %if.entry.i37.i797
  %1079 = load i64, ptr %memberidx.i.i759, align 4
  %1080 = load ptr, ptr %memberidx1.i.i760, align 8
  %memberidx2.i.i41.i802 = getelementptr inbounds %string, ptr %1080, i64 0, i32 2
  %1081 = load i64, ptr %memberidx2.i.i41.i802, align 4
  %.not1085 = icmp slt i64 %1079, %1081
  br i1 %.not1085, label %end.i47.i809, label %end.i47.i809.thread

end.i47.i809.thread:                              ; preds = %if.entry1.i803
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit55.i820

end.i47.i809:                                     ; preds = %if.entry1.i803
  %1082 = load ptr, ptr %1080, align 8
  %memberidx2.i43.i805 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1082, i64 0, i32 2
  %1083 = load ptr, ptr %memberidx2.i43.i805, align 8
  %1084 = add nsw i64 %1079, 1
  store i64 %1084, ptr %memberidx.i.i759, align 4
  %1085 = tail call i8 %1083(ptr nonnull %1080, i64 %1084)
  store i8 %1085, ptr %0, align 1
  switch i8 %1085, label %if.entry10.i54.i816 [
    i8 10, label %if.entry.i50.i812
    i8 0, label %Lexer_advance.exit55.i820
  ]

if.entry.i50.i812:                                ; preds = %end.i47.i809
  %memberidx6.i48.i810 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i48.i810, align 4
  %memberidx7.i49.i811 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1086 = load i64, ptr %memberidx7.i49.i811, align 4
  %1087 = add nsw i64 %1086, 1
  store i64 %1087, ptr %memberidx7.i49.i811, align 4
  br label %Lexer_advance.exit55.i820

if.entry10.i54.i816:                              ; preds = %end.i47.i809
  %memberidx13.i53.i815 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1088 = load i64, ptr %memberidx13.i53.i815, align 4
  %1089 = add nsw i64 %1088, 1
  store i64 %1089, ptr %memberidx13.i53.i815, align 4
  br label %Lexer_advance.exit55.i820

Lexer_advance.exit55.i820:                        ; preds = %end.i47.i809.thread, %end.i47.i809, %if.entry10.i54.i816, %if.entry.i50.i812
  %1090 = load i64, ptr %memberidx.i.i759, align 4
  %1091 = add nsw i64 %1090, 1
  %1092 = load ptr, ptr %memberidx1.i.i760, align 8
  %memberidx2.i58.i819 = getelementptr inbounds %string, ptr %1092, i64 0, i32 2
  %1093 = load i64, ptr %memberidx2.i58.i819, align 4
  %1094 = icmp slt i64 %1091, %1093
  br i1 %1094, label %if.entry.i61.i822, label %ifend6.i865

if.entry.i61.i822:                                ; preds = %Lexer_advance.exit55.i820
  %1095 = load ptr, ptr %1092, align 8
  %memberidx4.i60.i821 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1095, i64 0, i32 2
  %1096 = load ptr, ptr %memberidx4.i60.i821, align 8
  %1097 = tail call i8 %1096(ptr nonnull %1092, i64 %1091)
  %phi.cmp1086 = icmp eq i8 %1097, 61
  br i1 %phi.cmp1086, label %if.entry4.i836, label %ifend6.i865

ifend3.i832:                                      ; preds = %else.i795, %if.entry.i37.i797
  %1098 = tail call ptr @malloc(i32 16)
  %1099 = tail call ptr @malloc(i32 32)
  %1100 = load i64, ptr %memberidx.i.i759, align 4
  %1101 = add nsw i64 %1100, 1
  %memberidx2.i64.i826 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1102 = load i64, ptr %memberidx2.i64.i826, align 4
  %1103 = add i64 %1102, -1
  %memberidx3.i65.i827 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1104 = load i64, ptr %memberidx3.i65.i827, align 4
  store i64 %1100, ptr %1099, align 4
  %memberidx1.i.i66.i828 = getelementptr inbounds %FloRange, ptr %1099, i64 0, i32 1
  store i64 %1101, ptr %memberidx1.i.i66.i828, align 4
  %memberidx2.i.i67.i829 = getelementptr inbounds %FloRange, ptr %1099, i64 0, i32 2
  store i64 %1103, ptr %memberidx2.i.i67.i829, align 4
  %memberidx3.i.i68.i830 = getelementptr inbounds %FloRange, ptr %1099, i64 0, i32 3
  store i64 %1104, ptr %memberidx3.i.i68.i830, align 4
  store i64 41, ptr %1098, align 4
  %memberidx1.i69.i831 = getelementptr inbounds %Token, ptr %1098, i64 0, i32 1
  store ptr %1099, ptr %memberidx1.i69.i831, align 8
  br label %common.ret

if.entry4.i836:                                   ; preds = %if.entry.i61.i822
  %1105 = load i64, ptr %memberidx.i.i759, align 4
  %1106 = load ptr, ptr %memberidx1.i.i760, align 8
  %memberidx2.i.i79.i835 = getelementptr inbounds %string, ptr %1106, i64 0, i32 2
  %1107 = load i64, ptr %memberidx2.i.i79.i835, align 4
  %.not1087 = icmp slt i64 %1105, %1107
  br i1 %.not1087, label %end.i85.i842, label %end.i85.i842.thread

end.i85.i842.thread:                              ; preds = %if.entry4.i836
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit93.i857

end.i85.i842:                                     ; preds = %if.entry4.i836
  %1108 = load ptr, ptr %1106, align 8
  %memberidx2.i81.i838 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1108, i64 0, i32 2
  %1109 = load ptr, ptr %memberidx2.i81.i838, align 8
  %1110 = add nsw i64 %1105, 1
  store i64 %1110, ptr %memberidx.i.i759, align 4
  %1111 = tail call i8 %1109(ptr nonnull %1106, i64 %1110)
  store i8 %1111, ptr %0, align 1
  switch i8 %1111, label %if.entry10.i92.i849 [
    i8 10, label %if.entry.i88.i845
    i8 0, label %Lexer_advance.exit93.i857
  ]

if.entry.i88.i845:                                ; preds = %end.i85.i842
  %memberidx6.i86.i843 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i86.i843, align 4
  %memberidx7.i87.i844 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1112 = load i64, ptr %memberidx7.i87.i844, align 4
  %1113 = add nsw i64 %1112, 1
  store i64 %1113, ptr %memberidx7.i87.i844, align 4
  br label %Lexer_advance.exit93.i857

if.entry10.i92.i849:                              ; preds = %end.i85.i842
  %memberidx13.i91.i848 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1114 = load i64, ptr %memberidx13.i91.i848, align 4
  %1115 = add nsw i64 %1114, 1
  store i64 %1115, ptr %memberidx13.i91.i848, align 4
  br label %Lexer_advance.exit93.i857

Lexer_advance.exit93.i857:                        ; preds = %end.i85.i842.thread, %end.i85.i842, %if.entry10.i92.i849, %if.entry.i88.i845
  %1116 = tail call ptr @malloc(i32 16)
  %1117 = tail call ptr @malloc(i32 32)
  %1118 = load i64, ptr %memberidx.i.i759, align 4
  %1119 = add nsw i64 %1118, -2
  %1120 = add nsw i64 %1118, 1
  %memberidx2.i72.i851 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1121 = load i64, ptr %memberidx2.i72.i851, align 4
  %1122 = add i64 %1121, -3
  %memberidx3.i73.i852 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1123 = load i64, ptr %memberidx3.i73.i852, align 4
  store i64 %1119, ptr %1117, align 4
  %memberidx1.i.i74.i853 = getelementptr inbounds %FloRange, ptr %1117, i64 0, i32 1
  store i64 %1120, ptr %memberidx1.i.i74.i853, align 4
  %memberidx2.i.i75.i854 = getelementptr inbounds %FloRange, ptr %1117, i64 0, i32 2
  store i64 %1122, ptr %memberidx2.i.i75.i854, align 4
  %memberidx3.i.i76.i855 = getelementptr inbounds %FloRange, ptr %1117, i64 0, i32 3
  store i64 %1123, ptr %memberidx3.i.i76.i855, align 4
  store i64 21, ptr %1116, align 4
  %memberidx1.i70.i856 = getelementptr inbounds %Token, ptr %1116, i64 0, i32 1
  store ptr %1117, ptr %memberidx1.i70.i856, align 8
  br label %common.ret

ifend6.i865:                                      ; preds = %Lexer_advance.exit55.i820, %if.entry.i61.i822
  %1124 = tail call ptr @malloc(i32 16)
  %1125 = tail call ptr @malloc(i32 32)
  %1126 = load i64, ptr %memberidx.i.i759, align 4
  %1127 = add nsw i64 %1126, -1
  %1128 = add nsw i64 %1126, 1
  %memberidx2.i27.i859 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1129 = load i64, ptr %memberidx2.i27.i859, align 4
  %1130 = add i64 %1129, -2
  %memberidx3.i28.i860 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1131 = load i64, ptr %memberidx3.i28.i860, align 4
  store i64 %1127, ptr %1125, align 4
  %memberidx1.i.i29.i861 = getelementptr inbounds %FloRange, ptr %1125, i64 0, i32 1
  store i64 %1128, ptr %memberidx1.i.i29.i861, align 4
  %memberidx2.i.i30.i862 = getelementptr inbounds %FloRange, ptr %1125, i64 0, i32 2
  store i64 %1130, ptr %memberidx2.i.i30.i862, align 4
  %memberidx3.i.i31.i863 = getelementptr inbounds %FloRange, ptr %1125, i64 0, i32 3
  store i64 %1131, ptr %memberidx3.i.i31.i863, align 4
  store i64 49, ptr %1124, align 4
  %memberidx1.i25.i864 = getelementptr inbounds %Token, ptr %1124, i64 0, i32 1
  store ptr %1125, ptr %memberidx1.i25.i864, align 8
  br label %common.ret

if.entry81:                                       ; preds = %ifend11
  %memberidx.i.i866 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1132 = load i64, ptr %memberidx.i.i866, align 4
  %1133 = add nsw i64 %1132, 1
  %memberidx1.i.i867 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1134 = load ptr, ptr %memberidx1.i.i867, align 8
  %memberidx2.i.i868 = getelementptr inbounds %string, ptr %1134, i64 0, i32 2
  %1135 = load i64, ptr %memberidx2.i.i868, align 4
  %1136 = icmp slt i64 %1133, %1135
  br i1 %1136, label %if.entry.i.i870, label %else.i902

if.entry.i.i870:                                  ; preds = %if.entry81
  %1137 = load ptr, ptr %1134, align 8
  %memberidx4.i.i869 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1137, i64 0, i32 2
  %1138 = load ptr, ptr %memberidx4.i.i869, align 8
  %1139 = tail call i8 %1138(ptr nonnull %1134, i64 %1133)
  %phi.cmp1077 = icmp eq i8 %1139, 61
  %1140 = load i64, ptr %memberidx.i.i866, align 4
  %1141 = load ptr, ptr %memberidx1.i.i867, align 8
  %memberidx2.i.i.i876 = getelementptr inbounds %string, ptr %1141, i64 0, i32 2
  %1142 = load i64, ptr %memberidx2.i.i.i876, align 4
  br i1 %phi.cmp1077, label %if.entry.i877, label %if.entry.i.i870.else.i902_crit_edge

if.entry.i.i870.else.i902_crit_edge:              ; preds = %if.entry.i.i870
  %.pre1287 = add nsw i64 %1140, 1
  br label %else.i902

if.entry.i877:                                    ; preds = %if.entry.i.i870
  %.not1082 = icmp slt i64 %1140, %1142
  br i1 %.not1082, label %end.i.i883, label %end.i.i883.thread

end.i.i883.thread:                                ; preds = %if.entry.i877
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i898

end.i.i883:                                       ; preds = %if.entry.i877
  %1143 = load ptr, ptr %1141, align 8
  %memberidx2.i17.i879 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1143, i64 0, i32 2
  %1144 = load ptr, ptr %memberidx2.i17.i879, align 8
  %1145 = add nsw i64 %1140, 1
  store i64 %1145, ptr %memberidx.i.i866, align 4
  %1146 = tail call i8 %1144(ptr nonnull %1141, i64 %1145)
  store i8 %1146, ptr %0, align 1
  switch i8 %1146, label %if.entry10.i.i890 [
    i8 10, label %if.entry.i18.i886
    i8 0, label %Lexer_advance.exit.i898
  ]

if.entry.i18.i886:                                ; preds = %end.i.i883
  %memberidx6.i.i884 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i884, align 4
  %memberidx7.i.i885 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1147 = load i64, ptr %memberidx7.i.i885, align 4
  %1148 = add nsw i64 %1147, 1
  store i64 %1148, ptr %memberidx7.i.i885, align 4
  br label %Lexer_advance.exit.i898

if.entry10.i.i890:                                ; preds = %end.i.i883
  %memberidx13.i.i889 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1149 = load i64, ptr %memberidx13.i.i889, align 4
  %1150 = add nsw i64 %1149, 1
  store i64 %1150, ptr %memberidx13.i.i889, align 4
  br label %Lexer_advance.exit.i898

Lexer_advance.exit.i898:                          ; preds = %end.i.i883.thread, %end.i.i883, %if.entry10.i.i890, %if.entry.i18.i886
  %1151 = tail call ptr @malloc(i32 16)
  %1152 = tail call ptr @malloc(i32 32)
  %1153 = load i64, ptr %memberidx.i.i866, align 4
  %1154 = add nsw i64 %1153, -1
  %1155 = add nsw i64 %1153, 1
  %memberidx2.i20.i892 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1156 = load i64, ptr %memberidx2.i20.i892, align 4
  %1157 = add i64 %1156, -2
  %memberidx3.i21.i893 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1158 = load i64, ptr %memberidx3.i21.i893, align 4
  store i64 %1154, ptr %1152, align 4
  %memberidx1.i.i22.i894 = getelementptr inbounds %FloRange, ptr %1152, i64 0, i32 1
  store i64 %1155, ptr %memberidx1.i.i22.i894, align 4
  %memberidx2.i.i23.i895 = getelementptr inbounds %FloRange, ptr %1152, i64 0, i32 2
  store i64 %1157, ptr %memberidx2.i.i23.i895, align 4
  %memberidx3.i.i.i896 = getelementptr inbounds %FloRange, ptr %1152, i64 0, i32 3
  store i64 %1158, ptr %memberidx3.i.i.i896, align 4
  store i64 43, ptr %1151, align 4
  %memberidx1.i24.i897 = getelementptr inbounds %Token, ptr %1151, i64 0, i32 1
  store ptr %1152, ptr %memberidx1.i24.i897, align 8
  br label %common.ret

else.i902:                                        ; preds = %if.entry.i.i870.else.i902_crit_edge, %if.entry81
  %.pre-phi1288 = phi i64 [ %.pre1287, %if.entry.i.i870.else.i902_crit_edge ], [ %1133, %if.entry81 ]
  %1159 = phi i64 [ %1142, %if.entry.i.i870.else.i902_crit_edge ], [ %1135, %if.entry81 ]
  %1160 = phi ptr [ %1141, %if.entry.i.i870.else.i902_crit_edge ], [ %1134, %if.entry81 ]
  %1161 = icmp slt i64 %.pre-phi1288, %1159
  br i1 %1161, label %if.entry.i37.i904, label %ifend3.i939

if.entry.i37.i904:                                ; preds = %else.i902
  %1162 = load ptr, ptr %1160, align 8
  %memberidx4.i36.i903 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1162, i64 0, i32 2
  %1163 = load ptr, ptr %memberidx4.i36.i903, align 8
  %1164 = tail call i8 %1163(ptr nonnull %1160, i64 %.pre-phi1288)
  %phi.cmp1078 = icmp eq i8 %1164, 60
  br i1 %phi.cmp1078, label %if.entry1.i910, label %ifend3.i939

if.entry1.i910:                                   ; preds = %if.entry.i37.i904
  %1165 = load i64, ptr %memberidx.i.i866, align 4
  %1166 = load ptr, ptr %memberidx1.i.i867, align 8
  %memberidx2.i.i41.i909 = getelementptr inbounds %string, ptr %1166, i64 0, i32 2
  %1167 = load i64, ptr %memberidx2.i.i41.i909, align 4
  %.not1079 = icmp slt i64 %1165, %1167
  br i1 %.not1079, label %end.i47.i916, label %end.i47.i916.thread

end.i47.i916.thread:                              ; preds = %if.entry1.i910
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit55.i927

end.i47.i916:                                     ; preds = %if.entry1.i910
  %1168 = load ptr, ptr %1166, align 8
  %memberidx2.i43.i912 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1168, i64 0, i32 2
  %1169 = load ptr, ptr %memberidx2.i43.i912, align 8
  %1170 = add nsw i64 %1165, 1
  store i64 %1170, ptr %memberidx.i.i866, align 4
  %1171 = tail call i8 %1169(ptr nonnull %1166, i64 %1170)
  store i8 %1171, ptr %0, align 1
  switch i8 %1171, label %if.entry10.i54.i923 [
    i8 10, label %if.entry.i50.i919
    i8 0, label %Lexer_advance.exit55.i927
  ]

if.entry.i50.i919:                                ; preds = %end.i47.i916
  %memberidx6.i48.i917 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i48.i917, align 4
  %memberidx7.i49.i918 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1172 = load i64, ptr %memberidx7.i49.i918, align 4
  %1173 = add nsw i64 %1172, 1
  store i64 %1173, ptr %memberidx7.i49.i918, align 4
  br label %Lexer_advance.exit55.i927

if.entry10.i54.i923:                              ; preds = %end.i47.i916
  %memberidx13.i53.i922 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1174 = load i64, ptr %memberidx13.i53.i922, align 4
  %1175 = add nsw i64 %1174, 1
  store i64 %1175, ptr %memberidx13.i53.i922, align 4
  br label %Lexer_advance.exit55.i927

Lexer_advance.exit55.i927:                        ; preds = %end.i47.i916.thread, %end.i47.i916, %if.entry10.i54.i923, %if.entry.i50.i919
  %1176 = load i64, ptr %memberidx.i.i866, align 4
  %1177 = add nsw i64 %1176, 1
  %1178 = load ptr, ptr %memberidx1.i.i867, align 8
  %memberidx2.i58.i926 = getelementptr inbounds %string, ptr %1178, i64 0, i32 2
  %1179 = load i64, ptr %memberidx2.i58.i926, align 4
  %1180 = icmp slt i64 %1177, %1179
  br i1 %1180, label %if.entry.i61.i929, label %ifend6.i972

if.entry.i61.i929:                                ; preds = %Lexer_advance.exit55.i927
  %1181 = load ptr, ptr %1178, align 8
  %memberidx4.i60.i928 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1181, i64 0, i32 2
  %1182 = load ptr, ptr %memberidx4.i60.i928, align 8
  %1183 = tail call i8 %1182(ptr nonnull %1178, i64 %1177)
  %phi.cmp1080 = icmp eq i8 %1183, 61
  br i1 %phi.cmp1080, label %if.entry4.i943, label %ifend6.i972

ifend3.i939:                                      ; preds = %else.i902, %if.entry.i37.i904
  %1184 = tail call ptr @malloc(i32 16)
  %1185 = tail call ptr @malloc(i32 32)
  %1186 = load i64, ptr %memberidx.i.i866, align 4
  %1187 = add nsw i64 %1186, 1
  %memberidx2.i64.i933 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1188 = load i64, ptr %memberidx2.i64.i933, align 4
  %1189 = add i64 %1188, -1
  %memberidx3.i65.i934 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1190 = load i64, ptr %memberidx3.i65.i934, align 4
  store i64 %1186, ptr %1185, align 4
  %memberidx1.i.i66.i935 = getelementptr inbounds %FloRange, ptr %1185, i64 0, i32 1
  store i64 %1187, ptr %memberidx1.i.i66.i935, align 4
  %memberidx2.i.i67.i936 = getelementptr inbounds %FloRange, ptr %1185, i64 0, i32 2
  store i64 %1189, ptr %memberidx2.i.i67.i936, align 4
  %memberidx3.i.i68.i937 = getelementptr inbounds %FloRange, ptr %1185, i64 0, i32 3
  store i64 %1190, ptr %memberidx3.i.i68.i937, align 4
  store i64 42, ptr %1184, align 4
  %memberidx1.i69.i938 = getelementptr inbounds %Token, ptr %1184, i64 0, i32 1
  store ptr %1185, ptr %memberidx1.i69.i938, align 8
  br label %common.ret

if.entry4.i943:                                   ; preds = %if.entry.i61.i929
  %1191 = load i64, ptr %memberidx.i.i866, align 4
  %1192 = load ptr, ptr %memberidx1.i.i867, align 8
  %memberidx2.i.i79.i942 = getelementptr inbounds %string, ptr %1192, i64 0, i32 2
  %1193 = load i64, ptr %memberidx2.i.i79.i942, align 4
  %.not1081 = icmp slt i64 %1191, %1193
  br i1 %.not1081, label %end.i85.i949, label %end.i85.i949.thread

end.i85.i949.thread:                              ; preds = %if.entry4.i943
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit93.i964

end.i85.i949:                                     ; preds = %if.entry4.i943
  %1194 = load ptr, ptr %1192, align 8
  %memberidx2.i81.i945 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1194, i64 0, i32 2
  %1195 = load ptr, ptr %memberidx2.i81.i945, align 8
  %1196 = add nsw i64 %1191, 1
  store i64 %1196, ptr %memberidx.i.i866, align 4
  %1197 = tail call i8 %1195(ptr nonnull %1192, i64 %1196)
  store i8 %1197, ptr %0, align 1
  switch i8 %1197, label %if.entry10.i92.i956 [
    i8 10, label %if.entry.i88.i952
    i8 0, label %Lexer_advance.exit93.i964
  ]

if.entry.i88.i952:                                ; preds = %end.i85.i949
  %memberidx6.i86.i950 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i86.i950, align 4
  %memberidx7.i87.i951 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1198 = load i64, ptr %memberidx7.i87.i951, align 4
  %1199 = add nsw i64 %1198, 1
  store i64 %1199, ptr %memberidx7.i87.i951, align 4
  br label %Lexer_advance.exit93.i964

if.entry10.i92.i956:                              ; preds = %end.i85.i949
  %memberidx13.i91.i955 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1200 = load i64, ptr %memberidx13.i91.i955, align 4
  %1201 = add nsw i64 %1200, 1
  store i64 %1201, ptr %memberidx13.i91.i955, align 4
  br label %Lexer_advance.exit93.i964

Lexer_advance.exit93.i964:                        ; preds = %end.i85.i949.thread, %end.i85.i949, %if.entry10.i92.i956, %if.entry.i88.i952
  %1202 = tail call ptr @malloc(i32 16)
  %1203 = tail call ptr @malloc(i32 32)
  %1204 = load i64, ptr %memberidx.i.i866, align 4
  %1205 = add nsw i64 %1204, -2
  %1206 = add nsw i64 %1204, 1
  %memberidx2.i72.i958 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1207 = load i64, ptr %memberidx2.i72.i958, align 4
  %1208 = add i64 %1207, -3
  %memberidx3.i73.i959 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1209 = load i64, ptr %memberidx3.i73.i959, align 4
  store i64 %1205, ptr %1203, align 4
  %memberidx1.i.i74.i960 = getelementptr inbounds %FloRange, ptr %1203, i64 0, i32 1
  store i64 %1206, ptr %memberidx1.i.i74.i960, align 4
  %memberidx2.i.i75.i961 = getelementptr inbounds %FloRange, ptr %1203, i64 0, i32 2
  store i64 %1208, ptr %memberidx2.i.i75.i961, align 4
  %memberidx3.i.i76.i962 = getelementptr inbounds %FloRange, ptr %1203, i64 0, i32 3
  store i64 %1209, ptr %memberidx3.i.i76.i962, align 4
  store i64 22, ptr %1202, align 4
  %memberidx1.i70.i963 = getelementptr inbounds %Token, ptr %1202, i64 0, i32 1
  store ptr %1203, ptr %memberidx1.i70.i963, align 8
  br label %common.ret

ifend6.i972:                                      ; preds = %Lexer_advance.exit55.i927, %if.entry.i61.i929
  %1210 = tail call ptr @malloc(i32 16)
  %1211 = tail call ptr @malloc(i32 32)
  %1212 = load i64, ptr %memberidx.i.i866, align 4
  %1213 = add nsw i64 %1212, -1
  %1214 = add nsw i64 %1212, 1
  %memberidx2.i27.i966 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1215 = load i64, ptr %memberidx2.i27.i966, align 4
  %1216 = add i64 %1215, -2
  %memberidx3.i28.i967 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1217 = load i64, ptr %memberidx3.i28.i967, align 4
  store i64 %1213, ptr %1211, align 4
  %memberidx1.i.i29.i968 = getelementptr inbounds %FloRange, ptr %1211, i64 0, i32 1
  store i64 %1214, ptr %memberidx1.i.i29.i968, align 4
  %memberidx2.i.i30.i969 = getelementptr inbounds %FloRange, ptr %1211, i64 0, i32 2
  store i64 %1216, ptr %memberidx2.i.i30.i969, align 4
  %memberidx3.i.i31.i970 = getelementptr inbounds %FloRange, ptr %1211, i64 0, i32 3
  store i64 %1217, ptr %memberidx3.i.i31.i970, align 4
  store i64 48, ptr %1210, align 4
  %memberidx1.i25.i971 = getelementptr inbounds %Token, ptr %1210, i64 0, i32 1
  store ptr %1211, ptr %memberidx1.i25.i971, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend11
  %memberidx.i.i973 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1218 = load i64, ptr %memberidx.i.i973, align 4
  %1219 = add nsw i64 %1218, 1
  %memberidx1.i.i974 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1220 = load ptr, ptr %memberidx1.i.i974, align 8
  %memberidx2.i.i975 = getelementptr inbounds %string, ptr %1220, i64 0, i32 2
  %1221 = load i64, ptr %memberidx2.i.i975, align 4
  %1222 = icmp slt i64 %1219, %1221
  br i1 %1222, label %if.entry.i.i977, label %Lexer_dot_token.exit

if.entry.i.i977:                                  ; preds = %if.entry84
  %1223 = load ptr, ptr %1220, align 8
  %memberidx4.i.i976 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1223, i64 0, i32 2
  %1224 = load ptr, ptr %memberidx4.i.i976, align 8
  %1225 = tail call i8 %1224(ptr nonnull %1220, i64 %1219)
  %phi.cmp = icmp eq i8 %1225, 46
  br i1 %phi.cmp, label %if.entry.i983, label %Lexer_dot_token.exit

if.entry.i983:                                    ; preds = %if.entry.i.i977
  %1226 = load i64, ptr %memberidx.i.i973, align 4
  %1227 = load ptr, ptr %memberidx1.i.i974, align 8
  %memberidx2.i.i.i982 = getelementptr inbounds %string, ptr %1227, i64 0, i32 2
  %1228 = load i64, ptr %memberidx2.i.i.i982, align 4
  %.not = icmp slt i64 %1226, %1228
  br i1 %.not, label %end.i.i989, label %end.i.i989.thread

end.i.i989.thread:                                ; preds = %if.entry.i983
  store i8 0, ptr %0, align 1
  br label %Lexer_dot_token.exit

end.i.i989:                                       ; preds = %if.entry.i983
  %1229 = load ptr, ptr %1227, align 8
  %memberidx2.i5.i985 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1229, i64 0, i32 2
  %1230 = load ptr, ptr %memberidx2.i5.i985, align 8
  %1231 = add nsw i64 %1226, 1
  store i64 %1231, ptr %memberidx.i.i973, align 4
  %1232 = tail call i8 %1230(ptr nonnull %1227, i64 %1231)
  store i8 %1232, ptr %0, align 1
  switch i8 %1232, label %if.entry10.i.i996 [
    i8 10, label %if.entry.i6.i992
    i8 0, label %Lexer_dot_token.exit
  ]

if.entry.i6.i992:                                 ; preds = %end.i.i989
  %memberidx6.i.i990 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx6.i.i990, align 4
  %memberidx7.i.i991 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1233 = load i64, ptr %memberidx7.i.i991, align 4
  %1234 = add nsw i64 %1233, 1
  store i64 %1234, ptr %memberidx7.i.i991, align 4
  br label %Lexer_dot_token.exit

if.entry10.i.i996:                                ; preds = %end.i.i989
  %memberidx13.i.i995 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1235 = load i64, ptr %memberidx13.i.i995, align 4
  %1236 = add nsw i64 %1235, 1
  store i64 %1236, ptr %memberidx13.i.i995, align 4
  br label %Lexer_dot_token.exit

Lexer_dot_token.exit:                             ; preds = %end.i.i989.thread, %if.entry84, %if.entry.i6.i992, %if.entry10.i.i996, %end.i.i989, %if.entry.i.i977
  %length.0.i998 = phi i64 [ 1, %if.entry.i.i977 ], [ 2, %end.i.i989 ], [ 2, %if.entry10.i.i996 ], [ 2, %if.entry.i6.i992 ], [ 1, %if.entry84 ], [ 2, %end.i.i989.thread ]
  %token.0.i = phi i64 [ 50, %if.entry.i.i977 ], [ 52, %end.i.i989 ], [ 52, %if.entry10.i.i996 ], [ 52, %if.entry.i6.i992 ], [ 50, %if.entry84 ], [ 52, %end.i.i989.thread ]
  %1237 = tail call ptr @malloc(i32 16)
  %1238 = tail call ptr @malloc(i32 32)
  %1239 = load i64, ptr %memberidx.i.i973, align 4
  %1240 = sub nsw i64 1, %length.0.i998
  %1241 = add i64 %1240, %1239
  %1242 = add nsw i64 %1239, 1
  %memberidx2.i8.i1000 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1243 = load i64, ptr %memberidx2.i8.i1000, align 4
  %1244 = sub nuw i64 %1243, %length.0.i998
  %memberidx3.i9.i1001 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1245 = load i64, ptr %memberidx3.i9.i1001, align 4
  store i64 %1241, ptr %1238, align 4
  %memberidx1.i.i10.i1002 = getelementptr inbounds %FloRange, ptr %1238, i64 0, i32 1
  store i64 %1242, ptr %memberidx1.i.i10.i1002, align 4
  %memberidx2.i.i11.i1003 = getelementptr inbounds %FloRange, ptr %1238, i64 0, i32 2
  store i64 %1244, ptr %memberidx2.i.i11.i1003, align 4
  %memberidx3.i.i.i1004 = getelementptr inbounds %FloRange, ptr %1238, i64 0, i32 3
  store i64 %1245, ptr %memberidx3.i.i.i1004, align 4
  store i64 %token.0.i, ptr %1237, align 4
  %memberidx1.i12.i1005 = getelementptr inbounds %Token, ptr %1237, i64 0, i32 1
  store ptr %1238, ptr %memberidx1.i12.i1005, align 8
  br label %common.ret

if.entry87:                                       ; preds = %ifend11
  %1246 = tail call ptr @malloc(i32 16)
  %1247 = tail call ptr @malloc(i32 32)
  %memberidx90 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1248 = load i64, ptr %memberidx90, align 4
  %memberidx91 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1249 = load i64, ptr %memberidx91, align 4
  %memberidx2.i1008 = getelementptr inbounds %FloRange, ptr %1247, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1247, i8 0, i64 16, i1 false)
  store i64 %1248, ptr %memberidx2.i1008, align 4
  %memberidx3.i1009 = getelementptr inbounds %FloRange, ptr %1247, i64 0, i32 3
  store i64 %1249, ptr %memberidx3.i1009, align 4
  store i64 46, ptr %1246, align 4
  %memberidx1.i1010 = getelementptr inbounds %Token, ptr %1246, i64 0, i32 1
  store ptr %1247, ptr %memberidx1.i1010, align 8
  br label %common.ret

ifend89:                                          ; preds = %ifend11
  %memberidx92 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1250 = load ptr, ptr %memberidx92, align 8
  %1251 = load ptr, ptr %1250, align 8
  %memberidx93 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1251, i64 0, i32 1
  %1252 = load ptr, ptr %memberidx93, align 8
  %memberidx94 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1253 = load i64, ptr %memberidx94, align 4
  %1254 = tail call ptr %1252(ptr nonnull %1250, i64 %1253, i64 1)
  %1255 = load i64, ptr %memberidx94, align 4
  %1256 = alloca ptr, align 8
  %1257 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1256, ptr nonnull @61, i64 %1255)
  %1258 = load ptr, ptr %1256, align 8
  %1259 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %1259, align 8
  %memberidx.i1011 = getelementptr inbounds %string, ptr %1259, i64 0, i32 1
  store ptr %1258, ptr %memberidx.i1011, align 8
  %memberidx1.i1012 = getelementptr inbounds %string, ptr %1259, i64 0, i32 2
  store i64 %1257, ptr %memberidx1.i1012, align 4
  %memberidx2.i1013 = getelementptr inbounds %string, ptr %1259, i64 0, i32 3
  store i64 %1257, ptr %memberidx2.i1013, align 4
  %1260 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %1261 = call ptr %1260(ptr nonnull %1259)
  %1262 = load i64, ptr %memberidx1.i1012, align 4
  %1263 = call i64 @write(i64 1, ptr %1261, i64 %1262)
  %1264 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %memberidx96 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 2
  %1265 = load ptr, ptr %memberidx96, align 8
  %1266 = tail call ptr @malloc(i32 24)
  %1267 = load ptr, ptr %1254, align 8
  %memberidx97 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1267, i64 0, i32 5
  %1268 = load ptr, ptr %memberidx97, align 8
  %1269 = call ptr %1268(ptr nonnull %1254)
  %1270 = alloca ptr, align 8
  %1271 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1270, ptr nonnull @62, ptr %1269)
  %1272 = load ptr, ptr %1270, align 8
  %1273 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %1273, align 8
  %memberidx.i520 = getelementptr inbounds %string, ptr %1273, i64 0, i32 1
  store ptr %1272, ptr %memberidx.i520, align 8
  %memberidx1.i521 = getelementptr inbounds %string, ptr %1273, i64 0, i32 2
  store i64 %1271, ptr %memberidx1.i521, align 4
  %memberidx2.i522 = getelementptr inbounds %string, ptr %1273, i64 0, i32 3
  store i64 %1271, ptr %memberidx2.i522, align 4
  tail call void @free(ptr %1269)
  %1274 = call ptr @malloc(i32 32)
  %1275 = load i64, ptr %memberidx94, align 4
  %1276 = add nsw i64 %1275, 1
  %memberidx2.i185 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1277 = load i64, ptr %memberidx2.i185, align 4
  %1278 = add i64 %1277, -1
  %memberidx3.i186 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1279 = load i64, ptr %memberidx3.i186, align 4
  store i64 %1275, ptr %1274, align 4
  %memberidx1.i.i187 = getelementptr inbounds %FloRange, ptr %1274, i64 0, i32 1
  store i64 %1276, ptr %memberidx1.i.i187, align 4
  %memberidx2.i.i188 = getelementptr inbounds %FloRange, ptr %1274, i64 0, i32 2
  store i64 %1278, ptr %memberidx2.i.i188, align 4
  %memberidx3.i.i189 = getelementptr inbounds %FloRange, ptr %1274, i64 0, i32 3
  store i64 %1279, ptr %memberidx3.i.i189, align 4
  store i64 0, ptr %1266, align 4
  %memberidx1.i174 = getelementptr inbounds %FloError, ptr %1266, i64 0, i32 2
  store ptr %1274, ptr %memberidx1.i174, align 8
  %memberidx2.i175 = getelementptr inbounds %FloError, ptr %1266, i64 0, i32 1
  store ptr %1273, ptr %memberidx2.i175, align 8
  %memberidx.i168 = getelementptr inbounds %Array_FloError_, ptr %1265, i64 0, i32 2
  %1280 = load i64, ptr %memberidx.i168, align 4
  %memberidx1.i = getelementptr inbounds %Array_FloError_, ptr %1265, i64 0, i32 3
  %1281 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %1280, %1281
  br i1 %.not.i, label %ifend89.Array_FloError____sl__.exit_crit_edge, label %if.entry.i

ifend89.Array_FloError____sl__.exit_crit_edge:    ; preds = %ifend89
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %1265, i64 0, i32 1
  %.pre1238 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_FloError____sl__.exit

if.entry.i:                                       ; preds = %ifend89
  %1282 = shl nuw i64 %1281, 1
  store i64 %1282, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_FloError_, ptr %1265, i64 0, i32 1
  %1283 = load ptr, ptr %memberidx2.i.i, align 8
  %1284 = shl i64 %1281, 4
  %1285 = call ptr @realloc(ptr %1283, i64 %1284)
  store ptr %1285, ptr %memberidx2.i.i, align 8
  %.pre1237 = load i64, ptr %memberidx.i168, align 4
  br label %Array_FloError____sl__.exit

Array_FloError____sl__.exit:                      ; preds = %ifend89.Array_FloError____sl__.exit_crit_edge, %if.entry.i
  %1286 = phi ptr [ %.pre1238, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %1285, %if.entry.i ]
  %1287 = phi i64 [ %1280, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %.pre1237, %if.entry.i ]
  %1288 = add nsw i64 %1287, 1
  store i64 %1288, ptr %memberidx.i168, align 4
  %1289 = getelementptr inbounds ptr, ptr %1286, i64 %1287
  store ptr %1266, ptr %1289, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %1254, i64 0, i32 1
  %1290 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %1290)
  tail call void @free(ptr nonnull %1254)
  br label %common.ret
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare double @atof(ptr nocapture) local_unnamed_addr #12

define internal fastcc noalias ptr @Parser_parse(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Parser, align 8
  store ptr %0, ptr %3, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i68 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx2.i68, align 4
  %5 = icmp sgt i64 %4, -1
  br i1 %5, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %2
  %memberidx3.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx2.i, align 8
  %memberidx.i.i69 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i69, align 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %memberidx3.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %2, %if.entry.i
  %8 = phi i64 [ -1, %2 ], [ 0, %if.entry.i ]
  %9 = phi ptr [ undef, %2 ], [ %7, %if.entry.i ]
  %10 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %10)
  %memberidx.i70 = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %9, align 4
  %12 = icmp eq i64 %11, 33
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Parser_advance.exit
  %memberidx.i.i.i73 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %16 = load i64, ptr %memberidx2.i68, align 4
  %17 = icmp slt i64 %8, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %26, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %19 = phi ptr [ %28, %Parser_advance.exit.i ], [ %9, %while.entry.i.preheader ]
  %20 = phi i64 [ %29, %Parser_advance.exit.i ], [ %8, %while.entry.i.preheader ]
  %21 = icmp slt i64 %20, %16
  br i1 %21, label %if.entry.i.i74, label %Parser_advance.exit.i

if.entry.i.i74:                                   ; preds = %while.entry.i
  %22 = add nsw i64 %20, 1
  store i64 %22, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx.i.i.i73, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx.i70, align 8
  %.pre = load i64, ptr %25, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i74, %while.entry.i
  %26 = phi i64 [ %.pre, %if.entry.i.i74 ], [ %18, %while.entry.i ]
  %27 = phi i64 [ %.pre, %if.entry.i.i74 ], [ 33, %while.entry.i ]
  %28 = phi ptr [ %25, %if.entry.i.i74 ], [ %19, %while.entry.i ]
  %29 = phi i64 [ %22, %if.entry.i.i74 ], [ %20, %while.entry.i ]
  %30 = icmp eq i64 %27, 33
  br i1 %30, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Parser_advance.exit
  %31 = phi i64 [ %11, %Parser_advance.exit ], [ %26, %Parser_advance.exit.i ]
  %32 = phi ptr [ %9, %Parser_advance.exit ], [ %28, %Parser_advance.exit.i ]
  %33 = icmp ne i64 %31, 46
  %34 = and i1 %33, %14
  br i1 %34, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit
  %memberidx37 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 6
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 5
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 3
  %memberidx14 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 2
  %memberidx8 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_new_lines.exit126
  %35 = phi i64 [ %31, %while.entry.preheader ], [ %158, %Parser_new_lines.exit126 ]
  %36 = phi ptr [ %32, %while.entry.preheader ], [ %159, %Parser_new_lines.exit126 ]
  switch i64 %35, label %else35 [
    i64 61, label %if.entry
    i64 70, label %if.entry5
    i64 71, label %if.entry11
    i64 65, label %if.entry17
    i64 54, label %if.entry23
    i64 55, label %if.entry29
    i64 53, label %if.entry.i259
  ]

while.end:                                        ; preds = %Parser_new_lines.exit126, %Parser_error.exit, %Parser_new_lines.exit
  ret ptr %10

if.entry:                                         ; preds = %while.entry
  %37 = load i64, ptr %memberidx2.i, align 8
  %38 = load ptr, ptr %3, align 8
  %memberidx2.i82 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx2.i82, align 4
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %if.entry.i85, label %Parser_advance.exit86

if.entry.i85:                                     ; preds = %if.entry
  %41 = add nsw i64 %37, 1
  store i64 %41, ptr %memberidx2.i, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i84, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  store ptr %44, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit86

Parser_advance.exit86:                            ; preds = %if.entry, %if.entry.i85
  %45 = load ptr, ptr %10, align 8
  %46 = call ptr @malloc(i32 33)
  %memberidx.i.i92 = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 1
  %47 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ArgNode_, ptr %47, align 8
  %memberidx.i.i.i93 = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i93, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i94 = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 1
  %48 = call ptr @malloc(i32 64)
  store ptr %48, ptr %memberidx2.i.i.i94, align 8
  store i64 0, ptr %memberidx.i.i.i93, align 4
  store ptr %47, ptr %memberidx.i.i92, align 8
  %memberidx3.i.i96 = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 4
  store i1 false, ptr %memberidx3.i.i96, align 1
  %49 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %49, ptr %46, align 8
  %50 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %51 = load ptr, ptr %memberidx.i70, align 8
  %52 = load i64, ptr %51, align 4
  %.not.i98 = icmp eq i64 %52, 26
  br i1 %.not.i98, label %Parser_new_lines.exit.i, label %ifend.i

ifend.i:                                          ; preds = %Parser_advance.exit86
  %53 = load ptr, ptr %memberidx.i.i92, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %53)
  %.pre393 = load ptr, ptr %memberidx.i70, align 8
  %.pre394 = load i64, ptr %.pre393, align 4
  %54 = icmp eq i64 %.pre394, 33
  %55 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i.i.i, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %ifend.i
  %59 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 2
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %.pre395 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i
  %60 = phi i64 [ %.pre395, %while.entry.i.i.preheader ], [ %69, %Parser_advance.exit.i.i ]
  %61 = load i64, ptr %memberidx2.i12.i.i, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx2.i, align 8
  %64 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx.i70, align 8
  %.pre396 = load i64, ptr %66, align 4
  %.pre397 = load i64, ptr %memberidx3.i.i.i, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i
  %67 = phi i64 [ %.pre397, %if.entry.i.i.i ], [ 0, %while.entry.i.i ]
  %68 = phi i64 [ %.pre396, %if.entry.i.i.i ], [ 33, %while.entry.i.i ]
  %69 = phi i64 [ %63, %if.entry.i.i.i ], [ %60, %while.entry.i.i ]
  %70 = icmp eq i64 %68, 33
  %71 = icmp eq i64 %67, 0
  %72 = and i1 %70, %71
  br i1 %72, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %Parser_advance.exit86, %ifend.i
  %73 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %74 = load ptr, ptr %memberidx.i70, align 8
  %75 = load i64, ptr %74, align 4
  %76 = icmp eq i64 %75, 1
  br i1 %76, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %Parser_new_lines.exit.i
  %77 = load i64, ptr %memberidx2.i, align 8
  %78 = load ptr, ptr %3, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i41.i, align 4
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %if.entry.i.i101, label %Parser_advance.exit.i102

if.entry.i.i101:                                  ; preds = %if.entry6.i
  %81 = add nsw i64 %77, 1
  store i64 %81, ptr %memberidx2.i, align 8
  %memberidx.i.i43.i = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i.i43.i, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  store ptr %84, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i102

Parser_advance.exit.i102:                         ; preds = %if.entry.i.i101, %if.entry6.i
  %memberidx9.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 3
  %85 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %85, ptr %memberidx9.i, align 8
  br label %ifend8.i

else7.i:                                          ; preds = %Parser_new_lines.exit.i
  %86 = call ptr @malloc(i32 24)
  %87 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %87, align 8
  %88 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %88, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %88, i64 0, i32 1
  store ptr %87, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %string, ptr %88, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i45.i, align 4
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %88, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i46.i, align 4
  %89 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %89, i8 0, i64 32, i1 false)
  store i64 53, ptr %86, align 4
  %memberidx1.i.i49.i = getelementptr inbounds %Token, ptr %86, i64 0, i32 1
  store ptr %89, ptr %memberidx1.i.i49.i, align 8
  %memberidx.i50.i = getelementptr inbounds %IdentifierToken, ptr %86, i64 0, i32 2
  store ptr %88, ptr %memberidx.i50.i, align 8
  %memberidx10.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 3
  %90 = call ptr @malloc(i32 32)
  %91 = load ptr, ptr %memberidx1.i.i49.i, align 8
  store ptr %91, ptr %90, align 8
  %memberidx.i.i66.i = getelementptr inbounds %TypeNode, ptr %90, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i66.i, align 4
  %memberidx.i67.i = getelementptr inbounds %RecordTypeNode, ptr %90, i64 0, i32 2
  store ptr %86, ptr %memberidx.i67.i, align 8
  %memberidx1.i68.i = getelementptr inbounds %RecordTypeNode, ptr %90, i64 0, i32 3
  %92 = call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %92, align 8
  %memberidx.i5.i.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i69.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i69.i, align 4
  %memberidx2.i.i70.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 1
  %93 = call ptr @malloc(i32 64)
  store ptr %93, ptr %memberidx2.i.i70.i, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %92, ptr %memberidx1.i68.i, align 8
  store ptr %90, ptr %memberidx10.i, align 8
  br label %ifend8.i

ifend8.i:                                         ; preds = %else7.i, %Parser_advance.exit.i102
  %94 = load ptr, ptr %memberidx.i70, align 8
  %95 = load i64, ptr %94, align 4
  %96 = icmp eq i64 %95, 33
  %97 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i54.i = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 2
  %98 = load i64, ptr %memberidx3.i.i54.i, align 4
  %99 = icmp eq i64 %98, 0
  %100 = and i1 %96, %99
  br i1 %100, label %while.entry.i57.i.preheader, label %Parser_new_lines.exit65.i

while.entry.i57.i.preheader:                      ; preds = %ifend8.i
  %101 = load ptr, ptr %3, align 8
  %memberidx2.i12.i56.i = getelementptr inbounds %Array_Token_, ptr %101, i64 0, i32 2
  %memberidx.i.i.i59.i = getelementptr inbounds %Array_Token_, ptr %101, i64 0, i32 1
  %.pre398 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i57.i

while.entry.i57.i:                                ; preds = %while.entry.i57.i.preheader, %Parser_advance.exit.i64.i
  %102 = phi i64 [ 33, %while.entry.i57.i.preheader ], [ %110, %Parser_advance.exit.i64.i ]
  %103 = phi i64 [ %.pre398, %while.entry.i57.i.preheader ], [ %113, %Parser_advance.exit.i64.i ]
  %104 = load i64, ptr %memberidx2.i12.i56.i, align 4
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %if.entry.i.i60.i, label %Parser_advance.exit.i64.i

if.entry.i.i60.i:                                 ; preds = %while.entry.i57.i
  %106 = add nsw i64 %103, 1
  store i64 %106, ptr %memberidx2.i, align 8
  %107 = load ptr, ptr %memberidx.i.i.i59.i, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  store ptr %109, ptr %memberidx.i70, align 8
  %.pre399 = load i64, ptr %109, align 4
  %.pre400 = load i64, ptr %memberidx3.i.i54.i, align 4
  br label %Parser_advance.exit.i64.i

Parser_advance.exit.i64.i:                        ; preds = %if.entry.i.i60.i, %while.entry.i57.i
  %110 = phi i64 [ %.pre399, %if.entry.i.i60.i ], [ %102, %while.entry.i57.i ]
  %111 = phi i64 [ %.pre400, %if.entry.i.i60.i ], [ 0, %while.entry.i57.i ]
  %112 = phi i64 [ %.pre399, %if.entry.i.i60.i ], [ 33, %while.entry.i57.i ]
  %113 = phi i64 [ %106, %if.entry.i.i60.i ], [ %103, %while.entry.i57.i ]
  %114 = icmp eq i64 %112, 33
  %115 = icmp eq i64 %111, 0
  %116 = and i1 %114, %115
  br i1 %116, label %while.entry.i57.i, label %Parser_new_lines.exit65.i

Parser_new_lines.exit65.i:                        ; preds = %Parser_advance.exit.i64.i, %ifend8.i
  %117 = phi i64 [ %95, %ifend8.i ], [ %110, %Parser_advance.exit.i64.i ]
  %118 = icmp eq i64 %117, 27
  br i1 %118, label %if.entry14.i, label %else15.i

if.entry14.i:                                     ; preds = %Parser_new_lines.exit65.i
  %memberidx17.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 2
  %119 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %119, ptr %memberidx17.i, align 8
  br label %Parser_parse_function.exit

else15.i:                                         ; preds = %Parser_new_lines.exit65.i
  store i1 true, ptr %memberidx3.i.i96, align 1
  br label %Parser_parse_function.exit

Parser_parse_function.exit:                       ; preds = %if.entry14.i, %else15.i
  %memberidx.i104 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 2
  %120 = load i64, ptr %memberidx.i104, align 4
  %memberidx1.i105 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 3
  %121 = load i64, ptr %memberidx1.i105, align 4
  %.not.i106 = icmp slt i64 %120, %121
  br i1 %.not.i106, label %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, label %if.entry.i109

Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_function.exit
  %memberidx4.i110.phi.trans.insert = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 1
  %.pre402 = load ptr, ptr %memberidx4.i110.phi.trans.insert, align 8
  br label %Array_FunctionDeclarationNode____sl__.exit

if.entry.i109:                                    ; preds = %Parser_parse_function.exit
  %122 = shl nuw i64 %121, 1
  store i64 %122, ptr %memberidx1.i105, align 4
  %memberidx2.i.i108 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 1
  %123 = load ptr, ptr %memberidx2.i.i108, align 8
  %124 = shl i64 %121, 4
  %125 = call ptr @realloc(ptr %123, i64 %124)
  store ptr %125, ptr %memberidx2.i.i108, align 8
  %.pre401 = load i64, ptr %memberidx.i104, align 4
  br label %Array_FunctionDeclarationNode____sl__.exit

Array_FunctionDeclarationNode____sl__.exit:       ; preds = %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, %if.entry.i109
  %126 = phi ptr [ %.pre402, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %125, %if.entry.i109 ]
  %127 = phi i64 [ %120, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %.pre401, %if.entry.i109 ]
  %128 = add nsw i64 %127, 1
  store i64 %128, ptr %memberidx.i104, align 4
  %129 = getelementptr inbounds ptr, ptr %126, i64 %127
  store ptr %46, ptr %129, align 8
  br label %ifend

ifend:                                            ; preds = %Array_VarDeclarationStatement____sl__.exit, %Array_TypeAliasNode____sl__.exit, %Array_ConstDeclarationStatement____sl__.exit, %Array_ImportNode____sl__.exit, %Array_EnumNode____sl__.exit, %Array_ClassDeclarationNode____sl__.exit, %Array_FunctionDeclarationNode____sl__.exit
  %130 = load ptr, ptr %memberidx.i70, align 8
  %131 = load i64, ptr %130, align 4
  %132 = icmp eq i64 %131, 33
  %133 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i115 = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 2
  %134 = load i64, ptr %memberidx3.i.i115, align 4
  %135 = icmp eq i64 %134, 0
  %136 = and i1 %132, %135
  br i1 %136, label %while.entry.i118.preheader, label %Parser_new_lines.exit126

while.entry.i118.preheader:                       ; preds = %ifend
  %137 = load ptr, ptr %3, align 8
  %memberidx2.i12.i117 = getelementptr inbounds %Array_Token_, ptr %137, i64 0, i32 2
  %memberidx.i.i.i120 = getelementptr inbounds %Array_Token_, ptr %137, i64 0, i32 1
  %.pre403 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i118

while.entry.i118:                                 ; preds = %while.entry.i118.preheader, %Parser_advance.exit.i125
  %138 = phi i64 [ 0, %while.entry.i118.preheader ], [ %148, %Parser_advance.exit.i125 ]
  %139 = phi i64 [ 33, %while.entry.i118.preheader ], [ %149, %Parser_advance.exit.i125 ]
  %140 = phi ptr [ %130, %while.entry.i118.preheader ], [ %152, %Parser_advance.exit.i125 ]
  %141 = phi i64 [ %.pre403, %while.entry.i118.preheader ], [ %153, %Parser_advance.exit.i125 ]
  %142 = load i64, ptr %memberidx2.i12.i117, align 4
  %143 = icmp slt i64 %141, %142
  br i1 %143, label %if.entry.i.i121, label %Parser_advance.exit.i125

if.entry.i.i121:                                  ; preds = %while.entry.i118
  %144 = add nsw i64 %141, 1
  store i64 %144, ptr %memberidx2.i, align 8
  %145 = load ptr, ptr %memberidx.i.i.i120, align 8
  %146 = getelementptr inbounds ptr, ptr %145, i64 %144
  %147 = load ptr, ptr %146, align 8
  store ptr %147, ptr %memberidx.i70, align 8
  %.pre404 = load i64, ptr %147, align 4
  %.pre405 = load i64, ptr %memberidx3.i.i115, align 4
  br label %Parser_advance.exit.i125

Parser_advance.exit.i125:                         ; preds = %if.entry.i.i121, %while.entry.i118
  %148 = phi i64 [ %.pre405, %if.entry.i.i121 ], [ %138, %while.entry.i118 ]
  %149 = phi i64 [ %.pre404, %if.entry.i.i121 ], [ %139, %while.entry.i118 ]
  %150 = phi i64 [ %.pre405, %if.entry.i.i121 ], [ 0, %while.entry.i118 ]
  %151 = phi i64 [ %.pre404, %if.entry.i.i121 ], [ 33, %while.entry.i118 ]
  %152 = phi ptr [ %147, %if.entry.i.i121 ], [ %140, %while.entry.i118 ]
  %153 = phi i64 [ %144, %if.entry.i.i121 ], [ %141, %while.entry.i118 ]
  %154 = icmp eq i64 %151, 33
  %155 = icmp eq i64 %150, 0
  %156 = and i1 %154, %155
  br i1 %156, label %while.entry.i118, label %Parser_new_lines.exit126

Parser_new_lines.exit126:                         ; preds = %Parser_advance.exit.i125, %ifend
  %157 = phi i64 [ %134, %ifend ], [ %148, %Parser_advance.exit.i125 ]
  %158 = phi i64 [ %131, %ifend ], [ %149, %Parser_advance.exit.i125 ]
  %159 = phi ptr [ %130, %ifend ], [ %152, %Parser_advance.exit.i125 ]
  %160 = icmp ne i64 %158, 46
  %161 = icmp eq i64 %157, 0
  %162 = and i1 %160, %161
  br i1 %162, label %while.entry, label %while.end

if.entry5:                                        ; preds = %while.entry
  %163 = load ptr, ptr %memberidx8, align 8
  %164 = load i64, ptr %memberidx2.i, align 8
  %165 = load ptr, ptr %3, align 8
  %memberidx2.i.i131 = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx2.i.i131, align 4
  %167 = icmp slt i64 %164, %166
  br i1 %167, label %if.entry.i.i134, label %Parser_advance.exit.i138

if.entry.i.i134:                                  ; preds = %if.entry5
  %168 = add nsw i64 %164, 1
  store i64 %168, ptr %memberidx2.i, align 8
  %memberidx.i.i.i133 = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 1
  %169 = load ptr, ptr %memberidx.i.i.i133, align 8
  %170 = getelementptr inbounds ptr, ptr %169, i64 %168
  %171 = load ptr, ptr %170, align 8
  store ptr %171, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i138

Parser_advance.exit.i138:                         ; preds = %if.entry.i.i134, %if.entry5
  %172 = call ptr @malloc(i32 40)
  %173 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %173, ptr %172, align 8
  %memberidx1.i.i135 = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 3
  %174 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FieldNode_, ptr %174, align 8
  %memberidx.i.i24.i = getelementptr inbounds %Array_FieldNode_, ptr %174, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i24.i, align 4
  %memberidx1.i.i25.i = getelementptr inbounds %Array_FieldNode_, ptr %174, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i25.i, align 4
  %memberidx2.i.i26.i = getelementptr inbounds %Array_FieldNode_, ptr %174, i64 0, i32 1
  %175 = call ptr @malloc(i32 64)
  store ptr %175, ptr %memberidx2.i.i26.i, align 8
  store i64 0, ptr %memberidx.i.i24.i, align 4
  store ptr %174, ptr %memberidx1.i.i135, align 8
  %memberidx4.i.i136 = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 4
  %176 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MethodNode_, ptr %176, align 8
  %memberidx.i15.i.i = getelementptr inbounds %Array_MethodNode_, ptr %176, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i.i, align 4
  %memberidx1.i16.i.i = getelementptr inbounds %Array_MethodNode_, ptr %176, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i.i, align 4
  %memberidx2.i17.i.i = getelementptr inbounds %Array_MethodNode_, ptr %176, i64 0, i32 1
  %177 = call ptr @malloc(i32 64)
  store ptr %177, ptr %memberidx2.i17.i.i, align 8
  store i64 0, ptr %memberidx.i15.i.i, align 4
  store ptr %176, ptr %memberidx4.i.i136, align 8
  %memberidx7.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 1
  %178 = call ptr @malloc(i32 32)
  store ptr @VTableArray_GenericParameterNode_, ptr %178, align 8
  %memberidx.i18.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %178, i64 0, i32 2
  store i64 0, ptr %memberidx.i18.i.i, align 4
  %memberidx1.i19.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %178, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19.i.i, align 4
  %memberidx2.i20.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %178, i64 0, i32 1
  %179 = call ptr @malloc(i32 64)
  store ptr %179, ptr %memberidx2.i20.i.i, align 8
  store i64 0, ptr %memberidx.i18.i.i, align 4
  store ptr %178, ptr %memberidx7.i.i, align 8
  %memberidx10.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %172, i64 0, i32 2
  store ptr null, ptr %memberidx10.i.i, align 8
  %180 = load ptr, ptr %memberidx.i70, align 8
  %181 = load i64, ptr %180, align 4
  %182 = icmp eq i64 %181, 42
  br i1 %182, label %if.entry.i140, label %ifend.i141

if.entry.i140:                                    ; preds = %Parser_advance.exit.i138
  %183 = load i64, ptr %memberidx2.i, align 8
  %184 = load ptr, ptr %3, align 8
  %memberidx2.i.i30.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 2
  %185 = load i64, ptr %memberidx2.i.i30.i, align 4
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %if.entry.i.i33.i, label %Parser_advance.exit.i34.i

if.entry.i.i33.i:                                 ; preds = %if.entry.i140
  %187 = add nsw i64 %183, 1
  store i64 %187, ptr %memberidx2.i, align 8
  %memberidx.i.i.i32.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 1
  %188 = load ptr, ptr %memberidx.i.i.i32.i, align 8
  %189 = getelementptr inbounds ptr, ptr %188, i64 %187
  %190 = load ptr, ptr %189, align 8
  store ptr %190, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i34.i

Parser_advance.exit.i34.i:                        ; preds = %if.entry.i.i33.i, %if.entry.i140
  %191 = call ptr @malloc(i32 8)
  %192 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %192, ptr %191, align 8
  %193 = load i64, ptr %memberidx.i18.i.i, align 4
  %194 = load i64, ptr %memberidx1.i19.i.i, align 4
  %.not.i21.i.i = icmp slt i64 %193, %194
  br i1 %.not.i21.i.i, label %Parser_advance.exit.i34.i.Array_GenericParameterNode____sl__.exit26.i.i_crit_edge, label %if.entry.i24.i.i

Parser_advance.exit.i34.i.Array_GenericParameterNode____sl__.exit26.i.i_crit_edge: ; preds = %Parser_advance.exit.i34.i
  %.pre356 = load ptr, ptr %memberidx2.i20.i.i, align 8
  br label %Array_GenericParameterNode____sl__.exit26.i.i

if.entry.i24.i.i:                                 ; preds = %Parser_advance.exit.i34.i
  %195 = shl nuw i64 %194, 1
  store i64 %195, ptr %memberidx1.i19.i.i, align 4
  %196 = load ptr, ptr %memberidx2.i20.i.i, align 8
  %197 = shl i64 %194, 4
  %198 = call ptr @realloc(ptr %196, i64 %197)
  store ptr %198, ptr %memberidx2.i20.i.i, align 8
  %.pre355 = load i64, ptr %memberidx.i18.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit26.i.i

Array_GenericParameterNode____sl__.exit26.i.i:    ; preds = %Parser_advance.exit.i34.i.Array_GenericParameterNode____sl__.exit26.i.i_crit_edge, %if.entry.i24.i.i
  %199 = phi ptr [ %198, %if.entry.i24.i.i ], [ %.pre356, %Parser_advance.exit.i34.i.Array_GenericParameterNode____sl__.exit26.i.i_crit_edge ]
  %200 = phi i64 [ %.pre355, %if.entry.i24.i.i ], [ %193, %Parser_advance.exit.i34.i.Array_GenericParameterNode____sl__.exit26.i.i_crit_edge ]
  %201 = add nsw i64 %200, 1
  store i64 %201, ptr %memberidx.i18.i.i, align 4
  %202 = getelementptr inbounds ptr, ptr %199, i64 %200
  store ptr %191, ptr %202, align 8
  %203 = load ptr, ptr %memberidx.i70, align 8
  %204 = load i64, ptr %203, align 4
  %205 = icmp eq i64 %204, 3
  %206 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i29.i.i = getelementptr inbounds %Array_FloError_, ptr %206, i64 0, i32 2
  %207 = load i64, ptr %memberidx3.i29.i.i, align 4
  %208 = icmp eq i64 %207, 0
  %209 = and i1 %205, %208
  br i1 %209, label %while.entry.i36.i, label %Parser_parse_generic_parameters.exit.i

while.entry.i36.i:                                ; preds = %Array_GenericParameterNode____sl__.exit26.i.i, %Array_GenericParameterNode____sl__.exit.i.i
  %210 = load i64, ptr %memberidx2.i, align 8
  %211 = load ptr, ptr %3, align 8
  %memberidx2.i31.i.i = getelementptr inbounds %Array_Token_, ptr %211, i64 0, i32 2
  %212 = load i64, ptr %memberidx2.i31.i.i, align 4
  %213 = icmp slt i64 %210, %212
  br i1 %213, label %if.entry.i34.i.i, label %Parser_advance.exit35.i.i

if.entry.i34.i.i:                                 ; preds = %while.entry.i36.i
  %214 = add nsw i64 %210, 1
  store i64 %214, ptr %memberidx2.i, align 8
  %memberidx.i.i33.i.i = getelementptr inbounds %Array_Token_, ptr %211, i64 0, i32 1
  %215 = load ptr, ptr %memberidx.i.i33.i.i, align 8
  %216 = getelementptr inbounds ptr, ptr %215, i64 %214
  %217 = load ptr, ptr %216, align 8
  store ptr %217, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit35.i.i

Parser_advance.exit35.i.i:                        ; preds = %if.entry.i34.i.i, %while.entry.i36.i
  %218 = call ptr @malloc(i32 8)
  %219 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %219, ptr %218, align 8
  %220 = load i64, ptr %memberidx.i18.i.i, align 4
  %221 = load i64, ptr %memberidx1.i19.i.i, align 4
  %.not.i.i38.i = icmp slt i64 %220, %221
  br i1 %.not.i.i38.i, label %Parser_advance.exit35.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, label %if.entry.i18.i.i

Parser_advance.exit35.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_advance.exit35.i.i
  %.pre358 = load ptr, ptr %memberidx2.i20.i.i, align 8
  br label %Array_GenericParameterNode____sl__.exit.i.i

if.entry.i18.i.i:                                 ; preds = %Parser_advance.exit35.i.i
  %222 = shl nuw i64 %221, 1
  store i64 %222, ptr %memberidx1.i19.i.i, align 4
  %223 = load ptr, ptr %memberidx2.i20.i.i, align 8
  %224 = shl i64 %221, 4
  %225 = call ptr @realloc(ptr %223, i64 %224)
  store ptr %225, ptr %memberidx2.i20.i.i, align 8
  %.pre357 = load i64, ptr %memberidx.i18.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit.i.i

Array_GenericParameterNode____sl__.exit.i.i:      ; preds = %Parser_advance.exit35.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, %if.entry.i18.i.i
  %226 = phi ptr [ %225, %if.entry.i18.i.i ], [ %.pre358, %Parser_advance.exit35.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %227 = phi i64 [ %.pre357, %if.entry.i18.i.i ], [ %220, %Parser_advance.exit35.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %228 = add nsw i64 %227, 1
  store i64 %228, ptr %memberidx.i18.i.i, align 4
  %229 = getelementptr inbounds ptr, ptr %226, i64 %227
  store ptr %218, ptr %229, align 8
  %230 = load ptr, ptr %memberidx.i70, align 8
  %231 = load i64, ptr %230, align 4
  %232 = icmp eq i64 %231, 3
  %233 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %Array_FloError_, ptr %233, i64 0, i32 2
  %234 = load i64, ptr %memberidx3.i15.i.i, align 4
  %235 = icmp eq i64 %234, 0
  %236 = and i1 %232, %235
  br i1 %236, label %while.entry.i36.i, label %Parser_parse_generic_parameters.exit.i

Parser_parse_generic_parameters.exit.i:           ; preds = %Array_GenericParameterNode____sl__.exit.i.i, %Array_GenericParameterNode____sl__.exit26.i.i
  %237 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 41)
  %.pre359 = load ptr, ptr %memberidx.i70, align 8
  %.pre360 = load i64, ptr %.pre359, align 4
  br label %ifend.i141

ifend.i141:                                       ; preds = %Parser_parse_generic_parameters.exit.i, %Parser_advance.exit.i138
  %238 = phi i64 [ %.pre360, %Parser_parse_generic_parameters.exit.i ], [ %181, %Parser_advance.exit.i138 ]
  %239 = icmp eq i64 %238, 25
  br i1 %239, label %if.entry5.i, label %ifend7.i

if.entry5.i:                                      ; preds = %ifend.i141
  %240 = load i64, ptr %memberidx2.i, align 8
  %241 = load ptr, ptr %3, align 8
  %memberidx2.i43.i = getelementptr inbounds %Array_Token_, ptr %241, i64 0, i32 2
  %242 = load i64, ptr %memberidx2.i43.i, align 4
  %243 = icmp slt i64 %240, %242
  br i1 %243, label %if.entry.i46.i, label %Parser_advance.exit48.i

if.entry.i46.i:                                   ; preds = %if.entry5.i
  %244 = add nsw i64 %240, 1
  store i64 %244, ptr %memberidx2.i, align 8
  %memberidx.i.i45.i = getelementptr inbounds %Array_Token_, ptr %241, i64 0, i32 1
  %245 = load ptr, ptr %memberidx.i.i45.i, align 8
  %246 = getelementptr inbounds ptr, ptr %245, i64 %244
  %247 = load ptr, ptr %246, align 8
  store ptr %247, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit48.i

Parser_advance.exit48.i:                          ; preds = %if.entry.i46.i, %if.entry5.i
  %248 = call fastcc ptr @Parser_parse_object_type(ptr nonnull %3)
  store ptr %248, ptr %memberidx10.i.i, align 8
  %249 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre361 = load ptr, ptr %memberidx.i70, align 8
  %.pre362 = load i64, ptr %.pre361, align 4
  br label %ifend7.i

ifend7.i:                                         ; preds = %Parser_advance.exit48.i, %ifend.i141
  %250 = phi i64 [ %.pre362, %Parser_advance.exit48.i ], [ %238, %ifend.i141 ]
  %251 = icmp eq i64 %250, 33
  %252 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i52.i = getelementptr inbounds %Array_FloError_, ptr %252, i64 0, i32 2
  %253 = load i64, ptr %memberidx3.i.i52.i, align 4
  %254 = icmp eq i64 %253, 0
  %255 = and i1 %251, %254
  br i1 %255, label %while.entry.i53.i.preheader, label %Parser_new_lines.exit.i149

while.entry.i53.i.preheader:                      ; preds = %ifend7.i
  %256 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i143 = getelementptr inbounds %Array_Token_, ptr %256, i64 0, i32 2
  %memberidx.i.i.i54.i = getelementptr inbounds %Array_Token_, ptr %256, i64 0, i32 1
  %.pre363 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i53.i

while.entry.i53.i:                                ; preds = %while.entry.i53.i.preheader, %Parser_advance.exit.i56.i
  %257 = phi i64 [ %.pre363, %while.entry.i53.i.preheader ], [ %266, %Parser_advance.exit.i56.i ]
  %258 = load i64, ptr %memberidx2.i12.i.i143, align 4
  %259 = icmp slt i64 %257, %258
  br i1 %259, label %if.entry.i.i55.i, label %Parser_advance.exit.i56.i

if.entry.i.i55.i:                                 ; preds = %while.entry.i53.i
  %260 = add nsw i64 %257, 1
  store i64 %260, ptr %memberidx2.i, align 8
  %261 = load ptr, ptr %memberidx.i.i.i54.i, align 8
  %262 = getelementptr inbounds ptr, ptr %261, i64 %260
  %263 = load ptr, ptr %262, align 8
  store ptr %263, ptr %memberidx.i70, align 8
  %.pre364 = load i64, ptr %263, align 4
  %.pre365 = load i64, ptr %memberidx3.i.i52.i, align 4
  br label %Parser_advance.exit.i56.i

Parser_advance.exit.i56.i:                        ; preds = %if.entry.i.i55.i, %while.entry.i53.i
  %264 = phi i64 [ %.pre365, %if.entry.i.i55.i ], [ 0, %while.entry.i53.i ]
  %265 = phi i64 [ %.pre364, %if.entry.i.i55.i ], [ 33, %while.entry.i53.i ]
  %266 = phi i64 [ %260, %if.entry.i.i55.i ], [ %257, %while.entry.i53.i ]
  %267 = icmp eq i64 %265, 33
  %268 = icmp eq i64 %264, 0
  %269 = and i1 %267, %268
  br i1 %269, label %while.entry.i53.i, label %Parser_new_lines.exit.i149

Parser_new_lines.exit.i149:                       ; preds = %Parser_advance.exit.i56.i, %ifend7.i
  %270 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %271 = load ptr, ptr %memberidx.i70, align 8
  %272 = load i64, ptr %271, align 4
  %273 = icmp eq i64 %272, 33
  %274 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %274, i64 0, i32 2
  %275 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %276 = icmp eq i64 %275, 0
  %277 = and i1 %273, %276
  br i1 %277, label %while.entry.i.i.i.preheader, label %Parser_new_lines.exit.i.i

while.entry.i.i.i.preheader:                      ; preds = %Parser_new_lines.exit.i149
  %278 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 2
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 1
  %.pre366 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i.i

while.entry.i.i.i:                                ; preds = %while.entry.i.i.i.preheader, %Parser_advance.exit.i.i.i
  %279 = phi i64 [ 33, %while.entry.i.i.i.preheader ], [ %287, %Parser_advance.exit.i.i.i ]
  %280 = phi i64 [ %.pre366, %while.entry.i.i.i.preheader ], [ %290, %Parser_advance.exit.i.i.i ]
  %281 = load i64, ptr %memberidx2.i12.i.i.i, align 4
  %282 = icmp slt i64 %280, %281
  br i1 %282, label %if.entry.i.i.i.i, label %Parser_advance.exit.i.i.i

if.entry.i.i.i.i:                                 ; preds = %while.entry.i.i.i
  %283 = add nsw i64 %280, 1
  store i64 %283, ptr %memberidx2.i, align 8
  %284 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %285 = getelementptr inbounds ptr, ptr %284, i64 %283
  %286 = load ptr, ptr %285, align 8
  store ptr %286, ptr %memberidx.i70, align 8
  %.pre367 = load i64, ptr %286, align 4
  %.pre368 = load i64, ptr %memberidx3.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i

Parser_advance.exit.i.i.i:                        ; preds = %if.entry.i.i.i.i, %while.entry.i.i.i
  %287 = phi i64 [ %.pre367, %if.entry.i.i.i.i ], [ %279, %while.entry.i.i.i ]
  %288 = phi i64 [ %.pre368, %if.entry.i.i.i.i ], [ 0, %while.entry.i.i.i ]
  %289 = phi i64 [ %.pre367, %if.entry.i.i.i.i ], [ 33, %while.entry.i.i.i ]
  %290 = phi i64 [ %283, %if.entry.i.i.i.i ], [ %280, %while.entry.i.i.i ]
  %291 = icmp eq i64 %289, 33
  %292 = icmp eq i64 %288, 0
  %293 = and i1 %291, %292
  br i1 %293, label %while.entry.i.i.i, label %Parser_new_lines.exit.i.i

Parser_new_lines.exit.i.i:                        ; preds = %Parser_advance.exit.i.i.i, %Parser_new_lines.exit.i149
  %294 = phi i64 [ %272, %Parser_new_lines.exit.i149 ], [ %287, %Parser_advance.exit.i.i.i ]
  %295 = phi i64 [ %275, %Parser_new_lines.exit.i149 ], [ %288, %Parser_advance.exit.i.i.i ]
  %.fr = freeze i64 %295
  %296 = icmp eq i64 %.fr, 0
  br i1 %296, label %switch.early.test, label %while.end.i.i

switch.early.test:                                ; preds = %Parser_new_lines.exit.i.i
  switch i64 %294, label %while.entry.i.i151 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

while.entry.i.i151:                               ; preds = %switch.early.test, %switch.early.test313
  %297 = phi i64 [ %353, %switch.early.test313 ], [ %294, %switch.early.test ]
  switch i64 %297, label %while.entry.i.i151.ifend.i.i_crit_edge [
    i64 67, label %else.i.i
    i64 66, label %Parser_parse_access_modifier.exit.i.i.fold.split
    i64 68, label %else.i.i.fold.split
  ]

while.entry.i.i151.ifend.i.i_crit_edge:           ; preds = %while.entry.i.i151
  %.pre369 = load i64, ptr %memberidx2.i, align 8
  %.pre370 = load ptr, ptr %3, align 8
  br label %ifend.i.i

Parser_parse_access_modifier.exit.i.i.fold.split: ; preds = %while.entry.i.i151
  br label %else.i.i

while.end.i.i:                                    ; preds = %switch.early.test313, %switch.early.test313, %Parser_new_lines.exit115.i.i, %switch.early.test, %switch.early.test, %Parser_new_lines.exit.i.i
  %298 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  br label %Parser_parse_class.exit

else.i.i.fold.split:                              ; preds = %while.entry.i.i151
  br label %else.i.i

else.i.i:                                         ; preds = %while.entry.i.i151, %else.i.i.fold.split, %Parser_parse_access_modifier.exit.i.i.fold.split
  %common.ret.op.i.i.i.ph = phi i64 [ 1, %Parser_parse_access_modifier.exit.i.i.fold.split ], [ 2, %while.entry.i.i151 ], [ 3, %else.i.i.fold.split ]
  %299 = load i64, ptr %memberidx2.i, align 8
  %300 = load ptr, ptr %3, align 8
  %memberidx2.i61.i.i = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 2
  %301 = load i64, ptr %memberidx2.i61.i.i, align 4
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %if.entry.i.i.i152, label %ifend.i.i

if.entry.i.i.i152:                                ; preds = %else.i.i
  %303 = add nsw i64 %299, 1
  store i64 %303, ptr %memberidx2.i, align 8
  %memberidx.i.i63.i.i = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 1
  %304 = load ptr, ptr %memberidx.i.i63.i.i, align 8
  %305 = getelementptr inbounds ptr, ptr %304, i64 %303
  %306 = load ptr, ptr %305, align 8
  store ptr %306, ptr %memberidx.i70, align 8
  br label %ifend.i.i

ifend.i.i:                                        ; preds = %while.entry.i.i151.ifend.i.i_crit_edge, %else.i.i, %if.entry.i.i.i152
  %307 = phi ptr [ %300, %if.entry.i.i.i152 ], [ %300, %else.i.i ], [ %.pre370, %while.entry.i.i151.ifend.i.i_crit_edge ]
  %308 = phi i64 [ %303, %if.entry.i.i.i152 ], [ %299, %else.i.i ], [ %.pre369, %while.entry.i.i151.ifend.i.i_crit_edge ]
  %access_modifier.0.i.i = phi i64 [ %common.ret.op.i.i.i.ph, %if.entry.i.i.i152 ], [ %common.ret.op.i.i.i.ph, %else.i.i ], [ 2, %while.entry.i.i151.ifend.i.i_crit_edge ]
  %309 = add nsw i64 %308, 1
  %memberidx2.i66.i.i = getelementptr inbounds %Array_Token_, ptr %307, i64 0, i32 2
  %310 = load i64, ptr %memberidx2.i66.i.i, align 4
  %311 = icmp slt i64 %309, %310
  br i1 %311, label %Parser_peek.exit.i.i, label %Parser_peek.exit.i.i.thread

Parser_peek.exit.i.i:                             ; preds = %ifend.i.i
  %memberidx.i.i68.i.i = getelementptr inbounds %Array_Token_, ptr %307, i64 0, i32 1
  %312 = load ptr, ptr %memberidx.i.i68.i.i, align 8
  %313 = getelementptr inbounds ptr, ptr %312, i64 %309
  %common.ret.op.i67.i.i = load ptr, ptr %313, align 8
  %314 = load i64, ptr %common.ret.op.i67.i.i, align 4
  %315 = icmp eq i64 %314, 1
  br i1 %315, label %if.entry3.i.i, label %Parser_peek.exit100.i.i

Parser_peek.exit.i.i.thread:                      ; preds = %ifend.i.i
  %316 = add i64 %310, -1
  %memberidx.i12.i.i.i = getelementptr inbounds %Array_Token_, ptr %307, i64 0, i32 1
  %317 = load ptr, ptr %memberidx.i12.i.i.i, align 8
  %318 = getelementptr inbounds ptr, ptr %317, i64 %316
  %common.ret.op.i67.i.i317 = load ptr, ptr %318, align 8
  %319 = load i64, ptr %common.ret.op.i67.i.i317, align 4
  %320 = icmp eq i64 %319, 1
  br i1 %320, label %if.entry3.i.i, label %Parser_peek.exit100.i.i

if.entry3.i.i:                                    ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %321 = call ptr @malloc(i32 32)
  %322 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %322, ptr %321, align 8
  %memberidx1.i77.i.i = getelementptr inbounds %FieldNode, ptr %321, i64 0, i32 2
  store ptr null, ptr %memberidx1.i77.i.i, align 8
  %323 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 1)
  %memberidx6.i.i = getelementptr inbounds %FieldNode, ptr %321, i64 0, i32 3
  %324 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %324, ptr %memberidx6.i.i, align 8
  %325 = load ptr, ptr %memberidx.i70, align 8
  %326 = load i64, ptr %325, align 4
  %327 = icmp eq i64 %326, 38
  br i1 %327, label %if.entry9.i.i, label %ifend11.i.i

Parser_peek.exit100.i.i:                          ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %328 = phi i64 [ %314, %Parser_peek.exit.i.i ], [ %319, %Parser_peek.exit.i.i.thread ]
  %329 = icmp eq i64 %328, 25
  br i1 %329, label %if.entry16.i.i, label %else17.i.i

ifend5.i.i:                                       ; preds = %Array_MethodNode____sl__.exit.i.i, %Array_FieldNode____sl__.exit.i.i
  %330 = load ptr, ptr %memberidx.i70, align 8
  %331 = load i64, ptr %330, align 4
  %332 = icmp eq i64 %331, 33
  %333 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i104.i.i = getelementptr inbounds %Array_FloError_, ptr %333, i64 0, i32 2
  %334 = load i64, ptr %memberidx3.i.i104.i.i, align 4
  %335 = icmp eq i64 %334, 0
  %336 = and i1 %332, %335
  br i1 %336, label %while.entry.i107.i.i.preheader, label %Parser_new_lines.exit115.i.i

while.entry.i107.i.i.preheader:                   ; preds = %ifend5.i.i
  %337 = load ptr, ptr %3, align 8
  %memberidx2.i12.i106.i.i = getelementptr inbounds %Array_Token_, ptr %337, i64 0, i32 2
  %memberidx.i.i.i109.i.i = getelementptr inbounds %Array_Token_, ptr %337, i64 0, i32 1
  %.pre388 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i107.i.i

while.entry.i107.i.i:                             ; preds = %while.entry.i107.i.i.preheader, %Parser_advance.exit.i114.i.i
  %338 = phi i64 [ 33, %while.entry.i107.i.i.preheader ], [ %346, %Parser_advance.exit.i114.i.i ]
  %339 = phi i64 [ %.pre388, %while.entry.i107.i.i.preheader ], [ %349, %Parser_advance.exit.i114.i.i ]
  %340 = load i64, ptr %memberidx2.i12.i106.i.i, align 4
  %341 = icmp slt i64 %339, %340
  br i1 %341, label %if.entry.i.i110.i.i, label %Parser_advance.exit.i114.i.i

if.entry.i.i110.i.i:                              ; preds = %while.entry.i107.i.i
  %342 = add nsw i64 %339, 1
  store i64 %342, ptr %memberidx2.i, align 8
  %343 = load ptr, ptr %memberidx.i.i.i109.i.i, align 8
  %344 = getelementptr inbounds ptr, ptr %343, i64 %342
  %345 = load ptr, ptr %344, align 8
  store ptr %345, ptr %memberidx.i70, align 8
  %.pre389 = load i64, ptr %345, align 4
  %.pre390 = load i64, ptr %memberidx3.i.i104.i.i, align 4
  br label %Parser_advance.exit.i114.i.i

Parser_advance.exit.i114.i.i:                     ; preds = %if.entry.i.i110.i.i, %while.entry.i107.i.i
  %346 = phi i64 [ %.pre389, %if.entry.i.i110.i.i ], [ %338, %while.entry.i107.i.i ]
  %347 = phi i64 [ %.pre390, %if.entry.i.i110.i.i ], [ 0, %while.entry.i107.i.i ]
  %348 = phi i64 [ %.pre389, %if.entry.i.i110.i.i ], [ 33, %while.entry.i107.i.i ]
  %349 = phi i64 [ %342, %if.entry.i.i110.i.i ], [ %339, %while.entry.i107.i.i ]
  %350 = icmp eq i64 %348, 33
  %351 = icmp eq i64 %347, 0
  %352 = and i1 %350, %351
  br i1 %352, label %while.entry.i107.i.i, label %Parser_new_lines.exit115.i.i

Parser_new_lines.exit115.i.i:                     ; preds = %Parser_advance.exit.i114.i.i, %ifend5.i.i
  %353 = phi i64 [ %331, %ifend5.i.i ], [ %346, %Parser_advance.exit.i114.i.i ]
  %354 = phi i64 [ %334, %ifend5.i.i ], [ %347, %Parser_advance.exit.i114.i.i ]
  %.fr318 = freeze i64 %354
  %355 = icmp eq i64 %.fr318, 0
  br i1 %355, label %switch.early.test313, label %while.end.i.i

switch.early.test313:                             ; preds = %Parser_new_lines.exit115.i.i
  switch i64 %353, label %while.entry.i.i151 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

if.entry9.i.i:                                    ; preds = %if.entry3.i.i
  %356 = load i64, ptr %memberidx2.i, align 8
  %357 = load ptr, ptr %3, align 8
  %memberidx2.i120.i.i = getelementptr inbounds %Array_Token_, ptr %357, i64 0, i32 2
  %358 = load i64, ptr %memberidx2.i120.i.i, align 4
  %359 = icmp slt i64 %356, %358
  br i1 %359, label %if.entry.i123.i.i, label %Parser_advance.exit125.i.i

if.entry.i123.i.i:                                ; preds = %if.entry9.i.i
  %360 = add nsw i64 %356, 1
  store i64 %360, ptr %memberidx2.i, align 8
  %memberidx.i.i122.i.i = getelementptr inbounds %Array_Token_, ptr %357, i64 0, i32 1
  %361 = load ptr, ptr %memberidx.i.i122.i.i, align 8
  %362 = getelementptr inbounds ptr, ptr %361, i64 %360
  %363 = load ptr, ptr %362, align 8
  store ptr %363, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit125.i.i

Parser_advance.exit125.i.i:                       ; preds = %if.entry.i123.i.i, %if.entry9.i.i
  %364 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %364, ptr %memberidx1.i77.i.i, align 8
  br label %ifend11.i.i

ifend11.i.i:                                      ; preds = %Parser_advance.exit125.i.i, %if.entry3.i.i
  %memberidx13.i.i = getelementptr inbounds %FieldNode, ptr %321, i64 0, i32 1
  store i64 %access_modifier.0.i.i, ptr %memberidx13.i.i, align 4
  %365 = load ptr, ptr %memberidx1.i.i135, align 8
  %memberidx.i126.i.i = getelementptr inbounds %Array_FieldNode_, ptr %365, i64 0, i32 2
  %366 = load i64, ptr %memberidx.i126.i.i, align 4
  %memberidx1.i127.i.i = getelementptr inbounds %Array_FieldNode_, ptr %365, i64 0, i32 3
  %367 = load i64, ptr %memberidx1.i127.i.i, align 4
  %.not.i128.i.i = icmp slt i64 %366, %367
  br i1 %.not.i128.i.i, label %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge, label %if.entry.i131.i.i

ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge: ; preds = %ifend11.i.i
  %memberidx4.i132.i.i.phi.trans.insert = getelementptr inbounds %Array_FieldNode_, ptr %365, i64 0, i32 1
  %.pre387 = load ptr, ptr %memberidx4.i132.i.i.phi.trans.insert, align 8
  br label %Array_FieldNode____sl__.exit.i.i

if.entry.i131.i.i:                                ; preds = %ifend11.i.i
  %368 = shl nuw i64 %367, 1
  store i64 %368, ptr %memberidx1.i127.i.i, align 4
  %memberidx2.i.i130.i.i = getelementptr inbounds %Array_FieldNode_, ptr %365, i64 0, i32 1
  %369 = load ptr, ptr %memberidx2.i.i130.i.i, align 8
  %370 = shl i64 %367, 4
  %371 = call ptr @realloc(ptr %369, i64 %370)
  store ptr %371, ptr %memberidx2.i.i130.i.i, align 8
  %.pre386 = load i64, ptr %memberidx.i126.i.i, align 4
  br label %Array_FieldNode____sl__.exit.i.i

Array_FieldNode____sl__.exit.i.i:                 ; preds = %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge, %if.entry.i131.i.i
  %372 = phi ptr [ %371, %if.entry.i131.i.i ], [ %.pre387, %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge ]
  %373 = phi i64 [ %.pre386, %if.entry.i131.i.i ], [ %366, %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge ]
  %374 = add nsw i64 %373, 1
  store i64 %374, ptr %memberidx.i126.i.i, align 4
  %375 = getelementptr inbounds ptr, ptr %372, i64 %373
  store ptr %321, ptr %375, align 8
  br label %ifend5.i.i

if.entry16.i.i:                                   ; preds = %Parser_peek.exit100.i.i
  %376 = call ptr @malloc(i32 42)
  %377 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %377, ptr %376, align 8
  %memberidx1.i.i78.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 1
  %378 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ArgNode_, ptr %378, align 8
  %memberidx.i.i.i79.i.i = getelementptr inbounds %Array_ArgNode_, ptr %378, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i79.i.i, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %378, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i80.i.i = getelementptr inbounds %Array_ArgNode_, ptr %378, i64 0, i32 1
  %379 = call ptr @malloc(i32 64)
  store ptr %379, ptr %memberidx2.i.i.i80.i.i, align 8
  store i64 0, ptr %memberidx.i.i.i79.i.i, align 4
  store ptr %378, ptr %memberidx1.i.i78.i.i, align 8
  %memberidx4.i.i82.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 5
  store i1 true, ptr %memberidx4.i.i82.i.i, align 1
  %memberidx5.i.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 6
  store i1 false, ptr %memberidx5.i.i.i.i, align 1
  %380 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %381 = load ptr, ptr %memberidx.i70, align 8
  %382 = load i64, ptr %381, align 4
  %383 = icmp eq i64 %382, 33
  %384 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %384, i64 0, i32 2
  %385 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  %386 = icmp eq i64 %385, 0
  %387 = and i1 %383, %386
  br i1 %387, label %while.entry.i.i.i.i.preheader, label %Parser_new_lines.exit.i.i.i

while.entry.i.i.i.i.preheader:                    ; preds = %if.entry16.i.i
  %388 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %388, i64 0, i32 2
  %memberidx.i.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %388, i64 0, i32 1
  %389 = load i64, ptr %memberidx2.i, align 8
  %390 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %391 = icmp slt i64 %389, %390
  br i1 %391, label %while.entry.i.i.i.i, label %while.entry.i.i.i.i.us

while.entry.i.i.i.i.us:                           ; preds = %while.entry.i.i.i.i.preheader, %while.entry.i.i.i.i.us
  br label %while.entry.i.i.i.i.us

while.entry.i.i.i.i:                              ; preds = %while.entry.i.i.i.i.preheader, %Parser_advance.exit.i.i.i.i
  %392 = phi i64 [ %401, %Parser_advance.exit.i.i.i.i ], [ 33, %while.entry.i.i.i.i.preheader ]
  %393 = phi ptr [ %404, %Parser_advance.exit.i.i.i.i ], [ %381, %while.entry.i.i.i.i.preheader ]
  %394 = phi i64 [ %405, %Parser_advance.exit.i.i.i.i ], [ %389, %while.entry.i.i.i.i.preheader ]
  %395 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %396 = icmp slt i64 %394, %395
  br i1 %396, label %if.entry.i.i.i.i.i, label %Parser_advance.exit.i.i.i.i

if.entry.i.i.i.i.i:                               ; preds = %while.entry.i.i.i.i
  %397 = add nsw i64 %394, 1
  store i64 %397, ptr %memberidx2.i, align 8
  %398 = load ptr, ptr %memberidx.i.i.i.i.i.i, align 8
  %399 = getelementptr inbounds ptr, ptr %398, i64 %397
  %400 = load ptr, ptr %399, align 8
  store ptr %400, ptr %memberidx.i70, align 8
  %.pre374 = load i64, ptr %400, align 4
  %.pre375 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i.i

Parser_advance.exit.i.i.i.i:                      ; preds = %if.entry.i.i.i.i.i, %while.entry.i.i.i.i
  %401 = phi i64 [ %.pre374, %if.entry.i.i.i.i.i ], [ %392, %while.entry.i.i.i.i ]
  %402 = phi i64 [ %.pre375, %if.entry.i.i.i.i.i ], [ 0, %while.entry.i.i.i.i ]
  %403 = phi i64 [ %.pre374, %if.entry.i.i.i.i.i ], [ 33, %while.entry.i.i.i.i ]
  %404 = phi ptr [ %400, %if.entry.i.i.i.i.i ], [ %393, %while.entry.i.i.i.i ]
  %405 = phi i64 [ %397, %if.entry.i.i.i.i.i ], [ %394, %while.entry.i.i.i.i ]
  %406 = icmp eq i64 %403, 33
  %407 = icmp eq i64 %402, 0
  %408 = and i1 %406, %407
  br i1 %408, label %while.entry.i.i.i.i, label %Parser_new_lines.exit.i.i.i

Parser_new_lines.exit.i.i.i:                      ; preds = %Parser_advance.exit.i.i.i.i, %if.entry16.i.i
  %409 = phi i64 [ %382, %if.entry16.i.i ], [ %401, %Parser_advance.exit.i.i.i.i ]
  %410 = phi ptr [ %381, %if.entry16.i.i ], [ %404, %Parser_advance.exit.i.i.i.i ]
  %.not.i85.i.i = icmp eq i64 %409, 26
  br i1 %.not.i85.i.i, label %ifend.i90.i.i, label %if.entry.i88.i.i

if.entry.i88.i.i:                                 ; preds = %Parser_new_lines.exit.i.i.i
  %memberidx3.i86.i.i = getelementptr inbounds %IdentifierToken, ptr %410, i64 0, i32 2
  %411 = load ptr, ptr %memberidx3.i86.i.i, align 8
  %412 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %412, align 8
  %413 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %413, align 8
  %memberidx.i.i60.i.i.i = getelementptr inbounds %string, ptr %413, i64 0, i32 1
  store ptr %412, ptr %memberidx.i.i60.i.i.i, align 8
  %memberidx1.i.i61.i.i.i = getelementptr inbounds %string, ptr %413, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i61.i.i.i, align 4
  %memberidx2.i.i62.i.i.i = getelementptr inbounds %string, ptr %413, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i62.i.i.i, align 4
  %memberidx.i63.i.i.i = getelementptr inbounds %string, ptr %411, i64 0, i32 2
  %414 = load i64, ptr %memberidx.i63.i.i.i, align 4
  %.not.i.i87.i.i = icmp eq i64 %414, 4
  br i1 %.not.i.i87.i.i, label %ifend.i.i.i.i, label %ifend.i90.i.i

ifend.i.i.i.i:                                    ; preds = %if.entry.i88.i.i
  %memberidx2.i.i89.i.i = getelementptr inbounds %string, ptr %411, i64 0, i32 1
  %415 = load ptr, ptr %memberidx2.i.i89.i.i, align 8
  %416 = call i64 @memcmp(ptr %415, ptr nonnull %412, i64 4)
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %if.entry4.i.i.i, label %ifend.i90.i.i

ifend.i90.i.i:                                    ; preds = %if.entry.i88.i.i, %if.entry4.i.i.i, %if.entry.i.i91.i.i, %ifend.i.i.i.i, %Parser_new_lines.exit.i.i.i
  %418 = load ptr, ptr %memberidx.i70, align 8
  %419 = load i64, ptr %418, align 4
  %.not57.i.i.i = icmp eq i64 %419, 26
  br i1 %.not57.i.i.i, label %Parser_new_lines.exit85.i.i.i, label %if.entry10.i.i.i

if.entry4.i.i.i:                                  ; preds = %ifend.i.i.i.i
  store i1 false, ptr %memberidx4.i.i82.i.i, align 1
  %420 = load i64, ptr %memberidx2.i, align 8
  %421 = load ptr, ptr %3, align 8
  %memberidx2.i67.i.i.i = getelementptr inbounds %Array_Token_, ptr %421, i64 0, i32 2
  %422 = load i64, ptr %memberidx2.i67.i.i.i, align 4
  %423 = icmp slt i64 %420, %422
  br i1 %423, label %if.entry.i.i91.i.i, label %ifend.i90.i.i

if.entry.i.i91.i.i:                               ; preds = %if.entry4.i.i.i
  %424 = add nsw i64 %420, 1
  store i64 %424, ptr %memberidx2.i, align 8
  %memberidx.i.i69.i.i.i = getelementptr inbounds %Array_Token_, ptr %421, i64 0, i32 1
  %425 = load ptr, ptr %memberidx.i.i69.i.i.i, align 8
  %426 = getelementptr inbounds ptr, ptr %425, i64 %424
  %427 = load ptr, ptr %426, align 8
  store ptr %427, ptr %memberidx.i70, align 8
  br label %ifend.i90.i.i

if.entry10.i.i.i:                                 ; preds = %ifend.i90.i.i
  %428 = load i1, ptr %memberidx4.i.i82.i.i, align 1
  br i1 %428, label %ifend12.i.i.i, label %if.entry14.i.i.i

ifend12.i.i.i:                                    ; preds = %if.entry10.i.i.i, %if.entry14.i.i.i
  %429 = load ptr, ptr %memberidx1.i.i78.i.i, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %429)
  %.pre376 = load ptr, ptr %memberidx.i70, align 8
  %.pre377 = load i64, ptr %.pre376, align 4
  %430 = icmp eq i64 %.pre377, 33
  %431 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i74.i.i.i = getelementptr inbounds %Array_FloError_, ptr %431, i64 0, i32 2
  %432 = load i64, ptr %memberidx3.i.i74.i.i.i, align 4
  %433 = icmp eq i64 %432, 0
  %434 = and i1 %430, %433
  br i1 %434, label %while.entry.i77.i.i.i.preheader, label %Parser_new_lines.exit85.i.i.i

while.entry.i77.i.i.i.preheader:                  ; preds = %ifend12.i.i.i
  %435 = load ptr, ptr %3, align 8
  %memberidx2.i12.i76.i.i.i = getelementptr inbounds %Array_Token_, ptr %435, i64 0, i32 2
  %memberidx.i.i.i79.i.i.i = getelementptr inbounds %Array_Token_, ptr %435, i64 0, i32 1
  %.pre378 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i77.i.i.i

while.entry.i77.i.i.i:                            ; preds = %while.entry.i77.i.i.i.preheader, %Parser_advance.exit.i84.i.i.i
  %436 = phi i64 [ %.pre378, %while.entry.i77.i.i.i.preheader ], [ %445, %Parser_advance.exit.i84.i.i.i ]
  %437 = load i64, ptr %memberidx2.i12.i76.i.i.i, align 4
  %438 = icmp slt i64 %436, %437
  br i1 %438, label %if.entry.i.i80.i.i.i, label %Parser_advance.exit.i84.i.i.i

if.entry.i.i80.i.i.i:                             ; preds = %while.entry.i77.i.i.i
  %439 = add nsw i64 %436, 1
  store i64 %439, ptr %memberidx2.i, align 8
  %440 = load ptr, ptr %memberidx.i.i.i79.i.i.i, align 8
  %441 = getelementptr inbounds ptr, ptr %440, i64 %439
  %442 = load ptr, ptr %441, align 8
  store ptr %442, ptr %memberidx.i70, align 8
  %.pre379 = load i64, ptr %442, align 4
  %.pre380 = load i64, ptr %memberidx3.i.i74.i.i.i, align 4
  br label %Parser_advance.exit.i84.i.i.i

Parser_advance.exit.i84.i.i.i:                    ; preds = %if.entry.i.i80.i.i.i, %while.entry.i77.i.i.i
  %443 = phi i64 [ %.pre380, %if.entry.i.i80.i.i.i ], [ 0, %while.entry.i77.i.i.i ]
  %444 = phi i64 [ %.pre379, %if.entry.i.i80.i.i.i ], [ 33, %while.entry.i77.i.i.i ]
  %445 = phi i64 [ %439, %if.entry.i.i80.i.i.i ], [ %436, %while.entry.i77.i.i.i ]
  %446 = icmp eq i64 %444, 33
  %447 = icmp eq i64 %443, 0
  %448 = and i1 %446, %447
  br i1 %448, label %while.entry.i77.i.i.i, label %Parser_new_lines.exit85.i.i.i

Parser_new_lines.exit85.i.i.i:                    ; preds = %Parser_advance.exit.i84.i.i.i, %ifend.i90.i.i, %ifend12.i.i.i
  %449 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %450 = load ptr, ptr %memberidx.i70, align 8
  %451 = load i64, ptr %450, align 4
  %452 = icmp eq i64 %451, 1
  br i1 %452, label %if.entry20.i.i.i, label %else21.i.i.i

if.entry14.i.i.i:                                 ; preds = %if.entry10.i.i.i
  %453 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 3)
  br label %ifend12.i.i.i

if.entry20.i.i.i:                                 ; preds = %Parser_new_lines.exit85.i.i.i
  %454 = load i64, ptr %memberidx2.i, align 8
  %455 = load ptr, ptr %3, align 8
  %memberidx2.i87.i.i.i = getelementptr inbounds %Array_Token_, ptr %455, i64 0, i32 2
  %456 = load i64, ptr %memberidx2.i87.i.i.i, align 4
  %457 = icmp slt i64 %454, %456
  br i1 %457, label %if.entry.i90.i.i.i, label %Parser_advance.exit92.i.i.i

if.entry.i90.i.i.i:                               ; preds = %if.entry20.i.i.i
  %458 = add nsw i64 %454, 1
  store i64 %458, ptr %memberidx2.i, align 8
  %memberidx.i.i89.i.i.i = getelementptr inbounds %Array_Token_, ptr %455, i64 0, i32 1
  %459 = load ptr, ptr %memberidx.i.i89.i.i.i, align 8
  %460 = getelementptr inbounds ptr, ptr %459, i64 %458
  %461 = load ptr, ptr %460, align 8
  store ptr %461, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit92.i.i.i

Parser_advance.exit92.i.i.i:                      ; preds = %if.entry.i90.i.i.i, %if.entry20.i.i.i
  %memberidx23.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 4
  %462 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %462, ptr %memberidx23.i.i.i, align 8
  br label %ifend22.i.i.i

else21.i.i.i:                                     ; preds = %Parser_new_lines.exit85.i.i.i
  %463 = call ptr @malloc(i32 24)
  %464 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %464, align 8
  %465 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %465, align 8
  %memberidx.i.i114.i.i.i = getelementptr inbounds %string, ptr %465, i64 0, i32 1
  store ptr %464, ptr %memberidx.i.i114.i.i.i, align 8
  %memberidx1.i.i115.i.i.i = getelementptr inbounds %string, ptr %465, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i115.i.i.i, align 4
  %memberidx2.i.i116.i.i.i = getelementptr inbounds %string, ptr %465, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i116.i.i.i, align 4
  %466 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %466, i8 0, i64 32, i1 false)
  store i64 53, ptr %463, align 4
  %memberidx1.i.i120.i.i.i = getelementptr inbounds %Token, ptr %463, i64 0, i32 1
  store ptr %466, ptr %memberidx1.i.i120.i.i.i, align 8
  %memberidx.i121.i.i.i = getelementptr inbounds %IdentifierToken, ptr %463, i64 0, i32 2
  store ptr %465, ptr %memberidx.i121.i.i.i, align 8
  %memberidx24.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 4
  %467 = call ptr @malloc(i32 32)
  %468 = load ptr, ptr %memberidx1.i.i120.i.i.i, align 8
  store ptr %468, ptr %467, align 8
  %memberidx.i.i108.i.i.i = getelementptr inbounds %TypeNode, ptr %467, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i108.i.i.i, align 4
  %memberidx.i109.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %467, i64 0, i32 2
  store ptr %463, ptr %memberidx.i109.i.i.i, align 8
  %memberidx1.i110.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %467, i64 0, i32 3
  %469 = call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %469, align 8
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %469, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  %memberidx1.i.i111.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %469, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i111.i.i.i, align 4
  %memberidx2.i.i112.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %469, i64 0, i32 1
  %470 = call ptr @malloc(i32 64)
  store ptr %470, ptr %memberidx2.i.i112.i.i.i, align 8
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  store ptr %469, ptr %memberidx1.i110.i.i.i, align 8
  store ptr %467, ptr %memberidx24.i.i.i, align 8
  br label %ifend22.i.i.i

ifend22.i.i.i:                                    ; preds = %else21.i.i.i, %Parser_advance.exit92.i.i.i
  %471 = load ptr, ptr %memberidx.i70, align 8
  %472 = load i64, ptr %471, align 4
  %473 = icmp eq i64 %472, 33
  %474 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i96.i.i.i = getelementptr inbounds %Array_FloError_, ptr %474, i64 0, i32 2
  %475 = load i64, ptr %memberidx3.i.i96.i.i.i, align 4
  %476 = icmp eq i64 %475, 0
  %477 = and i1 %473, %476
  br i1 %477, label %while.entry.i99.i.i.i.preheader, label %Parser_new_lines.exit107.i.i.i

while.entry.i99.i.i.i.preheader:                  ; preds = %ifend22.i.i.i
  %478 = load ptr, ptr %3, align 8
  %memberidx2.i12.i98.i.i.i = getelementptr inbounds %Array_Token_, ptr %478, i64 0, i32 2
  %memberidx.i.i.i101.i.i.i = getelementptr inbounds %Array_Token_, ptr %478, i64 0, i32 1
  %.pre381 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i99.i.i.i

while.entry.i99.i.i.i:                            ; preds = %while.entry.i99.i.i.i.preheader, %Parser_advance.exit.i106.i.i.i
  %479 = phi i64 [ 33, %while.entry.i99.i.i.i.preheader ], [ %487, %Parser_advance.exit.i106.i.i.i ]
  %480 = phi i64 [ %.pre381, %while.entry.i99.i.i.i.preheader ], [ %490, %Parser_advance.exit.i106.i.i.i ]
  %481 = load i64, ptr %memberidx2.i12.i98.i.i.i, align 4
  %482 = icmp slt i64 %480, %481
  br i1 %482, label %if.entry.i.i102.i.i.i, label %Parser_advance.exit.i106.i.i.i

if.entry.i.i102.i.i.i:                            ; preds = %while.entry.i99.i.i.i
  %483 = add nsw i64 %480, 1
  store i64 %483, ptr %memberidx2.i, align 8
  %484 = load ptr, ptr %memberidx.i.i.i101.i.i.i, align 8
  %485 = getelementptr inbounds ptr, ptr %484, i64 %483
  %486 = load ptr, ptr %485, align 8
  store ptr %486, ptr %memberidx.i70, align 8
  %.pre382 = load i64, ptr %486, align 4
  %.pre383 = load i64, ptr %memberidx3.i.i96.i.i.i, align 4
  br label %Parser_advance.exit.i106.i.i.i

Parser_advance.exit.i106.i.i.i:                   ; preds = %if.entry.i.i102.i.i.i, %while.entry.i99.i.i.i
  %487 = phi i64 [ %.pre382, %if.entry.i.i102.i.i.i ], [ %479, %while.entry.i99.i.i.i ]
  %488 = phi i64 [ %.pre383, %if.entry.i.i102.i.i.i ], [ 0, %while.entry.i99.i.i.i ]
  %489 = phi i64 [ %.pre382, %if.entry.i.i102.i.i.i ], [ 33, %while.entry.i99.i.i.i ]
  %490 = phi i64 [ %483, %if.entry.i.i102.i.i.i ], [ %480, %while.entry.i99.i.i.i ]
  %491 = icmp eq i64 %489, 33
  %492 = icmp eq i64 %488, 0
  %493 = and i1 %491, %492
  br i1 %493, label %while.entry.i99.i.i.i, label %Parser_new_lines.exit107.i.i.i

Parser_new_lines.exit107.i.i.i:                   ; preds = %Parser_advance.exit.i106.i.i.i, %ifend22.i.i.i
  %494 = phi i64 [ %472, %ifend22.i.i.i ], [ %487, %Parser_advance.exit.i106.i.i.i ]
  %495 = icmp eq i64 %494, 27
  br i1 %495, label %if.entry28.i.i.i, label %else29.i.i.i

if.entry28.i.i.i:                                 ; preds = %Parser_new_lines.exit107.i.i.i
  %memberidx31.i.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 2
  %496 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %496, ptr %memberidx31.i.i.i, align 8
  br label %Parser_parse_method.exit.i.i

else29.i.i.i:                                     ; preds = %Parser_new_lines.exit107.i.i.i
  store i1 true, ptr %memberidx5.i.i.i.i, align 1
  br label %Parser_parse_method.exit.i.i

Parser_parse_method.exit.i.i:                     ; preds = %else29.i.i.i, %if.entry28.i.i.i
  %memberidx19.i.i = getelementptr inbounds %MethodNode, ptr %376, i64 0, i32 3
  store i64 %access_modifier.0.i.i, ptr %memberidx19.i.i, align 4
  %497 = load ptr, ptr %memberidx4.i.i136, align 8
  %memberidx.i71.i.i = getelementptr inbounds %Array_MethodNode_, ptr %497, i64 0, i32 2
  %498 = load i64, ptr %memberidx.i71.i.i, align 4
  %memberidx1.i72.i.i = getelementptr inbounds %Array_MethodNode_, ptr %497, i64 0, i32 3
  %499 = load i64, ptr %memberidx1.i72.i.i, align 4
  %.not.i.i.i = icmp slt i64 %498, %499
  br i1 %.not.i.i.i, label %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge, label %if.entry.i75.i.i

Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_parse_method.exit.i.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_MethodNode_, ptr %497, i64 0, i32 1
  %.pre385 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %Array_MethodNode____sl__.exit.i.i

if.entry.i75.i.i:                                 ; preds = %Parser_parse_method.exit.i.i
  %500 = shl nuw i64 %499, 1
  store i64 %500, ptr %memberidx1.i72.i.i, align 4
  %memberidx2.i.i74.i.i = getelementptr inbounds %Array_MethodNode_, ptr %497, i64 0, i32 1
  %501 = load ptr, ptr %memberidx2.i.i74.i.i, align 8
  %502 = shl i64 %499, 4
  %503 = call ptr @realloc(ptr %501, i64 %502)
  store ptr %503, ptr %memberidx2.i.i74.i.i, align 8
  %.pre384 = load i64, ptr %memberidx.i71.i.i, align 4
  br label %Array_MethodNode____sl__.exit.i.i

Array_MethodNode____sl__.exit.i.i:                ; preds = %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge, %if.entry.i75.i.i
  %504 = phi ptr [ %503, %if.entry.i75.i.i ], [ %.pre385, %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge ]
  %505 = phi i64 [ %.pre384, %if.entry.i75.i.i ], [ %498, %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge ]
  %506 = add nsw i64 %505, 1
  store i64 %506, ptr %memberidx.i71.i.i, align 4
  %507 = getelementptr inbounds ptr, ptr %504, i64 %505
  store ptr %376, ptr %507, align 8
  br label %ifend5.i.i

else17.i.i:                                       ; preds = %Parser_peek.exit100.i.i
  %508 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %508, ptr noundef nonnull align 8 dereferenceable(19) @78, i64 19, i1 false)
  %509 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %509, align 8
  %memberidx.i.i57.i.i = getelementptr inbounds %string, ptr %509, i64 0, i32 1
  store ptr %508, ptr %memberidx.i.i57.i.i, align 8
  %memberidx1.i.i58.i.i = getelementptr inbounds %string, ptr %509, i64 0, i32 2
  store i64 19, ptr %memberidx1.i.i58.i.i, align 4
  %memberidx2.i.i59.i.i = getelementptr inbounds %string, ptr %509, i64 0, i32 3
  store i64 19, ptr %memberidx2.i.i59.i.i, align 4
  %510 = load ptr, ptr %memberidx1.i, align 8
  %511 = call ptr @malloc(i32 24)
  %512 = load ptr, ptr %memberidx.i70, align 8
  %memberidx2.i.i.i155 = getelementptr inbounds %Token, ptr %512, i64 0, i32 1
  %513 = load ptr, ptr %memberidx2.i.i.i155, align 8
  store i64 2, ptr %511, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloError, ptr %511, i64 0, i32 2
  store ptr %513, ptr %memberidx1.i.i.i.i, align 8
  %memberidx2.i.i50.i.i = getelementptr inbounds %FloError, ptr %511, i64 0, i32 1
  store ptr %509, ptr %memberidx2.i.i50.i.i, align 8
  %memberidx.i.i51.i.i = getelementptr inbounds %Array_FloError_, ptr %510, i64 0, i32 2
  %514 = load i64, ptr %memberidx.i.i51.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %510, i64 0, i32 3
  %515 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %514, %515
  br i1 %.not.i.i.i.i, label %else17.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i53.i.i

else17.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else17.i.i
  %memberidx4.i.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %510, i64 0, i32 1
  %.pre373 = load ptr, ptr %memberidx4.i.i.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i53.i.i:                               ; preds = %else17.i.i
  %516 = shl nuw i64 %515, 1
  store i64 %516, ptr %memberidx1.i4.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %510, i64 0, i32 1
  %517 = load ptr, ptr %memberidx2.i.i.i.i.i, align 8
  %518 = shl i64 %515, 4
  %519 = call ptr @realloc(ptr %517, i64 %518)
  store ptr %519, ptr %memberidx2.i.i.i.i.i, align 8
  %.pre372 = load i64, ptr %memberidx.i.i51.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else17.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i53.i.i
  %520 = phi ptr [ %519, %if.entry.i.i53.i.i ], [ %.pre373, %else17.i.i.Parser_error.exit.i.i_crit_edge ]
  %521 = phi i64 [ %.pre372, %if.entry.i.i53.i.i ], [ %514, %else17.i.i.Parser_error.exit.i.i_crit_edge ]
  %522 = add nsw i64 %521, 1
  store i64 %522, ptr %memberidx.i.i51.i.i, align 4
  %523 = getelementptr inbounds ptr, ptr %520, i64 %521
  store ptr %511, ptr %523, align 8
  br label %Parser_parse_class.exit

Parser_parse_class.exit:                          ; preds = %while.end.i.i, %Parser_error.exit.i.i
  %memberidx.i156 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %163, i64 0, i32 2
  %524 = load i64, ptr %memberidx.i156, align 4
  %memberidx1.i157 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %163, i64 0, i32 3
  %525 = load i64, ptr %memberidx1.i157, align 4
  %.not.i158 = icmp slt i64 %524, %525
  br i1 %.not.i158, label %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, label %if.entry.i161

Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_class.exit
  %memberidx4.i162.phi.trans.insert = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %163, i64 0, i32 1
  %.pre392 = load ptr, ptr %memberidx4.i162.phi.trans.insert, align 8
  br label %Array_ClassDeclarationNode____sl__.exit

if.entry.i161:                                    ; preds = %Parser_parse_class.exit
  %526 = shl nuw i64 %525, 1
  store i64 %526, ptr %memberidx1.i157, align 4
  %memberidx2.i.i160 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %163, i64 0, i32 1
  %527 = load ptr, ptr %memberidx2.i.i160, align 8
  %528 = shl i64 %525, 4
  %529 = call ptr @realloc(ptr %527, i64 %528)
  store ptr %529, ptr %memberidx2.i.i160, align 8
  %.pre391 = load i64, ptr %memberidx.i156, align 4
  br label %Array_ClassDeclarationNode____sl__.exit

Array_ClassDeclarationNode____sl__.exit:          ; preds = %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, %if.entry.i161
  %530 = phi ptr [ %.pre392, %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %529, %if.entry.i161 ]
  %531 = phi i64 [ %524, %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %.pre391, %if.entry.i161 ]
  %532 = add nsw i64 %531, 1
  store i64 %532, ptr %memberidx.i156, align 4
  %533 = getelementptr inbounds ptr, ptr %530, i64 %531
  store ptr %172, ptr %533, align 8
  br label %ifend

if.entry11:                                       ; preds = %while.entry
  %534 = load ptr, ptr %memberidx14, align 8
  %535 = load i64, ptr %memberidx2.i, align 8
  %536 = load ptr, ptr %3, align 8
  %memberidx2.i.i165 = getelementptr inbounds %Array_Token_, ptr %536, i64 0, i32 2
  %537 = load i64, ptr %memberidx2.i.i165, align 4
  %538 = icmp slt i64 %535, %537
  br i1 %538, label %if.entry.i.i168, label %Parser_advance.exit.i172

if.entry.i.i168:                                  ; preds = %if.entry11
  %539 = add nsw i64 %535, 1
  store i64 %539, ptr %memberidx2.i, align 8
  %memberidx.i.i.i167 = getelementptr inbounds %Array_Token_, ptr %536, i64 0, i32 1
  %540 = load ptr, ptr %memberidx.i.i.i167, align 8
  %541 = getelementptr inbounds ptr, ptr %540, i64 %539
  %542 = load ptr, ptr %541, align 8
  store ptr %542, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i172

Parser_advance.exit.i172:                         ; preds = %if.entry.i.i168, %if.entry11
  %543 = call ptr @malloc(i32 24)
  %544 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %544, ptr %543, align 8
  %memberidx1.i39.i = getelementptr inbounds %EnumNode, ptr %543, i64 0, i32 1
  %545 = call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumNodeField_, ptr %545, align 8
  %memberidx.i.i40.i = getelementptr inbounds %Array_EnumNodeField_, ptr %545, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i40.i, align 4
  %memberidx1.i.i.i169 = getelementptr inbounds %Array_EnumNodeField_, ptr %545, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i169, align 4
  %memberidx2.i.i41.i = getelementptr inbounds %Array_EnumNodeField_, ptr %545, i64 0, i32 1
  %546 = call ptr @malloc(i32 64)
  store ptr %546, ptr %memberidx2.i.i41.i, align 8
  store i64 0, ptr %memberidx.i.i40.i, align 4
  store ptr %545, ptr %memberidx1.i39.i, align 8
  %memberidx4.i43.i = getelementptr inbounds %EnumNode, ptr %543, i64 0, i32 2
  store ptr null, ptr %memberidx4.i43.i, align 8
  %547 = load ptr, ptr %memberidx.i70, align 8
  %548 = load i64, ptr %547, align 4
  %549 = icmp eq i64 %548, 25
  br i1 %549, label %if.entry.i173, label %ifend.i176

if.entry.i173:                                    ; preds = %Parser_advance.exit.i172
  %550 = load i64, ptr %memberidx2.i, align 8
  %551 = load ptr, ptr %3, align 8
  %memberidx2.i45.i = getelementptr inbounds %Array_Token_, ptr %551, i64 0, i32 2
  %552 = load i64, ptr %memberidx2.i45.i, align 4
  %553 = icmp slt i64 %550, %552
  br i1 %553, label %if.entry.i48.i, label %Parser_advance.exit49.i

if.entry.i48.i:                                   ; preds = %if.entry.i173
  %554 = add nsw i64 %550, 1
  store i64 %554, ptr %memberidx2.i, align 8
  %memberidx.i.i47.i = getelementptr inbounds %Array_Token_, ptr %551, i64 0, i32 1
  %555 = load ptr, ptr %memberidx.i.i47.i, align 8
  %556 = getelementptr inbounds ptr, ptr %555, i64 %554
  %557 = load ptr, ptr %556, align 8
  store ptr %557, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit49.i

Parser_advance.exit49.i:                          ; preds = %if.entry.i48.i, %if.entry.i173
  %558 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %558, ptr %memberidx4.i43.i, align 8
  %559 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre341 = load ptr, ptr %memberidx.i70, align 8
  %.pre342 = load i64, ptr %.pre341, align 4
  br label %ifend.i176

ifend.i176:                                       ; preds = %Parser_advance.exit49.i, %Parser_advance.exit.i172
  %560 = phi i64 [ %.pre342, %Parser_advance.exit49.i ], [ %548, %Parser_advance.exit.i172 ]
  %561 = icmp eq i64 %560, 33
  %562 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i53.i = getelementptr inbounds %Array_FloError_, ptr %562, i64 0, i32 2
  %563 = load i64, ptr %memberidx3.i.i53.i, align 4
  %564 = icmp eq i64 %563, 0
  %565 = and i1 %561, %564
  br i1 %565, label %while.entry.i56.i.preheader, label %Parser_new_lines.exit64.i

while.entry.i56.i.preheader:                      ; preds = %ifend.i176
  %566 = load ptr, ptr %3, align 8
  %memberidx2.i12.i55.i = getelementptr inbounds %Array_Token_, ptr %566, i64 0, i32 2
  %memberidx.i.i.i58.i = getelementptr inbounds %Array_Token_, ptr %566, i64 0, i32 1
  %.pre343 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i56.i

while.entry.i56.i:                                ; preds = %while.entry.i56.i.preheader, %Parser_advance.exit.i63.i
  %567 = phi i64 [ %.pre343, %while.entry.i56.i.preheader ], [ %576, %Parser_advance.exit.i63.i ]
  %568 = load i64, ptr %memberidx2.i12.i55.i, align 4
  %569 = icmp slt i64 %567, %568
  br i1 %569, label %if.entry.i.i59.i, label %Parser_advance.exit.i63.i

if.entry.i.i59.i:                                 ; preds = %while.entry.i56.i
  %570 = add nsw i64 %567, 1
  store i64 %570, ptr %memberidx2.i, align 8
  %571 = load ptr, ptr %memberidx.i.i.i58.i, align 8
  %572 = getelementptr inbounds ptr, ptr %571, i64 %570
  %573 = load ptr, ptr %572, align 8
  store ptr %573, ptr %memberidx.i70, align 8
  %.pre344 = load i64, ptr %573, align 4
  %.pre345 = load i64, ptr %memberidx3.i.i53.i, align 4
  br label %Parser_advance.exit.i63.i

Parser_advance.exit.i63.i:                        ; preds = %if.entry.i.i59.i, %while.entry.i56.i
  %574 = phi i64 [ %.pre345, %if.entry.i.i59.i ], [ 0, %while.entry.i56.i ]
  %575 = phi i64 [ %.pre344, %if.entry.i.i59.i ], [ 33, %while.entry.i56.i ]
  %576 = phi i64 [ %570, %if.entry.i.i59.i ], [ %567, %while.entry.i56.i ]
  %577 = icmp eq i64 %575, 33
  %578 = icmp eq i64 %574, 0
  %579 = and i1 %577, %578
  br i1 %579, label %while.entry.i56.i, label %Parser_new_lines.exit64.i

Parser_new_lines.exit64.i:                        ; preds = %Parser_advance.exit.i63.i, %ifend.i176
  %580 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %581 = load ptr, ptr %memberidx.i70, align 8
  %582 = load i64, ptr %581, align 4
  %583 = icmp eq i64 %582, 33
  %584 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i68.i = getelementptr inbounds %Array_FloError_, ptr %584, i64 0, i32 2
  %585 = load i64, ptr %memberidx3.i.i68.i, align 4
  %586 = icmp eq i64 %585, 0
  %587 = and i1 %583, %586
  br i1 %587, label %while.entry.i71.i.preheader, label %Parser_new_lines.exit79.i

while.entry.i71.i.preheader:                      ; preds = %Parser_new_lines.exit64.i
  %588 = load ptr, ptr %3, align 8
  %memberidx2.i12.i70.i = getelementptr inbounds %Array_Token_, ptr %588, i64 0, i32 2
  %memberidx.i.i.i73.i = getelementptr inbounds %Array_Token_, ptr %588, i64 0, i32 1
  %.pre346 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i71.i

while.entry.i71.i:                                ; preds = %while.entry.i71.i.preheader, %Parser_advance.exit.i78.i
  %589 = phi i64 [ 33, %while.entry.i71.i.preheader ], [ %597, %Parser_advance.exit.i78.i ]
  %590 = phi i64 [ %.pre346, %while.entry.i71.i.preheader ], [ %600, %Parser_advance.exit.i78.i ]
  %591 = load i64, ptr %memberidx2.i12.i70.i, align 4
  %592 = icmp slt i64 %590, %591
  br i1 %592, label %if.entry.i.i74.i, label %Parser_advance.exit.i78.i

if.entry.i.i74.i:                                 ; preds = %while.entry.i71.i
  %593 = add nsw i64 %590, 1
  store i64 %593, ptr %memberidx2.i, align 8
  %594 = load ptr, ptr %memberidx.i.i.i73.i, align 8
  %595 = getelementptr inbounds ptr, ptr %594, i64 %593
  %596 = load ptr, ptr %595, align 8
  store ptr %596, ptr %memberidx.i70, align 8
  %.pre347 = load i64, ptr %596, align 4
  %.pre348 = load i64, ptr %memberidx3.i.i68.i, align 4
  br label %Parser_advance.exit.i78.i

Parser_advance.exit.i78.i:                        ; preds = %if.entry.i.i74.i, %while.entry.i71.i
  %597 = phi i64 [ %.pre347, %if.entry.i.i74.i ], [ %589, %while.entry.i71.i ]
  %598 = phi i64 [ %.pre348, %if.entry.i.i74.i ], [ 0, %while.entry.i71.i ]
  %599 = phi i64 [ %.pre347, %if.entry.i.i74.i ], [ 33, %while.entry.i71.i ]
  %600 = phi i64 [ %593, %if.entry.i.i74.i ], [ %590, %while.entry.i71.i ]
  %601 = icmp eq i64 %599, 33
  %602 = icmp eq i64 %598, 0
  %603 = and i1 %601, %602
  br i1 %603, label %while.entry.i71.i, label %Parser_new_lines.exit79.i

Parser_new_lines.exit79.i:                        ; preds = %Parser_advance.exit.i78.i, %Parser_new_lines.exit64.i
  %604 = phi i64 [ %582, %Parser_new_lines.exit64.i ], [ %597, %Parser_advance.exit.i78.i ]
  %605 = icmp eq i64 %604, 53
  br i1 %605, label %while.entry.i178, label %Parser_parse_enum.exit

while.entry.i178:                                 ; preds = %Parser_new_lines.exit79.i, %Parser_new_lines.exit.i197
  %606 = call ptr @malloc(i32 16)
  %607 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %607, ptr %606, align 8
  %memberidx1.i86.i = getelementptr inbounds %EnumNodeField, ptr %606, i64 0, i32 1
  store ptr null, ptr %memberidx1.i86.i, align 8
  %608 = load ptr, ptr %memberidx.i70, align 8
  %609 = load i64, ptr %608, align 4
  %610 = icmp eq i64 %609, 38
  br i1 %610, label %if.entry7.i, label %ifend9.i

if.entry7.i:                                      ; preds = %while.entry.i178
  %611 = load i64, ptr %memberidx2.i, align 8
  %612 = load ptr, ptr %3, align 8
  %memberidx2.i81.i = getelementptr inbounds %Array_Token_, ptr %612, i64 0, i32 2
  %613 = load i64, ptr %memberidx2.i81.i, align 4
  %614 = icmp slt i64 %611, %613
  br i1 %614, label %if.entry.i84.i, label %Parser_advance.exit85.i

if.entry.i84.i:                                   ; preds = %if.entry7.i
  %615 = add nsw i64 %611, 1
  store i64 %615, ptr %memberidx2.i, align 8
  %memberidx.i.i83.i = getelementptr inbounds %Array_Token_, ptr %612, i64 0, i32 1
  %616 = load ptr, ptr %memberidx.i.i83.i, align 8
  %617 = getelementptr inbounds ptr, ptr %616, i64 %615
  %618 = load ptr, ptr %617, align 8
  store ptr %618, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit85.i

Parser_advance.exit85.i:                          ; preds = %if.entry.i84.i, %if.entry7.i
  %619 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %619, ptr %memberidx1.i86.i, align 8
  br label %ifend9.i

ifend9.i:                                         ; preds = %Parser_advance.exit85.i, %while.entry.i178
  %620 = load ptr, ptr %memberidx1.i39.i, align 8
  %memberidx.i35.i181 = getelementptr inbounds %Array_EnumNodeField_, ptr %620, i64 0, i32 2
  %621 = load i64, ptr %memberidx.i35.i181, align 4
  %memberidx1.i.i182 = getelementptr inbounds %Array_EnumNodeField_, ptr %620, i64 0, i32 3
  %622 = load i64, ptr %memberidx1.i.i182, align 4
  %.not.i.i183 = icmp slt i64 %621, %622
  br i1 %.not.i.i183, label %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge, label %if.entry.i38.i

ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge: ; preds = %ifend9.i
  %memberidx4.i.i184.phi.trans.insert = getelementptr inbounds %Array_EnumNodeField_, ptr %620, i64 0, i32 1
  %.pre350 = load ptr, ptr %memberidx4.i.i184.phi.trans.insert, align 8
  br label %Array_EnumNodeField____sl__.exit.i

if.entry.i38.i:                                   ; preds = %ifend9.i
  %623 = shl nuw i64 %622, 1
  store i64 %623, ptr %memberidx1.i.i182, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %Array_EnumNodeField_, ptr %620, i64 0, i32 1
  %624 = load ptr, ptr %memberidx2.i.i37.i, align 8
  %625 = shl i64 %622, 4
  %626 = call ptr @realloc(ptr %624, i64 %625)
  store ptr %626, ptr %memberidx2.i.i37.i, align 8
  %.pre349 = load i64, ptr %memberidx.i35.i181, align 4
  br label %Array_EnumNodeField____sl__.exit.i

Array_EnumNodeField____sl__.exit.i:               ; preds = %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge, %if.entry.i38.i
  %627 = phi ptr [ %626, %if.entry.i38.i ], [ %.pre350, %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge ]
  %628 = phi i64 [ %.pre349, %if.entry.i38.i ], [ %621, %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge ]
  %629 = add nsw i64 %628, 1
  store i64 %629, ptr %memberidx.i35.i181, align 4
  %630 = getelementptr inbounds ptr, ptr %627, i64 %628
  store ptr %606, ptr %630, align 8
  %631 = load ptr, ptr %memberidx.i70, align 8
  %632 = load i64, ptr %631, align 4
  %633 = icmp eq i64 %632, 33
  %634 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i186 = getelementptr inbounds %Array_FloError_, ptr %634, i64 0, i32 2
  %635 = load i64, ptr %memberidx3.i.i.i186, align 4
  %636 = icmp eq i64 %635, 0
  %637 = and i1 %633, %636
  br i1 %637, label %while.entry.i.i189.preheader, label %Parser_new_lines.exit.i197

while.entry.i.i189.preheader:                     ; preds = %Array_EnumNodeField____sl__.exit.i
  %638 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i188 = getelementptr inbounds %Array_Token_, ptr %638, i64 0, i32 2
  %memberidx.i.i.i.i191 = getelementptr inbounds %Array_Token_, ptr %638, i64 0, i32 1
  %639 = load i64, ptr %memberidx2.i, align 8
  %640 = load i64, ptr %memberidx2.i12.i.i188, align 4
  %641 = icmp slt i64 %639, %640
  br i1 %641, label %while.entry.i.i189, label %while.entry.i.i189.us

while.entry.i.i189.us:                            ; preds = %while.entry.i.i189.preheader, %while.entry.i.i189.us
  br label %while.entry.i.i189.us

while.entry.i.i189:                               ; preds = %while.entry.i.i189.preheader, %Parser_advance.exit.i.i196
  %642 = phi i64 [ %650, %Parser_advance.exit.i.i196 ], [ 33, %while.entry.i.i189.preheader ]
  %643 = phi i64 [ %653, %Parser_advance.exit.i.i196 ], [ %639, %while.entry.i.i189.preheader ]
  %644 = load i64, ptr %memberidx2.i12.i.i188, align 4
  %645 = icmp slt i64 %643, %644
  br i1 %645, label %if.entry.i.i.i192, label %Parser_advance.exit.i.i196

if.entry.i.i.i192:                                ; preds = %while.entry.i.i189
  %646 = add nsw i64 %643, 1
  store i64 %646, ptr %memberidx2.i, align 8
  %647 = load ptr, ptr %memberidx.i.i.i.i191, align 8
  %648 = getelementptr inbounds ptr, ptr %647, i64 %646
  %649 = load ptr, ptr %648, align 8
  store ptr %649, ptr %memberidx.i70, align 8
  %.pre351 = load i64, ptr %649, align 4
  %.pre352 = load i64, ptr %memberidx3.i.i.i186, align 4
  br label %Parser_advance.exit.i.i196

Parser_advance.exit.i.i196:                       ; preds = %if.entry.i.i.i192, %while.entry.i.i189
  %650 = phi i64 [ %.pre351, %if.entry.i.i.i192 ], [ %642, %while.entry.i.i189 ]
  %651 = phi i64 [ %.pre352, %if.entry.i.i.i192 ], [ 0, %while.entry.i.i189 ]
  %652 = phi i64 [ %.pre351, %if.entry.i.i.i192 ], [ 33, %while.entry.i.i189 ]
  %653 = phi i64 [ %646, %if.entry.i.i.i192 ], [ %643, %while.entry.i.i189 ]
  %654 = icmp eq i64 %652, 33
  %655 = icmp eq i64 %651, 0
  %656 = and i1 %654, %655
  br i1 %656, label %while.entry.i.i189, label %Parser_new_lines.exit.i197

Parser_new_lines.exit.i197:                       ; preds = %Parser_advance.exit.i.i196, %Array_EnumNodeField____sl__.exit.i
  %657 = phi i64 [ %632, %Array_EnumNodeField____sl__.exit.i ], [ %650, %Parser_advance.exit.i.i196 ]
  %658 = icmp eq i64 %657, 53
  br i1 %658, label %while.entry.i178, label %Parser_parse_enum.exit

Parser_parse_enum.exit:                           ; preds = %Parser_new_lines.exit.i197, %Parser_new_lines.exit79.i
  %659 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  %memberidx.i198 = getelementptr inbounds %Array_EnumNode_, ptr %534, i64 0, i32 2
  %660 = load i64, ptr %memberidx.i198, align 4
  %memberidx1.i199 = getelementptr inbounds %Array_EnumNode_, ptr %534, i64 0, i32 3
  %661 = load i64, ptr %memberidx1.i199, align 4
  %.not.i200 = icmp slt i64 %660, %661
  br i1 %.not.i200, label %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, label %if.entry.i203

Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge: ; preds = %Parser_parse_enum.exit
  %memberidx4.i204.phi.trans.insert = getelementptr inbounds %Array_EnumNode_, ptr %534, i64 0, i32 1
  %.pre354 = load ptr, ptr %memberidx4.i204.phi.trans.insert, align 8
  br label %Array_EnumNode____sl__.exit

if.entry.i203:                                    ; preds = %Parser_parse_enum.exit
  %662 = shl nuw i64 %661, 1
  store i64 %662, ptr %memberidx1.i199, align 4
  %memberidx2.i.i202 = getelementptr inbounds %Array_EnumNode_, ptr %534, i64 0, i32 1
  %663 = load ptr, ptr %memberidx2.i.i202, align 8
  %664 = shl i64 %661, 4
  %665 = call ptr @realloc(ptr %663, i64 %664)
  store ptr %665, ptr %memberidx2.i.i202, align 8
  %.pre353 = load i64, ptr %memberidx.i198, align 4
  br label %Array_EnumNode____sl__.exit

Array_EnumNode____sl__.exit:                      ; preds = %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, %if.entry.i203
  %666 = phi ptr [ %.pre354, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %665, %if.entry.i203 ]
  %667 = phi i64 [ %660, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %.pre353, %if.entry.i203 ]
  %668 = add nsw i64 %667, 1
  store i64 %668, ptr %memberidx.i198, align 4
  %669 = getelementptr inbounds ptr, ptr %666, i64 %667
  store ptr %543, ptr %669, align 8
  br label %ifend

if.entry17:                                       ; preds = %while.entry
  %670 = load ptr, ptr %memberidx20, align 8
  %671 = load i64, ptr %memberidx2.i, align 8
  %672 = load ptr, ptr %3, align 8
  %memberidx2.i.i207 = getelementptr inbounds %Array_Token_, ptr %672, i64 0, i32 2
  %673 = load i64, ptr %memberidx2.i.i207, align 4
  %674 = icmp slt i64 %671, %673
  br i1 %674, label %if.entry.i.i210, label %Parser_advance.exit.i214

if.entry.i.i210:                                  ; preds = %if.entry17
  %675 = add nsw i64 %671, 1
  store i64 %675, ptr %memberidx2.i, align 8
  %memberidx.i.i.i209 = getelementptr inbounds %Array_Token_, ptr %672, i64 0, i32 1
  %676 = load ptr, ptr %memberidx.i.i.i209, align 8
  %677 = getelementptr inbounds ptr, ptr %676, i64 %675
  %678 = load ptr, ptr %677, align 8
  store ptr %678, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i214

Parser_advance.exit.i214:                         ; preds = %if.entry.i.i210, %if.entry17
  %679 = call ptr @malloc(i32 24)
  %680 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ImportClause_, ptr %680, align 8
  %memberidx.i.i32.i = getelementptr inbounds %Array_ImportClause_, ptr %680, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i32.i, align 4
  %memberidx1.i.i.i211 = getelementptr inbounds %Array_ImportClause_, ptr %680, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i211, align 4
  %memberidx2.i.i.i212 = getelementptr inbounds %Array_ImportClause_, ptr %680, i64 0, i32 1
  %681 = call ptr @malloc(i32 64)
  store ptr %681, ptr %memberidx2.i.i.i212, align 8
  store i64 0, ptr %memberidx.i.i32.i, align 4
  store ptr %680, ptr %679, align 8
  %memberidx3.i34.i = getelementptr inbounds %ImportNode, ptr %679, i64 0, i32 2
  store ptr null, ptr %memberidx3.i34.i, align 8
  %682 = load ptr, ptr %memberidx.i70, align 8
  %683 = load i64, ptr %682, align 4
  %684 = icmp eq i64 %683, 53
  br i1 %684, label %if.entry.i215, label %ifend.i224

if.entry.i215:                                    ; preds = %Parser_advance.exit.i214
  %685 = call ptr @malloc(i32 16)
  %686 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %686, ptr %685, align 8
  %memberidx1.i.i35.i = getelementptr inbounds %ImportClause, ptr %685, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i35.i, align 8
  %687 = load ptr, ptr %memberidx.i70, align 8
  %688 = load i64, ptr %687, align 4
  %689 = icmp eq i64 %688, 74
  br i1 %689, label %if.entry.i39.i, label %Parser_parse_import_clause.exit.i

if.entry.i39.i:                                   ; preds = %if.entry.i215
  %690 = load i64, ptr %memberidx2.i, align 8
  %691 = load ptr, ptr %3, align 8
  %memberidx2.i.i38.i = getelementptr inbounds %Array_Token_, ptr %691, i64 0, i32 2
  %692 = load i64, ptr %memberidx2.i.i38.i, align 4
  %693 = icmp slt i64 %690, %692
  br i1 %693, label %if.entry.i.i.i218, label %Parser_advance.exit.i.i219

if.entry.i.i.i218:                                ; preds = %if.entry.i39.i
  %694 = add nsw i64 %690, 1
  store i64 %694, ptr %memberidx2.i, align 8
  %memberidx.i.i.i.i217 = getelementptr inbounds %Array_Token_, ptr %691, i64 0, i32 1
  %695 = load ptr, ptr %memberidx.i.i.i.i217, align 8
  %696 = getelementptr inbounds ptr, ptr %695, i64 %694
  %697 = load ptr, ptr %696, align 8
  store ptr %697, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i.i219

Parser_advance.exit.i.i219:                       ; preds = %if.entry.i.i.i218, %if.entry.i39.i
  %698 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %698, ptr %memberidx1.i.i35.i, align 8
  br label %Parser_parse_import_clause.exit.i

Parser_parse_import_clause.exit.i:                ; preds = %Parser_advance.exit.i.i219, %if.entry.i215
  %699 = load i64, ptr %memberidx.i.i32.i, align 4
  %700 = load i64, ptr %memberidx1.i.i.i211, align 4
  %.not.i.i221 = icmp slt i64 %699, %700
  br i1 %.not.i.i221, label %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, label %if.entry.i44.i

Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge: ; preds = %Parser_parse_import_clause.exit.i
  %.pre334 = load ptr, ptr %memberidx2.i.i.i212, align 8
  br label %Array_ImportClause____sl__.exit.i

if.entry.i44.i:                                   ; preds = %Parser_parse_import_clause.exit.i
  %701 = shl nuw i64 %700, 1
  store i64 %701, ptr %memberidx1.i.i.i211, align 4
  %702 = load ptr, ptr %memberidx2.i.i.i212, align 8
  %703 = shl i64 %700, 4
  %704 = call ptr @realloc(ptr %702, i64 %703)
  store ptr %704, ptr %memberidx2.i.i.i212, align 8
  %.pre333 = load i64, ptr %memberidx.i.i32.i, align 4
  br label %Array_ImportClause____sl__.exit.i

Array_ImportClause____sl__.exit.i:                ; preds = %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, %if.entry.i44.i
  %705 = phi ptr [ %704, %if.entry.i44.i ], [ %.pre334, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %706 = phi i64 [ %.pre333, %if.entry.i44.i ], [ %699, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %707 = add nsw i64 %706, 1
  store i64 %707, ptr %memberidx.i.i32.i, align 4
  %708 = getelementptr inbounds ptr, ptr %705, i64 %706
  store ptr %685, ptr %708, align 8
  %709 = load ptr, ptr %memberidx.i70, align 8
  %710 = load i64, ptr %709, align 4
  %711 = icmp eq i64 %710, 3
  %712 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i47.i = getelementptr inbounds %Array_FloError_, ptr %712, i64 0, i32 2
  %713 = load i64, ptr %memberidx3.i47.i, align 4
  %714 = icmp eq i64 %713, 0
  %715 = and i1 %711, %714
  br i1 %715, label %while.entry.i227, label %while.end.i

ifend.i224thread-pre-split:                       ; preds = %if.entry.i88.i, %if.entry.i.i91.i, %else.i93.i
  %.ph = phi ptr [ %773, %if.entry.i88.i ], [ %782, %if.entry.i.i91.i ], [ %.pre337, %else.i93.i ]
  %.pr = load i64, ptr %.ph, align 4
  br label %ifend.i224

ifend.i224:                                       ; preds = %ifend.i224thread-pre-split, %Parser_advance.exit.i214
  %716 = phi i64 [ %.pr, %ifend.i224thread-pre-split ], [ %683, %Parser_advance.exit.i214 ]
  %717 = phi ptr [ %.ph, %ifend.i224thread-pre-split ], [ %682, %Parser_advance.exit.i214 ]
  %memberidx8.i223 = getelementptr inbounds %ImportNode, ptr %679, i64 0, i32 1
  %718 = icmp eq i64 %716, 34
  br i1 %718, label %if.entry.i51.i, label %else.i.i226

if.entry.i51.i:                                   ; preds = %ifend.i224
  %719 = load i64, ptr %memberidx2.i, align 8
  %720 = load ptr, ptr %3, align 8
  %memberidx2.i.i50.i = getelementptr inbounds %Array_Token_, ptr %720, i64 0, i32 2
  %721 = load i64, ptr %memberidx2.i.i50.i, align 4
  %722 = icmp slt i64 %719, %721
  br i1 %722, label %if.entry.i.i54.i, label %Parser_eat.exit.i

if.entry.i.i54.i:                                 ; preds = %if.entry.i51.i
  %723 = add nsw i64 %719, 1
  store i64 %723, ptr %memberidx2.i, align 8
  %memberidx.i.i.i53.i = getelementptr inbounds %Array_Token_, ptr %720, i64 0, i32 1
  %724 = load ptr, ptr %memberidx.i.i.i53.i, align 8
  %725 = getelementptr inbounds ptr, ptr %724, i64 %723
  %726 = load ptr, ptr %725, align 8
  store ptr %726, ptr %memberidx.i70, align 8
  br label %Parser_eat.exit.i

else.i.i226:                                      ; preds = %ifend.i224
  %727 = call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %717, i64 0, i32 1
  %728 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %727, align 4
  %memberidx1.i80.i.i = getelementptr inbounds %Token, ptr %727, i64 0, i32 1
  store ptr %728, ptr %memberidx1.i80.i.i, align 8
  %.pre338 = load ptr, ptr %memberidx.i70, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i51.i, %if.entry.i.i54.i, %else.i.i226
  %729 = phi ptr [ %.pre338, %else.i.i226 ], [ %726, %if.entry.i.i54.i ], [ %717, %if.entry.i51.i ]
  %common.ret.op.i.i = phi ptr [ %727, %else.i.i226 ], [ %717, %if.entry.i.i54.i ], [ %717, %if.entry.i51.i ]
  store ptr %common.ret.op.i.i, ptr %memberidx8.i223, align 8
  %730 = load i64, ptr %729, align 4
  %731 = icmp eq i64 %730, 74
  br i1 %731, label %if.entry11.i, label %Parser_parse_import.exit

while.entry.i227:                                 ; preds = %Array_ImportClause____sl__.exit.i, %Array_ImportClause____sl__.exit80.i
  %732 = load i64, ptr %memberidx2.i, align 8
  %733 = load ptr, ptr %3, align 8
  %memberidx2.i57.i = getelementptr inbounds %Array_Token_, ptr %733, i64 0, i32 2
  %734 = load i64, ptr %memberidx2.i57.i, align 4
  %735 = icmp slt i64 %732, %734
  br i1 %735, label %if.entry.i60.i, label %Parser_advance.exit61.i

if.entry.i60.i:                                   ; preds = %while.entry.i227
  %736 = add nsw i64 %732, 1
  store i64 %736, ptr %memberidx2.i, align 8
  %memberidx.i.i59.i = getelementptr inbounds %Array_Token_, ptr %733, i64 0, i32 1
  %737 = load ptr, ptr %memberidx.i.i59.i, align 8
  %738 = getelementptr inbounds ptr, ptr %737, i64 %736
  %739 = load ptr, ptr %738, align 8
  store ptr %739, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit61.i

Parser_advance.exit61.i:                          ; preds = %if.entry.i60.i, %while.entry.i227
  %740 = load ptr, ptr %679, align 8
  %741 = call ptr @malloc(i32 16)
  %742 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %742, ptr %741, align 8
  %memberidx1.i.i62.i = getelementptr inbounds %ImportClause, ptr %741, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i62.i, align 8
  %743 = load ptr, ptr %memberidx.i70, align 8
  %744 = load i64, ptr %743, align 4
  %745 = icmp eq i64 %744, 74
  br i1 %745, label %if.entry.i66.i, label %Parser_parse_import_clause.exit72.i

if.entry.i66.i:                                   ; preds = %Parser_advance.exit61.i
  %746 = load i64, ptr %memberidx2.i, align 8
  %747 = load ptr, ptr %3, align 8
  %memberidx2.i.i65.i = getelementptr inbounds %Array_Token_, ptr %747, i64 0, i32 2
  %748 = load i64, ptr %memberidx2.i.i65.i, align 4
  %749 = icmp slt i64 %746, %748
  br i1 %749, label %if.entry.i.i69.i, label %Parser_advance.exit.i71.i

if.entry.i.i69.i:                                 ; preds = %if.entry.i66.i
  %750 = add nsw i64 %746, 1
  store i64 %750, ptr %memberidx2.i, align 8
  %memberidx.i.i.i68.i = getelementptr inbounds %Array_Token_, ptr %747, i64 0, i32 1
  %751 = load ptr, ptr %memberidx.i.i.i68.i, align 8
  %752 = getelementptr inbounds ptr, ptr %751, i64 %750
  %753 = load ptr, ptr %752, align 8
  store ptr %753, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit.i71.i

Parser_advance.exit.i71.i:                        ; preds = %if.entry.i.i69.i, %if.entry.i66.i
  %754 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %754, ptr %memberidx1.i.i62.i, align 8
  br label %Parser_parse_import_clause.exit72.i

Parser_parse_import_clause.exit72.i:              ; preds = %Parser_advance.exit.i71.i, %Parser_advance.exit61.i
  %memberidx.i73.i = getelementptr inbounds %Array_ImportClause_, ptr %740, i64 0, i32 2
  %755 = load i64, ptr %memberidx.i73.i, align 4
  %memberidx1.i74.i = getelementptr inbounds %Array_ImportClause_, ptr %740, i64 0, i32 3
  %756 = load i64, ptr %memberidx1.i74.i, align 4
  %.not.i75.i = icmp slt i64 %755, %756
  br i1 %.not.i75.i, label %Parser_parse_import_clause.exit72.i.Array_ImportClause____sl__.exit80.i_crit_edge, label %if.entry.i78.i

Parser_parse_import_clause.exit72.i.Array_ImportClause____sl__.exit80.i_crit_edge: ; preds = %Parser_parse_import_clause.exit72.i
  %memberidx4.i79.i.phi.trans.insert = getelementptr inbounds %Array_ImportClause_, ptr %740, i64 0, i32 1
  %.pre336 = load ptr, ptr %memberidx4.i79.i.phi.trans.insert, align 8
  br label %Array_ImportClause____sl__.exit80.i

if.entry.i78.i:                                   ; preds = %Parser_parse_import_clause.exit72.i
  %757 = shl nuw i64 %756, 1
  store i64 %757, ptr %memberidx1.i74.i, align 4
  %memberidx2.i.i77.i = getelementptr inbounds %Array_ImportClause_, ptr %740, i64 0, i32 1
  %758 = load ptr, ptr %memberidx2.i.i77.i, align 8
  %759 = shl i64 %756, 4
  %760 = call ptr @realloc(ptr %758, i64 %759)
  store ptr %760, ptr %memberidx2.i.i77.i, align 8
  %.pre335 = load i64, ptr %memberidx.i73.i, align 4
  br label %Array_ImportClause____sl__.exit80.i

Array_ImportClause____sl__.exit80.i:              ; preds = %Parser_parse_import_clause.exit72.i.Array_ImportClause____sl__.exit80.i_crit_edge, %if.entry.i78.i
  %761 = phi ptr [ %760, %if.entry.i78.i ], [ %.pre336, %Parser_parse_import_clause.exit72.i.Array_ImportClause____sl__.exit80.i_crit_edge ]
  %762 = phi i64 [ %.pre335, %if.entry.i78.i ], [ %755, %Parser_parse_import_clause.exit72.i.Array_ImportClause____sl__.exit80.i_crit_edge ]
  %763 = add nsw i64 %762, 1
  store i64 %763, ptr %memberidx.i73.i, align 4
  %764 = getelementptr inbounds ptr, ptr %761, i64 %762
  store ptr %741, ptr %764, align 8
  %765 = load ptr, ptr %memberidx.i70, align 8
  %766 = load i64, ptr %765, align 4
  %767 = icmp eq i64 %766, 3
  %768 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i83.i = getelementptr inbounds %Array_FloError_, ptr %768, i64 0, i32 2
  %769 = load i64, ptr %memberidx3.i83.i, align 4
  %770 = icmp eq i64 %769, 0
  %771 = and i1 %767, %770
  br i1 %771, label %while.entry.i227, label %while.end.i

while.end.i:                                      ; preds = %Array_ImportClause____sl__.exit80.i, %Array_ImportClause____sl__.exit.i
  %772 = phi i64 [ %710, %Array_ImportClause____sl__.exit.i ], [ %766, %Array_ImportClause____sl__.exit80.i ]
  %773 = phi ptr [ %709, %Array_ImportClause____sl__.exit.i ], [ %765, %Array_ImportClause____sl__.exit80.i ]
  %774 = icmp eq i64 %772, 69
  br i1 %774, label %if.entry.i88.i, label %else.i93.i

if.entry.i88.i:                                   ; preds = %while.end.i
  %775 = load i64, ptr %memberidx2.i, align 8
  %776 = load ptr, ptr %3, align 8
  %memberidx2.i.i87.i = getelementptr inbounds %Array_Token_, ptr %776, i64 0, i32 2
  %777 = load i64, ptr %memberidx2.i.i87.i, align 4
  %778 = icmp slt i64 %775, %777
  br i1 %778, label %if.entry.i.i91.i, label %ifend.i224thread-pre-split

if.entry.i.i91.i:                                 ; preds = %if.entry.i88.i
  %779 = add nsw i64 %775, 1
  store i64 %779, ptr %memberidx2.i, align 8
  %memberidx.i.i.i90.i = getelementptr inbounds %Array_Token_, ptr %776, i64 0, i32 1
  %780 = load ptr, ptr %memberidx.i.i.i90.i, align 8
  %781 = getelementptr inbounds ptr, ptr %780, i64 %779
  %782 = load ptr, ptr %781, align 8
  store ptr %782, ptr %memberidx.i70, align 8
  br label %ifend.i224thread-pre-split

else.i93.i:                                       ; preds = %while.end.i
  %783 = call ptr @malloc(i32 16)
  %memberidx35.i94.i = getelementptr inbounds %Token, ptr %773, i64 0, i32 1
  %784 = load ptr, ptr %memberidx35.i94.i, align 8
  store i64 46, ptr %783, align 4
  %memberidx1.i80.i95.i = getelementptr inbounds %Token, ptr %783, i64 0, i32 1
  store ptr %784, ptr %memberidx1.i80.i95.i, align 8
  %.pre337 = load ptr, ptr %memberidx.i70, align 8
  br label %ifend.i224thread-pre-split

if.entry11.i:                                     ; preds = %Parser_eat.exit.i
  %785 = load i64, ptr %memberidx2.i, align 8
  %786 = load ptr, ptr %3, align 8
  %memberidx2.i98.i = getelementptr inbounds %Array_Token_, ptr %786, i64 0, i32 2
  %787 = load i64, ptr %memberidx2.i98.i, align 4
  %788 = icmp slt i64 %785, %787
  br i1 %788, label %if.entry.i101.i, label %Parser_advance.exit102.i

if.entry.i101.i:                                  ; preds = %if.entry11.i
  %789 = add nsw i64 %785, 1
  store i64 %789, ptr %memberidx2.i, align 8
  %memberidx.i.i100.i = getelementptr inbounds %Array_Token_, ptr %786, i64 0, i32 1
  %790 = load ptr, ptr %memberidx.i.i100.i, align 8
  %791 = getelementptr inbounds ptr, ptr %790, i64 %789
  %792 = load ptr, ptr %791, align 8
  store ptr %792, ptr %memberidx.i70, align 8
  br label %Parser_advance.exit102.i

Parser_advance.exit102.i:                         ; preds = %if.entry.i101.i, %if.entry11.i
  %793 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %793, ptr %memberidx3.i34.i, align 8
  br label %Parser_parse_import.exit

Parser_parse_import.exit:                         ; preds = %Parser_eat.exit.i, %Parser_advance.exit102.i
  %memberidx.i228 = getelementptr inbounds %Array_ImportNode_, ptr %670, i64 0, i32 2
  %794 = load i64, ptr %memberidx.i228, align 4
  %memberidx1.i229 = getelementptr inbounds %Array_ImportNode_, ptr %670, i64 0, i32 3
  %795 = load i64, ptr %memberidx1.i229, align 4
  %.not.i230 = icmp slt i64 %794, %795
  br i1 %.not.i230, label %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, label %if.entry.i233

Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge: ; preds = %Parser_parse_import.exit
  %memberidx4.i234.phi.trans.insert = getelementptr inbounds %Array_ImportNode_, ptr %670, i64 0, i32 1
  %.pre340 = load ptr, ptr %memberidx4.i234.phi.trans.insert, align 8
  br label %Array_ImportNode____sl__.exit

if.entry.i233:                                    ; preds = %Parser_parse_import.exit
  %796 = shl nuw i64 %795, 1
  store i64 %796, ptr %memberidx1.i229, align 4
  %memberidx2.i.i232 = getelementptr inbounds %Array_ImportNode_, ptr %670, i64 0, i32 1
  %797 = load ptr, ptr %memberidx2.i.i232, align 8
  %798 = shl i64 %795, 4
  %799 = call ptr @realloc(ptr %797, i64 %798)
  store ptr %799, ptr %memberidx2.i.i232, align 8
  %.pre339 = load i64, ptr %memberidx.i228, align 4
  br label %Array_ImportNode____sl__.exit

Array_ImportNode____sl__.exit:                    ; preds = %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, %if.entry.i233
  %800 = phi ptr [ %.pre340, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %799, %if.entry.i233 ]
  %801 = phi i64 [ %794, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %.pre339, %if.entry.i233 ]
  %802 = add nsw i64 %801, 1
  store i64 %802, ptr %memberidx.i228, align 4
  %803 = getelementptr inbounds ptr, ptr %800, i64 %801
  store ptr %679, ptr %803, align 8
  br label %ifend

if.entry23:                                       ; preds = %while.entry
  %804 = load ptr, ptr %memberidx26, align 8
  %805 = call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %3)
  %memberidx.i236 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %804, i64 0, i32 2
  %806 = load i64, ptr %memberidx.i236, align 4
  %memberidx1.i237 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %804, i64 0, i32 3
  %807 = load i64, ptr %memberidx1.i237, align 4
  %.not.i238 = icmp slt i64 %806, %807
  br i1 %.not.i238, label %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i241

if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry23
  %memberidx4.i242.phi.trans.insert = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %804, i64 0, i32 1
  %.pre332 = load ptr, ptr %memberidx4.i242.phi.trans.insert, align 8
  br label %Array_ConstDeclarationStatement____sl__.exit

if.entry.i241:                                    ; preds = %if.entry23
  %808 = shl nuw i64 %807, 1
  store i64 %808, ptr %memberidx1.i237, align 4
  %memberidx2.i.i240 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %804, i64 0, i32 1
  %809 = load ptr, ptr %memberidx2.i.i240, align 8
  %810 = shl i64 %807, 4
  %811 = call ptr @realloc(ptr %809, i64 %810)
  store ptr %811, ptr %memberidx2.i.i240, align 8
  %.pre331 = load i64, ptr %memberidx.i236, align 4
  br label %Array_ConstDeclarationStatement____sl__.exit

Array_ConstDeclarationStatement____sl__.exit:     ; preds = %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, %if.entry.i241
  %812 = phi ptr [ %.pre332, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %811, %if.entry.i241 ]
  %813 = phi i64 [ %806, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %.pre331, %if.entry.i241 ]
  %814 = add nsw i64 %813, 1
  store i64 %814, ptr %memberidx.i236, align 4
  %815 = getelementptr inbounds ptr, ptr %812, i64 %813
  store ptr %805, ptr %815, align 8
  br label %ifend

if.entry29:                                       ; preds = %while.entry
  %816 = load ptr, ptr %memberidx32, align 8
  %817 = call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %3)
  %memberidx.i244 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %816, i64 0, i32 2
  %818 = load i64, ptr %memberidx.i244, align 4
  %memberidx1.i245 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %816, i64 0, i32 3
  %819 = load i64, ptr %memberidx1.i245, align 4
  %.not.i246 = icmp slt i64 %818, %819
  br i1 %.not.i246, label %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i249

if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry29
  %memberidx4.i250.phi.trans.insert = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %816, i64 0, i32 1
  %.pre330 = load ptr, ptr %memberidx4.i250.phi.trans.insert, align 8
  br label %Array_VarDeclarationStatement____sl__.exit

if.entry.i249:                                    ; preds = %if.entry29
  %820 = shl nuw i64 %819, 1
  store i64 %820, ptr %memberidx1.i245, align 4
  %memberidx2.i.i248 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %816, i64 0, i32 1
  %821 = load ptr, ptr %memberidx2.i.i248, align 8
  %822 = shl i64 %819, 4
  %823 = call ptr @realloc(ptr %821, i64 %822)
  store ptr %823, ptr %memberidx2.i.i248, align 8
  %.pre329 = load i64, ptr %memberidx.i244, align 4
  br label %Array_VarDeclarationStatement____sl__.exit

Array_VarDeclarationStatement____sl__.exit:       ; preds = %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, %if.entry.i249
  %824 = phi ptr [ %.pre330, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %823, %if.entry.i249 ]
  %825 = phi i64 [ %818, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %.pre329, %if.entry.i249 ]
  %826 = add nsw i64 %825, 1
  store i64 %826, ptr %memberidx.i244, align 4
  %827 = getelementptr inbounds ptr, ptr %824, i64 %825
  store ptr %817, ptr %827, align 8
  br label %ifend

if.entry.i259:                                    ; preds = %while.entry
  %memberidx1.i252 = getelementptr inbounds %IdentifierToken, ptr %36, i64 0, i32 2
  %828 = load ptr, ptr %memberidx1.i252, align 8
  %829 = call ptr @malloc(i32 4)
  store i32 1701869940, ptr %829, align 8
  %830 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %830, align 8
  %memberidx.i.i.i253 = getelementptr inbounds %string, ptr %830, i64 0, i32 1
  store ptr %829, ptr %memberidx.i.i.i253, align 8
  %memberidx1.i.i.i254 = getelementptr inbounds %string, ptr %830, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i254, align 4
  %memberidx2.i.i.i255 = getelementptr inbounds %string, ptr %830, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i255, align 4
  %memberidx.i.i256 = getelementptr inbounds %string, ptr %828, i64 0, i32 2
  %831 = load i64, ptr %memberidx.i.i256, align 4
  %.not.i.i258 = icmp eq i64 %831, 4
  br i1 %.not.i.i258, label %ifend.i.i262, label %else35

ifend.i.i262:                                     ; preds = %if.entry.i259
  %memberidx2.i.i260 = getelementptr inbounds %string, ptr %828, i64 0, i32 1
  %832 = load ptr, ptr %memberidx2.i.i260, align 8
  %833 = call i64 @memcmp(ptr %832, ptr nonnull %829, i64 4)
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend.i.i262
  %835 = load ptr, ptr %memberidx37, align 8
  %836 = load i64, ptr %memberidx2.i, align 8
  %837 = load ptr, ptr %3, align 8
  %memberidx2.i.i265 = getelementptr inbounds %Array_Token_, ptr %837, i64 0, i32 2
  %838 = load i64, ptr %memberidx2.i.i265, align 4
  %839 = icmp slt i64 %836, %838
  br i1 %839, label %if.entry.i.i268, label %Parser_parse_type_alias.exit

if.entry.i.i268:                                  ; preds = %if.entry34
  %840 = add nsw i64 %836, 1
  store i64 %840, ptr %memberidx2.i, align 8
  %memberidx.i.i.i267 = getelementptr inbounds %Array_Token_, ptr %837, i64 0, i32 1
  %841 = load ptr, ptr %memberidx.i.i.i267, align 8
  %842 = getelementptr inbounds ptr, ptr %841, i64 %840
  %843 = load ptr, ptr %842, align 8
  store ptr %843, ptr %memberidx.i70, align 8
  br label %Parser_parse_type_alias.exit

Parser_parse_type_alias.exit:                     ; preds = %if.entry34, %if.entry.i.i268
  %844 = call ptr @malloc(i32 16)
  %845 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %845, ptr %844, align 8
  %846 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 38)
  %memberidx.i269 = getelementptr inbounds %TypeAliasNode, ptr %844, i64 0, i32 1
  %847 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %847, ptr %memberidx.i269, align 8
  %memberidx.i87 = getelementptr inbounds %Array_TypeAliasNode_, ptr %835, i64 0, i32 2
  %848 = load i64, ptr %memberidx.i87, align 4
  %memberidx1.i88 = getelementptr inbounds %Array_TypeAliasNode_, ptr %835, i64 0, i32 3
  %849 = load i64, ptr %memberidx1.i88, align 4
  %.not.i = icmp slt i64 %848, %849
  br i1 %.not.i, label %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, label %if.entry.i91

Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge: ; preds = %Parser_parse_type_alias.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_TypeAliasNode_, ptr %835, i64 0, i32 1
  %.pre328 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_TypeAliasNode____sl__.exit

if.entry.i91:                                     ; preds = %Parser_parse_type_alias.exit
  %850 = shl nuw i64 %849, 1
  store i64 %850, ptr %memberidx1.i88, align 4
  %memberidx2.i.i90 = getelementptr inbounds %Array_TypeAliasNode_, ptr %835, i64 0, i32 1
  %851 = load ptr, ptr %memberidx2.i.i90, align 8
  %852 = shl i64 %849, 4
  %853 = call ptr @realloc(ptr %851, i64 %852)
  store ptr %853, ptr %memberidx2.i.i90, align 8
  %.pre327 = load i64, ptr %memberidx.i87, align 4
  br label %Array_TypeAliasNode____sl__.exit

Array_TypeAliasNode____sl__.exit:                 ; preds = %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, %if.entry.i91
  %854 = phi ptr [ %.pre328, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %853, %if.entry.i91 ]
  %855 = phi i64 [ %848, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %.pre327, %if.entry.i91 ]
  %856 = add nsw i64 %855, 1
  store i64 %856, ptr %memberidx.i87, align 4
  %857 = getelementptr inbounds ptr, ptr %854, i64 %855
  store ptr %844, ptr %857, align 8
  br label %ifend

else35:                                           ; preds = %while.entry, %if.entry.i259, %ifend.i.i262
  %858 = call ptr @malloc(i32 87)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(87) %858, ptr noundef nonnull align 8 dereferenceable(87) @79, i64 87, i1 false)
  %859 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %859, align 8
  %memberidx.i.i75 = getelementptr inbounds %string, ptr %859, i64 0, i32 1
  store ptr %858, ptr %memberidx.i.i75, align 8
  %memberidx1.i.i76 = getelementptr inbounds %string, ptr %859, i64 0, i32 2
  store i64 87, ptr %memberidx1.i.i76, align 4
  %memberidx2.i.i77 = getelementptr inbounds %string, ptr %859, i64 0, i32 3
  store i64 87, ptr %memberidx2.i.i77, align 4
  %860 = load ptr, ptr %memberidx1.i, align 8
  %861 = call ptr @malloc(i32 24)
  %862 = load ptr, ptr %memberidx.i70, align 8
  %memberidx2.i66 = getelementptr inbounds %Token, ptr %862, i64 0, i32 1
  %863 = load ptr, ptr %memberidx2.i66, align 8
  store i64 2, ptr %861, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %861, i64 0, i32 2
  store ptr %863, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %861, i64 0, i32 1
  store ptr %859, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %860, i64 0, i32 2
  %864 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %860, i64 0, i32 3
  %865 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %864, %865
  br i1 %.not.i.i, label %else35.Parser_error.exit_crit_edge, label %if.entry.i.i

else35.Parser_error.exit_crit_edge:               ; preds = %else35
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %860, i64 0, i32 1
  %.pre407 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %else35
  %866 = shl nuw i64 %865, 1
  store i64 %866, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %860, i64 0, i32 1
  %867 = load ptr, ptr %memberidx2.i.i.i, align 8
  %868 = shl i64 %865, 4
  %869 = call ptr @realloc(ptr %867, i64 %868)
  store ptr %869, ptr %memberidx2.i.i.i, align 8
  %.pre406 = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %else35.Parser_error.exit_crit_edge, %if.entry.i.i
  %870 = phi ptr [ %.pre407, %else35.Parser_error.exit_crit_edge ], [ %869, %if.entry.i.i ]
  %871 = phi i64 [ %864, %else35.Parser_error.exit_crit_edge ], [ %.pre406, %if.entry.i.i ]
  %872 = add nsw i64 %871, 1
  store i64 %872, ptr %memberidx.i.i, align 4
  %873 = getelementptr inbounds ptr, ptr %870, i64 %871
  store ptr %861, ptr %873, align 8
  br label %while.end
}

define internal fastcc ptr @Parser_parse_block(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %BlockNode, ptr %2, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_StatementNode_, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 33
  %memberidx2.i.i26 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx2.i.i26, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %9, %12
  br i1 %13, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %1
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i11.i, align 4
  %16 = load i64, ptr %memberidx2.i12.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %27, %Parser_advance.exit.i ], [ 0, %while.entry.i.preheader ]
  %19 = phi i64 [ %28, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %20 = phi i64 [ %31, %Parser_advance.exit.i ], [ %15, %while.entry.i.preheader ]
  %21 = load i64, ptr %memberidx2.i12.i, align 4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %23 = add nsw i64 %20, 1
  store i64 %23, ptr %memberidx.i11.i, align 4
  %24 = load ptr, ptr %memberidx.i.i.i, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  store ptr %26, ptr %memberidx, align 8
  %.pre = load i64, ptr %26, align 4
  %.pre89 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %27 = phi i64 [ %.pre89, %if.entry.i.i ], [ %18, %while.entry.i ]
  %28 = phi i64 [ %.pre, %if.entry.i.i ], [ %19, %while.entry.i ]
  %29 = phi i64 [ %.pre89, %if.entry.i.i ], [ 0, %while.entry.i ]
  %30 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %31 = phi i64 [ %23, %if.entry.i.i ], [ %20, %while.entry.i ]
  %32 = icmp eq i64 %30, 33
  %33 = icmp eq i64 %29, 0
  %34 = and i1 %32, %33
  br i1 %34, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %1
  %35 = phi i64 [ %11, %1 ], [ %27, %Parser_advance.exit.i ]
  %36 = phi i64 [ %8, %1 ], [ %28, %Parser_advance.exit.i ]
  %37 = icmp eq i64 %36, 27
  br i1 %37, label %if.entry, label %else

if.entry:                                         ; preds = %Parser_new_lines.exit
  %memberidx.i27 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %38 = load i64, ptr %memberidx.i27, align 4
  %39 = load ptr, ptr %0, align 8
  %memberidx2.i28 = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i28, align 4
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %Parser_advance.exit, label %Parser_new_lines.exit44

Parser_advance.exit:                              ; preds = %if.entry
  %42 = add nsw i64 %38, 1
  store i64 %42, ptr %memberidx.i27, align 4
  %memberidx.i.i29 = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i29, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  store ptr %45, ptr %memberidx, align 8
  %.pre92 = load i64, ptr %45, align 4
  %.pre93 = load i64, ptr %memberidx3.i.i, align 4
  %46 = icmp eq i64 %.pre92, 33
  %47 = icmp eq i64 %.pre93, 0
  %48 = and i1 %46, %47
  br i1 %48, label %while.entry.i36.preheader, label %Parser_new_lines.exit44

while.entry.i36.preheader:                        ; preds = %Parser_advance.exit
  %memberidx.i.i.i38 = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %49 = load i64, ptr %memberidx2.i28, align 4
  %50 = icmp slt i64 %42, %49
  br i1 %50, label %while.entry.i36, label %while.entry.i36.us

while.entry.i36.us:                               ; preds = %while.entry.i36.preheader, %while.entry.i36.us
  br label %while.entry.i36.us

while.entry.i36:                                  ; preds = %while.entry.i36.preheader, %Parser_advance.exit.i43
  %51 = phi i64 [ %60, %Parser_advance.exit.i43 ], [ 33, %while.entry.i36.preheader ]
  %52 = phi i64 [ %61, %Parser_advance.exit.i43 ], [ 0, %while.entry.i36.preheader ]
  %53 = phi i64 [ %64, %Parser_advance.exit.i43 ], [ %42, %while.entry.i36.preheader ]
  %54 = load i64, ptr %memberidx2.i28, align 4
  %55 = icmp slt i64 %53, %54
  br i1 %55, label %if.entry.i.i39, label %Parser_advance.exit.i43

if.entry.i.i39:                                   ; preds = %while.entry.i36
  %56 = add nsw i64 %53, 1
  store i64 %56, ptr %memberidx.i27, align 4
  %57 = load ptr, ptr %memberidx.i.i.i38, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %memberidx, align 8
  %.pre94 = load i64, ptr %59, align 4
  %.pre95 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i43

Parser_advance.exit.i43:                          ; preds = %if.entry.i.i39, %while.entry.i36
  %60 = phi i64 [ %.pre94, %if.entry.i.i39 ], [ %51, %while.entry.i36 ]
  %61 = phi i64 [ %.pre95, %if.entry.i.i39 ], [ %52, %while.entry.i36 ]
  %62 = phi i64 [ %.pre95, %if.entry.i.i39 ], [ 0, %while.entry.i36 ]
  %63 = phi i64 [ %.pre94, %if.entry.i.i39 ], [ 33, %while.entry.i36 ]
  %64 = phi i64 [ %56, %if.entry.i.i39 ], [ %53, %while.entry.i36 ]
  %65 = icmp eq i64 %63, 33
  %66 = icmp eq i64 %62, 0
  %67 = and i1 %65, %66
  br i1 %67, label %while.entry.i36, label %Parser_new_lines.exit44

Parser_new_lines.exit44:                          ; preds = %Parser_advance.exit.i43, %if.entry, %Parser_advance.exit
  %68 = phi i64 [ %.pre92, %Parser_advance.exit ], [ 27, %if.entry ], [ %60, %Parser_advance.exit.i43 ]
  %69 = phi i64 [ %.pre93, %Parser_advance.exit ], [ %35, %if.entry ], [ %61, %Parser_advance.exit.i43 ]
  %.fr = freeze i64 %69
  %70 = icmp eq i64 %.fr, 0
  br i1 %70, label %switch.early.test, label %while.end

switch.early.test:                                ; preds = %Parser_new_lines.exit44
  switch i64 %68, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

else:                                             ; preds = %Parser_new_lines.exit
  %71 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %72 = load i64, ptr %memberidx.i.i, align 4
  %73 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %72, %73
  br i1 %.not.i, label %else.Array_StatementNode____sl__.exit_crit_edge, label %if.entry.i51

else.Array_StatementNode____sl__.exit_crit_edge:  ; preds = %else
  %.pre91 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_StatementNode____sl__.exit

if.entry.i51:                                     ; preds = %else
  %74 = shl nuw i64 %73, 1
  store i64 %74, ptr %memberidx1.i.i, align 4
  %75 = load ptr, ptr %memberidx2.i.i, align 8
  %76 = shl i64 %73, 4
  %77 = tail call ptr @realloc(ptr %75, i64 %76)
  store ptr %77, ptr %memberidx2.i.i, align 8
  %.pre90 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_StatementNode____sl__.exit

Array_StatementNode____sl__.exit:                 ; preds = %else.Array_StatementNode____sl__.exit_crit_edge, %if.entry.i51
  %78 = phi ptr [ %.pre91, %else.Array_StatementNode____sl__.exit_crit_edge ], [ %77, %if.entry.i51 ]
  %79 = phi i64 [ %72, %else.Array_StatementNode____sl__.exit_crit_edge ], [ %.pre90, %if.entry.i51 ]
  %80 = add nsw i64 %79, 1
  store i64 %80, ptr %memberidx.i.i, align 4
  %81 = getelementptr inbounds ptr, ptr %78, i64 %79
  store ptr %71, ptr %81, align 8
  br label %ifend

ifend:                                            ; preds = %Array_StatementNode____sl__.exit, %while.end
  ret ptr %2

while.entry:                                      ; preds = %switch.early.test, %switch.early.test81
  %82 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %83 = load i64, ptr %memberidx.i.i, align 4
  %84 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i54 = icmp slt i64 %83, %84
  br i1 %.not.i54, label %while.entry.Array_StatementNode____sl__.exit59_crit_edge, label %if.entry.i57

while.entry.Array_StatementNode____sl__.exit59_crit_edge: ; preds = %while.entry
  %.pre97 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_StatementNode____sl__.exit59

if.entry.i57:                                     ; preds = %while.entry
  %85 = shl nuw i64 %84, 1
  store i64 %85, ptr %memberidx1.i.i, align 4
  %86 = load ptr, ptr %memberidx2.i.i, align 8
  %87 = shl i64 %84, 4
  %88 = tail call ptr @realloc(ptr %86, i64 %87)
  store ptr %88, ptr %memberidx2.i.i, align 8
  %.pre96 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_StatementNode____sl__.exit59

Array_StatementNode____sl__.exit59:               ; preds = %while.entry.Array_StatementNode____sl__.exit59_crit_edge, %if.entry.i57
  %89 = phi ptr [ %.pre97, %while.entry.Array_StatementNode____sl__.exit59_crit_edge ], [ %88, %if.entry.i57 ]
  %90 = phi i64 [ %83, %while.entry.Array_StatementNode____sl__.exit59_crit_edge ], [ %.pre96, %if.entry.i57 ]
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr %memberidx.i.i, align 4
  %92 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %82, ptr %92, align 8
  %93 = load ptr, ptr %memberidx, align 8
  %94 = load i64, ptr %93, align 4
  %95 = icmp eq i64 %94, 33
  %96 = load ptr, ptr %memberidx2.i.i26, align 8
  %memberidx3.i.i63 = getelementptr inbounds %Array_FloError_, ptr %96, i64 0, i32 2
  %97 = load i64, ptr %memberidx3.i.i63, align 4
  %98 = icmp eq i64 %97, 0
  %99 = and i1 %95, %98
  br i1 %99, label %while.entry.i66.preheader, label %Parser_new_lines.exit74

while.entry.i66.preheader:                        ; preds = %Array_StatementNode____sl__.exit59
  %100 = load ptr, ptr %0, align 8
  %memberidx2.i12.i65 = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 2
  %memberidx.i.i.i68 = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 1
  %101 = load i64, ptr %memberidx.i27, align 4
  %102 = load i64, ptr %memberidx2.i12.i65, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %while.entry.i66, label %while.entry.i66.us

while.entry.i66.us:                               ; preds = %while.entry.i66.preheader, %while.entry.i66.us
  br label %while.entry.i66.us

while.entry.i66:                                  ; preds = %while.entry.i66.preheader, %Parser_advance.exit.i73
  %104 = phi i64 [ %113, %Parser_advance.exit.i73 ], [ 33, %while.entry.i66.preheader ]
  %105 = phi i64 [ %114, %Parser_advance.exit.i73 ], [ 0, %while.entry.i66.preheader ]
  %106 = phi i64 [ %117, %Parser_advance.exit.i73 ], [ %101, %while.entry.i66.preheader ]
  %107 = load i64, ptr %memberidx2.i12.i65, align 4
  %108 = icmp slt i64 %106, %107
  br i1 %108, label %if.entry.i.i69, label %Parser_advance.exit.i73

if.entry.i.i69:                                   ; preds = %while.entry.i66
  %109 = add nsw i64 %106, 1
  store i64 %109, ptr %memberidx.i27, align 4
  %110 = load ptr, ptr %memberidx.i.i.i68, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  %.pre98 = load i64, ptr %112, align 4
  %.pre99 = load i64, ptr %memberidx3.i.i63, align 4
  br label %Parser_advance.exit.i73

Parser_advance.exit.i73:                          ; preds = %if.entry.i.i69, %while.entry.i66
  %113 = phi i64 [ %.pre98, %if.entry.i.i69 ], [ %104, %while.entry.i66 ]
  %114 = phi i64 [ %.pre99, %if.entry.i.i69 ], [ %105, %while.entry.i66 ]
  %115 = phi i64 [ %.pre99, %if.entry.i.i69 ], [ 0, %while.entry.i66 ]
  %116 = phi i64 [ %.pre98, %if.entry.i.i69 ], [ 33, %while.entry.i66 ]
  %117 = phi i64 [ %109, %if.entry.i.i69 ], [ %106, %while.entry.i66 ]
  %118 = icmp eq i64 %116, 33
  %119 = icmp eq i64 %115, 0
  %120 = and i1 %118, %119
  br i1 %120, label %while.entry.i66, label %Parser_new_lines.exit74

Parser_new_lines.exit74:                          ; preds = %Parser_advance.exit.i73, %Array_StatementNode____sl__.exit59
  %121 = phi i64 [ %94, %Array_StatementNode____sl__.exit59 ], [ %113, %Parser_advance.exit.i73 ]
  %122 = phi i64 [ %97, %Array_StatementNode____sl__.exit59 ], [ %114, %Parser_advance.exit.i73 ]
  %.fr82 = freeze i64 %122
  %123 = icmp eq i64 %.fr82, 0
  br i1 %123, label %switch.early.test81, label %while.end

switch.early.test81:                              ; preds = %Parser_new_lines.exit74
  switch i64 %121, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

while.end:                                        ; preds = %switch.early.test81, %switch.early.test81, %Parser_new_lines.exit74, %switch.early.test, %switch.early.test, %Parser_new_lines.exit44
  %124 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %ifend
}

define internal fastcc ptr @Parser_parse_type(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  switch i64 %3, label %ifend [
    i64 53, label %if.entry
    i64 25, label %if.entry5
    i64 29, label %if.entry10
  ]

if.entry:                                         ; preds = %1
  %4 = tail call fastcc ptr @Parser_parse_object_type(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %else.i178, %if.entry.i.i176, %if.entry.i173, %1, %ifend11.i, %if.entry9.i, %if.entry
  %type_node.0 = phi ptr [ %4, %if.entry ], [ %34, %if.entry9.i ], [ %41, %ifend11.i ], [ null, %1 ], [ %49, %if.entry.i173 ], [ %49, %if.entry.i.i176 ], [ %49, %else.i178 ]
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 29
  %8 = icmp eq i64 %6, 11
  %9 = or i1 %7, %8
  %10 = icmp eq i64 %6, 4
  %11 = or i1 %10, %9
  %memberidx2.i217 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i217, align 8
  %memberidx3.i218 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i218, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %ifend
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

if.entry5:                                        ; preds = %1
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %16, align 8
  %memberidx.i44.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 2
  store i64 0, ptr %memberidx.i44.i, align 4
  %memberidx1.i45.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 3
  store i64 8, ptr %memberidx1.i45.i, align 4
  %memberidx2.i46.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 1
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %memberidx2.i46.i, align 8
  store i64 0, ptr %memberidx.i44.i, align 4
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx3.i221 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx3.i221, align 8
  %memberidx.i40.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i40.i, align 4
  %21 = load ptr, ptr %0, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i41.i, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i.i222, label %Parser_advance.exit.i224

if.entry.i.i222:                                  ; preds = %if.entry5
  %24 = add nsw i64 %20, 1
  store i64 %24, ptr %memberidx.i40.i, align 4
  %memberidx.i.i43.i = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i43.i, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  store ptr %27, ptr %memberidx, align 8
  br label %Parser_advance.exit.i224

Parser_advance.exit.i224:                         ; preds = %if.entry.i.i222, %if.entry5
  %28 = phi ptr [ %27, %if.entry.i.i222 ], [ %18, %if.entry5 ]
  %29 = load i64, ptr %28, align 4
  %.not.i223 = icmp eq i64 %29, 26
  br i1 %.not.i223, label %ifend.i, label %if.entry.i225

if.entry.i225:                                    ; preds = %Parser_advance.exit.i224
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %16)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i225, %Parser_advance.exit.i224
  %30 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %31 = load ptr, ptr %memberidx, align 8
  %32 = load i64, ptr %31, align 4
  %.not31.i = icmp eq i64 %32, 45
  br i1 %.not31.i, label %ifend11.i, label %if.entry9.i

if.entry9.i:                                      ; preds = %ifend.i
  %memberidx6.i = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx6.i, align 8
  %34 = tail call ptr @malloc(i32 24)
  %35 = tail call ptr @malloc(i32 32)
  %36 = load i64, ptr %19, align 4
  %memberidx1.i34.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i34.i, align 4
  %memberidx2.i35.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i35.i, align 4
  %memberidx3.i36.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 3
  %39 = load i64, ptr %memberidx3.i36.i, align 4
  store i64 %36, ptr %35, align 4
  %memberidx1.i.i37.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i.i38.i, align 4
  %memberidx3.i.i39.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 3
  store i64 %39, ptr %memberidx3.i.i39.i, align 4
  store ptr %35, ptr %34, align 8
  %memberidx.i.i32.i = getelementptr inbounds %TypeNode, ptr %34, i64 0, i32 1
  store i64 15, ptr %memberidx.i.i32.i, align 4
  %memberidx.i33.i = getelementptr inbounds %TupleTypeNode, ptr %34, i64 0, i32 2
  store ptr %16, ptr %memberidx.i33.i, align 8
  br label %ifend

ifend11.i:                                        ; preds = %ifend.i
  %40 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 45)
  %41 = tail call ptr @malloc(i32 32)
  store ptr %19, ptr %41, align 8
  %memberidx.i.i.i227 = getelementptr inbounds %TypeNode, ptr %41, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i.i227, align 4
  %memberidx.i.i228 = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 2
  store ptr %16, ptr %memberidx.i.i228, align 8
  %memberidx12.i = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 3
  %42 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %42, ptr %memberidx12.i, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %19, align 4
  %memberidx1.i.i229 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i.i229, align 4
  %memberidx2.i.i230 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i.i230, align 4
  %memberidx3.i.i231 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i.i231, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i.i, align 4
  store ptr %44, ptr %41, align 8
  br label %ifend

if.entry10:                                       ; preds = %1
  %49 = tail call ptr @malloc(i32 32)
  %50 = tail call ptr @malloc(i32 24)
  %51 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %51, ptr noundef nonnull align 8 dereferenceable(3) @74, i64 3, i1 false)
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i.i213 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i.i213, align 8
  %memberidx1.i.i214 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i214, align 4
  %memberidx2.i.i215 = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i215, align 4
  %53 = load ptr, ptr %memberidx, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx14, align 8
  store i64 53, ptr %50, align 4
  %memberidx1.i.i211 = getelementptr inbounds %Token, ptr %50, i64 0, i32 1
  store ptr %54, ptr %memberidx1.i.i211, align 8
  %memberidx.i212 = getelementptr inbounds %IdentifierToken, ptr %50, i64 0, i32 2
  store ptr %52, ptr %memberidx.i212, align 8
  %55 = load ptr, ptr %memberidx14, align 8
  store ptr %55, ptr %49, align 8
  %memberidx.i.i204 = getelementptr inbounds %TypeNode, ptr %49, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i204, align 4
  %memberidx.i205 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 2
  store ptr %50, ptr %memberidx.i205, align 8
  %memberidx1.i206 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 3
  %56 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %56, align 8
  %memberidx.i5.i207 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i207, align 4
  %memberidx1.i.i208 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i208, align 4
  %memberidx2.i.i209 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 1
  %57 = tail call ptr @malloc(i32 64)
  store ptr %57, ptr %memberidx2.i.i209, align 8
  store i64 0, ptr %memberidx.i5.i207, align 4
  store ptr %56, ptr %memberidx1.i206, align 8
  %memberidx.i198 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %58 = load i64, ptr %memberidx.i198, align 4
  %59 = load ptr, ptr %0, align 8
  %memberidx2.i199 = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 2
  %60 = load i64, ptr %memberidx2.i199, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %if.entry.i202, label %Parser_advance.exit203

if.entry.i202:                                    ; preds = %if.entry10
  %62 = add nsw i64 %58, 1
  store i64 %62, ptr %memberidx.i198, align 4
  %memberidx.i.i201 = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i201, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  store ptr %65, ptr %memberidx, align 8
  br label %Parser_advance.exit203

Parser_advance.exit203:                           ; preds = %if.entry10, %if.entry.i202
  %66 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %67 = load i64, ptr %memberidx.i5.i207, align 4
  %68 = load i64, ptr %memberidx1.i.i208, align 4
  %.not.i192 = icmp slt i64 %67, %68
  br i1 %.not.i192, label %Parser_advance.exit203.Array_TypeNode____sl__.exit197_crit_edge, label %if.entry.i195

Parser_advance.exit203.Array_TypeNode____sl__.exit197_crit_edge: ; preds = %Parser_advance.exit203
  %.pre239 = load ptr, ptr %memberidx2.i.i209, align 8
  br label %Array_TypeNode____sl__.exit197

if.entry.i195:                                    ; preds = %Parser_advance.exit203
  %69 = shl nuw i64 %68, 1
  store i64 %69, ptr %memberidx1.i.i208, align 4
  %70 = load ptr, ptr %memberidx2.i.i209, align 8
  %71 = shl i64 %68, 4
  %72 = tail call ptr @realloc(ptr %70, i64 %71)
  store ptr %72, ptr %memberidx2.i.i209, align 8
  %.pre = load i64, ptr %memberidx.i5.i207, align 4
  br label %Array_TypeNode____sl__.exit197

Array_TypeNode____sl__.exit197:                   ; preds = %Parser_advance.exit203.Array_TypeNode____sl__.exit197_crit_edge, %if.entry.i195
  %73 = phi ptr [ %.pre239, %Parser_advance.exit203.Array_TypeNode____sl__.exit197_crit_edge ], [ %72, %if.entry.i195 ]
  %74 = phi i64 [ %67, %Parser_advance.exit203.Array_TypeNode____sl__.exit197_crit_edge ], [ %.pre, %if.entry.i195 ]
  %75 = add nsw i64 %74, 1
  store i64 %75, ptr %memberidx.i5.i207, align 4
  %76 = getelementptr inbounds ptr, ptr %73, i64 %74
  store ptr %66, ptr %76, align 8
  %77 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %78 = load ptr, ptr %memberidx1.i206, align 8
  %79 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i182 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i182, align 4
  %memberidx1.i183 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 3
  %81 = load i64, ptr %memberidx1.i183, align 4
  %.not.i184 = icmp slt i64 %80, %81
  br i1 %.not.i184, label %Array_TypeNode____sl__.exit197.Array_TypeNode____sl__.exit189_crit_edge, label %if.entry.i187

Array_TypeNode____sl__.exit197.Array_TypeNode____sl__.exit189_crit_edge: ; preds = %Array_TypeNode____sl__.exit197
  %memberidx4.i188.phi.trans.insert = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 1
  %.pre241 = load ptr, ptr %memberidx4.i188.phi.trans.insert, align 8
  br label %Array_TypeNode____sl__.exit189

if.entry.i187:                                    ; preds = %Array_TypeNode____sl__.exit197
  %82 = shl nuw i64 %81, 1
  store i64 %82, ptr %memberidx1.i183, align 4
  %memberidx2.i.i186 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i186, align 8
  %84 = shl i64 %81, 4
  %85 = tail call ptr @realloc(ptr %83, i64 %84)
  store ptr %85, ptr %memberidx2.i.i186, align 8
  %.pre240 = load i64, ptr %memberidx.i182, align 4
  br label %Array_TypeNode____sl__.exit189

Array_TypeNode____sl__.exit189:                   ; preds = %Array_TypeNode____sl__.exit197.Array_TypeNode____sl__.exit189_crit_edge, %if.entry.i187
  %86 = phi ptr [ %.pre241, %Array_TypeNode____sl__.exit197.Array_TypeNode____sl__.exit189_crit_edge ], [ %85, %if.entry.i187 ]
  %87 = phi i64 [ %80, %Array_TypeNode____sl__.exit197.Array_TypeNode____sl__.exit189_crit_edge ], [ %.pre240, %if.entry.i187 ]
  %88 = add nsw i64 %87, 1
  store i64 %88, ptr %memberidx.i182, align 4
  %89 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %79, ptr %89, align 8
  %90 = load ptr, ptr %memberidx, align 8
  %91 = load i64, ptr %90, align 4
  %92 = icmp eq i64 %91, 30
  br i1 %92, label %if.entry.i173, label %else.i178

if.entry.i173:                                    ; preds = %Array_TypeNode____sl__.exit189
  %93 = load i64, ptr %memberidx.i198, align 4
  %94 = load ptr, ptr %0, align 8
  %memberidx2.i.i172 = getelementptr inbounds %Array_Token_, ptr %94, i64 0, i32 2
  %95 = load i64, ptr %memberidx2.i.i172, align 4
  %96 = icmp slt i64 %93, %95
  br i1 %96, label %if.entry.i.i176, label %ifend

if.entry.i.i176:                                  ; preds = %if.entry.i173
  %97 = add nsw i64 %93, 1
  store i64 %97, ptr %memberidx.i198, align 4
  %memberidx.i.i.i175 = getelementptr inbounds %Array_Token_, ptr %94, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i.i.i175, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  store ptr %100, ptr %memberidx, align 8
  br label %ifend

else.i178:                                        ; preds = %Array_TypeNode____sl__.exit189
  %101 = tail call ptr @malloc(i32 16)
  %memberidx35.i179 = getelementptr inbounds %Token, ptr %90, i64 0, i32 1
  %102 = load ptr, ptr %memberidx35.i179, align 8
  store i64 46, ptr %101, align 4
  %memberidx1.i80.i180 = getelementptr inbounds %Token, ptr %101, i64 0, i32 1
  store ptr %102, ptr %memberidx1.i80.i180, align 8
  br label %ifend

while.entry:                                      ; preds = %while.entry.preheader, %ifend29
  %103 = phi i64 [ %127, %ifend29 ], [ %6, %while.entry.preheader ]
  %type_node.1 = phi ptr [ %type_node.3, %ifend29 ], [ %type_node.0, %while.entry.preheader ]
  %104 = icmp eq i64 %103, 29
  br i1 %104, label %if.entry27, label %else28

while.end:                                        ; preds = %ifend29, %ifend
  %type_node.2 = phi ptr [ %type_node.0, %ifend ], [ %type_node.3, %ifend29 ]
  ret ptr %type_node.2

if.entry27:                                       ; preds = %while.entry
  %105 = load i64, ptr %memberidx.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i164 = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx2.i164, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %Parser_advance.exit168, label %else33

Parser_advance.exit168:                           ; preds = %if.entry27
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i, align 4
  %memberidx.i.i166 = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i166, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  %.pre242 = load i64, ptr %112, align 4
  %113 = icmp eq i64 %.pre242, 30
  br i1 %113, label %if.entry32, label %else33

else28:                                           ; preds = %while.entry
  %114 = tail call ptr @malloc(i32 24)
  %115 = load ptr, ptr %type_node.1, align 8
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx48, align 8
  %118 = tail call ptr @malloc(i32 32)
  %119 = load i64, ptr %115, align 4
  %memberidx1.i157 = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 1
  %120 = load i64, ptr %memberidx1.i157, align 4
  %memberidx2.i158 = getelementptr inbounds %FloRange, ptr %115, i64 0, i32 2
  %121 = load i64, ptr %memberidx2.i158, align 4
  %memberidx3.i159 = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 3
  %122 = load i64, ptr %memberidx3.i159, align 4
  store i64 %119, ptr %118, align 4
  %memberidx1.i.i160 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 1
  store i64 %120, ptr %memberidx1.i.i160, align 4
  %memberidx2.i.i161 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i.i161, align 4
  %memberidx3.i.i162 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 3
  store i64 %122, ptr %memberidx3.i.i162, align 4
  store ptr %118, ptr %114, align 8
  %memberidx.i.i155 = getelementptr inbounds %TypeNode, ptr %114, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i155, align 4
  %memberidx.i156 = getelementptr inbounds %PointerTypeNode, ptr %114, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i156, align 8
  %123 = load ptr, ptr %memberidx, align 8
  %124 = load i64, ptr %123, align 4
  %125 = icmp eq i64 %124, 11
  br i1 %125, label %if.entry51, label %else52

ifend29:                                          ; preds = %if.entry.i, %else52, %else.i123, %if.entry.i.i121, %if.entry.i118, %Parser_eat.exit
  %type_node.3 = phi ptr [ %176, %Parser_eat.exit ], [ %type_node.4, %if.entry.i118 ], [ %type_node.4, %if.entry.i.i121 ], [ %type_node.4, %else.i123 ], [ %114, %else52 ], [ %114, %if.entry.i ]
  %126 = load ptr, ptr %memberidx, align 8
  %127 = load i64, ptr %126, align 4
  %128 = icmp eq i64 %127, 29
  %129 = icmp eq i64 %127, 11
  %130 = or i1 %128, %129
  %131 = icmp eq i64 %127, 4
  %132 = or i1 %131, %130
  %133 = load ptr, ptr %memberidx2.i217, align 8
  %memberidx3.i154 = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 2
  %134 = load i64, ptr %memberidx3.i154, align 4
  %135 = icmp eq i64 %134, 0
  %136 = and i1 %132, %135
  br i1 %136, label %while.entry, label %while.end

if.entry32:                                       ; preds = %Parser_advance.exit168
  %137 = tail call ptr @malloc(i32 32)
  %138 = tail call ptr @malloc(i32 24)
  %139 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %139, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %140 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %140, align 8
  %memberidx.i.i149 = getelementptr inbounds %string, ptr %140, i64 0, i32 1
  store ptr %139, ptr %memberidx.i.i149, align 8
  %memberidx1.i.i150 = getelementptr inbounds %string, ptr %140, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i150, align 4
  %memberidx2.i.i151 = getelementptr inbounds %string, ptr %140, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i151, align 4
  %141 = load ptr, ptr %memberidx, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %141, i64 0, i32 1
  %142 = load ptr, ptr %memberidx36, align 8
  store i64 53, ptr %138, align 4
  %memberidx1.i.i147 = getelementptr inbounds %Token, ptr %138, i64 0, i32 1
  store ptr %142, ptr %memberidx1.i.i147, align 8
  %memberidx.i148 = getelementptr inbounds %IdentifierToken, ptr %138, i64 0, i32 2
  store ptr %140, ptr %memberidx.i148, align 8
  %143 = load ptr, ptr %memberidx36, align 8
  store ptr %143, ptr %137, align 8
  %memberidx.i.i141 = getelementptr inbounds %TypeNode, ptr %137, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i141, align 4
  %memberidx.i142 = getelementptr inbounds %RecordTypeNode, ptr %137, i64 0, i32 2
  store ptr %138, ptr %memberidx.i142, align 8
  %memberidx1.i143 = getelementptr inbounds %RecordTypeNode, ptr %137, i64 0, i32 3
  %144 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %144, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %144, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i144 = getelementptr inbounds %Array_TypeNode_, ptr %144, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i144, align 4
  %memberidx2.i.i145 = getelementptr inbounds %Array_TypeNode_, ptr %144, i64 0, i32 1
  %145 = tail call ptr @malloc(i32 64)
  store ptr %145, ptr %memberidx2.i.i145, align 8
  store ptr %144, ptr %memberidx1.i143, align 8
  %146 = load i64, ptr %memberidx1.i.i144, align 4
  %.not.i = icmp sgt i64 %146, 0
  br i1 %.not.i, label %Array_TypeNode____sl__.exit, label %if.entry.i140

if.entry.i140:                                    ; preds = %if.entry32
  %147 = shl nuw i64 %146, 1
  store i64 %147, ptr %memberidx1.i.i144, align 4
  %148 = shl i64 %146, 4
  %149 = tail call ptr @realloc(ptr %145, i64 %148)
  store ptr %149, ptr %memberidx2.i.i145, align 8
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %if.entry32, %if.entry.i140
  %150 = phi ptr [ %145, %if.entry32 ], [ %149, %if.entry.i140 ]
  store i64 1, ptr %memberidx.i5.i, align 4
  store ptr %type_node.1, ptr %150, align 8
  %.pre243 = load ptr, ptr %137, align 8
  %.pre244 = load ptr, ptr %memberidx, align 8
  br label %ifend34

else33:                                           ; preds = %if.entry27, %Parser_advance.exit168
  %151 = tail call ptr @malloc(i32 32)
  %152 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %153 = load ptr, ptr %memberidx, align 8
  %memberidx41 = getelementptr inbounds %Token, ptr %153, i64 0, i32 1
  %154 = load ptr, ptr %memberidx41, align 8
  store ptr %154, ptr %151, align 8
  %memberidx.i.i133 = getelementptr inbounds %TypeNode, ptr %151, i64 0, i32 1
  store i64 14, ptr %memberidx.i.i133, align 4
  %memberidx.i134 = getelementptr inbounds %ArrayTypeNode, ptr %151, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i134, align 8
  %memberidx1.i135 = getelementptr inbounds %ArrayTypeNode, ptr %151, i64 0, i32 3
  store ptr %152, ptr %memberidx1.i135, align 8
  br label %ifend34

ifend34:                                          ; preds = %else33, %Array_TypeNode____sl__.exit
  %155 = phi ptr [ %.pre244, %Array_TypeNode____sl__.exit ], [ %153, %else33 ]
  %156 = phi ptr [ %.pre243, %Array_TypeNode____sl__.exit ], [ %154, %else33 ]
  %type_node.4 = phi ptr [ %137, %Array_TypeNode____sl__.exit ], [ %151, %else33 ]
  %memberidx45 = getelementptr inbounds %Token, ptr %155, i64 0, i32 1
  %157 = load ptr, ptr %memberidx45, align 8
  %158 = tail call ptr @malloc(i32 32)
  %159 = load i64, ptr %156, align 4
  %memberidx1.i127 = getelementptr inbounds %FloRange, ptr %157, i64 0, i32 1
  %160 = load i64, ptr %memberidx1.i127, align 4
  %memberidx2.i128 = getelementptr inbounds %FloRange, ptr %156, i64 0, i32 2
  %161 = load i64, ptr %memberidx2.i128, align 4
  %memberidx3.i129 = getelementptr inbounds %FloRange, ptr %157, i64 0, i32 3
  %162 = load i64, ptr %memberidx3.i129, align 4
  store i64 %159, ptr %158, align 4
  %memberidx1.i.i130 = getelementptr inbounds %FloRange, ptr %158, i64 0, i32 1
  store i64 %160, ptr %memberidx1.i.i130, align 4
  %memberidx2.i.i131 = getelementptr inbounds %FloRange, ptr %158, i64 0, i32 2
  store i64 %161, ptr %memberidx2.i.i131, align 4
  %memberidx3.i.i132 = getelementptr inbounds %FloRange, ptr %158, i64 0, i32 3
  store i64 %162, ptr %memberidx3.i.i132, align 4
  store ptr %158, ptr %type_node.4, align 8
  %163 = load ptr, ptr %memberidx, align 8
  %164 = load i64, ptr %163, align 4
  %165 = icmp eq i64 %164, 30
  br i1 %165, label %if.entry.i118, label %else.i123

if.entry.i118:                                    ; preds = %ifend34
  %166 = load i64, ptr %memberidx.i, align 4
  %167 = load ptr, ptr %0, align 8
  %memberidx2.i.i117 = getelementptr inbounds %Array_Token_, ptr %167, i64 0, i32 2
  %168 = load i64, ptr %memberidx2.i.i117, align 4
  %169 = icmp slt i64 %166, %168
  br i1 %169, label %if.entry.i.i121, label %ifend29

if.entry.i.i121:                                  ; preds = %if.entry.i118
  %170 = add nsw i64 %166, 1
  store i64 %170, ptr %memberidx.i, align 4
  %memberidx.i.i.i120 = getelementptr inbounds %Array_Token_, ptr %167, i64 0, i32 1
  %171 = load ptr, ptr %memberidx.i.i.i120, align 8
  %172 = getelementptr inbounds ptr, ptr %171, i64 %170
  %173 = load ptr, ptr %172, align 8
  store ptr %173, ptr %memberidx, align 8
  br label %ifend29

else.i123:                                        ; preds = %ifend34
  %174 = tail call ptr @malloc(i32 16)
  %memberidx35.i124 = getelementptr inbounds %Token, ptr %163, i64 0, i32 1
  %175 = load ptr, ptr %memberidx35.i124, align 8
  store i64 46, ptr %174, align 4
  %memberidx1.i80.i125 = getelementptr inbounds %Token, ptr %174, i64 0, i32 1
  store ptr %175, ptr %memberidx1.i80.i125, align 8
  br label %ifend29

if.entry51:                                       ; preds = %else28
  %176 = tail call ptr @malloc(i32 24)
  %177 = load ptr, ptr %114, align 8
  %178 = load ptr, ptr %memberidx, align 8
  %179 = load i64, ptr %178, align 4
  %180 = icmp eq i64 %179, 11
  br i1 %180, label %if.entry.i112, label %else.i

if.entry.i112:                                    ; preds = %if.entry51
  %181 = load i64, ptr %memberidx.i, align 4
  %182 = load ptr, ptr %0, align 8
  %memberidx2.i.i111 = getelementptr inbounds %Array_Token_, ptr %182, i64 0, i32 2
  %183 = load i64, ptr %memberidx2.i.i111, align 4
  %184 = icmp slt i64 %181, %183
  br i1 %184, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i112
  %185 = add nsw i64 %181, 1
  store i64 %185, ptr %memberidx.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %182, i64 0, i32 1
  %186 = load ptr, ptr %memberidx.i.i.i, align 8
  %187 = getelementptr inbounds ptr, ptr %186, i64 %185
  %188 = load ptr, ptr %187, align 8
  store ptr %188, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %if.entry51
  %189 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %178, i64 0, i32 1
  %190 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %189, align 4
  %memberidx1.i80.i = getelementptr inbounds %Token, ptr %189, i64 0, i32 1
  store ptr %190, ptr %memberidx1.i80.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i112, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %189, %else.i ], [ %178, %if.entry.i.i ], [ %178, %if.entry.i112 ]
  %memberidx55 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %191 = load ptr, ptr %memberidx55, align 8
  %192 = tail call ptr @malloc(i32 32)
  %193 = load i64, ptr %177, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %191, i64 0, i32 1
  %194 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i107 = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 2
  %195 = load i64, ptr %memberidx2.i107, align 4
  %memberidx3.i108 = getelementptr inbounds %FloRange, ptr %191, i64 0, i32 3
  %196 = load i64, ptr %memberidx3.i108, align 4
  store i64 %193, ptr %192, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %192, i64 0, i32 1
  store i64 %194, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %192, i64 0, i32 2
  store i64 %195, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %192, i64 0, i32 3
  store i64 %196, ptr %memberidx3.i.i, align 4
  store ptr %192, ptr %176, align 8
  %memberidx.i.i105 = getelementptr inbounds %TypeNode, ptr %176, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i105, align 4
  %memberidx.i106 = getelementptr inbounds %PointerTypeNode, ptr %176, i64 0, i32 2
  store ptr %114, ptr %memberidx.i106, align 8
  br label %ifend29

else52:                                           ; preds = %else28
  %197 = load i64, ptr %memberidx.i, align 4
  %198 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %198, i64 0, i32 2
  %199 = load i64, ptr %memberidx2.i, align 4
  %200 = icmp slt i64 %197, %199
  br i1 %200, label %if.entry.i, label %ifend29

if.entry.i:                                       ; preds = %else52
  %201 = add nsw i64 %197, 1
  store i64 %201, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %198, i64 0, i32 1
  %202 = load ptr, ptr %memberidx.i.i, align 8
  %203 = getelementptr inbounds ptr, ptr %202, i64 %201
  %204 = load ptr, ptr %203, align 8
  store ptr %204, ptr %memberidx, align 8
  br label %ifend29
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ExpressionNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ExpressionNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_ExpressionNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc void @Parser_parse_expression_list(ptr %0, ptr nocapture %1, i64 %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx3.i.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %3
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i11.i, align 4
  %13 = load i64, ptr %memberidx2.i12.i, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %15 = phi i64 [ %23, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %16 = phi i64 [ %26, %Parser_advance.exit.i ], [ %12, %while.entry.i.preheader ]
  %17 = load i64, ptr %memberidx2.i12.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %19 = add nsw i64 %16, 1
  store i64 %19, ptr %memberidx.i11.i, align 4
  %20 = load ptr, ptr %memberidx.i.i.i, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %19
  %22 = load ptr, ptr %21, align 8
  store ptr %22, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %22, align 4
  %.pre95 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %23 = phi i64 [ %.pre, %if.entry.i.i ], [ %15, %while.entry.i ]
  %24 = phi i64 [ %.pre95, %if.entry.i.i ], [ 0, %while.entry.i ]
  %25 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %26 = phi i64 [ %19, %if.entry.i.i ], [ %16, %while.entry.i ]
  %27 = icmp eq i64 %25, 33
  %28 = icmp eq i64 %24, 0
  %29 = and i1 %27, %28
  br i1 %29, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %3
  %30 = phi i64 [ %5, %3 ], [ %23, %Parser_advance.exit.i ]
  %31 = icmp eq i64 %30, %2
  br i1 %31, label %common.ret, label %ifend

common.ret:                                       ; preds = %Parser_advance.exit.i81, %while.end, %Parser_new_lines.exit
  ret void

ifend:                                            ; preds = %Parser_new_lines.exit
  %32 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i18, align 4
  %memberidx1.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 3
  %34 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %33, %34
  br i1 %.not.i, label %ifend.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %ifend
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %.pre97 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %35 = shl nuw i64 %34, 1
  store i64 %35, ptr %memberidx1.i, align 4
  %memberidx2.i.i20 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %36 = load ptr, ptr %memberidx2.i.i20, align 8
  %37 = shl i64 %34, 4
  %38 = tail call ptr @realloc(ptr %36, i64 %37)
  store ptr %38, ptr %memberidx2.i.i20, align 8
  %.pre96 = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %ifend.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i
  %39 = phi ptr [ %.pre97, %ifend.Array_ExpressionNode____sl__.exit_crit_edge ], [ %38, %if.entry.i ]
  %40 = phi i64 [ %33, %ifend.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre96, %if.entry.i ]
  %41 = add nsw i64 %40, 1
  store i64 %41, ptr %memberidx.i18, align 4
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %42 = getelementptr inbounds ptr, ptr %39, i64 %40
  store ptr %32, ptr %42, align 8
  %43 = load ptr, ptr %memberidx.i, align 8
  %44 = load i64, ptr %43, align 4
  %45 = icmp eq i64 %44, 33
  %46 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i24 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx3.i.i24, align 4
  %48 = icmp eq i64 %47, 0
  %49 = and i1 %45, %48
  br i1 %49, label %while.entry.i27.preheader, label %Parser_new_lines.exit35

while.entry.i27.preheader:                        ; preds = %Array_ExpressionNode____sl__.exit
  %memberidx.i11.i25 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %50 = load ptr, ptr %0, align 8
  %memberidx2.i12.i26 = getelementptr inbounds %Array_Token_, ptr %50, i64 0, i32 2
  %memberidx.i.i.i29 = getelementptr inbounds %Array_Token_, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i11.i25, align 4
  %52 = load i64, ptr %memberidx2.i12.i26, align 4
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %while.entry.i27, label %while.entry.i27.us

while.entry.i27.us:                               ; preds = %while.entry.i27.preheader, %while.entry.i27.us
  br label %while.entry.i27.us

while.entry.i27:                                  ; preds = %while.entry.i27.preheader, %Parser_advance.exit.i34
  %54 = phi i64 [ %63, %Parser_advance.exit.i34 ], [ 0, %while.entry.i27.preheader ]
  %55 = phi i64 [ %64, %Parser_advance.exit.i34 ], [ 33, %while.entry.i27.preheader ]
  %56 = phi i64 [ %67, %Parser_advance.exit.i34 ], [ %51, %while.entry.i27.preheader ]
  %57 = load i64, ptr %memberidx2.i12.i26, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %if.entry.i.i30, label %Parser_advance.exit.i34

if.entry.i.i30:                                   ; preds = %while.entry.i27
  %59 = add nsw i64 %56, 1
  store i64 %59, ptr %memberidx.i11.i25, align 4
  %60 = load ptr, ptr %memberidx.i.i.i29, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  store ptr %62, ptr %memberidx.i, align 8
  %.pre98 = load i64, ptr %62, align 4
  %.pre99 = load i64, ptr %memberidx3.i.i24, align 4
  br label %Parser_advance.exit.i34

Parser_advance.exit.i34:                          ; preds = %if.entry.i.i30, %while.entry.i27
  %63 = phi i64 [ %.pre99, %if.entry.i.i30 ], [ %54, %while.entry.i27 ]
  %64 = phi i64 [ %.pre98, %if.entry.i.i30 ], [ %55, %while.entry.i27 ]
  %65 = phi i64 [ %.pre99, %if.entry.i.i30 ], [ 0, %while.entry.i27 ]
  %66 = phi i64 [ %.pre98, %if.entry.i.i30 ], [ 33, %while.entry.i27 ]
  %67 = phi i64 [ %59, %if.entry.i.i30 ], [ %56, %while.entry.i27 ]
  %68 = icmp eq i64 %66, 33
  %69 = icmp eq i64 %65, 0
  %70 = and i1 %68, %69
  br i1 %70, label %while.entry.i27, label %Parser_new_lines.exit35

Parser_new_lines.exit35:                          ; preds = %Parser_advance.exit.i34, %Array_ExpressionNode____sl__.exit
  %71 = phi i64 [ %47, %Array_ExpressionNode____sl__.exit ], [ %63, %Parser_advance.exit.i34 ]
  %72 = phi i64 [ %44, %Array_ExpressionNode____sl__.exit ], [ %64, %Parser_advance.exit.i34 ]
  %73 = icmp eq i64 %72, 3
  %74 = icmp eq i64 %71, 0
  %75 = and i1 %73, %74
  br i1 %75, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit35
  %memberidx.i37 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ExpressionNode____sl__.exit64
  %76 = phi ptr [ %46, %while.entry.preheader ], [ %117, %Array_ExpressionNode____sl__.exit64 ]
  %77 = load i64, ptr %memberidx.i37, align 4
  %78 = load ptr, ptr %0, align 8
  %memberidx2.i38 = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i38, align 4
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %Parser_advance.exit, label %Parser_new_lines.exit56

Parser_advance.exit:                              ; preds = %while.entry
  %81 = add nsw i64 %77, 1
  store i64 %81, ptr %memberidx.i37, align 4
  %memberidx.i.i40 = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i.i40, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  store ptr %84, ptr %memberidx.i, align 8
  %.pre100 = load i64, ptr %84, align 4
  %memberidx3.i.i45.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %.pre101 = load i64, ptr %memberidx3.i.i45.phi.trans.insert, align 4
  %85 = icmp eq i64 %.pre100, 33
  %memberidx3.i.i45 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %86 = icmp eq i64 %.pre101, 0
  %87 = and i1 %85, %86
  br i1 %87, label %while.entry.i48.preheader, label %Parser_new_lines.exit56

while.entry.i48.preheader:                        ; preds = %Parser_advance.exit
  %memberidx.i.i.i50 = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %88 = load i64, ptr %memberidx2.i38, align 4
  %89 = icmp slt i64 %81, %88
  br i1 %89, label %while.entry.i48, label %while.entry.i48.us

while.entry.i48.us:                               ; preds = %while.entry.i48.preheader, %while.entry.i48.us
  br label %while.entry.i48.us

while.entry.i48:                                  ; preds = %while.entry.i48.preheader, %Parser_advance.exit.i55
  %90 = phi i64 [ %99, %Parser_advance.exit.i55 ], [ %81, %while.entry.i48.preheader ]
  %91 = load i64, ptr %memberidx2.i38, align 4
  %92 = icmp slt i64 %90, %91
  br i1 %92, label %if.entry.i.i51, label %Parser_advance.exit.i55

if.entry.i.i51:                                   ; preds = %while.entry.i48
  %93 = add nsw i64 %90, 1
  store i64 %93, ptr %memberidx.i37, align 4
  %94 = load ptr, ptr %memberidx.i.i.i50, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  store ptr %96, ptr %memberidx.i, align 8
  %.pre103 = load i64, ptr %96, align 4
  %.pre104 = load i64, ptr %memberidx3.i.i45, align 4
  br label %Parser_advance.exit.i55

Parser_advance.exit.i55:                          ; preds = %if.entry.i.i51, %while.entry.i48
  %97 = phi i64 [ %.pre104, %if.entry.i.i51 ], [ 0, %while.entry.i48 ]
  %98 = phi i64 [ %.pre103, %if.entry.i.i51 ], [ 33, %while.entry.i48 ]
  %99 = phi i64 [ %93, %if.entry.i.i51 ], [ %90, %while.entry.i48 ]
  %100 = icmp eq i64 %98, 33
  %101 = icmp eq i64 %97, 0
  %102 = and i1 %100, %101
  br i1 %102, label %while.entry.i48, label %Parser_new_lines.exit56

Parser_new_lines.exit56:                          ; preds = %Parser_advance.exit.i55, %while.entry, %Parser_advance.exit
  %103 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %104 = load i64, ptr %memberidx.i18, align 4
  %105 = load i64, ptr %memberidx1.i, align 4
  %.not.i59 = icmp slt i64 %104, %105
  br i1 %.not.i59, label %Parser_new_lines.exit56.Array_ExpressionNode____sl__.exit64_crit_edge, label %if.entry.i62

Parser_new_lines.exit56.Array_ExpressionNode____sl__.exit64_crit_edge: ; preds = %Parser_new_lines.exit56
  %.pre106 = load ptr, ptr %memberidx4.i, align 8
  br label %Array_ExpressionNode____sl__.exit64

if.entry.i62:                                     ; preds = %Parser_new_lines.exit56
  %106 = shl nuw i64 %105, 1
  store i64 %106, ptr %memberidx1.i, align 4
  %107 = load ptr, ptr %memberidx4.i, align 8
  %108 = shl i64 %105, 4
  %109 = tail call ptr @realloc(ptr %107, i64 %108)
  store ptr %109, ptr %memberidx4.i, align 8
  %.pre105 = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit64

Array_ExpressionNode____sl__.exit64:              ; preds = %Parser_new_lines.exit56.Array_ExpressionNode____sl__.exit64_crit_edge, %if.entry.i62
  %110 = phi ptr [ %.pre106, %Parser_new_lines.exit56.Array_ExpressionNode____sl__.exit64_crit_edge ], [ %109, %if.entry.i62 ]
  %111 = phi i64 [ %104, %Parser_new_lines.exit56.Array_ExpressionNode____sl__.exit64_crit_edge ], [ %.pre105, %if.entry.i62 ]
  %112 = add nsw i64 %111, 1
  store i64 %112, ptr %memberidx.i18, align 4
  %113 = getelementptr inbounds ptr, ptr %110, i64 %111
  store ptr %103, ptr %113, align 8
  %114 = load ptr, ptr %memberidx.i, align 8
  %115 = load i64, ptr %114, align 4
  %116 = icmp eq i64 %115, 3
  %117 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i67 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 2
  %118 = load i64, ptr %memberidx3.i67, align 4
  %119 = icmp eq i64 %118, 0
  %120 = and i1 %116, %119
  br i1 %120, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ExpressionNode____sl__.exit64, %Parser_new_lines.exit35
  %121 = phi i64 [ %71, %Parser_new_lines.exit35 ], [ %118, %Array_ExpressionNode____sl__.exit64 ]
  %122 = phi ptr [ %46, %Parser_new_lines.exit35 ], [ %117, %Array_ExpressionNode____sl__.exit64 ]
  %123 = phi i64 [ %72, %Parser_new_lines.exit35 ], [ %115, %Array_ExpressionNode____sl__.exit64 ]
  %124 = icmp eq i64 %123, 33
  %memberidx3.i.i71 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %125 = icmp eq i64 %121, 0
  %126 = and i1 %124, %125
  br i1 %126, label %while.entry.i74.preheader, label %common.ret

while.entry.i74.preheader:                        ; preds = %while.end
  %memberidx.i11.i72 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %127 = load ptr, ptr %0, align 8
  %memberidx2.i12.i73 = getelementptr inbounds %Array_Token_, ptr %127, i64 0, i32 2
  %memberidx.i.i.i76 = getelementptr inbounds %Array_Token_, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i11.i72, align 4
  %129 = load i64, ptr %memberidx2.i12.i73, align 4
  %130 = icmp slt i64 %128, %129
  br i1 %130, label %while.entry.i74, label %while.entry.i74.us

while.entry.i74.us:                               ; preds = %while.entry.i74.preheader, %while.entry.i74.us
  br label %while.entry.i74.us

while.entry.i74:                                  ; preds = %while.entry.i74.preheader, %Parser_advance.exit.i81
  %131 = phi i64 [ %140, %Parser_advance.exit.i81 ], [ %128, %while.entry.i74.preheader ]
  %132 = load i64, ptr %memberidx2.i12.i73, align 4
  %133 = icmp slt i64 %131, %132
  br i1 %133, label %if.entry.i.i77, label %Parser_advance.exit.i81

if.entry.i.i77:                                   ; preds = %while.entry.i74
  %134 = add nsw i64 %131, 1
  store i64 %134, ptr %memberidx.i11.i72, align 4
  %135 = load ptr, ptr %memberidx.i.i.i76, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  store ptr %137, ptr %memberidx.i, align 8
  %.pre107 = load i64, ptr %137, align 4
  %.pre108 = load i64, ptr %memberidx3.i.i71, align 4
  br label %Parser_advance.exit.i81

Parser_advance.exit.i81:                          ; preds = %if.entry.i.i77, %while.entry.i74
  %138 = phi i64 [ %.pre108, %if.entry.i.i77 ], [ 0, %while.entry.i74 ]
  %139 = phi i64 [ %.pre107, %if.entry.i.i77 ], [ 33, %while.entry.i74 ]
  %140 = phi i64 [ %134, %if.entry.i.i77 ], [ %131, %while.entry.i74 ]
  %141 = icmp eq i64 %139, 33
  %142 = icmp eq i64 %138, 0
  %143 = and i1 %141, %142
  br i1 %143, label %while.entry.i74, label %common.ret
}

define internal fastcc ptr @Parser_parse_string(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %1 = load ptr, ptr %memberidx.i, align 8
  %2 = load i64, ptr %1, align 4
  %3 = icmp eq i64 %2, 34
  br i1 %3, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %for.entry
  %memberidx.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx.i, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %for.entry
  %12 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %12, align 4
  %memberidx1.i80.i = getelementptr inbounds %Token, ptr %12, i64 0, i32 1
  store ptr %13, ptr %memberidx1.i80.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %12, %else.i ], [ %1, %if.entry.i.i ], [ %1, %if.entry.i ]
  %14 = alloca %Parser, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx, align 8
  store ptr null, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 1
  store ptr %15, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %16, align 8
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 2
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx1.i19 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19, align 4
  %memberidx2.i20 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 1
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %memberidx2.i20, align 8
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx3 = getelementptr inbounds %StrToken, ptr %common.ret.op.i, i64 0, i32 4
  %18 = load ptr, ptr %memberidx3, align 8
  %memberidx440 = getelementptr inbounds %Array_Array_Token__, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx440, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = load ptr, ptr %memberidx.i, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx, align 8
  %memberidx3.i41 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx3.i41, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  %28 = and i1 %20, %27
  br i1 %28, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %Parser_eat.exit
  %memberidx3.i26 = getelementptr inbounds %Parser, ptr %14, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ExpressionNode____sl__.exit
  %29 = phi ptr [ %18, %for.body.lr.ph ], [ %49, %Array_ExpressionNode____sl__.exit ]
  %i.042 = phi i64 [ 0, %for.body.lr.ph ], [ %48, %Array_ExpressionNode____sl__.exit ]
  %memberidx.i23 = getelementptr inbounds %Array_Array_Token__, ptr %29, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i23, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %i.042
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %14, align 8
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i25 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i25, align 4
  %34 = icmp sgt i64 %33, -1
  br i1 %34, label %if.entry.i28, label %Parser_advance.exit

if.entry.i28:                                     ; preds = %for.body
  store i64 0, ptr %memberidx2.i, align 8
  %memberidx.i.i27 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i27, align 8
  %36 = load ptr, ptr %35, align 8
  store ptr %36, ptr %memberidx3.i26, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %for.body, %if.entry.i28
  %37 = call fastcc ptr @Parser_parse_expression(ptr nonnull %14)
  %38 = load i64, ptr %memberidx.i18, align 4
  %39 = load i64, ptr %memberidx1.i19, align 4
  %.not.i = icmp slt i64 %38, %39
  br i1 %.not.i, label %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i33

Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre43 = load ptr, ptr %memberidx2.i20, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i33:                                     ; preds = %Parser_advance.exit
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i19, align 4
  %41 = load ptr, ptr %memberidx2.i20, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i20, align 8
  %.pre = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i33
  %44 = phi ptr [ %.pre43, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %43, %if.entry.i33 ]
  %45 = phi i64 [ %38, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre, %if.entry.i33 ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i18, align 4
  %47 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %37, ptr %47, align 8
  %48 = add nuw nsw i64 %i.042, 1
  %49 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_Array_Token__, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx4, align 4
  %51 = icmp slt i64 %48, %50
  %52 = load ptr, ptr %memberidx.i, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp ne i64 %53, 46
  %55 = load ptr, ptr %memberidx, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  %59 = and i1 %51, %58
  br i1 %59, label %for.body, label %for.end

for.end:                                          ; preds = %Array_ExpressionNode____sl__.exit, %Parser_eat.exit
  %60 = tail call ptr @malloc(i32 40)
  %memberidx.i34 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i34, align 8
  store ptr %61, ptr %60, align 8
  %memberidx.i.i.i35 = getelementptr inbounds %StatementNode, ptr %60, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i35, align 4
  %memberidx.i.i36 = getelementptr inbounds %ExpressionNode, ptr %60, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i36, align 4
  %memberidx1.i37 = getelementptr inbounds %StringExpressionNode, ptr %60, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx1.i37, align 8
  %memberidx2.i38 = getelementptr inbounds %StringExpressionNode, ptr %60, i64 0, i32 4
  store ptr %16, ptr %memberidx2.i38, align 8
  ret ptr %60
}

define internal fastcc ptr @Parser_parse_variable_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 1, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 3
  %memberidx1.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i60, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i60, align 4
  %memberidx.i.i61 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i61, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i60, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i63 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i63, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i66, label %Parser_advance.exit67

if.entry.i66:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i60, align 4
  %memberidx.i.i65 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i.i65, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit67

Parser_advance.exit67:                            ; preds = %if.entry, %if.entry.i66
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre99 = load i64, ptr %.pre, align 4
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit67
  %26 = phi ptr [ null, %Parser_advance.exit ], [ %25, %Parser_advance.exit67 ]
  %27 = phi i64 [ %15, %Parser_advance.exit ], [ %.pre99, %Parser_advance.exit67 ]
  %28 = phi ptr [ %14, %Parser_advance.exit ], [ %.pre, %Parser_advance.exit67 ]
  %memberidx7 = getelementptr inbounds %Token, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx7, align 8
  %30 = icmp eq i64 %27, 38
  br i1 %30, label %if.entry10, label %else11

if.entry10:                                       ; preds = %ifend
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i69 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i69, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i72, label %Parser_advance.exit73

if.entry.i72:                                     ; preds = %if.entry10
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %memberidx.i.i71 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %36 = load ptr, ptr %memberidx.i.i71, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx, align 8
  br label %Parser_advance.exit73

Parser_advance.exit73:                            ; preds = %if.entry10, %if.entry.i72
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx1.i, align 8
  %40 = load ptr, ptr %39, align 8
  br label %ifend12

else11:                                           ; preds = %ifend
  %41 = icmp ne ptr %26, null
  %42 = icmp eq i64 %27, 25
  %43 = and i1 %42, %41
  br i1 %43, label %if.entry19, label %ifend12

ifend12:                                          ; preds = %Parser_advance.exit88, %else11, %Parser_advance.exit73
  %end_range.0 = phi ptr [ %40, %Parser_advance.exit73 ], [ %29, %Parser_advance.exit88 ], [ %29, %else11 ]
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %4, align 4
  %memberidx1.i74 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i74, align 4
  %memberidx2.i75 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i75, align 4
  %memberidx3.i76 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i76, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i, align 4
  store ptr %44, ptr %2, align 8
  ret ptr %2

if.entry19:                                       ; preds = %else11
  %49 = tail call ptr @malloc(i32 41)
  %50 = load ptr, ptr %26, align 8
  %memberidx.i77 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 3
  store ptr %26, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 4
  store i1 true, ptr %memberidx1.i78, align 1
  store ptr %50, ptr %49, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %49, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i79 = getelementptr inbounds %ExpressionNode, ptr %49, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i79, align 4
  %memberidx2.i80 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 5
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %51, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i81 = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i81, align 4
  %memberidx2.i.i82 = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 1
  %52 = tail call ptr @malloc(i32 64)
  store ptr %52, ptr %memberidx2.i.i82, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %51, ptr %memberidx2.i80, align 8
  store i1 false, ptr %memberidx1.i78, align 1
  %53 = load i64, ptr %memberidx.i60, align 4
  %54 = load ptr, ptr %0, align 8
  %memberidx2.i84 = getelementptr inbounds %Array_Token_, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i84, align 4
  %56 = icmp slt i64 %53, %55
  br i1 %56, label %if.entry.i87, label %Parser_advance.exit88

if.entry.i87:                                     ; preds = %if.entry19
  %57 = add nsw i64 %53, 1
  store i64 %57, ptr %memberidx.i60, align 4
  %memberidx.i.i86 = getelementptr inbounds %Array_Token_, ptr %54, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i.i86, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  %60 = load ptr, ptr %59, align 8
  store ptr %60, ptr %memberidx, align 8
  br label %Parser_advance.exit88

Parser_advance.exit88:                            ; preds = %if.entry19, %if.entry.i87
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %51, i64 26)
  %61 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx29 = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx29, align 8
  %63 = tail call ptr @malloc(i32 32)
  %64 = load i64, ptr %50, align 4
  %memberidx1.i89 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i89, align 4
  %memberidx2.i90 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  %66 = load i64, ptr %memberidx2.i90, align 4
  %memberidx3.i91 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 3
  %67 = load i64, ptr %memberidx3.i91, align 4
  store i64 %64, ptr %63, align 4
  %memberidx1.i.i92 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 1
  store i64 %65, ptr %memberidx1.i.i92, align 4
  %memberidx2.i.i93 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i.i93, align 4
  %memberidx3.i.i94 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 3
  store i64 %67, ptr %memberidx3.i.i94, align 4
  store ptr %63, ptr %49, align 8
  store ptr %49, ptr %memberidx1.i, align 8
  br label %ifend12
}

define internal fastcc ptr @Parser_parse_statement(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %ifend38 [
    i64 56, label %if.entry
    i64 60, label %if.entry6
    i64 59, label %if.entry11
    i64 64, label %if.entry16
    i64 55, label %if.entry21
    i64 54, label %if.entry26
    i64 63, label %if.entry31
    i64 62, label %if.entry36
  ]

common.ret:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %Parser_advance.exit.i, %if.entry.i67, %if.entry28.i, %ifend.i, %Parser_advance.exit37.i, %Parser_new_lines.exit.i, %Parser_advance.exit63, %Parser_advance.exit, %if.entry26, %if.entry21, %Parser_parse_while_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %203, %ifend38 ], [ %61, %Parser_parse_while_statement.exit ], [ %183, %if.entry21 ], [ %184, %if.entry26 ], [ %193, %Parser_advance.exit ], [ %202, %Parser_advance.exit63 ], [ %5, %Parser_new_lines.exit.i ], [ %5, %Parser_advance.exit37.i ], [ %80, %ifend.i ], [ %80, %if.entry28.i ], [ %160, %switch.early.test ], [ %160, %if.entry.i67 ], [ %160, %Parser_advance.exit.i ], [ %160, %switch.early.test ], [ %160, %switch.early.test ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 40)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1.i95 = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1.i95, align 8
  store ptr %7, ptr %5, align 8
  %memberidx.i.i.i96 = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i96, align 4
  %memberidx.i.i97 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 4
  store ptr null, ptr %memberidx.i.i97, align 8
  %memberidx.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %8 = load i64, ptr %memberidx.i24.i, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx2.i.i98 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i98, align 4
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %if.entry.i.i100, label %Parser_advance.exit.i107

if.entry.i.i100:                                  ; preds = %if.entry
  %12 = add nsw i64 %8, 1
  store i64 %12, ptr %memberidx.i24.i, align 4
  %memberidx.i.i25.i = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i25.i, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %memberidx, align 8
  br label %Parser_advance.exit.i107

Parser_advance.exit.i107:                         ; preds = %if.entry.i.i100, %if.entry
  %memberidx2.i101 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 2
  %16 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %16, ptr %memberidx2.i101, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 32)
  %19 = load i64, ptr %7, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  %20 = load i64, ptr %memberidx1.i.i102, align 4
  %memberidx2.i26.i = getelementptr inbounds %FloRange, ptr %7, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  %22 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %19, ptr %18, align 4
  %memberidx1.i.i.i103 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i.i103, align 4
  %memberidx2.i.i.i104 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i.i.i104, align 4
  %memberidx3.i.i.i105 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  store i64 %22, ptr %memberidx3.i.i.i105, align 4
  store ptr %18, ptr %5, align 8
  %memberidx7.i106 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 3
  %23 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %23, ptr %memberidx7.i106, align 8
  %24 = load ptr, ptr %memberidx, align 8
  %25 = load i64, ptr %24, align 4
  %26 = icmp eq i64 %25, 33
  %memberidx2.i.i30.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i30.i, align 8
  %memberidx3.i.i31.i = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx3.i.i31.i, align 4
  %29 = icmp eq i64 %28, 0
  %30 = and i1 %26, %29
  br i1 %30, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %Parser_advance.exit.i107
  %31 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 2
  %memberidx.i.i.i.i108 = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i24.i, align 4
  %33 = load i64, ptr %memberidx2.i12.i.i, align 4
  %34 = icmp slt i64 %32, %33
  br i1 %34, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i110
  %35 = phi i64 [ %43, %Parser_advance.exit.i.i110 ], [ 33, %while.entry.i.i.preheader ]
  %36 = phi i64 [ %46, %Parser_advance.exit.i.i110 ], [ %32, %while.entry.i.i.preheader ]
  %37 = load i64, ptr %memberidx2.i12.i.i, align 4
  %38 = icmp slt i64 %36, %37
  br i1 %38, label %if.entry.i.i.i109, label %Parser_advance.exit.i.i110

if.entry.i.i.i109:                                ; preds = %while.entry.i.i
  %39 = add nsw i64 %36, 1
  store i64 %39, ptr %memberidx.i24.i, align 4
  %40 = load ptr, ptr %memberidx.i.i.i.i108, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  store ptr %42, ptr %memberidx, align 8
  %.pre134 = load i64, ptr %42, align 4
  %.pre135 = load i64, ptr %memberidx3.i.i31.i, align 4
  br label %Parser_advance.exit.i.i110

Parser_advance.exit.i.i110:                       ; preds = %if.entry.i.i.i109, %while.entry.i.i
  %43 = phi i64 [ %.pre134, %if.entry.i.i.i109 ], [ %35, %while.entry.i.i ]
  %44 = phi i64 [ %.pre135, %if.entry.i.i.i109 ], [ 0, %while.entry.i.i ]
  %45 = phi i64 [ %.pre134, %if.entry.i.i.i109 ], [ 33, %while.entry.i.i ]
  %46 = phi i64 [ %39, %if.entry.i.i.i109 ], [ %36, %while.entry.i.i ]
  %47 = icmp eq i64 %45, 33
  %48 = icmp eq i64 %44, 0
  %49 = and i1 %47, %48
  br i1 %49, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i110, %Parser_advance.exit.i107
  %50 = phi i64 [ %25, %Parser_advance.exit.i107 ], [ %43, %Parser_advance.exit.i.i110 ]
  %51 = icmp eq i64 %50, 58
  br i1 %51, label %if.entry.i111, label %common.ret

if.entry.i111:                                    ; preds = %Parser_new_lines.exit.i
  %52 = load i64, ptr %memberidx.i24.i, align 4
  %53 = load ptr, ptr %0, align 8
  %memberidx2.i33.i = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 2
  %54 = load i64, ptr %memberidx2.i33.i, align 4
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %if.entry.i36.i, label %Parser_advance.exit37.i

if.entry.i36.i:                                   ; preds = %if.entry.i111
  %56 = add nsw i64 %52, 1
  store i64 %56, ptr %memberidx.i24.i, align 4
  %memberidx.i.i35.i = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i.i35.i, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %memberidx, align 8
  br label %Parser_advance.exit37.i

Parser_advance.exit37.i:                          ; preds = %if.entry.i36.i, %if.entry.i111
  %60 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %60, ptr %memberidx.i.i97, align 8
  br label %common.ret

if.entry6:                                        ; preds = %1
  %61 = tail call ptr @malloc(i32 32)
  %62 = load ptr, ptr %memberidx, align 8
  %memberidx1.i82 = getelementptr inbounds %Token, ptr %62, i64 0, i32 1
  %63 = load ptr, ptr %memberidx1.i82, align 8
  store ptr %63, ptr %61, align 8
  %memberidx.i.i.i83 = getelementptr inbounds %StatementNode, ptr %61, i64 0, i32 1
  store i64 4, ptr %memberidx.i.i.i83, align 4
  %memberidx.i.i84 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %64 = load i64, ptr %memberidx.i.i84, align 4
  %65 = load ptr, ptr %0, align 8
  %memberidx2.i.i85 = getelementptr inbounds %Array_Token_, ptr %65, i64 0, i32 2
  %66 = load i64, ptr %memberidx2.i.i85, align 4
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %if.entry.i.i87, label %Parser_parse_while_statement.exit

if.entry.i.i87:                                   ; preds = %if.entry6
  %68 = add nsw i64 %64, 1
  store i64 %68, ptr %memberidx.i.i84, align 4
  %memberidx.i.i16.i = getelementptr inbounds %Array_Token_, ptr %65, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i16.i, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  store ptr %71, ptr %memberidx, align 8
  br label %Parser_parse_while_statement.exit

Parser_parse_while_statement.exit:                ; preds = %if.entry6, %if.entry.i.i87
  %memberidx2.i88 = getelementptr inbounds %WhileStatementNode, ptr %61, i64 0, i32 2
  %72 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %72, ptr %memberidx2.i88, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = tail call ptr @malloc(i32 32)
  %75 = load i64, ptr %63, align 4
  %memberidx1.i.i89 = getelementptr inbounds %FloRange, ptr %73, i64 0, i32 1
  %76 = load i64, ptr %memberidx1.i.i89, align 4
  %memberidx2.i17.i = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  %77 = load i64, ptr %memberidx2.i17.i, align 4
  %memberidx3.i18.i = getelementptr inbounds %FloRange, ptr %73, i64 0, i32 3
  %78 = load i64, ptr %memberidx3.i18.i, align 4
  store i64 %75, ptr %74, align 4
  %memberidx1.i.i.i90 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 1
  store i64 %76, ptr %memberidx1.i.i.i90, align 4
  %memberidx2.i.i.i91 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 2
  store i64 %77, ptr %memberidx2.i.i.i91, align 4
  %memberidx3.i.i.i92 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 3
  store i64 %78, ptr %memberidx3.i.i.i92, align 4
  store ptr %74, ptr %61, align 8
  %memberidx7.i = getelementptr inbounds %WhileStatementNode, ptr %61, i64 0, i32 3
  %79 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %79, ptr %memberidx7.i, align 8
  br label %common.ret

if.entry11:                                       ; preds = %1
  %80 = tail call ptr @malloc(i32 72)
  %81 = load ptr, ptr %memberidx, align 8
  %memberidx1.i69 = getelementptr inbounds %Token, ptr %81, i64 0, i32 1
  %82 = load ptr, ptr %memberidx1.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 2
  %memberidx1.i.i71 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 3
  %memberidx2.i.i72 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 4
  %memberidx3.i.i73 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 6
  store i64 0, ptr %memberidx3.i.i73, align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx.i.i70, i8 0, i64 24, i1 false)
  store ptr %82, ptr %80, align 8
  %memberidx.i.i.i74 = getelementptr inbounds %StatementNode, ptr %80, i64 0, i32 1
  store i64 3, ptr %memberidx.i.i.i74, align 4
  %memberidx.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %83 = load i64, ptr %memberidx.i60.i, align 4
  %84 = load ptr, ptr %0, align 8
  %memberidx2.i61.i = getelementptr inbounds %Array_Token_, ptr %84, i64 0, i32 2
  %85 = load i64, ptr %memberidx2.i61.i, align 4
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %if.entry.i.i75, label %Parser_advance.exit.i76

if.entry.i.i75:                                   ; preds = %if.entry11
  %87 = add nsw i64 %83, 1
  store i64 %87, ptr %memberidx.i60.i, align 4
  %memberidx.i.i63.i = getelementptr inbounds %Array_Token_, ptr %84, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i.i63.i, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  store ptr %90, ptr %memberidx, align 8
  %.pre = load i64, ptr %memberidx2.i61.i, align 4
  br label %Parser_advance.exit.i76

Parser_advance.exit.i76:                          ; preds = %if.entry.i.i75, %if.entry11
  %91 = phi ptr [ %90, %if.entry.i.i75 ], [ %81, %if.entry11 ]
  %92 = phi i64 [ %.pre, %if.entry.i.i75 ], [ %85, %if.entry11 ]
  %93 = phi i64 [ %87, %if.entry.i.i75 ], [ %83, %if.entry11 ]
  %94 = add nsw i64 %93, 1
  %95 = icmp slt i64 %94, %92
  %96 = add i64 %92, -1
  %.sink137 = select i1 %95, i64 %94, i64 %96
  %memberidx.i12.i.i = getelementptr inbounds %Array_Token_, ptr %84, i64 0, i32 1
  %97 = load ptr, ptr %memberidx.i12.i.i, align 8
  %98 = getelementptr inbounds ptr, ptr %97, i64 %.sink137
  %common.ret.op.i.i = load ptr, ptr %98, align 8
  %99 = load i64, ptr %common.ret.op.i.i, align 4
  %.not.i = icmp eq i64 %99, 69
  br i1 %.not.i, label %else.i, label %if.entry.i77

if.entry.i77:                                     ; preds = %Parser_advance.exit.i76
  %100 = load i64, ptr %91, align 4
  %.not57.i = icmp eq i64 %100, 2
  br i1 %.not57.i, label %if.entry.i84.i, label %ifend7.i

else.i:                                           ; preds = %Parser_advance.exit.i76
  store i64 1, ptr %memberidx3.i.i73, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 7
  %101 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %101, ptr %memberidx22.i, align 8
  %102 = load ptr, ptr %memberidx, align 8
  %103 = load i64, ptr %102, align 4
  %104 = icmp eq i64 %103, 69
  br i1 %104, label %if.entry.i71.i, label %else.i.i

if.entry.i71.i:                                   ; preds = %else.i
  %105 = load i64, ptr %memberidx.i60.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i78 = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx2.i.i.i78, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %if.entry.i.i.i, label %Parser_eat.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i71.i
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %else.i
  %113 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %102, i64 0, i32 1
  %114 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %113, align 4
  %memberidx1.i80.i.i = getelementptr inbounds %Token, ptr %113, i64 0, i32 1
  store ptr %114, ptr %memberidx1.i80.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i71.i, %if.entry.i.i.i, %else.i.i
  %memberidx23.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 5
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %115, ptr %memberidx23.i, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry17.i, %Parser_eat.exit105.i, %Parser_eat.exit.i
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx27.i = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx27.i, align 8
  %118 = tail call ptr @malloc(i32 32)
  %119 = load i64, ptr %82, align 4
  %memberidx1.i72.i = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 1
  %120 = load i64, ptr %memberidx1.i72.i, align 4
  %memberidx2.i73.i = getelementptr inbounds %FloRange, ptr %82, i64 0, i32 2
  %121 = load i64, ptr %memberidx2.i73.i, align 4
  %memberidx3.i74.i = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 3
  %122 = load i64, ptr %memberidx3.i74.i, align 4
  store i64 %119, ptr %118, align 4
  %memberidx1.i.i.i80 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 1
  store i64 %120, ptr %memberidx1.i.i.i80, align 4
  %memberidx2.i.i75.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i.i75.i, align 4
  %memberidx3.i.i76.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 3
  store i64 %122, ptr %memberidx3.i.i76.i, align 4
  store ptr %118, ptr %80, align 8
  %123 = load ptr, ptr %memberidx, align 8
  %124 = load i64, ptr %123, align 4
  %125 = icmp ne i64 %124, 46
  %memberidx2.i78.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %126 = load ptr, ptr %memberidx2.i78.i, align 8
  %memberidx3.i79.i = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 2
  %127 = load i64, ptr %memberidx3.i79.i, align 4
  %128 = icmp eq i64 %127, 0
  %129 = and i1 %125, %128
  br i1 %129, label %if.entry28.i, label %common.ret

ifend7.i:                                         ; preds = %if.entry.i77
  %130 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %130, ptr %memberidx.i.i70, align 8
  %.pre128 = load ptr, ptr %memberidx, align 8
  %.pre129 = load i64, ptr %.pre128, align 4
  %phi.cmp = icmp eq i64 %.pre129, 2
  br i1 %phi.cmp, label %if.entry.i84.i, label %else.i89.i

if.entry.i84.i:                                   ; preds = %if.entry.i77, %ifend7.i
  %131 = phi ptr [ %.pre128, %ifend7.i ], [ %91, %if.entry.i77 ]
  %132 = load i64, ptr %memberidx.i60.i, align 4
  %133 = load ptr, ptr %0, align 8
  %memberidx2.i.i83.i = getelementptr inbounds %Array_Token_, ptr %133, i64 0, i32 2
  %134 = load i64, ptr %memberidx2.i.i83.i, align 4
  %135 = icmp slt i64 %132, %134
  br i1 %135, label %if.entry.i.i87.i, label %Parser_eat.exit92.i

if.entry.i.i87.i:                                 ; preds = %if.entry.i84.i
  %136 = add nsw i64 %132, 1
  store i64 %136, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i86.i = getelementptr inbounds %Array_Token_, ptr %133, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i.i.i86.i, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  store ptr %139, ptr %memberidx, align 8
  br label %Parser_eat.exit92.i

else.i89.i:                                       ; preds = %ifend7.i
  %140 = tail call ptr @malloc(i32 16)
  %memberidx35.i90.i = getelementptr inbounds %Token, ptr %.pre128, i64 0, i32 1
  %141 = load ptr, ptr %memberidx35.i90.i, align 8
  store i64 46, ptr %140, align 4
  %memberidx1.i80.i91.i = getelementptr inbounds %Token, ptr %140, i64 0, i32 1
  store ptr %141, ptr %memberidx1.i80.i91.i, align 8
  %.pre130 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit92.i

Parser_eat.exit92.i:                              ; preds = %if.entry.i84.i, %if.entry.i.i87.i, %else.i89.i
  %142 = phi ptr [ %131, %if.entry.i84.i ], [ %139, %if.entry.i.i87.i ], [ %.pre130, %else.i89.i ]
  %143 = load i64, ptr %142, align 4
  %.not58.i = icmp eq i64 %143, 2
  br i1 %.not58.i, label %if.entry.i97.i, label %ifend13.i

ifend13.i:                                        ; preds = %Parser_eat.exit92.i
  %144 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %144, ptr %memberidx1.i.i71, align 8
  %.pre131 = load ptr, ptr %memberidx, align 8
  %.pre132 = load i64, ptr %.pre131, align 4
  %phi.cmp136 = icmp eq i64 %.pre132, 2
  br i1 %phi.cmp136, label %if.entry.i97.i, label %else.i102.i

if.entry.i97.i:                                   ; preds = %Parser_eat.exit92.i, %ifend13.i
  %145 = phi ptr [ %.pre131, %ifend13.i ], [ %142, %Parser_eat.exit92.i ]
  %146 = load i64, ptr %memberidx.i60.i, align 4
  %147 = load ptr, ptr %0, align 8
  %memberidx2.i.i96.i = getelementptr inbounds %Array_Token_, ptr %147, i64 0, i32 2
  %148 = load i64, ptr %memberidx2.i.i96.i, align 4
  %149 = icmp slt i64 %146, %148
  br i1 %149, label %if.entry.i.i100.i, label %Parser_eat.exit105.i

if.entry.i.i100.i:                                ; preds = %if.entry.i97.i
  %150 = add nsw i64 %146, 1
  store i64 %150, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i99.i = getelementptr inbounds %Array_Token_, ptr %147, i64 0, i32 1
  %151 = load ptr, ptr %memberidx.i.i.i99.i, align 8
  %152 = getelementptr inbounds ptr, ptr %151, i64 %150
  %153 = load ptr, ptr %152, align 8
  store ptr %153, ptr %memberidx, align 8
  br label %Parser_eat.exit105.i

else.i102.i:                                      ; preds = %ifend13.i
  %154 = tail call ptr @malloc(i32 16)
  %memberidx35.i103.i = getelementptr inbounds %Token, ptr %.pre131, i64 0, i32 1
  %155 = load ptr, ptr %memberidx35.i103.i, align 8
  store i64 46, ptr %154, align 4
  %memberidx1.i80.i104.i = getelementptr inbounds %Token, ptr %154, i64 0, i32 1
  store ptr %155, ptr %memberidx1.i80.i104.i, align 8
  %.pre133 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit105.i

Parser_eat.exit105.i:                             ; preds = %if.entry.i97.i, %if.entry.i.i100.i, %else.i102.i
  %156 = phi ptr [ %145, %if.entry.i97.i ], [ %153, %if.entry.i.i100.i ], [ %.pre133, %else.i102.i ]
  %157 = load i64, ptr %156, align 4
  %.not59.i = icmp eq i64 %157, 27
  br i1 %.not59.i, label %ifend.i, label %if.entry17.i

if.entry17.i:                                     ; preds = %Parser_eat.exit105.i
  %158 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %158, ptr %memberidx2.i.i72, align 8
  br label %ifend.i

if.entry28.i:                                     ; preds = %ifend.i
  %memberidx31.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 8
  %159 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %159, ptr %memberidx31.i, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %160 = tail call ptr @malloc(i32 24)
  %161 = load ptr, ptr %memberidx, align 8
  %memberidx1.i = getelementptr inbounds %Token, ptr %161, i64 0, i32 1
  %162 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i66 = getelementptr inbounds %ReturnStatementNode, ptr %160, i64 0, i32 2
  store ptr null, ptr %memberidx.i.i66, align 8
  store ptr %162, ptr %160, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %160, i64 0, i32 1
  store i64 7, ptr %memberidx.i.i.i, align 4
  %memberidx.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %163 = load i64, ptr %memberidx.i19.i, align 4
  %164 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %164, i64 0, i32 2
  %165 = load i64, ptr %memberidx2.i.i, align 4
  %166 = icmp slt i64 %163, %165
  br i1 %166, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry16
  %167 = add nsw i64 %163, 1
  store i64 %167, ptr %memberidx.i19.i, align 4
  %memberidx.i.i20.i = getelementptr inbounds %Array_Token_, ptr %164, i64 0, i32 1
  %168 = load ptr, ptr %memberidx.i.i20.i, align 8
  %169 = getelementptr inbounds ptr, ptr %168, i64 %167
  %170 = load ptr, ptr %169, align 8
  store ptr %170, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry16
  %171 = phi ptr [ %170, %if.entry.i.i ], [ %161, %if.entry16 ]
  %memberidx2.i22.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %172 = load ptr, ptr %memberidx2.i22.i, align 8
  %memberidx3.i23.i = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 2
  %173 = load i64, ptr %memberidx3.i23.i, align 4
  %.fr = freeze i64 %173
  %174 = icmp eq i64 %.fr, 0
  br i1 %174, label %switch.early.test, label %common.ret

switch.early.test:                                ; preds = %Parser_advance.exit.i
  %175 = load i64, ptr %171, align 4
  switch i64 %175, label %if.entry.i67 [
    i64 46, label %common.ret
    i64 33, label %common.ret
    i64 28, label %common.ret
  ]

if.entry.i67:                                     ; preds = %switch.early.test
  %176 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %177 = load ptr, ptr %176, align 8
  %178 = tail call ptr @malloc(i32 32)
  %179 = load i64, ptr %162, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 1
  %180 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i24.i = getelementptr inbounds %FloRange, ptr %162, i64 0, i32 2
  %181 = load i64, ptr %memberidx2.i24.i, align 4
  %memberidx3.i25.i = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 3
  %182 = load i64, ptr %memberidx3.i25.i, align 4
  store i64 %179, ptr %178, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 1
  store i64 %180, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 2
  store i64 %181, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 3
  store i64 %182, ptr %memberidx3.i.i.i, align 4
  store ptr %178, ptr %160, align 8
  store ptr %176, ptr %memberidx.i.i66, align 8
  br label %common.ret

if.entry21:                                       ; preds = %1
  %183 = tail call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry26:                                       ; preds = %1
  %184 = tail call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry31:                                       ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %185 = load i64, ptr %memberidx.i, align 4
  %186 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %186, i64 0, i32 2
  %187 = load i64, ptr %memberidx2.i, align 4
  %188 = icmp slt i64 %185, %187
  br i1 %188, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry31
  %189 = add nsw i64 %185, 1
  store i64 %189, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %186, i64 0, i32 1
  %190 = load ptr, ptr %memberidx.i.i, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %189
  %192 = load ptr, ptr %191, align 8
  store ptr %192, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry31, %if.entry.i
  %193 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %193, align 8
  %memberidx.i57 = getelementptr inbounds %StatementNode, ptr %193, i64 0, i32 1
  store i64 5, ptr %memberidx.i57, align 4
  br label %common.ret

if.entry36:                                       ; preds = %1
  %memberidx.i58 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %194 = load i64, ptr %memberidx.i58, align 4
  %195 = load ptr, ptr %0, align 8
  %memberidx2.i59 = getelementptr inbounds %Array_Token_, ptr %195, i64 0, i32 2
  %196 = load i64, ptr %memberidx2.i59, align 4
  %197 = icmp slt i64 %194, %196
  br i1 %197, label %if.entry.i62, label %Parser_advance.exit63

if.entry.i62:                                     ; preds = %if.entry36
  %198 = add nsw i64 %194, 1
  store i64 %198, ptr %memberidx.i58, align 4
  %memberidx.i.i61 = getelementptr inbounds %Array_Token_, ptr %195, i64 0, i32 1
  %199 = load ptr, ptr %memberidx.i.i61, align 8
  %200 = getelementptr inbounds ptr, ptr %199, i64 %198
  %201 = load ptr, ptr %200, align 8
  store ptr %201, ptr %memberidx, align 8
  br label %Parser_advance.exit63

Parser_advance.exit63:                            ; preds = %if.entry36, %if.entry.i62
  %202 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %202, align 8
  %memberidx.i64 = getelementptr inbounds %StatementNode, ptr %202, i64 0, i32 1
  store i64 6, ptr %memberidx.i64, align 4
  br label %common.ret

ifend38:                                          ; preds = %1
  %203 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc void @Parser_parse_args(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %2
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i11.i, align 4
  %12 = load i64, ptr %memberidx2.i12.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %14 = phi i64 [ %23, %Parser_advance.exit.i ], [ %11, %while.entry.i.preheader ]
  %15 = load i64, ptr %memberidx2.i12.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i11.i, align 4
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %20, align 4
  %.pre48 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %21 = phi i64 [ %.pre48, %if.entry.i.i ], [ 0, %while.entry.i ]
  %22 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %23 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.entry.i ]
  %24 = icmp eq i64 %22, 33
  %25 = icmp eq i64 %21, 0
  %26 = and i1 %24, %25
  br i1 %26, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %27 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %memberidx.i17 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i17, align 4
  %memberidx1.i18 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 3
  %29 = load i64, ptr %memberidx1.i18, align 4
  %.not.i19 = icmp slt i64 %28, %29
  br i1 %.not.i19, label %Parser_new_lines.exit.Array_ArgNode____sl__.exit24_crit_edge, label %if.entry.i22

Parser_new_lines.exit.Array_ArgNode____sl__.exit24_crit_edge: ; preds = %Parser_new_lines.exit
  %memberidx4.i23.phi.trans.insert = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %.pre50 = load ptr, ptr %memberidx4.i23.phi.trans.insert, align 8
  br label %Array_ArgNode____sl__.exit24

if.entry.i22:                                     ; preds = %Parser_new_lines.exit
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx1.i18, align 4
  %memberidx2.i.i21 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %31 = load ptr, ptr %memberidx2.i.i21, align 8
  %32 = shl i64 %29, 4
  %33 = tail call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %memberidx2.i.i21, align 8
  %.pre49 = load i64, ptr %memberidx.i17, align 4
  br label %Array_ArgNode____sl__.exit24

Array_ArgNode____sl__.exit24:                     ; preds = %Parser_new_lines.exit.Array_ArgNode____sl__.exit24_crit_edge, %if.entry.i22
  %34 = phi ptr [ %.pre50, %Parser_new_lines.exit.Array_ArgNode____sl__.exit24_crit_edge ], [ %33, %if.entry.i22 ]
  %35 = phi i64 [ %28, %Parser_new_lines.exit.Array_ArgNode____sl__.exit24_crit_edge ], [ %.pre49, %if.entry.i22 ]
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr %memberidx.i17, align 4
  %memberidx4.i23 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %37 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %27, ptr %37, align 8
  %38 = load ptr, ptr %memberidx.i, align 8
  %39 = load i64, ptr %38, align 4
  %40 = icmp eq i64 %39, 3
  %41 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i27 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %42 = load i64, ptr %memberidx3.i27, align 4
  %43 = icmp eq i64 %42, 0
  %44 = and i1 %40, %43
  br i1 %44, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_ArgNode____sl__.exit24
  %memberidx.i11.i32 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ArgNode____sl__.exit
  %45 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 3)
  %46 = load ptr, ptr %memberidx.i, align 8
  %47 = load i64, ptr %46, align 4
  %48 = icmp eq i64 %47, 33
  %49 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i31 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i31, align 4
  %51 = icmp eq i64 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %while.entry.i34.preheader, label %Parser_new_lines.exit42

while.entry.i34.preheader:                        ; preds = %while.entry
  %53 = load ptr, ptr %0, align 8
  %memberidx2.i12.i33 = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 2
  %memberidx.i.i.i36 = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i11.i32, align 4
  %55 = load i64, ptr %memberidx2.i12.i33, align 4
  %56 = icmp slt i64 %54, %55
  br i1 %56, label %while.entry.i34, label %while.entry.i34.us

while.entry.i34.us:                               ; preds = %while.entry.i34.preheader, %while.entry.i34.us
  br label %while.entry.i34.us

while.entry.i34:                                  ; preds = %while.entry.i34.preheader, %Parser_advance.exit.i41
  %57 = phi i64 [ %66, %Parser_advance.exit.i41 ], [ %54, %while.entry.i34.preheader ]
  %58 = load i64, ptr %memberidx2.i12.i33, align 4
  %59 = icmp slt i64 %57, %58
  br i1 %59, label %if.entry.i.i37, label %Parser_advance.exit.i41

if.entry.i.i37:                                   ; preds = %while.entry.i34
  %60 = add nsw i64 %57, 1
  store i64 %60, ptr %memberidx.i11.i32, align 4
  %61 = load ptr, ptr %memberidx.i.i.i36, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  store ptr %63, ptr %memberidx.i, align 8
  %.pre51 = load i64, ptr %63, align 4
  %.pre52 = load i64, ptr %memberidx3.i.i31, align 4
  br label %Parser_advance.exit.i41

Parser_advance.exit.i41:                          ; preds = %if.entry.i.i37, %while.entry.i34
  %64 = phi i64 [ %.pre52, %if.entry.i.i37 ], [ 0, %while.entry.i34 ]
  %65 = phi i64 [ %.pre51, %if.entry.i.i37 ], [ 33, %while.entry.i34 ]
  %66 = phi i64 [ %60, %if.entry.i.i37 ], [ %57, %while.entry.i34 ]
  %67 = icmp eq i64 %65, 33
  %68 = icmp eq i64 %64, 0
  %69 = and i1 %67, %68
  br i1 %69, label %while.entry.i34, label %Parser_new_lines.exit42

Parser_new_lines.exit42:                          ; preds = %Parser_advance.exit.i41, %while.entry
  %70 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %71 = load i64, ptr %memberidx.i17, align 4
  %72 = load i64, ptr %memberidx1.i18, align 4
  %.not.i = icmp slt i64 %71, %72
  br i1 %.not.i, label %Parser_new_lines.exit42.Array_ArgNode____sl__.exit_crit_edge, label %if.entry.i

Parser_new_lines.exit42.Array_ArgNode____sl__.exit_crit_edge: ; preds = %Parser_new_lines.exit42
  %.pre54 = load ptr, ptr %memberidx4.i23, align 8
  br label %Array_ArgNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_new_lines.exit42
  %73 = shl nuw i64 %72, 1
  store i64 %73, ptr %memberidx1.i18, align 4
  %74 = load ptr, ptr %memberidx4.i23, align 8
  %75 = shl i64 %72, 4
  %76 = tail call ptr @realloc(ptr %74, i64 %75)
  store ptr %76, ptr %memberidx4.i23, align 8
  %.pre53 = load i64, ptr %memberidx.i17, align 4
  br label %Array_ArgNode____sl__.exit

Array_ArgNode____sl__.exit:                       ; preds = %Parser_new_lines.exit42.Array_ArgNode____sl__.exit_crit_edge, %if.entry.i
  %77 = phi ptr [ %.pre54, %Parser_new_lines.exit42.Array_ArgNode____sl__.exit_crit_edge ], [ %76, %if.entry.i ]
  %78 = phi i64 [ %71, %Parser_new_lines.exit42.Array_ArgNode____sl__.exit_crit_edge ], [ %.pre53, %if.entry.i ]
  %79 = add nsw i64 %78, 1
  store i64 %79, ptr %memberidx.i17, align 4
  %80 = getelementptr inbounds ptr, ptr %77, i64 %78
  store ptr %70, ptr %80, align 8
  %81 = load ptr, ptr %memberidx.i, align 8
  %82 = load i64, ptr %81, align 4
  %83 = icmp eq i64 %82, 3
  %84 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %84, i64 0, i32 2
  %85 = load i64, ptr %memberidx3.i, align 4
  %86 = icmp eq i64 %85, 0
  %87 = and i1 %83, %86
  br i1 %87, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ArgNode____sl__.exit, %Array_ArgNode____sl__.exit24
  ret void
}

define internal fastcc ptr @Parser_parse_const_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 2, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 3
  store ptr null, ptr %memberidx.i, align 8
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %5 = load i64, ptr %memberidx.i24, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i24, align 4
  %memberidx.i.i25 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i25, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i24, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i27 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i27, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i30, label %Parser_advance.exit31

if.entry.i30:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i24, align 4
  %memberidx.i.i29 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i.i29, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit31

Parser_advance.exit31:                            ; preds = %if.entry, %if.entry.i30
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit31
  %26 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 38)
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 4
  %27 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %27, ptr %memberidx6, align 8
  %28 = load ptr, ptr %27, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i32 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i32, align 4
  %memberidx3.i33 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i33, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i22 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i22, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i25, label %Array_ExpressionNode____sl__.exit

if.entry.i25:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i, align 4
  %memberidx.i.i24 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i24, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %memberidx, align 8
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %if.entry.i25, %if.entry
  %24 = tail call ptr @malloc(i32 32)
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %24, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i27 = getelementptr inbounds %ExpressionNode, ptr %24, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i27, align 4
  %memberidx.i28 = getelementptr inbounds %TupleExpressionNode, ptr %24, i64 0, i32 3
  %25 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %25, align 8
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 2
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 1
  %26 = tail call ptr @malloc(i32 64)
  store ptr %26, ptr %memberidx2.i.i, align 8
  store ptr %25, ptr %memberidx.i28, align 8
  store i64 1, ptr %memberidx.i3.i, align 4
  store ptr %12, ptr %26, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %25, i64 26)
  %27 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx8, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %3, align 4
  %memberidx1.i34 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i34, align 4
  %memberidx2.i35 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i35, align 4
  %memberidx3.i36 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i36, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i37 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i37, align 4
  %memberidx2.i.i38 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i38, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %24, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Array_ExpressionNode____sl__.exit
  %expression.0 = phi ptr [ %24, %Array_ExpressionNode____sl__.exit ], [ %12, %Parser_advance.exit ]
  %34 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  ret ptr %expression.0
}

define internal fastcc void @Parser_parse_type_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_type(ptr %0)
  %memberidx.i20 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 3
  %5 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %4, %5
  br i1 %.not.i22, label %.Array_TypeNode____sl__.exit27_crit_edge, label %if.entry.i25

.Array_TypeNode____sl__.exit27_crit_edge:         ; preds = %2
  %memberidx4.i26.phi.trans.insert = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %.pre28 = load ptr, ptr %memberidx4.i26.phi.trans.insert, align 8
  br label %Array_TypeNode____sl__.exit27

if.entry.i25:                                     ; preds = %2
  %6 = shl nuw i64 %5, 1
  store i64 %6, ptr %memberidx1.i21, align 4
  %memberidx2.i.i24 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i24, align 8
  %8 = shl i64 %5, 4
  %9 = tail call ptr @realloc(ptr %7, i64 %8)
  store ptr %9, ptr %memberidx2.i.i24, align 8
  %.pre = load i64, ptr %memberidx.i20, align 4
  br label %Array_TypeNode____sl__.exit27

Array_TypeNode____sl__.exit27:                    ; preds = %.Array_TypeNode____sl__.exit27_crit_edge, %if.entry.i25
  %10 = phi ptr [ %.pre28, %.Array_TypeNode____sl__.exit27_crit_edge ], [ %9, %if.entry.i25 ]
  %11 = phi i64 [ %4, %.Array_TypeNode____sl__.exit27_crit_edge ], [ %.pre, %if.entry.i25 ]
  %12 = add nsw i64 %11, 1
  store i64 %12, ptr %memberidx.i20, align 4
  %memberidx4.i26 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %13 = getelementptr inbounds ptr, ptr %10, i64 %11
  store ptr %3, ptr %13, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 3
  %memberidx2.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i18, align 8
  %memberidx3.i19 = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i19, align 4
  %19 = icmp eq i64 %18, 0
  %20 = and i1 %16, %19
  br i1 %20, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_TypeNode____sl__.exit27
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_TypeNode____sl__.exit
  %21 = load i64, ptr %memberidx.i12, align 4
  %22 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i13, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i16, label %Parser_advance.exit

if.entry.i16:                                     ; preds = %while.entry
  %25 = add nsw i64 %21, 1
  store i64 %25, ptr %memberidx.i12, align 4
  %memberidx.i.i15 = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i15, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  store ptr %28, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i16
  %29 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %30 = load i64, ptr %memberidx.i20, align 4
  %31 = load i64, ptr %memberidx1.i21, align 4
  %.not.i = icmp slt i64 %30, %31
  br i1 %.not.i, label %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, label %if.entry.i

Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre30 = load ptr, ptr %memberidx4.i26, align 8
  br label %Array_TypeNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_advance.exit
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx1.i21, align 4
  %33 = load ptr, ptr %memberidx4.i26, align 8
  %34 = shl i64 %31, 4
  %35 = tail call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx4.i26, align 8
  %.pre29 = load i64, ptr %memberidx.i20, align 4
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, %if.entry.i
  %36 = phi ptr [ %.pre30, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %35, %if.entry.i ]
  %37 = phi i64 [ %30, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %.pre29, %if.entry.i ]
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr %memberidx.i20, align 4
  %39 = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %39, align 8
  %40 = load ptr, ptr %memberidx, align 8
  %41 = load i64, ptr %40, align 4
  %42 = icmp eq i64 %41, 3
  %43 = load ptr, ptr %memberidx2.i18, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx3.i, align 4
  %45 = icmp eq i64 %44, 0
  %46 = and i1 %42, %45
  br i1 %46, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_TypeNode____sl__.exit, %Array_TypeNode____sl__.exit27
  ret void
}

define internal fastcc ptr @Parser_parse_arg(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %3 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  store ptr %3, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 1
  %memberidx2.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 2
  %memberidx.i51 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx1.i, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %memberidx.i51, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp ne i64 %5, 46
  %memberidx2.i52 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx3.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %ifend, label %common.ret

common.ret:                                       ; preds = %Parser_error.exit, %ifend13, %Parser_advance.exit, %1
  ret ptr %2

ifend:                                            ; preds = %1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx.i53 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %12 = load i64, ptr %memberidx.i53, align 4
  %13 = load ptr, ptr %0, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx2.i54, align 4
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry2
  %16 = add nsw i64 %12, 1
  store i64 %16, ptr %memberidx.i53, align 4
  %memberidx.i.i56 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i56, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  store ptr %19, ptr %memberidx.i51, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry2, %if.entry.i
  %20 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %20, ptr %memberidx1.i, align 8
  %21 = load ptr, ptr %memberidx.i51, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx3.i62 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx3.i62, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %ifend4, label %common.ret

ifend4:                                           ; preds = %Parser_advance.exit, %ifend
  %28 = phi ptr [ %20, %Parser_advance.exit ], [ null, %ifend ]
  %29 = phi i64 [ %22, %Parser_advance.exit ], [ %5, %ifend ]
  %30 = icmp eq i64 %29, 38
  br i1 %30, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend4
  %memberidx.i63 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %31 = load i64, ptr %memberidx.i63, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i64 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i64, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i67, label %Parser_advance.exit68

if.entry.i67:                                     ; preds = %if.entry11
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i63, align 4
  %memberidx.i.i66 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %36 = load ptr, ptr %memberidx.i.i66, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx.i51, align 8
  br label %Parser_advance.exit68

Parser_advance.exit68:                            ; preds = %if.entry11, %if.entry.i67
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx2.i, align 8
  %phi.cmp = icmp eq ptr %39, null
  br label %ifend13

ifend13:                                          ; preds = %ifend4, %Parser_advance.exit68
  %40 = phi i1 [ true, %ifend4 ], [ %phi.cmp, %Parser_advance.exit68 ]
  %41 = icmp eq ptr %28, null
  %42 = and i1 %41, %40
  br i1 %42, label %if.entry17, label %common.ret

if.entry17:                                       ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %43 = load ptr, ptr %memberidx21, align 8
  %44 = load ptr, ptr %43, align 8
  %memberidx22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %44, i64 0, i32 5
  %45 = load ptr, ptr %memberidx22, align 8
  %46 = tail call ptr %45(ptr nonnull %43)
  %47 = alloca ptr, align 8
  %48 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %47, ptr nonnull @77, ptr %46)
  %49 = load ptr, ptr %47, align 8
  %50 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %50, align 8
  %memberidx.i57 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  store ptr %49, ptr %memberidx.i57, align 8
  %memberidx1.i58 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  store i64 %48, ptr %memberidx1.i58, align 4
  %memberidx2.i59 = getelementptr inbounds %string, ptr %50, i64 0, i32 3
  store i64 %48, ptr %memberidx2.i59, align 4
  tail call void @free(ptr %46)
  %51 = load ptr, ptr %memberidx2.i52, align 8
  %52 = call ptr @malloc(i32 24)
  %53 = load ptr, ptr %memberidx.i51, align 8
  %memberidx2.i50 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx2.i50, align 8
  store i64 2, ptr %52, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %52, i64 0, i32 2
  store ptr %54, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %52, i64 0, i32 1
  store ptr %50, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %55 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 3
  %56 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %55, %56
  br i1 %.not.i.i, label %if.entry17.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry17.Parser_error.exit_crit_edge:           ; preds = %if.entry17
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %.pre70 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry17
  %57 = shl nuw i64 %56, 1
  store i64 %57, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %58 = load ptr, ptr %memberidx2.i.i.i, align 8
  %59 = shl i64 %56, 4
  %60 = call ptr @realloc(ptr %58, i64 %59)
  store ptr %60, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry17.Parser_error.exit_crit_edge, %if.entry.i.i
  %61 = phi ptr [ %.pre70, %if.entry17.Parser_error.exit_crit_edge ], [ %60, %if.entry.i.i ]
  %62 = phi i64 [ %55, %if.entry17.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %63 = add nsw i64 %62, 1
  store i64 %63, ptr %memberidx.i.i, align 4
  %64 = getelementptr inbounds ptr, ptr %61, i64 %62
  store ptr %52, ptr %64, align 8
  %65 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx25 = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 2
  %66 = load i64, ptr %memberidx25, align 4
  %67 = add i64 %66, -1
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx26 = getelementptr inbounds %FloError, ptr %70, i64 0, i32 2
  %memberidx28 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %71 = load ptr, ptr %memberidx28, align 8
  store ptr %71, ptr %memberidx26, align 8
  br label %common.ret
}

define internal fastcc ptr @Parser_parse_object_type(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  %3 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  store ptr %4, ptr %3, align 8
  %memberidx.i.i28 = getelementptr inbounds %TypeNode, ptr %3, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i28, align 4
  %memberidx.i29 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 2
  store ptr %2, ptr %memberidx.i29, align 8
  %memberidx1.i30 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %5, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i31 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i32, align 8
  store i64 0, ptr %memberidx.i5.i, align 4
  store ptr %5, ptr %memberidx1.i30, align 8
  %memberidx1 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 42
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i26, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx1, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %5)
  %18 = load ptr, ptr %memberidx1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = load i64, ptr %18, align 4
  %21 = icmp eq i64 %20, 49
  br i1 %21, label %if.entry8, label %else9

ifend:                                            ; preds = %1, %ifend10
  ret ptr %3

if.entry8:                                        ; preds = %Parser_advance.exit
  store i64 41, ptr %18, align 4
  br label %ifend10

else9:                                            ; preds = %Parser_advance.exit
  %22 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 41)
  br label %ifend10

ifend10:                                          ; preds = %else9, %if.entry8
  %23 = tail call ptr @malloc(i32 32)
  %24 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  %25 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %26 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  %27 = load i64, ptr %memberidx3.i, align 4
  store i64 %24, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  store i64 %27, ptr %memberidx3.i.i, align 4
  store ptr %23, ptr %3, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_unary_expression_pre(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %else35.i.i [
    i64 23, label %ifend
    i64 24, label %Parser_is_unary_op.exit.fold.split
    i64 5, label %Parser_is_unary_op.exit.fold.split28
    i64 37, label %Parser_is_unary_op.exit.fold.split29
    i64 73, label %ifend.fold.split
    i64 34, label %if.entry.i.i30
    i64 31, label %if.entry4.i.i
    i64 32, label %if.entry9.i.i
    i64 35, label %if.entry14.i.i
    i64 53, label %if.entry19.i.i
    i64 29, label %if.entry24.i.i
    i64 72, label %if.entry29.i.i
    i64 25, label %if.entry34.i.i
  ]

Parser_is_unary_op.exit.fold.split:               ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split28:             ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split29:             ; preds = %1
  br label %ifend

common.ret43.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit.i
  %.sink46 = phi ptr [ %164, %Parser_advance.exit.i ], [ %181, %Parser_advance.exit ]
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %.sink46, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i18.i = getelementptr inbounds %ExpressionNode, ptr %.sink46, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i18.i, align 4
  br label %common.ret43

common.ret43:                                     ; preds = %common.ret43.sink.split, %Parser_parse_lhs_expression_allow_call.exit
  %common.ret43.op = phi ptr [ %expression.1.i, %Parser_parse_lhs_expression_allow_call.exit ], [ %.sink46, %common.ret43.sink.split ]
  ret ptr %common.ret43.op

if.entry.i.i30:                                   ; preds = %1
  %5 = tail call fastcc ptr @Parser_parse_string(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry4.i.i:                                    ; preds = %1
  %6 = tail call ptr @malloc(i32 32)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 31
  br i1 %9, label %if.entry.i.i60.i, label %else.i.i67.i

if.entry.i.i60.i:                                 ; preds = %if.entry4.i.i
  %memberidx.i.i.i58.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i.i.i58.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i59.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i.i.i59.i, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i.i.i63.i, label %Parser_eat.exit.i70.i

if.entry.i.i.i63.i:                               ; preds = %if.entry.i.i60.i
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i.i.i58.i, align 4
  %memberidx.i.i.i.i62.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i.i.i62.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx, align 8
  br label %Parser_eat.exit.i70.i

else.i.i67.i:                                     ; preds = %if.entry4.i.i
  %18 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i65.i = getelementptr inbounds %Token, ptr %7, i64 0, i32 1
  %19 = load ptr, ptr %memberidx35.i.i65.i, align 8
  store i64 46, ptr %18, align 4
  %memberidx1.i80.i.i66.i = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  store ptr %19, ptr %memberidx1.i80.i.i66.i, align 8
  br label %Parser_eat.exit.i70.i

Parser_eat.exit.i70.i:                            ; preds = %else.i.i67.i, %if.entry.i.i.i63.i, %if.entry.i.i60.i
  %common.ret.op.i.i68.i = phi ptr [ %18, %else.i.i67.i ], [ %7, %if.entry.i.i.i63.i ], [ %7, %if.entry.i.i60.i ]
  %memberidx.i56.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i68.i, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i56.i.i, align 8
  store ptr %20, ptr %6, align 8
  %memberidx.i.i.i57.i.i = getelementptr inbounds %StatementNode, ptr %6, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i57.i.i, align 4
  %memberidx.i.i58.i.i = getelementptr inbounds %ExpressionNode, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i58.i.i, align 4
  %memberidx1.i.i69.i = getelementptr inbounds %IntExpressionNode, ptr %6, i64 0, i32 3
  store ptr %common.ret.op.i.i68.i, ptr %memberidx1.i.i69.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry9.i.i:                                    ; preds = %1
  %21 = tail call ptr @malloc(i32 32)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  %24 = icmp eq i64 %23, 32
  br i1 %24, label %if.entry.i63.i.i, label %else.i68.i.i

if.entry.i63.i.i:                                 ; preds = %if.entry9.i.i
  %memberidx.i.i61.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %25 = load i64, ptr %memberidx.i.i61.i.i, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx2.i.i62.i.i = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i62.i.i, align 4
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %if.entry.i.i66.i.i, label %Parser_eat.exit71.i.i

if.entry.i.i66.i.i:                               ; preds = %if.entry.i63.i.i
  %29 = add nsw i64 %25, 1
  store i64 %29, ptr %memberidx.i.i61.i.i, align 4
  %memberidx.i.i.i65.i.i = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i.i.i65.i.i, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %memberidx, align 8
  br label %Parser_eat.exit71.i.i

else.i68.i.i:                                     ; preds = %if.entry9.i.i
  %33 = tail call ptr @malloc(i32 16)
  %memberidx35.i69.i.i = getelementptr inbounds %Token, ptr %22, i64 0, i32 1
  %34 = load ptr, ptr %memberidx35.i69.i.i, align 8
  store i64 46, ptr %33, align 4
  %memberidx1.i80.i70.i.i = getelementptr inbounds %Token, ptr %33, i64 0, i32 1
  store ptr %34, ptr %memberidx1.i80.i70.i.i, align 8
  br label %Parser_eat.exit71.i.i

Parser_eat.exit71.i.i:                            ; preds = %else.i68.i.i, %if.entry.i.i66.i.i, %if.entry.i63.i.i
  %common.ret.op.i60.i.i = phi ptr [ %33, %else.i68.i.i ], [ %22, %if.entry.i.i66.i.i ], [ %22, %if.entry.i63.i.i ]
  %memberidx.i72.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i60.i.i, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i72.i.i, align 8
  store ptr %35, ptr %21, align 8
  %memberidx.i.i.i73.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i73.i.i, align 4
  %memberidx.i.i74.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i74.i.i, align 4
  %memberidx1.i75.i.i = getelementptr inbounds %FloatExpressionNode, ptr %21, i64 0, i32 3
  store ptr %common.ret.op.i60.i.i, ptr %memberidx1.i75.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry14.i.i:                                   ; preds = %1
  %36 = tail call ptr @malloc(i32 32)
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 35
  br i1 %39, label %if.entry.i80.i.i, label %else.i85.i.i

if.entry.i80.i.i:                                 ; preds = %if.entry14.i.i
  %memberidx.i.i78.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %40 = load i64, ptr %memberidx.i.i78.i.i, align 4
  %41 = load ptr, ptr %0, align 8
  %memberidx2.i.i79.i.i = getelementptr inbounds %Array_Token_, ptr %41, i64 0, i32 2
  %42 = load i64, ptr %memberidx2.i.i79.i.i, align 4
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %if.entry.i.i83.i.i, label %Parser_eat.exit88.i.i

if.entry.i.i83.i.i:                               ; preds = %if.entry.i80.i.i
  %44 = add nsw i64 %40, 1
  store i64 %44, ptr %memberidx.i.i78.i.i, align 4
  %memberidx.i.i.i82.i.i = getelementptr inbounds %Array_Token_, ptr %41, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i82.i.i, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  store ptr %47, ptr %memberidx, align 8
  br label %Parser_eat.exit88.i.i

else.i85.i.i:                                     ; preds = %if.entry14.i.i
  %48 = tail call ptr @malloc(i32 16)
  %memberidx35.i86.i.i = getelementptr inbounds %Token, ptr %37, i64 0, i32 1
  %49 = load ptr, ptr %memberidx35.i86.i.i, align 8
  store i64 46, ptr %48, align 4
  %memberidx1.i80.i87.i.i = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i80.i87.i.i, align 8
  br label %Parser_eat.exit88.i.i

Parser_eat.exit88.i.i:                            ; preds = %else.i85.i.i, %if.entry.i.i83.i.i, %if.entry.i80.i.i
  %common.ret.op.i77.i.i = phi ptr [ %48, %else.i85.i.i ], [ %37, %if.entry.i.i83.i.i ], [ %37, %if.entry.i80.i.i ]
  %memberidx.i89.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i77.i.i, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i89.i.i, align 8
  store ptr %50, ptr %36, align 8
  %memberidx.i.i.i90.i.i = getelementptr inbounds %StatementNode, ptr %36, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i90.i.i, align 4
  %memberidx.i.i91.i.i = getelementptr inbounds %ExpressionNode, ptr %36, i64 0, i32 2
  store i64 3, ptr %memberidx.i.i91.i.i, align 4
  %memberidx1.i92.i.i = getelementptr inbounds %CharExpressionNode, ptr %36, i64 0, i32 3
  store ptr %common.ret.op.i77.i.i, ptr %memberidx1.i92.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry19.i.i:                                   ; preds = %1
  %51 = tail call ptr @malloc(i32 32)
  %52 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %memberidx.i93.i.i = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i93.i.i, align 8
  store ptr %53, ptr %51, align 8
  %memberidx.i.i.i94.i.i = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i94.i.i, align 4
  %memberidx.i.i95.i.i = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i95.i.i, align 4
  %memberidx1.i96.i.i = getelementptr inbounds %VarAccessExpressionNode, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx1.i96.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry24.i.i:                                   ; preds = %1
  %54 = tail call fastcc ptr @Parser_parse_array_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry29.i.i:                                   ; preds = %1
  %55 = tail call fastcc ptr @Parser_parse_new_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry34.i.i:                                   ; preds = %1
  %56 = tail call fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

else35.i.i:                                       ; preds = %1
  %57 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %57, ptr noundef nonnull align 8 dereferenceable(28) @76, i64 28, i1 false)
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i.i97.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i.i97.i.i, align 8
  %memberidx1.i.i.i71.i = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i.i71.i, align 4
  %memberidx2.i.i98.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i98.i.i, align 4
  %memberidx.i99.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i99.i.i, align 8
  %60 = tail call ptr @malloc(i32 24)
  %61 = load ptr, ptr %memberidx, align 8
  %memberidx2.i.i72.i = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i72.i, align 8
  store i64 2, ptr %60, align 4
  %memberidx1.i.i101.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i101.i.i, align 8
  %memberidx2.i.i102.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i102.i.i, align 8
  %memberidx.i.i103.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i103.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 3
  %64 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %63, %64
  br i1 %.not.i.i.i.i, label %else35.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i105.i.i

else35.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else35.i.i
  %memberidx4.i.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %.pre44 = load ptr, ptr %memberidx4.i.i.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i105.i.i:                              ; preds = %else35.i.i
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx1.i4.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %66 = load ptr, ptr %memberidx2.i.i.i.i.i, align 8
  %67 = shl i64 %64, 4
  %68 = tail call ptr @realloc(ptr %66, i64 %67)
  store ptr %68, ptr %memberidx2.i.i.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i103.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else35.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i105.i.i
  %69 = phi ptr [ %68, %if.entry.i.i105.i.i ], [ %.pre44, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %70 = phi i64 [ %.pre, %if.entry.i.i105.i.i ], [ %63, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %71 = add nsw i64 %70, 1
  store i64 %71, ptr %memberidx.i.i103.i.i, align 4
  %72 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %60, ptr %72, align 8
  %73 = tail call ptr @malloc(i32 24)
  %74 = load ptr, ptr %memberidx, align 8
  %memberidx38.i.i = getelementptr inbounds %Token, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx38.i.i, align 8
  store ptr %75, ptr %73, align 8
  %memberidx.i.i106.i.i = getelementptr inbounds %StatementNode, ptr %73, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i106.i.i, align 4
  %memberidx.i107.i.i = getelementptr inbounds %ExpressionNode, ptr %73, i64 0, i32 2
  store i64 8, ptr %memberidx.i107.i.i, align 4
  br label %Parser_parse_atom.exit.i

Parser_parse_atom.exit.i:                         ; preds = %Parser_error.exit.i.i, %if.entry34.i.i, %if.entry29.i.i, %if.entry24.i.i, %if.entry19.i.i, %Parser_eat.exit88.i.i, %Parser_eat.exit71.i.i, %Parser_eat.exit.i70.i, %if.entry.i.i30
  %common.ret.op.i.i = phi ptr [ %5, %if.entry.i.i30 ], [ %73, %Parser_error.exit.i.i ], [ %6, %Parser_eat.exit.i70.i ], [ %21, %Parser_eat.exit71.i.i ], [ %36, %Parser_eat.exit88.i.i ], [ %51, %if.entry19.i.i ], [ %54, %if.entry24.i.i ], [ %55, %if.entry29.i.i ], [ %56, %if.entry34.i.i ]
  %76 = load ptr, ptr %memberidx, align 8
  %77 = load i64, ptr %76, align 4
  %78 = icmp ne i64 %77, 46
  %memberidx2.i.i32 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %79 = load ptr, ptr %memberidx2.i.i32, align 8
  %memberidx3.i.i33 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 2
  %80 = load i64, ptr %memberidx3.i.i33, align 4
  %81 = icmp eq i64 %80, 0
  %82 = and i1 %78, %81
  br i1 %82, label %while.entry.i.preheader, label %Parser_parse_lhs_expression_allow_call.exit

while.entry.i.preheader:                          ; preds = %Parser_parse_atom.exit.i
  %memberidx.i.i.i.i36 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %ifend.i
  %83 = phi i64 [ %100, %ifend.i ], [ %77, %while.entry.i.preheader ]
  %84 = phi ptr [ %99, %ifend.i ], [ %76, %while.entry.i.preheader ]
  %expression.0.i = phi ptr [ %expression.2.i, %ifend.i ], [ %common.ret.op.i.i, %while.entry.i.preheader ]
  switch i64 %83, label %Parser_parse_lhs_expression_allow_call.exit [
    i64 25, label %if.entry.i34
    i64 29, label %if.entry.i.i29.i
    i64 50, label %if.entry.i.i.i
  ]

if.entry.i34:                                     ; preds = %while.entry.i
  %85 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  %86 = tail call ptr @malloc(i32 40)
  %87 = load ptr, ptr %memberidx, align 8
  %memberidx1.i45.i = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  %88 = load ptr, ptr %memberidx1.i45.i, align 8
  store ptr %88, ptr %86, align 8
  %memberidx.i.i.i.i46.i = getelementptr inbounds %StatementNode, ptr %86, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i46.i, align 4
  %memberidx.i.i.i47.i = getelementptr inbounds %ExpressionNode, ptr %86, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i.i47.i, align 4
  %memberidx.i.i48.i = getelementptr inbounds %CallExpressionNode, ptr %86, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i.i48.i, align 8
  %memberidx1.i.i49.i = getelementptr inbounds %CallExpressionNode, ptr %86, i64 0, i32 4
  %89 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %89, align 8
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %89, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  %memberidx1.i.i.i50.i = getelementptr inbounds %Array_ExpressionNode_, ptr %89, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i50.i, align 4
  %memberidx2.i.i.i51.i = getelementptr inbounds %Array_ExpressionNode_, ptr %89, i64 0, i32 1
  %90 = tail call ptr @malloc(i32 64)
  store ptr %90, ptr %memberidx2.i.i.i51.i, align 8
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  store ptr %89, ptr %memberidx1.i.i49.i, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %89, i64 26)
  %91 = load ptr, ptr %expression.0.i, align 8
  %92 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5.i.i = getelementptr inbounds %Token, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx5.i.i, align 8
  %94 = tail call ptr @malloc(i32 32)
  %95 = load i64, ptr %91, align 4
  %memberidx1.i12.i.i = getelementptr inbounds %FloRange, ptr %93, i64 0, i32 1
  %96 = load i64, ptr %memberidx1.i12.i.i, align 4
  %memberidx2.i.i54.i = getelementptr inbounds %FloRange, ptr %91, i64 0, i32 2
  %97 = load i64, ptr %memberidx2.i.i54.i, align 4
  %memberidx3.i13.i.i = getelementptr inbounds %FloRange, ptr %93, i64 0, i32 3
  %98 = load i64, ptr %memberidx3.i13.i.i, align 4
  store i64 %95, ptr %94, align 4
  %memberidx1.i.i14.i.i = getelementptr inbounds %FloRange, ptr %94, i64 0, i32 1
  store i64 %96, ptr %memberidx1.i.i14.i.i, align 4
  %memberidx2.i.i15.i.i = getelementptr inbounds %FloRange, ptr %94, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i.i15.i.i, align 4
  %memberidx3.i.i.i55.i = getelementptr inbounds %FloRange, ptr %94, i64 0, i32 3
  store i64 %98, ptr %memberidx3.i.i.i55.i, align 4
  store ptr %94, ptr %86, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %Parser_parse_member_expression.exit.i, %Parser_parse_index_expression.exit.i, %if.entry.i34
  %expression.2.i = phi ptr [ %86, %if.entry.i34 ], [ %114, %Parser_parse_index_expression.exit.i ], [ %146, %Parser_parse_member_expression.exit.i ]
  %99 = load ptr, ptr %memberidx, align 8
  %100 = load i64, ptr %99, align 4
  %101 = icmp ne i64 %100, 46
  %102 = load ptr, ptr %memberidx2.i.i32, align 8
  %memberidx3.i25.i = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 2
  %103 = load i64, ptr %memberidx3.i25.i, align 4
  %104 = icmp eq i64 %103, 0
  %105 = and i1 %101, %104
  br i1 %105, label %while.entry.i, label %Parser_parse_lhs_expression_allow_call.exit

if.entry.i.i29.i:                                 ; preds = %while.entry.i
  %106 = load i64, ptr %memberidx.i.i.i.i36, align 4
  %107 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i28.i = getelementptr inbounds %Array_Token_, ptr %107, i64 0, i32 2
  %108 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %109 = icmp slt i64 %106, %108
  br i1 %109, label %if.entry.i.i.i32.i, label %Parser_eat.exit.i.i

if.entry.i.i.i32.i:                               ; preds = %if.entry.i.i29.i
  %110 = add nsw i64 %106, 1
  store i64 %110, ptr %memberidx.i.i.i.i36, align 4
  %memberidx.i.i.i.i31.i = getelementptr inbounds %Array_Token_, ptr %107, i64 0, i32 1
  %111 = load ptr, ptr %memberidx.i.i.i.i31.i, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %110
  %113 = load ptr, ptr %112, align 8
  store ptr %113, ptr %memberidx, align 8
  br label %Parser_eat.exit.i.i

Parser_eat.exit.i.i:                              ; preds = %if.entry.i.i.i32.i, %if.entry.i.i29.i
  %114 = tail call ptr @malloc(i32 40)
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx1.i39.i = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx1.i39.i, align 8
  %memberidx.i10.i.i = getelementptr inbounds %ExpressionIndexNode, ptr %114, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i10.i.i, align 8
  %memberidx1.i.i40.i = getelementptr inbounds %ExpressionIndexNode, ptr %114, i64 0, i32 4
  store ptr %115, ptr %memberidx1.i.i40.i, align 8
  store ptr %117, ptr %114, align 8
  %memberidx.i.i.i11.i.i = getelementptr inbounds %StatementNode, ptr %114, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i11.i.i, align 4
  %memberidx.i.i12.i.i = getelementptr inbounds %ExpressionNode, ptr %114, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i12.i.i, align 4
  %118 = load ptr, ptr %expression.0.i, align 8
  %119 = load i64, ptr %116, align 4
  %120 = icmp eq i64 %119, 30
  br i1 %120, label %if.entry.i17.i.i, label %else.i22.i.i

if.entry.i17.i.i:                                 ; preds = %Parser_eat.exit.i.i
  %121 = load i64, ptr %memberidx.i.i.i.i36, align 4
  %122 = load ptr, ptr %0, align 8
  %memberidx2.i.i16.i.i = getelementptr inbounds %Array_Token_, ptr %122, i64 0, i32 2
  %123 = load i64, ptr %memberidx2.i.i16.i.i, align 4
  %124 = icmp slt i64 %121, %123
  br i1 %124, label %if.entry.i.i20.i.i, label %Parser_parse_index_expression.exit.i

if.entry.i.i20.i.i:                               ; preds = %if.entry.i17.i.i
  %125 = add nsw i64 %121, 1
  store i64 %125, ptr %memberidx.i.i.i.i36, align 4
  %memberidx.i.i.i19.i.i = getelementptr inbounds %Array_Token_, ptr %122, i64 0, i32 1
  %126 = load ptr, ptr %memberidx.i.i.i19.i.i, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  store ptr %128, ptr %memberidx, align 8
  br label %Parser_parse_index_expression.exit.i

else.i22.i.i:                                     ; preds = %Parser_eat.exit.i.i
  %129 = tail call ptr @malloc(i32 16)
  %130 = load ptr, ptr %memberidx1.i39.i, align 8
  store i64 46, ptr %129, align 4
  %memberidx1.i80.i24.i.i = getelementptr inbounds %Token, ptr %129, i64 0, i32 1
  store ptr %130, ptr %memberidx1.i80.i24.i.i, align 8
  br label %Parser_parse_index_expression.exit.i

Parser_parse_index_expression.exit.i:             ; preds = %else.i22.i.i, %if.entry.i.i20.i.i, %if.entry.i17.i.i
  %common.ret.op.i14.i.i = phi ptr [ %129, %else.i22.i.i ], [ %116, %if.entry.i.i20.i.i ], [ %116, %if.entry.i17.i.i ]
  %memberidx4.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i14.i.i, i64 0, i32 1
  %131 = load ptr, ptr %memberidx4.i.i, align 8
  %132 = tail call ptr @malloc(i32 32)
  %133 = load i64, ptr %118, align 4
  %memberidx1.i26.i.i = getelementptr inbounds %FloRange, ptr %131, i64 0, i32 1
  %134 = load i64, ptr %memberidx1.i26.i.i, align 4
  %memberidx2.i.i41.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  %135 = load i64, ptr %memberidx2.i.i41.i, align 4
  %memberidx3.i.i42.i = getelementptr inbounds %FloRange, ptr %131, i64 0, i32 3
  %136 = load i64, ptr %memberidx3.i.i42.i, align 4
  store i64 %133, ptr %132, align 4
  %memberidx1.i.i.i43.i = getelementptr inbounds %FloRange, ptr %132, i64 0, i32 1
  store i64 %134, ptr %memberidx1.i.i.i43.i, align 4
  %memberidx2.i.i27.i.i = getelementptr inbounds %FloRange, ptr %132, i64 0, i32 2
  store i64 %135, ptr %memberidx2.i.i27.i.i, align 4
  %memberidx3.i.i28.i.i = getelementptr inbounds %FloRange, ptr %132, i64 0, i32 3
  store i64 %136, ptr %memberidx3.i.i28.i.i, align 4
  store ptr %132, ptr %114, align 8
  br label %ifend.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %137 = load i64, ptr %memberidx.i.i.i.i36, align 4
  %138 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %138, i64 0, i32 2
  %139 = load i64, ptr %memberidx2.i.i.i.i, align 4
  %140 = icmp slt i64 %137, %139
  br i1 %140, label %if.entry.i.i.i.i, label %Parser_parse_member_expression.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i.i.i
  %141 = add nsw i64 %137, 1
  store i64 %141, ptr %memberidx.i.i.i.i36, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %138, i64 0, i32 1
  %142 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %143 = getelementptr inbounds ptr, ptr %142, i64 %141
  %144 = load ptr, ptr %143, align 8
  store ptr %144, ptr %memberidx, align 8
  br label %Parser_parse_member_expression.exit.i

Parser_parse_member_expression.exit.i:            ; preds = %if.entry.i.i.i.i, %if.entry.i.i.i
  %145 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %146 = tail call ptr @malloc(i32 40)
  %147 = load ptr, ptr %expression.0.i, align 8
  %memberidx1.i.i37 = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  %148 = load ptr, ptr %memberidx1.i.i37, align 8
  %149 = tail call ptr @malloc(i32 32)
  %150 = load i64, ptr %147, align 4
  %memberidx1.i.i.i38 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 1
  %151 = load i64, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %FloRange, ptr %147, i64 0, i32 2
  %152 = load i64, ptr %memberidx2.i.i.i39, align 4
  %memberidx3.i.i.i40 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 3
  %153 = load i64, ptr %memberidx3.i.i.i40, align 4
  store i64 %150, ptr %149, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 1
  store i64 %151, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 2
  store i64 %152, ptr %memberidx2.i.i5.i.i, align 4
  %memberidx3.i.i6.i.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 3
  store i64 %153, ptr %memberidx3.i.i6.i.i, align 4
  store ptr %149, ptr %146, align 8
  %memberidx.i.i.i7.i.i = getelementptr inbounds %StatementNode, ptr %146, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i7.i.i, align 4
  %memberidx.i.i8.i.i = getelementptr inbounds %ExpressionNode, ptr %146, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i8.i.i, align 4
  %memberidx.i9.i.i = getelementptr inbounds %MemberExpressionNode, ptr %146, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i9.i.i, align 8
  %memberidx1.i10.i.i = getelementptr inbounds %MemberExpressionNode, ptr %146, i64 0, i32 4
  store ptr %145, ptr %memberidx1.i10.i.i, align 8
  br label %ifend.i

Parser_parse_lhs_expression_allow_call.exit:      ; preds = %while.entry.i, %ifend.i, %Parser_parse_atom.exit.i
  %154 = phi i64 [ %77, %Parser_parse_atom.exit.i ], [ %83, %while.entry.i ], [ %100, %ifend.i ]
  %155 = phi ptr [ %76, %Parser_parse_atom.exit.i ], [ %84, %while.entry.i ], [ %99, %ifend.i ]
  %expression.1.i = phi ptr [ %common.ret.op.i.i, %Parser_parse_atom.exit.i ], [ %expression.0.i, %while.entry.i ], [ %expression.2.i, %ifend.i ]
  switch i64 %154, label %common.ret43 [
    i64 23, label %ifend.i21
    i64 24, label %if.entry3.i
  ]

ifend.i21:                                        ; preds = %Parser_parse_lhs_expression_allow_call.exit, %if.entry3.i
  %op.0.i = phi i64 [ 5, %if.entry3.i ], [ 4, %Parser_parse_lhs_expression_allow_call.exit ]
  %memberidx.i.i19 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %156 = load i64, ptr %memberidx.i.i19, align 4
  %157 = load ptr, ptr %0, align 8
  %memberidx2.i.i20 = getelementptr inbounds %Array_Token_, ptr %157, i64 0, i32 2
  %158 = load i64, ptr %memberidx2.i.i20, align 4
  %159 = icmp slt i64 %156, %158
  br i1 %159, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i21
  %160 = add nsw i64 %156, 1
  store i64 %160, ptr %memberidx.i.i19, align 4
  %memberidx.i.i.i23 = getelementptr inbounds %Array_Token_, ptr %157, i64 0, i32 1
  %161 = load ptr, ptr %memberidx.i.i.i23, align 8
  %162 = getelementptr inbounds ptr, ptr %161, i64 %160
  %163 = load ptr, ptr %162, align 8
  store ptr %163, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i21
  %164 = tail call ptr @malloc(i32 40)
  %165 = load ptr, ptr %expression.1.i, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %155, i64 0, i32 1
  %166 = load ptr, ptr %memberidx7.i, align 8
  %167 = tail call ptr @malloc(i32 32)
  %168 = load i64, ptr %165, align 4
  %memberidx1.i.i24 = getelementptr inbounds %FloRange, ptr %166, i64 0, i32 1
  %169 = load i64, ptr %memberidx1.i.i24, align 4
  %memberidx2.i14.i = getelementptr inbounds %FloRange, ptr %165, i64 0, i32 2
  %170 = load i64, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %FloRange, ptr %166, i64 0, i32 3
  %171 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %168, ptr %167, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 1
  store i64 %169, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 2
  store i64 %170, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 3
  store i64 %171, ptr %memberidx3.i.i.i, align 4
  %memberidx.i16.i = getelementptr inbounds %UnaryExpressionNode, ptr %164, i64 0, i32 3
  store i64 %op.0.i, ptr %memberidx.i16.i, align 4
  %memberidx1.i17.i = getelementptr inbounds %UnaryExpressionNode, ptr %164, i64 0, i32 4
  store ptr %expression.1.i, ptr %memberidx1.i17.i, align 8
  store ptr %167, ptr %164, align 8
  br label %common.ret43.sink.split

if.entry3.i:                                      ; preds = %Parser_parse_lhs_expression_allow_call.exit
  br label %ifend.i21

ifend.fold.split:                                 ; preds = %1
  br label %ifend

ifend:                                            ; preds = %1, %ifend.fold.split, %Parser_is_unary_op.exit.fold.split29, %Parser_is_unary_op.exit.fold.split28, %Parser_is_unary_op.exit.fold.split
  %common.ret.op.i42 = phi i64 [ 8, %Parser_is_unary_op.exit.fold.split29 ], [ 6, %Parser_is_unary_op.exit.fold.split28 ], [ 3, %Parser_is_unary_op.exit.fold.split ], [ 2, %1 ], [ 1, %ifend.fold.split ]
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %172 = load i64, ptr %memberidx.i9, align 4
  %173 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %173, i64 0, i32 2
  %174 = load i64, ptr %memberidx2.i, align 4
  %175 = icmp slt i64 %172, %174
  br i1 %175, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend
  %176 = add nsw i64 %172, 1
  store i64 %176, ptr %memberidx.i9, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %173, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i.i, align 8
  %178 = getelementptr inbounds ptr, ptr %177, i64 %176
  %179 = load ptr, ptr %178, align 8
  store ptr %179, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i
  %180 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %181 = tail call ptr @malloc(i32 40)
  %182 = load ptr, ptr %180, align 8
  %183 = tail call ptr @malloc(i32 32)
  %184 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 1
  %185 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i11 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %186 = load i64, ptr %memberidx2.i11, align 4
  %memberidx3.i12 = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 3
  %187 = load i64, ptr %memberidx3.i12, align 4
  store i64 %184, ptr %183, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 1
  store i64 %185, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 2
  store i64 %186, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 3
  store i64 %187, ptr %memberidx3.i.i, align 4
  %memberidx.i13 = getelementptr inbounds %UnaryExpressionNode, ptr %181, i64 0, i32 3
  store i64 %common.ret.op.i42, ptr %memberidx.i13, align 4
  %memberidx1.i14 = getelementptr inbounds %UnaryExpressionNode, ptr %181, i64 0, i32 4
  store ptr %180, ptr %memberidx1.i14, align 8
  store ptr %183, ptr %181, align 8
  br label %common.ret43.sink.split
}

define internal fastcc ptr @Parser_eat(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %if.entry, label %else

common.ret:                                       ; preds = %if.entry.i, %if.entry, %ifend4
  %common.ret.op = phi ptr [ %30, %ifend4 ], [ %3, %if.entry ], [ %3, %if.entry.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %common.ret

else:                                             ; preds = %2
  switch i64 %1, label %ifend4 [
    i64 53, label %if.entry2
    i64 38, label %if.entry5
    i64 1, label %if.entry8
    i64 25, label %if.entry11
    i64 26, label %if.entry14
    i64 27, label %if.entry17
    i64 28, label %if.entry20
    i64 3, label %if.entry23
    i64 42, label %if.entry26
    i64 41, label %if.entry29
    i64 45, label %if.entry32
  ]

if.entry2:                                        ; preds = %else
  %14 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %14, ptr noundef nonnull align 8 dereferenceable(22) @63, i64 22, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i64 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i64, align 8
  %memberidx1.i.i65 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 22, ptr %memberidx1.i.i65, align 4
  %memberidx2.i.i66 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 22, ptr %memberidx2.i.i66, align 4
  %memberidx.i67 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i67, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx2.i69 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx2.i69, align 8
  store i64 2, ptr %17, align 4
  %memberidx1.i.i70 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i70, align 8
  %memberidx2.i.i71 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i71, align 8
  %memberidx.i.i72 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i72, align 4
  %memberidx1.i4.i73 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i4.i73, align 4
  %.not.i.i74 = icmp slt i64 %20, %21
  br i1 %.not.i.i74, label %if.entry2.Parser_error.exit79_crit_edge, label %if.entry.i.i77

if.entry2.Parser_error.exit79_crit_edge:          ; preds = %if.entry2
  %memberidx4.i.i78.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %.pre249 = load ptr, ptr %memberidx4.i.i78.phi.trans.insert, align 8
  br label %Parser_error.exit79

if.entry.i.i77:                                   ; preds = %if.entry2
  %22 = shl nuw i64 %21, 1
  store i64 %22, ptr %memberidx1.i4.i73, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i76, align 8
  %24 = shl i64 %21, 4
  %25 = tail call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i76, align 8
  %.pre248 = load i64, ptr %memberidx.i.i72, align 4
  br label %Parser_error.exit79

Parser_error.exit79:                              ; preds = %if.entry2.Parser_error.exit79_crit_edge, %if.entry.i.i77
  %26 = phi ptr [ %.pre249, %if.entry2.Parser_error.exit79_crit_edge ], [ %25, %if.entry.i.i77 ]
  %27 = phi i64 [ %20, %if.entry2.Parser_error.exit79_crit_edge ], [ %.pre248, %if.entry.i.i77 ]
  %28 = add nsw i64 %27, 1
  store i64 %28, ptr %memberidx.i.i72, align 4
  %29 = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %17, ptr %29, align 8
  br label %ifend4

ifend4:                                           ; preds = %else, %Parser_error.exit, %Parser_error.exit224, %Parser_error.exit208, %Parser_error.exit192, %Parser_error.exit176, %Parser_error.exit160, %Parser_error.exit144, %Parser_error.exit128, %Parser_error.exit112, %Parser_error.exit96, %Parser_error.exit79
  %30 = tail call ptr @malloc(i32 16)
  %memberidx35 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %31 = load ptr, ptr %memberidx35, align 8
  store i64 46, ptr %30, align 4
  %memberidx1.i80 = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  store ptr %31, ptr %memberidx1.i80, align 8
  br label %common.ret

if.entry5:                                        ; preds = %else
  %32 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %32, ptr noundef nonnull align 8 dereferenceable(12) @64, i64 12, i1 false)
  %33 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i81 = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i81, align 8
  %memberidx1.i.i82 = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i82, align 4
  %memberidx2.i.i83 = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i83, align 4
  %memberidx.i84 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i84, align 8
  %35 = tail call ptr @malloc(i32 24)
  %36 = load ptr, ptr %memberidx, align 8
  %memberidx2.i86 = getelementptr inbounds %Token, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %memberidx2.i86, align 8
  store i64 2, ptr %35, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 2
  store ptr %37, ptr %memberidx1.i.i87, align 8
  %memberidx2.i.i88 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 1
  store ptr %33, ptr %memberidx2.i.i88, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %38 = load i64, ptr %memberidx.i.i89, align 4
  %memberidx1.i4.i90 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 3
  %39 = load i64, ptr %memberidx1.i4.i90, align 4
  %.not.i.i91 = icmp slt i64 %38, %39
  br i1 %.not.i.i91, label %if.entry5.Parser_error.exit96_crit_edge, label %if.entry.i.i94

if.entry5.Parser_error.exit96_crit_edge:          ; preds = %if.entry5
  %memberidx4.i.i95.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %.pre247 = load ptr, ptr %memberidx4.i.i95.phi.trans.insert, align 8
  br label %Parser_error.exit96

if.entry.i.i94:                                   ; preds = %if.entry5
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i4.i90, align 4
  %memberidx2.i.i.i93 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i.i.i93, align 8
  %42 = shl i64 %39, 4
  %43 = tail call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i.i.i93, align 8
  %.pre246 = load i64, ptr %memberidx.i.i89, align 4
  br label %Parser_error.exit96

Parser_error.exit96:                              ; preds = %if.entry5.Parser_error.exit96_crit_edge, %if.entry.i.i94
  %44 = phi ptr [ %.pre247, %if.entry5.Parser_error.exit96_crit_edge ], [ %43, %if.entry.i.i94 ]
  %45 = phi i64 [ %38, %if.entry5.Parser_error.exit96_crit_edge ], [ %.pre246, %if.entry.i.i94 ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i89, align 4
  %47 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %35, ptr %47, align 8
  br label %ifend4

if.entry8:                                        ; preds = %else
  %48 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %48, ptr noundef nonnull align 8 dereferenceable(12) @65, i64 12, i1 false)
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i97 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i97, align 8
  %memberidx1.i.i98 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i98, align 4
  %memberidx2.i.i99 = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i99, align 4
  %memberidx.i100 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i100, align 8
  %51 = tail call ptr @malloc(i32 24)
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx2.i102 = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx2.i102, align 8
  store i64 2, ptr %51, align 4
  %memberidx1.i.i103 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i103, align 8
  %memberidx2.i.i104 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %49, ptr %memberidx2.i.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %54 = load i64, ptr %memberidx.i.i105, align 4
  %memberidx1.i4.i106 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 3
  %55 = load i64, ptr %memberidx1.i4.i106, align 4
  %.not.i.i107 = icmp slt i64 %54, %55
  br i1 %.not.i.i107, label %if.entry8.Parser_error.exit112_crit_edge, label %if.entry.i.i110

if.entry8.Parser_error.exit112_crit_edge:         ; preds = %if.entry8
  %memberidx4.i.i111.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %.pre245 = load ptr, ptr %memberidx4.i.i111.phi.trans.insert, align 8
  br label %Parser_error.exit112

if.entry.i.i110:                                  ; preds = %if.entry8
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx1.i4.i106, align 4
  %memberidx2.i.i.i109 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %57 = load ptr, ptr %memberidx2.i.i.i109, align 8
  %58 = shl i64 %55, 4
  %59 = tail call ptr @realloc(ptr %57, i64 %58)
  store ptr %59, ptr %memberidx2.i.i.i109, align 8
  %.pre244 = load i64, ptr %memberidx.i.i105, align 4
  br label %Parser_error.exit112

Parser_error.exit112:                             ; preds = %if.entry8.Parser_error.exit112_crit_edge, %if.entry.i.i110
  %60 = phi ptr [ %.pre245, %if.entry8.Parser_error.exit112_crit_edge ], [ %59, %if.entry.i.i110 ]
  %61 = phi i64 [ %54, %if.entry8.Parser_error.exit112_crit_edge ], [ %.pre244, %if.entry.i.i110 ]
  %62 = add nsw i64 %61, 1
  store i64 %62, ptr %memberidx.i.i105, align 4
  %63 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %51, ptr %63, align 8
  br label %ifend4

if.entry11:                                       ; preds = %else
  %64 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %64, ptr noundef nonnull align 8 dereferenceable(12) @66, i64 12, i1 false)
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i.i113 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i.i113, align 8
  %memberidx1.i.i114 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i114, align 4
  %memberidx2.i.i115 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i115, align 4
  %memberidx.i116 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i116, align 8
  %67 = tail call ptr @malloc(i32 24)
  %68 = load ptr, ptr %memberidx, align 8
  %memberidx2.i118 = getelementptr inbounds %Token, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i118, align 8
  store i64 2, ptr %67, align 4
  %memberidx1.i.i119 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 2
  store ptr %69, ptr %memberidx1.i.i119, align 8
  %memberidx2.i.i120 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 1
  store ptr %65, ptr %memberidx2.i.i120, align 8
  %memberidx.i.i121 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i121, align 4
  %memberidx1.i4.i122 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 3
  %71 = load i64, ptr %memberidx1.i4.i122, align 4
  %.not.i.i123 = icmp slt i64 %70, %71
  br i1 %.not.i.i123, label %if.entry11.Parser_error.exit128_crit_edge, label %if.entry.i.i126

if.entry11.Parser_error.exit128_crit_edge:        ; preds = %if.entry11
  %memberidx4.i.i127.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %.pre243 = load ptr, ptr %memberidx4.i.i127.phi.trans.insert, align 8
  br label %Parser_error.exit128

if.entry.i.i126:                                  ; preds = %if.entry11
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx1.i4.i122, align 4
  %memberidx2.i.i.i125 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %73 = load ptr, ptr %memberidx2.i.i.i125, align 8
  %74 = shl i64 %71, 4
  %75 = tail call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %memberidx2.i.i.i125, align 8
  %.pre242 = load i64, ptr %memberidx.i.i121, align 4
  br label %Parser_error.exit128

Parser_error.exit128:                             ; preds = %if.entry11.Parser_error.exit128_crit_edge, %if.entry.i.i126
  %76 = phi ptr [ %.pre243, %if.entry11.Parser_error.exit128_crit_edge ], [ %75, %if.entry.i.i126 ]
  %77 = phi i64 [ %70, %if.entry11.Parser_error.exit128_crit_edge ], [ %.pre242, %if.entry.i.i126 ]
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i121, align 4
  %79 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %67, ptr %79, align 8
  br label %ifend4

if.entry14:                                       ; preds = %else
  %80 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %80, ptr noundef nonnull align 8 dereferenceable(12) @67, i64 12, i1 false)
  %81 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %81, align 8
  %memberidx.i.i129 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  store ptr %80, ptr %memberidx.i.i129, align 8
  %memberidx1.i.i130 = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i130, align 4
  %memberidx2.i.i131 = getelementptr inbounds %string, ptr %81, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i131, align 4
  %memberidx.i132 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i132, align 8
  %83 = tail call ptr @malloc(i32 24)
  %84 = load ptr, ptr %memberidx, align 8
  %memberidx2.i134 = getelementptr inbounds %Token, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx2.i134, align 8
  store i64 2, ptr %83, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 2
  store ptr %85, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 1
  store ptr %81, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i137, align 4
  %memberidx1.i4.i138 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 3
  %87 = load i64, ptr %memberidx1.i4.i138, align 4
  %.not.i.i139 = icmp slt i64 %86, %87
  br i1 %.not.i.i139, label %if.entry14.Parser_error.exit144_crit_edge, label %if.entry.i.i142

if.entry14.Parser_error.exit144_crit_edge:        ; preds = %if.entry14
  %memberidx4.i.i143.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %.pre241 = load ptr, ptr %memberidx4.i.i143.phi.trans.insert, align 8
  br label %Parser_error.exit144

if.entry.i.i142:                                  ; preds = %if.entry14
  %88 = shl nuw i64 %87, 1
  store i64 %88, ptr %memberidx1.i4.i138, align 4
  %memberidx2.i.i.i141 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %89 = load ptr, ptr %memberidx2.i.i.i141, align 8
  %90 = shl i64 %87, 4
  %91 = tail call ptr @realloc(ptr %89, i64 %90)
  store ptr %91, ptr %memberidx2.i.i.i141, align 8
  %.pre240 = load i64, ptr %memberidx.i.i137, align 4
  br label %Parser_error.exit144

Parser_error.exit144:                             ; preds = %if.entry14.Parser_error.exit144_crit_edge, %if.entry.i.i142
  %92 = phi ptr [ %.pre241, %if.entry14.Parser_error.exit144_crit_edge ], [ %91, %if.entry.i.i142 ]
  %93 = phi i64 [ %86, %if.entry14.Parser_error.exit144_crit_edge ], [ %.pre240, %if.entry.i.i142 ]
  %94 = add nsw i64 %93, 1
  store i64 %94, ptr %memberidx.i.i137, align 4
  %95 = getelementptr inbounds ptr, ptr %92, i64 %93
  store ptr %83, ptr %95, align 8
  br label %ifend4

if.entry17:                                       ; preds = %else
  %96 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %96, ptr noundef nonnull align 8 dereferenceable(12) @68, i64 12, i1 false)
  %97 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %97, align 8
  %memberidx.i.i145 = getelementptr inbounds %string, ptr %97, i64 0, i32 1
  store ptr %96, ptr %memberidx.i.i145, align 8
  %memberidx1.i.i146 = getelementptr inbounds %string, ptr %97, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i146, align 4
  %memberidx2.i.i147 = getelementptr inbounds %string, ptr %97, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i147, align 4
  %memberidx.i148 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i148, align 8
  %99 = tail call ptr @malloc(i32 24)
  %100 = load ptr, ptr %memberidx, align 8
  %memberidx2.i150 = getelementptr inbounds %Token, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i150, align 8
  store i64 2, ptr %99, align 4
  %memberidx1.i.i151 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i151, align 8
  %memberidx2.i.i152 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %97, ptr %memberidx2.i.i152, align 8
  %memberidx.i.i153 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i153, align 4
  %memberidx1.i4.i154 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 3
  %103 = load i64, ptr %memberidx1.i4.i154, align 4
  %.not.i.i155 = icmp slt i64 %102, %103
  br i1 %.not.i.i155, label %if.entry17.Parser_error.exit160_crit_edge, label %if.entry.i.i158

if.entry17.Parser_error.exit160_crit_edge:        ; preds = %if.entry17
  %memberidx4.i.i159.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %.pre239 = load ptr, ptr %memberidx4.i.i159.phi.trans.insert, align 8
  br label %Parser_error.exit160

if.entry.i.i158:                                  ; preds = %if.entry17
  %104 = shl nuw i64 %103, 1
  store i64 %104, ptr %memberidx1.i4.i154, align 4
  %memberidx2.i.i.i157 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i.i.i157, align 8
  %106 = shl i64 %103, 4
  %107 = tail call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %memberidx2.i.i.i157, align 8
  %.pre238 = load i64, ptr %memberidx.i.i153, align 4
  br label %Parser_error.exit160

Parser_error.exit160:                             ; preds = %if.entry17.Parser_error.exit160_crit_edge, %if.entry.i.i158
  %108 = phi ptr [ %.pre239, %if.entry17.Parser_error.exit160_crit_edge ], [ %107, %if.entry.i.i158 ]
  %109 = phi i64 [ %102, %if.entry17.Parser_error.exit160_crit_edge ], [ %.pre238, %if.entry.i.i158 ]
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr %memberidx.i.i153, align 4
  %111 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %99, ptr %111, align 8
  br label %ifend4

if.entry20:                                       ; preds = %else
  %112 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %112, ptr noundef nonnull align 8 dereferenceable(12) @69, i64 12, i1 false)
  %113 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %113, align 8
  %memberidx.i.i161 = getelementptr inbounds %string, ptr %113, i64 0, i32 1
  store ptr %112, ptr %memberidx.i.i161, align 8
  %memberidx1.i.i162 = getelementptr inbounds %string, ptr %113, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i162, align 4
  %memberidx2.i.i163 = getelementptr inbounds %string, ptr %113, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i163, align 4
  %memberidx.i164 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %114 = load ptr, ptr %memberidx.i164, align 8
  %115 = tail call ptr @malloc(i32 24)
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx2.i166 = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx2.i166, align 8
  store i64 2, ptr %115, align 4
  %memberidx1.i.i167 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 2
  store ptr %117, ptr %memberidx1.i.i167, align 8
  %memberidx2.i.i168 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 1
  store ptr %113, ptr %memberidx2.i.i168, align 8
  %memberidx.i.i169 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 2
  %118 = load i64, ptr %memberidx.i.i169, align 4
  %memberidx1.i4.i170 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 3
  %119 = load i64, ptr %memberidx1.i4.i170, align 4
  %.not.i.i171 = icmp slt i64 %118, %119
  br i1 %.not.i.i171, label %if.entry20.Parser_error.exit176_crit_edge, label %if.entry.i.i174

if.entry20.Parser_error.exit176_crit_edge:        ; preds = %if.entry20
  %memberidx4.i.i175.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %.pre237 = load ptr, ptr %memberidx4.i.i175.phi.trans.insert, align 8
  br label %Parser_error.exit176

if.entry.i.i174:                                  ; preds = %if.entry20
  %120 = shl nuw i64 %119, 1
  store i64 %120, ptr %memberidx1.i4.i170, align 4
  %memberidx2.i.i.i173 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %121 = load ptr, ptr %memberidx2.i.i.i173, align 8
  %122 = shl i64 %119, 4
  %123 = tail call ptr @realloc(ptr %121, i64 %122)
  store ptr %123, ptr %memberidx2.i.i.i173, align 8
  %.pre236 = load i64, ptr %memberidx.i.i169, align 4
  br label %Parser_error.exit176

Parser_error.exit176:                             ; preds = %if.entry20.Parser_error.exit176_crit_edge, %if.entry.i.i174
  %124 = phi ptr [ %.pre237, %if.entry20.Parser_error.exit176_crit_edge ], [ %123, %if.entry.i.i174 ]
  %125 = phi i64 [ %118, %if.entry20.Parser_error.exit176_crit_edge ], [ %.pre236, %if.entry.i.i174 ]
  %126 = add nsw i64 %125, 1
  store i64 %126, ptr %memberidx.i.i169, align 4
  %127 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %115, ptr %127, align 8
  br label %ifend4

if.entry23:                                       ; preds = %else
  %128 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %128, ptr noundef nonnull align 8 dereferenceable(12) @70, i64 12, i1 false)
  %129 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %129, align 8
  %memberidx.i.i177 = getelementptr inbounds %string, ptr %129, i64 0, i32 1
  store ptr %128, ptr %memberidx.i.i177, align 8
  %memberidx1.i.i178 = getelementptr inbounds %string, ptr %129, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i178, align 4
  %memberidx2.i.i179 = getelementptr inbounds %string, ptr %129, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i179, align 4
  %memberidx.i180 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i180, align 8
  %131 = tail call ptr @malloc(i32 24)
  %132 = load ptr, ptr %memberidx, align 8
  %memberidx2.i182 = getelementptr inbounds %Token, ptr %132, i64 0, i32 1
  %133 = load ptr, ptr %memberidx2.i182, align 8
  store i64 2, ptr %131, align 4
  %memberidx1.i.i183 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 2
  store ptr %133, ptr %memberidx1.i.i183, align 8
  %memberidx2.i.i184 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 1
  store ptr %129, ptr %memberidx2.i.i184, align 8
  %memberidx.i.i185 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 2
  %134 = load i64, ptr %memberidx.i.i185, align 4
  %memberidx1.i4.i186 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 3
  %135 = load i64, ptr %memberidx1.i4.i186, align 4
  %.not.i.i187 = icmp slt i64 %134, %135
  br i1 %.not.i.i187, label %if.entry23.Parser_error.exit192_crit_edge, label %if.entry.i.i190

if.entry23.Parser_error.exit192_crit_edge:        ; preds = %if.entry23
  %memberidx4.i.i191.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %.pre235 = load ptr, ptr %memberidx4.i.i191.phi.trans.insert, align 8
  br label %Parser_error.exit192

if.entry.i.i190:                                  ; preds = %if.entry23
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx1.i4.i186, align 4
  %memberidx2.i.i.i189 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %137 = load ptr, ptr %memberidx2.i.i.i189, align 8
  %138 = shl i64 %135, 4
  %139 = tail call ptr @realloc(ptr %137, i64 %138)
  store ptr %139, ptr %memberidx2.i.i.i189, align 8
  %.pre234 = load i64, ptr %memberidx.i.i185, align 4
  br label %Parser_error.exit192

Parser_error.exit192:                             ; preds = %if.entry23.Parser_error.exit192_crit_edge, %if.entry.i.i190
  %140 = phi ptr [ %.pre235, %if.entry23.Parser_error.exit192_crit_edge ], [ %139, %if.entry.i.i190 ]
  %141 = phi i64 [ %134, %if.entry23.Parser_error.exit192_crit_edge ], [ %.pre234, %if.entry.i.i190 ]
  %142 = add nsw i64 %141, 1
  store i64 %142, ptr %memberidx.i.i185, align 4
  %143 = getelementptr inbounds ptr, ptr %140, i64 %141
  store ptr %131, ptr %143, align 8
  br label %ifend4

if.entry26:                                       ; preds = %else
  %144 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %144, ptr noundef nonnull align 8 dereferenceable(12) @71, i64 12, i1 false)
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i.i193 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i.i193, align 8
  %memberidx1.i.i194 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i194, align 4
  %memberidx2.i.i195 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i195, align 4
  %memberidx.i196 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i196, align 8
  %147 = tail call ptr @malloc(i32 24)
  %148 = load ptr, ptr %memberidx, align 8
  %memberidx2.i198 = getelementptr inbounds %Token, ptr %148, i64 0, i32 1
  %149 = load ptr, ptr %memberidx2.i198, align 8
  store i64 2, ptr %147, align 4
  %memberidx1.i.i199 = getelementptr inbounds %FloError, ptr %147, i64 0, i32 2
  store ptr %149, ptr %memberidx1.i.i199, align 8
  %memberidx2.i.i200 = getelementptr inbounds %FloError, ptr %147, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i200, align 8
  %memberidx.i.i201 = getelementptr inbounds %Array_FloError_, ptr %146, i64 0, i32 2
  %150 = load i64, ptr %memberidx.i.i201, align 4
  %memberidx1.i4.i202 = getelementptr inbounds %Array_FloError_, ptr %146, i64 0, i32 3
  %151 = load i64, ptr %memberidx1.i4.i202, align 4
  %.not.i.i203 = icmp slt i64 %150, %151
  br i1 %.not.i.i203, label %if.entry26.Parser_error.exit208_crit_edge, label %if.entry.i.i206

if.entry26.Parser_error.exit208_crit_edge:        ; preds = %if.entry26
  %memberidx4.i.i207.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %146, i64 0, i32 1
  %.pre233 = load ptr, ptr %memberidx4.i.i207.phi.trans.insert, align 8
  br label %Parser_error.exit208

if.entry.i.i206:                                  ; preds = %if.entry26
  %152 = shl nuw i64 %151, 1
  store i64 %152, ptr %memberidx1.i4.i202, align 4
  %memberidx2.i.i.i205 = getelementptr inbounds %Array_FloError_, ptr %146, i64 0, i32 1
  %153 = load ptr, ptr %memberidx2.i.i.i205, align 8
  %154 = shl i64 %151, 4
  %155 = tail call ptr @realloc(ptr %153, i64 %154)
  store ptr %155, ptr %memberidx2.i.i.i205, align 8
  %.pre232 = load i64, ptr %memberidx.i.i201, align 4
  br label %Parser_error.exit208

Parser_error.exit208:                             ; preds = %if.entry26.Parser_error.exit208_crit_edge, %if.entry.i.i206
  %156 = phi ptr [ %.pre233, %if.entry26.Parser_error.exit208_crit_edge ], [ %155, %if.entry.i.i206 ]
  %157 = phi i64 [ %150, %if.entry26.Parser_error.exit208_crit_edge ], [ %.pre232, %if.entry.i.i206 ]
  %158 = add nsw i64 %157, 1
  store i64 %158, ptr %memberidx.i.i201, align 4
  %159 = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %147, ptr %159, align 8
  br label %ifend4

if.entry29:                                       ; preds = %else
  %160 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %160, ptr noundef nonnull align 8 dereferenceable(12) @72, i64 12, i1 false)
  %161 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %161, align 8
  %memberidx.i.i209 = getelementptr inbounds %string, ptr %161, i64 0, i32 1
  store ptr %160, ptr %memberidx.i.i209, align 8
  %memberidx1.i.i210 = getelementptr inbounds %string, ptr %161, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i210, align 4
  %memberidx2.i.i211 = getelementptr inbounds %string, ptr %161, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i211, align 4
  %memberidx.i212 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %162 = load ptr, ptr %memberidx.i212, align 8
  %163 = tail call ptr @malloc(i32 24)
  %164 = load ptr, ptr %memberidx, align 8
  %memberidx2.i214 = getelementptr inbounds %Token, ptr %164, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i214, align 8
  store i64 2, ptr %163, align 4
  %memberidx1.i.i215 = getelementptr inbounds %FloError, ptr %163, i64 0, i32 2
  store ptr %165, ptr %memberidx1.i.i215, align 8
  %memberidx2.i.i216 = getelementptr inbounds %FloError, ptr %163, i64 0, i32 1
  store ptr %161, ptr %memberidx2.i.i216, align 8
  %memberidx.i.i217 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i.i217, align 4
  %memberidx1.i4.i218 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 3
  %167 = load i64, ptr %memberidx1.i4.i218, align 4
  %.not.i.i219 = icmp slt i64 %166, %167
  br i1 %.not.i.i219, label %if.entry29.Parser_error.exit224_crit_edge, label %if.entry.i.i222

if.entry29.Parser_error.exit224_crit_edge:        ; preds = %if.entry29
  %memberidx4.i.i223.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 1
  %.pre231 = load ptr, ptr %memberidx4.i.i223.phi.trans.insert, align 8
  br label %Parser_error.exit224

if.entry.i.i222:                                  ; preds = %if.entry29
  %168 = shl nuw i64 %167, 1
  store i64 %168, ptr %memberidx1.i4.i218, align 4
  %memberidx2.i.i.i221 = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 1
  %169 = load ptr, ptr %memberidx2.i.i.i221, align 8
  %170 = shl i64 %167, 4
  %171 = tail call ptr @realloc(ptr %169, i64 %170)
  store ptr %171, ptr %memberidx2.i.i.i221, align 8
  %.pre230 = load i64, ptr %memberidx.i.i217, align 4
  br label %Parser_error.exit224

Parser_error.exit224:                             ; preds = %if.entry29.Parser_error.exit224_crit_edge, %if.entry.i.i222
  %172 = phi ptr [ %.pre231, %if.entry29.Parser_error.exit224_crit_edge ], [ %171, %if.entry.i.i222 ]
  %173 = phi i64 [ %166, %if.entry29.Parser_error.exit224_crit_edge ], [ %.pre230, %if.entry.i.i222 ]
  %174 = add nsw i64 %173, 1
  store i64 %174, ptr %memberidx.i.i217, align 4
  %175 = getelementptr inbounds ptr, ptr %172, i64 %173
  store ptr %163, ptr %175, align 8
  br label %ifend4

if.entry32:                                       ; preds = %else
  %176 = tail call ptr @malloc(i32 13)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %176, ptr noundef nonnull align 8 dereferenceable(13) @73, i64 13, i1 false)
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i225 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i225, align 8
  %memberidx1.i.i226 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 13, ptr %memberidx1.i.i226, align 4
  %memberidx2.i.i227 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 13, ptr %memberidx2.i.i227, align 4
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i61, align 8
  %179 = tail call ptr @malloc(i32 24)
  %180 = load ptr, ptr %memberidx, align 8
  %memberidx2.i62 = getelementptr inbounds %Token, ptr %180, i64 0, i32 1
  %181 = load ptr, ptr %memberidx2.i62, align 8
  store i64 2, ptr %179, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %179, i64 0, i32 2
  store ptr %181, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %179, i64 0, i32 1
  store ptr %177, ptr %memberidx2.i.i, align 8
  %memberidx.i.i63 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 2
  %182 = load i64, ptr %memberidx.i.i63, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 3
  %183 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %182, %183
  br i1 %.not.i.i, label %if.entry32.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry32.Parser_error.exit_crit_edge:           ; preds = %if.entry32
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %.pre229 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry32
  %184 = shl nuw i64 %183, 1
  store i64 %184, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %185 = load ptr, ptr %memberidx2.i.i.i, align 8
  %186 = shl i64 %183, 4
  %187 = tail call ptr @realloc(ptr %185, i64 %186)
  store ptr %187, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i63, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry32.Parser_error.exit_crit_edge, %if.entry.i.i
  %188 = phi ptr [ %.pre229, %if.entry32.Parser_error.exit_crit_edge ], [ %187, %if.entry.i.i ]
  %189 = phi i64 [ %182, %if.entry32.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %190 = add nsw i64 %189, 1
  store i64 %190, ptr %memberidx.i.i63, align 4
  %191 = getelementptr inbounds ptr, ptr %188, i64 %189
  store ptr %179, ptr %191, align 8
  br label %ifend4
}

define internal fastcc ptr @Parser_parse_array_expression(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %5, align 8
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i3.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i12, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i13, align 4
  %10 = icmp slt i64 %7, %9
  br i1 %10, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %11 = add nsw i64 %7, 1
  store i64 %11, ptr %memberidx.i12, align 4
  %memberidx.i.i14 = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i14, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %5, i64 30)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 30
  br i1 %17, label %if.entry.i18, label %else.i

if.entry.i18:                                     ; preds = %Parser_advance.exit
  %18 = load i64, ptr %memberidx.i12, align 4
  %19 = load ptr, ptr %0, align 8
  %memberidx2.i.i17 = getelementptr inbounds %Array_Token_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i.i17, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i18
  %22 = add nsw i64 %18, 1
  store i64 %22, ptr %memberidx.i12, align 4
  %memberidx.i.i.i19 = getelementptr inbounds %Array_Token_, ptr %19, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i.i.i19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %Parser_advance.exit
  %26 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %27 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %26, align 4
  %memberidx1.i80.i = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i80.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i18, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %26, %else.i ], [ %15, %if.entry.i.i ], [ %15, %if.entry.i18 ]
  %memberidx5 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %28 = load ptr, ptr %memberidx5, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i20 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i20, align 4
  %memberidx3.i21 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i21, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i22 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i22, align 4
  %memberidx2.i.i23 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i23, align 4
  %memberidx3.i.i24 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i24, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_new_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call ptr @malloc(i32 41)
  %13 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i14 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i14, align 8
  %memberidx1.i = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %12, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %12, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 5
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %14, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 1
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %14, ptr %memberidx2.i16, align 8
  %16 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %14, i64 26)
  %17 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = tail call ptr @malloc(i32 32)
  %20 = load i64, ptr %3, align 4
  %memberidx1.i17 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  %21 = load i64, ptr %memberidx1.i17, align 4
  %memberidx2.i18 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i18, align 4
  %memberidx3.i19 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  %23 = load i64, ptr %memberidx3.i19, align 4
  store i64 %20, ptr %19, align 4
  %memberidx1.i.i20 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  store i64 %21, ptr %memberidx1.i.i20, align 4
  %memberidx2.i.i21 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i21, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  store i64 %23, ptr %memberidx3.i.i, align 4
  store ptr %19, ptr %12, align 8
  ret ptr %12
}

define internal fastcc ptr @Parser_parse_term_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend7.i [
    i64 4, label %Parser_is_term_expr_op.exit
    i64 7, label %Parser_is_term_expr_op.exit.fold.split
    i64 10, label %Parser_is_term_expr_op.exit.fold.split30
  ]

ifend7.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 11
  %spec.select.i = select i1 %5, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split:           ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split30:         ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit:                      ; preds = %1, %Parser_is_term_expr_op.exit.fold.split30, %Parser_is_term_expr_op.exit.fold.split, %ifend7.i
  %common.ret.op.i = phi i64 [ 3, %1 ], [ %spec.select.i, %ifend7.i ], [ 4, %Parser_is_term_expr_op.exit.fold.split ], [ 5, %Parser_is_term_expr_op.exit.fold.split30 ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_term_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_term_expr_op.exit24
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_is_term_expr_op.exit24 ], [ %common.ret.op.i, %while.entry.preheader ]
  %unary.0 = phi ptr [ %21, %Parser_is_term_expr_op.exit24 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %23 = load ptr, ptr %unary.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %unary.0, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i17, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend7.i23 [
    i64 4, label %Parser_is_term_expr_op.exit24
    i64 7, label %Parser_is_term_expr_op.exit24.fold.split
    i64 10, label %Parser_is_term_expr_op.exit24.fold.split31
  ]

ifend7.i23:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 11
  %spec.select.i22 = select i1 %32, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24.fold.split:         ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24.fold.split31:       ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24:                    ; preds = %Parser_advance.exit, %Parser_is_term_expr_op.exit24.fold.split31, %Parser_is_term_expr_op.exit24.fold.split, %ifend7.i23
  %common.ret.op.i19 = phi i64 [ 3, %Parser_advance.exit ], [ %spec.select.i22, %ifend7.i23 ], [ 4, %Parser_is_term_expr_op.exit24.fold.split ], [ 5, %Parser_is_term_expr_op.exit24.fold.split31 ]
  %33 = icmp ne i64 %common.ret.op.i19, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i27 = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 2
  %36 = load i64, ptr %memberidx3.i27, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_term_expr_op.exit24, %Parser_is_term_expr_op.exit
  %unary.1 = phi ptr [ %2, %Parser_is_term_expr_op.exit ], [ %21, %Parser_is_term_expr_op.exit24 ]
  ret ptr %unary.1
}

define internal fastcc ptr @Parser_parse_arithmetic_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_term_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx3.i, align 4
  %7 = icmp eq i64 %6, 0
  %8 = add i64 %4, -5
  %9 = icmp ult i64 %8, 2
  %10 = and i1 %9, %7
  br i1 %10, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %1
  %11 = icmp eq i64 %4, 6
  %12 = icmp eq i64 %4, 5
  %spec.select.i = select i1 %12, i64 2, i64 0
  %common.ret.op.i = select i1 %11, i64 1, i64 %spec.select.i
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_advance.exit
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_advance.exit ], [ %common.ret.op.i, %while.entry.preheader ]
  %term.0 = phi ptr [ %21, %Parser_advance.exit ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_term_expression(ptr nonnull %0)
  %23 = load ptr, ptr %term.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i14 = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i14, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %term.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  %32 = icmp eq i64 %31, 6
  %33 = icmp eq i64 %31, 5
  %spec.select.i18 = select i1 %33, i64 2, i64 0
  %common.ret.op.i19 = select i1 %32, i64 1, i64 %spec.select.i18
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i22 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx3.i22, align 4
  %36 = icmp eq i64 %35, 0
  %37 = add i64 %31, -5
  %38 = icmp ult i64 %37, 2
  %39 = and i1 %38, %36
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_advance.exit, %1
  %term.1 = phi ptr [ %2, %1 ], [ %21, %Parser_advance.exit ]
  ret ptr %term.1
}

define internal fastcc ptr @Parser_parse_bitshift_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend4.i [
    i64 48, label %Parser_is_bitshift_expr_op.exit
    i64 49, label %Parser_is_bitshift_expr_op.exit.fold.split
  ]

ifend4.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 51
  %spec.select.i = select i1 %5, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit.fold.split:       ; preds = %1
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit:                  ; preds = %1, %Parser_is_bitshift_expr_op.exit.fold.split, %ifend4.i
  %common.ret.op.i = phi i64 [ 13, %1 ], [ %spec.select.i, %ifend4.i ], [ 14, %Parser_is_bitshift_expr_op.exit.fold.split ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_bitshift_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_bitshift_expr_op.exit23
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_is_bitshift_expr_op.exit23 ], [ %common.ret.op.i, %while.entry.preheader ]
  %arith.0 = phi ptr [ %21, %Parser_is_bitshift_expr_op.exit23 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr nonnull %0)
  %23 = load ptr, ptr %arith.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %arith.0, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i17, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend4.i22 [
    i64 48, label %Parser_is_bitshift_expr_op.exit23
    i64 49, label %Parser_is_bitshift_expr_op.exit23.fold.split
  ]

ifend4.i22:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 51
  %spec.select.i21 = select i1 %32, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit23

Parser_is_bitshift_expr_op.exit23.fold.split:     ; preds = %Parser_advance.exit
  br label %Parser_is_bitshift_expr_op.exit23

Parser_is_bitshift_expr_op.exit23:                ; preds = %Parser_advance.exit, %Parser_is_bitshift_expr_op.exit23.fold.split, %ifend4.i22
  %common.ret.op.i19 = phi i64 [ 13, %Parser_advance.exit ], [ %spec.select.i21, %ifend4.i22 ], [ 14, %Parser_is_bitshift_expr_op.exit23.fold.split ]
  %33 = icmp ne i64 %common.ret.op.i19, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 2
  %36 = load i64, ptr %memberidx3.i26, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_bitshift_expr_op.exit23, %Parser_is_bitshift_expr_op.exit
  %arith.1 = phi ptr [ %2, %Parser_is_bitshift_expr_op.exit ], [ %21, %Parser_is_bitshift_expr_op.exit23 ]
  ret ptr %arith.1
}

define internal fastcc ptr @Parser_parse_comparison_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 47
  br i1 %4, label %if.entry, label %ifend

common.ret63:                                     ; preds = %Parser_is_comp_expr_op.exit50, %Parser_is_comp_expr_op.exit, %Parser_advance.exit
  %common.ret63.op = phi ptr [ %15, %Parser_advance.exit ], [ %22, %Parser_is_comp_expr_op.exit ], [ %41, %Parser_is_comp_expr_op.exit50 ]
  ret ptr %common.ret63.op

if.entry:                                         ; preds = %1
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %14 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %15 = tail call ptr @malloc(i32 40)
  %16 = load ptr, ptr %14, align 8
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  %19 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i19 = getelementptr inbounds %FloRange, ptr %5, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i19, align 4
  %memberidx3.i20 = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx3.i20, align 4
  store i64 %18, ptr %17, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %21, ptr %memberidx3.i.i, align 4
  %memberidx.i21 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx.i21, align 4
  %memberidx1.i22 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 4
  store ptr %14, ptr %memberidx1.i22, align 8
  store ptr %17, ptr %15, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %15, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i23 = getelementptr inbounds %ExpressionNode, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i23, align 4
  br label %common.ret63

ifend:                                            ; preds = %1
  %22 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  switch i64 %24, label %ifend13.i [
    i64 41, label %Parser_is_comp_expr_op.exit
    i64 42, label %Parser_is_comp_expr_op.exit.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit.fold.split57
    i64 43, label %Parser_is_comp_expr_op.exit.fold.split58
    i64 39, label %Parser_is_comp_expr_op.exit.fold.split59
  ]

ifend13.i:                                        ; preds = %ifend
  %25 = icmp eq i64 %24, 40
  %spec.select.i = select i1 %25, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split:           ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split57:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split58:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split59:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit:                      ; preds = %ifend, %Parser_is_comp_expr_op.exit.fold.split59, %Parser_is_comp_expr_op.exit.fold.split58, %Parser_is_comp_expr_op.exit.fold.split57, %Parser_is_comp_expr_op.exit.fold.split, %ifend13.i
  %common.ret.op.i = phi i64 [ 7, %ifend ], [ %spec.select.i, %ifend13.i ], [ 9, %Parser_is_comp_expr_op.exit.fold.split ], [ 8, %Parser_is_comp_expr_op.exit.fold.split57 ], [ 10, %Parser_is_comp_expr_op.exit.fold.split58 ], [ 11, %Parser_is_comp_expr_op.exit.fold.split59 ]
  %26 = icmp ne i64 %common.ret.op.i, 0
  %27 = icmp ne i64 %24, 46
  %memberidx2.i26 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %28 = load ptr, ptr %memberidx2.i26, align 8
  %memberidx3.i27 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i27, align 4
  %30 = icmp eq i64 %29, 0
  %31 = and i1 %27, %30
  %32 = and i1 %26, %31
  br i1 %32, label %while.entry.preheader, label %common.ret63

while.entry.preheader:                            ; preds = %Parser_is_comp_expr_op.exit
  %memberidx.i28 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_comp_expr_op.exit50
  %bit.0 = phi ptr [ %41, %Parser_is_comp_expr_op.exit50 ], [ %22, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i43, %Parser_is_comp_expr_op.exit50 ], [ %common.ret.op.i, %while.entry.preheader ]
  %33 = load i64, ptr %memberidx.i28, align 4
  %34 = load ptr, ptr %0, align 8
  %memberidx2.i29 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i29, align 4
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %if.entry.i32, label %Parser_advance.exit34

if.entry.i32:                                     ; preds = %while.entry
  %37 = add nsw i64 %33, 1
  store i64 %37, ptr %memberidx.i28, align 4
  %memberidx.i.i31 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i31, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  br label %Parser_advance.exit34

Parser_advance.exit34:                            ; preds = %while.entry, %if.entry.i32
  %41 = tail call ptr @malloc(i32 48)
  %42 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %43 = load ptr, ptr %bit.0, align 8
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  %46 = load i64, ptr %43, align 4
  %memberidx1.i.i35 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  %47 = load i64, ptr %memberidx1.i.i35, align 4
  %memberidx2.i.i36 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 2
  %48 = load i64, ptr %memberidx2.i.i36, align 4
  %memberidx3.i.i37 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  %49 = load i64, ptr %memberidx3.i.i37, align 4
  store i64 %46, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 1
  store i64 %47, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  store i64 %48, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 3
  store i64 %49, ptr %memberidx3.i.i.i, align 4
  store ptr %45, ptr %41, align 8
  %memberidx.i.i.i38 = getelementptr inbounds %StatementNode, ptr %41, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i38, align 4
  %memberidx.i.i39 = getelementptr inbounds %ExpressionNode, ptr %41, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i39, align 4
  %memberidx2.i40 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 3
  store ptr %bit.0, ptr %memberidx2.i40, align 8
  %memberidx3.i41 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i41, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 5
  store ptr %42, ptr %memberidx4.i, align 8
  %50 = load ptr, ptr %memberidx, align 8
  %51 = load i64, ptr %50, align 4
  switch i64 %51, label %ifend13.i49 [
    i64 41, label %Parser_is_comp_expr_op.exit50
    i64 42, label %Parser_is_comp_expr_op.exit50.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit50.fold.split60
    i64 43, label %Parser_is_comp_expr_op.exit50.fold.split61
    i64 39, label %Parser_is_comp_expr_op.exit50.fold.split62
  ]

ifend13.i49:                                      ; preds = %Parser_advance.exit34
  %52 = icmp eq i64 %51, 40
  %spec.select.i48 = select i1 %52, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit50

Parser_is_comp_expr_op.exit50.fold.split:         ; preds = %Parser_advance.exit34
  br label %Parser_is_comp_expr_op.exit50

Parser_is_comp_expr_op.exit50.fold.split60:       ; preds = %Parser_advance.exit34
  br label %Parser_is_comp_expr_op.exit50

Parser_is_comp_expr_op.exit50.fold.split61:       ; preds = %Parser_advance.exit34
  br label %Parser_is_comp_expr_op.exit50

Parser_is_comp_expr_op.exit50.fold.split62:       ; preds = %Parser_advance.exit34
  br label %Parser_is_comp_expr_op.exit50

Parser_is_comp_expr_op.exit50:                    ; preds = %Parser_advance.exit34, %Parser_is_comp_expr_op.exit50.fold.split62, %Parser_is_comp_expr_op.exit50.fold.split61, %Parser_is_comp_expr_op.exit50.fold.split60, %Parser_is_comp_expr_op.exit50.fold.split, %ifend13.i49
  %common.ret.op.i43 = phi i64 [ 7, %Parser_advance.exit34 ], [ %spec.select.i48, %ifend13.i49 ], [ 9, %Parser_is_comp_expr_op.exit50.fold.split ], [ 8, %Parser_is_comp_expr_op.exit50.fold.split60 ], [ 10, %Parser_is_comp_expr_op.exit50.fold.split61 ], [ 11, %Parser_is_comp_expr_op.exit50.fold.split62 ]
  %53 = icmp ne i64 %common.ret.op.i43, 0
  %54 = icmp ne i64 %51, 46
  %55 = load ptr, ptr %memberidx2.i26, align 8
  %memberidx3.i53 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i53, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  %59 = and i1 %53, %58
  br i1 %59, label %while.entry, label %common.ret63
}

define internal fastcc ptr @Parser_parse_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 57
  br i1 %4, label %if.entry, label %ifend

common.ret123:                                    ; preds = %Parser_parse_match_expression.exit, %Parser_is_assign_op.exit, %Parser_advance.exit, %Parser_advance.exit48
  %common.ret123.op = phi ptr [ %285, %Parser_advance.exit48 ], [ %307, %Parser_advance.exit ], [ %5, %Parser_parse_match_expression.exit ], [ %common.ret.op.i68, %Parser_is_assign_op.exit ]
  ret ptr %common.ret123.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 48)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 57
  br i1 %8, label %if.entry.i98.i, label %else.i.i

if.entry.i98.i:                                   ; preds = %if.entry
  %memberidx.i.i96.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %9 = load i64, ptr %memberidx.i.i96.i, align 4
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i.i97.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 2
  %11 = load i64, ptr %memberidx2.i.i97.i, align 4
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %if.entry.i.i101.i, label %Parser_eat.exit.i

if.entry.i.i101.i:                                ; preds = %if.entry.i98.i
  %13 = add nsw i64 %9, 1
  store i64 %13, ptr %memberidx.i.i96.i, align 4
  %memberidx.i.i.i100.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i100.i, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  store ptr %16, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %if.entry
  %17 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %18 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %17, align 4
  %memberidx1.i80.i.i = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i80.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i98.i, %if.entry.i.i101.i, %else.i.i
  %common.ret.op.i.i = phi ptr [ %17, %else.i.i ], [ %6, %if.entry.i.i101.i ], [ %6, %if.entry.i98.i ]
  %memberidx.i52 = getelementptr inbounds %Token, ptr %common.ret.op.i.i, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i52, align 8
  store ptr %19, ptr %5, align 8
  %memberidx.i.i.i89.i = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i89.i, align 4
  %memberidx.i.i90.i = getelementptr inbounds %ExpressionNode, ptr %5, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i90.i, align 4
  %memberidx.i91.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 4
  %20 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_MatchExpressionCaseNode_, ptr %20, align 8
  %memberidx.i5.i.i = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i.i53 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i53, align 4
  %memberidx2.i.i92.i = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 64)
  store ptr %21, ptr %memberidx2.i.i92.i, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %20, ptr %memberidx.i91.i, align 8
  %memberidx3.i94.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 5
  store ptr null, ptr %memberidx3.i94.i, align 8
  %memberidx1.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 3
  %22 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %22, ptr %memberidx1.i, align 8
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  %25 = icmp eq i64 %24, 33
  %memberidx2.i.i76.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i76.i, align 8
  %memberidx3.i.i77.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx3.i.i77.i, align 4
  %28 = icmp eq i64 %27, 0
  %29 = and i1 %25, %28
  br i1 %29, label %while.entry.i80.i.preheader, label %Parser_new_lines.exit88.i

while.entry.i80.i.preheader:                      ; preds = %Parser_eat.exit.i
  %memberidx.i11.i78.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i12.i79.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %memberidx.i.i.i82.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i11.i78.i, align 4
  %32 = load i64, ptr %memberidx2.i12.i79.i, align 4
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %while.entry.i80.i, label %while.entry.i80.i.us

while.entry.i80.i.us:                             ; preds = %while.entry.i80.i.preheader, %while.entry.i80.i.us
  br label %while.entry.i80.i.us

while.entry.i80.i:                                ; preds = %while.entry.i80.i.preheader, %Parser_advance.exit.i87.i
  %34 = phi i64 [ %43, %Parser_advance.exit.i87.i ], [ %31, %while.entry.i80.i.preheader ]
  %35 = load i64, ptr %memberidx2.i12.i79.i, align 4
  %36 = icmp slt i64 %34, %35
  br i1 %36, label %if.entry.i.i83.i, label %Parser_advance.exit.i87.i

if.entry.i.i83.i:                                 ; preds = %while.entry.i80.i
  %37 = add nsw i64 %34, 1
  store i64 %37, ptr %memberidx.i11.i78.i, align 4
  %38 = load ptr, ptr %memberidx.i.i.i82.i, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  %.pre142 = load i64, ptr %40, align 4
  %.pre143 = load i64, ptr %memberidx3.i.i77.i, align 4
  br label %Parser_advance.exit.i87.i

Parser_advance.exit.i87.i:                        ; preds = %if.entry.i.i83.i, %while.entry.i80.i
  %41 = phi i64 [ %.pre143, %if.entry.i.i83.i ], [ 0, %while.entry.i80.i ]
  %42 = phi i64 [ %.pre142, %if.entry.i.i83.i ], [ 33, %while.entry.i80.i ]
  %43 = phi i64 [ %37, %if.entry.i.i83.i ], [ %34, %while.entry.i80.i ]
  %44 = icmp eq i64 %42, 33
  %45 = icmp eq i64 %41, 0
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i80.i, label %Parser_new_lines.exit88.i

Parser_new_lines.exit88.i:                        ; preds = %Parser_advance.exit.i87.i, %Parser_eat.exit.i
  %47 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 27)
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 33
  %51 = load ptr, ptr %memberidx2.i.i76.i, align 8
  %memberidx3.i.i62.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i62.i, align 4
  %53 = icmp eq i64 %52, 0
  %54 = and i1 %50, %53
  br i1 %54, label %while.entry.i65.i.preheader, label %Parser_new_lines.exit73.i

while.entry.i65.i.preheader:                      ; preds = %Parser_new_lines.exit88.i
  %memberidx.i11.i63.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %0, align 8
  %memberidx2.i12.i64.i = getelementptr inbounds %Array_Token_, ptr %55, i64 0, i32 2
  %memberidx.i.i.i67.i = getelementptr inbounds %Array_Token_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i11.i63.i, align 4
  %57 = load i64, ptr %memberidx2.i12.i64.i, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %while.entry.i65.i, label %while.entry.i65.i.us

while.entry.i65.i.us:                             ; preds = %while.entry.i65.i.preheader, %while.entry.i65.i.us
  br label %while.entry.i65.i.us

while.entry.i65.i:                                ; preds = %while.entry.i65.i.preheader, %Parser_advance.exit.i72.i
  %59 = phi i64 [ %67, %Parser_advance.exit.i72.i ], [ 33, %while.entry.i65.i.preheader ]
  %60 = phi i64 [ %70, %Parser_advance.exit.i72.i ], [ %56, %while.entry.i65.i.preheader ]
  %61 = load i64, ptr %memberidx2.i12.i64.i, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i68.i, label %Parser_advance.exit.i72.i

if.entry.i.i68.i:                                 ; preds = %while.entry.i65.i
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx.i11.i63.i, align 4
  %64 = load ptr, ptr %memberidx.i.i.i67.i, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx, align 8
  %.pre144 = load i64, ptr %66, align 4
  %.pre145 = load i64, ptr %memberidx3.i.i62.i, align 4
  br label %Parser_advance.exit.i72.i

Parser_advance.exit.i72.i:                        ; preds = %if.entry.i.i68.i, %while.entry.i65.i
  %67 = phi i64 [ %.pre144, %if.entry.i.i68.i ], [ %59, %while.entry.i65.i ]
  %68 = phi i64 [ %.pre145, %if.entry.i.i68.i ], [ 0, %while.entry.i65.i ]
  %69 = phi i64 [ %.pre144, %if.entry.i.i68.i ], [ 33, %while.entry.i65.i ]
  %70 = phi i64 [ %63, %if.entry.i.i68.i ], [ %60, %while.entry.i65.i ]
  %71 = icmp eq i64 %69, 33
  %72 = icmp eq i64 %68, 0
  %73 = and i1 %71, %72
  br i1 %73, label %while.entry.i65.i, label %Parser_new_lines.exit73.i

Parser_new_lines.exit73.i:                        ; preds = %Parser_advance.exit.i72.i, %Parser_new_lines.exit88.i
  %74 = phi i64 [ %49, %Parser_new_lines.exit88.i ], [ %67, %Parser_advance.exit.i72.i ]
  %75 = phi i64 [ %52, %Parser_new_lines.exit88.i ], [ %68, %Parser_advance.exit.i72.i ]
  %.fr = freeze i64 %75
  %76 = icmp eq i64 %.fr, 0
  br i1 %76, label %switch.early.test, label %Parser_parse_match_expression.exit

switch.early.test:                                ; preds = %Parser_new_lines.exit73.i
  switch i64 %74, label %while.entry.i.preheader [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
  ]

while.entry.i.preheader:                          ; preds = %switch.early.test
  %memberidx.i11.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %switch.early.test88
  %77 = phi i64 [ %74, %while.entry.i.preheader ], [ %156, %switch.early.test88 ]
  %78 = icmp eq i64 %77, 58
  br i1 %78, label %if.entry.i55, label %else.i

if.entry.i55:                                     ; preds = %while.entry.i
  %79 = load i64, ptr %memberidx.i11.i.i, align 4
  %80 = load ptr, ptr %0, align 8
  %memberidx2.i52.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i52.i, align 4
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %if.entry.i55.i, label %Parser_advance.exit.i

if.entry.i55.i:                                   ; preds = %if.entry.i55
  %83 = add nsw i64 %79, 1
  store i64 %83, ptr %memberidx.i11.i.i, align 4
  %memberidx.i.i54.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i54.i, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %83
  %86 = load ptr, ptr %85, align 8
  store ptr %86, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i55.i, %if.entry.i55
  %87 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %88 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %88, ptr %memberidx3.i94.i, align 8
  %89 = load ptr, ptr %memberidx, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 33
  %92 = load ptr, ptr %memberidx2.i.i76.i, align 8
  %memberidx3.i.i39.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx3.i.i39.i, align 4
  %94 = icmp eq i64 %93, 0
  %95 = and i1 %91, %94
  br i1 %95, label %while.entry.i42.i.preheader, label %ifend.i63

while.entry.i42.i.preheader:                      ; preds = %Parser_advance.exit.i
  %96 = load ptr, ptr %0, align 8
  %memberidx2.i12.i41.i = getelementptr inbounds %Array_Token_, ptr %96, i64 0, i32 2
  %memberidx.i.i.i44.i = getelementptr inbounds %Array_Token_, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i11.i.i, align 4
  %98 = load i64, ptr %memberidx2.i12.i41.i, align 4
  %99 = icmp slt i64 %97, %98
  br i1 %99, label %while.entry.i42.i, label %while.entry.i42.i.us

while.entry.i42.i.us:                             ; preds = %while.entry.i42.i.preheader, %while.entry.i42.i.us
  br label %while.entry.i42.i.us

while.entry.i42.i:                                ; preds = %while.entry.i42.i.preheader, %Parser_advance.exit.i49.i
  %100 = phi i64 [ %108, %Parser_advance.exit.i49.i ], [ 0, %while.entry.i42.i.preheader ]
  %101 = phi i64 [ %111, %Parser_advance.exit.i49.i ], [ %97, %while.entry.i42.i.preheader ]
  %102 = load i64, ptr %memberidx2.i12.i41.i, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %if.entry.i.i45.i, label %Parser_advance.exit.i49.i

if.entry.i.i45.i:                                 ; preds = %while.entry.i42.i
  %104 = add nsw i64 %101, 1
  store i64 %104, ptr %memberidx.i11.i.i, align 4
  %105 = load ptr, ptr %memberidx.i.i.i44.i, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  %107 = load ptr, ptr %106, align 8
  store ptr %107, ptr %memberidx, align 8
  %.pre150 = load i64, ptr %107, align 4
  %.pre151 = load i64, ptr %memberidx3.i.i39.i, align 4
  br label %Parser_advance.exit.i49.i

Parser_advance.exit.i49.i:                        ; preds = %if.entry.i.i45.i, %while.entry.i42.i
  %108 = phi i64 [ %.pre151, %if.entry.i.i45.i ], [ %100, %while.entry.i42.i ]
  %109 = phi i64 [ %.pre151, %if.entry.i.i45.i ], [ 0, %while.entry.i42.i ]
  %110 = phi i64 [ %.pre150, %if.entry.i.i45.i ], [ 33, %while.entry.i42.i ]
  %111 = phi i64 [ %104, %if.entry.i.i45.i ], [ %101, %while.entry.i42.i ]
  %112 = icmp eq i64 %110, 33
  %113 = icmp eq i64 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %while.entry.i42.i, label %ifend.i63

else.i:                                           ; preds = %while.entry.i
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %116 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %117 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  %118 = load ptr, ptr %memberidx, align 8
  %119 = load i64, ptr %118, align 4
  %120 = icmp eq i64 %119, 33
  %121 = load ptr, ptr %memberidx2.i.i76.i, align 8
  %memberidx3.i.i.i56 = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 2
  %122 = load i64, ptr %memberidx3.i.i.i56, align 4
  %123 = icmp eq i64 %122, 0
  %124 = and i1 %120, %123
  br i1 %124, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %else.i
  %125 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %125, i64 0, i32 2
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i11.i.i, align 4
  %127 = load i64, ptr %memberidx2.i12.i.i, align 4
  %128 = icmp slt i64 %126, %127
  br i1 %128, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i
  %129 = phi i64 [ %138, %Parser_advance.exit.i.i ], [ %126, %while.entry.i.i.preheader ]
  %130 = load i64, ptr %memberidx2.i12.i.i, align 4
  %131 = icmp slt i64 %129, %130
  br i1 %131, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i
  %132 = add nsw i64 %129, 1
  store i64 %132, ptr %memberidx.i11.i.i, align 4
  %133 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  store ptr %135, ptr %memberidx, align 8
  %.pre146 = load i64, ptr %135, align 4
  %.pre147 = load i64, ptr %memberidx3.i.i.i56, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i
  %136 = phi i64 [ %.pre147, %if.entry.i.i.i ], [ 0, %while.entry.i.i ]
  %137 = phi i64 [ %.pre146, %if.entry.i.i.i ], [ 33, %while.entry.i.i ]
  %138 = phi i64 [ %132, %if.entry.i.i.i ], [ %129, %while.entry.i.i ]
  %139 = icmp eq i64 %137, 33
  %140 = icmp eq i64 %136, 0
  %141 = and i1 %139, %140
  br i1 %141, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %else.i
  %142 = tail call ptr @malloc(i32 16)
  store ptr %115, ptr %142, align 8
  %memberidx1.i32.i = getelementptr inbounds %MatchExpressionCaseNode, ptr %142, i64 0, i32 1
  store ptr %117, ptr %memberidx1.i32.i, align 8
  %143 = load i64, ptr %memberidx.i5.i.i, align 4
  %144 = load i64, ptr %memberidx1.i.i.i53, align 4
  %.not.i.i = icmp slt i64 %143, %144
  br i1 %.not.i.i, label %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge, label %if.entry.i.i

Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge: ; preds = %Parser_new_lines.exit.i
  %.pre149 = load ptr, ptr %memberidx2.i.i92.i, align 8
  br label %Array_MatchExpressionCaseNode____sl__.exit.i

if.entry.i.i:                                     ; preds = %Parser_new_lines.exit.i
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx1.i.i.i53, align 4
  %146 = load ptr, ptr %memberidx2.i.i92.i, align 8
  %147 = shl i64 %144, 4
  %148 = tail call ptr @realloc(ptr %146, i64 %147)
  store ptr %148, ptr %memberidx2.i.i92.i, align 8
  %.pre148 = load i64, ptr %memberidx.i5.i.i, align 4
  br label %Array_MatchExpressionCaseNode____sl__.exit.i

Array_MatchExpressionCaseNode____sl__.exit.i:     ; preds = %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge, %if.entry.i.i
  %149 = phi ptr [ %148, %if.entry.i.i ], [ %.pre149, %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge ]
  %150 = phi i64 [ %.pre148, %if.entry.i.i ], [ %143, %Parser_new_lines.exit.i.Array_MatchExpressionCaseNode____sl__.exit.i_crit_edge ]
  %151 = add nsw i64 %150, 1
  store i64 %151, ptr %memberidx.i5.i.i, align 4
  %152 = getelementptr inbounds ptr, ptr %149, i64 %150
  store ptr %142, ptr %152, align 8
  %.pre152 = load ptr, ptr %memberidx2.i.i76.i, align 8
  %memberidx3.i.i62.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre152, i64 0, i32 2
  %.pre153 = load i64, ptr %memberidx3.i.i62.phi.trans.insert, align 4
  br label %ifend.i63

ifend.i63:                                        ; preds = %Parser_advance.exit.i49.i, %Parser_advance.exit.i, %Array_MatchExpressionCaseNode____sl__.exit.i
  %153 = phi i64 [ %93, %Parser_advance.exit.i ], [ %.pre153, %Array_MatchExpressionCaseNode____sl__.exit.i ], [ %108, %Parser_advance.exit.i49.i ]
  %.fr122 = freeze i64 %153
  %154 = icmp eq i64 %.fr122, 0
  br i1 %154, label %switch.early.test88, label %Parser_parse_match_expression.exit

switch.early.test88:                              ; preds = %ifend.i63
  %155 = load ptr, ptr %memberidx, align 8
  %156 = load i64, ptr %155, align 4
  switch i64 %156, label %while.entry.i [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
  ]

Parser_parse_match_expression.exit:               ; preds = %switch.early.test88, %switch.early.test88, %ifend.i63, %switch.early.test, %switch.early.test, %Parser_new_lines.exit73.i
  %157 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %common.ret123

ifend:                                            ; preds = %1
  %158 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %159 = load ptr, ptr %memberidx, align 8
  %160 = load i64, ptr %159, align 4
  %161 = and i64 %160, -2
  %162 = icmp eq i64 %161, 8
  %163 = icmp ne i64 %160, 46
  %memberidx2.i.i20.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %164 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i21.i = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 2
  %165 = load i64, ptr %memberidx3.i.i21.i, align 4
  %166 = icmp eq i64 %165, 0
  %167 = and i1 %163, %166
  %168 = and i1 %162, %167
  br i1 %168, label %while.entry.i.i99.preheader, label %Parser_parse_bit_expression.exit.i

while.entry.i.i99.preheader:                      ; preds = %ifend
  %169 = icmp eq i64 %160, 9
  %170 = icmp eq i64 %160, 8
  %spec.select.i.i.i = select i1 %170, i64 16, i64 0
  %common.ret.op.i.i.i = select i1 %169, i64 15, i64 %spec.select.i.i.i
  %memberidx.i11.i.i98 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i.i99

while.entry.i.i99:                                ; preds = %while.entry.i.i99.preheader, %Parser_advance.exit.i34.i
  %op.0.i.i = phi i64 [ %common.ret.op.i19.i.i, %Parser_advance.exit.i34.i ], [ %common.ret.op.i.i.i, %while.entry.i.i99.preheader ]
  %cmp.0.i.i = phi ptr [ %179, %Parser_advance.exit.i34.i ], [ %158, %while.entry.i.i99.preheader ]
  %171 = load i64, ptr %memberidx.i11.i.i98, align 4
  %172 = load ptr, ptr %0, align 8
  %memberidx2.i12.i22.i = getelementptr inbounds %Array_Token_, ptr %172, i64 0, i32 2
  %173 = load i64, ptr %memberidx2.i12.i22.i, align 4
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %if.entry.i.i25.i, label %Parser_advance.exit.i34.i

if.entry.i.i25.i:                                 ; preds = %while.entry.i.i99
  %175 = add nsw i64 %171, 1
  store i64 %175, ptr %memberidx.i11.i.i98, align 4
  %memberidx.i.i.i24.i = getelementptr inbounds %Array_Token_, ptr %172, i64 0, i32 1
  %176 = load ptr, ptr %memberidx.i.i.i24.i, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %175
  %178 = load ptr, ptr %177, align 8
  store ptr %178, ptr %memberidx, align 8
  br label %Parser_advance.exit.i34.i

Parser_advance.exit.i34.i:                        ; preds = %if.entry.i.i25.i, %while.entry.i.i99
  %179 = tail call ptr @malloc(i32 48)
  %180 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %181 = load ptr, ptr %cmp.0.i.i, align 8
  %182 = load ptr, ptr %180, align 8
  %183 = tail call ptr @malloc(i32 32)
  %184 = load i64, ptr %181, align 4
  %memberidx1.i.i.i26.i = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 1
  %185 = load i64, ptr %memberidx1.i.i.i26.i, align 4
  %memberidx2.i.i.i27.i = getelementptr inbounds %FloRange, ptr %181, i64 0, i32 2
  %186 = load i64, ptr %memberidx2.i.i.i27.i, align 4
  %memberidx3.i.i.i28.i = getelementptr inbounds %FloRange, ptr %182, i64 0, i32 3
  %187 = load i64, ptr %memberidx3.i.i.i28.i, align 4
  store i64 %184, ptr %183, align 4
  %memberidx1.i.i.i.i29.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 1
  store i64 %185, ptr %memberidx1.i.i.i.i29.i, align 4
  %memberidx2.i.i.i.i30.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 2
  store i64 %186, ptr %memberidx2.i.i.i.i30.i, align 4
  %memberidx3.i.i.i.i31.i = getelementptr inbounds %FloRange, ptr %183, i64 0, i32 3
  store i64 %187, ptr %memberidx3.i.i.i.i31.i, align 4
  store ptr %183, ptr %179, align 8
  %memberidx.i.i.i.i32.i = getelementptr inbounds %StatementNode, ptr %179, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i32.i, align 4
  %memberidx.i.i14.i.i = getelementptr inbounds %ExpressionNode, ptr %179, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i14.i.i, align 4
  %memberidx2.i15.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %179, i64 0, i32 3
  store ptr %cmp.0.i.i, ptr %memberidx2.i15.i.i, align 8
  %memberidx3.i16.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %179, i64 0, i32 4
  store i64 %op.0.i.i, ptr %memberidx3.i16.i.i, align 4
  %memberidx4.i.i33.i = getelementptr inbounds %BinaryExpressionNode, ptr %179, i64 0, i32 5
  store ptr %180, ptr %memberidx4.i.i33.i, align 8
  %188 = load ptr, ptr %memberidx, align 8
  %189 = load i64, ptr %188, align 4
  %190 = icmp eq i64 %189, 9
  %191 = icmp eq i64 %189, 8
  %spec.select.i18.i.i = select i1 %191, i64 16, i64 0
  %common.ret.op.i19.i.i = select i1 %190, i64 15, i64 %spec.select.i18.i.i
  %192 = and i64 %189, -2
  %193 = icmp eq i64 %192, 8
  %194 = icmp ne i64 %189, 46
  %195 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i22.i.i = getelementptr inbounds %Array_FloError_, ptr %195, i64 0, i32 2
  %196 = load i64, ptr %memberidx3.i22.i.i, align 4
  %197 = icmp eq i64 %196, 0
  %198 = and i1 %194, %197
  %199 = and i1 %193, %198
  br i1 %199, label %while.entry.i.i99, label %Parser_parse_bit_expression.exit.i

Parser_parse_bit_expression.exit.i:               ; preds = %Parser_advance.exit.i34.i, %ifend
  %200 = phi i64 [ %165, %ifend ], [ %196, %Parser_advance.exit.i34.i ]
  %201 = phi i64 [ %160, %ifend ], [ %189, %Parser_advance.exit.i34.i ]
  %cmp.1.i.i = phi ptr [ %158, %ifend ], [ %179, %Parser_advance.exit.i34.i ]
  %202 = icmp eq i64 %201, 52
  %203 = icmp eq i64 %200, 0
  %204 = and i1 %202, %203
  br i1 %204, label %ifend.i.i, label %Parser_parse_range_expression.exit.i

ifend.i.i:                                        ; preds = %Parser_parse_bit_expression.exit.i
  %memberidx.i8.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %205 = load i64, ptr %memberidx.i8.i.i, align 4
  %206 = load ptr, ptr %0, align 8
  %memberidx2.i9.i.i100 = getelementptr inbounds %Array_Token_, ptr %206, i64 0, i32 2
  %207 = load i64, ptr %memberidx2.i9.i.i100, align 4
  %208 = icmp slt i64 %205, %207
  br i1 %208, label %if.entry.i.i.i102, label %Parser_advance.exit.i.i105

if.entry.i.i.i102:                                ; preds = %ifend.i.i
  %209 = add nsw i64 %205, 1
  store i64 %209, ptr %memberidx.i8.i.i, align 4
  %memberidx.i.i.i14.i = getelementptr inbounds %Array_Token_, ptr %206, i64 0, i32 1
  %210 = load ptr, ptr %memberidx.i.i.i14.i, align 8
  %211 = getelementptr inbounds ptr, ptr %210, i64 %209
  %212 = load ptr, ptr %211, align 8
  store ptr %212, ptr %memberidx, align 8
  br label %Parser_advance.exit.i.i105

Parser_advance.exit.i.i105:                       ; preds = %if.entry.i.i.i102, %ifend.i.i
  %213 = tail call ptr @malloc(i32 48)
  %214 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %215 = load ptr, ptr %cmp.1.i.i, align 8
  %216 = load ptr, ptr %214, align 8
  %217 = tail call ptr @malloc(i32 32)
  %218 = load i64, ptr %215, align 4
  %memberidx1.i.i.i15.i = getelementptr inbounds %FloRange, ptr %216, i64 0, i32 1
  %219 = load i64, ptr %memberidx1.i.i.i15.i, align 4
  %memberidx2.i.i.i16.i = getelementptr inbounds %FloRange, ptr %215, i64 0, i32 2
  %220 = load i64, ptr %memberidx2.i.i.i16.i, align 4
  %memberidx3.i.i.i17.i = getelementptr inbounds %FloRange, ptr %216, i64 0, i32 3
  %221 = load i64, ptr %memberidx3.i.i.i17.i, align 4
  store i64 %218, ptr %217, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %217, i64 0, i32 1
  store i64 %219, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %217, i64 0, i32 2
  store i64 %220, ptr %memberidx2.i.i.i.i.i, align 4
  %memberidx3.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %217, i64 0, i32 3
  store i64 %221, ptr %memberidx3.i.i.i.i.i, align 4
  store ptr %217, ptr %213, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %213, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i11.i.i = getelementptr inbounds %ExpressionNode, ptr %213, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i11.i.i, align 4
  %memberidx2.i12.i.i103 = getelementptr inbounds %BinaryExpressionNode, ptr %213, i64 0, i32 3
  store ptr %cmp.1.i.i, ptr %memberidx2.i12.i.i103, align 8
  %memberidx3.i13.i.i104 = getelementptr inbounds %BinaryExpressionNode, ptr %213, i64 0, i32 4
  store i64 31, ptr %memberidx3.i13.i.i104, align 4
  %memberidx4.i.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %213, i64 0, i32 5
  store ptr %214, ptr %memberidx4.i.i.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre135 = load i64, ptr %.pre, align 4
  br label %Parser_parse_range_expression.exit.i

Parser_parse_range_expression.exit.i:             ; preds = %Parser_advance.exit.i.i105, %Parser_parse_bit_expression.exit.i
  %222 = phi i64 [ %.pre135, %Parser_advance.exit.i.i105 ], [ %201, %Parser_parse_bit_expression.exit.i ]
  %common.ret.op.i.i106 = phi ptr [ %213, %Parser_advance.exit.i.i105 ], [ %cmp.1.i.i, %Parser_parse_bit_expression.exit.i ]
  %.not.i = icmp eq i64 %222, 74
  br i1 %.not.i, label %ifend.i, label %Parser_parse_typecast_expression.exit

ifend.i:                                          ; preds = %Parser_parse_range_expression.exit.i
  %memberidx.i.i109 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %223 = load i64, ptr %memberidx.i.i109, align 4
  %224 = load ptr, ptr %0, align 8
  %memberidx2.i.i110 = getelementptr inbounds %Array_Token_, ptr %224, i64 0, i32 2
  %225 = load i64, ptr %memberidx2.i.i110, align 4
  %226 = icmp slt i64 %223, %225
  br i1 %226, label %if.entry.i.i113, label %Parser_advance.exit.i121

if.entry.i.i113:                                  ; preds = %ifend.i
  %227 = add nsw i64 %223, 1
  store i64 %227, ptr %memberidx.i.i109, align 4
  %memberidx.i.i.i112 = getelementptr inbounds %Array_Token_, ptr %224, i64 0, i32 1
  %228 = load ptr, ptr %memberidx.i.i.i112, align 8
  %229 = getelementptr inbounds ptr, ptr %228, i64 %227
  %230 = load ptr, ptr %229, align 8
  store ptr %230, ptr %memberidx, align 8
  br label %Parser_advance.exit.i121

Parser_advance.exit.i121:                         ; preds = %if.entry.i.i113, %ifend.i
  %231 = tail call ptr @malloc(i32 40)
  %232 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %233 = load ptr, ptr %common.ret.op.i.i106, align 8
  %234 = load ptr, ptr %232, align 8
  %235 = tail call ptr @malloc(i32 32)
  %236 = load i64, ptr %233, align 4
  %memberidx1.i.i.i114 = getelementptr inbounds %FloRange, ptr %234, i64 0, i32 1
  %237 = load i64, ptr %memberidx1.i.i.i114, align 4
  %memberidx2.i.i.i115 = getelementptr inbounds %FloRange, ptr %233, i64 0, i32 2
  %238 = load i64, ptr %memberidx2.i.i.i115, align 4
  %memberidx3.i.i.i116 = getelementptr inbounds %FloRange, ptr %234, i64 0, i32 3
  %239 = load i64, ptr %memberidx3.i.i.i116, align 4
  store i64 %236, ptr %235, align 4
  %memberidx1.i.i.i.i117 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 1
  store i64 %237, ptr %memberidx1.i.i.i.i117, align 4
  %memberidx2.i.i.i.i118 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 2
  store i64 %238, ptr %memberidx2.i.i.i.i118, align 4
  %memberidx3.i.i.i.i119 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 3
  store i64 %239, ptr %memberidx3.i.i.i.i119, align 4
  store ptr %235, ptr %231, align 8
  %memberidx.i.i.i.i120 = getelementptr inbounds %StatementNode, ptr %231, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i120, align 4
  %memberidx.i.i6.i = getelementptr inbounds %ExpressionNode, ptr %231, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %TypeCastExpressionNode, ptr %231, i64 0, i32 3
  store ptr %common.ret.op.i.i106, ptr %memberidx2.i7.i, align 8
  %memberidx3.i8.i = getelementptr inbounds %TypeCastExpressionNode, ptr %231, i64 0, i32 4
  store ptr %232, ptr %memberidx3.i8.i, align 8
  %.pre136 = load ptr, ptr %memberidx, align 8
  %.pre137 = load i64, ptr %.pre136, align 4
  br label %Parser_parse_typecast_expression.exit

Parser_parse_typecast_expression.exit:            ; preds = %Parser_parse_range_expression.exit.i, %Parser_advance.exit.i121
  %240 = phi i64 [ %.pre137, %Parser_advance.exit.i121 ], [ %222, %Parser_parse_range_expression.exit.i ]
  %common.ret.op.i108 = phi ptr [ %231, %Parser_advance.exit.i121 ], [ %common.ret.op.i.i106, %Parser_parse_range_expression.exit.i ]
  %241 = icmp eq i64 %240, 36
  %242 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i67 = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 2
  %243 = load i64, ptr %memberidx3.i.i67, align 4
  %244 = icmp eq i64 %243, 0
  %245 = and i1 %241, %244
  br i1 %245, label %ifend.i70, label %Parser_parse_ternary_expression.exit

ifend.i70:                                        ; preds = %Parser_parse_typecast_expression.exit
  %memberidx.i10.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %246 = load i64, ptr %memberidx.i10.i, align 4
  %247 = load ptr, ptr %0, align 8
  %memberidx2.i11.i = getelementptr inbounds %Array_Token_, ptr %247, i64 0, i32 2
  %248 = load i64, ptr %memberidx2.i11.i, align 4
  %249 = icmp slt i64 %246, %248
  br i1 %249, label %if.entry.i.i72, label %Parser_advance.exit.i78

if.entry.i.i72:                                   ; preds = %ifend.i70
  %250 = add nsw i64 %246, 1
  store i64 %250, ptr %memberidx.i10.i, align 4
  %memberidx.i.i.i71 = getelementptr inbounds %Array_Token_, ptr %247, i64 0, i32 1
  %251 = load ptr, ptr %memberidx.i.i.i71, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %250
  %253 = load ptr, ptr %252, align 8
  store ptr %253, ptr %memberidx, align 8
  br label %Parser_advance.exit.i78

Parser_advance.exit.i78:                          ; preds = %if.entry.i.i72, %ifend.i70
  %254 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %255 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %256 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %257 = tail call ptr @malloc(i32 48)
  %258 = load ptr, ptr %common.ret.op.i108, align 8
  %259 = load ptr, ptr %256, align 8
  %260 = tail call ptr @malloc(i32 32)
  %261 = load i64, ptr %258, align 4
  %memberidx1.i.i.i73 = getelementptr inbounds %FloRange, ptr %259, i64 0, i32 1
  %262 = load i64, ptr %memberidx1.i.i.i73, align 4
  %memberidx2.i.i.i74 = getelementptr inbounds %FloRange, ptr %258, i64 0, i32 2
  %263 = load i64, ptr %memberidx2.i.i.i74, align 4
  %memberidx3.i.i.i75 = getelementptr inbounds %FloRange, ptr %259, i64 0, i32 3
  %264 = load i64, ptr %memberidx3.i.i.i75, align 4
  store i64 %261, ptr %260, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 1
  store i64 %262, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 2
  store i64 %263, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %260, i64 0, i32 3
  store i64 %264, ptr %memberidx3.i.i.i.i, align 4
  store ptr %260, ptr %257, align 8
  %memberidx.i.i.i.i76 = getelementptr inbounds %StatementNode, ptr %257, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i76, align 4
  %memberidx.i.i13.i = getelementptr inbounds %ExpressionNode, ptr %257, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i13.i, align 4
  %memberidx2.i14.i = getelementptr inbounds %TernaryExpressionNode, ptr %257, i64 0, i32 3
  store ptr %common.ret.op.i108, ptr %memberidx2.i14.i, align 8
  %memberidx3.i15.i = getelementptr inbounds %TernaryExpressionNode, ptr %257, i64 0, i32 4
  store ptr %254, ptr %memberidx3.i15.i, align 8
  %memberidx4.i.i77 = getelementptr inbounds %TernaryExpressionNode, ptr %257, i64 0, i32 5
  store ptr %256, ptr %memberidx4.i.i77, align 8
  %265 = load ptr, ptr %254, align 8
  %266 = load ptr, ptr %256, align 8
  %267 = tail call ptr @malloc(i32 32)
  %268 = load i64, ptr %265, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %266, i64 0, i32 1
  %269 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i16.i.i = getelementptr inbounds %FloRange, ptr %265, i64 0, i32 2
  %270 = load i64, ptr %memberidx2.i16.i.i, align 4
  %memberidx3.i17.i.i = getelementptr inbounds %FloRange, ptr %266, i64 0, i32 3
  %271 = load i64, ptr %memberidx3.i17.i.i, align 4
  store i64 %268, ptr %267, align 4
  %memberidx1.i.i18.i.i = getelementptr inbounds %FloRange, ptr %267, i64 0, i32 1
  store i64 %269, ptr %memberidx1.i.i18.i.i, align 4
  %memberidx2.i.i19.i.i = getelementptr inbounds %FloRange, ptr %267, i64 0, i32 2
  store i64 %270, ptr %memberidx2.i.i19.i.i, align 4
  %memberidx3.i.i20.i.i = getelementptr inbounds %FloRange, ptr %267, i64 0, i32 3
  store i64 %271, ptr %memberidx3.i.i20.i.i, align 4
  store ptr %267, ptr %257, align 8
  %.pre138 = load ptr, ptr %memberidx, align 8
  %.pre139 = load i64, ptr %.pre138, align 4
  %.pre140 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i51.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre140, i64 0, i32 2
  %.pre141 = load i64, ptr %memberidx3.i51.phi.trans.insert, align 4
  br label %Parser_parse_ternary_expression.exit

Parser_parse_ternary_expression.exit:             ; preds = %Parser_parse_typecast_expression.exit, %Parser_advance.exit.i78
  %272 = phi i64 [ %.pre141, %Parser_advance.exit.i78 ], [ %243, %Parser_parse_typecast_expression.exit ]
  %273 = phi i64 [ %.pre139, %Parser_advance.exit.i78 ], [ %240, %Parser_parse_typecast_expression.exit ]
  %common.ret.op.i68 = phi ptr [ %257, %Parser_advance.exit.i78 ], [ %common.ret.op.i108, %Parser_parse_typecast_expression.exit ]
  %274 = icmp eq i64 %273, 69
  %275 = icmp eq i64 %272, 0
  %276 = and i1 %274, %275
  br i1 %276, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %Parser_parse_ternary_expression.exit
  %memberidx.i42 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %277 = load i64, ptr %memberidx.i42, align 4
  %278 = load ptr, ptr %0, align 8
  %memberidx2.i43 = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 2
  %279 = load i64, ptr %memberidx2.i43, align 4
  %280 = icmp slt i64 %277, %279
  br i1 %280, label %if.entry.i46, label %Parser_advance.exit48

if.entry.i46:                                     ; preds = %if.entry4
  %281 = add nsw i64 %277, 1
  store i64 %281, ptr %memberidx.i42, align 4
  %memberidx.i.i45 = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 1
  %282 = load ptr, ptr %memberidx.i.i45, align 8
  %283 = getelementptr inbounds ptr, ptr %282, i64 %281
  %284 = load ptr, ptr %283, align 8
  store ptr %284, ptr %memberidx, align 8
  br label %Parser_advance.exit48

Parser_advance.exit48:                            ; preds = %if.entry4, %if.entry.i46
  %285 = tail call ptr @malloc(i32 48)
  %286 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %287 = load ptr, ptr %common.ret.op.i68, align 8
  %288 = load ptr, ptr %286, align 8
  %289 = tail call ptr @malloc(i32 32)
  %290 = load i64, ptr %287, align 4
  %memberidx1.i.i31 = getelementptr inbounds %FloRange, ptr %288, i64 0, i32 1
  %291 = load i64, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %FloRange, ptr %287, i64 0, i32 2
  %292 = load i64, ptr %memberidx2.i.i32, align 4
  %memberidx3.i.i33 = getelementptr inbounds %FloRange, ptr %288, i64 0, i32 3
  %293 = load i64, ptr %memberidx3.i.i33, align 4
  store i64 %290, ptr %289, align 4
  %memberidx1.i.i.i34 = getelementptr inbounds %FloRange, ptr %289, i64 0, i32 1
  store i64 %291, ptr %memberidx1.i.i.i34, align 4
  %memberidx2.i.i.i35 = getelementptr inbounds %FloRange, ptr %289, i64 0, i32 2
  store i64 %292, ptr %memberidx2.i.i.i35, align 4
  %memberidx3.i.i.i36 = getelementptr inbounds %FloRange, ptr %289, i64 0, i32 3
  store i64 %293, ptr %memberidx3.i.i.i36, align 4
  store ptr %289, ptr %285, align 8
  %memberidx.i.i.i37 = getelementptr inbounds %StatementNode, ptr %285, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i37, align 4
  %memberidx.i.i38 = getelementptr inbounds %ExpressionNode, ptr %285, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %BinaryExpressionNode, ptr %285, i64 0, i32 3
  store ptr %common.ret.op.i68, ptr %memberidx2.i39, align 8
  %memberidx3.i40 = getelementptr inbounds %BinaryExpressionNode, ptr %285, i64 0, i32 4
  store i64 18, ptr %memberidx3.i40, align 4
  %memberidx4.i41 = getelementptr inbounds %BinaryExpressionNode, ptr %285, i64 0, i32 5
  store ptr %286, ptr %memberidx4.i41, align 8
  br label %common.ret123

ifend6:                                           ; preds = %Parser_parse_ternary_expression.exit
  switch i64 %273, label %ifend51.i [
    i64 38, label %Parser_is_assign_op.exit
    i64 12, label %Parser_is_assign_op.exit.fold.split
    i64 13, label %Parser_is_assign_op.exit.fold.split89
    i64 14, label %Parser_is_assign_op.exit.fold.split90
    i64 15, label %Parser_is_assign_op.exit.fold.split91
    i64 16, label %Parser_is_assign_op.exit.fold.split92
    i64 17, label %Parser_is_assign_op.exit.fold.split93
    i64 18, label %Parser_is_assign_op.exit.fold.split94
    i64 19, label %Parser_is_assign_op.exit.fold.split95
    i64 20, label %Parser_is_assign_op.exit.fold.split96
    i64 22, label %Parser_is_assign_op.exit.fold.split97
  ]

ifend51.i:                                        ; preds = %ifend6
  %294 = icmp eq i64 %273, 21
  %spec.select.i = select i1 %294, i64 30, i64 0
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split:              ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split89:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split90:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split91:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split92:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split93:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split94:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split95:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split96:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split97:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit:                         ; preds = %ifend6, %Parser_is_assign_op.exit.fold.split97, %Parser_is_assign_op.exit.fold.split96, %Parser_is_assign_op.exit.fold.split95, %Parser_is_assign_op.exit.fold.split94, %Parser_is_assign_op.exit.fold.split93, %Parser_is_assign_op.exit.fold.split92, %Parser_is_assign_op.exit.fold.split91, %Parser_is_assign_op.exit.fold.split90, %Parser_is_assign_op.exit.fold.split89, %Parser_is_assign_op.exit.fold.split, %ifend51.i
  %common.ret.op.i = phi i64 [ 19, %ifend6 ], [ %spec.select.i, %ifend51.i ], [ 22, %Parser_is_assign_op.exit.fold.split ], [ 21, %Parser_is_assign_op.exit.fold.split89 ], [ 20, %Parser_is_assign_op.exit.fold.split90 ], [ 23, %Parser_is_assign_op.exit.fold.split91 ], [ 24, %Parser_is_assign_op.exit.fold.split92 ], [ 25, %Parser_is_assign_op.exit.fold.split93 ], [ 26, %Parser_is_assign_op.exit.fold.split94 ], [ 27, %Parser_is_assign_op.exit.fold.split95 ], [ 28, %Parser_is_assign_op.exit.fold.split96 ], [ 29, %Parser_is_assign_op.exit.fold.split97 ]
  %295 = icmp ne i64 %common.ret.op.i, 0
  %296 = icmp ne i64 %273, 46
  %297 = and i1 %296, %275
  %298 = and i1 %297, %295
  br i1 %298, label %ifend9, label %common.ret123

ifend9:                                           ; preds = %Parser_is_assign_op.exit
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %299 = load i64, ptr %memberidx.i, align 4
  %300 = load ptr, ptr %0, align 8
  %memberidx2.i24 = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 2
  %301 = load i64, ptr %memberidx2.i24, align 4
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend9
  %303 = add nsw i64 %299, 1
  store i64 %303, ptr %memberidx.i, align 4
  %memberidx.i.i26 = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 1
  %304 = load ptr, ptr %memberidx.i.i26, align 8
  %305 = getelementptr inbounds ptr, ptr %304, i64 %303
  %306 = load ptr, ptr %305, align 8
  store ptr %306, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend9, %if.entry.i
  %307 = tail call ptr @malloc(i32 48)
  %308 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %309 = load ptr, ptr %common.ret.op.i68, align 8
  %310 = load ptr, ptr %308, align 8
  %311 = tail call ptr @malloc(i32 32)
  %312 = load i64, ptr %309, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %310, i64 0, i32 1
  %313 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %309, i64 0, i32 2
  %314 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %310, i64 0, i32 3
  %315 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %312, ptr %311, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %311, i64 0, i32 1
  store i64 %313, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %311, i64 0, i32 2
  store i64 %314, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %311, i64 0, i32 3
  store i64 %315, ptr %memberidx3.i.i.i, align 4
  store ptr %311, ptr %307, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %307, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %307, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i = getelementptr inbounds %BinaryExpressionNode, ptr %307, i64 0, i32 3
  store ptr %common.ret.op.i68, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %307, i64 0, i32 4
  store i64 %common.ret.op.i, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %307, i64 0, i32 5
  store ptr %308, ptr %memberidx4.i, align 8
  br label %common.ret123
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_MatchExpressionCaseNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_MatchExpressionCaseNode__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_MatchExpressionCaseNode__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc ptr @TypeChecker_check_module(ptr %0, ptr nocapture readonly %1, ptr %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 false, ptr %memberidx, align 1
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %memberidx10, align 8
  %4 = tail call ptr @malloc(i32 80)
  store ptr %2, ptr %4, align 8
  %memberidx1.i206 = getelementptr inbounds %Module, ptr %4, i64 0, i32 4
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Function_, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx1.i206, align 8
  %memberidx4.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Var_, ptr %7, align 8
  %memberidx.i33.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx.i33.i, align 4
  %memberidx1.i34.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 3
  store i64 8, ptr %memberidx1.i34.i, align 4
  %memberidx2.i35.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 1
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %memberidx2.i35.i, align 8
  store i64 0, ptr %memberidx.i33.i, align 4
  store ptr %7, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Class_, ptr %9, align 8
  %memberidx.i36.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 2
  store i64 0, ptr %memberidx.i36.i, align 4
  %memberidx1.i37.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 3
  store i64 8, ptr %memberidx1.i37.i, align 4
  %memberidx2.i38.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %memberidx2.i38.i, align 8
  store i64 0, ptr %memberidx.i36.i, align 4
  store ptr %9, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 6
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Enum_, ptr %11, align 8
  %memberidx.i39.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 2
  store i64 0, ptr %memberidx.i39.i, align 4
  %memberidx1.i40.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 3
  store i64 8, ptr %memberidx1.i40.i, align 4
  %memberidx2.i41.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 1
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %memberidx2.i41.i, align 8
  store i64 0, ptr %memberidx.i39.i, align 4
  store ptr %11, ptr %memberidx10.i, align 8
  %memberidx13.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 7
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Scope_, ptr %13, align 8
  %memberidx.i42.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 2
  store i64 0, ptr %memberidx.i42.i, align 4
  %memberidx1.i43.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 3
  store i64 8, ptr %memberidx1.i43.i, align 4
  %memberidx2.i44.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %memberidx2.i44.i, align 8
  store i64 0, ptr %memberidx.i42.i, align 4
  store ptr %13, ptr %memberidx13.i, align 8
  %memberidx16.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ConstDeclaration_, ptr %15, align 8
  %memberidx.i45.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx.i45.i, align 4
  %memberidx1.i46.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 3
  store i64 8, ptr %memberidx1.i46.i, align 4
  %memberidx2.i47.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 1
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %memberidx2.i47.i, align 8
  store i64 0, ptr %memberidx.i45.i, align 4
  store ptr %15, ptr %memberidx16.i, align 8
  %memberidx19.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 9
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_VarDeclaration_, ptr %17, align 8
  %memberidx.i48.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 2
  store i64 0, ptr %memberidx.i48.i, align 4
  %memberidx1.i49.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 3
  store i64 8, ptr %memberidx1.i49.i, align 4
  %memberidx2.i50.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 1
  %18 = tail call ptr @malloc(i32 64)
  store ptr %18, ptr %memberidx2.i50.i, align 8
  store i64 0, ptr %memberidx.i48.i, align 4
  store ptr %17, ptr %memberidx19.i, align 8
  %memberidx22.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Const_, ptr %19, align 8
  %memberidx.i51.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 2
  store i64 0, ptr %memberidx.i51.i, align 4
  %memberidx1.i52.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 3
  store i64 8, ptr %memberidx1.i52.i, align 4
  %memberidx2.i53.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 1
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %memberidx2.i53.i, align 8
  store i64 0, ptr %memberidx.i51.i, align 4
  store ptr %19, ptr %memberidx22.i, align 8
  %21 = load ptr, ptr %0, align 8
  %memberidx12 = getelementptr inbounds %Program, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx13, align 4
  %memberidx1.i208 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 3
  %24 = load i64, ptr %memberidx1.i208, align 4
  %.not.i = icmp slt i64 %23, %24
  br i1 %.not.i, label %for.entry.Array_Module____sl__.exit_crit_edge, label %if.entry.i

for.entry.Array_Module____sl__.exit_crit_edge:    ; preds = %for.entry
  %memberidx4.i211.phi.trans.insert = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %.pre438 = load ptr, ptr %memberidx4.i211.phi.trans.insert, align 8
  br label %Array_Module____sl__.exit

if.entry.i:                                       ; preds = %for.entry
  %25 = shl nuw i64 %24, 1
  store i64 %25, ptr %memberidx1.i208, align 4
  %memberidx2.i.i210 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i210, align 8
  %27 = shl i64 %24, 4
  %28 = tail call ptr @realloc(ptr %26, i64 %27)
  store ptr %28, ptr %memberidx2.i.i210, align 8
  %.pre = load i64, ptr %memberidx13, align 4
  br label %Array_Module____sl__.exit

Array_Module____sl__.exit:                        ; preds = %for.entry.Array_Module____sl__.exit_crit_edge, %if.entry.i
  %29 = phi ptr [ %.pre438, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %28, %if.entry.i ]
  %30 = phi i64 [ %23, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %31 = add nsw i64 %30, 1
  store i64 %31, ptr %memberidx13, align 4
  %32 = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %4, ptr %32, align 8
  %33 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %23)
  %memberidx16 = getelementptr inbounds %Module, ptr %4, i64 0, i32 5
  %34 = load ptr, ptr %33, align 8
  store ptr %34, ptr %memberidx16, align 8
  %memberidx18 = getelementptr inbounds %Scope, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx18, align 8
  %36 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %36, align 8
  %37 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i212 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i212, align 8
  %memberidx1.i.i213 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i213, align 4
  %memberidx2.i.i214 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i214, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %35, ptr nonnull %37, ptr null)
  %38 = load ptr, ptr %memberidx18, align 8
  %39 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %39, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i215 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i215, align 8
  %memberidx1.i.i216 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i216, align 4
  %memberidx2.i.i217 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i217, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %38, ptr nonnull %40, ptr null)
  %41 = load ptr, ptr %memberidx18, align 8
  %42 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %42, align 8
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i218 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i218, align 8
  %memberidx1.i.i219 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i219, align 4
  %memberidx2.i.i220 = getelementptr inbounds %string, ptr %43, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i220, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %41, ptr nonnull %43, ptr null)
  %44 = load ptr, ptr %33, align 8
  store ptr %44, ptr %memberidx10, align 8
  %memberidx24 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %memberidx25 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx24, i8 0, i64 24, i1 false)
  %45 = load ptr, ptr %memberidx26, align 8
  %46 = tail call ptr @malloc(i32 25)
  %memberidx.i221 = getelementptr inbounds %Array_ImportNode_, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i221, align 8
  %memberidx1.i222 = getelementptr inbounds %Array_ImportNode_, ptr %45, i64 0, i32 2
  %48 = load i64, ptr %memberidx1.i222, align 4
  store i1 false, ptr %46, align 1
  %memberidx1.i.i223 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %46, i64 0, i32 1
  %memberidx2.i.i224 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %46, i64 0, i32 3
  store ptr %47, ptr %memberidx2.i.i224, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %46, i64 0, i32 2
  store i64 %48, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i223, align 4
  %49 = icmp slt i64 %48, 1
  br i1 %49, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %Array_Module____sl__.exit
  %memberidx.i230 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %50 = phi i64 [ 1, %for.body.lr.ph ], [ %60, %ifend ]
  %module_import.0424.in = phi ptr [ %47, %for.body.lr.ph ], [ %61, %ifend ]
  %module_import.0424 = load ptr, ptr %module_import.0424.in, align 8
  tail call fastcc void @TypeChecker_check_module_import(ptr nonnull %0, ptr %module_import.0424)
  %51 = load ptr, ptr %memberidx.i230, align 8
  %memberidx1.i231 = getelementptr inbounds %Compiler, ptr %51, i64 0, i32 6
  %52 = load ptr, ptr %memberidx1.i231, align 8
  %memberidx2.i232 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx2.i232, align 4
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %common.ret.loopexit, label %ifend

for.end:                                          ; preds = %ifend, %Array_Module____sl__.exit
  tail call void @free(ptr nonnull %46)
  %memberidx29 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 2
  %55 = load ptr, ptr %memberidx29, align 8
  %56 = tail call ptr @malloc(i32 25)
  %memberidx.i233 = getelementptr inbounds %Array_EnumNode_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i233, align 8
  %memberidx1.i234 = getelementptr inbounds %Array_EnumNode_, ptr %55, i64 0, i32 2
  %58 = load i64, ptr %memberidx1.i234, align 4
  store i1 false, ptr %56, align 1
  %memberidx1.i.i235 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %56, i64 0, i32 1
  %memberidx2.i.i236 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %56, i64 0, i32 3
  store ptr %57, ptr %memberidx2.i.i236, align 8
  %memberidx3.i.i237 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %56, i64 0, i32 2
  store i64 %58, ptr %memberidx3.i.i237, align 4
  store i64 1, ptr %memberidx1.i.i235, align 4
  %59 = icmp slt i64 %58, 1
  br i1 %59, label %for.end33, label %for.body31

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %46, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend117, %for.end82, %for.end40, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %for.end40 ], [ null, %for.end82 ], [ %spec.select, %ifend117 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %60 = add nuw nsw i64 %50, 1
  store i64 %60, ptr %memberidx1.i.i223, align 4
  %61 = getelementptr inbounds ptr, ptr %47, i64 %50
  %.not451 = icmp slt i64 %50, %48
  br i1 %.not451, label %for.body, label %for.end

for.body31:                                       ; preds = %for.end, %for.body31
  %62 = phi i64 [ %63, %for.body31 ], [ 1, %for.end ]
  %enum_.0419.in = phi ptr [ %64, %for.body31 ], [ %57, %for.end ]
  %enum_.0419 = load ptr, ptr %enum_.0419.in, align 8
  tail call fastcc void @TypeChecker_declare_enum_within_module(ptr nonnull %0, ptr %enum_.0419)
  %63 = add nuw nsw i64 %62, 1
  store i64 %63, ptr %memberidx1.i.i235, align 4
  %64 = getelementptr inbounds ptr, ptr %57, i64 %62
  %.not452 = icmp slt i64 %62, %58
  br i1 %.not452, label %for.body31, label %for.end33

for.end33:                                        ; preds = %for.body31, %for.end
  tail call void @free(ptr nonnull %56)
  %memberidx36 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 1
  %65 = load ptr, ptr %memberidx36, align 8
  %66 = tail call ptr @malloc(i32 25)
  %memberidx.i247 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i247, align 8
  %memberidx1.i248 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %65, i64 0, i32 2
  %68 = load i64, ptr %memberidx1.i248, align 4
  store i1 false, ptr %66, align 1
  %memberidx1.i.i249 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %66, i64 0, i32 1
  %memberidx2.i.i250 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %66, i64 0, i32 3
  store ptr %67, ptr %memberidx2.i.i250, align 8
  %memberidx3.i.i251 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %66, i64 0, i32 2
  store i64 %68, ptr %memberidx3.i.i251, align 4
  store i64 1, ptr %memberidx1.i.i249, align 4
  %69 = icmp slt i64 %68, 1
  br i1 %69, label %for.end40, label %for.body38

for.body38:                                       ; preds = %for.end33, %for.body38
  %70 = phi i64 [ %71, %for.body38 ], [ 1, %for.end33 ]
  %class_.0416.in = phi ptr [ %72, %for.body38 ], [ %67, %for.end33 ]
  %class_.0416 = load ptr, ptr %class_.0416.in, align 8
  tail call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr %class_.0416)
  %71 = add nuw nsw i64 %70, 1
  store i64 %71, ptr %memberidx1.i.i249, align 4
  %72 = getelementptr inbounds ptr, ptr %67, i64 %70
  %.not453 = icmp slt i64 %70, %68
  br i1 %.not453, label %for.body38, label %for.end40

for.end40:                                        ; preds = %for.body38, %for.end33
  tail call void @free(ptr nonnull %66)
  %memberidx.i258 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i259 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 6
  %74 = load ptr, ptr %memberidx1.i259, align 8
  %memberidx2.i260 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i260, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %for.entry45

for.entry45:                                      ; preds = %for.end40
  %memberidx46 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 6
  %77 = load ptr, ptr %memberidx46, align 8
  %78 = tail call ptr @malloc(i32 25)
  %memberidx.i261 = getelementptr inbounds %Array_TypeAliasNode_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i261, align 8
  %memberidx1.i262 = getelementptr inbounds %Array_TypeAliasNode_, ptr %77, i64 0, i32 2
  %80 = load i64, ptr %memberidx1.i262, align 4
  store i1 false, ptr %78, align 1
  %memberidx1.i.i263 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %78, i64 0, i32 1
  %memberidx2.i.i264 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %78, i64 0, i32 3
  store ptr %79, ptr %memberidx2.i.i264, align 8
  %memberidx3.i.i265 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %78, i64 0, i32 2
  store i64 %80, ptr %memberidx3.i.i265, align 4
  store i64 1, ptr %memberidx1.i.i263, align 4
  %81 = icmp slt i64 %80, 1
  br i1 %81, label %for.end50, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %for.entry45
  %memberidx62 = getelementptr inbounds %Scope, ptr %33, i64 0, i32 6
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %ifend58
  %82 = phi i64 [ 1, %for.body48.lr.ph ], [ %117, %ifend58 ]
  %type_alias_node.0413.in = phi ptr [ %79, %for.body48.lr.ph ], [ %118, %ifend58 ]
  %type_alias_node.0413 = load ptr, ptr %type_alias_node.0413.in, align 8
  %memberidx52 = getelementptr inbounds %TypeAliasNode, ptr %type_alias_node.0413, i64 0, i32 1
  %83 = load ptr, ptr %memberidx52, align 8
  %84 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %83)
  %85 = load ptr, ptr %type_alias_node.0413, align 8
  %memberidx54 = getelementptr inbounds %IdentifierToken, ptr %85, i64 0, i32 2
  %86 = load ptr, ptr %memberidx54, align 8
  %87 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %86)
  %88 = load i64, ptr %87, align 4
  %.not = icmp eq i64 %88, 21
  br i1 %.not, label %ifend58, label %if.entry56

for.end50:                                        ; preds = %ifend58, %for.entry45
  tail call void @free(ptr nonnull %78)
  %memberidx64 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 4
  %89 = load ptr, ptr %memberidx64, align 8
  %90 = tail call ptr @malloc(i32 25)
  %memberidx.i269 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %89, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i269, align 8
  %memberidx1.i270 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %89, i64 0, i32 2
  %92 = load i64, ptr %memberidx1.i270, align 4
  store i1 false, ptr %90, align 1
  %memberidx1.i.i271 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %90, i64 0, i32 1
  %memberidx2.i.i272 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %90, i64 0, i32 3
  store ptr %91, ptr %memberidx2.i.i272, align 8
  %memberidx3.i.i273 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %90, i64 0, i32 2
  store i64 %92, ptr %memberidx3.i.i273, align 4
  store i64 1, ptr %memberidx1.i.i271, align 4
  %93 = icmp slt i64 %92, 1
  br i1 %93, label %for.end68, label %for.body66

if.entry56:                                       ; preds = %for.body48
  store i1 false, ptr %78, align 1
  %94 = load ptr, ptr %86, align 8
  %memberidx59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx59, align 8
  %96 = tail call ptr %95(ptr nonnull %86)
  %97 = alloca ptr, align 8
  %98 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %97, ptr nonnull @101, ptr %96)
  %99 = load ptr, ptr %97, align 8
  %100 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i277 = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i277, align 8
  %memberidx1.i278 = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 %98, ptr %memberidx1.i278, align 4
  %memberidx2.i279 = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 %98, ptr %memberidx2.i279, align 4
  tail call void @free(ptr %96)
  %101 = load ptr, ptr %type_alias_node.0413, align 8
  %memberidx61 = getelementptr inbounds %Token, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx61, align 8
  %103 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i281 = getelementptr inbounds %Compiler, ptr %103, i64 0, i32 6
  %104 = load ptr, ptr %memberidx1.i281, align 8
  %105 = call ptr @malloc(i32 24)
  store i64 1, ptr %105, align 4
  %memberidx1.i.i282 = getelementptr inbounds %FloError, ptr %105, i64 0, i32 2
  store ptr %102, ptr %memberidx1.i.i282, align 8
  %memberidx2.i.i283 = getelementptr inbounds %FloError, ptr %105, i64 0, i32 1
  store ptr %100, ptr %memberidx2.i.i283, align 8
  %memberidx.i.i284 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 2
  %106 = load i64, ptr %memberidx.i.i284, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 3
  %107 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %106, %107
  br i1 %.not.i.i, label %if.entry56.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry56.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry56
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %.pre440 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry56
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %109 = load ptr, ptr %memberidx2.i.i.i, align 8
  %110 = shl i64 %107, 4
  %111 = call ptr @realloc(ptr %109, i64 %110)
  store ptr %111, ptr %memberidx2.i.i.i, align 8
  %.pre439 = load i64, ptr %memberidx.i.i284, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry56.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %112 = phi ptr [ %.pre440, %if.entry56.TypeChecker_error.exit_crit_edge ], [ %111, %if.entry.i.i ]
  %113 = phi i64 [ %106, %if.entry56.TypeChecker_error.exit_crit_edge ], [ %.pre439, %if.entry.i.i ]
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr %memberidx.i.i284, align 4
  %115 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %105, ptr %115, align 8
  br label %common.ret

ifend58:                                          ; preds = %for.body48
  %116 = load ptr, ptr %memberidx62, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %116, ptr %86, ptr %84)
  %117 = add nuw nsw i64 %82, 1
  store i64 %117, ptr %memberidx1.i.i263, align 4
  %118 = getelementptr inbounds ptr, ptr %79, i64 %82
  %.not454 = icmp slt i64 %82, %80
  br i1 %.not454, label %for.body48, label %for.end50

for.body66:                                       ; preds = %for.end50, %TypeChecker_declare_global_const.exit
  %119 = phi i64 [ %143, %TypeChecker_declare_global_const.exit ], [ 1, %for.end50 ]
  %global_const.0408.in = phi ptr [ %144, %TypeChecker_declare_global_const.exit ], [ %91, %for.end50 ]
  %global_const.0408 = load ptr, ptr %global_const.0408.in, align 8
  %120 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr nonnull %0, ptr %global_const.0408)
  %121 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i.i290 = getelementptr inbounds %Compiler, ptr %121, i64 0, i32 6
  %122 = load ptr, ptr %memberidx1.i.i290, align 8
  %memberidx2.i.i291 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %123 = load i64, ptr %memberidx2.i.i291, align 4
  %124 = icmp sgt i64 %123, 0
  br i1 %124, label %TypeChecker_declare_global_const.exit, label %ifend.i

ifend.i:                                          ; preds = %for.body66
  %memberidx.i292 = getelementptr inbounds %ConstDeclaration, ptr %120, i64 0, i32 3
  store i1 true, ptr %memberidx.i292, align 1
  %125 = load ptr, ptr %memberidx10, align 8
  %126 = load i64, ptr %125, align 4
  %127 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %127, i64 0, i32 1
  %128 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %126
  %131 = load ptr, ptr %130, align 8
  %memberidx1.i293 = getelementptr inbounds %Module, ptr %131, i64 0, i32 8
  %132 = load ptr, ptr %memberidx1.i293, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 2
  %133 = load i64, ptr %memberidx.i5.i, align 4
  %memberidx1.i6.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 3
  %134 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i294 = icmp slt i64 %133, %134
  br i1 %.not.i.i294, label %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i297

ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend.i
  %memberidx4.i.i298.phi.trans.insert = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 1
  %.pre442 = load ptr, ptr %memberidx4.i.i298.phi.trans.insert, align 8
  br label %Array_ConstDeclaration____sl__.exit.i

if.entry.i.i297:                                  ; preds = %ifend.i
  %135 = shl nuw i64 %134, 1
  store i64 %135, ptr %memberidx1.i6.i, align 4
  %memberidx2.i.i.i296 = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 1
  %136 = load ptr, ptr %memberidx2.i.i.i296, align 8
  %137 = shl i64 %134, 4
  %138 = tail call ptr @realloc(ptr %136, i64 %137)
  store ptr %138, ptr %memberidx2.i.i.i296, align 8
  %.pre441 = load i64, ptr %memberidx.i5.i, align 4
  br label %Array_ConstDeclaration____sl__.exit.i

Array_ConstDeclaration____sl__.exit.i:            ; preds = %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i297
  %139 = phi ptr [ %138, %if.entry.i.i297 ], [ %.pre442, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %140 = phi i64 [ %.pre441, %if.entry.i.i297 ], [ %133, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %141 = add nsw i64 %140, 1
  store i64 %141, ptr %memberidx.i5.i, align 4
  %142 = getelementptr inbounds ptr, ptr %139, i64 %140
  store ptr %120, ptr %142, align 8
  br label %TypeChecker_declare_global_const.exit

TypeChecker_declare_global_const.exit:            ; preds = %for.body66, %Array_ConstDeclaration____sl__.exit.i
  %143 = add nuw nsw i64 %119, 1
  store i64 %143, ptr %memberidx1.i.i271, align 4
  %144 = getelementptr inbounds ptr, ptr %91, i64 %119
  %.not455 = icmp slt i64 %119, %92
  br i1 %.not455, label %for.body66, label %for.end68

for.end68:                                        ; preds = %TypeChecker_declare_global_const.exit, %for.end50
  tail call void @free(ptr nonnull %90)
  %memberidx71 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 5
  %145 = load ptr, ptr %memberidx71, align 8
  %146 = tail call ptr @malloc(i32 25)
  %memberidx.i302 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %145, i64 0, i32 1
  %147 = load ptr, ptr %memberidx.i302, align 8
  %memberidx1.i303 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %145, i64 0, i32 2
  %148 = load i64, ptr %memberidx1.i303, align 4
  store i1 false, ptr %146, align 1
  %memberidx1.i.i304 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %146, i64 0, i32 1
  %memberidx2.i.i305 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %146, i64 0, i32 3
  store ptr %147, ptr %memberidx2.i.i305, align 8
  %memberidx3.i.i306 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %146, i64 0, i32 2
  store i64 %148, ptr %memberidx3.i.i306, align 4
  store i64 1, ptr %memberidx1.i.i304, align 4
  %149 = icmp slt i64 %148, 1
  br i1 %149, label %for.end75, label %for.body73

for.body73:                                       ; preds = %for.end68, %TypeChecker_declare_global_var.exit
  %150 = phi i64 [ %205, %TypeChecker_declare_global_var.exit ], [ 1, %for.end68 ]
  %global_var.0405.in = phi ptr [ %206, %TypeChecker_declare_global_var.exit ], [ %147, %for.end68 ]
  %global_var.0405 = load ptr, ptr %global_var.0405.in, align 8
  %151 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr nonnull %0, ptr %global_var.0405)
  %152 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i.i311 = getelementptr inbounds %Compiler, ptr %152, i64 0, i32 6
  %153 = load ptr, ptr %memberidx1.i.i311, align 8
  %memberidx2.i.i312 = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 2
  %154 = load i64, ptr %memberidx2.i.i312, align 4
  %155 = icmp sgt i64 %154, 0
  br i1 %155, label %TypeChecker_declare_global_var.exit, label %ifend.i317

ifend.i317:                                       ; preds = %for.body73
  %156 = load ptr, ptr %0, align 8
  %memberidx1.i313 = getelementptr inbounds %VarDeclaration, ptr %151, i64 0, i32 2
  %157 = load ptr, ptr %memberidx1.i313, align 8
  %memberidx.i24.i = getelementptr inbounds %Program, ptr %156, i64 0, i32 1
  %158 = load ptr, ptr %memberidx.i24.i, align 8
  %memberidx1.i25.i = getelementptr inbounds %VarId, ptr %157, i64 0, i32 1
  %159 = load i64, ptr %memberidx1.i25.i, align 4
  %memberidx.i.i26.i = getelementptr inbounds %Array_Module_, ptr %158, i64 0, i32 1
  %160 = load ptr, ptr %memberidx.i.i26.i, align 8
  %161 = getelementptr inbounds ptr, ptr %160, i64 %159
  %162 = load ptr, ptr %161, align 8
  %memberidx2.i27.i = getelementptr inbounds %Module, ptr %162, i64 0, i32 1
  %163 = load ptr, ptr %memberidx2.i27.i, align 8
  %memberidx3.i.i314 = getelementptr inbounds %VarId, ptr %157, i64 0, i32 2
  %164 = load i64, ptr %memberidx3.i.i314, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Var_, ptr %163, i64 0, i32 1
  %165 = load ptr, ptr %memberidx.i5.i.i, align 8
  %166 = getelementptr inbounds ptr, ptr %165, i64 %164
  %167 = load ptr, ptr %166, align 8
  %memberidx2.i315 = getelementptr inbounds %Var, ptr %167, i64 0, i32 2
  %168 = load ptr, ptr %memberidx2.i315, align 8
  %.not.i316 = icmp eq ptr %168, null
  br i1 %.not.i316, label %ifend5.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %ifend.i317
  %memberidx6.i318 = getelementptr inbounds %Expression, ptr %168, i64 0, i32 1
  %169 = load i1, ptr %memberidx6.i318, align 1
  br i1 %169, label %ifend5.i, label %if.entry7.i

ifend5.i:                                         ; preds = %if.entry3.i, %ifend.i317
  %memberidx12.i319 = getelementptr inbounds %VarDeclaration, ptr %151, i64 0, i32 3
  store i1 true, ptr %memberidx12.i319, align 1
  %170 = load ptr, ptr %memberidx10, align 8
  %171 = load i64, ptr %170, align 4
  %172 = load ptr, ptr %0, align 8
  %memberidx1.i.i29.i = getelementptr inbounds %Program, ptr %172, i64 0, i32 1
  %173 = load ptr, ptr %memberidx1.i.i29.i, align 8
  %memberidx.i.i.i30.i = getelementptr inbounds %Array_Module_, ptr %173, i64 0, i32 1
  %174 = load ptr, ptr %memberidx.i.i.i30.i, align 8
  %175 = getelementptr inbounds ptr, ptr %174, i64 %171
  %176 = load ptr, ptr %175, align 8
  %memberidx13.i320 = getelementptr inbounds %Module, ptr %176, i64 0, i32 9
  %177 = load ptr, ptr %memberidx13.i320, align 8
  %memberidx.i34.i = getelementptr inbounds %Array_VarDeclaration_, ptr %177, i64 0, i32 2
  %178 = load i64, ptr %memberidx.i34.i, align 4
  %memberidx1.i35.i = getelementptr inbounds %Array_VarDeclaration_, ptr %177, i64 0, i32 3
  %179 = load i64, ptr %memberidx1.i35.i, align 4
  %.not.i.i321 = icmp slt i64 %178, %179
  br i1 %.not.i.i321, label %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i322

ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend5.i
  %memberidx4.i.i323.phi.trans.insert = getelementptr inbounds %Array_VarDeclaration_, ptr %177, i64 0, i32 1
  %.pre446 = load ptr, ptr %memberidx4.i.i323.phi.trans.insert, align 8
  br label %Array_VarDeclaration____sl__.exit.i

if.entry.i.i322:                                  ; preds = %ifend5.i
  %180 = shl nuw i64 %179, 1
  store i64 %180, ptr %memberidx1.i35.i, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %Array_VarDeclaration_, ptr %177, i64 0, i32 1
  %181 = load ptr, ptr %memberidx2.i.i37.i, align 8
  %182 = shl i64 %179, 4
  %183 = tail call ptr @realloc(ptr %181, i64 %182)
  store ptr %183, ptr %memberidx2.i.i37.i, align 8
  %.pre445 = load i64, ptr %memberidx.i34.i, align 4
  br label %Array_VarDeclaration____sl__.exit.i

Array_VarDeclaration____sl__.exit.i:              ; preds = %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i322
  %184 = phi ptr [ %183, %if.entry.i.i322 ], [ %.pre446, %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %185 = phi i64 [ %.pre445, %if.entry.i.i322 ], [ %178, %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %186 = add nsw i64 %185, 1
  store i64 %186, ptr %memberidx.i34.i, align 4
  %187 = getelementptr inbounds ptr, ptr %184, i64 %185
  store ptr %151, ptr %187, align 8
  br label %TypeChecker_declare_global_var.exit

if.entry7.i:                                      ; preds = %if.entry3.i
  %188 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %188, ptr noundef nonnull align 8 dereferenceable(54) @105, i64 54, i1 false)
  %189 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %189, align 8
  %memberidx.i.i31.i = getelementptr inbounds %string, ptr %189, i64 0, i32 1
  store ptr %188, ptr %memberidx.i.i31.i, align 8
  %memberidx1.i.i32.i = getelementptr inbounds %string, ptr %189, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i32.i, align 4
  %memberidx2.i.i33.i = getelementptr inbounds %string, ptr %189, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i33.i, align 4
  %memberidx10.i324 = getelementptr inbounds %VarDeclarationStatement, ptr %global_var.0405, i64 0, i32 4
  %190 = load ptr, ptr %memberidx10.i324, align 8
  %191 = load ptr, ptr %190, align 8
  %192 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i23.i = getelementptr inbounds %Compiler, ptr %192, i64 0, i32 6
  %193 = load ptr, ptr %memberidx1.i23.i, align 8
  %194 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %194, align 4
  %memberidx1.i.i.i325 = getelementptr inbounds %FloError, ptr %194, i64 0, i32 2
  store ptr %191, ptr %memberidx1.i.i.i325, align 8
  %memberidx2.i.i.i326 = getelementptr inbounds %FloError, ptr %194, i64 0, i32 1
  store ptr %189, ptr %memberidx2.i.i.i326, align 8
  %memberidx.i.i.i327 = getelementptr inbounds %Array_FloError_, ptr %193, i64 0, i32 2
  %195 = load i64, ptr %memberidx.i.i.i327, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %193, i64 0, i32 3
  %196 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %195, %196
  br i1 %.not.i.i.i, label %if.entry7.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry7.i.TypeChecker_error.exit.i_crit_edge:   ; preds = %if.entry7.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %193, i64 0, i32 1
  %.pre444 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry7.i
  %197 = shl nuw i64 %196, 1
  store i64 %197, ptr %memberidx1.i2.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %193, i64 0, i32 1
  %198 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %199 = shl i64 %196, 4
  %200 = tail call ptr @realloc(ptr %198, i64 %199)
  store ptr %200, ptr %memberidx2.i.i.i.i, align 8
  %.pre443 = load i64, ptr %memberidx.i.i.i327, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry7.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %201 = phi ptr [ %200, %if.entry.i.i.i ], [ %.pre444, %if.entry7.i.TypeChecker_error.exit.i_crit_edge ]
  %202 = phi i64 [ %.pre443, %if.entry.i.i.i ], [ %195, %if.entry7.i.TypeChecker_error.exit.i_crit_edge ]
  %203 = add nsw i64 %202, 1
  store i64 %203, ptr %memberidx.i.i.i327, align 4
  %204 = getelementptr inbounds ptr, ptr %201, i64 %202
  store ptr %194, ptr %204, align 8
  br label %TypeChecker_declare_global_var.exit

TypeChecker_declare_global_var.exit:              ; preds = %for.body73, %Array_VarDeclaration____sl__.exit.i, %TypeChecker_error.exit.i
  %205 = add nuw nsw i64 %150, 1
  store i64 %205, ptr %memberidx1.i.i304, align 4
  %206 = getelementptr inbounds ptr, ptr %147, i64 %150
  %.not456 = icmp slt i64 %150, %148
  br i1 %.not456, label %for.body73, label %for.end75

for.end75:                                        ; preds = %TypeChecker_declare_global_var.exit, %for.end68
  tail call void @free(ptr nonnull %146)
  %207 = load ptr, ptr %1, align 8
  %208 = tail call ptr @malloc(i32 25)
  %memberidx.i332 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %207, i64 0, i32 1
  %209 = load ptr, ptr %memberidx.i332, align 8
  %memberidx1.i333 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %207, i64 0, i32 2
  %210 = load i64, ptr %memberidx1.i333, align 4
  store i1 false, ptr %208, align 1
  %memberidx1.i.i334 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %208, i64 0, i32 1
  %memberidx2.i.i335 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %208, i64 0, i32 3
  store ptr %209, ptr %memberidx2.i.i335, align 8
  %memberidx3.i.i336 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %208, i64 0, i32 2
  store i64 %210, ptr %memberidx3.i.i336, align 4
  store i64 1, ptr %memberidx1.i.i334, align 4
  %211 = icmp slt i64 %210, 1
  br i1 %211, label %for.end82, label %for.body80

for.body80:                                       ; preds = %for.end75, %for.body80
  %212 = phi i64 [ %213, %for.body80 ], [ 1, %for.end75 ]
  %function.0402.in = phi ptr [ %214, %for.body80 ], [ %209, %for.end75 ]
  %function.0402 = load ptr, ptr %function.0402.in, align 8
  tail call fastcc void @TypeChecker_declare_function_within_module(ptr nonnull %0, ptr %function.0402)
  %213 = add nuw nsw i64 %212, 1
  store i64 %213, ptr %memberidx1.i.i334, align 4
  %214 = getelementptr inbounds ptr, ptr %209, i64 %212
  %.not457 = icmp slt i64 %212, %210
  br i1 %.not457, label %for.body80, label %for.end82

for.end82:                                        ; preds = %for.body80, %for.end75
  tail call void @free(ptr nonnull %208)
  %215 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i344 = getelementptr inbounds %Compiler, ptr %215, i64 0, i32 6
  %216 = load ptr, ptr %memberidx1.i344, align 8
  %memberidx2.i345 = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 2
  %217 = load i64, ptr %memberidx2.i345, align 4
  %218 = icmp sgt i64 %217, 0
  br i1 %218, label %common.ret, label %for.cond88.preheader

for.cond88.preheader:                             ; preds = %for.end82
  %219 = load ptr, ptr %memberidx29, align 8
  %memberidx93399 = getelementptr inbounds %Array_EnumNode_, ptr %219, i64 0, i32 2
  %220 = load i64, ptr %memberidx93399, align 4
  %221 = icmp sgt i64 %220, 0
  br i1 %221, label %for.body89, label %for.entry96

for.body89:                                       ; preds = %for.cond88.preheader, %for.body89
  %222 = phi ptr [ %231, %for.body89 ], [ %219, %for.cond88.preheader ]
  %i.0400 = phi i64 [ %230, %for.body89 ], [ 0, %for.cond88.preheader ]
  %223 = load ptr, ptr %memberidx10.i, align 8
  %memberidx.i346 = getelementptr inbounds %Array_Enum_, ptr %223, i64 0, i32 1
  %224 = load ptr, ptr %memberidx.i346, align 8
  %225 = getelementptr inbounds ptr, ptr %224, i64 %i.0400
  %226 = load ptr, ptr %225, align 8
  %memberidx.i347 = getelementptr inbounds %Array_EnumNode_, ptr %222, i64 0, i32 1
  %227 = load ptr, ptr %memberidx.i347, align 8
  %228 = getelementptr inbounds ptr, ptr %227, i64 %i.0400
  %229 = load ptr, ptr %228, align 8
  tail call fastcc void @TypeChecker_check_enum_body(ptr nonnull %0, ptr %226, ptr %229)
  %230 = add nuw nsw i64 %i.0400, 1
  %231 = load ptr, ptr %memberidx29, align 8
  %memberidx93 = getelementptr inbounds %Array_EnumNode_, ptr %231, i64 0, i32 2
  %232 = load i64, ptr %memberidx93, align 4
  %233 = icmp slt i64 %230, %232
  br i1 %233, label %for.body89, label %for.entry96

for.entry96:                                      ; preds = %for.body89, %for.cond88.preheader
  %234 = load ptr, ptr %memberidx36, align 8
  %235 = tail call ptr @malloc(i32 25)
  %memberidx.i348 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %234, i64 0, i32 1
  %236 = load ptr, ptr %memberidx.i348, align 8
  %memberidx1.i349 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %234, i64 0, i32 2
  %237 = load i64, ptr %memberidx1.i349, align 4
  store i1 false, ptr %235, align 1
  %memberidx1.i.i350 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %235, i64 0, i32 1
  %memberidx2.i.i351 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %235, i64 0, i32 3
  store ptr %236, ptr %memberidx2.i.i351, align 8
  %memberidx3.i.i352 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %235, i64 0, i32 2
  store i64 %237, ptr %memberidx3.i.i352, align 4
  store i64 1, ptr %memberidx1.i.i350, align 4
  %238 = icmp slt i64 %237, 1
  br i1 %238, label %for.end101, label %for.body99

for.body99:                                       ; preds = %for.entry96, %for.body99
  %239 = phi i64 [ %240, %for.body99 ], [ 1, %for.entry96 ]
  %class_7.0398.in = phi ptr [ %241, %for.body99 ], [ %236, %for.entry96 ]
  %class_7.0398 = load ptr, ptr %class_7.0398.in, align 8
  tail call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr %class_7.0398)
  %240 = add nuw nsw i64 %239, 1
  store i64 %240, ptr %memberidx1.i.i350, align 4
  %241 = getelementptr inbounds ptr, ptr %236, i64 %239
  %.not458 = icmp slt i64 %239, %237
  br i1 %.not458, label %for.body99, label %for.end101

for.end101:                                       ; preds = %for.body99, %for.entry96
  tail call void @free(ptr nonnull %235)
  %242 = load ptr, ptr %1, align 8
  %memberidx109395 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %242, i64 0, i32 2
  %243 = load i64, ptr %memberidx109395, align 4
  %244 = icmp sgt i64 %243, 0
  br i1 %244, label %for.body105, label %for.end107

for.body105:                                      ; preds = %for.end101, %TypeChecker_check_function_body.exit
  %245 = phi ptr [ %310, %TypeChecker_check_function_body.exit ], [ %242, %for.end101 ]
  %i9.0396 = phi i64 [ %309, %TypeChecker_check_function_body.exit ], [ 0, %for.end101 ]
  %246 = load ptr, ptr %memberidx1.i206, align 8
  %memberidx.i359 = getelementptr inbounds %Array_Function_, ptr %246, i64 0, i32 1
  %247 = load ptr, ptr %memberidx.i359, align 8
  %248 = getelementptr inbounds ptr, ptr %247, i64 %i9.0396
  %249 = load ptr, ptr %248, align 8
  %memberidx.i360 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %245, i64 0, i32 1
  %250 = load ptr, ptr %memberidx.i360, align 8
  %251 = getelementptr inbounds ptr, ptr %250, i64 %i9.0396
  %252 = load ptr, ptr %251, align 8
  %memberidx.i361 = getelementptr inbounds %Function, ptr %249, i64 0, i32 6
  %253 = load i1, ptr %memberidx.i361, align 1
  br i1 %253, label %TypeChecker_check_function_body.exit, label %ifend.i369

ifend.i369:                                       ; preds = %for.body105
  %254 = load ptr, ptr %249, align 8
  store ptr %254, ptr %memberidx25, align 8
  %memberidx6.i364 = getelementptr inbounds %Function, ptr %249, i64 0, i32 5
  %255 = load ptr, ptr %memberidx6.i364, align 8
  store ptr %255, ptr %memberidx10, align 8
  %memberidx7.i365 = getelementptr inbounds %Function, ptr %249, i64 0, i32 3
  %memberidx8.i = getelementptr inbounds %FunctionDeclarationNode, ptr %252, i64 0, i32 2
  %256 = load ptr, ptr %memberidx8.i, align 8
  %257 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %256, ptr null, i1 false)
  store ptr %257, ptr %memberidx7.i365, align 8
  %258 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i.i367 = getelementptr inbounds %Compiler, ptr %258, i64 0, i32 6
  %259 = load ptr, ptr %memberidx1.i.i367, align 8
  %memberidx2.i.i368 = getelementptr inbounds %Array_FloError_, ptr %259, i64 0, i32 2
  %260 = load i64, ptr %memberidx2.i.i368, align 4
  %261 = icmp sgt i64 %260, 0
  br i1 %261, label %TypeChecker_check_function_body.exit, label %ifend11.i

ifend11.i:                                        ; preds = %ifend.i369
  %memberidx13.i370 = getelementptr inbounds %Block, ptr %257, i64 0, i32 1
  %262 = load i1, ptr %memberidx13.i370, align 1
  br i1 %262, label %ifend16.i, label %if.entry14.i

if.entry14.i:                                     ; preds = %ifend11.i
  %memberidx17.i = getelementptr inbounds %Function, ptr %249, i64 0, i32 4
  %263 = load ptr, ptr %memberidx17.i, align 8
  %memberidx18.i371 = getelementptr inbounds %FunctionType, ptr %263, i64 0, i32 2
  %264 = load ptr, ptr %memberidx18.i371, align 8
  %265 = load i64, ptr %264, align 4
  %266 = icmp eq i64 %265, 10
  br i1 %266, label %if.entry20.i, label %else21.i

ifend16.i:                                        ; preds = %Array_Statement____sl__.exit.i, %ifend11.i
  %267 = load ptr, ptr %0, align 8
  %268 = load ptr, ptr %memberidx6.i364, align 8
  %memberidx.i49.i = getelementptr inbounds %Program, ptr %267, i64 0, i32 1
  %269 = load ptr, ptr %memberidx.i49.i, align 8
  %270 = load i64, ptr %268, align 4
  %memberidx.i.i50.i = getelementptr inbounds %Array_Module_, ptr %269, i64 0, i32 1
  %271 = load ptr, ptr %memberidx.i.i50.i, align 8
  %272 = getelementptr inbounds ptr, ptr %271, i64 %270
  %273 = load ptr, ptr %272, align 8
  %memberidx2.i51.i = getelementptr inbounds %Module, ptr %273, i64 0, i32 7
  %274 = load ptr, ptr %memberidx2.i51.i, align 8
  %memberidx3.i.i372 = getelementptr inbounds %ScopeId, ptr %268, i64 0, i32 1
  %275 = load i64, ptr %memberidx3.i.i372, align 4
  %memberidx.i5.i.i373 = getelementptr inbounds %Array_Scope_, ptr %274, i64 0, i32 1
  %276 = load ptr, ptr %memberidx.i5.i.i373, align 8
  %277 = getelementptr inbounds ptr, ptr %276, i64 %275
  %278 = load ptr, ptr %277, align 8
  %memberidx30.i = getelementptr inbounds %Scope, ptr %278, i64 0, i32 5
  %279 = load ptr, ptr %memberidx30.i, align 8
  store ptr %279, ptr %memberidx10, align 8
  br label %TypeChecker_check_function_body.exit

if.entry20.i:                                     ; preds = %if.entry14.i
  %280 = load ptr, ptr %257, align 8
  %281 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %281, align 4
  %memberidx.i52.i = getelementptr inbounds %ReturnStatement, ptr %281, i64 0, i32 1
  store ptr null, ptr %memberidx.i52.i, align 8
  %memberidx.i56.i = getelementptr inbounds %Array_Statement_, ptr %280, i64 0, i32 2
  %282 = load i64, ptr %memberidx.i56.i, align 4
  %memberidx1.i57.i = getelementptr inbounds %Array_Statement_, ptr %280, i64 0, i32 3
  %283 = load i64, ptr %memberidx1.i57.i, align 4
  %.not.i.i374 = icmp slt i64 %282, %283
  br i1 %.not.i.i374, label %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, label %if.entry.i.i375

if.entry20.i.Array_Statement____sl__.exit.i_crit_edge: ; preds = %if.entry20.i
  %memberidx4.i.i376.phi.trans.insert = getelementptr inbounds %Array_Statement_, ptr %280, i64 0, i32 1
  %.pre450 = load ptr, ptr %memberidx4.i.i376.phi.trans.insert, align 8
  br label %Array_Statement____sl__.exit.i

if.entry.i.i375:                                  ; preds = %if.entry20.i
  %284 = shl nuw i64 %283, 1
  store i64 %284, ptr %memberidx1.i57.i, align 4
  %memberidx2.i.i59.i = getelementptr inbounds %Array_Statement_, ptr %280, i64 0, i32 1
  %285 = load ptr, ptr %memberidx2.i.i59.i, align 8
  %286 = shl i64 %283, 4
  %287 = tail call ptr @realloc(ptr %285, i64 %286)
  store ptr %287, ptr %memberidx2.i.i59.i, align 8
  %.pre449 = load i64, ptr %memberidx.i56.i, align 4
  br label %Array_Statement____sl__.exit.i

Array_Statement____sl__.exit.i:                   ; preds = %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, %if.entry.i.i375
  %288 = phi ptr [ %287, %if.entry.i.i375 ], [ %.pre450, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %289 = phi i64 [ %.pre449, %if.entry.i.i375 ], [ %282, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %290 = add nsw i64 %289, 1
  store i64 %290, ptr %memberidx.i56.i, align 4
  %291 = getelementptr inbounds ptr, ptr %288, i64 %289
  store ptr %281, ptr %291, align 8
  br label %ifend16.i

else21.i:                                         ; preds = %if.entry14.i
  %292 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %292, ptr noundef nonnull align 8 dereferenceable(40) @157, i64 40, i1 false)
  %293 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %293, align 8
  %memberidx.i.i53.i = getelementptr inbounds %string, ptr %293, i64 0, i32 1
  store ptr %292, ptr %memberidx.i.i53.i, align 8
  %memberidx1.i.i54.i = getelementptr inbounds %string, ptr %293, i64 0, i32 2
  store i64 40, ptr %memberidx1.i.i54.i, align 4
  %memberidx2.i.i55.i = getelementptr inbounds %string, ptr %293, i64 0, i32 3
  store i64 40, ptr %memberidx2.i.i55.i, align 4
  %memberidx25.i = getelementptr inbounds %FunctionDeclarationNode, ptr %252, i64 0, i32 3
  %294 = load ptr, ptr %memberidx25.i, align 8
  %295 = load ptr, ptr %294, align 8
  %296 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i48.i = getelementptr inbounds %Compiler, ptr %296, i64 0, i32 6
  %297 = load ptr, ptr %memberidx1.i48.i, align 8
  %298 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %298, align 4
  %memberidx1.i.i.i377 = getelementptr inbounds %FloError, ptr %298, i64 0, i32 2
  store ptr %295, ptr %memberidx1.i.i.i377, align 8
  %memberidx2.i.i.i378 = getelementptr inbounds %FloError, ptr %298, i64 0, i32 1
  store ptr %293, ptr %memberidx2.i.i.i378, align 8
  %memberidx.i.i.i379 = getelementptr inbounds %Array_FloError_, ptr %297, i64 0, i32 2
  %299 = load i64, ptr %memberidx.i.i.i379, align 4
  %memberidx1.i2.i.i380 = getelementptr inbounds %Array_FloError_, ptr %297, i64 0, i32 3
  %300 = load i64, ptr %memberidx1.i2.i.i380, align 4
  %.not.i.i.i381 = icmp slt i64 %299, %300
  br i1 %.not.i.i.i381, label %else21.i.TypeChecker_error.exit.i386_crit_edge, label %if.entry.i.i.i384

else21.i.TypeChecker_error.exit.i386_crit_edge:   ; preds = %else21.i
  %memberidx4.i.i.i385.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %297, i64 0, i32 1
  %.pre448 = load ptr, ptr %memberidx4.i.i.i385.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i386

if.entry.i.i.i384:                                ; preds = %else21.i
  %301 = shl nuw i64 %300, 1
  store i64 %301, ptr %memberidx1.i2.i.i380, align 4
  %memberidx2.i.i.i.i383 = getelementptr inbounds %Array_FloError_, ptr %297, i64 0, i32 1
  %302 = load ptr, ptr %memberidx2.i.i.i.i383, align 8
  %303 = shl i64 %300, 4
  %304 = tail call ptr @realloc(ptr %302, i64 %303)
  store ptr %304, ptr %memberidx2.i.i.i.i383, align 8
  %.pre447 = load i64, ptr %memberidx.i.i.i379, align 4
  br label %TypeChecker_error.exit.i386

TypeChecker_error.exit.i386:                      ; preds = %else21.i.TypeChecker_error.exit.i386_crit_edge, %if.entry.i.i.i384
  %305 = phi ptr [ %304, %if.entry.i.i.i384 ], [ %.pre448, %else21.i.TypeChecker_error.exit.i386_crit_edge ]
  %306 = phi i64 [ %.pre447, %if.entry.i.i.i384 ], [ %299, %else21.i.TypeChecker_error.exit.i386_crit_edge ]
  %307 = add nsw i64 %306, 1
  store i64 %307, ptr %memberidx.i.i.i379, align 4
  %308 = getelementptr inbounds ptr, ptr %305, i64 %306
  store ptr %298, ptr %308, align 8
  br label %TypeChecker_check_function_body.exit

TypeChecker_check_function_body.exit:             ; preds = %for.body105, %ifend.i369, %ifend16.i, %TypeChecker_error.exit.i386
  %309 = add nuw nsw i64 %i9.0396, 1
  %310 = load ptr, ptr %1, align 8
  %memberidx109 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %310, i64 0, i32 2
  %311 = load i64, ptr %memberidx109, align 4
  %312 = icmp slt i64 %309, %311
  br i1 %312, label %for.body105, label %for.end107

for.end107:                                       ; preds = %TypeChecker_check_function_body.exit, %for.end101
  %313 = load i1, ptr %memberidx, align 1
  %314 = load ptr, ptr %memberidx10, align 8
  %315 = load i64, ptr %314, align 4
  %316 = icmp ne i64 %315, 0
  %317 = and i1 %313, %316
  br i1 %317, label %if.entry115, label %ifend117

if.entry115:                                      ; preds = %for.end107
  %318 = load ptr, ptr %0, align 8
  %memberidx1.i.i228 = getelementptr inbounds %Program, ptr %318, i64 0, i32 1
  %319 = load ptr, ptr %memberidx1.i.i228, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %319, i64 0, i32 1
  %320 = load ptr, ptr %memberidx.i.i.i, align 8
  %321 = load ptr, ptr %320, align 8
  %memberidx1.i229 = getelementptr inbounds %Module, ptr %321, i64 0, i32 5
  %322 = load ptr, ptr %memberidx1.i229, align 8
  store ptr %322, ptr %memberidx10, align 8
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %4)
  br label %ifend117

ifend117:                                         ; preds = %for.end107, %if.entry115
  store ptr %3, ptr %memberidx10, align 8
  %323 = load ptr, ptr %memberidx.i258, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %323, i64 0, i32 6
  %324 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %324, i64 0, i32 2
  %325 = load i64, ptr %memberidx2.i, align 4
  %326 = icmp sgt i64 %325, 0
  %spec.select = select i1 %326, ptr null, ptr %4
  br label %common.ret
}

define internal fastcc void @TypeChecker_import_all_from_module(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = load ptr, ptr %0, align 8
  %memberidx6 = getelementptr inbounds %Module, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %memberidx6, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load i64, ptr %3, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i, align 8
  %7 = getelementptr inbounds ptr, ptr %6, i64 %5
  %8 = load ptr, ptr %7, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %3, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx7 = getelementptr inbounds %Module, ptr %1, i64 0, i32 9
  %14 = load ptr, ptr %memberidx7, align 8
  %15 = tail call ptr @malloc(i32 25)
  %memberidx.i94 = getelementptr inbounds %Array_VarDeclaration_, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i = getelementptr inbounds %Array_VarDeclaration_, ptr %14, i64 0, i32 2
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i.i.i112 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %19 = phi i64 [ 1, %for.body.lr.ph ], [ %39, %for.body ]
  %imported_var.0241.in = phi ptr [ %16, %for.body.lr.ph ], [ %40, %for.body ]
  %imported_var.0241 = load ptr, ptr %imported_var.0241.in, align 8
  %memberidx9 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0241, i64 0, i32 1
  %20 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0241, i64 0, i32 2
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load ptr, ptr %memberidx.i.i.i112, align 8
  %24 = load i64, ptr %23, align 4
  %memberidx1.i.i.i.i113 = getelementptr inbounds %Program, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %memberidx1.i.i.i.i113, align 8
  %memberidx.i.i.i.i.i114 = getelementptr inbounds %Array_Module_, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i.i.i114, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %24
  %28 = load ptr, ptr %27, align 8
  %memberidx1.i.i115 = getelementptr inbounds %Module, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i.i115, align 8
  %30 = load i64, ptr %29, align 4
  %31 = getelementptr inbounds ptr, ptr %26, i64 %30
  %32 = load ptr, ptr %31, align 8
  %memberidx2.i.i.i118 = getelementptr inbounds %Module, ptr %32, i64 0, i32 7
  %33 = load ptr, ptr %memberidx2.i.i.i118, align 8
  %memberidx3.i.i.i119 = getelementptr inbounds %ScopeId, ptr %29, i64 0, i32 1
  %34 = load i64, ptr %memberidx3.i.i.i119, align 4
  %memberidx.i5.i.i.i120 = getelementptr inbounds %Array_Scope_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i5.i.i.i120, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %memberidx.i121 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i121, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %38, ptr %20, ptr %21)
  %39 = add nuw nsw i64 %19, 1
  %40 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %15)
  %memberidx12 = getelementptr inbounds %Module, ptr %1, i64 0, i32 8
  %41 = load ptr, ptr %memberidx12, align 8
  %42 = tail call ptr @malloc(i32 25)
  %memberidx.i139 = getelementptr inbounds %Array_ConstDeclaration_, ptr %41, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i139, align 8
  %memberidx1.i140 = getelementptr inbounds %Array_ConstDeclaration_, ptr %41, i64 0, i32 2
  %44 = load i64, ptr %memberidx1.i140, align 4
  store i1 false, ptr %42, align 1
  %memberidx1.i.i141 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 1
  %memberidx2.i.i142 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i142, align 8
  %memberidx3.i.i143 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 2
  store i64 %44, ptr %memberidx3.i.i143, align 4
  store i64 1, ptr %memberidx1.i.i141, align 4
  %45 = icmp slt i64 %44, 1
  br i1 %45, label %for.end16, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %for.end
  %memberidx.i.i.i147 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %46 = phi i64 [ 1, %for.body14.lr.ph ], [ %66, %for.body14 ]
  %imported_const.0238.in = phi ptr [ %43, %for.body14.lr.ph ], [ %67, %for.body14 ]
  %imported_const.0238 = load ptr, ptr %imported_const.0238.in, align 8
  %memberidx18 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0238, i64 0, i32 1
  %47 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0238, i64 0, i32 2
  %48 = load ptr, ptr %memberidx19, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load ptr, ptr %memberidx.i.i.i147, align 8
  %51 = load i64, ptr %50, align 4
  %memberidx1.i.i.i.i148 = getelementptr inbounds %Program, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx1.i.i.i.i148, align 8
  %memberidx.i.i.i.i.i149 = getelementptr inbounds %Array_Module_, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i.i.i.i149, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %51
  %55 = load ptr, ptr %54, align 8
  %memberidx1.i.i150 = getelementptr inbounds %Module, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i.i150, align 8
  %57 = load i64, ptr %56, align 4
  %58 = getelementptr inbounds ptr, ptr %53, i64 %57
  %59 = load ptr, ptr %58, align 8
  %memberidx2.i.i.i153 = getelementptr inbounds %Module, ptr %59, i64 0, i32 7
  %60 = load ptr, ptr %memberidx2.i.i.i153, align 8
  %memberidx3.i.i.i154 = getelementptr inbounds %ScopeId, ptr %56, i64 0, i32 1
  %61 = load i64, ptr %memberidx3.i.i.i154, align 4
  %memberidx.i5.i.i.i155 = getelementptr inbounds %Array_Scope_, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i5.i.i.i155, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx.i156 = getelementptr inbounds %Scope, ptr %64, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i156, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %65, ptr %47, ptr %48)
  %66 = add nuw nsw i64 %46, 1
  store i64 %66, ptr %memberidx1.i.i141, align 4
  %67 = getelementptr inbounds ptr, ptr %43, i64 %46
  %.not250 = icmp slt i64 %46, %44
  br i1 %.not250, label %for.body14, label %for.end16

for.end16:                                        ; preds = %for.body14, %for.end
  tail call void @free(ptr nonnull %42)
  %memberidx21 = getelementptr inbounds %Module, ptr %1, i64 0, i32 4
  %68 = load ptr, ptr %memberidx21, align 8
  %69 = tail call ptr @malloc(i32 25)
  %memberidx.i160 = getelementptr inbounds %Array_Function_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i160, align 8
  %memberidx1.i161 = getelementptr inbounds %Array_Function_, ptr %68, i64 0, i32 2
  %71 = load i64, ptr %memberidx1.i161, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i162 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 1
  %memberidx2.i.i163 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i163, align 8
  %memberidx3.i.i164 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i164, align 4
  store i64 1, ptr %memberidx1.i.i162, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end25, label %for.body23.lr.ph

for.body23.lr.ph:                                 ; preds = %for.end16
  %memberidx.i.i.i176 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body23

for.body23:                                       ; preds = %for.body23.lr.ph, %for.body23
  %73 = phi i64 [ 1, %for.body23.lr.ph ], [ %93, %for.body23 ]
  %imported_func.0235.in = phi ptr [ %70, %for.body23.lr.ph ], [ %94, %for.body23 ]
  %imported_func.0235 = load ptr, ptr %imported_func.0235.in, align 8
  %memberidx27 = getelementptr inbounds %Function, ptr %imported_func.0235, i64 0, i32 1
  %74 = load ptr, ptr %memberidx27, align 8
  %75 = load ptr, ptr %imported_func.0235, align 8
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %memberidx.i.i.i176, align 8
  %78 = load i64, ptr %77, align 4
  %memberidx1.i.i.i.i177 = getelementptr inbounds %Program, ptr %76, i64 0, i32 1
  %79 = load ptr, ptr %memberidx1.i.i.i.i177, align 8
  %memberidx.i.i.i.i.i178 = getelementptr inbounds %Array_Module_, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i.i.i.i.i178, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %78
  %82 = load ptr, ptr %81, align 8
  %memberidx1.i.i179 = getelementptr inbounds %Module, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i.i179, align 8
  %84 = load i64, ptr %83, align 4
  %85 = getelementptr inbounds ptr, ptr %80, i64 %84
  %86 = load ptr, ptr %85, align 8
  %memberidx2.i.i.i182 = getelementptr inbounds %Module, ptr %86, i64 0, i32 7
  %87 = load ptr, ptr %memberidx2.i.i.i182, align 8
  %memberidx3.i.i.i183 = getelementptr inbounds %ScopeId, ptr %83, i64 0, i32 1
  %88 = load i64, ptr %memberidx3.i.i.i183, align 4
  %memberidx.i5.i.i.i184 = getelementptr inbounds %Array_Scope_, ptr %87, i64 0, i32 1
  %89 = load ptr, ptr %memberidx.i5.i.i.i184, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx.i185 = getelementptr inbounds %Scope, ptr %91, i64 0, i32 3
  %92 = load ptr, ptr %memberidx.i185, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %92, ptr %74, ptr %75)
  %93 = add nuw nsw i64 %73, 1
  store i64 %93, ptr %memberidx1.i.i162, align 4
  %94 = getelementptr inbounds ptr, ptr %70, i64 %73
  %.not251 = icmp slt i64 %73, %71
  br i1 %.not251, label %for.body23, label %for.end25

for.end25:                                        ; preds = %for.body23, %for.end16
  tail call void @free(ptr nonnull %69)
  %memberidx30 = getelementptr inbounds %Module, ptr %1, i64 0, i32 3
  %95 = load ptr, ptr %memberidx30, align 8
  %96 = tail call ptr @malloc(i32 25)
  %memberidx.i206 = getelementptr inbounds %Array_Class_, ptr %95, i64 0, i32 1
  %97 = load ptr, ptr %memberidx.i206, align 8
  %memberidx1.i207 = getelementptr inbounds %Array_Class_, ptr %95, i64 0, i32 2
  %98 = load i64, ptr %memberidx1.i207, align 4
  store i1 false, ptr %96, align 1
  %memberidx1.i.i208 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 1
  %memberidx2.i.i209 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 3
  store ptr %97, ptr %memberidx2.i.i209, align 8
  %memberidx3.i.i210 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 2
  store i64 %98, ptr %memberidx3.i.i210, align 4
  store i64 1, ptr %memberidx1.i.i208, align 4
  %99 = icmp slt i64 %98, 1
  br i1 %99, label %for.end34, label %for.body32.lr.ph

for.body32.lr.ph:                                 ; preds = %for.end25
  %memberidx.i.i.i192 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %100 = phi i64 [ 1, %for.body32.lr.ph ], [ %124, %for.body32 ]
  %imported_class.0232.in = phi ptr [ %97, %for.body32.lr.ph ], [ %125, %for.body32 ]
  %imported_class.0232 = load ptr, ptr %imported_class.0232.in, align 8
  %memberidx36 = getelementptr inbounds %Class, ptr %imported_class.0232, i64 0, i32 1
  %101 = load ptr, ptr %memberidx36, align 8
  %102 = load ptr, ptr %imported_class.0232, align 8
  %103 = load ptr, ptr %0, align 8
  %104 = load ptr, ptr %memberidx.i.i.i192, align 8
  %105 = load i64, ptr %104, align 4
  %memberidx1.i.i.i.i193 = getelementptr inbounds %Program, ptr %103, i64 0, i32 1
  %106 = load ptr, ptr %memberidx1.i.i.i.i193, align 8
  %memberidx.i.i.i.i.i194 = getelementptr inbounds %Array_Module_, ptr %106, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i.i.i.i.i194, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %105
  %109 = load ptr, ptr %108, align 8
  %memberidx1.i.i195 = getelementptr inbounds %Module, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx1.i.i195, align 8
  %111 = load i64, ptr %110, align 4
  %112 = getelementptr inbounds ptr, ptr %107, i64 %111
  %113 = load ptr, ptr %112, align 8
  %memberidx2.i.i.i198 = getelementptr inbounds %Module, ptr %113, i64 0, i32 7
  %114 = load ptr, ptr %memberidx2.i.i.i198, align 8
  %memberidx3.i.i.i199 = getelementptr inbounds %ScopeId, ptr %110, i64 0, i32 1
  %115 = load i64, ptr %memberidx3.i.i.i199, align 4
  %memberidx.i5.i.i.i200 = getelementptr inbounds %Array_Scope_, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i5.i.i.i200, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx.i201 = getelementptr inbounds %Scope, ptr %118, i64 0, i32 2
  %119 = load ptr, ptr %memberidx.i201, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %119, ptr %101, ptr %102)
  %memberidx1.i202 = getelementptr inbounds %Scope, ptr %118, i64 0, i32 1
  %120 = load ptr, ptr %memberidx1.i202, align 8
  %121 = tail call ptr @malloc(i32 24)
  %122 = load i64, ptr %102, align 4
  %memberidx1.i5.i203 = getelementptr inbounds %TypeId, ptr %102, i64 0, i32 2
  %123 = load i64, ptr %memberidx1.i5.i203, align 4
  store i64 3, ptr %121, align 4
  %memberidx1.i.i.i204 = getelementptr inbounds %VarId, ptr %121, i64 0, i32 1
  store i64 %122, ptr %memberidx1.i.i.i204, align 4
  %memberidx2.i.i6.i205 = getelementptr inbounds %VarId, ptr %121, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i.i6.i205, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %120, ptr %101, ptr nonnull %121)
  %124 = add nuw nsw i64 %100, 1
  store i64 %124, ptr %memberidx1.i.i208, align 4
  %125 = getelementptr inbounds ptr, ptr %97, i64 %100
  %.not252 = icmp slt i64 %100, %98
  br i1 %.not252, label %for.body32, label %for.end34

for.end34:                                        ; preds = %for.body32, %for.end25
  tail call void @free(ptr nonnull %96)
  %memberidx39 = getelementptr inbounds %Module, ptr %1, i64 0, i32 6
  %126 = load ptr, ptr %memberidx39, align 8
  %127 = tail call ptr @malloc(i32 25)
  %memberidx.i171 = getelementptr inbounds %Array_Enum_, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %memberidx.i171, align 8
  %memberidx1.i172 = getelementptr inbounds %Array_Enum_, ptr %126, i64 0, i32 2
  %129 = load i64, ptr %memberidx1.i172, align 4
  store i1 false, ptr %127, align 1
  %memberidx1.i.i173 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 1
  %memberidx2.i.i174 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 3
  store ptr %128, ptr %memberidx2.i.i174, align 8
  %memberidx3.i.i175 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 2
  store i64 %129, ptr %memberidx3.i.i175, align 4
  store i64 1, ptr %memberidx1.i.i173, align 4
  %130 = icmp slt i64 %129, 1
  br i1 %130, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.end34
  %memberidx.i.i.i128 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %for.body41
  %131 = phi i64 [ 1, %for.body41.lr.ph ], [ %155, %for.body41 ]
  %imported_enum.0229.in = phi ptr [ %128, %for.body41.lr.ph ], [ %156, %for.body41 ]
  %imported_enum.0229 = load ptr, ptr %imported_enum.0229.in, align 8
  %memberidx45 = getelementptr inbounds %Enum, ptr %imported_enum.0229, i64 0, i32 1
  %132 = load ptr, ptr %memberidx45, align 8
  %133 = load ptr, ptr %imported_enum.0229, align 8
  %134 = load ptr, ptr %0, align 8
  %135 = load ptr, ptr %memberidx.i.i.i128, align 8
  %136 = load i64, ptr %135, align 4
  %memberidx1.i.i.i.i129 = getelementptr inbounds %Program, ptr %134, i64 0, i32 1
  %137 = load ptr, ptr %memberidx1.i.i.i.i129, align 8
  %memberidx.i.i.i.i.i130 = getelementptr inbounds %Array_Module_, ptr %137, i64 0, i32 1
  %138 = load ptr, ptr %memberidx.i.i.i.i.i130, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %136
  %140 = load ptr, ptr %139, align 8
  %memberidx1.i.i131 = getelementptr inbounds %Module, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx1.i.i131, align 8
  %142 = load i64, ptr %141, align 4
  %143 = getelementptr inbounds ptr, ptr %138, i64 %142
  %144 = load ptr, ptr %143, align 8
  %memberidx2.i.i.i134 = getelementptr inbounds %Module, ptr %144, i64 0, i32 7
  %145 = load ptr, ptr %memberidx2.i.i.i134, align 8
  %memberidx3.i.i.i135 = getelementptr inbounds %ScopeId, ptr %141, i64 0, i32 1
  %146 = load i64, ptr %memberidx3.i.i.i135, align 4
  %memberidx.i5.i.i.i136 = getelementptr inbounds %Array_Scope_, ptr %145, i64 0, i32 1
  %147 = load ptr, ptr %memberidx.i5.i.i.i136, align 8
  %148 = getelementptr inbounds ptr, ptr %147, i64 %146
  %149 = load ptr, ptr %148, align 8
  %memberidx.i137 = getelementptr inbounds %Scope, ptr %149, i64 0, i32 4
  %150 = load ptr, ptr %memberidx.i137, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %150, ptr %132, ptr %133)
  %memberidx1.i138 = getelementptr inbounds %Scope, ptr %149, i64 0, i32 1
  %151 = load ptr, ptr %memberidx1.i138, align 8
  %152 = tail call ptr @malloc(i32 24)
  %153 = load i64, ptr %133, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %133, i64 0, i32 2
  %154 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 4, ptr %152, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %152, i64 0, i32 1
  store i64 %153, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %152, i64 0, i32 2
  store i64 %154, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %151, ptr %132, ptr nonnull %152)
  %155 = add nuw nsw i64 %131, 1
  store i64 %155, ptr %memberidx1.i.i173, align 4
  %156 = getelementptr inbounds ptr, ptr %128, i64 %131
  %.not253 = icmp slt i64 %131, %129
  br i1 %.not253, label %for.body41, label %for.end43

for.end43:                                        ; preds = %for.body41, %for.end34
  tail call void @free(ptr nonnull %127)
  %memberidx48 = getelementptr inbounds %Scope, ptr %13, i64 0, i32 6
  %157 = load ptr, ptr %memberidx48, align 8
  %158 = tail call ptr @malloc(i32 25)
  %159 = load ptr, ptr %157, align 8
  %memberidx1.i107 = getelementptr inbounds %Map_string_Type_, ptr %157, i64 0, i32 1
  %160 = load i64, ptr %memberidx1.i107, align 4
  %memberidx2.i108 = getelementptr inbounds %Map_string_Type_, ptr %157, i64 0, i32 2
  %161 = load i64, ptr %memberidx2.i108, align 4
  store i1 false, ptr %158, align 1
  %memberidx1.i.i109 = getelementptr inbounds %MapIterator_string_Type_, ptr %158, i64 0, i32 1
  store ptr %159, ptr %memberidx1.i.i109, align 8
  %memberidx2.i.i110 = getelementptr inbounds %MapIterator_string_Type_, ptr %158, i64 0, i32 2
  %memberidx3.i.i111 = getelementptr inbounds %MapIterator_string_Type_, ptr %158, i64 0, i32 3
  store i64 %161, ptr %memberidx3.i.i111, align 4
  %162 = add nsw i64 %160, -1
  store i64 %162, ptr %memberidx2.i.i110, align 4
  %163 = icmp sgt i64 %160, 0
  br i1 %163, label %while.entry.i102, label %MapIterator_string_Type__next.exit106

while.entry.i102:                                 ; preds = %for.end43, %ifend.i105
  %164 = phi i64 [ %167, %ifend.i105 ], [ %162, %for.end43 ]
  %165 = phi ptr [ %incdec.ptr.i100, %ifend.i105 ], [ %159, %for.end43 ]
  %incdec.ptr.i100 = getelementptr inbounds ptr, ptr %165, i64 1
  %166 = load ptr, ptr %165, align 8
  %.not.i101 = icmp eq ptr %166, null
  br i1 %.not.i101, label %ifend.i105, label %MapIterator_string_Type__next.exit106.loopexit

ifend.i105:                                       ; preds = %while.entry.i102
  %167 = add nsw i64 %164, -1
  store i64 %167, ptr %memberidx2.i.i110, align 4
  %168 = icmp sgt i64 %164, 0
  br i1 %168, label %while.entry.i102, label %MapIterator_string_Type__next.exit106.loopexit

MapIterator_string_Type__next.exit106.loopexit:   ; preds = %ifend.i105, %while.entry.i102
  %169 = phi i64 [ %167, %ifend.i105 ], [ %164, %while.entry.i102 ]
  store ptr %incdec.ptr.i100, ptr %memberidx1.i.i109, align 8
  br label %MapIterator_string_Type__next.exit106

MapIterator_string_Type__next.exit106:            ; preds = %MapIterator_string_Type__next.exit106.loopexit, %for.end43
  %170 = phi i64 [ %169, %MapIterator_string_Type__next.exit106.loopexit ], [ %162, %for.end43 ]
  %memberidx1.i.i109.promoted225 = phi ptr [ %incdec.ptr.i100, %MapIterator_string_Type__next.exit106.loopexit ], [ %159, %for.end43 ]
  %storemerge218222 = icmp slt i64 %161, 1
  br i1 %storemerge218222, label %for.end52, label %for.body50.lr.ph

for.body50.lr.ph:                                 ; preds = %MapIterator_string_Type__next.exit106
  %memberidx.i.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body50

for.body50:                                       ; preds = %for.body50.lr.ph, %MapIterator_string_Type__next.exit
  %171 = phi i64 [ %170, %for.body50.lr.ph ], [ %198, %MapIterator_string_Type__next.exit ]
  %incdec.ptr.i.lcssa227 = phi ptr [ %memberidx1.i.i109.promoted225, %for.body50.lr.ph ], [ %incdec.ptr.i.lcssa226, %MapIterator_string_Type__next.exit ]
  %storemerge219223.in = phi i64 [ %161, %for.body50.lr.ph ], [ %storemerge219223, %MapIterator_string_Type__next.exit ]
  %storemerge219223 = add nsw i64 %storemerge219223.in, -1
  %type_alias_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa227, i64 -1
  %type_alias_entry.0 = load ptr, ptr %type_alias_entry.0.in, align 8
  %172 = load ptr, ptr %type_alias_entry.0, align 8
  %memberidx55 = getelementptr inbounds %MapEntry_string_Type_, ptr %type_alias_entry.0, i64 0, i32 1
  %173 = load ptr, ptr %memberidx55, align 8
  %174 = load ptr, ptr %0, align 8
  %175 = load ptr, ptr %memberidx.i.i.i, align 8
  %176 = load i64, ptr %175, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %174, i64 0, i32 1
  %177 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %177, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %176
  %180 = load ptr, ptr %179, align 8
  %memberidx1.i.i = getelementptr inbounds %Module, ptr %180, i64 0, i32 5
  %181 = load ptr, ptr %memberidx1.i.i, align 8
  %182 = load i64, ptr %181, align 4
  %183 = getelementptr inbounds ptr, ptr %178, i64 %182
  %184 = load ptr, ptr %183, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %184, i64 0, i32 7
  %185 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %181, i64 0, i32 1
  %186 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %185, i64 0, i32 1
  %187 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %188 = getelementptr inbounds ptr, ptr %187, i64 %186
  %189 = load ptr, ptr %188, align 8
  %memberidx.i93 = getelementptr inbounds %Scope, ptr %189, i64 0, i32 6
  %190 = load ptr, ptr %memberidx.i93, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %190, ptr %172, ptr %173)
  %191 = add nsw i64 %171, -1
  store i64 %191, ptr %memberidx2.i.i110, align 4
  %192 = icmp sgt i64 %171, 0
  br i1 %192, label %while.entry.i, label %MapIterator_string_Type__next.exit

while.entry.i:                                    ; preds = %for.body50, %ifend.i
  %193 = phi i64 [ %196, %ifend.i ], [ %191, %for.body50 ]
  %194 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa227, %for.body50 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %194, i64 1
  %195 = load ptr, ptr %194, align 8
  %.not.i = icmp eq ptr %195, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_Type__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %196 = add nsw i64 %193, -1
  store i64 %196, ptr %memberidx2.i.i110, align 4
  %197 = icmp sgt i64 %193, 0
  br i1 %197, label %while.entry.i, label %MapIterator_string_Type__next.exit

MapIterator_string_Type__next.exit:               ; preds = %while.entry.i, %ifend.i, %for.body50
  %198 = phi i64 [ %191, %for.body50 ], [ %193, %while.entry.i ], [ %196, %ifend.i ]
  %incdec.ptr.i.lcssa226 = phi ptr [ %incdec.ptr.i.lcssa227, %for.body50 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge218 = icmp slt i64 %storemerge219223.in, 2
  br i1 %storemerge218, label %for.cond49.for.end52_crit_edge, label %for.body50

for.cond49.for.end52_crit_edge:                   ; preds = %MapIterator_string_Type__next.exit
  store ptr %incdec.ptr.i.lcssa226, ptr %memberidx1.i.i109, align 8
  br label %for.end52

for.end52:                                        ; preds = %for.cond49.for.end52_crit_edge, %MapIterator_string_Type__next.exit106
  tail call void @free(ptr nonnull %158)
  ret void
}

define internal fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %6)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %8, i64 0, i32 6
  %9 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i, align 4
  %11 = icmp sgt i64 %10, 0
  br i1 %11, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend46, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %43, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %166, %ifend46 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load ptr, ptr %0, align 8
  %14 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %14, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %16 = load i64, ptr %7, align 4
  %17 = icmp eq i64 %16, 20
  br i1 %17, label %if.entry.i167, label %is_object.exit.thread

if.entry.i167:                                    ; preds = %ifend, %if.entry.i167
  %.tr5.i = phi ptr [ %18, %if.entry.i167 ], [ %7, %ifend ]
  %memberidx1.i166 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %18 = load ptr, ptr %memberidx1.i166, align 8
  %19 = load i64, ptr %18, align 4
  switch i64 %19, label %ifend6 [
    i64 20, label %if.entry.i167
    i64 11, label %tailrecurse.i.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  %20 = icmp eq i64 %16, 11
  br i1 %20, label %if.entry3.i, label %ifend6

tailrecurse.i.preheader:                          ; preds = %if.entry.i167
  br i1 %17, label %if.entry.i170, label %if.entry3.i

if.entry.i170:                                    ; preds = %tailrecurse.i.preheader, %if.entry.i170
  %.tr11.i219 = phi ptr [ %21, %if.entry.i170 ], [ %7, %tailrecurse.i.preheader ]
  %memberidx1.i169 = getelementptr inbounds %GenericType, ptr %.tr11.i219, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i169, align 8
  %22 = load i64, ptr %21, align 4
  %switch = icmp eq i64 %22, 20
  br i1 %switch, label %if.entry.i170, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i170, %is_object.exit.thread, %tailrecurse.i.preheader
  %.tr11.i.lcssa = phi ptr [ %7, %tailrecurse.i.preheader ], [ %7, %is_object.exit.thread ], [ %21, %if.entry.i170 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i171 = getelementptr inbounds %Program, ptr %13, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i.i171, align 8
  %25 = load i64, ptr %23, align 4
  %memberidx.i.i.i172 = getelementptr inbounds %Array_Module_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i172, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i173 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i173, align 8
  %memberidx3.i.i174 = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i174, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i5.i.i, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %memberidx.i82 = getelementptr inbounds %Class, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i82, align 8
  %memberidx.i.i83 = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i.i83, align 4
  %.not.i.i = icmp eq i64 %35, 6
  br i1 %.not.i.i, label %string___eq__.exit.i, label %ifend6

string___eq__.exit.i:                             ; preds = %if.entry3.i
  %memberidx2.i.i85 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %memberidx2.i.i85, align 8
  %37 = tail call i64 @memcmp(ptr %36, ptr %14, i64 6)
  %38 = icmp eq i64 %37, 0
  %39 = load ptr, ptr %33, align 8
  %40 = load i64, ptr %39, align 4
  %41 = icmp eq i64 %40, 1
  %42 = and i1 %38, %41
  br i1 %42, label %if.entry4, label %string___eq__.exit.i.ifend6_crit_edge

string___eq__.exit.i.ifend6_crit_edge:            ; preds = %string___eq__.exit.i
  %.pre = load i64, ptr %7, align 4
  br label %ifend6

if.entry4:                                        ; preds = %string___eq__.exit.i
  %43 = tail call ptr @malloc(i32 49)
  %44 = tail call ptr @malloc(i32 0)
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i86 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i86, align 8
  %memberidx1.i.i87 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i87, i8 0, i64 16, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_uint_, ptr %46, align 8
  %memberidx.i89 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 2
  store i64 0, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %memberidx2.i91, align 8
  store i64 0, ptr %47, align 4
  store i64 1, ptr %memberidx.i89, align 4
  %48 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %48, align 8
  %memberidx.i92 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 2
  store i64 0, ptr %memberidx.i92, align 4
  %memberidx1.i93 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 3
  store i64 8, ptr %memberidx1.i93, align 4
  %memberidx2.i94 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 1
  %49 = tail call ptr @malloc(i32 64)
  store ptr %49, ptr %memberidx2.i94, align 8
  store ptr %5, ptr %49, align 8
  store i64 1, ptr %memberidx.i92, align 4
  store i64 8, ptr %43, align 4
  %memberidx.i.i95 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i95, align 4
  %memberidx1.i.i96 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i97 = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 6
  store ptr %48, ptr %memberidx.i97, align 8
  %memberidx1.i98 = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 5
  store ptr %46, ptr %memberidx1.i98, align 8
  %memberidx2.i99 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i99, align 8
  %memberidx3.i = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 4
  store ptr %45, ptr %memberidx3.i, align 8
  store i1 true, ptr %memberidx1.i.i96, align 1
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i167, %is_object.exit.thread, %string___eq__.exit.i.ifend6_crit_edge, %if.entry3.i
  %50 = phi i64 [ %.pre, %string___eq__.exit.i.ifend6_crit_edge ], [ %16, %if.entry3.i ], [ %16, %is_object.exit.thread ], [ %16, %if.entry.i167 ]
  %51 = add i64 %50, -1
  %52 = icmp ult i64 %51, 9
  %53 = load i64, ptr %12, align 4
  %54 = add i64 %53, -1
  %55 = icmp ult i64 %54, 9
  %56 = and i1 %52, %55
  %57 = icmp ult i64 %51, 7
  %58 = icmp eq i64 %53, 12
  %59 = and i1 %57, %58
  %60 = icmp ult i64 %54, 7
  %61 = icmp eq i64 %50, 12
  %62 = and i1 %61, %60
  %63 = select i1 %62, i1 true, i1 %59
  %spec.select = select i1 %63, i1 true, i1 %56
  %64 = load ptr, ptr %0, align 8
  %65 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %65, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %66 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i.i100 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i.i100, align 8
  %memberidx1.i.i101 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i101, align 4
  %memberidx2.i.i102 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i102, align 4
  %67 = load i64, ptr %12, align 4
  %68 = icmp eq i64 %67, 20
  br i1 %68, label %if.entry.i177, label %is_object.exit180.thread

if.entry.i177:                                    ; preds = %ifend6, %if.entry.i177
  %.tr5.i175 = phi ptr [ %69, %if.entry.i177 ], [ %12, %ifend6 ]
  %memberidx1.i176 = getelementptr inbounds %GenericType, ptr %.tr5.i175, i64 0, i32 3
  %69 = load ptr, ptr %memberidx1.i176, align 8
  %70 = load i64, ptr %69, align 4
  switch i64 %70, label %ifend25 [
    i64 20, label %if.entry.i177
    i64 11, label %tailrecurse.i182.preheader
  ]

is_object.exit180.thread:                         ; preds = %ifend6
  %71 = icmp eq i64 %67, 11
  br i1 %71, label %if.entry3.i192, label %ifend25

tailrecurse.i182.preheader:                       ; preds = %if.entry.i177
  br i1 %68, label %if.entry.i185, label %if.entry3.i192

if.entry.i185:                                    ; preds = %tailrecurse.i182.preheader, %if.entry.i185
  %.tr11.i181217 = phi ptr [ %72, %if.entry.i185 ], [ %12, %tailrecurse.i182.preheader ]
  %memberidx1.i184 = getelementptr inbounds %GenericType, ptr %.tr11.i181217, i64 0, i32 3
  %72 = load ptr, ptr %memberidx1.i184, align 8
  %73 = load i64, ptr %72, align 4
  %switch212 = icmp eq i64 %73, 20
  br i1 %switch212, label %if.entry.i185, label %if.entry3.i192

if.entry3.i192:                                   ; preds = %if.entry.i185, %is_object.exit180.thread, %tailrecurse.i182.preheader
  %.tr11.i181.lcssa = phi ptr [ %12, %tailrecurse.i182.preheader ], [ %12, %is_object.exit180.thread ], [ %72, %if.entry.i185 ]
  %memberidx6.i186 = getelementptr inbounds %ObjectType, ptr %.tr11.i181.lcssa, i64 0, i32 1
  %74 = load ptr, ptr %memberidx6.i186, align 8
  %memberidx.i.i187 = getelementptr inbounds %Program, ptr %64, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i187, align 8
  %76 = load i64, ptr %74, align 4
  %memberidx.i.i.i188 = getelementptr inbounds %Array_Module_, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i.i.i188, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i.i189 = getelementptr inbounds %Module, ptr %79, i64 0, i32 3
  %80 = load ptr, ptr %memberidx2.i.i189, align 8
  %memberidx3.i.i190 = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i.i190, align 4
  %memberidx.i5.i.i191 = getelementptr inbounds %Array_Class_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i5.i.i191, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx.i104 = getelementptr inbounds %Class, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i105, align 4
  %.not.i.i107 = icmp eq i64 %86, 6
  br i1 %.not.i.i107, label %is_buitin.exit114, label %ifend25

is_buitin.exit114:                                ; preds = %if.entry3.i192
  %memberidx2.i.i109 = getelementptr inbounds %string, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx2.i.i109, align 8
  %88 = tail call i64 @memcmp(ptr %87, ptr %65, i64 6)
  %89 = icmp eq i64 %88, 0
  %90 = load ptr, ptr %84, align 8
  %91 = load i64, ptr %90, align 4
  %92 = icmp eq i64 %91, 1
  %93 = and i1 %89, %92
  %94 = and i1 %52, %93
  br i1 %94, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %is_buitin.exit114
  %95 = load i64, ptr %7, align 4
  %96 = and i64 %95, -2
  %97 = icmp eq i64 %96, 8
  br i1 %97, label %if.entry26, label %else27

ifend25:                                          ; preds = %if.entry.i177, %is_object.exit180.thread, %if.entry3.i192, %is_buitin.exit114, %Array_Expression____sl__.exit
  %is_valid_cast.3 = phi i1 [ true, %Array_Expression____sl__.exit ], [ %spec.select, %is_buitin.exit114 ], [ %spec.select, %if.entry3.i192 ], [ %spec.select, %is_object.exit180.thread ], [ %spec.select, %if.entry.i177 ]
  %exp.0 = phi ptr [ %call.0, %Array_Expression____sl__.exit ], [ %5, %is_buitin.exit114 ], [ %5, %if.entry3.i192 ], [ %5, %is_object.exit180.thread ], [ %5, %if.entry.i177 ]
  %98 = load i64, ptr %7, align 4
  %99 = icmp eq i64 %98, 20
  br i1 %99, label %if.entry.i196, label %is_object.exit199

if.entry.i196:                                    ; preds = %ifend25, %if.entry.i196
  %.tr5.i194 = phi ptr [ %100, %if.entry.i196 ], [ %7, %ifend25 ]
  %memberidx1.i195 = getelementptr inbounds %GenericType, ptr %.tr5.i194, i64 0, i32 3
  %100 = load ptr, ptr %memberidx1.i195, align 8
  %101 = load i64, ptr %100, align 4
  %102 = icmp eq i64 %101, 20
  br i1 %102, label %if.entry.i196, label %is_object.exit199

is_object.exit199:                                ; preds = %if.entry.i196, %ifend25
  %.lcssa.i197 = phi i64 [ %98, %ifend25 ], [ %101, %if.entry.i196 ]
  %103 = icmp eq i64 %.lcssa.i197, 11
  %104 = load i64, ptr %12, align 4
  %105 = icmp eq i64 %104, 20
  br i1 %105, label %if.entry.i202, label %is_object.exit205

if.entry.i202:                                    ; preds = %is_object.exit199, %if.entry.i202
  %.tr5.i200 = phi ptr [ %106, %if.entry.i202 ], [ %12, %is_object.exit199 ]
  %memberidx1.i201 = getelementptr inbounds %GenericType, ptr %.tr5.i200, i64 0, i32 3
  %106 = load ptr, ptr %memberidx1.i201, align 8
  %107 = load i64, ptr %106, align 4
  %108 = icmp eq i64 %107, 20
  br i1 %108, label %if.entry.i202, label %is_object.exit205

is_object.exit205:                                ; preds = %if.entry.i202, %is_object.exit199
  %.lcssa.i203 = phi i64 [ %104, %is_object.exit199 ], [ %107, %if.entry.i202 ]
  %109 = icmp eq i64 %.lcssa.i203, 11
  %110 = and i1 %103, %109
  %111 = icmp eq i64 %98, 13
  %112 = icmp eq i64 %104, 13
  %113 = and i1 %111, %112
  %114 = icmp eq i64 %98, 0
  %115 = select i1 %114, i1 true, i1 %113
  %116 = select i1 %115, i1 true, i1 %110
  %spec.select163 = select i1 %116, i1 true, i1 %is_valid_cast.3
  br i1 %spec.select163, label %ifend46, label %if.entry44

if.entry26:                                       ; preds = %if.entry23
  %117 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %117, align 4
  %memberidx.i.i115 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i115, align 4
  %memberidx1.i.i116 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i116, align 1
  %memberidx.i117 = getelementptr inbounds %IntrinsicCall, ptr %117, i64 0, i32 4
  store i64 0, ptr %memberidx.i117, align 4
  %memberidx1.i118 = getelementptr inbounds %IntrinsicCall, ptr %117, i64 0, i32 5
  %118 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %118, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i, align 4
  %memberidx2.i.i119 = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 1
  %119 = tail call ptr @malloc(i32 64)
  store ptr %119, ptr %memberidx2.i.i119, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %118, ptr %memberidx1.i118, align 8
  %memberidx4.i121 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 3
  %120 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %120, align 4
  store ptr %120, ptr %memberidx4.i121, align 8
  br label %ifend28

else27:                                           ; preds = %if.entry23
  %121 = icmp slt i64 %95, 5
  %122 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %122, align 4
  %memberidx.i.i128 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i128, align 4
  %memberidx1.i.i129 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i129, align 1
  %memberidx.i130 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 4
  br i1 %121, label %if.entry31, label %else32

ifend28:                                          ; preds = %if.entry31, %else32, %if.entry26
  %123 = phi ptr [ %118, %if.entry26 ], [ %134, %if.entry31 ], [ %137, %else32 ]
  %call.0 = phi ptr [ %117, %if.entry26 ], [ %122, %if.entry31 ], [ %122, %else32 ]
  %memberidx.i122 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 2
  %124 = load i64, ptr %memberidx.i122, align 4
  %memberidx1.i123 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 3
  %125 = load i64, ptr %memberidx1.i123, align 4
  %.not.i = icmp slt i64 %124, %125
  br i1 %.not.i, label %ifend28.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend28.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend28
  %memberidx4.i126.phi.trans.insert = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 1
  %.pre227 = load ptr, ptr %memberidx4.i126.phi.trans.insert, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend28
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx1.i123, align 4
  %memberidx2.i.i125 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 1
  %127 = load ptr, ptr %memberidx2.i.i125, align 8
  %128 = shl i64 %125, 4
  %129 = tail call ptr @realloc(ptr %127, i64 %128)
  store ptr %129, ptr %memberidx2.i.i125, align 8
  %.pre226 = load i64, ptr %memberidx.i122, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend28.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %130 = phi ptr [ %.pre227, %ifend28.Array_Expression____sl__.exit_crit_edge ], [ %129, %if.entry.i ]
  %131 = phi i64 [ %124, %ifend28.Array_Expression____sl__.exit_crit_edge ], [ %.pre226, %if.entry.i ]
  %132 = add nsw i64 %131, 1
  store i64 %132, ptr %memberidx.i122, align 4
  %133 = getelementptr inbounds ptr, ptr %130, i64 %131
  store ptr %5, ptr %133, align 8
  br label %ifend25

if.entry31:                                       ; preds = %else27
  store i64 1, ptr %memberidx.i130, align 4
  %memberidx1.i131 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 5
  %134 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %134, align 8
  %memberidx.i7.i132 = getelementptr inbounds %Array_Expression_, ptr %134, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i132, align 4
  %memberidx1.i8.i133 = getelementptr inbounds %Array_Expression_, ptr %134, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %Array_Expression_, ptr %134, i64 0, i32 1
  %135 = tail call ptr @malloc(i32 64)
  store ptr %135, ptr %memberidx2.i.i134, align 8
  store i64 0, ptr %memberidx.i7.i132, align 4
  store ptr %134, ptr %memberidx1.i131, align 8
  %memberidx4.i136 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %136 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %136, align 4
  store ptr %136, ptr %memberidx4.i136, align 8
  br label %ifend28

else32:                                           ; preds = %else27
  store i64 2, ptr %memberidx.i130, align 4
  %memberidx1.i140 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 5
  %137 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %137, align 8
  %memberidx.i7.i141 = getelementptr inbounds %Array_Expression_, ptr %137, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i141, align 4
  %memberidx1.i8.i142 = getelementptr inbounds %Array_Expression_, ptr %137, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %Array_Expression_, ptr %137, i64 0, i32 1
  %138 = tail call ptr @malloc(i32 64)
  store ptr %138, ptr %memberidx2.i.i143, align 8
  store i64 0, ptr %memberidx.i7.i141, align 4
  store ptr %137, ptr %memberidx1.i140, align 8
  %memberidx4.i145 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %139 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %139, align 4
  store ptr %139, ptr %memberidx4.i145, align 8
  br label %ifend28

if.entry44:                                       ; preds = %is_object.exit205
  %140 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %141 = load ptr, ptr %140, align 8
  %memberidx47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %141, i64 0, i32 5
  %142 = load ptr, ptr %memberidx47, align 8
  %143 = tail call ptr %142(ptr nonnull %140)
  %144 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %7)
  %145 = load ptr, ptr %144, align 8
  %memberidx48 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %145, i64 0, i32 5
  %146 = load ptr, ptr %memberidx48, align 8
  %147 = tail call ptr %146(ptr nonnull %144)
  %148 = alloca ptr, align 8
  %149 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %148, ptr nonnull @188, ptr %143, ptr %147)
  %150 = load ptr, ptr %148, align 8
  %151 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %151, align 8
  %memberidx.i146 = getelementptr inbounds %string, ptr %151, i64 0, i32 1
  store ptr %150, ptr %memberidx.i146, align 8
  %memberidx1.i147 = getelementptr inbounds %string, ptr %151, i64 0, i32 2
  store i64 %149, ptr %memberidx1.i147, align 4
  %memberidx2.i148 = getelementptr inbounds %string, ptr %151, i64 0, i32 3
  store i64 %149, ptr %memberidx2.i148, align 4
  tail call void @free(ptr %143)
  tail call void @free(ptr %147)
  %152 = load ptr, ptr %1, align 8
  %153 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i150 = getelementptr inbounds %Compiler, ptr %153, i64 0, i32 6
  %154 = load ptr, ptr %memberidx1.i150, align 8
  %155 = call ptr @malloc(i32 24)
  store i64 5, ptr %155, align 4
  %memberidx1.i.i151 = getelementptr inbounds %FloError, ptr %155, i64 0, i32 2
  store ptr %152, ptr %memberidx1.i.i151, align 8
  %memberidx2.i.i152 = getelementptr inbounds %FloError, ptr %155, i64 0, i32 1
  store ptr %151, ptr %memberidx2.i.i152, align 8
  %memberidx.i.i153 = getelementptr inbounds %Array_FloError_, ptr %154, i64 0, i32 2
  %156 = load i64, ptr %memberidx.i.i153, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %154, i64 0, i32 3
  %157 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i154 = icmp slt i64 %156, %157
  br i1 %.not.i.i154, label %if.entry44.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry44.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry44
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %154, i64 0, i32 1
  %.pre229 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry44
  %158 = shl nuw i64 %157, 1
  store i64 %158, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %154, i64 0, i32 1
  %159 = load ptr, ptr %memberidx2.i.i.i, align 8
  %160 = shl i64 %157, 4
  %161 = call ptr @realloc(ptr %159, i64 %160)
  store ptr %161, ptr %memberidx2.i.i.i, align 8
  %.pre228 = load i64, ptr %memberidx.i.i153, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry44.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %162 = phi ptr [ %.pre229, %if.entry44.TypeChecker_error.exit_crit_edge ], [ %161, %if.entry.i.i ]
  %163 = phi i64 [ %156, %if.entry44.TypeChecker_error.exit_crit_edge ], [ %.pre228, %if.entry.i.i ]
  %164 = add nsw i64 %163, 1
  store i64 %164, ptr %memberidx.i.i153, align 4
  %165 = getelementptr inbounds ptr, ptr %162, i64 %163
  store ptr %155, ptr %165, align 8
  br label %common.ret

ifend46:                                          ; preds = %is_object.exit205
  %166 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %166, align 4
  %memberidx.i.i155 = getelementptr inbounds %Expression, ptr %166, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i155, align 4
  %memberidx1.i.i156 = getelementptr inbounds %Expression, ptr %166, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i156, align 1
  %memberidx.i157 = getelementptr inbounds %TypeCastExpression, ptr %166, i64 0, i32 4
  store ptr %exp.0, ptr %memberidx.i157, align 8
  %memberidx1.i158 = getelementptr inbounds %Expression, ptr %166, i64 0, i32 3
  store ptr %7, ptr %memberidx1.i158, align 8
  %memberidx3.i160 = getelementptr inbounds %Expression, ptr %exp.0, i64 0, i32 1
  %167 = load i1, ptr %memberidx3.i160, align 1
  store i1 %167, ptr %memberidx1.i.i156, align 1
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Expression__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Expression__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_Expression__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc ptr @TypeChecker_fill_in_call_args(ptr %0, ptr nocapture readonly %1, ptr readonly %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx3 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx3, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx4 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  %memberidx.i46 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %8 = phi ptr [ %5, %for.body.lr.ph ], [ %34, %Array_Expression____sl__.exit ]
  %9 = phi i64 [ 8, %for.body.lr.ph ], [ %35, %Array_Expression____sl__.exit ]
  %10 = phi i64 [ 0, %for.body.lr.ph ], [ %36, %Array_Expression____sl__.exit ]
  %i.061 = phi i64 [ 0, %for.body.lr.ph ], [ %38, %Array_Expression____sl__.exit ]
  %11 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx5, align 4
  %13 = icmp sgt i64 %12, %i.061
  br i1 %13, label %true_block, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %14 = phi ptr [ %5, %for.entry ], [ %34, %Array_Expression____sl__.exit ]
  %15 = phi i64 [ 8, %for.entry ], [ %35, %Array_Expression____sl__.exit ]
  %16 = phi i64 [ 0, %for.entry ], [ %36, %Array_Expression____sl__.exit ]
  %.lcssa = phi i64 [ %6, %for.entry ], [ %39, %Array_Expression____sl__.exit ]
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i43, align 8
  %memberidx2.i44 = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i44, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = icmp eq ptr %2, null
  %22 = or i1 %21, %20
  br i1 %22, label %common.ret, label %ifend

true_block:                                       ; preds = %for.body
  %memberidx.i45 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i45, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %i.061
  %25 = load ptr, ptr %24, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %26 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %26, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %25, %true_block ], [ %26, %false_block ]
  %27 = load ptr, ptr %memberidx.i46, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %i.061
  %29 = load ptr, ptr %28, align 8
  %30 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %29)
  %.not.i = icmp slt i64 %10, %9
  br i1 %.not.i, label %Array_Expression____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %end
  %31 = shl nuw i64 %9, 1
  store i64 %31, ptr %memberidx1.i, align 4
  %32 = shl i64 %9, 4
  %33 = tail call ptr @realloc(ptr %8, i64 %32)
  store ptr %33, ptr %memberidx2.i, align 8
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %end, %if.entry.i
  %34 = phi ptr [ %8, %end ], [ %33, %if.entry.i ]
  %35 = phi i64 [ %9, %end ], [ %31, %if.entry.i ]
  %36 = add nuw nsw i64 %10, 1
  store i64 %36, ptr %memberidx.i, align 4
  %37 = getelementptr inbounds ptr, ptr %34, i64 %10
  store ptr %30, ptr %37, align 8
  %38 = add nuw nsw i64 %i.061, 1
  %39 = load i64, ptr %memberidx3, align 4
  %40 = icmp slt i64 %38, %39
  br i1 %40, label %for.body, label %for.end

common.ret:                                       ; preds = %ifend22, %ifend, %for.end
  ret ptr %4

ifend:                                            ; preds = %for.end
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 2
  %41 = load i64, ptr %memberidx7, align 4
  %42 = icmp sgt i64 %41, %.lcssa
  br i1 %42, label %for.body15.lr.ph, label %common.ret

for.body15.lr.ph:                                 ; preds = %ifend
  %memberidx.i49 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 1
  br label %for.body15

for.body15:                                       ; preds = %for.body15.lr.ph, %ifend22
  %43 = phi i64 [ %41, %for.body15.lr.ph ], [ %59, %ifend22 ]
  %44 = phi ptr [ %14, %for.body15.lr.ph ], [ %60, %ifend22 ]
  %45 = phi ptr [ %14, %for.body15.lr.ph ], [ %61, %ifend22 ]
  %46 = phi i64 [ %15, %for.body15.lr.ph ], [ %62, %ifend22 ]
  %47 = phi i64 [ %16, %for.body15.lr.ph ], [ %63, %ifend22 ]
  %i1.060 = phi i64 [ %.lcssa, %for.body15.lr.ph ], [ %64, %ifend22 ]
  %48 = load ptr, ptr %memberidx.i49, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %i1.060
  %50 = load ptr, ptr %49, align 8
  %memberidx19 = getelementptr inbounds %FunctionArg, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx19, align 8
  %.not = icmp eq ptr %51, null
  br i1 %.not, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %for.body15
  %.not.i52 = icmp slt i64 %47, %46
  br i1 %.not.i52, label %Array_Expression____sl__.exit57, label %if.entry.i55

if.entry.i55:                                     ; preds = %if.entry20
  %52 = shl nuw i64 %46, 1
  store i64 %52, ptr %memberidx1.i, align 4
  %53 = shl i64 %46, 4
  %54 = tail call ptr @realloc(ptr %45, i64 %53)
  store ptr %54, ptr %memberidx2.i, align 8
  br label %Array_Expression____sl__.exit57

Array_Expression____sl__.exit57:                  ; preds = %if.entry20, %if.entry.i55
  %55 = phi ptr [ %44, %if.entry20 ], [ %54, %if.entry.i55 ]
  %56 = phi i64 [ %46, %if.entry20 ], [ %52, %if.entry.i55 ]
  %57 = add nsw i64 %47, 1
  store i64 %57, ptr %memberidx.i, align 4
  %58 = getelementptr inbounds ptr, ptr %55, i64 %47
  store ptr %51, ptr %58, align 8
  %.pre = load i64, ptr %memberidx7, align 4
  br label %ifend22

ifend22:                                          ; preds = %for.body15, %Array_Expression____sl__.exit57
  %59 = phi i64 [ %43, %for.body15 ], [ %.pre, %Array_Expression____sl__.exit57 ]
  %60 = phi ptr [ %44, %for.body15 ], [ %55, %Array_Expression____sl__.exit57 ]
  %61 = phi ptr [ %45, %for.body15 ], [ %55, %Array_Expression____sl__.exit57 ]
  %62 = phi i64 [ %46, %for.body15 ], [ %56, %Array_Expression____sl__.exit57 ]
  %63 = phi i64 [ %47, %for.body15 ], [ %57, %Array_Expression____sl__.exit57 ]
  %64 = add nsw i64 %i1.060, 1
  %65 = icmp slt i64 %64, %59
  br i1 %65, label %for.body15, label %common.ret
}

define internal fastcc void @TypeChecker_add_inherited_props_to_class(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry.i129, label %is_object.exit

if.entry.i129:                                    ; preds = %3, %if.entry.i129
  %.tr5.i = phi ptr [ %7, %if.entry.i129 ], [ %4, %3 ]
  %memberidx1.i128 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1.i128, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 20
  br i1 %9, label %if.entry.i129, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i129, %3
  %.lcssa.i = phi i64 [ %5, %3 ], [ %8, %if.entry.i129 ]
  %10 = icmp eq i64 %.lcssa.i, 11
  br i1 %10, label %ifend, label %if.entry

if.entry:                                         ; preds = %is_object.exit
  %11 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %12 = load ptr, ptr %11, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %12, i64 0, i32 5
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = tail call ptr %13(ptr nonnull %11)
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @154, ptr %14)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %14)
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 2
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = load ptr, ptr %19, align 8
  %memberidx.i59 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i59, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1.i60, align 8
  %23 = call ptr @malloc(i32 24)
  store i64 5, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 2
  store ptr %20, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 3
  %25 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %24, %25
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %.pre158 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i.i, align 8
  %28 = shl i64 %25, 4
  %29 = call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %30 = phi ptr [ %.pre158, %if.entry.TypeChecker_error.exit_crit_edge ], [ %29, %if.entry.i.i ]
  %31 = phi i64 [ %24, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i, align 4
  %33 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %23, ptr %33, align 8
  %.pre159 = load i64, ptr %4, align 4
  br label %ifend

ifend:                                            ; preds = %is_object.exit, %TypeChecker_error.exit
  %34 = phi i64 [ %5, %is_object.exit ], [ %.pre159, %TypeChecker_error.exit ]
  %35 = load ptr, ptr %0, align 8
  %switch152 = icmp eq i64 %34, 20
  br i1 %switch152, label %if.entry.i133, label %if.entry3.i

if.entry.i133:                                    ; preds = %ifend, %if.entry.i133
  %.tr11.i153 = phi ptr [ %36, %if.entry.i133 ], [ %4, %ifend ]
  %memberidx1.i132 = getelementptr inbounds %GenericType, ptr %.tr11.i153, i64 0, i32 3
  %36 = load ptr, ptr %memberidx1.i132, align 8
  %37 = load i64, ptr %36, align 4
  %switch = icmp eq i64 %37, 20
  br i1 %switch, label %if.entry.i133, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i133, %ifend
  %.tr11.i.lcssa = phi ptr [ %4, %ifend ], [ %36, %if.entry.i133 ]
  %memberidx6.i134 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %38 = load ptr, ptr %memberidx6.i134, align 8
  %memberidx.i.i135 = getelementptr inbounds %Program, ptr %35, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i.i135, align 8
  %40 = load i64, ptr %38, align 4
  %memberidx.i.i.i136 = getelementptr inbounds %Array_Module_, ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %memberidx.i.i.i136, align 8
  %42 = getelementptr inbounds ptr, ptr %41, i64 %40
  %43 = load ptr, ptr %42, align 8
  %memberidx2.i.i137 = getelementptr inbounds %Module, ptr %43, i64 0, i32 3
  %44 = load ptr, ptr %memberidx2.i.i137, align 8
  %memberidx3.i.i138 = getelementptr inbounds %TypeId, ptr %38, i64 0, i32 2
  %45 = load i64, ptr %memberidx3.i.i138, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i5.i.i, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %45
  %48 = load ptr, ptr %47, align 8
  %memberidx5 = getelementptr inbounds %Class, ptr %48, i64 0, i32 6
  %49 = load ptr, ptr %memberidx5, align 8
  %50 = call ptr @malloc(i32 25)
  %51 = load ptr, ptr %49, align 8
  %memberidx1.i61 = getelementptr inbounds %Map_string_PropId_, ptr %49, i64 0, i32 1
  %52 = load i64, ptr %memberidx1.i61, align 4
  %memberidx2.i62 = getelementptr inbounds %Map_string_PropId_, ptr %49, i64 0, i32 2
  %53 = load i64, ptr %memberidx2.i62, align 4
  store i1 false, ptr %50, align 1
  %memberidx1.i.i63 = getelementptr inbounds %MapIterator_string_PropId_, ptr %50, i64 0, i32 1
  store ptr %51, ptr %memberidx1.i.i63, align 8
  %memberidx2.i.i64 = getelementptr inbounds %MapIterator_string_PropId_, ptr %50, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %50, i64 0, i32 3
  store i64 %53, ptr %memberidx3.i.i, align 4
  %54 = add nsw i64 %52, -1
  store i64 %54, ptr %memberidx2.i.i64, align 4
  %55 = icmp sgt i64 %52, 0
  br i1 %55, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %if.entry3.i, %ifend.i
  %56 = phi i64 [ %59, %ifend.i ], [ %54, %if.entry3.i ]
  %57 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %51, %if.entry3.i ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %57, i64 1
  %58 = load ptr, ptr %57, align 8
  %.not.i = icmp eq ptr %58, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %59 = add nsw i64 %56, -1
  store i64 %59, ptr %memberidx2.i.i64, align 4
  %60 = icmp sgt i64 %56, 0
  br i1 %60, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %61 = phi i64 [ %59, %ifend.i ], [ %56, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i63, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %if.entry3.i
  %62 = phi i64 [ %61, %MapIterator_string_PropId__next.exit.loopexit ], [ %54, %if.entry3.i ]
  %memberidx1.i.i63.promoted149 = phi ptr [ %incdec.ptr.i, %MapIterator_string_PropId__next.exit.loopexit ], [ %51, %if.entry3.i ]
  %storemerge146 = icmp slt i64 %53, 1
  br i1 %storemerge146, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit
  %memberidx10 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx26 = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %memberidx32 = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit81
  %63 = phi i64 [ %62, %for.body.lr.ph ], [ %144, %MapIterator_string_PropId__next.exit81 ]
  %incdec.ptr.i75.lcssa151 = phi ptr [ %memberidx1.i.i63.promoted149, %for.body.lr.ph ], [ %incdec.ptr.i75.lcssa150, %MapIterator_string_PropId__next.exit81 ]
  %storemerge143147.in = phi i64 [ %53, %for.body.lr.ph ], [ %storemerge143147, %MapIterator_string_PropId__next.exit81 ]
  %storemerge143147 = add nsw i64 %storemerge143147.in, -1
  %parent_entry_prop.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i75.lcssa151, i64 -1
  %parent_entry_prop.0 = load ptr, ptr %parent_entry_prop.0.in, align 8
  %64 = load ptr, ptr %parent_entry_prop.0, align 8
  %memberidx8 = getelementptr inbounds %MapEntry_string_PropId_, ptr %parent_entry_prop.0, i64 0, i32 1
  %65 = load ptr, ptr %memberidx8, align 8
  %66 = load ptr, ptr %0, align 8
  %memberidx.i.i67 = getelementptr inbounds %PropId, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i67, align 8
  %memberidx.i.i.i68 = getelementptr inbounds %Program, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i.i.i68, align 8
  %69 = load i64, ptr %67, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %69
  %72 = load ptr, ptr %71, align 8
  %memberidx2.i.i.i69 = getelementptr inbounds %Module, ptr %72, i64 0, i32 3
  %73 = load ptr, ptr %memberidx2.i.i.i69, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %67, i64 0, i32 2
  %74 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %78 = load i64, ptr %65, align 4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %if.entry.i, label %ifend.i72

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i70 = getelementptr inbounds %Class, ptr %77, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx2.i71 = getelementptr inbounds %PropId, ptr %65, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i71, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i12.i, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %84, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i72:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %77, i64 0, i32 4
  %85 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %65, i64 0, i32 2
  %86 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i11.i, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %89, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i72
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i72 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %90 = load ptr, ptr %memberidx10, align 8
  %91 = call fastcc i64 @Map_string_PropId__hash_fnc(ptr %64)
  %memberidx.i118 = getelementptr inbounds %Map_string_PropId_, ptr %90, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i118, align 4
  %93 = urem i64 %91, %92
  %94 = load ptr, ptr %90, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %.not.i119 = icmp eq ptr %96, null
  br i1 %.not.i119, label %Map_string_PropId____getitem__.exit, label %while.entry.i123.preheader

while.entry.i123.preheader:                       ; preds = %get_class_prop_type.exit
  %memberidx1.i.i121 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  %memberidx3.i.i125 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  br label %while.entry.i123

while.entry.i123:                                 ; preds = %while.entry.i123.preheader, %else.i
  %97 = phi ptr [ %107, %else.i ], [ %94, %while.entry.i123.preheader ]
  %98 = phi i64 [ %108, %else.i ], [ %92, %while.entry.i123.preheader ]
  %99 = phi ptr [ %112, %else.i ], [ %96, %while.entry.i123.preheader ]
  %hash.0.i = phi i64 [ %110, %else.i ], [ %93, %while.entry.i123.preheader ]
  %100 = load ptr, ptr %99, align 8
  %memberidx.i.i120 = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  %101 = load i64, ptr %memberidx.i.i120, align 4
  %102 = load i64, ptr %memberidx1.i.i121, align 4
  %.not.i.i122 = icmp eq i64 %101, %102
  br i1 %.not.i.i122, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i123
  %memberidx2.i.i124 = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  %103 = load ptr, ptr %memberidx2.i.i124, align 8
  %104 = load ptr, ptr %memberidx3.i.i125, align 8
  %105 = call i64 @memcmp(ptr %103, ptr %104, i64 %101)
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre161 = load i64, ptr %memberidx.i118, align 4
  %.pre162 = load ptr, ptr %90, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre163.pre = load ptr, ptr %90, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre163.pre, i64 %hash.0.i
  %.pre164.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre164.pre, null
  br i1 %.not25.i, label %Map_string_PropId____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i123
  %107 = phi ptr [ %.pre162, %ifend.i.i.else.i_crit_edge ], [ %97, %while.entry.i123 ]
  %108 = phi i64 [ %.pre161, %ifend.i.i.else.i_crit_edge ], [ %98, %while.entry.i123 ]
  %109 = add nuw i64 %hash.0.i, 1
  %110 = urem i64 %109, %108
  %111 = getelementptr inbounds ptr, ptr %107, i64 %110
  %112 = load ptr, ptr %111, align 8
  %.not26.i = icmp eq ptr %112, null
  br i1 %.not26.i, label %Map_string_PropId____getitem__.exit, label %while.entry.i123

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre164.pre, i64 0, i32 1
  %113 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_string_PropId____getitem__.exit

Map_string_PropId____getitem__.exit:              ; preds = %else.i, %get_class_prop_type.exit, %while.end.i, %if.entry7.i
  %common.ret.op.i126 = phi ptr [ %113, %if.entry7.i ], [ null, %while.end.i ], [ null, %get_class_prop_type.exit ], [ null, %else.i ]
  %114 = load ptr, ptr %0, align 8
  %115 = load ptr, ptr %memberidx.i.i67, align 8
  %memberidx.i.i.i101 = getelementptr inbounds %Program, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i.i.i101, align 8
  %117 = load i64, ptr %115, align 4
  %memberidx.i.i.i.i102 = getelementptr inbounds %Array_Module_, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i.i.i.i102, align 8
  %119 = getelementptr inbounds ptr, ptr %118, i64 %117
  %120 = load ptr, ptr %119, align 8
  %memberidx2.i.i.i103 = getelementptr inbounds %Module, ptr %120, i64 0, i32 3
  %121 = load ptr, ptr %memberidx2.i.i.i103, align 8
  %memberidx3.i.i.i104 = getelementptr inbounds %TypeId, ptr %115, i64 0, i32 2
  %122 = load i64, ptr %memberidx3.i.i.i104, align 4
  %memberidx.i5.i.i.i105 = getelementptr inbounds %Array_Class_, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i5.i.i.i105, align 8
  %124 = getelementptr inbounds ptr, ptr %123, i64 %122
  %125 = load ptr, ptr %124, align 8
  %126 = load i64, ptr %65, align 4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %if.entry.i94, label %ifend.i99

if.entry.i94:                                     ; preds = %Map_string_PropId____getitem__.exit
  %memberidx1.i108 = getelementptr inbounds %Class, ptr %125, i64 0, i32 5
  %128 = load ptr, ptr %memberidx1.i108, align 8
  %memberidx2.i109 = getelementptr inbounds %PropId, ptr %65, i64 0, i32 2
  %129 = load i64, ptr %memberidx2.i109, align 4
  %memberidx.i12.i110 = getelementptr inbounds %Array_ClassMethod_, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i12.i110, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  %memberidx3.i111 = getelementptr inbounds %ClassMethod, ptr %132, i64 0, i32 2
  %memberidx3.i93 = getelementptr inbounds %ClassMethod, ptr %132, i64 0, i32 1
  br label %is_class_prop_static.exit

ifend.i99:                                        ; preds = %Map_string_PropId____getitem__.exit
  %memberidx4.i113 = getelementptr inbounds %Class, ptr %125, i64 0, i32 4
  %133 = load ptr, ptr %memberidx4.i113, align 8
  %memberidx5.i114 = getelementptr inbounds %PropId, ptr %65, i64 0, i32 2
  %134 = load i64, ptr %memberidx5.i114, align 4
  %memberidx.i11.i115 = getelementptr inbounds %Array_ClassField_, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i11.i115, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  %memberidx6.i116 = getelementptr inbounds %ClassField, ptr %137, i64 0, i32 2
  %memberidx6.i98 = getelementptr inbounds %ClassField, ptr %137, i64 0, i32 1
  br label %is_class_prop_static.exit

is_class_prop_static.exit:                        ; preds = %if.entry.i94, %ifend.i99
  %common.ret.op.i107141.in = phi ptr [ %memberidx3.i111, %if.entry.i94 ], [ %memberidx6.i116, %ifend.i99 ]
  %common.ret.op.in.i88 = phi ptr [ %memberidx3.i93, %if.entry.i94 ], [ %memberidx6.i98, %ifend.i99 ]
  %common.ret.op.i89 = load i1, ptr %common.ret.op.in.i88, align 1
  br i1 %common.ret.op.i89, label %for.incr, label %ifend15

for.incr:                                         ; preds = %ifend31, %ifend15, %is_class_prop_static.exit
  %138 = add nsw i64 %63, -1
  store i64 %138, ptr %memberidx2.i.i64, align 4
  %139 = icmp sgt i64 %63, 0
  br i1 %139, label %while.entry.i77, label %MapIterator_string_PropId__next.exit81

while.entry.i77:                                  ; preds = %for.incr, %ifend.i80
  %140 = phi i64 [ %143, %ifend.i80 ], [ %138, %for.incr ]
  %141 = phi ptr [ %incdec.ptr.i75, %ifend.i80 ], [ %incdec.ptr.i75.lcssa151, %for.incr ]
  %incdec.ptr.i75 = getelementptr inbounds ptr, ptr %141, i64 1
  %142 = load ptr, ptr %141, align 8
  %.not.i76 = icmp eq ptr %142, null
  br i1 %.not.i76, label %ifend.i80, label %MapIterator_string_PropId__next.exit81

ifend.i80:                                        ; preds = %while.entry.i77
  %143 = add nsw i64 %140, -1
  store i64 %143, ptr %memberidx2.i.i64, align 4
  %.not171 = icmp eq i64 %140, 0
  br i1 %.not171, label %MapIterator_string_PropId__next.exit81, label %while.entry.i77

MapIterator_string_PropId__next.exit81:           ; preds = %while.entry.i77, %ifend.i80, %for.incr
  %144 = phi i64 [ %138, %for.incr ], [ %140, %while.entry.i77 ], [ -1, %ifend.i80 ]
  %incdec.ptr.i75.lcssa150 = phi ptr [ %incdec.ptr.i75.lcssa151, %for.incr ], [ %incdec.ptr.i75, %ifend.i80 ], [ %incdec.ptr.i75, %while.entry.i77 ]
  %storemerge = icmp slt i64 %storemerge143147.in, 2
  br i1 %storemerge, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %MapIterator_string_PropId__next.exit81
  store ptr %incdec.ptr.i75.lcssa150, ptr %memberidx1.i.i63, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %MapIterator_string_PropId__next.exit
  tail call void @free(ptr nonnull %50)
  ret void

ifend15:                                          ; preds = %is_class_prop_static.exit
  %common.ret.op.i107141 = load i64, ptr %common.ret.op.i107141.in, align 4
  %145 = icmp ne i64 %common.ret.op.i107141, 1
  %146 = load i64, ptr %common.ret.op.i, align 4
  %147 = icmp ne i64 %146, 16
  %.not = or i1 %145, %147
  %148 = icmp eq ptr %common.ret.op.i126, null
  %or.cond = select i1 %.not, i1 %148, i1 false
  br i1 %or.cond, label %if.entry19, label %for.incr

if.entry19:                                       ; preds = %ifend15
  %149 = icmp eq i64 %126, 1
  br i1 %149, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %if.entry19
  %150 = load i64, ptr %memberidx26, align 4
  %151 = add nsw i64 %150, 1
  store i64 %151, ptr %memberidx26, align 4
  %.pre165 = load i64, ptr %65, align 4
  br label %ifend25

ifend25:                                          ; preds = %if.entry19, %if.entry23
  %152 = phi i64 [ %126, %if.entry19 ], [ %.pre165, %if.entry23 ]
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %if.entry29, label %ifend31

if.entry29:                                       ; preds = %ifend25
  %154 = load i64, ptr %memberidx32, align 4
  %155 = add nsw i64 %154, 1
  store i64 %155, ptr %memberidx32, align 4
  br label %ifend31

ifend31:                                          ; preds = %ifend25, %if.entry29
  %156 = load ptr, ptr %memberidx10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %156, ptr %64, ptr nonnull %65)
  br label %for.incr
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_MatchExpressionCase__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_MatchExpressionCase_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_MatchExpressionCase__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_MatchExpressionCase_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_MatchExpressionCase__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_MatchExpressionCase_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca %Type, align 8
  store i64 21, ptr %3, align 8
  %memberidx = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend13, %else12, %if.entry11, %2, %TypeChecker_error.exit270, %ifend77, %TypeChecker_error.exit255, %TypeChecker_error.exit240, %TypeChecker_error.exit215, %TypeChecker_error.exit200, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit200 ], [ null, %TypeChecker_error.exit215 ], [ null, %TypeChecker_error.exit240 ], [ null, %TypeChecker_error.exit255 ], [ %36, %ifend77 ], [ null, %TypeChecker_error.exit270 ], [ null, %2 ], [ null, %if.entry11 ], [ null, %else12 ], [ null, %ifend13 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx.i150 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx.i150, align 4
  %11 = icmp eq i64 %10, 5
  br i1 %11, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %12 = call ptr @malloc(i32 31)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %12, ptr noundef nonnull align 8 dereferenceable(31) @222, i64 31, i1 false)
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 31, ptr %memberidx2.i.i, align 4
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i152 = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 6
  %17 = load ptr, ptr %memberidx1.i152, align 8
  %18 = call ptr @malloc(i32 24)
  store i64 5, ptr %18, align 4
  %memberidx1.i.i153 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 2
  store ptr %15, ptr %memberidx1.i.i153, align 8
  %memberidx2.i.i154 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 1
  store ptr %13, ptr %memberidx2.i.i154, align 8
  %memberidx.i.i155 = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i.i155, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 3
  %20 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %19, %20
  br i1 %.not.i.i, label %if.entry3.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry3.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry3
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %.pre35 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry3
  %21 = shl nuw i64 %20, 1
  store i64 %21, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i.i, align 8
  %23 = shl i64 %20, 4
  %24 = call ptr @realloc(ptr %22, i64 %23)
  store ptr %24, ptr %memberidx2.i.i.i, align 8
  %.pre34 = load i64, ptr %memberidx.i.i155, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry3.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %25 = phi ptr [ %.pre35, %if.entry3.TypeChecker_error.exit_crit_edge ], [ %24, %if.entry.i.i ]
  %26 = phi i64 [ %19, %if.entry3.TypeChecker_error.exit_crit_edge ], [ %.pre34, %if.entry.i.i ]
  %27 = add nsw i64 %26, 1
  store i64 %27, ptr %memberidx.i.i155, align 4
  %28 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %18, ptr %28, align 8
  br label %common.ret

ifend5:                                           ; preds = %ifend
  %memberidx8 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %29 = load ptr, ptr %memberidx8, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 20
  br i1 %31, label %if.entry.i2, label %is_object.exit

if.entry.i2:                                      ; preds = %ifend5, %if.entry.i2
  %.tr5.i = phi ptr [ %32, %if.entry.i2 ], [ %29, %ifend5 ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %32 = load ptr, ptr %memberidx1.i1, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 20
  br i1 %34, label %if.entry.i2, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i2, %ifend5
  %.lcssa.i = phi i64 [ %30, %ifend5 ], [ %33, %if.entry.i2 ]
  %35 = icmp eq i64 %.lcssa.i, 11
  %36 = tail call ptr @malloc(i32 50)
  store i64 8, ptr %36, align 4
  %memberidx.i.i156 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i156, align 4
  %memberidx1.i.i157 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i157, align 1
  %memberidx.i158 = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 4
  store ptr %5, ptr %memberidx.i158, align 8
  %memberidx1.i159 = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 7
  store i1 %35, ptr %memberidx1.i159, align 1
  %memberidx2.i160 = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 5
  %37 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MatchExpressionCase_, ptr %37, align 8
  %memberidx.i9.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %37, i64 0, i32 2
  store i64 0, ptr %memberidx.i9.i, align 4
  %memberidx1.i10.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %37, i64 0, i32 3
  store i64 8, ptr %memberidx1.i10.i, align 4
  %memberidx2.i.i161 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %37, i64 0, i32 1
  %38 = call ptr @malloc(i32 64)
  store ptr %38, ptr %memberidx2.i.i161, align 8
  store i64 0, ptr %memberidx.i9.i, align 4
  store ptr %37, ptr %memberidx2.i160, align 8
  %memberidx5.i = getelementptr inbounds %MatchExpression, ptr %36, i64 0, i32 6
  store ptr null, ptr %memberidx5.i, align 8
  %memberidx9 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 4
  %39 = load ptr, ptr %memberidx9, align 8
  %40 = call ptr @malloc(i32 25)
  %memberidx.i162 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %memberidx.i162, align 8
  %memberidx1.i163 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %39, i64 0, i32 2
  %42 = load i64, ptr %memberidx1.i163, align 4
  %memberidx1.i.i164 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %40, i64 0, i32 1
  %memberidx2.i.i165 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %40, i64 0, i32 3
  store ptr %41, ptr %memberidx2.i.i165, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %40, i64 0, i32 2
  store i64 %42, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i164, align 4
  %43 = icmp slt i64 %42, 1
  %case.011 = load ptr, ptr %41, align 8
  store i1 %43, ptr %40, align 1
  br i1 %43, label %for.end, label %for.body

for.body:                                         ; preds = %is_object.exit, %Array_MatchExpressionCase____sl__.exit
  %44 = phi i64 [ %151, %Array_MatchExpressionCase____sl__.exit ], [ 1, %is_object.exit ]
  %case.013 = phi ptr [ %case.0, %Array_MatchExpressionCase____sl__.exit ], [ %case.011, %is_object.exit ]
  %result_type.012 = phi ptr [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ], [ %3, %is_object.exit ]
  br i1 %35, label %if.entry11, label %else12

for.end:                                          ; preds = %Array_MatchExpressionCase____sl__.exit, %is_object.exit
  %result_type.0.lcssa = phi ptr [ %3, %is_object.exit ], [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ]
  tail call void @free(ptr nonnull %40)
  %memberidx62 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 5
  %45 = load ptr, ptr %memberidx62, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %if.entry63, label %else64

if.entry11:                                       ; preds = %for.body
  %47 = alloca %BinaryExpressionNode, align 8
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load ptr, ptr %case.013, align 8
  %50 = load ptr, ptr %48, align 8
  %51 = load ptr, ptr %49, align 8
  %52 = call ptr @malloc(i32 32)
  %53 = load i64, ptr %50, align 4
  %memberidx1.i.i169 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 1
  %54 = load i64, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i.i170, align 4
  %memberidx3.i.i171 = getelementptr inbounds %FloRange, ptr %51, i64 0, i32 3
  %56 = load i64, ptr %memberidx3.i.i171, align 4
  store i64 %53, ptr %52, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %52, i64 0, i32 1
  store i64 %54, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i172 = getelementptr inbounds %FloRange, ptr %52, i64 0, i32 2
  store i64 %55, ptr %memberidx2.i.i.i172, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %52, i64 0, i32 3
  store i64 %56, ptr %memberidx3.i.i.i, align 4
  store ptr %52, ptr %47, align 8
  %memberidx.i.i.i173 = getelementptr inbounds %StatementNode, ptr %47, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i173, align 8
  %memberidx.i.i174 = getelementptr inbounds %ExpressionNode, ptr %47, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i174, align 8
  %memberidx2.i175 = getelementptr inbounds %BinaryExpressionNode, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i175, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %47, i64 0, i32 4
  store i64 11, ptr %memberidx3.i, align 8
  %memberidx4.i176 = getelementptr inbounds %BinaryExpressionNode, ptr %47, i64 0, i32 5
  store ptr %49, ptr %memberidx4.i176, align 8
  %57 = call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %5, ptr nonnull %47, ptr null)
  %58 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i178 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 6
  %59 = load ptr, ptr %memberidx1.i178, align 8
  %memberidx2.i179 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %60 = load i64, ptr %memberidx2.i179, align 4
  %61 = icmp sgt i64 %60, 0
  br i1 %61, label %common.ret, label %ifend18

else12:                                           ; preds = %for.body
  %62 = load ptr, ptr %memberidx8, align 8
  %63 = load ptr, ptr %case.013, align 8
  %64 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %62, ptr %63)
  %65 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i181 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i181, align 8
  %memberidx2.i182 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i182, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend31

ifend13:                                          ; preds = %ifend31, %ifend18
  %expression.0 = phi ptr [ %57, %ifend18 ], [ %64, %ifend31 ]
  %match_case_kind.0 = phi i64 [ 0, %ifend18 ], [ 1, %ifend31 ]
  %memberidx43 = getelementptr inbounds %MatchExpressionCaseNode, ptr %case.013, i64 0, i32 1
  %69 = load ptr, ptr %memberidx43, align 8
  %70 = call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %69, ptr null, i1 true)
  %71 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i184 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i184, align 8
  %memberidx2.i185 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %73 = load i64, ptr %memberidx2.i185, align 4
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %common.ret, label %ifend46

ifend18:                                          ; preds = %if.entry11
  %memberidx19 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 3
  %75 = load ptr, ptr %memberidx19, align 8
  %76 = load i64, ptr %75, align 4
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %ifend13, label %if.entry20

if.entry20:                                       ; preds = %ifend18
  %78 = load ptr, ptr %memberidx8, align 8
  %79 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %78)
  %80 = load ptr, ptr %79, align 8
  %memberidx24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx24, align 8
  %82 = call ptr %81(ptr nonnull %79)
  %83 = alloca ptr, align 8
  %84 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %83, ptr nonnull @223, ptr %82)
  %85 = load ptr, ptr %83, align 8
  %86 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %86, align 8
  %memberidx.i186 = getelementptr inbounds %string, ptr %86, i64 0, i32 1
  store ptr %85, ptr %memberidx.i186, align 8
  %memberidx1.i187 = getelementptr inbounds %string, ptr %86, i64 0, i32 2
  store i64 %84, ptr %memberidx1.i187, align 4
  %memberidx2.i188 = getelementptr inbounds %string, ptr %86, i64 0, i32 3
  store i64 %84, ptr %memberidx2.i188, align 4
  tail call void @free(ptr %82)
  %87 = load ptr, ptr %case.013, align 8
  %88 = load ptr, ptr %87, align 8
  %89 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i190 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 6
  %90 = load ptr, ptr %memberidx1.i190, align 8
  %91 = call ptr @malloc(i32 24)
  store i64 5, ptr %91, align 4
  %memberidx1.i.i191 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 2
  store ptr %88, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 1
  store ptr %86, ptr %memberidx2.i.i192, align 8
  %memberidx.i.i193 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i.i193, align 4
  %memberidx1.i2.i194 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 3
  %93 = load i64, ptr %memberidx1.i2.i194, align 4
  %.not.i.i195 = icmp slt i64 %92, %93
  br i1 %.not.i.i195, label %if.entry20.TypeChecker_error.exit200_crit_edge, label %if.entry.i.i198

if.entry20.TypeChecker_error.exit200_crit_edge:   ; preds = %if.entry20
  %memberidx4.i.i199.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %.pre25 = load ptr, ptr %memberidx4.i.i199.phi.trans.insert, align 8
  br label %TypeChecker_error.exit200

if.entry.i.i198:                                  ; preds = %if.entry20
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx1.i2.i194, align 4
  %memberidx2.i.i.i197 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i.i.i197, align 8
  %96 = shl i64 %93, 4
  %97 = call ptr @realloc(ptr %95, i64 %96)
  store ptr %97, ptr %memberidx2.i.i.i197, align 8
  %.pre24 = load i64, ptr %memberidx.i.i193, align 4
  br label %TypeChecker_error.exit200

TypeChecker_error.exit200:                        ; preds = %if.entry20.TypeChecker_error.exit200_crit_edge, %if.entry.i.i198
  %98 = phi ptr [ %.pre25, %if.entry20.TypeChecker_error.exit200_crit_edge ], [ %97, %if.entry.i.i198 ]
  %99 = phi i64 [ %92, %if.entry20.TypeChecker_error.exit200_crit_edge ], [ %.pre24, %if.entry.i.i198 ]
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr %memberidx.i.i193, align 4
  %101 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %91, ptr %101, align 8
  br label %common.ret

ifend31:                                          ; preds = %else12
  %102 = load ptr, ptr %memberidx8, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  %103 = load ptr, ptr %memberidx33, align 8
  %104 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %102, ptr %103)
  br i1 %104, label %ifend13, label %if.entry34

if.entry34:                                       ; preds = %ifend31
  %105 = load ptr, ptr %memberidx8, align 8
  %106 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %105)
  %107 = load ptr, ptr %106, align 8
  %memberidx38 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %107, i64 0, i32 5
  %108 = load ptr, ptr %memberidx38, align 8
  %109 = call ptr %108(ptr nonnull %106)
  %110 = load ptr, ptr %memberidx33, align 8
  %111 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %110)
  %112 = load ptr, ptr %111, align 8
  %memberidx40 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %112, i64 0, i32 5
  %113 = load ptr, ptr %memberidx40, align 8
  %114 = call ptr %113(ptr nonnull %111)
  %115 = alloca ptr, align 8
  %116 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %115, ptr nonnull @224, ptr %109, ptr %114)
  %117 = load ptr, ptr %115, align 8
  %118 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i201 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i201, align 8
  %memberidx1.i202 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 %116, ptr %memberidx1.i202, align 4
  %memberidx2.i203 = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 %116, ptr %memberidx2.i203, align 4
  tail call void @free(ptr %109)
  tail call void @free(ptr %114)
  %119 = load ptr, ptr %case.013, align 8
  %120 = load ptr, ptr %119, align 8
  %121 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i205 = getelementptr inbounds %Compiler, ptr %121, i64 0, i32 6
  %122 = load ptr, ptr %memberidx1.i205, align 8
  %123 = call ptr @malloc(i32 24)
  store i64 5, ptr %123, align 4
  %memberidx1.i.i206 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 2
  store ptr %120, ptr %memberidx1.i.i206, align 8
  %memberidx2.i.i207 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 1
  store ptr %118, ptr %memberidx2.i.i207, align 8
  %memberidx.i.i208 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %124 = load i64, ptr %memberidx.i.i208, align 4
  %memberidx1.i2.i209 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 3
  %125 = load i64, ptr %memberidx1.i2.i209, align 4
  %.not.i.i210 = icmp slt i64 %124, %125
  br i1 %.not.i.i210, label %if.entry34.TypeChecker_error.exit215_crit_edge, label %if.entry.i.i213

if.entry34.TypeChecker_error.exit215_crit_edge:   ; preds = %if.entry34
  %memberidx4.i.i214.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %.pre23 = load ptr, ptr %memberidx4.i.i214.phi.trans.insert, align 8
  br label %TypeChecker_error.exit215

if.entry.i.i213:                                  ; preds = %if.entry34
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx1.i2.i209, align 4
  %memberidx2.i.i.i212 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %127 = load ptr, ptr %memberidx2.i.i.i212, align 8
  %128 = shl i64 %125, 4
  %129 = call ptr @realloc(ptr %127, i64 %128)
  store ptr %129, ptr %memberidx2.i.i.i212, align 8
  %.pre = load i64, ptr %memberidx.i.i208, align 4
  br label %TypeChecker_error.exit215

TypeChecker_error.exit215:                        ; preds = %if.entry34.TypeChecker_error.exit215_crit_edge, %if.entry.i.i213
  %130 = phi ptr [ %.pre23, %if.entry34.TypeChecker_error.exit215_crit_edge ], [ %129, %if.entry.i.i213 ]
  %131 = phi i64 [ %124, %if.entry34.TypeChecker_error.exit215_crit_edge ], [ %.pre, %if.entry.i.i213 ]
  %132 = add nsw i64 %131, 1
  store i64 %132, ptr %memberidx.i.i208, align 4
  %133 = getelementptr inbounds ptr, ptr %130, i64 %131
  store ptr %123, ptr %133, align 8
  br label %common.ret

ifend46:                                          ; preds = %ifend13
  %memberidx47 = getelementptr inbounds %Block, ptr %70, i64 0, i32 4
  %134 = load ptr, ptr %memberidx47, align 8
  %.not149 = icmp eq ptr %134, null
  br i1 %.not149, label %false_block, label %true_block

true_block:                                       ; preds = %ifend46
  %memberidx49 = getelementptr inbounds %Expression, ptr %134, i64 0, i32 3
  %135 = load ptr, ptr %memberidx49, align 8
  br label %end

false_block:                                      ; preds = %ifend46
  %136 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %136, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %135, %true_block ], [ %136, %false_block ]
  %137 = load i64, ptr %result_type.012, align 4
  %138 = icmp eq i64 %137, 21
  br i1 %138, label %ifend53, label %else52

else52:                                           ; preds = %end
  %139 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %result_type.012, ptr %ternary)
  br i1 %139, label %ifend53, label %if.entry54

ifend53:                                          ; preds = %end, %else52
  %result_type.1 = phi ptr [ %result_type.012, %else52 ], [ %ternary, %end ]
  %140 = tail call ptr @malloc(i32 24)
  store i64 %match_case_kind.0, ptr %140, align 4
  %memberidx1.i216 = getelementptr inbounds %MatchExpressionCase, ptr %140, i64 0, i32 1
  store ptr %expression.0, ptr %memberidx1.i216, align 8
  %memberidx2.i217 = getelementptr inbounds %MatchExpressionCase, ptr %140, i64 0, i32 2
  store ptr %70, ptr %memberidx2.i217, align 8
  %141 = load i64, ptr %memberidx.i9.i, align 4
  %142 = load i64, ptr %memberidx1.i10.i, align 4
  %.not.i = icmp slt i64 %141, %142
  br i1 %.not.i, label %ifend53.Array_MatchExpressionCase____sl__.exit_crit_edge, label %if.entry.i

ifend53.Array_MatchExpressionCase____sl__.exit_crit_edge: ; preds = %ifend53
  %.pre29 = load ptr, ptr %memberidx2.i.i161, align 8
  br label %Array_MatchExpressionCase____sl__.exit

if.entry.i:                                       ; preds = %ifend53
  %143 = shl nuw i64 %142, 1
  store i64 %143, ptr %memberidx1.i10.i, align 4
  %144 = load ptr, ptr %memberidx2.i.i161, align 8
  %145 = shl i64 %142, 4
  %146 = call ptr @realloc(ptr %144, i64 %145)
  store ptr %146, ptr %memberidx2.i.i161, align 8
  %.pre28 = load i64, ptr %memberidx.i9.i, align 4
  br label %Array_MatchExpressionCase____sl__.exit

Array_MatchExpressionCase____sl__.exit:           ; preds = %ifend53.Array_MatchExpressionCase____sl__.exit_crit_edge, %if.entry.i
  %147 = phi ptr [ %.pre29, %ifend53.Array_MatchExpressionCase____sl__.exit_crit_edge ], [ %146, %if.entry.i ]
  %148 = phi i64 [ %141, %ifend53.Array_MatchExpressionCase____sl__.exit_crit_edge ], [ %.pre28, %if.entry.i ]
  %149 = add nsw i64 %148, 1
  store i64 %149, ptr %memberidx.i9.i, align 4
  %150 = getelementptr inbounds ptr, ptr %147, i64 %148
  store ptr %140, ptr %150, align 8
  %151 = add nuw nsw i64 %44, 1
  store i64 %151, ptr %memberidx1.i.i164, align 4
  %152 = getelementptr inbounds ptr, ptr %41, i64 %44
  %153 = icmp sge i64 %44, %42
  %case.0 = load ptr, ptr %152, align 8
  store i1 %153, ptr %40, align 1
  br i1 %153, label %for.end, label %for.body

if.entry54:                                       ; preds = %else52
  %154 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %result_type.012)
  %155 = load ptr, ptr %154, align 8
  %memberidx57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %155, i64 0, i32 5
  %156 = load ptr, ptr %memberidx57, align 8
  %157 = call ptr %156(ptr nonnull %154)
  %158 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %159 = load ptr, ptr %158, align 8
  %memberidx58 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %159, i64 0, i32 5
  %160 = load ptr, ptr %memberidx58, align 8
  %161 = call ptr %160(ptr nonnull %158)
  %162 = alloca ptr, align 8
  %163 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %162, ptr nonnull @225, ptr %157, ptr %161)
  %164 = load ptr, ptr %162, align 8
  %165 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %165, align 8
  %memberidx.i226 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  store ptr %164, ptr %memberidx.i226, align 8
  %memberidx1.i227 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  store i64 %163, ptr %memberidx1.i227, align 4
  %memberidx2.i228 = getelementptr inbounds %string, ptr %165, i64 0, i32 3
  store i64 %163, ptr %memberidx2.i228, align 4
  tail call void @free(ptr %157)
  tail call void @free(ptr %161)
  %166 = load ptr, ptr %case.013, align 8
  %167 = load ptr, ptr %166, align 8
  %168 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i230 = getelementptr inbounds %Compiler, ptr %168, i64 0, i32 6
  %169 = load ptr, ptr %memberidx1.i230, align 8
  %170 = call ptr @malloc(i32 24)
  store i64 5, ptr %170, align 4
  %memberidx1.i.i231 = getelementptr inbounds %FloError, ptr %170, i64 0, i32 2
  store ptr %167, ptr %memberidx1.i.i231, align 8
  %memberidx2.i.i232 = getelementptr inbounds %FloError, ptr %170, i64 0, i32 1
  store ptr %165, ptr %memberidx2.i.i232, align 8
  %memberidx.i.i233 = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 2
  %171 = load i64, ptr %memberidx.i.i233, align 4
  %memberidx1.i2.i234 = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 3
  %172 = load i64, ptr %memberidx1.i2.i234, align 4
  %.not.i.i235 = icmp slt i64 %171, %172
  br i1 %.not.i.i235, label %if.entry54.TypeChecker_error.exit240_crit_edge, label %if.entry.i.i238

if.entry54.TypeChecker_error.exit240_crit_edge:   ; preds = %if.entry54
  %memberidx4.i.i239.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 1
  %.pre27 = load ptr, ptr %memberidx4.i.i239.phi.trans.insert, align 8
  br label %TypeChecker_error.exit240

if.entry.i.i238:                                  ; preds = %if.entry54
  %173 = shl nuw i64 %172, 1
  store i64 %173, ptr %memberidx1.i2.i234, align 4
  %memberidx2.i.i.i237 = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 1
  %174 = load ptr, ptr %memberidx2.i.i.i237, align 8
  %175 = shl i64 %172, 4
  %176 = call ptr @realloc(ptr %174, i64 %175)
  store ptr %176, ptr %memberidx2.i.i.i237, align 8
  %.pre26 = load i64, ptr %memberidx.i.i233, align 4
  br label %TypeChecker_error.exit240

TypeChecker_error.exit240:                        ; preds = %if.entry54.TypeChecker_error.exit240_crit_edge, %if.entry.i.i238
  %177 = phi ptr [ %.pre27, %if.entry54.TypeChecker_error.exit240_crit_edge ], [ %176, %if.entry.i.i238 ]
  %178 = phi i64 [ %171, %if.entry54.TypeChecker_error.exit240_crit_edge ], [ %.pre26, %if.entry.i.i238 ]
  %179 = add nsw i64 %178, 1
  store i64 %179, ptr %memberidx.i.i233, align 4
  %180 = getelementptr inbounds ptr, ptr %177, i64 %178
  store ptr %170, ptr %180, align 8
  br label %common.ret

if.entry63:                                       ; preds = %for.end
  %181 = call ptr @malloc(i32 55)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(55) %181, ptr noundef nonnull align 8 dereferenceable(55) @226, i64 55, i1 false)
  %182 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %182, align 8
  %memberidx.i.i241 = getelementptr inbounds %string, ptr %182, i64 0, i32 1
  store ptr %181, ptr %memberidx.i.i241, align 8
  %memberidx1.i.i242 = getelementptr inbounds %string, ptr %182, i64 0, i32 2
  store i64 55, ptr %memberidx1.i.i242, align 4
  %memberidx2.i.i243 = getelementptr inbounds %string, ptr %182, i64 0, i32 3
  store i64 55, ptr %memberidx2.i.i243, align 4
  %183 = load ptr, ptr %1, align 8
  %184 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i245 = getelementptr inbounds %Compiler, ptr %184, i64 0, i32 6
  %185 = load ptr, ptr %memberidx1.i245, align 8
  %186 = call ptr @malloc(i32 24)
  store i64 4, ptr %186, align 4
  %memberidx1.i.i246 = getelementptr inbounds %FloError, ptr %186, i64 0, i32 2
  store ptr %183, ptr %memberidx1.i.i246, align 8
  %memberidx2.i.i247 = getelementptr inbounds %FloError, ptr %186, i64 0, i32 1
  store ptr %182, ptr %memberidx2.i.i247, align 8
  %memberidx.i.i248 = getelementptr inbounds %Array_FloError_, ptr %185, i64 0, i32 2
  %187 = load i64, ptr %memberidx.i.i248, align 4
  %memberidx1.i2.i249 = getelementptr inbounds %Array_FloError_, ptr %185, i64 0, i32 3
  %188 = load i64, ptr %memberidx1.i2.i249, align 4
  %.not.i.i250 = icmp slt i64 %187, %188
  br i1 %.not.i.i250, label %if.entry63.TypeChecker_error.exit255_crit_edge, label %if.entry.i.i253

if.entry63.TypeChecker_error.exit255_crit_edge:   ; preds = %if.entry63
  %memberidx4.i.i254.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %185, i64 0, i32 1
  %.pre33 = load ptr, ptr %memberidx4.i.i254.phi.trans.insert, align 8
  br label %TypeChecker_error.exit255

if.entry.i.i253:                                  ; preds = %if.entry63
  %189 = shl nuw i64 %188, 1
  store i64 %189, ptr %memberidx1.i2.i249, align 4
  %memberidx2.i.i.i252 = getelementptr inbounds %Array_FloError_, ptr %185, i64 0, i32 1
  %190 = load ptr, ptr %memberidx2.i.i.i252, align 8
  %191 = shl i64 %188, 4
  %192 = call ptr @realloc(ptr %190, i64 %191)
  store ptr %192, ptr %memberidx2.i.i.i252, align 8
  %.pre32 = load i64, ptr %memberidx.i.i248, align 4
  br label %TypeChecker_error.exit255

TypeChecker_error.exit255:                        ; preds = %if.entry63.TypeChecker_error.exit255_crit_edge, %if.entry.i.i253
  %193 = phi ptr [ %.pre33, %if.entry63.TypeChecker_error.exit255_crit_edge ], [ %192, %if.entry.i.i253 ]
  %194 = phi i64 [ %187, %if.entry63.TypeChecker_error.exit255_crit_edge ], [ %.pre32, %if.entry.i.i253 ]
  %195 = add nsw i64 %194, 1
  store i64 %195, ptr %memberidx.i.i248, align 4
  %196 = getelementptr inbounds ptr, ptr %193, i64 %194
  store ptr %186, ptr %196, align 8
  br label %common.ret

else64:                                           ; preds = %for.end
  %197 = call fastcc ptr @TypeChecker_check_block(ptr %0, ptr nonnull %45, ptr null, i1 true)
  %memberidx71 = getelementptr inbounds %Block, ptr %197, i64 0, i32 4
  %198 = load ptr, ptr %memberidx71, align 8
  %.not = icmp eq ptr %198, null
  br i1 %.not, label %false_block69, label %true_block68

true_block68:                                     ; preds = %else64
  %memberidx73 = getelementptr inbounds %Expression, ptr %198, i64 0, i32 3
  %199 = load ptr, ptr %memberidx73, align 8
  br label %end70

false_block69:                                    ; preds = %else64
  %200 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %200, align 4
  br label %end70

end70:                                            ; preds = %false_block69, %true_block68
  %ternary74 = phi ptr [ %199, %true_block68 ], [ %200, %false_block69 ]
  %201 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %result_type.0.lcssa, ptr %ternary74)
  br i1 %201, label %ifend77, label %if.entry75

if.entry75:                                       ; preds = %end70
  %202 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %result_type.0.lcssa)
  %203 = load ptr, ptr %202, align 8
  %memberidx78 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %203, i64 0, i32 5
  %204 = load ptr, ptr %memberidx78, align 8
  %205 = call ptr %204(ptr nonnull %202)
  %206 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %ternary74)
  %207 = load ptr, ptr %206, align 8
  %memberidx79 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %207, i64 0, i32 5
  %208 = load ptr, ptr %memberidx79, align 8
  %209 = call ptr %208(ptr nonnull %206)
  %210 = alloca ptr, align 8
  %211 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %210, ptr nonnull @227, ptr %205, ptr %209)
  %212 = load ptr, ptr %210, align 8
  %213 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %213, align 8
  %memberidx.i256 = getelementptr inbounds %string, ptr %213, i64 0, i32 1
  store ptr %212, ptr %memberidx.i256, align 8
  %memberidx1.i257 = getelementptr inbounds %string, ptr %213, i64 0, i32 2
  store i64 %211, ptr %memberidx1.i257, align 4
  %memberidx2.i258 = getelementptr inbounds %string, ptr %213, i64 0, i32 3
  store i64 %211, ptr %memberidx2.i258, align 4
  tail call void @free(ptr %205)
  tail call void @free(ptr %209)
  %214 = load ptr, ptr %1, align 8
  %215 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i260 = getelementptr inbounds %Compiler, ptr %215, i64 0, i32 6
  %216 = load ptr, ptr %memberidx1.i260, align 8
  %217 = call ptr @malloc(i32 24)
  store i64 5, ptr %217, align 4
  %memberidx1.i.i261 = getelementptr inbounds %FloError, ptr %217, i64 0, i32 2
  store ptr %214, ptr %memberidx1.i.i261, align 8
  %memberidx2.i.i262 = getelementptr inbounds %FloError, ptr %217, i64 0, i32 1
  store ptr %213, ptr %memberidx2.i.i262, align 8
  %memberidx.i.i263 = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 2
  %218 = load i64, ptr %memberidx.i.i263, align 4
  %memberidx1.i2.i264 = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 3
  %219 = load i64, ptr %memberidx1.i2.i264, align 4
  %.not.i.i265 = icmp slt i64 %218, %219
  br i1 %.not.i.i265, label %if.entry75.TypeChecker_error.exit270_crit_edge, label %if.entry.i.i268

if.entry75.TypeChecker_error.exit270_crit_edge:   ; preds = %if.entry75
  %memberidx4.i.i269.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 1
  %.pre31 = load ptr, ptr %memberidx4.i.i269.phi.trans.insert, align 8
  br label %TypeChecker_error.exit270

if.entry.i.i268:                                  ; preds = %if.entry75
  %220 = shl nuw i64 %219, 1
  store i64 %220, ptr %memberidx1.i2.i264, align 4
  %memberidx2.i.i.i267 = getelementptr inbounds %Array_FloError_, ptr %216, i64 0, i32 1
  %221 = load ptr, ptr %memberidx2.i.i.i267, align 8
  %222 = shl i64 %219, 4
  %223 = call ptr @realloc(ptr %221, i64 %222)
  store ptr %223, ptr %memberidx2.i.i.i267, align 8
  %.pre30 = load i64, ptr %memberidx.i.i263, align 4
  br label %TypeChecker_error.exit270

TypeChecker_error.exit270:                        ; preds = %if.entry75.TypeChecker_error.exit270_crit_edge, %if.entry.i.i268
  %224 = phi ptr [ %.pre31, %if.entry75.TypeChecker_error.exit270_crit_edge ], [ %223, %if.entry.i.i268 ]
  %225 = phi i64 [ %218, %if.entry75.TypeChecker_error.exit270_crit_edge ], [ %.pre30, %if.entry.i.i268 ]
  %226 = add nsw i64 %225, 1
  store i64 %226, ptr %memberidx.i.i263, align 4
  %227 = getelementptr inbounds ptr, ptr %224, i64 %225
  store ptr %217, ptr %227, align 8
  br label %common.ret

ifend77:                                          ; preds = %end70
  store ptr %197, ptr %memberidx5.i, align 8
  %memberidx82 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 3
  store ptr %result_type.0.lcssa, ptr %memberidx82, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_access(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %PropId, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 3
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %4, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i5.i.i, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %15 = tail call ptr @malloc(i32 0)
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i57 = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i57, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %17 = load i64, ptr %1, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx2 = getelementptr inbounds %Class, ptr %14, i64 0, i32 5
  %19 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %20 = load i64, ptr %memberidx3, align 4
  %memberidx.i59 = getelementptr inbounds %Array_ClassMethod_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i59, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 2
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 3
  br label %ifend

else:                                             ; preds = %2
  %memberidx6 = getelementptr inbounds %Class, ptr %14, i64 0, i32 4
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %25 = load i64, ptr %memberidx7, align 4
  %memberidx.i60 = getelementptr inbounds %Array_ClassField_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i60, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx8 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 2
  %memberidx9 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 3
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %visibility.0.in = phi ptr [ %memberidx4, %if.entry ], [ %memberidx8, %else ]
  %member_name.0.in = phi ptr [ %memberidx5, %if.entry ], [ %memberidx9, %else ]
  %member_name.0 = load ptr, ptr %member_name.0.in, align 8
  %visibility.0 = load i64, ptr %visibility.0.in, align 4
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %29, null
  br i1 %.not, label %else12, label %if.entry11

if.entry11:                                       ; preds = %ifend
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %14, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp ne i64 %30, %32
  %memberidx19 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %34 = load i64, ptr %memberidx19, align 4
  %memberidx21 = getelementptr inbounds %TypeId, ptr %29, i64 0, i32 2
  %35 = load i64, ptr %memberidx21, align 4
  %36 = icmp ne i64 %34, %35
  %37 = or i1 %33, %36
  %38 = icmp eq i64 %visibility.0, 1
  %or.cond = select i1 %37, i1 %38, i1 false
  br i1 %or.cond, label %if.entry25, label %common.ret

else12:                                           ; preds = %ifend
  %.not55 = icmp eq i64 %visibility.0, 2
  br i1 %.not55, label %common.ret, label %if.entry31

common.ret.sink.split:                            ; preds = %if.entry25, %dump_access.exit
  %.sink68 = phi ptr [ %58, %dump_access.exit ], [ %41, %if.entry25 ]
  %.sink = phi ptr [ %62, %dump_access.exit ], [ %45, %if.entry25 ]
  %common.ret.op.ph = phi ptr [ %66, %dump_access.exit ], [ %49, %if.entry25 ]
  tail call void @free(ptr %.sink68)
  tail call void @free(ptr %.sink)
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %else12, %if.entry11
  %common.ret.op = phi ptr [ null, %if.entry11 ], [ null, %else12 ], [ %common.ret.op.ph, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry25:                                       ; preds = %if.entry11
  %39 = load ptr, ptr %member_name.0, align 8
  %memberidx28 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i64 0, i32 5
  %40 = load ptr, ptr %memberidx28, align 8
  %41 = tail call ptr %40(ptr nonnull %member_name.0)
  %memberidx29 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %42 = load ptr, ptr %memberidx29, align 8
  %43 = load ptr, ptr %42, align 8
  %memberidx30 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %43, i64 0, i32 5
  %44 = load ptr, ptr %memberidx30, align 8
  %45 = tail call ptr %44(ptr nonnull %42)
  %46 = alloca ptr, align 8
  %47 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %46, ptr nonnull @195, ptr %41, ptr %45)
  %48 = load ptr, ptr %46, align 8
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i61 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i61, align 8
  %memberidx1.i62 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 %47, ptr %memberidx1.i62, align 4
  %memberidx2.i63 = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 %47, ptr %memberidx2.i63, align 4
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %else12
  %50 = load ptr, ptr %member_name.0, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %50, i64 0, i32 5
  %51 = load ptr, ptr %memberidx34, align 8
  %52 = tail call ptr %51(ptr nonnull %member_name.0)
  %53 = icmp eq i64 %visibility.0, 1
  br i1 %53, label %if.entry.i, label %ifend3.i

if.entry.i:                                       ; preds = %if.entry31
  %54 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %54, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry31
  %55 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %55, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i, %ifend3.i
  %.sink73 = phi ptr [ %54, %if.entry.i ], [ %55, %ifend3.i ]
  %.sink71 = phi i64 [ 7, %if.entry.i ], [ 9, %ifend3.i ]
  %56 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %56, align 8
  %memberidx.i.i.i64 = getelementptr inbounds %string, ptr %56, i64 0, i32 1
  store ptr %.sink73, ptr %memberidx.i.i.i64, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %56, i64 0, i32 2
  store i64 %.sink71, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %56, i64 0, i32 3
  store i64 %.sink71, ptr %memberidx2.i.i.i, align 4
  %57 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %58 = tail call ptr %57(ptr nonnull %56)
  %memberidx36 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %59 = load ptr, ptr %memberidx36, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %60, i64 0, i32 5
  %61 = load ptr, ptr %memberidx37, align 8
  %62 = tail call ptr %61(ptr nonnull %59)
  %63 = alloca ptr, align 8
  %64 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %63, ptr nonnull @196, ptr %52, ptr %58, ptr %62)
  %65 = load ptr, ptr %63, align 8
  %66 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i56 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i56, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 %64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 %64, ptr %memberidx2.i, align 4
  tail call void @free(ptr %52)
  br label %common.ret.sink.split
}

define internal fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ReturnStatementNode, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %4, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %5 = load ptr, ptr %0, align 8
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = load i64, ptr %4, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %if.entry.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 5
  %19 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i12.i.i, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i.i:                                        ; preds = %if.entry.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 4
  %24 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %25 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i11.i.i, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i:                                          ; preds = %2
  %memberidx.i.i7.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %29 = load ptr, ptr %memberidx.i.i7.i, align 8
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %31, i64 0, i32 1
  %32 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i8.i = getelementptr inbounds %Array_Module_, ptr %32, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i.i.i8.i, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %30
  %35 = load ptr, ptr %34, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i9.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %memberidx1.i9.i, align 8
  %memberidx2.i10.i = getelementptr inbounds %VarId, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i10.i, align 4
  %memberidx.i4.i.i = getelementptr inbounds %Array_Function_, ptr %36, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i4.i.i, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx3.i = getelementptr inbounds %Function, ptr %41, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

TypeChecker_get_current_function_type.exit:       ; preds = %if.entry.i.i, %ifend.i.i, %ifend.i
  %common.ret.op.i.in = phi ptr [ %memberidx3.i, %ifend.i ], [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.i.in, align 8
  %memberidx1 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 2
  %42 = load ptr, ptr %memberidx1, align 8
  %43 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %43, align 4
  %memberidx.i36 = getelementptr inbounds %ReturnStatement, ptr %43, i64 0, i32 1
  store ptr null, ptr %memberidx.i36, align 8
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %TypeChecker_get_current_function_type.exit
  %44 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %42, ptr nonnull %3)
  %memberidx.i37 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 6
  %46 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i, align 4
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %common.ret, label %ifend4

else:                                             ; preds = %TypeChecker_get_current_function_type.exit
  %49 = load i64, ptr %42, align 4
  %.not35 = icmp eq i64 %49, 10
  br i1 %.not35, label %common.ret, label %if.entry15

common.ret:                                       ; preds = %ifend8, %else, %if.entry, %TypeChecker_error.exit63, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit63 ], [ null, %if.entry ], [ %43, %else ], [ %43, %ifend8 ]
  ret ptr %common.ret.op

ifend4:                                           ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 3
  %50 = load ptr, ptr %memberidx5, align 8
  %51 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %42, ptr %50)
  br i1 %51, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend4
  %52 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %42)
  %53 = load ptr, ptr %52, align 8
  %memberidx9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx9, align 8
  %55 = tail call ptr %54(ptr nonnull %52)
  %56 = load ptr, ptr %memberidx5, align 8
  %57 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %56)
  %58 = load ptr, ptr %57, align 8
  %memberidx11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx11, align 8
  %60 = tail call ptr %59(ptr nonnull %57)
  %61 = alloca ptr, align 8
  %62 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %61, ptr nonnull @241, ptr %55, ptr %60)
  %63 = load ptr, ptr %61, align 8
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %64, align 8
  %memberidx.i38 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  store ptr %63, ptr %memberidx.i38, align 8
  %memberidx1.i39 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  store i64 %62, ptr %memberidx1.i39, align 4
  %memberidx2.i40 = getelementptr inbounds %string, ptr %64, i64 0, i32 3
  store i64 %62, ptr %memberidx2.i40, align 4
  tail call void @free(ptr %55)
  tail call void @free(ptr %60)
  %65 = load ptr, ptr %3, align 8
  %66 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i42 = getelementptr inbounds %Compiler, ptr %66, i64 0, i32 6
  %67 = load ptr, ptr %memberidx1.i42, align 8
  %68 = call ptr @malloc(i32 24)
  store i64 5, ptr %68, align 4
  %memberidx1.i.i43 = getelementptr inbounds %FloError, ptr %68, i64 0, i32 2
  store ptr %65, ptr %memberidx1.i.i43, align 8
  %memberidx2.i.i44 = getelementptr inbounds %FloError, ptr %68, i64 0, i32 1
  store ptr %64, ptr %memberidx2.i.i44, align 8
  %memberidx.i.i45 = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 2
  %69 = load i64, ptr %memberidx.i.i45, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 3
  %70 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %69, %70
  br i1 %.not.i.i, label %if.entry6.TypeChecker_error.exit_crit_edge, label %if.entry.i.i47

if.entry6.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry6
  %memberidx4.i.i48.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 1
  %.pre65 = load ptr, ptr %memberidx4.i.i48.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i47:                                   ; preds = %if.entry6
  %71 = shl nuw i64 %70, 1
  store i64 %71, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 1
  %72 = load ptr, ptr %memberidx2.i.i.i, align 8
  %73 = shl i64 %70, 4
  %74 = call ptr @realloc(ptr %72, i64 %73)
  store ptr %74, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i45, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry6.TypeChecker_error.exit_crit_edge, %if.entry.i.i47
  %75 = phi ptr [ %.pre65, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %74, %if.entry.i.i47 ]
  %76 = phi i64 [ %69, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i47 ]
  %77 = add nsw i64 %76, 1
  store i64 %77, ptr %memberidx.i.i45, align 4
  %78 = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %68, ptr %78, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend4
  store ptr %44, ptr %memberidx.i36, align 8
  br label %common.ret

if.entry15:                                       ; preds = %else
  %79 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %79, ptr noundef nonnull align 8 dereferenceable(32) @242, i64 32, i1 false)
  %80 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %80, align 8
  %memberidx.i.i49 = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  store ptr %79, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i50, align 4
  %memberidx2.i.i51 = getelementptr inbounds %string, ptr %80, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i51, align 4
  %81 = load ptr, ptr %1, align 8
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %82 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %82, i64 0, i32 6
  %83 = load ptr, ptr %memberidx1.i53, align 8
  %84 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %84, align 4
  %memberidx1.i.i54 = getelementptr inbounds %FloError, ptr %84, i64 0, i32 2
  store ptr %81, ptr %memberidx1.i.i54, align 8
  %memberidx2.i.i55 = getelementptr inbounds %FloError, ptr %84, i64 0, i32 1
  store ptr %80, ptr %memberidx2.i.i55, align 8
  %memberidx.i.i56 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 2
  %85 = load i64, ptr %memberidx.i.i56, align 4
  %memberidx1.i2.i57 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 3
  %86 = load i64, ptr %memberidx1.i2.i57, align 4
  %.not.i.i58 = icmp slt i64 %85, %86
  br i1 %.not.i.i58, label %if.entry15.TypeChecker_error.exit63_crit_edge, label %if.entry.i.i61

if.entry15.TypeChecker_error.exit63_crit_edge:    ; preds = %if.entry15
  %memberidx4.i.i62.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %.pre67 = load ptr, ptr %memberidx4.i.i62.phi.trans.insert, align 8
  br label %TypeChecker_error.exit63

if.entry.i.i61:                                   ; preds = %if.entry15
  %87 = shl nuw i64 %86, 1
  store i64 %87, ptr %memberidx1.i2.i57, align 4
  %memberidx2.i.i.i60 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %88 = load ptr, ptr %memberidx2.i.i.i60, align 8
  %89 = shl i64 %86, 4
  %90 = tail call ptr @realloc(ptr %88, i64 %89)
  store ptr %90, ptr %memberidx2.i.i.i60, align 8
  %.pre66 = load i64, ptr %memberidx.i.i56, align 4
  br label %TypeChecker_error.exit63

TypeChecker_error.exit63:                         ; preds = %if.entry15.TypeChecker_error.exit63_crit_edge, %if.entry.i.i61
  %91 = phi ptr [ %.pre67, %if.entry15.TypeChecker_error.exit63_crit_edge ], [ %90, %if.entry.i.i61 ]
  %92 = phi i64 [ %85, %if.entry15.TypeChecker_error.exit63_crit_edge ], [ %.pre66, %if.entry.i.i61 ]
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr %memberidx.i.i56, align 4
  %94 = getelementptr inbounds ptr, ptr %91, i64 %92
  store ptr %84, ptr %94, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %4)
  %.not.i = icmp eq ptr %5, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %end20, %end, %ifend58, %TypeChecker_error.exit207, %TypeChecker_error.exit192, %TypeChecker_error.exit177, %TypeChecker_error.exit162, %TypeChecker_error.exit136, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit136 ], [ null, %TypeChecker_error.exit162 ], [ null, %TypeChecker_error.exit177 ], [ null, %TypeChecker_error.exit192 ], [ null, %TypeChecker_error.exit207 ], [ %199, %ifend58 ], [ null, %end ], [ null, %end20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %if.entry.i
  %8 = load ptr, ptr %4, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call ptr %9(ptr nonnull %4)
  %11 = alloca ptr, align 8
  %12 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @109, ptr %10)
  %13 = load ptr, ptr %11, align 8
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  tail call void @free(ptr %10)
  %15 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %16 = load ptr, ptr %memberidx4, align 8
  %memberidx.i113 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i113, align 8
  %memberidx1.i114 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i114, align 8
  %19 = call ptr @malloc(i32 24)
  store i64 1, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 1
  store ptr %14, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %20, %21
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %.pre215 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %22 = shl nuw i64 %21, 1
  store i64 %22, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %24 = shl i64 %21, 4
  %25 = call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %26 = phi ptr [ %.pre215, %if.entry.TypeChecker_error.exit_crit_edge ], [ %25, %if.entry.i.i ]
  %27 = phi i64 [ %20, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %28 = add nsw i64 %27, 1
  store i64 %28, ptr %memberidx.i.i, align 4
  %29 = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %19, ptr %29, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %30 = load ptr, ptr %0, align 8
  %memberidx1.i115 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %31 = load ptr, ptr %memberidx1.i115, align 8
  %memberidx.i.i116 = getelementptr inbounds %Program, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i116, align 8
  %33 = load i64, ptr %31, align 4
  %memberidx.i.i.i117 = getelementptr inbounds %Array_Module_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i.i117, align 8
  %35 = getelementptr inbounds ptr, ptr %34, i64 %33
  %36 = load ptr, ptr %35, align 8
  %memberidx2.i.i118 = getelementptr inbounds %Module, ptr %36, i64 0, i32 7
  %37 = load ptr, ptr %memberidx2.i.i118, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %31, i64 0, i32 1
  %38 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i5.i.i, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx5 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 3
  %42 = load ptr, ptr %memberidx5, align 8
  %.not = icmp eq ptr %42, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %43 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %42)
  br label %end

false_block:                                      ; preds = %ifend
  %44 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %44, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %43, %true_block ], [ %44, %false_block ]
  %memberidx.i119 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i120 = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 6
  %46 = load ptr, ptr %memberidx1.i120, align 8
  %memberidx2.i121 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i121, align 4
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %common.ret, label %ifend9

ifend9:                                           ; preds = %end
  %memberidx10 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 4
  %49 = load ptr, ptr %memberidx10, align 8
  %50 = icmp eq ptr %49, null
  %51 = load i64, ptr %ternary, align 4
  %52 = icmp eq i64 %51, 21
  %53 = and i1 %50, %52
  br i1 %53, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %ifend9
  %54 = load ptr, ptr %4, align 8
  %memberidx15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx15, align 8
  %56 = tail call ptr %55(ptr nonnull %4)
  %57 = alloca ptr, align 8
  %58 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %57, ptr nonnull @228, ptr %56)
  %59 = load ptr, ptr %57, align 8
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i122 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i123, align 4
  %memberidx2.i124 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 %58, ptr %memberidx2.i124, align 4
  tail call void @free(ptr %56)
  %61 = load ptr, ptr %memberidx, align 8
  %memberidx17 = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx17, align 8
  %63 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i126 = getelementptr inbounds %Compiler, ptr %63, i64 0, i32 6
  %64 = load ptr, ptr %memberidx1.i126, align 8
  %65 = call ptr @malloc(i32 24)
  store i64 4, ptr %65, align 4
  %memberidx1.i.i127 = getelementptr inbounds %FloError, ptr %65, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i127, align 8
  %memberidx2.i.i128 = getelementptr inbounds %FloError, ptr %65, i64 0, i32 1
  store ptr %60, ptr %memberidx2.i.i128, align 8
  %memberidx.i.i129 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 2
  %66 = load i64, ptr %memberidx.i.i129, align 4
  %memberidx1.i2.i130 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 3
  %67 = load i64, ptr %memberidx1.i2.i130, align 4
  %.not.i.i131 = icmp slt i64 %66, %67
  br i1 %.not.i.i131, label %if.entry12.TypeChecker_error.exit136_crit_edge, label %if.entry.i.i134

if.entry12.TypeChecker_error.exit136_crit_edge:   ; preds = %if.entry12
  %memberidx4.i.i135.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 1
  %.pre232 = load ptr, ptr %memberidx4.i.i135.phi.trans.insert, align 8
  br label %TypeChecker_error.exit136

if.entry.i.i134:                                  ; preds = %if.entry12
  %68 = shl nuw i64 %67, 1
  store i64 %68, ptr %memberidx1.i2.i130, align 4
  %memberidx2.i.i.i133 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i.i.i133, align 8
  %70 = shl i64 %67, 4
  %71 = call ptr @realloc(ptr %69, i64 %70)
  store ptr %71, ptr %memberidx2.i.i.i133, align 8
  %.pre231 = load i64, ptr %memberidx.i.i129, align 4
  br label %TypeChecker_error.exit136

TypeChecker_error.exit136:                        ; preds = %if.entry12.TypeChecker_error.exit136_crit_edge, %if.entry.i.i134
  %72 = phi ptr [ %.pre232, %if.entry12.TypeChecker_error.exit136_crit_edge ], [ %71, %if.entry.i.i134 ]
  %73 = phi i64 [ %66, %if.entry12.TypeChecker_error.exit136_crit_edge ], [ %.pre231, %if.entry.i.i134 ]
  %74 = add nsw i64 %73, 1
  store i64 %74, ptr %memberidx.i.i129, align 4
  %75 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %65, ptr %75, align 8
  br label %common.ret

ifend14:                                          ; preds = %ifend9
  br i1 %50, label %ifend29, label %end20

end20:                                            ; preds = %ifend14
  %76 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %49)
  %.pre216 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i138.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre216, i64 0, i32 6
  %.pre217 = load ptr, ptr %memberidx1.i138.phi.trans.insert, align 8
  %memberidx2.i139.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre217, i64 0, i32 2
  %.pre218 = load i64, ptr %memberidx2.i139.phi.trans.insert, align 4
  %77 = icmp sgt i64 %.pre218, 0
  br i1 %77, label %common.ret, label %ifend26

ifend26:                                          ; preds = %end20
  %.not109 = icmp eq ptr %76, null
  br i1 %.not109, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend26
  %memberidx.i140 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 2
  %78 = load i64, ptr %memberidx.i140, align 4
  %79 = icmp eq i64 %78, 5
  %memberidx30 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 3
  %80 = load ptr, ptr %memberidx30, align 8
  %81 = load i64, ptr %80, align 4
  %82 = icmp eq i64 %81, 21
  %83 = and i1 %79, %82
  br i1 %83, label %if.entry32, label %ifend34

ifend29:                                          ; preds = %ifend14, %ifend48, %ifend26
  %ternary23236239 = phi ptr [ %76, %ifend48 ], [ null, %ifend26 ], [ null, %ifend14 ]
  %var_type.0 = phi ptr [ %var_type.1, %ifend48 ], [ %ternary, %ifend26 ], [ %ternary, %ifend14 ]
  %memberidx55 = getelementptr inbounds %Scope, ptr %41, i64 0, i32 1
  %84 = load ptr, ptr %memberidx55, align 8
  %85 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %4)
  %memberidx.i141 = getelementptr inbounds %Map_string_VarId_, ptr %84, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i141, align 4
  %87 = urem i64 %85, %86
  %88 = load ptr, ptr %84, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %.not.i142 = icmp eq ptr %90, null
  br i1 %.not.i142, label %ifend58, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend29
  %memberidx1.i.i144 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i147 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %91 = phi ptr [ %101, %else.i ], [ %88, %while.entry.i.preheader ]
  %92 = phi i64 [ %102, %else.i ], [ %86, %while.entry.i.preheader ]
  %93 = phi ptr [ %106, %else.i ], [ %90, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %104, %else.i ], [ %87, %while.entry.i.preheader ]
  %94 = load ptr, ptr %93, align 8
  %memberidx.i.i143 = getelementptr inbounds %string, ptr %94, i64 0, i32 2
  %95 = load i64, ptr %memberidx.i.i143, align 4
  %96 = load i64, ptr %memberidx1.i.i144, align 4
  %.not.i.i145 = icmp eq i64 %95, %96
  br i1 %.not.i.i145, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i146 = getelementptr inbounds %string, ptr %94, i64 0, i32 1
  %97 = load ptr, ptr %memberidx2.i.i146, align 8
  %98 = load ptr, ptr %memberidx3.i.i147, align 8
  %99 = tail call i64 @memcmp(ptr %97, ptr %98, i64 %95)
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre225 = load i64, ptr %memberidx.i141, align 4
  %.pre226 = load ptr, ptr %84, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre227.pre = load ptr, ptr %84, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre227.pre, i64 %hash.0.i
  %.pre228.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre228.pre, null
  br i1 %.not25.i, label %ifend58, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %101 = phi ptr [ %.pre226, %ifend.i.i.else.i_crit_edge ], [ %91, %while.entry.i ]
  %102 = phi i64 [ %.pre225, %ifend.i.i.else.i_crit_edge ], [ %92, %while.entry.i ]
  %103 = add nuw i64 %hash.0.i, 1
  %104 = urem i64 %103, %102
  %105 = getelementptr inbounds ptr, ptr %101, i64 %104
  %106 = load ptr, ptr %105, align 8
  %.not26.i = icmp eq ptr %106, null
  br i1 %.not26.i, label %ifend58, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre228.pre, i64 0, i32 1
  %107 = load ptr, ptr %memberidx11.i, align 8
  %phi.cmp = icmp eq ptr %107, null
  br i1 %phi.cmp, label %ifend58, label %if.entry56

if.entry32:                                       ; preds = %if.entry27
  %108 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %108, ptr noundef nonnull align 8 dereferenceable(69) @229, i64 69, i1 false)
  %109 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %109, align 8
  %memberidx.i.i148 = getelementptr inbounds %string, ptr %109, i64 0, i32 1
  store ptr %108, ptr %memberidx.i.i148, align 8
  %memberidx1.i.i149 = getelementptr inbounds %string, ptr %109, i64 0, i32 2
  store i64 69, ptr %memberidx1.i.i149, align 4
  %memberidx2.i.i150 = getelementptr inbounds %string, ptr %109, i64 0, i32 3
  store i64 69, ptr %memberidx2.i.i150, align 4
  %110 = load ptr, ptr %1, align 8
  %111 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i152 = getelementptr inbounds %Compiler, ptr %111, i64 0, i32 6
  %112 = load ptr, ptr %memberidx1.i152, align 8
  %113 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %113, align 4
  %memberidx1.i.i153 = getelementptr inbounds %FloError, ptr %113, i64 0, i32 2
  store ptr %110, ptr %memberidx1.i.i153, align 8
  %memberidx2.i.i154 = getelementptr inbounds %FloError, ptr %113, i64 0, i32 1
  store ptr %109, ptr %memberidx2.i.i154, align 8
  %memberidx.i.i155 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 2
  %114 = load i64, ptr %memberidx.i.i155, align 4
  %memberidx1.i2.i156 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 3
  %115 = load i64, ptr %memberidx1.i2.i156, align 4
  %.not.i.i157 = icmp slt i64 %114, %115
  br i1 %.not.i.i157, label %if.entry32.TypeChecker_error.exit162_crit_edge, label %if.entry.i.i160

if.entry32.TypeChecker_error.exit162_crit_edge:   ; preds = %if.entry32
  %memberidx4.i.i161.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 1
  %.pre224 = load ptr, ptr %memberidx4.i.i161.phi.trans.insert, align 8
  br label %TypeChecker_error.exit162

if.entry.i.i160:                                  ; preds = %if.entry32
  %116 = shl nuw i64 %115, 1
  store i64 %116, ptr %memberidx1.i2.i156, align 4
  %memberidx2.i.i.i159 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 1
  %117 = load ptr, ptr %memberidx2.i.i.i159, align 8
  %118 = shl i64 %115, 4
  %119 = tail call ptr @realloc(ptr %117, i64 %118)
  store ptr %119, ptr %memberidx2.i.i.i159, align 8
  %.pre223 = load i64, ptr %memberidx.i.i155, align 4
  br label %TypeChecker_error.exit162

TypeChecker_error.exit162:                        ; preds = %if.entry32.TypeChecker_error.exit162_crit_edge, %if.entry.i.i160
  %120 = phi ptr [ %.pre224, %if.entry32.TypeChecker_error.exit162_crit_edge ], [ %119, %if.entry.i.i160 ]
  %121 = phi i64 [ %114, %if.entry32.TypeChecker_error.exit162_crit_edge ], [ %.pre223, %if.entry.i.i160 ]
  %122 = add nsw i64 %121, 1
  store i64 %122, ptr %memberidx.i.i155, align 4
  %123 = getelementptr inbounds ptr, ptr %120, i64 %121
  store ptr %113, ptr %123, align 8
  br label %common.ret

ifend34:                                          ; preds = %if.entry27
  %124 = load i64, ptr %ternary, align 4
  %125 = icmp eq i64 %124, 21
  %126 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %80)
  %127 = or i1 %126, %125
  br i1 %127, label %ifend40, label %if.entry38

if.entry38:                                       ; preds = %ifend34
  %128 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %129 = load ptr, ptr %128, align 8
  %memberidx41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %129, i64 0, i32 5
  %130 = load ptr, ptr %memberidx41, align 8
  %131 = tail call ptr %130(ptr nonnull %128)
  %132 = load ptr, ptr %memberidx30, align 8
  %133 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %132)
  %134 = load ptr, ptr %133, align 8
  %memberidx43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %134, i64 0, i32 5
  %135 = load ptr, ptr %memberidx43, align 8
  %136 = tail call ptr %135(ptr nonnull %133)
  %137 = alloca ptr, align 8
  %138 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %137, ptr nonnull @230, ptr %131, ptr %136)
  %139 = load ptr, ptr %137, align 8
  %140 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %140, align 8
  %memberidx.i163 = getelementptr inbounds %string, ptr %140, i64 0, i32 1
  store ptr %139, ptr %memberidx.i163, align 8
  %memberidx1.i164 = getelementptr inbounds %string, ptr %140, i64 0, i32 2
  store i64 %138, ptr %memberidx1.i164, align 4
  %memberidx2.i165 = getelementptr inbounds %string, ptr %140, i64 0, i32 3
  store i64 %138, ptr %memberidx2.i165, align 4
  tail call void @free(ptr %131)
  tail call void @free(ptr %136)
  %141 = load ptr, ptr %1, align 8
  %142 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i167 = getelementptr inbounds %Compiler, ptr %142, i64 0, i32 6
  %143 = load ptr, ptr %memberidx1.i167, align 8
  %144 = call ptr @malloc(i32 24)
  store i64 5, ptr %144, align 4
  %memberidx1.i.i168 = getelementptr inbounds %FloError, ptr %144, i64 0, i32 2
  store ptr %141, ptr %memberidx1.i.i168, align 8
  %memberidx2.i.i169 = getelementptr inbounds %FloError, ptr %144, i64 0, i32 1
  store ptr %140, ptr %memberidx2.i.i169, align 8
  %memberidx.i.i170 = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 2
  %145 = load i64, ptr %memberidx.i.i170, align 4
  %memberidx1.i2.i171 = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 3
  %146 = load i64, ptr %memberidx1.i2.i171, align 4
  %.not.i.i172 = icmp slt i64 %145, %146
  br i1 %.not.i.i172, label %if.entry38.TypeChecker_error.exit177_crit_edge, label %if.entry.i.i175

if.entry38.TypeChecker_error.exit177_crit_edge:   ; preds = %if.entry38
  %memberidx4.i.i176.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 1
  %.pre220 = load ptr, ptr %memberidx4.i.i176.phi.trans.insert, align 8
  br label %TypeChecker_error.exit177

if.entry.i.i175:                                  ; preds = %if.entry38
  %147 = shl nuw i64 %146, 1
  store i64 %147, ptr %memberidx1.i2.i171, align 4
  %memberidx2.i.i.i174 = getelementptr inbounds %Array_FloError_, ptr %143, i64 0, i32 1
  %148 = load ptr, ptr %memberidx2.i.i.i174, align 8
  %149 = shl i64 %146, 4
  %150 = call ptr @realloc(ptr %148, i64 %149)
  store ptr %150, ptr %memberidx2.i.i.i174, align 8
  %.pre219 = load i64, ptr %memberidx.i.i170, align 4
  br label %TypeChecker_error.exit177

TypeChecker_error.exit177:                        ; preds = %if.entry38.TypeChecker_error.exit177_crit_edge, %if.entry.i.i175
  %151 = phi ptr [ %.pre220, %if.entry38.TypeChecker_error.exit177_crit_edge ], [ %150, %if.entry.i.i175 ]
  %152 = phi i64 [ %145, %if.entry38.TypeChecker_error.exit177_crit_edge ], [ %.pre219, %if.entry.i.i175 ]
  %153 = add nsw i64 %152, 1
  store i64 %153, ptr %memberidx.i.i170, align 4
  %154 = getelementptr inbounds ptr, ptr %151, i64 %152
  store ptr %144, ptr %154, align 8
  br label %common.ret

ifend40:                                          ; preds = %ifend34
  %155 = load i64, ptr %ternary, align 4
  %156 = icmp eq i64 %155, 21
  br i1 %156, label %if.entry46, label %ifend48

if.entry46:                                       ; preds = %ifend40
  %157 = load ptr, ptr %memberidx30, align 8
  %.pr = load i64, ptr %157, align 4
  br label %ifend48

ifend48:                                          ; preds = %ifend40, %if.entry46
  %158 = phi i64 [ %155, %ifend40 ], [ %.pr, %if.entry46 ]
  %var_type.1 = phi ptr [ %ternary, %ifend40 ], [ %157, %if.entry46 ]
  %159 = icmp eq i64 %158, 10
  br i1 %159, label %if.entry51, label %ifend29

if.entry51:                                       ; preds = %ifend48
  %160 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %160, ptr noundef nonnull align 8 dereferenceable(38) @231, i64 38, i1 false)
  %161 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %161, align 8
  %memberidx.i.i178 = getelementptr inbounds %string, ptr %161, i64 0, i32 1
  store ptr %160, ptr %memberidx.i.i178, align 8
  %memberidx1.i.i179 = getelementptr inbounds %string, ptr %161, i64 0, i32 2
  store i64 38, ptr %memberidx1.i.i179, align 4
  %memberidx2.i.i180 = getelementptr inbounds %string, ptr %161, i64 0, i32 3
  store i64 38, ptr %memberidx2.i.i180, align 4
  %162 = load ptr, ptr %1, align 8
  %163 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i182 = getelementptr inbounds %Compiler, ptr %163, i64 0, i32 6
  %164 = load ptr, ptr %memberidx1.i182, align 8
  %165 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %165, align 4
  %memberidx1.i.i183 = getelementptr inbounds %FloError, ptr %165, i64 0, i32 2
  store ptr %162, ptr %memberidx1.i.i183, align 8
  %memberidx2.i.i184 = getelementptr inbounds %FloError, ptr %165, i64 0, i32 1
  store ptr %161, ptr %memberidx2.i.i184, align 8
  %memberidx.i.i185 = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i.i185, align 4
  %memberidx1.i2.i186 = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 3
  %167 = load i64, ptr %memberidx1.i2.i186, align 4
  %.not.i.i187 = icmp slt i64 %166, %167
  br i1 %.not.i.i187, label %if.entry51.TypeChecker_error.exit192_crit_edge, label %if.entry.i.i190

if.entry51.TypeChecker_error.exit192_crit_edge:   ; preds = %if.entry51
  %memberidx4.i.i191.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 1
  %.pre222 = load ptr, ptr %memberidx4.i.i191.phi.trans.insert, align 8
  br label %TypeChecker_error.exit192

if.entry.i.i190:                                  ; preds = %if.entry51
  %168 = shl nuw i64 %167, 1
  store i64 %168, ptr %memberidx1.i2.i186, align 4
  %memberidx2.i.i.i189 = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 1
  %169 = load ptr, ptr %memberidx2.i.i.i189, align 8
  %170 = shl i64 %167, 4
  %171 = tail call ptr @realloc(ptr %169, i64 %170)
  store ptr %171, ptr %memberidx2.i.i.i189, align 8
  %.pre221 = load i64, ptr %memberidx.i.i185, align 4
  br label %TypeChecker_error.exit192

TypeChecker_error.exit192:                        ; preds = %if.entry51.TypeChecker_error.exit192_crit_edge, %if.entry.i.i190
  %172 = phi ptr [ %.pre222, %if.entry51.TypeChecker_error.exit192_crit_edge ], [ %171, %if.entry.i.i190 ]
  %173 = phi i64 [ %166, %if.entry51.TypeChecker_error.exit192_crit_edge ], [ %.pre221, %if.entry.i.i190 ]
  %174 = add nsw i64 %173, 1
  store i64 %174, ptr %memberidx.i.i185, align 4
  %175 = getelementptr inbounds ptr, ptr %172, i64 %173
  store ptr %165, ptr %175, align 8
  br label %common.ret

if.entry56:                                       ; preds = %if.entry7.i
  %176 = load ptr, ptr %4, align 8
  %memberidx59 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %176, i64 0, i32 5
  %177 = load ptr, ptr %memberidx59, align 8
  %178 = tail call ptr %177(ptr nonnull %4)
  %179 = alloca ptr, align 8
  %180 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %179, ptr nonnull @232, ptr %178)
  %181 = load ptr, ptr %179, align 8
  %182 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %182, align 8
  %memberidx.i193 = getelementptr inbounds %string, ptr %182, i64 0, i32 1
  store ptr %181, ptr %memberidx.i193, align 8
  %memberidx1.i194 = getelementptr inbounds %string, ptr %182, i64 0, i32 2
  store i64 %180, ptr %memberidx1.i194, align 4
  %memberidx2.i195 = getelementptr inbounds %string, ptr %182, i64 0, i32 3
  store i64 %180, ptr %memberidx2.i195, align 4
  tail call void @free(ptr %178)
  %183 = load ptr, ptr %memberidx, align 8
  %memberidx61 = getelementptr inbounds %Token, ptr %183, i64 0, i32 1
  %184 = load ptr, ptr %memberidx61, align 8
  %185 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i197 = getelementptr inbounds %Compiler, ptr %185, i64 0, i32 6
  %186 = load ptr, ptr %memberidx1.i197, align 8
  %187 = call ptr @malloc(i32 24)
  store i64 1, ptr %187, align 4
  %memberidx1.i.i198 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 2
  store ptr %184, ptr %memberidx1.i.i198, align 8
  %memberidx2.i.i199 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 1
  store ptr %182, ptr %memberidx2.i.i199, align 8
  %memberidx.i.i200 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 2
  %188 = load i64, ptr %memberidx.i.i200, align 4
  %memberidx1.i2.i201 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 3
  %189 = load i64, ptr %memberidx1.i2.i201, align 4
  %.not.i.i202 = icmp slt i64 %188, %189
  br i1 %.not.i.i202, label %if.entry56.TypeChecker_error.exit207_crit_edge, label %if.entry.i.i205

if.entry56.TypeChecker_error.exit207_crit_edge:   ; preds = %if.entry56
  %memberidx4.i.i206.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 1
  %.pre230 = load ptr, ptr %memberidx4.i.i206.phi.trans.insert, align 8
  br label %TypeChecker_error.exit207

if.entry.i.i205:                                  ; preds = %if.entry56
  %190 = shl nuw i64 %189, 1
  store i64 %190, ptr %memberidx1.i2.i201, align 4
  %memberidx2.i.i.i204 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 1
  %191 = load ptr, ptr %memberidx2.i.i.i204, align 8
  %192 = shl i64 %189, 4
  %193 = call ptr @realloc(ptr %191, i64 %192)
  store ptr %193, ptr %memberidx2.i.i.i204, align 8
  %.pre229 = load i64, ptr %memberidx.i.i200, align 4
  br label %TypeChecker_error.exit207

TypeChecker_error.exit207:                        ; preds = %if.entry56.TypeChecker_error.exit207_crit_edge, %if.entry.i.i205
  %194 = phi ptr [ %.pre230, %if.entry56.TypeChecker_error.exit207_crit_edge ], [ %193, %if.entry.i.i205 ]
  %195 = phi i64 [ %188, %if.entry56.TypeChecker_error.exit207_crit_edge ], [ %.pre229, %if.entry.i.i205 ]
  %196 = add nsw i64 %195, 1
  store i64 %196, ptr %memberidx.i.i200, align 4
  %197 = getelementptr inbounds ptr, ptr %194, i64 %195
  store ptr %187, ptr %197, align 8
  br label %common.ret

ifend58:                                          ; preds = %else.i, %ifend29, %while.end.i, %if.entry7.i
  %198 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %4, ptr %ternary23236239, ptr nonnull %var_type.0)
  %199 = tail call ptr @malloc(i32 25)
  %memberidx62 = getelementptr inbounds %Var, ptr %198, i64 0, i32 1
  %200 = load ptr, ptr %memberidx62, align 8
  store i64 1, ptr %199, align 4
  %memberidx.i208 = getelementptr inbounds %VarDeclaration, ptr %199, i64 0, i32 2
  store ptr %200, ptr %memberidx.i208, align 8
  %memberidx1.i209 = getelementptr inbounds %VarDeclaration, ptr %199, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i209, align 8
  %memberidx2.i210 = getelementptr inbounds %VarDeclaration, ptr %199, i64 0, i32 3
  store i1 false, ptr %memberidx2.i210, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %4)
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %TypeChecker_is_constant_in_scope.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 2
  br label %TypeChecker_is_constant_in_scope.exit

TypeChecker_is_constant_in_scope.exit:            ; preds = %2, %if.entry.i
  %is_constant.0.i = phi i1 [ %19, %if.entry.i ], [ false, %2 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_string_VarId_, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %20, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i86 = icmp eq ptr %26, null
  br i1 %.not.i86, label %Map_string_VarId____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %TypeChecker_is_constant_in_scope.exit
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i89 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %27 = phi ptr [ %37, %else.i ], [ %24, %while.entry.i.preheader ]
  %28 = phi i64 [ %38, %else.i ], [ %22, %while.entry.i.preheader ]
  %29 = phi ptr [ %42, %else.i ], [ %26, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %40, %else.i ], [ %23, %while.entry.i.preheader ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i87 = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx.i.i87, align 4
  %32 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %32
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i88 = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i88, align 8
  %34 = load ptr, ptr %memberidx3.i.i89, align 8
  %35 = tail call i64 @memcmp(ptr %33, ptr %34, i64 %31)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre172 = load ptr, ptr %20, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre173.pre = load ptr, ptr %20, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre173.pre, i64 %hash.0.i
  %.pre174.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre174.pre, null
  br i1 %.not25.i, label %Map_string_VarId____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %37 = phi ptr [ %.pre172, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = add nuw i64 %hash.0.i, 1
  %40 = urem i64 %39, %38
  %41 = getelementptr inbounds ptr, ptr %37, i64 %40
  %42 = load ptr, ptr %41, align 8
  %.not26.i = icmp eq ptr %42, null
  br i1 %.not26.i, label %Map_string_VarId____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre174.pre, i64 0, i32 1
  %43 = load ptr, ptr %memberidx11.i, align 8
  %phi.cmp = icmp ne ptr %43, null
  br label %Map_string_VarId____getitem__.exit

Map_string_VarId____getitem__.exit:               ; preds = %else.i, %TypeChecker_is_constant_in_scope.exit, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry7.i ], [ false, %while.end.i ], [ false, %TypeChecker_is_constant_in_scope.exit ], [ false, %else.i ]
  %44 = or i1 %is_constant.0.i, %common.ret.op.i
  br i1 %44, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend10, %end, %ifend43, %TypeChecker_error.exit165, %TypeChecker_error.exit150, %TypeChecker_error.exit135, %TypeChecker_error.exit119, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit119 ], [ null, %TypeChecker_error.exit135 ], [ null, %TypeChecker_error.exit150 ], [ null, %TypeChecker_error.exit165 ], [ %171, %ifend43 ], [ null, %end ], [ null, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %Map_string_VarId____getitem__.exit
  %45 = load ptr, ptr %4, align 8
  %memberidx3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx3, align 8
  %47 = tail call ptr %46(ptr nonnull %4)
  %48 = alloca ptr, align 8
  %49 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %48, ptr nonnull @109, ptr %47)
  %50 = load ptr, ptr %48, align 8
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i90 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 %49, ptr %memberidx1.i91, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 %49, ptr %memberidx2.i, align 4
  tail call void @free(ptr %47)
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx5, align 8
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %54 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 6
  %55 = load ptr, ptr %memberidx1.i93, align 8
  %56 = call ptr @malloc(i32 24)
  store i64 1, ptr %56, align 4
  %memberidx1.i.i94 = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i94, align 8
  %memberidx2.i.i95 = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %51, ptr %memberidx2.i.i95, align 8
  %memberidx.i.i96 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %57 = load i64, ptr %memberidx.i.i96, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 3
  %58 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i97 = icmp slt i64 %57, %58
  br i1 %.not.i.i97, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %.pre184 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %59 = shl nuw i64 %58, 1
  store i64 %59, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %60 = load ptr, ptr %memberidx2.i.i.i, align 8
  %61 = shl i64 %58, 4
  %62 = call ptr @realloc(ptr %60, i64 %61)
  store ptr %62, ptr %memberidx2.i.i.i, align 8
  %.pre183 = load i64, ptr %memberidx.i.i96, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %63 = phi ptr [ %.pre184, %if.entry.TypeChecker_error.exit_crit_edge ], [ %62, %if.entry.i.i ]
  %64 = phi i64 [ %57, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre183, %if.entry.i.i ]
  %65 = add nsw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i96, align 4
  %66 = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %56, ptr %66, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_VarId____getitem__.exit
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 3
  %67 = load ptr, ptr %memberidx6, align 8
  %.not = icmp eq ptr %67, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %68 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %67)
  br label %end

false_block:                                      ; preds = %ifend
  %69 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %69, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %68, %true_block ], [ %69, %false_block ]
  %memberidx.i99 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %70 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %70, i64 0, i32 6
  %71 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %Array_FloError_, ptr %71, i64 0, i32 2
  %72 = load i64, ptr %memberidx2.i101, align 4
  %73 = icmp sgt i64 %72, 0
  br i1 %73, label %common.ret, label %ifend10

ifend10:                                          ; preds = %end
  %memberidx11 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 4
  %74 = load ptr, ptr %memberidx11, align 8
  %75 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %ternary, ptr %74)
  %76 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i103 = getelementptr inbounds %Compiler, ptr %76, i64 0, i32 6
  %77 = load ptr, ptr %memberidx1.i103, align 8
  %memberidx2.i104 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 2
  %78 = load i64, ptr %memberidx2.i104, align 4
  %79 = icmp sgt i64 %78, 0
  br i1 %79, label %common.ret, label %ifend14

ifend14:                                          ; preds = %ifend10
  %memberidx15 = getelementptr inbounds %Expression, ptr %75, i64 0, i32 1
  %80 = load i1, ptr %memberidx15, align 1
  br i1 %80, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend14
  %81 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %81, ptr noundef nonnull align 8 dereferenceable(48) @233, i64 48, i1 false)
  %82 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %82, align 8
  %memberidx.i.i105 = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  store ptr %81, ptr %memberidx.i.i105, align 8
  %memberidx1.i.i106 = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  store i64 48, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %string, ptr %82, i64 0, i32 3
  store i64 48, ptr %memberidx2.i.i107, align 4
  %83 = load ptr, ptr %memberidx11, align 8
  %84 = load ptr, ptr %83, align 8
  %85 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 6
  %86 = load ptr, ptr %memberidx1.i109, align 8
  %87 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %87, align 4
  %memberidx1.i.i110 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 2
  store ptr %84, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 1
  store ptr %82, ptr %memberidx2.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %88 = load i64, ptr %memberidx.i.i112, align 4
  %memberidx1.i2.i113 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 3
  %89 = load i64, ptr %memberidx1.i2.i113, align 4
  %.not.i.i114 = icmp slt i64 %88, %89
  br i1 %.not.i.i114, label %if.entry16.TypeChecker_error.exit119_crit_edge, label %if.entry.i.i117

if.entry16.TypeChecker_error.exit119_crit_edge:   ; preds = %if.entry16
  %memberidx4.i.i118.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %.pre176 = load ptr, ptr %memberidx4.i.i118.phi.trans.insert, align 8
  br label %TypeChecker_error.exit119

if.entry.i.i117:                                  ; preds = %if.entry16
  %90 = shl nuw i64 %89, 1
  store i64 %90, ptr %memberidx1.i2.i113, align 4
  %memberidx2.i.i.i116 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %91 = load ptr, ptr %memberidx2.i.i.i116, align 8
  %92 = shl i64 %89, 4
  %93 = tail call ptr @realloc(ptr %91, i64 %92)
  store ptr %93, ptr %memberidx2.i.i.i116, align 8
  %.pre175 = load i64, ptr %memberidx.i.i112, align 4
  br label %TypeChecker_error.exit119

TypeChecker_error.exit119:                        ; preds = %if.entry16.TypeChecker_error.exit119_crit_edge, %if.entry.i.i117
  %94 = phi ptr [ %.pre176, %if.entry16.TypeChecker_error.exit119_crit_edge ], [ %93, %if.entry.i.i117 ]
  %95 = phi i64 [ %88, %if.entry16.TypeChecker_error.exit119_crit_edge ], [ %.pre175, %if.entry.i.i117 ]
  %96 = add nsw i64 %95, 1
  store i64 %96, ptr %memberidx.i.i112, align 4
  %97 = getelementptr inbounds ptr, ptr %94, i64 %95
  store ptr %87, ptr %97, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend14
  %memberidx.i120 = getelementptr inbounds %Expression, ptr %75, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i120, align 4
  %99 = icmp eq i64 %98, 5
  %100 = load i64, ptr %ternary, align 4
  %101 = icmp eq i64 %100, 21
  %102 = and i1 %99, %101
  br i1 %102, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend18
  %103 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %103, ptr noundef nonnull align 8 dereferenceable(69) @229, i64 69, i1 false)
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %104, align 8
  %memberidx.i.i121 = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  store ptr %103, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  store i64 69, ptr %memberidx1.i.i122, align 4
  %memberidx2.i.i123 = getelementptr inbounds %string, ptr %104, i64 0, i32 3
  store i64 69, ptr %memberidx2.i.i123, align 4
  %105 = load ptr, ptr %1, align 8
  %106 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i125 = getelementptr inbounds %Compiler, ptr %106, i64 0, i32 6
  %107 = load ptr, ptr %memberidx1.i125, align 8
  %108 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %108, align 4
  %memberidx1.i.i126 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %105, ptr %memberidx1.i.i126, align 8
  %memberidx2.i.i127 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %109 = load i64, ptr %memberidx.i.i128, align 4
  %memberidx1.i2.i129 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 3
  %110 = load i64, ptr %memberidx1.i2.i129, align 4
  %.not.i.i130 = icmp slt i64 %109, %110
  br i1 %.not.i.i130, label %if.entry22.TypeChecker_error.exit135_crit_edge, label %if.entry.i.i133

if.entry22.TypeChecker_error.exit135_crit_edge:   ; preds = %if.entry22
  %memberidx4.i.i134.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %.pre182 = load ptr, ptr %memberidx4.i.i134.phi.trans.insert, align 8
  br label %TypeChecker_error.exit135

if.entry.i.i133:                                  ; preds = %if.entry22
  %111 = shl nuw i64 %110, 1
  store i64 %111, ptr %memberidx1.i2.i129, align 4
  %memberidx2.i.i.i132 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %112 = load ptr, ptr %memberidx2.i.i.i132, align 8
  %113 = shl i64 %110, 4
  %114 = tail call ptr @realloc(ptr %112, i64 %113)
  store ptr %114, ptr %memberidx2.i.i.i132, align 8
  %.pre181 = load i64, ptr %memberidx.i.i128, align 4
  br label %TypeChecker_error.exit135

TypeChecker_error.exit135:                        ; preds = %if.entry22.TypeChecker_error.exit135_crit_edge, %if.entry.i.i133
  %115 = phi ptr [ %.pre182, %if.entry22.TypeChecker_error.exit135_crit_edge ], [ %114, %if.entry.i.i133 ]
  %116 = phi i64 [ %109, %if.entry22.TypeChecker_error.exit135_crit_edge ], [ %.pre181, %if.entry.i.i133 ]
  %117 = add nsw i64 %116, 1
  store i64 %117, ptr %memberidx.i.i128, align 4
  %118 = getelementptr inbounds ptr, ptr %115, i64 %116
  store ptr %108, ptr %118, align 8
  br label %common.ret

ifend24:                                          ; preds = %ifend18
  %memberidx27 = getelementptr inbounds %Expression, ptr %75, i64 0, i32 3
  %119 = load ptr, ptr %memberidx27, align 8
  %120 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr %119)
  %121 = or i1 %101, %120
  br i1 %121, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %ifend24
  %122 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %123 = load ptr, ptr %122, align 8
  %memberidx31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %123, i64 0, i32 5
  %124 = load ptr, ptr %memberidx31, align 8
  %125 = tail call ptr %124(ptr nonnull %122)
  %126 = load ptr, ptr %memberidx27, align 8
  %127 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %126)
  %128 = load ptr, ptr %127, align 8
  %memberidx33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %128, i64 0, i32 5
  %129 = load ptr, ptr %memberidx33, align 8
  %130 = tail call ptr %129(ptr nonnull %127)
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @234, ptr %125, ptr %130)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %134, align 8
  %memberidx.i136 = getelementptr inbounds %string, ptr %134, i64 0, i32 1
  store ptr %133, ptr %memberidx.i136, align 8
  %memberidx1.i137 = getelementptr inbounds %string, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx1.i137, align 4
  %memberidx2.i138 = getelementptr inbounds %string, ptr %134, i64 0, i32 3
  store i64 %132, ptr %memberidx2.i138, align 4
  tail call void @free(ptr %125)
  tail call void @free(ptr %130)
  %135 = load ptr, ptr %1, align 8
  %136 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i140 = getelementptr inbounds %Compiler, ptr %136, i64 0, i32 6
  %137 = load ptr, ptr %memberidx1.i140, align 8
  %138 = call ptr @malloc(i32 24)
  store i64 5, ptr %138, align 4
  %memberidx1.i.i141 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  store ptr %135, ptr %memberidx1.i.i141, align 8
  %memberidx2.i.i142 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i142, align 8
  %memberidx.i.i143 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 2
  %139 = load i64, ptr %memberidx.i.i143, align 4
  %memberidx1.i2.i144 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 3
  %140 = load i64, ptr %memberidx1.i2.i144, align 4
  %.not.i.i145 = icmp slt i64 %139, %140
  br i1 %.not.i.i145, label %if.entry28.TypeChecker_error.exit150_crit_edge, label %if.entry.i.i148

if.entry28.TypeChecker_error.exit150_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i149.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %.pre178 = load ptr, ptr %memberidx4.i.i149.phi.trans.insert, align 8
  br label %TypeChecker_error.exit150

if.entry.i.i148:                                  ; preds = %if.entry28
  %141 = shl nuw i64 %140, 1
  store i64 %141, ptr %memberidx1.i2.i144, align 4
  %memberidx2.i.i.i147 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %142 = load ptr, ptr %memberidx2.i.i.i147, align 8
  %143 = shl i64 %140, 4
  %144 = call ptr @realloc(ptr %142, i64 %143)
  store ptr %144, ptr %memberidx2.i.i.i147, align 8
  %.pre177 = load i64, ptr %memberidx.i.i143, align 4
  br label %TypeChecker_error.exit150

TypeChecker_error.exit150:                        ; preds = %if.entry28.TypeChecker_error.exit150_crit_edge, %if.entry.i.i148
  %145 = phi ptr [ %.pre178, %if.entry28.TypeChecker_error.exit150_crit_edge ], [ %144, %if.entry.i.i148 ]
  %146 = phi i64 [ %139, %if.entry28.TypeChecker_error.exit150_crit_edge ], [ %.pre177, %if.entry.i.i148 ]
  %147 = add nsw i64 %146, 1
  store i64 %147, ptr %memberidx.i.i143, align 4
  %148 = getelementptr inbounds ptr, ptr %145, i64 %146
  store ptr %138, ptr %148, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend24
  %149 = load i64, ptr %ternary, align 4
  %150 = icmp eq i64 %149, 21
  br i1 %150, label %if.entry36, label %ifend38

if.entry36:                                       ; preds = %ifend30
  %151 = load ptr, ptr %memberidx27, align 8
  %.pr = load i64, ptr %151, align 4
  br label %ifend38

ifend38:                                          ; preds = %ifend30, %if.entry36
  %152 = phi i64 [ %149, %ifend30 ], [ %.pr, %if.entry36 ]
  %const_type.0 = phi ptr [ %ternary, %ifend30 ], [ %151, %if.entry36 ]
  %153 = icmp eq i64 %152, 10
  br i1 %153, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend38
  %154 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %154, ptr noundef nonnull align 8 dereferenceable(35) @235, i64 35, i1 false)
  %155 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %155, align 8
  %memberidx.i.i151 = getelementptr inbounds %string, ptr %155, i64 0, i32 1
  store ptr %154, ptr %memberidx.i.i151, align 8
  %memberidx1.i.i152 = getelementptr inbounds %string, ptr %155, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %string, ptr %155, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i153, align 4
  %156 = load ptr, ptr %1, align 8
  %157 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i155 = getelementptr inbounds %Compiler, ptr %157, i64 0, i32 6
  %158 = load ptr, ptr %memberidx1.i155, align 8
  %159 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %159, align 4
  %memberidx1.i.i156 = getelementptr inbounds %FloError, ptr %159, i64 0, i32 2
  store ptr %156, ptr %memberidx1.i.i156, align 8
  %memberidx2.i.i157 = getelementptr inbounds %FloError, ptr %159, i64 0, i32 1
  store ptr %155, ptr %memberidx2.i.i157, align 8
  %memberidx.i.i158 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 2
  %160 = load i64, ptr %memberidx.i.i158, align 4
  %memberidx1.i2.i159 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 3
  %161 = load i64, ptr %memberidx1.i2.i159, align 4
  %.not.i.i160 = icmp slt i64 %160, %161
  br i1 %.not.i.i160, label %if.entry41.TypeChecker_error.exit165_crit_edge, label %if.entry.i.i163

if.entry41.TypeChecker_error.exit165_crit_edge:   ; preds = %if.entry41
  %memberidx4.i.i164.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 1
  %.pre180 = load ptr, ptr %memberidx4.i.i164.phi.trans.insert, align 8
  br label %TypeChecker_error.exit165

if.entry.i.i163:                                  ; preds = %if.entry41
  %162 = shl nuw i64 %161, 1
  store i64 %162, ptr %memberidx1.i2.i159, align 4
  %memberidx2.i.i.i162 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 1
  %163 = load ptr, ptr %memberidx2.i.i.i162, align 8
  %164 = shl i64 %161, 4
  %165 = tail call ptr @realloc(ptr %163, i64 %164)
  store ptr %165, ptr %memberidx2.i.i.i162, align 8
  %.pre179 = load i64, ptr %memberidx.i.i158, align 4
  br label %TypeChecker_error.exit165

TypeChecker_error.exit165:                        ; preds = %if.entry41.TypeChecker_error.exit165_crit_edge, %if.entry.i.i163
  %166 = phi ptr [ %.pre180, %if.entry41.TypeChecker_error.exit165_crit_edge ], [ %165, %if.entry.i.i163 ]
  %167 = phi i64 [ %160, %if.entry41.TypeChecker_error.exit165_crit_edge ], [ %.pre179, %if.entry.i.i163 ]
  %168 = add nsw i64 %167, 1
  store i64 %168, ptr %memberidx.i.i158, align 4
  %169 = getelementptr inbounds ptr, ptr %166, i64 %167
  store ptr %159, ptr %169, align 8
  br label %common.ret

ifend43:                                          ; preds = %ifend38
  %170 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr %4, ptr nonnull %75, ptr nonnull %const_type.0)
  %171 = tail call ptr @malloc(i32 25)
  %memberidx45 = getelementptr inbounds %Const, ptr %170, i64 0, i32 1
  %172 = load ptr, ptr %memberidx45, align 8
  store i64 2, ptr %171, align 4
  %memberidx.i166 = getelementptr inbounds %ConstDeclaration, ptr %171, i64 0, i32 2
  store ptr %172, ptr %memberidx.i166, align 8
  %memberidx1.i167 = getelementptr inbounds %ConstDeclaration, ptr %171, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i167, align 8
  %memberidx2.i168 = getelementptr inbounds %ConstDeclaration, ptr %171, i64 0, i32 3
  store i1 false, ptr %memberidx2.i168, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i5.i.i, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i79 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend5, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %81, %ifend5 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 1
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_VarId_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i77 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx.i.i77, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i78, align 8
  %28 = load ptr, ptr %memberidx3.i.i79, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre160 = load ptr, ptr %14, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre161.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre161.pre, i64 %hash.0.i
  %.pre162.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre162.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_string_VarId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %31 = phi ptr [ %.pre160, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.entry.i ]
  %33 = add nuw i64 %hash.0.i, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not26.i = icmp eq ptr %36, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_string_VarId____getitem__.exit:               ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre162.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx11.i, align 8
  %38 = icmp eq ptr %37, null
  br i1 %38, label %if.entry, label %ifend12

while.end:                                        ; preds = %ifend
  %39 = icmp eq ptr %value.1, null
  %40 = load ptr, ptr %memberidx1.i, align 8
  %41 = load i64, ptr %40, align 4
  %42 = icmp ne i64 %41, 0
  %43 = and i1 %39, %42
  br i1 %43, label %if.entry10, label %ifend12

if.entry:                                         ; preds = %else.i, %while.entry, %while.end.i, %Map_string_VarId____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 3
  %44 = load ptr, ptr %memberidx1, align 8
  %45 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %memberidx.i80 = getelementptr inbounds %Map_string_VarId_, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i80, align 4
  %47 = urem i64 %45, %46
  %48 = load ptr, ptr %44, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %.not.i81 = icmp eq ptr %50, null
  br i1 %.not.i81, label %ifend, label %while.entry.i86

while.entry.i86:                                  ; preds = %if.entry, %else.i96
  %51 = phi ptr [ %61, %else.i96 ], [ %48, %if.entry ]
  %52 = phi i64 [ %62, %else.i96 ], [ %46, %if.entry ]
  %53 = phi ptr [ %66, %else.i96 ], [ %50, %if.entry ]
  %hash.0.i82 = phi i64 [ %64, %else.i96 ], [ %47, %if.entry ]
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i83 = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx.i.i83, align 4
  %56 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i85 = icmp eq i64 %55, %56
  br i1 %.not.i.i85, label %ifend.i.i89, label %else.i96

ifend.i.i89:                                      ; preds = %while.entry.i86
  %memberidx2.i.i87 = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  %57 = load ptr, ptr %memberidx2.i.i87, align 8
  %58 = load ptr, ptr %memberidx3.i.i79, align 8
  %59 = tail call i64 @memcmp(ptr %57, ptr %58, i64 %55)
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %while.end.i94, label %ifend.i.i89.else.i96_crit_edge

ifend.i.i89.else.i96_crit_edge:                   ; preds = %ifend.i.i89
  %.pre163 = load i64, ptr %memberidx.i80, align 4
  %.pre164 = load ptr, ptr %44, align 8
  br label %else.i96

while.end.i94:                                    ; preds = %ifend.i.i89
  %.pre165.pre = load ptr, ptr %44, align 8
  %.phi.trans.insert166.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre165.pre, i64 %hash.0.i82
  %.pre167.pre = load ptr, ptr %.phi.trans.insert166.phi.trans.insert, align 8
  %.not25.i93 = icmp eq ptr %.pre167.pre, null
  br i1 %.not25.i93, label %ifend, label %if.entry7.i99

else.i96:                                         ; preds = %ifend.i.i89.else.i96_crit_edge, %while.entry.i86
  %61 = phi ptr [ %.pre164, %ifend.i.i89.else.i96_crit_edge ], [ %51, %while.entry.i86 ]
  %62 = phi i64 [ %.pre163, %ifend.i.i89.else.i96_crit_edge ], [ %52, %while.entry.i86 ]
  %63 = add nuw i64 %hash.0.i82, 1
  %64 = urem i64 %63, %62
  %65 = getelementptr inbounds ptr, ptr %61, i64 %64
  %66 = load ptr, ptr %65, align 8
  %.not26.i95 = icmp eq ptr %66, null
  br i1 %.not26.i95, label %ifend, label %while.entry.i86

if.entry7.i99:                                    ; preds = %while.end.i94
  %memberidx11.i98 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre167.pre, i64 0, i32 1
  %67 = load ptr, ptr %memberidx11.i98, align 8
  br label %ifend

ifend:                                            ; preds = %else.i96, %if.entry, %if.entry7.i99, %while.end.i94
  %value.1 = phi ptr [ %67, %if.entry7.i99 ], [ null, %while.end.i94 ], [ null, %if.entry ], [ null, %else.i96 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %68 = load ptr, ptr %memberidx2, align 8
  %69 = icmp eq ptr %68, null
  %70 = icmp ne ptr %value.1, null
  %71 = or i1 %70, %69
  br i1 %71, label %while.end, label %ifend5

ifend5:                                           ; preds = %ifend
  %72 = load ptr, ptr %0, align 8
  %memberidx.i101 = getelementptr inbounds %Program, ptr %72, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i101, align 8
  %74 = load i64, ptr %68, align 4
  %memberidx.i.i102 = getelementptr inbounds %Array_Module_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i102, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %77, i64 0, i32 7
  %78 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %68, i64 0, i32 1
  %79 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i5.i, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  br label %while.entry

if.entry10:                                       ; preds = %while.end
  %82 = load ptr, ptr %0, align 8
  %memberidx16 = getelementptr inbounds %Program, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx16, align 8
  %memberidx.i103 = getelementptr inbounds %Array_Module_, ptr %83, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i103, align 8
  %85 = load ptr, ptr %84, align 8
  %memberidx17 = getelementptr inbounds %Module, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx17, align 8
  store ptr %86, ptr %memberidx1.i, align 8
  %87 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %1)
  store ptr %40, ptr %memberidx1.i, align 8
  %.not = icmp eq ptr %87, null
  br i1 %.not, label %ifend12, label %if.entry19

ifend12:                                          ; preds = %Map_string_VarId____getitem__.exit, %if.entry38, %ifend36, %if.entry10, %while.end
  %value.2 = phi ptr [ %87, %if.entry38 ], [ %87, %ifend36 ], [ null, %if.entry10 ], [ %value.1, %while.end ], [ %37, %Map_string_VarId____getitem__.exit ]
  ret ptr %value.2

if.entry19:                                       ; preds = %if.entry10
  %88 = load ptr, ptr %0, align 8
  store i1 true, ptr %88, align 1
  %89 = load i64, ptr %87, align 4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %if.entry25, label %ifend27

if.entry25:                                       ; preds = %if.entry19
  %91 = load ptr, ptr %0, align 8
  %92 = load ptr, ptr %memberidx1.i, align 8
  %93 = load i64, ptr %92, align 4
  %memberidx1.i.i.i.i109 = getelementptr inbounds %Program, ptr %91, i64 0, i32 1
  %94 = load ptr, ptr %memberidx1.i.i.i.i109, align 8
  %memberidx.i.i.i.i.i110 = getelementptr inbounds %Array_Module_, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i.i.i.i.i110, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %93
  %97 = load ptr, ptr %96, align 8
  %memberidx1.i.i111 = getelementptr inbounds %Module, ptr %97, i64 0, i32 5
  %98 = load ptr, ptr %memberidx1.i.i111, align 8
  %99 = load i64, ptr %98, align 4
  %100 = getelementptr inbounds ptr, ptr %95, i64 %99
  %101 = load ptr, ptr %100, align 8
  %memberidx2.i.i.i114 = getelementptr inbounds %Module, ptr %101, i64 0, i32 7
  %102 = load ptr, ptr %memberidx2.i.i.i114, align 8
  %memberidx3.i.i.i115 = getelementptr inbounds %ScopeId, ptr %98, i64 0, i32 1
  %103 = load i64, ptr %memberidx3.i.i.i115, align 4
  %memberidx.i5.i.i.i116 = getelementptr inbounds %Array_Scope_, ptr %102, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i5.i.i.i116, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  %memberidx.i117 = getelementptr inbounds %Scope, ptr %106, i64 0, i32 3
  %107 = load ptr, ptr %memberidx.i117, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %107, ptr %1, ptr nonnull %87)
  %.pre168 = load i64, ptr %87, align 4
  br label %ifend27

ifend27:                                          ; preds = %if.entry19, %if.entry25
  %108 = phi i64 [ %89, %if.entry19 ], [ %.pre168, %if.entry25 ]
  %109 = add i64 %108, -1
  %110 = icmp ult i64 %109, 2
  br i1 %110, label %if.entry30, label %ifend32

if.entry30:                                       ; preds = %ifend27
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %memberidx1.i, align 8
  %113 = load i64, ptr %112, align 4
  %memberidx1.i.i.i.i119 = getelementptr inbounds %Program, ptr %111, i64 0, i32 1
  %114 = load ptr, ptr %memberidx1.i.i.i.i119, align 8
  %memberidx.i.i.i.i.i120 = getelementptr inbounds %Array_Module_, ptr %114, i64 0, i32 1
  %115 = load ptr, ptr %memberidx.i.i.i.i.i120, align 8
  %116 = getelementptr inbounds ptr, ptr %115, i64 %113
  %117 = load ptr, ptr %116, align 8
  %memberidx1.i.i121 = getelementptr inbounds %Module, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx1.i.i121, align 8
  %119 = load i64, ptr %118, align 4
  %120 = getelementptr inbounds ptr, ptr %115, i64 %119
  %121 = load ptr, ptr %120, align 8
  %memberidx2.i.i.i124 = getelementptr inbounds %Module, ptr %121, i64 0, i32 7
  %122 = load ptr, ptr %memberidx2.i.i.i124, align 8
  %memberidx3.i.i.i125 = getelementptr inbounds %ScopeId, ptr %118, i64 0, i32 1
  %123 = load i64, ptr %memberidx3.i.i.i125, align 4
  %memberidx.i5.i.i.i126 = getelementptr inbounds %Array_Scope_, ptr %122, i64 0, i32 1
  %124 = load ptr, ptr %memberidx.i5.i.i.i126, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx.i127 = getelementptr inbounds %Scope, ptr %126, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i127, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %127, ptr %1, ptr nonnull %87)
  %.pr = load i64, ptr %87, align 4
  br label %ifend32

ifend32:                                          ; preds = %ifend27, %if.entry30
  %128 = phi i64 [ %108, %ifend27 ], [ %.pr, %if.entry30 ]
  %129 = icmp eq i64 %128, 3
  br i1 %129, label %if.entry34, label %ifend36

if.entry34:                                       ; preds = %ifend32
  %130 = tail call ptr @malloc(i32 24)
  %memberidx.i128 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %131 = load i64, ptr %memberidx.i128, align 4
  %memberidx1.i129 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %132 = load i64, ptr %memberidx1.i129, align 4
  store i64 %131, ptr %130, align 4
  %memberidx1.i.i.i130 = getelementptr inbounds %TypeId, ptr %130, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i130, align 4
  %memberidx2.i.i.i131 = getelementptr inbounds %TypeId, ptr %130, i64 0, i32 2
  store i64 %132, ptr %memberidx2.i.i.i131, align 4
  %133 = load ptr, ptr %0, align 8
  %134 = load ptr, ptr %memberidx1.i, align 8
  %135 = load i64, ptr %134, align 4
  %memberidx1.i.i.i.i133 = getelementptr inbounds %Program, ptr %133, i64 0, i32 1
  %136 = load ptr, ptr %memberidx1.i.i.i.i133, align 8
  %memberidx.i.i.i.i.i134 = getelementptr inbounds %Array_Module_, ptr %136, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i.i.i.i.i134, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %135
  %139 = load ptr, ptr %138, align 8
  %memberidx1.i.i135 = getelementptr inbounds %Module, ptr %139, i64 0, i32 5
  %140 = load ptr, ptr %memberidx1.i.i135, align 8
  %141 = load i64, ptr %140, align 4
  %142 = getelementptr inbounds ptr, ptr %137, i64 %141
  %143 = load ptr, ptr %142, align 8
  %memberidx2.i.i.i138 = getelementptr inbounds %Module, ptr %143, i64 0, i32 7
  %144 = load ptr, ptr %memberidx2.i.i.i138, align 8
  %memberidx3.i.i.i139 = getelementptr inbounds %ScopeId, ptr %140, i64 0, i32 1
  %145 = load i64, ptr %memberidx3.i.i.i139, align 4
  %memberidx.i5.i.i.i140 = getelementptr inbounds %Array_Scope_, ptr %144, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i5.i.i.i140, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  %memberidx.i141 = getelementptr inbounds %Scope, ptr %148, i64 0, i32 2
  %149 = load ptr, ptr %memberidx.i141, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %149, ptr %1, ptr nonnull %130)
  %memberidx1.i142 = getelementptr inbounds %Scope, ptr %148, i64 0, i32 1
  %150 = load ptr, ptr %memberidx1.i142, align 8
  %151 = tail call ptr @malloc(i32 24)
  %152 = load i64, ptr %130, align 4
  %153 = load i64, ptr %memberidx2.i.i.i131, align 4
  store i64 3, ptr %151, align 4
  %memberidx1.i.i.i144 = getelementptr inbounds %VarId, ptr %151, i64 0, i32 1
  store i64 %152, ptr %memberidx1.i.i.i144, align 4
  %memberidx2.i.i6.i145 = getelementptr inbounds %VarId, ptr %151, i64 0, i32 2
  store i64 %153, ptr %memberidx2.i.i6.i145, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %150, ptr %1, ptr nonnull %151)
  %.pre169 = load i64, ptr %87, align 4
  br label %ifend36

ifend36:                                          ; preds = %ifend32, %if.entry34
  %154 = phi i64 [ %128, %ifend32 ], [ %.pre169, %if.entry34 ]
  %155 = icmp eq i64 %154, 4
  br i1 %155, label %if.entry38, label %ifend12

if.entry38:                                       ; preds = %ifend36
  %156 = tail call ptr @malloc(i32 24)
  %memberidx.i146 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %157 = load i64, ptr %memberidx.i146, align 4
  %memberidx1.i147 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %158 = load i64, ptr %memberidx1.i147, align 4
  store i64 %157, ptr %156, align 4
  %memberidx1.i.i.i148 = getelementptr inbounds %TypeId, ptr %156, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i148, align 4
  %memberidx2.i.i.i149 = getelementptr inbounds %TypeId, ptr %156, i64 0, i32 2
  store i64 %158, ptr %memberidx2.i.i.i149, align 4
  %159 = load ptr, ptr %0, align 8
  %160 = load ptr, ptr %memberidx1.i, align 8
  %161 = load i64, ptr %160, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %159, i64 0, i32 1
  %162 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %162, i64 0, i32 1
  %163 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %164 = getelementptr inbounds ptr, ptr %163, i64 %161
  %165 = load ptr, ptr %164, align 8
  %memberidx1.i.i105 = getelementptr inbounds %Module, ptr %165, i64 0, i32 5
  %166 = load ptr, ptr %memberidx1.i.i105, align 8
  %167 = load i64, ptr %166, align 4
  %168 = getelementptr inbounds ptr, ptr %163, i64 %167
  %169 = load ptr, ptr %168, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %169, i64 0, i32 7
  %170 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %166, i64 0, i32 1
  %171 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %170, i64 0, i32 1
  %172 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %173 = getelementptr inbounds ptr, ptr %172, i64 %171
  %174 = load ptr, ptr %173, align 8
  %memberidx.i106 = getelementptr inbounds %Scope, ptr %174, i64 0, i32 4
  %175 = load ptr, ptr %memberidx.i106, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %175, ptr %1, ptr nonnull %156)
  %memberidx1.i107 = getelementptr inbounds %Scope, ptr %174, i64 0, i32 1
  %176 = load ptr, ptr %memberidx1.i107, align 8
  %177 = tail call ptr @malloc(i32 24)
  %178 = load i64, ptr %156, align 4
  %179 = load i64, ptr %memberidx2.i.i.i149, align 4
  store i64 4, ptr %177, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %177, i64 0, i32 1
  store i64 %178, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %177, i64 0, i32 2
  store i64 %179, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %176, ptr %1, ptr nonnull %177)
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i5.i.i, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i70 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend12, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %101, %ifend12 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_Type_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i68 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx.i.i68, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i69 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i69, align 8
  %28 = load ptr, ptr %memberidx3.i.i70, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre150 = load ptr, ptr %14, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre151.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre151.pre, i64 %hash.0.i
  %.pre152.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre152.pre, null
  br i1 %.not25.i, label %ifend, label %Map_string_Type____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %31 = phi ptr [ %.pre150, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.entry.i ]
  %33 = add nuw i64 %hash.0.i, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not26.i = icmp eq ptr %36, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_string_Type____getitem__.exit:                ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_Type_, ptr %.pre152.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %37, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_Type____getitem__.exit, %ifend28, %ifend19, %if.entry6, %if.entry2
  %common.ret.op = phi ptr [ %62, %if.entry2 ], [ %87, %if.entry6 ], [ %109, %ifend19 ], [ %107, %ifend28 ], [ %37, %Map_string_Type____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %while.entry, %while.end.i, %Map_string_Type____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx1, align 8
  %39 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %1)
  %memberidx.i71 = getelementptr inbounds %Map_string_ClassId_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i71, align 4
  %41 = urem i64 %39, %40
  %42 = load ptr, ptr %38, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %.not.i72 = icmp eq ptr %44, null
  br i1 %.not.i72, label %ifend4, label %while.entry.i77

while.entry.i77:                                  ; preds = %ifend, %else.i87
  %45 = phi ptr [ %55, %else.i87 ], [ %42, %ifend ]
  %46 = phi i64 [ %56, %else.i87 ], [ %40, %ifend ]
  %47 = phi ptr [ %60, %else.i87 ], [ %44, %ifend ]
  %hash.0.i73 = phi i64 [ %58, %else.i87 ], [ %41, %ifend ]
  %48 = load ptr, ptr %47, align 8
  %memberidx.i.i74 = getelementptr inbounds %string, ptr %48, i64 0, i32 2
  %49 = load i64, ptr %memberidx.i.i74, align 4
  %50 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i76 = icmp eq i64 %49, %50
  br i1 %.not.i.i76, label %ifend.i.i80, label %else.i87

ifend.i.i80:                                      ; preds = %while.entry.i77
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %48, i64 0, i32 1
  %51 = load ptr, ptr %memberidx2.i.i78, align 8
  %52 = load ptr, ptr %memberidx3.i.i70, align 8
  %53 = tail call i64 @memcmp(ptr %51, ptr %52, i64 %49)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i85, label %ifend.i.i80.else.i87_crit_edge

ifend.i.i80.else.i87_crit_edge:                   ; preds = %ifend.i.i80
  %.pre153 = load i64, ptr %memberidx.i71, align 4
  %.pre154 = load ptr, ptr %38, align 8
  br label %else.i87

while.end.i85:                                    ; preds = %ifend.i.i80
  %.pre155.pre = load ptr, ptr %38, align 8
  %.phi.trans.insert156.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre155.pre, i64 %hash.0.i73
  %.pre157.pre = load ptr, ptr %.phi.trans.insert156.phi.trans.insert, align 8
  %.not25.i84 = icmp eq ptr %.pre157.pre, null
  br i1 %.not25.i84, label %ifend4, label %Map_string_ClassId____getitem__.exit

else.i87:                                         ; preds = %ifend.i.i80.else.i87_crit_edge, %while.entry.i77
  %55 = phi ptr [ %.pre154, %ifend.i.i80.else.i87_crit_edge ], [ %45, %while.entry.i77 ]
  %56 = phi i64 [ %.pre153, %ifend.i.i80.else.i87_crit_edge ], [ %46, %while.entry.i77 ]
  %57 = add nuw i64 %hash.0.i73, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not26.i86 = icmp eq ptr %60, null
  br i1 %.not26.i86, label %ifend4, label %while.entry.i77

Map_string_ClassId____getitem__.exit:             ; preds = %while.end.i85
  %memberidx11.i89 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre157.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx11.i89, align 8
  %.not64 = icmp eq ptr %61, null
  br i1 %.not64, label %ifend4, label %if.entry2

if.entry2:                                        ; preds = %Map_string_ClassId____getitem__.exit
  %62 = tail call ptr @malloc(i32 16)
  store i64 11, ptr %62, align 4
  %memberidx.i91 = getelementptr inbounds %ObjectType, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i91, align 8
  br label %common.ret

ifend4:                                           ; preds = %else.i87, %ifend, %while.end.i85, %Map_string_ClassId____getitem__.exit
  %memberidx5 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 4
  %63 = load ptr, ptr %memberidx5, align 8
  %64 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %1)
  %memberidx.i92 = getelementptr inbounds %Map_string_EnumId_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i92, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i93 = icmp eq ptr %69, null
  br i1 %.not.i93, label %ifend8, label %while.entry.i98

while.entry.i98:                                  ; preds = %ifend4, %else.i108
  %70 = phi ptr [ %80, %else.i108 ], [ %67, %ifend4 ]
  %71 = phi i64 [ %81, %else.i108 ], [ %65, %ifend4 ]
  %72 = phi ptr [ %85, %else.i108 ], [ %69, %ifend4 ]
  %hash.0.i94 = phi i64 [ %83, %else.i108 ], [ %66, %ifend4 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i95 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i95, align 4
  %75 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i97 = icmp eq i64 %74, %75
  br i1 %.not.i.i97, label %ifend.i.i101, label %else.i108

ifend.i.i101:                                     ; preds = %while.entry.i98
  %memberidx2.i.i99 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  %76 = load ptr, ptr %memberidx2.i.i99, align 8
  %77 = load ptr, ptr %memberidx3.i.i70, align 8
  %78 = tail call i64 @memcmp(ptr %76, ptr %77, i64 %74)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %while.end.i106, label %ifend.i.i101.else.i108_crit_edge

ifend.i.i101.else.i108_crit_edge:                 ; preds = %ifend.i.i101
  %.pre158 = load i64, ptr %memberidx.i92, align 4
  %.pre159 = load ptr, ptr %63, align 8
  br label %else.i108

while.end.i106:                                   ; preds = %ifend.i.i101
  %.pre160.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert161.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre160.pre, i64 %hash.0.i94
  %.pre162.pre = load ptr, ptr %.phi.trans.insert161.phi.trans.insert, align 8
  %.not25.i105 = icmp eq ptr %.pre162.pre, null
  br i1 %.not25.i105, label %ifend8, label %Map_string_EnumId____getitem__.exit

else.i108:                                        ; preds = %ifend.i.i101.else.i108_crit_edge, %while.entry.i98
  %80 = phi ptr [ %.pre159, %ifend.i.i101.else.i108_crit_edge ], [ %70, %while.entry.i98 ]
  %81 = phi i64 [ %.pre158, %ifend.i.i101.else.i108_crit_edge ], [ %71, %while.entry.i98 ]
  %82 = add nuw i64 %hash.0.i94, 1
  %83 = urem i64 %82, %81
  %84 = getelementptr inbounds ptr, ptr %80, i64 %83
  %85 = load ptr, ptr %84, align 8
  %.not26.i107 = icmp eq ptr %85, null
  br i1 %.not26.i107, label %ifend8, label %while.entry.i98

Map_string_EnumId____getitem__.exit:              ; preds = %while.end.i106
  %memberidx11.i110 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %.pre162.pre, i64 0, i32 1
  %86 = load ptr, ptr %memberidx11.i110, align 8
  %.not65 = icmp eq ptr %86, null
  br i1 %.not65, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %Map_string_EnumId____getitem__.exit
  %87 = tail call ptr @malloc(i32 16)
  store i64 12, ptr %87, align 4
  %memberidx.i112 = getelementptr inbounds %EnumType, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i112, align 8
  br label %common.ret

ifend8:                                           ; preds = %else.i108, %ifend4, %while.end.i106, %Map_string_EnumId____getitem__.exit
  %memberidx9 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %88 = load ptr, ptr %memberidx9, align 8
  %89 = icmp eq ptr %88, null
  br i1 %89, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %90 = load ptr, ptr %memberidx1.i, align 8
  %91 = load i64, ptr %90, align 4
  %.not66 = icmp eq i64 %91, 0
  br i1 %.not66, label %ifend19, label %if.entry17

ifend12:                                          ; preds = %ifend8
  %92 = load ptr, ptr %0, align 8
  %memberidx.i113 = getelementptr inbounds %Program, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i113, align 8
  %94 = load i64, ptr %88, align 4
  %memberidx.i.i114 = getelementptr inbounds %Array_Module_, ptr %93, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i.i114, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %88, i64 0, i32 1
  %99 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %98, i64 0, i32 1
  %100 = load ptr, ptr %memberidx.i5.i, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  br label %while.entry

if.entry17:                                       ; preds = %if.entry10
  %102 = load ptr, ptr %0, align 8
  %memberidx23 = getelementptr inbounds %Program, ptr %102, i64 0, i32 1
  %103 = load ptr, ptr %memberidx23, align 8
  %memberidx.i115 = getelementptr inbounds %Array_Module_, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i115, align 8
  %105 = load ptr, ptr %104, align 8
  %memberidx24 = getelementptr inbounds %Module, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx24, align 8
  store ptr %106, ptr %memberidx1.i, align 8
  %107 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %1)
  %108 = load i64, ptr %107, align 4
  %.not67 = icmp eq i64 %108, 21
  br i1 %.not67, label %ifend28, label %if.entry26

ifend19:                                          ; preds = %if.entry10
  %109 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %109, align 4
  br label %common.ret

if.entry26:                                       ; preds = %if.entry17
  %110 = load ptr, ptr %0, align 8
  store i1 true, ptr %110, align 1
  %111 = load i64, ptr %107, align 4
  %112 = icmp eq i64 %111, 11
  br i1 %112, label %if.entry32, label %else33

ifend28:                                          ; preds = %if.entry32, %else33, %if.entry17
  store ptr %90, ptr %memberidx1.i, align 8
  br label %common.ret

if.entry32:                                       ; preds = %if.entry26
  %memberidx35 = getelementptr inbounds %ObjectType, ptr %107, i64 0, i32 1
  %113 = load ptr, ptr %memberidx35, align 8
  %114 = load ptr, ptr %0, align 8
  %115 = load ptr, ptr %memberidx1.i, align 8
  %116 = load i64, ptr %115, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %114, i64 0, i32 1
  %117 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %117, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %119 = getelementptr inbounds ptr, ptr %118, i64 %116
  %120 = load ptr, ptr %119, align 8
  %memberidx1.i.i117 = getelementptr inbounds %Module, ptr %120, i64 0, i32 5
  %121 = load ptr, ptr %memberidx1.i.i117, align 8
  %122 = load i64, ptr %121, align 4
  %123 = getelementptr inbounds ptr, ptr %118, i64 %122
  %124 = load ptr, ptr %123, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %124, i64 0, i32 7
  %125 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %121, i64 0, i32 1
  %126 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %128 = getelementptr inbounds ptr, ptr %127, i64 %126
  %129 = load ptr, ptr %128, align 8
  %memberidx.i118 = getelementptr inbounds %Scope, ptr %129, i64 0, i32 2
  %130 = load ptr, ptr %memberidx.i118, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %130, ptr %1, ptr %113)
  %memberidx1.i119 = getelementptr inbounds %Scope, ptr %129, i64 0, i32 1
  %131 = load ptr, ptr %memberidx1.i119, align 8
  %132 = tail call ptr @malloc(i32 24)
  %133 = load i64, ptr %113, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %113, i64 0, i32 2
  %134 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %132, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %132, i64 0, i32 1
  store i64 %133, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %132, i64 0, i32 2
  store i64 %134, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %131, ptr %1, ptr nonnull %132)
  br label %ifend28

else33:                                           ; preds = %if.entry26
  %memberidx36 = getelementptr inbounds %EnumType, ptr %107, i64 0, i32 1
  %135 = load ptr, ptr %memberidx36, align 8
  %136 = load ptr, ptr %0, align 8
  %137 = load ptr, ptr %memberidx1.i, align 8
  %138 = load i64, ptr %137, align 4
  %memberidx1.i.i.i.i121 = getelementptr inbounds %Program, ptr %136, i64 0, i32 1
  %139 = load ptr, ptr %memberidx1.i.i.i.i121, align 8
  %memberidx.i.i.i.i.i122 = getelementptr inbounds %Array_Module_, ptr %139, i64 0, i32 1
  %140 = load ptr, ptr %memberidx.i.i.i.i.i122, align 8
  %141 = getelementptr inbounds ptr, ptr %140, i64 %138
  %142 = load ptr, ptr %141, align 8
  %memberidx1.i.i123 = getelementptr inbounds %Module, ptr %142, i64 0, i32 5
  %143 = load ptr, ptr %memberidx1.i.i123, align 8
  %144 = load i64, ptr %143, align 4
  %145 = getelementptr inbounds ptr, ptr %140, i64 %144
  %146 = load ptr, ptr %145, align 8
  %memberidx2.i.i.i126 = getelementptr inbounds %Module, ptr %146, i64 0, i32 7
  %147 = load ptr, ptr %memberidx2.i.i.i126, align 8
  %memberidx3.i.i.i127 = getelementptr inbounds %ScopeId, ptr %143, i64 0, i32 1
  %148 = load i64, ptr %memberidx3.i.i.i127, align 4
  %memberidx.i5.i.i.i128 = getelementptr inbounds %Array_Scope_, ptr %147, i64 0, i32 1
  %149 = load ptr, ptr %memberidx.i5.i.i.i128, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 %148
  %151 = load ptr, ptr %150, align 8
  %memberidx.i129 = getelementptr inbounds %Scope, ptr %151, i64 0, i32 4
  %152 = load ptr, ptr %memberidx.i129, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %152, ptr %1, ptr %135)
  %memberidx1.i130 = getelementptr inbounds %Scope, ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %memberidx1.i130, align 8
  %154 = tail call ptr @malloc(i32 24)
  %155 = load i64, ptr %135, align 4
  %memberidx1.i5.i131 = getelementptr inbounds %TypeId, ptr %135, i64 0, i32 2
  %156 = load i64, ptr %memberidx1.i5.i131, align 4
  store i64 4, ptr %154, align 4
  %memberidx1.i.i.i132 = getelementptr inbounds %VarId, ptr %154, i64 0, i32 1
  store i64 %155, ptr %memberidx1.i.i.i132, align 4
  %memberidx2.i.i6.i133 = getelementptr inbounds %VarId, ptr %154, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i6.i133, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %153, ptr %1, ptr nonnull %154)
  br label %ifend28
}

define internal fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Var, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i18 = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i18, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx3, align 4
  store i64 1, ptr %18, align 4
  %memberidx1.i19 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i19, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i, align 4
  %memberidx4 = getelementptr inbounds %Var, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx.i14, align 4
  %memberidx1.i = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 3
  %25 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %24, %25
  br i1 %.not.i, label %.Array_Var____sl__.exit_crit_edge, label %if.entry.i

.Array_Var____sl__.exit_crit_edge:                ; preds = %4
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 1
  %.pre20 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Var____sl__.exit

if.entry.i:                                       ; preds = %4
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i, align 8
  %28 = shl i64 %25, 4
  %29 = tail call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i14, align 4
  br label %Array_Var____sl__.exit

Array_Var____sl__.exit:                           ; preds = %.Array_Var____sl__.exit_crit_edge, %if.entry.i
  %30 = phi ptr [ %.pre20, %.Array_Var____sl__.exit_crit_edge ], [ %29, %if.entry.i ]
  %31 = phi i64 [ %24, %.Array_Var____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i14, align 4
  %33 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %5, ptr %33, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %34 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %34, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Const, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i18 = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i18, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx3, align 4
  store i64 2, ptr %18, align 4
  %memberidx1.i.i19 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i20 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i20, align 4
  %memberidx4 = getelementptr inbounds %Const, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx.i14, align 4
  %memberidx1.i = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 3
  %25 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %24, %25
  br i1 %.not.i, label %.Array_Const____sl__.exit_crit_edge, label %if.entry.i

.Array_Const____sl__.exit_crit_edge:              ; preds = %4
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 1
  %.pre21 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Const____sl__.exit

if.entry.i:                                       ; preds = %4
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i, align 8
  %28 = shl i64 %25, 4
  %29 = tail call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i14, align 4
  br label %Array_Const____sl__.exit

Array_Const____sl__.exit:                         ; preds = %.Array_Const____sl__.exit_crit_edge, %if.entry.i
  %30 = phi ptr [ %.pre21, %.Array_Const____sl__.exit_crit_edge ], [ %29, %if.entry.i ]
  %31 = phi i64 [ %24, %.Array_Const____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i14, align 4
  %33 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %5, ptr %33, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %34 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %34, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i149, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i148, %if.entry.i149 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %6 = load i64, ptr %.tr11.i, align 4
  switch i64 %6, label %get_class_from_type.exit [
    i64 20, label %if.entry.i149
    i64 11, label %if.entry3.i
  ]

if.entry.i149:                                    ; preds = %tailrecurse.i
  %memberidx1.i148 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i150 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %7 = load ptr, ptr %memberidx6.i150, align 8
  %memberidx.i.i151 = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i151, align 8
  %9 = load i64, ptr %7, align 4
  %memberidx.i.i.i152 = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i152, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i153 = getelementptr inbounds %Module, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx2.i.i153, align 8
  %memberidx3.i.i154 = getelementptr inbounds %TypeId, ptr %7, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i.i154, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i147 = phi ptr [ %17, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i147, i64 0, i32 6
  %18 = load ptr, ptr %memberidx3, align 8
  %19 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %19, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %20 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i, align 4
  %21 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %20)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %18, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %18, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i = icmp eq ptr %26, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %27 = phi ptr [ %37, %else.i ], [ %24, %get_class_from_type.exit ]
  %28 = phi i64 [ %38, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = phi ptr [ %42, %else.i ], [ %26, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %40, %else.i ], [ %23, %get_class_from_type.exit ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i76 = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx.i.i76, align 4
  %32 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %32
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i78, align 8
  %34 = load ptr, ptr %memberidx.i.i, align 8
  %35 = tail call i64 @memcmp(ptr %33, ptr %34, i64 %31)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre158 = load ptr, ptr %18, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre159.pre = load ptr, ptr %18, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre159.pre, i64 %hash.0.i
  %.pre160.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre160.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %37 = phi ptr [ %.pre158, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = add nuw i64 %hash.0.i, 1
  %40 = urem i64 %39, %38
  %41 = getelementptr inbounds ptr, ptr %37, i64 %40
  %42 = load ptr, ptr %41, align 8
  %.not26.i = icmp eq ptr %42, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre160.pre, i64 0, i32 1
  %43 = load ptr, ptr %memberidx11.i, align 8
  %44 = icmp eq ptr %43, null
  br i1 %44, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %ifend12, %get_class_prop_type.exit, %ifend33, %TypeChecker_error.exit132, %TypeChecker_error.exit114, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit114 ], [ null, %TypeChecker_error.exit132 ], [ %176, %ifend33 ], [ null, %get_class_prop_type.exit ], [ null, %ifend12 ], [ null, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i147, i64 0, i32 1
  %45 = load ptr, ptr %memberidx4, align 8
  %46 = load ptr, ptr %45, align 8
  %memberidx5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx5, align 8
  %48 = tail call ptr %47(ptr nonnull %45)
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @180, ptr %48)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i79 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i79, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 %50, ptr %memberidx2.i, align 4
  tail call void @free(ptr %48)
  %53 = load ptr, ptr %4, align 8
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %54 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 6
  %55 = load ptr, ptr %memberidx1.i81, align 8
  %56 = call ptr @malloc(i32 24)
  store i64 4, ptr %56, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %52, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %57 = load i64, ptr %memberidx.i.i84, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 3
  %58 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i85 = icmp slt i64 %57, %58
  br i1 %.not.i.i85, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %.pre166 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %59 = shl nuw i64 %58, 1
  store i64 %59, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %60 = load ptr, ptr %memberidx2.i.i.i, align 8
  %61 = shl i64 %58, 4
  %62 = call ptr @realloc(ptr %60, i64 %61)
  store ptr %62, ptr %memberidx2.i.i.i, align 8
  %.pre165 = load i64, ptr %memberidx.i.i84, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %63 = phi ptr [ %.pre166, %if.entry.TypeChecker_error.exit_crit_edge ], [ %62, %if.entry.i.i ]
  %64 = phi i64 [ %57, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre165, %if.entry.i.i ]
  %65 = add nsw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i84, align 4
  %66 = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %56, ptr %66, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %67 = load ptr, ptr %0, align 8
  %memberidx.i.i86 = getelementptr inbounds %PropId, ptr %43, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i.i86, align 8
  %memberidx.i.i.i87 = getelementptr inbounds %Program, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i.i87, align 8
  %70 = load i64, ptr %68, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %69, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %70
  %73 = load ptr, ptr %72, align 8
  %memberidx2.i.i.i88 = getelementptr inbounds %Module, ptr %73, i64 0, i32 3
  %74 = load ptr, ptr %memberidx2.i.i.i88, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %68, i64 0, i32 2
  %75 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %74, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %75
  %78 = load ptr, ptr %77, align 8
  %79 = load i64, ptr %43, align 4
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i90 = getelementptr inbounds %Class, ptr %78, i64 0, i32 5
  %81 = load ptr, ptr %memberidx1.i90, align 8
  %memberidx2.i91 = getelementptr inbounds %PropId, ptr %43, i64 0, i32 2
  %82 = load i64, ptr %memberidx2.i91, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i12.i, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %85, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %78, i64 0, i32 4
  %86 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %43, i64 0, i32 2
  %87 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %86, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i11.i, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %90, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i89 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx8 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i89, i64 0, i32 1
  %91 = load ptr, ptr %memberidx8, align 8
  %memberidx.i92 = getelementptr inbounds %Array_Type_, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i92, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds ptr, ptr %92, i64 1
  %95 = load ptr, ptr %94, align 8
  %memberidx.i94 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %96 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i95 = getelementptr inbounds %Compiler, ptr %96, i64 0, i32 6
  %97 = load ptr, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 2
  %98 = load i64, ptr %memberidx2.i96, align 4
  %99 = icmp sgt i64 %98, 0
  br i1 %99, label %common.ret, label %ifend12

ifend12:                                          ; preds = %get_class_prop_type.exit
  %memberidx13 = getelementptr inbounds %ExpressionIndexNode, ptr %4, i64 0, i32 4
  %100 = load ptr, ptr %memberidx13, align 8
  %101 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %93, ptr %100)
  %102 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i98 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 6
  %103 = load ptr, ptr %memberidx1.i98, align 8
  %memberidx2.i99 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %104 = load i64, ptr %memberidx2.i99, align 4
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %common.ret, label %ifend16

ifend16:                                          ; preds = %ifend12
  %memberidx17 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 3
  %106 = load ptr, ptr %memberidx17, align 8
  %107 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %93, ptr %106)
  br i1 %107, label %ifend20, label %if.entry18

if.entry18:                                       ; preds = %ifend16
  %108 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %93)
  %109 = load ptr, ptr %108, align 8
  %memberidx21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx21, align 8
  %111 = tail call ptr %110(ptr nonnull %108)
  %112 = load ptr, ptr %memberidx17, align 8
  %113 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %112)
  %114 = load ptr, ptr %113, align 8
  %memberidx23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %114, i64 0, i32 5
  %115 = load ptr, ptr %memberidx23, align 8
  %116 = tail call ptr %115(ptr nonnull %113)
  %117 = alloca ptr, align 8
  %118 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %117, ptr nonnull @177, ptr %111, ptr %116)
  %119 = load ptr, ptr %117, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i100 = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i100, align 8
  %memberidx1.i101 = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 %118, ptr %memberidx1.i101, align 4
  %memberidx2.i102 = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 %118, ptr %memberidx2.i102, align 4
  tail call void @free(ptr %111)
  tail call void @free(ptr %116)
  %121 = load ptr, ptr %memberidx13, align 8
  %122 = load ptr, ptr %121, align 8
  %123 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %123, i64 0, i32 6
  %124 = load ptr, ptr %memberidx1.i104, align 8
  %125 = call ptr @malloc(i32 24)
  store i64 5, ptr %125, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %125, i64 0, i32 2
  store ptr %122, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %FloError, ptr %125, i64 0, i32 1
  store ptr %120, ptr %memberidx2.i.i106, align 8
  %memberidx.i.i107 = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 2
  %126 = load i64, ptr %memberidx.i.i107, align 4
  %memberidx1.i2.i108 = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 3
  %127 = load i64, ptr %memberidx1.i2.i108, align 4
  %.not.i.i109 = icmp slt i64 %126, %127
  br i1 %.not.i.i109, label %if.entry18.TypeChecker_error.exit114_crit_edge, label %if.entry.i.i112

if.entry18.TypeChecker_error.exit114_crit_edge:   ; preds = %if.entry18
  %memberidx4.i.i113.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 1
  %.pre162 = load ptr, ptr %memberidx4.i.i113.phi.trans.insert, align 8
  br label %TypeChecker_error.exit114

if.entry.i.i112:                                  ; preds = %if.entry18
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx1.i2.i108, align 4
  %memberidx2.i.i.i111 = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 1
  %129 = load ptr, ptr %memberidx2.i.i.i111, align 8
  %130 = shl i64 %127, 4
  %131 = call ptr @realloc(ptr %129, i64 %130)
  store ptr %131, ptr %memberidx2.i.i.i111, align 8
  %.pre161 = load i64, ptr %memberidx.i.i107, align 4
  br label %TypeChecker_error.exit114

TypeChecker_error.exit114:                        ; preds = %if.entry18.TypeChecker_error.exit114_crit_edge, %if.entry.i.i112
  %132 = phi ptr [ %.pre162, %if.entry18.TypeChecker_error.exit114_crit_edge ], [ %131, %if.entry.i.i112 ]
  %133 = phi i64 [ %126, %if.entry18.TypeChecker_error.exit114_crit_edge ], [ %.pre161, %if.entry.i.i112 ]
  %134 = add nsw i64 %133, 1
  store i64 %134, ptr %memberidx.i.i107, align 4
  %135 = getelementptr inbounds ptr, ptr %132, i64 %133
  store ptr %125, ptr %135, align 8
  br label %common.ret

ifend20:                                          ; preds = %ifend16
  %memberidx26 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %136 = load ptr, ptr %memberidx26, align 8
  %137 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %95, ptr %136)
  %138 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i116 = getelementptr inbounds %Compiler, ptr %138, i64 0, i32 6
  %139 = load ptr, ptr %memberidx1.i116, align 8
  %memberidx2.i117 = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i117, align 4
  %141 = icmp sgt i64 %140, 0
  br i1 %141, label %common.ret, label %ifend29

ifend29:                                          ; preds = %ifend20
  %142 = load ptr, ptr %memberidx17, align 8
  %143 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %93, ptr %142)
  br i1 %143, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %ifend29
  %144 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %95)
  %145 = load ptr, ptr %144, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %145, i64 0, i32 5
  %146 = load ptr, ptr %memberidx34, align 8
  %147 = tail call ptr %146(ptr nonnull %144)
  %memberidx35 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 3
  %148 = load ptr, ptr %memberidx35, align 8
  %149 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %148)
  %150 = load ptr, ptr %149, align 8
  %memberidx36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx36, align 8
  %152 = tail call ptr %151(ptr nonnull %149)
  %153 = alloca ptr, align 8
  %154 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %153, ptr nonnull @177, ptr %147, ptr %152)
  %155 = load ptr, ptr %153, align 8
  %156 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %156, align 8
  %memberidx.i118 = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  store ptr %155, ptr %memberidx.i118, align 8
  %memberidx1.i119 = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  store i64 %154, ptr %memberidx1.i119, align 4
  %memberidx2.i120 = getelementptr inbounds %string, ptr %156, i64 0, i32 3
  store i64 %154, ptr %memberidx2.i120, align 4
  tail call void @free(ptr %147)
  tail call void @free(ptr %152)
  %157 = load ptr, ptr %memberidx26, align 8
  %158 = load ptr, ptr %157, align 8
  %159 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i122 = getelementptr inbounds %Compiler, ptr %159, i64 0, i32 6
  %160 = load ptr, ptr %memberidx1.i122, align 8
  %161 = call ptr @malloc(i32 24)
  store i64 5, ptr %161, align 4
  %memberidx1.i.i123 = getelementptr inbounds %FloError, ptr %161, i64 0, i32 2
  store ptr %158, ptr %memberidx1.i.i123, align 8
  %memberidx2.i.i124 = getelementptr inbounds %FloError, ptr %161, i64 0, i32 1
  store ptr %156, ptr %memberidx2.i.i124, align 8
  %memberidx.i.i125 = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 2
  %162 = load i64, ptr %memberidx.i.i125, align 4
  %memberidx1.i2.i126 = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 3
  %163 = load i64, ptr %memberidx1.i2.i126, align 4
  %.not.i.i127 = icmp slt i64 %162, %163
  br i1 %.not.i.i127, label %if.entry31.TypeChecker_error.exit132_crit_edge, label %if.entry.i.i130

if.entry31.TypeChecker_error.exit132_crit_edge:   ; preds = %if.entry31
  %memberidx4.i.i131.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 1
  %.pre164 = load ptr, ptr %memberidx4.i.i131.phi.trans.insert, align 8
  br label %TypeChecker_error.exit132

if.entry.i.i130:                                  ; preds = %if.entry31
  %164 = shl nuw i64 %163, 1
  store i64 %164, ptr %memberidx1.i2.i126, align 4
  %memberidx2.i.i.i129 = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i.i.i129, align 8
  %166 = shl i64 %163, 4
  %167 = call ptr @realloc(ptr %165, i64 %166)
  store ptr %167, ptr %memberidx2.i.i.i129, align 8
  %.pre163 = load i64, ptr %memberidx.i.i125, align 4
  br label %TypeChecker_error.exit132

TypeChecker_error.exit132:                        ; preds = %if.entry31.TypeChecker_error.exit132_crit_edge, %if.entry.i.i130
  %168 = phi ptr [ %.pre164, %if.entry31.TypeChecker_error.exit132_crit_edge ], [ %167, %if.entry.i.i130 ]
  %169 = phi i64 [ %162, %if.entry31.TypeChecker_error.exit132_crit_edge ], [ %.pre163, %if.entry.i.i130 ]
  %170 = add nsw i64 %169, 1
  store i64 %170, ptr %memberidx.i.i125, align 4
  %171 = getelementptr inbounds ptr, ptr %168, i64 %169
  store ptr %161, ptr %171, align 8
  br label %common.ret

ifend33:                                          ; preds = %ifend29
  %172 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %172, align 4
  %memberidx.i.i133 = getelementptr inbounds %Expression, ptr %172, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i133, align 4
  %memberidx1.i.i134 = getelementptr inbounds %Expression, ptr %172, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i134, align 1
  %memberidx.i135 = getelementptr inbounds %MemberExpression, ptr %172, i64 0, i32 4
  store ptr %1, ptr %memberidx.i135, align 8
  %memberidx1.i136 = getelementptr inbounds %MemberExpression, ptr %172, i64 0, i32 5
  store ptr %43, ptr %memberidx1.i136, align 8
  %memberidx2.i137 = getelementptr inbounds %Expression, ptr %172, i64 0, i32 3
  store ptr %common.ret.op.i89, ptr %memberidx2.i137, align 8
  %173 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %173, align 8
  %memberidx.i138 = getelementptr inbounds %Array_Expression_, ptr %173, i64 0, i32 2
  store i64 0, ptr %memberidx.i138, align 4
  %memberidx1.i139 = getelementptr inbounds %Array_Expression_, ptr %173, i64 0, i32 3
  store i64 16, ptr %memberidx1.i139, align 4
  %memberidx2.i140 = getelementptr inbounds %Array_Expression_, ptr %173, i64 0, i32 1
  %174 = tail call ptr @malloc(i32 128)
  store ptr %174, ptr %memberidx2.i140, align 8
  store ptr %101, ptr %174, align 8
  %175 = getelementptr inbounds ptr, ptr %174, i64 1
  store ptr %137, ptr %175, align 8
  store i64 2, ptr %memberidx.i138, align 4
  %176 = tail call ptr @malloc(i32 41)
  %memberidx41 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i89, i64 0, i32 2
  %177 = load ptr, ptr %memberidx41, align 8
  store i64 8, ptr %176, align 4
  %memberidx.i.i141 = getelementptr inbounds %Expression, ptr %176, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i141, align 4
  %memberidx1.i.i142 = getelementptr inbounds %Expression, ptr %176, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i142, align 1
  %memberidx.i143 = getelementptr inbounds %CallExpression, ptr %176, i64 0, i32 4
  store ptr %172, ptr %memberidx.i143, align 8
  %memberidx1.i144 = getelementptr inbounds %CallExpression, ptr %176, i64 0, i32 5
  store ptr %173, ptr %memberidx1.i144, align 8
  %memberidx2.i145 = getelementptr inbounds %Expression, ptr %176, i64 0, i32 3
  store ptr %177, ptr %memberidx2.i145, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %left = alloca ptr, align 8
  %right = alloca ptr, align 8
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = add i64 %4, -19
  %6 = icmp ult i64 %5, 12
  %7 = icmp eq i64 %4, 19
  %memberidx1 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ExpressionNode, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp eq i64 %9, 14
  %11 = and i1 %7, %10
  br i1 %11, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %12 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %12, align 4
  %13 = load ptr, ptr %memberidx1, align 8
  %memberidx4 = getelementptr inbounds %ExpressionIndexNode, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %12, ptr %14)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 6
  %17 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit.ifend_crit_edge, %3
  %20 = phi ptr [ %.pre, %is_object.exit.ifend_crit_edge ], [ %8, %3 ]
  %21 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %20)
  store ptr %21, ptr %left, align 8
  %memberidx.i175 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %memberidx.i175, align 8
  %memberidx1.i176 = getelementptr inbounds %Compiler, ptr %22, i64 0, i32 6
  %23 = load ptr, ptr %memberidx1.i176, align 8
  %memberidx2.i177 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i177, align 4
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %common.ret, label %ifend15

common.ret:                                       ; preds = %ifend19, %ifend, %if.entry, %TypeChecker_error.exit, %if.entry110, %if.entry102, %ifend98, %if.entry87, %ifend80, %ifend69, %ifend61, %if.entry32, %if.entry26, %if.entry17, %if.entry9
  %common.ret.op = phi ptr [ %33, %if.entry9 ], [ %45, %if.entry17 ], [ %61, %if.entry26 ], [ %62, %if.entry32 ], [ %100, %ifend61 ], [ %108, %ifend69 ], [ %121, %ifend80 ], [ %125, %if.entry87 ], [ %136, %ifend98 ], [ %137, %if.entry102 ], [ %147, %if.entry110 ], [ null, %TypeChecker_error.exit ], [ null, %if.entry ], [ null, %ifend ], [ null, %ifend19 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %if.entry
  %memberidx8 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = load i64, ptr %26, align 4
  %28 = icmp eq i64 %27, 20
  br i1 %28, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend7, %if.entry.i
  %.tr5.i = phi ptr [ %29, %if.entry.i ], [ %26, %ifend7 ]
  %memberidx1.i266 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %29 = load ptr, ptr %memberidx1.i266, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 20
  br i1 %31, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend7
  %.lcssa.i = phi i64 [ %27, %ifend7 ], [ %30, %if.entry.i ]
  %32 = icmp eq i64 %.lcssa.i, 11
  br i1 %32, label %if.entry9, label %is_object.exit.ifend_crit_edge

is_object.exit.ifend_crit_edge:                   ; preds = %is_object.exit
  %.pre = load ptr, ptr %memberidx1, align 8
  br label %ifend

if.entry9:                                        ; preds = %is_object.exit
  %33 = tail call fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %15, ptr %2)
  br label %common.ret

ifend15:                                          ; preds = %ifend
  %memberidx16 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %34 = load ptr, ptr %memberidx16, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 20
  br i1 %36, label %if.entry.i269, label %is_object.exit271

if.entry.i269:                                    ; preds = %ifend15, %if.entry.i269
  %.tr5.i267 = phi ptr [ %37, %if.entry.i269 ], [ %34, %ifend15 ]
  %memberidx1.i268 = getelementptr inbounds %GenericType, ptr %.tr5.i267, i64 0, i32 3
  %37 = load ptr, ptr %memberidx1.i268, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 20
  br i1 %39, label %if.entry.i269, label %is_object.exit271

is_object.exit271:                                ; preds = %if.entry.i269, %ifend15
  %.lcssa.i270 = phi i64 [ %35, %ifend15 ], [ %38, %if.entry.i269 ]
  %40 = icmp eq i64 %.lcssa.i270, 11
  %41 = xor i1 %6, true
  %42 = and i1 %40, %41
  %43 = icmp ne i64 %4, 18
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %is_object.exit271
  %45 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %21, ptr %2, ptr null)
  br label %common.ret

ifend19:                                          ; preds = %is_object.exit271
  %memberidx21 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx21, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %34, ptr %46)
  store ptr %47, ptr %right, align 8
  %48 = load ptr, ptr %memberidx.i175, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 6
  %49 = load ptr, ptr %memberidx1.i179, align 8
  %memberidx2.i180 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i180, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %52 = load ptr, ptr %memberidx25, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 20
  br i1 %54, label %if.entry.i274, label %is_object.exit276

if.entry.i274:                                    ; preds = %ifend24, %if.entry.i274
  %.tr5.i272 = phi ptr [ %55, %if.entry.i274 ], [ %52, %ifend24 ]
  %memberidx1.i273 = getelementptr inbounds %GenericType, ptr %.tr5.i272, i64 0, i32 3
  %55 = load ptr, ptr %memberidx1.i273, align 8
  %56 = load i64, ptr %55, align 4
  %57 = icmp eq i64 %56, 20
  br i1 %57, label %if.entry.i274, label %is_object.exit276

is_object.exit276:                                ; preds = %if.entry.i274, %ifend24
  %.lcssa.i275 = phi i64 [ %53, %ifend24 ], [ %56, %if.entry.i274 ]
  %58 = icmp eq i64 %.lcssa.i275, 11
  %59 = icmp eq i64 %4, 18
  %60 = and i1 %59, %58
  br i1 %60, label %if.entry26, label %ifend31

if.entry26:                                       ; preds = %is_object.exit276
  %61 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %47, ptr %2, ptr %21)
  br label %common.ret

ifend31:                                          ; preds = %is_object.exit276
  br i1 %6, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend31
  %62 = tail call fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %21, ptr %47, ptr %2)
  br label %common.ret

ifend34:                                          ; preds = %ifend31
  %memberidx35 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %63 = load i1, ptr %memberidx35, align 1
  %memberidx36 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %64 = load i1, ptr %memberidx36, align 1
  %65 = and i1 %63, %64
  %66 = load ptr, ptr %memberidx16, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 21
  %69 = icmp ne i64 %53, 21
  %70 = and i1 %69, %68
  br i1 %70, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend34
  store ptr %52, ptr %memberidx16, align 8
  %.pre281 = load i64, ptr %52, align 4
  %.pre282 = load ptr, ptr %memberidx25, align 8
  %.pre283 = load i64, ptr %.pre282, align 4
  br label %ifend43

ifend43:                                          ; preds = %ifend34, %if.entry41
  %71 = phi i64 [ %53, %ifend34 ], [ %.pre283, %if.entry41 ]
  %72 = phi i64 [ %67, %ifend34 ], [ %.pre281, %if.entry41 ]
  %73 = add i64 %72, -1
  %74 = icmp ult i64 %73, 9
  %75 = add i64 %71, -1
  %76 = icmp ult i64 %75, 9
  %77 = and i1 %74, %76
  br i1 %77, label %if.entry48, label %else49

if.entry48:                                       ; preds = %ifend43
  %78 = icmp eq i64 %4, 6
  br i1 %78, label %if.entry51, label %ifend53

else49:                                           ; preds = %ifend43
  %79 = or i64 %71, %72
  %80 = icmp eq i64 %79, 0
  %81 = add i64 %4, -15
  %82 = icmp ult i64 %81, 2
  %or.cond = select i1 %80, i1 %82, i1 false
  br i1 %or.cond, label %if.entry87, label %ifend50.thread

ifend50:                                          ; preds = %ifend65
  %83 = add i64 %4, -7
  %84 = icmp ult i64 %83, 6
  br i1 %84, label %if.entry96, label %ifend93.thread

ifend93.thread:                                   ; preds = %ifend50
  %85 = icmp eq i64 %71, 6
  br label %ifend104

ifend50.thread:                                   ; preds = %else49
  %86 = add i64 %4, -7
  %87 = icmp ult i64 %86, 6
  br i1 %87, label %ifend98, label %ifend93

if.entry51:                                       ; preds = %if.entry48
  %88 = icmp ult i64 %73, 7
  br i1 %88, label %if.entry55, label %ifend57

ifend53:                                          ; preds = %if.entry48
  %89 = add i64 %4, -1
  %90 = icmp ult i64 %89, 10
  br i1 %90, label %if.entry63, label %ifend65

if.entry55:                                       ; preds = %if.entry51
  %91 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %91, align 4
  %92 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %92, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %92, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 3
  store ptr %91, ptr %memberidx1.i.i, align 8
  %93 = load i1, ptr %memberidx35, align 1
  store i1 %93, ptr %memberidx1.i.i.i, align 1
  store ptr %92, ptr %left, align 8
  %.pre290 = load ptr, ptr %memberidx25, align 8
  %.pre291 = load i64, ptr %.pre290, align 4
  %.pre292 = add i64 %.pre291, -1
  br label %ifend57

ifend57:                                          ; preds = %if.entry51, %if.entry55
  %.pre-phi = phi i64 [ %75, %if.entry51 ], [ %.pre292, %if.entry55 ]
  %94 = phi ptr [ %21, %if.entry51 ], [ %92, %if.entry55 ]
  %95 = icmp ult i64 %.pre-phi, 7
  br i1 %95, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend57
  %96 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %96, align 4
  %97 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %97, align 4
  %memberidx.i.i.i184 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i184, align 4
  %memberidx1.i.i.i185 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 1
  %memberidx.i.i186 = getelementptr inbounds %TypeCastExpression, ptr %97, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i186, align 8
  %memberidx1.i.i187 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 3
  store ptr %96, ptr %memberidx1.i.i187, align 8
  %98 = load i1, ptr %memberidx36, align 1
  store i1 %98, ptr %memberidx1.i.i.i185, align 1
  store ptr %97, ptr %right, align 8
  br label %ifend61

ifend61:                                          ; preds = %ifend57, %if.entry59
  %99 = phi ptr [ %47, %ifend57 ], [ %97, %if.entry59 ]
  %100 = tail call ptr @malloc(i32 49)
  %memberidx62 = getelementptr inbounds %Expression, ptr %94, i64 0, i32 3
  %101 = load ptr, ptr %memberidx62, align 8
  store i64 8, ptr %100, align 4
  %memberidx.i.i190 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i190, align 4
  %memberidx1.i.i191 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 1
  %memberidx.i192 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 4
  store ptr %94, ptr %memberidx.i192, align 8
  %memberidx1.i193 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 5
  store i64 6, ptr %memberidx1.i193, align 4
  %memberidx2.i194 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 6
  store ptr %99, ptr %memberidx2.i194, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  store ptr %101, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i191, align 1
  br label %common.ret

if.entry63:                                       ; preds = %ifend53
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %102 = load ptr, ptr %left, align 8
  %memberidx66 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  %103 = load ptr, ptr %memberidx66, align 8
  %104 = icmp ugt i64 %4, 6
  br i1 %104, label %if.entry67, label %ifend69

ifend65:                                          ; preds = %ifend53
  %105 = add i64 %4, -13
  %106 = icmp ult i64 %105, 5
  br i1 %106, label %if.entry70, label %ifend50

if.entry67:                                       ; preds = %if.entry63
  %107 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %107, align 4
  br label %ifend69

ifend69:                                          ; preds = %if.entry63, %if.entry67
  %exp_type.0 = phi ptr [ %107, %if.entry67 ], [ %103, %if.entry63 ]
  %108 = tail call ptr @malloc(i32 49)
  %109 = load ptr, ptr %right, align 8
  store i64 8, ptr %108, align 4
  %memberidx.i.i195 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i195, align 4
  %memberidx1.i.i196 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 1
  %memberidx.i197 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 4
  store ptr %102, ptr %memberidx.i197, align 8
  %memberidx1.i198 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i198, align 4
  %memberidx2.i199 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 6
  store ptr %109, ptr %memberidx2.i199, align 8
  %memberidx3.i200 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 3
  store ptr %exp_type.0, ptr %memberidx3.i200, align 8
  store i1 %65, ptr %memberidx1.i.i196, align 1
  br label %common.ret

if.entry70:                                       ; preds = %ifend65
  %110 = and i64 %72, -2
  %111 = icmp eq i64 %110, 8
  br i1 %111, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %if.entry70
  %112 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %112, align 4
  %memberidx.i202 = getelementptr inbounds %IntType, ptr %112, i64 0, i32 1
  store i1 true, ptr %memberidx.i202, align 1
  %113 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %113, align 4
  %memberidx.i.i.i203 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i203, align 4
  %memberidx1.i.i.i204 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  %memberidx.i.i205 = getelementptr inbounds %TypeCastExpression, ptr %113, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i205, align 8
  %memberidx1.i.i206 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  store ptr %112, ptr %memberidx1.i.i206, align 8
  %114 = load i1, ptr %memberidx35, align 1
  store i1 %114, ptr %memberidx1.i.i.i204, align 1
  store ptr %113, ptr %left, align 8
  %.pre288 = load ptr, ptr %memberidx25, align 8
  %.pre289 = load i64, ptr %.pre288, align 4
  br label %ifend76

ifend76:                                          ; preds = %if.entry70, %if.entry74
  %115 = phi i64 [ %71, %if.entry70 ], [ %.pre289, %if.entry74 ]
  %116 = and i64 %115, -2
  %117 = icmp eq i64 %116, 8
  br i1 %117, label %if.entry78, label %ifend80

if.entry78:                                       ; preds = %ifend76
  %118 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %118, align 4
  %memberidx.i209 = getelementptr inbounds %IntType, ptr %118, i64 0, i32 1
  store i1 true, ptr %memberidx.i209, align 1
  %119 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %119, align 4
  %memberidx.i.i.i210 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i210, align 4
  %memberidx1.i.i.i211 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  %memberidx.i.i212 = getelementptr inbounds %TypeCastExpression, ptr %119, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i212, align 8
  %memberidx1.i.i213 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %118, ptr %memberidx1.i.i213, align 8
  %120 = load i1, ptr %memberidx36, align 1
  store i1 %120, ptr %memberidx1.i.i.i211, align 1
  store ptr %119, ptr %right, align 8
  br label %ifend80

ifend80:                                          ; preds = %ifend76, %if.entry78
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %121 = tail call ptr @malloc(i32 49)
  %122 = load ptr, ptr %left, align 8
  %123 = load ptr, ptr %right, align 8
  %memberidx81 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %124 = load ptr, ptr %memberidx81, align 8
  store i64 8, ptr %121, align 4
  %memberidx.i.i216 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i216, align 4
  %memberidx1.i.i217 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 1
  %memberidx.i218 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 4
  store ptr %122, ptr %memberidx.i218, align 8
  %memberidx1.i219 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i219, align 4
  %memberidx2.i220 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 6
  store ptr %123, ptr %memberidx2.i220, align 8
  %memberidx3.i221 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  store ptr %124, ptr %memberidx3.i221, align 8
  store i1 %65, ptr %memberidx1.i.i217, align 1
  br label %common.ret

if.entry87:                                       ; preds = %else49
  %125 = tail call ptr @malloc(i32 49)
  %126 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %125, align 4
  %memberidx.i.i223 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i223, align 4
  %memberidx1.i.i224 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 1
  %memberidx.i225 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 4
  store ptr %21, ptr %memberidx.i225, align 8
  %memberidx1.i226 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i226, align 4
  %memberidx2.i227 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i227, align 8
  %memberidx3.i228 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx3.i228, align 8
  store i1 %65, ptr %memberidx1.i.i224, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend50.thread
  %127 = add i64 %4, -1
  %128 = icmp ult i64 %127, 2
  %129 = icmp eq i64 %72, 13
  %130 = and i1 %128, %129
  %131 = icmp eq i64 %71, 6
  %132 = and i1 %130, %131
  br i1 %132, label %if.entry102, label %ifend104

if.entry96:                                       ; preds = %ifend50
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %.pre286 = load ptr, ptr %left, align 8
  %.pre287 = load ptr, ptr %right, align 8
  br label %ifend98

ifend98:                                          ; preds = %ifend50.thread, %if.entry96
  %133 = phi ptr [ %47, %ifend50.thread ], [ %.pre287, %if.entry96 ]
  %134 = phi ptr [ %21, %ifend50.thread ], [ %.pre286, %if.entry96 ]
  %135 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %135, align 4
  %136 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %136, align 4
  %memberidx.i.i230 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i230, align 4
  %memberidx1.i.i231 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 1
  %memberidx.i232 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 4
  store ptr %134, ptr %memberidx.i232, align 8
  %memberidx1.i233 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i233, align 4
  %memberidx2.i234 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 6
  store ptr %133, ptr %memberidx2.i234, align 8
  %memberidx3.i235 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 3
  store ptr %135, ptr %memberidx3.i235, align 8
  store i1 %65, ptr %memberidx1.i.i231, align 1
  br label %common.ret

if.entry102:                                      ; preds = %ifend93
  %137 = tail call ptr @malloc(i32 49)
  %138 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %137, align 4
  %memberidx.i.i237 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i237, align 4
  %memberidx1.i.i238 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 1
  %memberidx.i239 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 4
  store ptr %21, ptr %memberidx.i239, align 8
  %memberidx1.i240 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i240, align 4
  %memberidx2.i241 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i241, align 8
  %memberidx3.i242 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 3
  store ptr %138, ptr %memberidx3.i242, align 8
  store i1 false, ptr %memberidx1.i.i238, align 1
  br label %common.ret

ifend104:                                         ; preds = %ifend93.thread, %ifend93
  %139 = phi i1 [ %85, %ifend93.thread ], [ %131, %ifend93 ]
  %140 = icmp eq i64 %4, 31
  %141 = icmp eq i64 %72, 6
  %142 = and i1 %140, %141
  %143 = and i1 %142, %139
  br i1 %143, label %if.entry110, label %ifend112

if.entry110:                                      ; preds = %ifend104
  %144 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %144, ptr noundef nonnull align 8 dereferenceable(5) @181, i64 5, i1 false)
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i.i244 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i.i244, align 8
  %memberidx1.i.i245 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i245, align 4
  %memberidx2.i.i246 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i246, align 4
  %146 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %145)
  %147 = tail call ptr @malloc(i32 42)
  %148 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %148, align 8
  %memberidx.i247 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 2
  store i64 0, ptr %memberidx.i247, align 4
  %memberidx1.i248 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 3
  store i64 16, ptr %memberidx1.i248, align 4
  %memberidx2.i249 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 1
  %149 = tail call ptr @malloc(i32 128)
  store ptr %149, ptr %memberidx2.i249, align 8
  store ptr %21, ptr %149, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 1
  store ptr %47, ptr %150, align 8
  store i64 2, ptr %memberidx.i247, align 4
  store i64 8, ptr %147, align 4
  %memberidx.i.i250 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i250, align 4
  %memberidx1.i.i251 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i251, align 1
  %memberidx.i252 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 6
  store ptr %146, ptr %memberidx.i252, align 8
  %memberidx1.i253 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 5
  store i1 true, ptr %memberidx1.i253, align 1
  %memberidx2.i254 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 4
  store ptr %148, ptr %memberidx2.i254, align 8
  %memberidx3.i255 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %146, ptr %memberidx3.i255, align 8
  br label %common.ret

ifend112:                                         ; preds = %ifend104
  %151 = tail call fastcc ptr @dump_bin_op(i64 %4)
  %152 = load ptr, ptr %151, align 8
  %memberidx115 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %152, i64 0, i32 5
  %153 = load ptr, ptr %memberidx115, align 8
  %154 = tail call ptr %153(ptr nonnull %151)
  %155 = load ptr, ptr %memberidx16, align 8
  %156 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %155)
  %157 = load ptr, ptr %156, align 8
  %memberidx117 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %157, i64 0, i32 5
  %158 = load ptr, ptr %memberidx117, align 8
  %159 = tail call ptr %158(ptr nonnull %156)
  %160 = load ptr, ptr %memberidx25, align 8
  %161 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %160)
  %162 = load ptr, ptr %161, align 8
  %memberidx119 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %162, i64 0, i32 5
  %163 = load ptr, ptr %memberidx119, align 8
  %164 = tail call ptr %163(ptr nonnull %161)
  %165 = alloca ptr, align 8
  %166 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %165, ptr nonnull @182, ptr %154, ptr %159, ptr %164)
  %167 = load ptr, ptr %165, align 8
  %168 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %168, align 8
  %memberidx.i256 = getelementptr inbounds %string, ptr %168, i64 0, i32 1
  store ptr %167, ptr %memberidx.i256, align 8
  %memberidx1.i257 = getelementptr inbounds %string, ptr %168, i64 0, i32 2
  store i64 %166, ptr %memberidx1.i257, align 4
  %memberidx2.i258 = getelementptr inbounds %string, ptr %168, i64 0, i32 3
  store i64 %166, ptr %memberidx2.i258, align 4
  tail call void @free(ptr %154)
  tail call void @free(ptr %159)
  tail call void @free(ptr %164)
  %169 = load ptr, ptr %2, align 8
  %170 = load ptr, ptr %memberidx.i175, align 8
  %memberidx1.i260 = getelementptr inbounds %Compiler, ptr %170, i64 0, i32 6
  %171 = load ptr, ptr %memberidx1.i260, align 8
  %172 = call ptr @malloc(i32 24)
  store i64 5, ptr %172, align 4
  %memberidx1.i.i261 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 2
  store ptr %169, ptr %memberidx1.i.i261, align 8
  %memberidx2.i.i262 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 1
  store ptr %168, ptr %memberidx2.i.i262, align 8
  %memberidx.i.i263 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 2
  %173 = load i64, ptr %memberidx.i.i263, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 3
  %174 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %173, %174
  br i1 %.not.i.i, label %ifend112.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

ifend112.TypeChecker_error.exit_crit_edge:        ; preds = %ifend112
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %.pre285 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %ifend112
  %175 = shl nuw i64 %174, 1
  store i64 %175, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %176 = load ptr, ptr %memberidx2.i.i.i, align 8
  %177 = shl i64 %174, 4
  %178 = call ptr @realloc(ptr %176, i64 %177)
  store ptr %178, ptr %memberidx2.i.i.i, align 8
  %.pre284 = load i64, ptr %memberidx.i.i263, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend112.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %179 = phi ptr [ %.pre285, %ifend112.TypeChecker_error.exit_crit_edge ], [ %178, %if.entry.i.i ]
  %180 = phi i64 [ %173, %ifend112.TypeChecker_error.exit_crit_edge ], [ %.pre284, %if.entry.i.i ]
  %181 = add nsw i64 %180, 1
  store i64 %181, ptr %memberidx.i.i263, align 4
  %182 = getelementptr inbounds ptr, ptr %179, i64 %180
  store ptr %172, ptr %182, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit111, %TypeChecker_error.exit129, %TypeChecker_get_func_args_from_expression.exit, %2, %ifend23, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %16, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %95, %ifend23 ], [ null, %2 ], [ null, %TypeChecker_get_func_args_from_expression.exit ], [ null, %TypeChecker_error.exit129 ], [ null, %TypeChecker_error.exit111 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = icmp eq i64 %10, 18
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 21
  %15 = and i1 %11, %14
  br i1 %15, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %16 = tail call fastcc ptr @TypeChecker_check_intrinsic_call(ptr nonnull %0, ptr nonnull %5, ptr nonnull %1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %.not = icmp eq i64 %13, 16
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend6
  %17 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %18 = load ptr, ptr %17, align 8
  %memberidx13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx13, align 8
  %20 = tail call ptr %19(ptr nonnull %17)
  %21 = alloca ptr, align 8
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %21, ptr nonnull @214, ptr %20)
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i73 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i74, align 4
  %memberidx2.i75 = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i75, align 4
  tail call void @free(ptr %20)
  %25 = load ptr, ptr %memberidx, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i77, align 8
  %29 = call ptr @malloc(i32 24)
  store i64 5, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %29, i64 0, i32 2
  store ptr %26, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %29, i64 0, i32 1
  store ptr %24, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 3
  %31 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %30, %31
  br i1 %.not.i.i, label %if.entry9.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry9.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry9
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %.pre9 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry9
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i.i, align 8
  %34 = shl i64 %31, 4
  %35 = call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %36 = phi ptr [ %.pre9, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %35, %if.entry.i.i ]
  %37 = phi i64 [ %30, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr %memberidx.i.i, align 4
  %39 = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %39, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend6
  switch i64 %10, label %TypeChecker_get_func_args_from_expression.exit [
    i64 8, label %if.entry.i
    i64 13, label %if.entry9.i
  ]

if.entry.i:                                       ; preds = %ifend11
  %memberidx1.i79 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %40 = load ptr, ptr %memberidx1.i79, align 8
  %41 = load i64, ptr %40, align 4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %if.entry3.i, label %TypeChecker_get_func_args_from_expression.exit

if.entry3.i:                                      ; preds = %if.entry.i
  %43 = load ptr, ptr %0, align 8
  %memberidx.i.i80 = getelementptr inbounds %Program, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i80, align 8
  %memberidx1.i.i81 = getelementptr inbounds %VarId, ptr %40, i64 0, i32 1
  %45 = load i64, ptr %memberidx1.i.i81, align 4
  %memberidx.i.i.i82 = getelementptr inbounds %Array_Module_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i.i82, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %45
  %48 = load ptr, ptr %47, align 8
  %memberidx2.i.i83 = getelementptr inbounds %Module, ptr %48, i64 0, i32 4
  %49 = load ptr, ptr %memberidx2.i.i83, align 8
  %memberidx3.i.i = getelementptr inbounds %VarId, ptr %40, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Function_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i5.i.i, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  %53 = load ptr, ptr %52, align 8
  %memberidx7.i = getelementptr inbounds %Function, ptr %53, i64 0, i32 2
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

if.entry9.i:                                      ; preds = %ifend11
  %memberidx12.i = getelementptr inbounds %MemberExpression, ptr %5, i64 0, i32 5
  %54 = load ptr, ptr %memberidx12.i, align 8
  %55 = load ptr, ptr %0, align 8
  %memberidx.i.i20.i = getelementptr inbounds %PropId, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i20.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Program, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %58 = load i64, ptr %56, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %61, i64 0, i32 3
  %62 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %63 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx.i21.i = getelementptr inbounds %Class, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx.i21.i, align 8
  %memberidx1.i22.i = getelementptr inbounds %PropId, ptr %54, i64 0, i32 2
  %68 = load i64, ptr %memberidx1.i22.i, align 4
  %memberidx.i3.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i3.i.i, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx14.i = getelementptr inbounds %ClassMethod, ptr %71, i64 0, i32 6
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

TypeChecker_get_func_args_from_expression.exit.sink.split: ; preds = %if.entry9.i, %if.entry3.i
  %memberidx7.i.sink = phi ptr [ %memberidx7.i, %if.entry3.i ], [ %memberidx14.i, %if.entry9.i ]
  %72 = load ptr, ptr %memberidx7.i.sink, align 8
  br label %TypeChecker_get_func_args_from_expression.exit

TypeChecker_get_func_args_from_expression.exit:   ; preds = %TypeChecker_get_func_args_from_expression.exit.sink.split, %ifend11, %if.entry.i
  %common.ret.op.i = phi ptr [ null, %if.entry.i ], [ null, %ifend11 ], [ %72, %TypeChecker_get_func_args_from_expression.exit.sink.split ]
  %memberidx17 = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 4
  %73 = load ptr, ptr %memberidx17, align 8
  %74 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr nonnull %12, ptr %common.ret.op.i, ptr %73)
  %75 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 6
  %76 = load ptr, ptr %memberidx1.i85, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %77 = load i64, ptr %memberidx2.i86, align 4
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %common.ret, label %ifend20

ifend20:                                          ; preds = %TypeChecker_get_func_args_from_expression.exit
  %memberidx.i87 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i87, align 8
  %memberidx1.i88 = getelementptr inbounds %Array_Type_, ptr %79, i64 0, i32 2
  %80 = load i64, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %Array_Expression_, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i89, align 4
  %.not.i = icmp eq i64 %80, %81
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry24

for.cond.i.preheader:                             ; preds = %ifend20
  %82 = icmp sgt i64 %80, 0
  br i1 %82, label %for.body.i.lr.ph, label %ifend23

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %memberidx.i16.i = getelementptr inbounds %Array_Expression_, ptr %74, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %ifend8.i
  %i.0.i7 = phi i64 [ 0, %for.body.i.lr.ph ], [ %92, %ifend8.i ]
  %83 = load ptr, ptr %memberidx.i87, align 8
  %memberidx.i.i91 = getelementptr inbounds %Array_Type_, ptr %83, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i91, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %i.0.i7
  %86 = load ptr, ptr %85, align 8
  %87 = load ptr, ptr %memberidx.i16.i, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %i.0.i7
  %89 = load ptr, ptr %88, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %89, i64 0, i32 3
  %90 = load ptr, ptr %memberidx5.i, align 8
  %91 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %86, ptr %90)
  br i1 %91, label %ifend8.i, label %else25

ifend8.i:                                         ; preds = %for.body.i
  %92 = add nuw nsw i64 %i.0.i7, 1
  %93 = load i64, ptr %memberidx2.i89, align 4
  %94 = icmp slt i64 %92, %93
  br i1 %94, label %for.body.i, label %ifend23

ifend23:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  %95 = tail call ptr @malloc(i32 41)
  %memberidx37 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 2
  %96 = load ptr, ptr %memberidx37, align 8
  store i64 8, ptr %95, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %95, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %95, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i93, align 1
  %memberidx.i94 = getelementptr inbounds %CallExpression, ptr %95, i64 0, i32 4
  store ptr %5, ptr %memberidx.i94, align 8
  %memberidx1.i95 = getelementptr inbounds %CallExpression, ptr %95, i64 0, i32 5
  store ptr %74, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Expression, ptr %95, i64 0, i32 3
  store ptr %96, ptr %memberidx2.i96, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend20
  %97 = alloca ptr, align 8
  %98 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %97, ptr nonnull @215, i64 %80, i64 %81)
  %99 = load ptr, ptr %97, align 8
  %100 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i97 = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i97, align 8
  %memberidx1.i98 = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 %98, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 %98, ptr %memberidx2.i99, align 4
  %101 = load ptr, ptr %1, align 8
  %102 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 6
  %103 = load ptr, ptr %memberidx1.i101, align 8
  %104 = call ptr @malloc(i32 24)
  store i64 4, ptr %104, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i103 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 1
  store ptr %100, ptr %memberidx2.i.i103, align 8
  %memberidx.i.i104 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %105 = load i64, ptr %memberidx.i.i104, align 4
  %memberidx1.i2.i105 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 3
  %106 = load i64, ptr %memberidx1.i2.i105, align 4
  %.not.i.i106 = icmp slt i64 %105, %106
  br i1 %.not.i.i106, label %if.entry24.TypeChecker_error.exit111_crit_edge, label %if.entry.i.i109

if.entry24.TypeChecker_error.exit111_crit_edge:   ; preds = %if.entry24
  %memberidx4.i.i110.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %.pre11 = load ptr, ptr %memberidx4.i.i110.phi.trans.insert, align 8
  br label %TypeChecker_error.exit111

if.entry.i.i109:                                  ; preds = %if.entry24
  %107 = shl nuw i64 %106, 1
  store i64 %107, ptr %memberidx1.i2.i105, align 4
  %memberidx2.i.i.i108 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %108 = load ptr, ptr %memberidx2.i.i.i108, align 8
  %109 = shl i64 %106, 4
  %110 = call ptr @realloc(ptr %108, i64 %109)
  store ptr %110, ptr %memberidx2.i.i.i108, align 8
  %.pre10 = load i64, ptr %memberidx.i.i104, align 4
  br label %TypeChecker_error.exit111

TypeChecker_error.exit111:                        ; preds = %if.entry24.TypeChecker_error.exit111_crit_edge, %if.entry.i.i109
  %111 = phi ptr [ %.pre11, %if.entry24.TypeChecker_error.exit111_crit_edge ], [ %110, %if.entry.i.i109 ]
  %112 = phi i64 [ %105, %if.entry24.TypeChecker_error.exit111_crit_edge ], [ %.pre10, %if.entry.i.i109 ]
  %113 = add nsw i64 %112, 1
  store i64 %113, ptr %memberidx.i.i104, align 4
  %114 = getelementptr inbounds ptr, ptr %111, i64 %112
  store ptr %104, ptr %114, align 8
  br label %common.ret

else25:                                           ; preds = %for.body.i
  %115 = load ptr, ptr %memberidx.i87, align 8
  %memberidx.i112 = getelementptr inbounds %Array_Type_, ptr %115, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i112, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %i.0.i7
  %118 = load ptr, ptr %117, align 8
  %119 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %118)
  %120 = load ptr, ptr %119, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %120, i64 0, i32 5
  %121 = load ptr, ptr %memberidx32, align 8
  %122 = tail call ptr %121(ptr nonnull %119)
  %123 = load ptr, ptr %memberidx.i16.i, align 8
  %124 = getelementptr inbounds ptr, ptr %123, i64 %i.0.i7
  %125 = load ptr, ptr %124, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 3
  %126 = load ptr, ptr %memberidx33, align 8
  %127 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %126)
  %128 = load ptr, ptr %127, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %128, i64 0, i32 5
  %129 = load ptr, ptr %memberidx34, align 8
  %130 = tail call ptr %129(ptr nonnull %127)
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @216, ptr %122, ptr %130)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %134, align 8
  %memberidx.i114 = getelementptr inbounds %string, ptr %134, i64 0, i32 1
  store ptr %133, ptr %memberidx.i114, align 8
  %memberidx1.i115 = getelementptr inbounds %string, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx1.i115, align 4
  %memberidx2.i116 = getelementptr inbounds %string, ptr %134, i64 0, i32 3
  store i64 %132, ptr %memberidx2.i116, align 4
  tail call void @free(ptr %122)
  tail call void @free(ptr %130)
  %135 = load ptr, ptr %memberidx17, align 8
  %memberidx.i117 = getelementptr inbounds %Array_ExpressionNode_, ptr %135, i64 0, i32 1
  %136 = load ptr, ptr %memberidx.i117, align 8
  %137 = getelementptr inbounds ptr, ptr %136, i64 %i.0.i7
  %138 = load ptr, ptr %137, align 8
  %139 = load ptr, ptr %138, align 8
  %140 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i119 = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 6
  %141 = load ptr, ptr %memberidx1.i119, align 8
  %142 = call ptr @malloc(i32 24)
  store i64 5, ptr %142, align 4
  %memberidx1.i.i120 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 2
  store ptr %139, ptr %memberidx1.i.i120, align 8
  %memberidx2.i.i121 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i121, align 8
  %memberidx.i.i122 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 2
  %143 = load i64, ptr %memberidx.i.i122, align 4
  %memberidx1.i2.i123 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 3
  %144 = load i64, ptr %memberidx1.i2.i123, align 4
  %.not.i.i124 = icmp slt i64 %143, %144
  br i1 %.not.i.i124, label %else25.TypeChecker_error.exit129_crit_edge, label %if.entry.i.i127

else25.TypeChecker_error.exit129_crit_edge:       ; preds = %else25
  %memberidx4.i.i128.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %.pre13 = load ptr, ptr %memberidx4.i.i128.phi.trans.insert, align 8
  br label %TypeChecker_error.exit129

if.entry.i.i127:                                  ; preds = %else25
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx1.i2.i123, align 4
  %memberidx2.i.i.i126 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %146 = load ptr, ptr %memberidx2.i.i.i126, align 8
  %147 = shl i64 %144, 4
  %148 = call ptr @realloc(ptr %146, i64 %147)
  store ptr %148, ptr %memberidx2.i.i.i126, align 8
  %.pre12 = load i64, ptr %memberidx.i.i122, align 4
  br label %TypeChecker_error.exit129

TypeChecker_error.exit129:                        ; preds = %else25.TypeChecker_error.exit129_crit_edge, %if.entry.i.i127
  %149 = phi ptr [ %.pre13, %else25.TypeChecker_error.exit129_crit_edge ], [ %148, %if.entry.i.i127 ]
  %150 = phi i64 [ %143, %else25.TypeChecker_error.exit129_crit_edge ], [ %.pre12, %if.entry.i.i127 ]
  %151 = add nsw i64 %150, 1
  store i64 %151, ptr %memberidx.i.i122, align 4
  %152 = getelementptr inbounds ptr, ptr %149, i64 %150
  store ptr %142, ptr %152, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %ifend65 [
    i64 13, label %if.entry
    i64 14, label %if.entry7
    i64 16, label %if.entry42
    i64 15, label %if.entry51
    i64 17, label %if.entry63
  ]

common.ret:                                       ; preds = %ifend128, %ifend142, %for.end134, %TypeChecker_error.exit, %if.entry121, %if.entry118, %if.entry115, %if.entry112, %if.entry109, %if.entry106, %if.entry103, %if.entry100, %if.entry97, %if.entry94, %if.entry91, %if.entry88, %if.entry85, %if.entry82, %if.entry79, %if.entry76, %if.entry73, %if.entry70, %ifend65, %for.end59, %for.end, %ifend37, %TypeChecker_error.exit577, %TypeChecker_error.exit562, %TypeChecker_error.exit547, %TypeChecker_error.exit532, %if.entry11, %if.entry
  %common.ret.op = phi ptr [ %4, %if.entry ], [ %14, %if.entry11 ], [ null, %TypeChecker_error.exit532 ], [ null, %TypeChecker_error.exit547 ], [ null, %TypeChecker_error.exit562 ], [ null, %TypeChecker_error.exit577 ], [ %96, %ifend37 ], [ %120, %for.end ], [ %121, %for.end59 ], [ %153, %ifend65 ], [ %154, %if.entry70 ], [ %161, %if.entry73 ], [ %168, %if.entry76 ], [ %175, %if.entry79 ], [ %182, %if.entry82 ], [ %189, %if.entry85 ], [ %196, %if.entry88 ], [ %203, %if.entry91 ], [ %210, %if.entry94 ], [ %217, %if.entry97 ], [ %224, %if.entry100 ], [ %231, %if.entry103 ], [ %238, %if.entry106 ], [ %245, %if.entry109 ], [ %252, %if.entry112 ], [ %259, %if.entry115 ], [ %266, %if.entry118 ], [ %273, %if.entry121 ], [ null, %TypeChecker_error.exit ], [ null, %for.end134 ], [ %304, %ifend142 ], [ %278, %ifend128 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 16)
  %memberidx5 = getelementptr inbounds %PointerTypeNode, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %memberidx5, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %5)
  store i64 13, ptr %4, align 4
  %memberidx.i508 = getelementptr inbounds %PointerType, ptr %4, i64 0, i32 1
  store ptr %6, ptr %memberidx.i508, align 8
  br label %common.ret

if.entry7:                                        ; preds = %2
  %7 = alloca %IntType, align 8
  store i64 6, ptr %7, align 8
  %memberidx.i509 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  store i1 false, ptr %memberidx.i509, align 8
  %memberidx10 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %memberidx10, align 8
  %9 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %7, ptr %8)
  %memberidx.i515 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %memberidx.i515, align 8
  %memberidx1.i516 = getelementptr inbounds %Compiler, ptr %10, i64 0, i32 6
  %11 = load ptr, ptr %memberidx1.i516, align 8
  %memberidx2.i517 = getelementptr inbounds %Array_FloError_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i517, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %if.entry7
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  br label %common.ret

ifend13:                                          ; preds = %if.entry7
  %memberidx14 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 3
  %15 = load ptr, ptr %memberidx14, align 8
  %16 = load i64, ptr %15, align 4
  %17 = add i64 %16, -1
  %18 = icmp ult i64 %17, 7
  br i1 %18, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %19 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %19, ptr noundef nonnull align 8 dereferenceable(23) @158, i64 23, i1 false)
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i518 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i518, align 8
  %memberidx1.i.i519 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 23, ptr %memberidx1.i.i519, align 4
  %memberidx2.i.i520 = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 23, ptr %memberidx2.i.i520, align 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %memberidx.i515, align 8
  %memberidx1.i522 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 6
  %24 = load ptr, ptr %memberidx1.i522, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 4, ptr %25, align 4
  %memberidx1.i.i523 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i523, align 8
  %memberidx2.i.i524 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i524, align 8
  %memberidx.i.i525 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i525, align 4
  %memberidx1.i2.i526 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 3
  %27 = load i64, ptr %memberidx1.i2.i526, align 4
  %.not.i.i527 = icmp slt i64 %26, %27
  br i1 %.not.i.i527, label %if.entry15.TypeChecker_error.exit532_crit_edge, label %if.entry.i.i530

if.entry15.TypeChecker_error.exit532_crit_edge:   ; preds = %if.entry15
  %memberidx4.i.i531.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %.pre623 = load ptr, ptr %memberidx4.i.i531.phi.trans.insert, align 8
  br label %TypeChecker_error.exit532

if.entry.i.i530:                                  ; preds = %if.entry15
  %28 = shl nuw i64 %27, 1
  store i64 %28, ptr %memberidx1.i2.i526, align 4
  %memberidx2.i.i.i529 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i.i529, align 8
  %30 = shl i64 %27, 4
  %31 = call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %memberidx2.i.i.i529, align 8
  %.pre622 = load i64, ptr %memberidx.i.i525, align 4
  br label %TypeChecker_error.exit532

TypeChecker_error.exit532:                        ; preds = %if.entry15.TypeChecker_error.exit532_crit_edge, %if.entry.i.i530
  %32 = phi ptr [ %.pre623, %if.entry15.TypeChecker_error.exit532_crit_edge ], [ %31, %if.entry.i.i530 ]
  %33 = phi i64 [ %26, %if.entry15.TypeChecker_error.exit532_crit_edge ], [ %.pre622, %if.entry.i.i530 ]
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i525, align 4
  %35 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %25, ptr %35, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IntType, ptr %15, i64 0, i32 1
  %36 = load i1, ptr %memberidx21, align 1
  %37 = icmp ne i64 %16, 6
  %38 = or i1 %37, %36
  br i1 %38, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend17
  %39 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %39, ptr noundef nonnull align 8 dereferenceable(23) @159, i64 23, i1 false)
  %40 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i533 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i533, align 8
  %memberidx1.i.i534 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 23, ptr %memberidx1.i.i534, align 4
  %memberidx2.i.i535 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 23, ptr %memberidx2.i.i535, align 4
  %41 = load ptr, ptr %memberidx10, align 8
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %memberidx.i515, align 8
  %memberidx1.i537 = getelementptr inbounds %Compiler, ptr %43, i64 0, i32 6
  %44 = load ptr, ptr %memberidx1.i537, align 8
  %45 = call ptr @malloc(i32 24)
  store i64 4, ptr %45, align 4
  %memberidx1.i.i538 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 2
  store ptr %42, ptr %memberidx1.i.i538, align 8
  %memberidx2.i.i539 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 1
  store ptr %40, ptr %memberidx2.i.i539, align 8
  %memberidx.i.i540 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i540, align 4
  %memberidx1.i2.i541 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 3
  %47 = load i64, ptr %memberidx1.i2.i541, align 4
  %.not.i.i542 = icmp slt i64 %46, %47
  br i1 %.not.i.i542, label %if.entry23.TypeChecker_error.exit547_crit_edge, label %if.entry.i.i545

if.entry23.TypeChecker_error.exit547_crit_edge:   ; preds = %if.entry23
  %memberidx4.i.i546.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 1
  %.pre629 = load ptr, ptr %memberidx4.i.i546.phi.trans.insert, align 8
  br label %TypeChecker_error.exit547

if.entry.i.i545:                                  ; preds = %if.entry23
  %48 = shl nuw i64 %47, 1
  store i64 %48, ptr %memberidx1.i2.i541, align 4
  %memberidx2.i.i.i544 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 1
  %49 = load ptr, ptr %memberidx2.i.i.i544, align 8
  %50 = shl i64 %47, 4
  %51 = call ptr @realloc(ptr %49, i64 %50)
  store ptr %51, ptr %memberidx2.i.i.i544, align 8
  %.pre628 = load i64, ptr %memberidx.i.i540, align 4
  br label %TypeChecker_error.exit547

TypeChecker_error.exit547:                        ; preds = %if.entry23.TypeChecker_error.exit547_crit_edge, %if.entry.i.i545
  %52 = phi ptr [ %.pre629, %if.entry23.TypeChecker_error.exit547_crit_edge ], [ %51, %if.entry.i.i545 ]
  %53 = phi i64 [ %46, %if.entry23.TypeChecker_error.exit547_crit_edge ], [ %.pre628, %if.entry.i.i545 ]
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx.i.i540, align 4
  %55 = getelementptr inbounds ptr, ptr %52, i64 %53
  store ptr %45, ptr %55, align 8
  br label %common.ret

ifend25:                                          ; preds = %ifend17
  %memberidx28 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 1
  %56 = load i1, ptr %memberidx28, align 1
  br i1 %56, label %ifend31, label %if.entry29

if.entry29:                                       ; preds = %ifend25
  %57 = call ptr @malloc(i32 30)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %57, ptr noundef nonnull align 8 dereferenceable(30) @160, i64 30, i1 false)
  %58 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i.i548 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i.i548, align 8
  %memberidx1.i.i549 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 30, ptr %memberidx1.i.i549, align 4
  %memberidx2.i.i550 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 30, ptr %memberidx2.i.i550, align 4
  %59 = load ptr, ptr %memberidx10, align 8
  %60 = load ptr, ptr %59, align 8
  %61 = load ptr, ptr %memberidx.i515, align 8
  %memberidx1.i552 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx1.i552, align 8
  %63 = call ptr @malloc(i32 24)
  store i64 4, ptr %63, align 4
  %memberidx1.i.i553 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i553, align 8
  %memberidx2.i.i554 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i554, align 8
  %memberidx.i.i555 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i555, align 4
  %memberidx1.i2.i556 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %65 = load i64, ptr %memberidx1.i2.i556, align 4
  %.not.i.i557 = icmp slt i64 %64, %65
  br i1 %.not.i.i557, label %if.entry29.TypeChecker_error.exit562_crit_edge, label %if.entry.i.i560

if.entry29.TypeChecker_error.exit562_crit_edge:   ; preds = %if.entry29
  %memberidx4.i.i561.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre625 = load ptr, ptr %memberidx4.i.i561.phi.trans.insert, align 8
  br label %TypeChecker_error.exit562

if.entry.i.i560:                                  ; preds = %if.entry29
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i556, align 4
  %memberidx2.i.i.i559 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %67 = load ptr, ptr %memberidx2.i.i.i559, align 8
  %68 = shl i64 %65, 4
  %69 = call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %memberidx2.i.i.i559, align 8
  %.pre624 = load i64, ptr %memberidx.i.i555, align 4
  br label %TypeChecker_error.exit562

TypeChecker_error.exit562:                        ; preds = %if.entry29.TypeChecker_error.exit562_crit_edge, %if.entry.i.i560
  %70 = phi ptr [ %.pre625, %if.entry29.TypeChecker_error.exit562_crit_edge ], [ %69, %if.entry.i.i560 ]
  %71 = phi i64 [ %64, %if.entry29.TypeChecker_error.exit562_crit_edge ], [ %.pre624, %if.entry.i.i560 ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i555, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %74 = load ptr, ptr %0, align 8
  %75 = call fastcc i64 @evaluate_const_int_expression(ptr %74, ptr nonnull %9)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %if.entry35, label %ifend37

if.entry35:                                       ; preds = %ifend31
  %77 = call ptr @malloc(i32 28)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %77, ptr noundef nonnull align 8 dereferenceable(28) @161, i64 28, i1 false)
  %78 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %78, align 8
  %memberidx.i.i563 = getelementptr inbounds %string, ptr %78, i64 0, i32 1
  store ptr %77, ptr %memberidx.i.i563, align 8
  %memberidx1.i.i564 = getelementptr inbounds %string, ptr %78, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i564, align 4
  %memberidx2.i.i565 = getelementptr inbounds %string, ptr %78, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i565, align 4
  %79 = load ptr, ptr %memberidx10, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %memberidx.i515, align 8
  %memberidx1.i567 = getelementptr inbounds %Compiler, ptr %81, i64 0, i32 6
  %82 = load ptr, ptr %memberidx1.i567, align 8
  %83 = call ptr @malloc(i32 24)
  store i64 4, ptr %83, align 4
  %memberidx1.i.i568 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 2
  store ptr %80, ptr %memberidx1.i.i568, align 8
  %memberidx2.i.i569 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 1
  store ptr %78, ptr %memberidx2.i.i569, align 8
  %memberidx.i.i570 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i570, align 4
  %memberidx1.i2.i571 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 3
  %85 = load i64, ptr %memberidx1.i2.i571, align 4
  %.not.i.i572 = icmp slt i64 %84, %85
  br i1 %.not.i.i572, label %if.entry35.TypeChecker_error.exit577_crit_edge, label %if.entry.i.i575

if.entry35.TypeChecker_error.exit577_crit_edge:   ; preds = %if.entry35
  %memberidx4.i.i576.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %.pre627 = load ptr, ptr %memberidx4.i.i576.phi.trans.insert, align 8
  br label %TypeChecker_error.exit577

if.entry.i.i575:                                  ; preds = %if.entry35
  %86 = shl nuw i64 %85, 1
  store i64 %86, ptr %memberidx1.i2.i571, align 4
  %memberidx2.i.i.i574 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %87 = load ptr, ptr %memberidx2.i.i.i574, align 8
  %88 = shl i64 %85, 4
  %89 = call ptr @realloc(ptr %87, i64 %88)
  store ptr %89, ptr %memberidx2.i.i.i574, align 8
  %.pre626 = load i64, ptr %memberidx.i.i570, align 4
  br label %TypeChecker_error.exit577

TypeChecker_error.exit577:                        ; preds = %if.entry35.TypeChecker_error.exit577_crit_edge, %if.entry.i.i575
  %90 = phi ptr [ %.pre627, %if.entry35.TypeChecker_error.exit577_crit_edge ], [ %89, %if.entry.i.i575 ]
  %91 = phi i64 [ %84, %if.entry35.TypeChecker_error.exit577_crit_edge ], [ %.pre626, %if.entry.i.i575 ]
  %92 = add nsw i64 %91, 1
  store i64 %92, ptr %memberidx.i.i570, align 4
  %93 = getelementptr inbounds ptr, ptr %90, i64 %91
  store ptr %83, ptr %93, align 8
  br label %common.ret

ifend37:                                          ; preds = %ifend31
  %memberidx40 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 2
  %94 = load ptr, ptr %memberidx40, align 8
  %95 = call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %94)
  %96 = tail call ptr @malloc(i32 24)
  store i64 14, ptr %96, align 4
  %memberidx.i581 = getelementptr inbounds %ArrayType, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i581, align 8
  %memberidx1.i582 = getelementptr inbounds %ArrayType, ptr %96, i64 0, i32 2
  store i64 %75, ptr %memberidx1.i582, align 4
  br label %common.ret

if.entry42:                                       ; preds = %2
  %97 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %97, align 8
  %memberidx.i578 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 2
  store i64 0, ptr %memberidx.i578, align 4
  %memberidx1.i579 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 3
  store i64 8, ptr %memberidx1.i579, align 4
  %memberidx2.i580 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 1
  %98 = tail call ptr @malloc(i32 64)
  store ptr %98, ptr %memberidx2.i580, align 8
  store i64 0, ptr %memberidx.i578, align 4
  %memberidx47 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 2
  %99 = load ptr, ptr %memberidx47, align 8
  %100 = tail call ptr @malloc(i32 25)
  %memberidx.i510 = getelementptr inbounds %Array_TypeNode_, ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i510, align 8
  %memberidx1.i511 = getelementptr inbounds %Array_TypeNode_, ptr %99, i64 0, i32 2
  %102 = load i64, ptr %memberidx1.i511, align 4
  store i1 false, ptr %100, align 1
  %memberidx1.i.i512 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %100, i64 0, i32 1
  %memberidx2.i.i513 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %100, i64 0, i32 3
  store ptr %101, ptr %memberidx2.i.i513, align 8
  %memberidx3.i.i514 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %100, i64 0, i32 2
  store i64 %102, ptr %memberidx3.i.i514, align 4
  store i64 1, ptr %memberidx1.i.i512, align 4
  %103 = icmp slt i64 %102, 1
  br i1 %103, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry42, %Array_Type____sl__.exit504
  %104 = phi i64 [ %116, %Array_Type____sl__.exit504 ], [ 1, %if.entry42 ]
  %arg.0606.in = phi ptr [ %117, %Array_Type____sl__.exit504 ], [ %101, %if.entry42 ]
  %arg.0606 = load ptr, ptr %arg.0606.in, align 8
  %105 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg.0606)
  %106 = load i64, ptr %memberidx.i578, align 4
  %107 = load i64, ptr %memberidx1.i579, align 4
  %.not.i498 = icmp slt i64 %106, %107
  br i1 %.not.i498, label %for.body.Array_Type____sl__.exit504_crit_edge, label %if.entry.i501

for.body.Array_Type____sl__.exit504_crit_edge:    ; preds = %for.body
  %.pre621 = load ptr, ptr %memberidx2.i580, align 8
  br label %Array_Type____sl__.exit504

if.entry.i501:                                    ; preds = %for.body
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx1.i579, align 4
  %109 = load ptr, ptr %memberidx2.i580, align 8
  %110 = shl i64 %107, 4
  %111 = tail call ptr @realloc(ptr %109, i64 %110)
  store ptr %111, ptr %memberidx2.i580, align 8
  %.pre620 = load i64, ptr %memberidx.i578, align 4
  br label %Array_Type____sl__.exit504

Array_Type____sl__.exit504:                       ; preds = %for.body.Array_Type____sl__.exit504_crit_edge, %if.entry.i501
  %112 = phi ptr [ %.pre621, %for.body.Array_Type____sl__.exit504_crit_edge ], [ %111, %if.entry.i501 ]
  %113 = phi i64 [ %106, %for.body.Array_Type____sl__.exit504_crit_edge ], [ %.pre620, %if.entry.i501 ]
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr %memberidx.i578, align 4
  %115 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %105, ptr %115, align 8
  %116 = add nuw nsw i64 %104, 1
  store i64 %116, ptr %memberidx1.i.i512, align 4
  %117 = getelementptr inbounds ptr, ptr %101, i64 %104
  %.not632 = icmp slt i64 %104, %102
  br i1 %.not632, label %for.body, label %for.end

for.end:                                          ; preds = %Array_Type____sl__.exit504, %if.entry42
  tail call void @free(ptr nonnull %100)
  %memberidx49 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 3
  %118 = load ptr, ptr %memberidx49, align 8
  %119 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %118)
  %120 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %120, align 4
  %memberidx.i491 = getelementptr inbounds %FunctionType, ptr %120, i64 0, i32 1
  store ptr %97, ptr %memberidx.i491, align 8
  %memberidx1.i492 = getelementptr inbounds %FunctionType, ptr %120, i64 0, i32 2
  store ptr %119, ptr %memberidx1.i492, align 8
  br label %common.ret

if.entry51:                                       ; preds = %2
  %121 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %121, align 4
  %memberidx.i486 = getelementptr inbounds %TupleType, ptr %121, i64 0, i32 1
  %122 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %122, align 8
  %memberidx.i.i487 = getelementptr inbounds %Array_Type_, ptr %122, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i487, align 4
  %memberidx1.i.i488 = getelementptr inbounds %Array_Type_, ptr %122, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i488, align 4
  %memberidx2.i.i489 = getelementptr inbounds %Array_Type_, ptr %122, i64 0, i32 1
  %123 = tail call ptr @malloc(i32 64)
  store ptr %123, ptr %memberidx2.i.i489, align 8
  store i64 0, ptr %memberidx.i.i487, align 4
  store ptr %122, ptr %memberidx.i486, align 8
  %memberidx55 = getelementptr inbounds %TupleTypeNode, ptr %1, i64 0, i32 2
  %124 = load ptr, ptr %memberidx55, align 8
  %125 = tail call ptr @malloc(i32 25)
  %memberidx.i481 = getelementptr inbounds %Array_TypeNode_, ptr %124, i64 0, i32 1
  %126 = load ptr, ptr %memberidx.i481, align 8
  %memberidx1.i482 = getelementptr inbounds %Array_TypeNode_, ptr %124, i64 0, i32 2
  %127 = load i64, ptr %memberidx1.i482, align 4
  store i1 false, ptr %125, align 1
  %memberidx1.i.i483 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %125, i64 0, i32 1
  %memberidx2.i.i484 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx2.i.i484, align 8
  %memberidx3.i.i485 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %125, i64 0, i32 2
  store i64 %127, ptr %memberidx3.i.i485, align 4
  store i64 1, ptr %memberidx1.i.i483, align 4
  %128 = icmp slt i64 %127, 1
  br i1 %128, label %for.end59, label %for.body57

for.body57:                                       ; preds = %if.entry51, %Array_Type____sl__.exit477
  %129 = phi i64 [ %141, %Array_Type____sl__.exit477 ], [ 1, %if.entry51 ]
  %element_type1.0608.in = phi ptr [ %142, %Array_Type____sl__.exit477 ], [ %126, %if.entry51 ]
  %element_type1.0608 = load ptr, ptr %element_type1.0608.in, align 8
  %130 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %element_type1.0608)
  %131 = load i64, ptr %memberidx.i.i487, align 4
  %132 = load i64, ptr %memberidx1.i.i488, align 4
  %.not.i471 = icmp slt i64 %131, %132
  br i1 %.not.i471, label %for.body57.Array_Type____sl__.exit477_crit_edge, label %if.entry.i474

for.body57.Array_Type____sl__.exit477_crit_edge:  ; preds = %for.body57
  %.pre619 = load ptr, ptr %memberidx2.i.i489, align 8
  br label %Array_Type____sl__.exit477

if.entry.i474:                                    ; preds = %for.body57
  %133 = shl nuw i64 %132, 1
  store i64 %133, ptr %memberidx1.i.i488, align 4
  %134 = load ptr, ptr %memberidx2.i.i489, align 8
  %135 = shl i64 %132, 4
  %136 = tail call ptr @realloc(ptr %134, i64 %135)
  store ptr %136, ptr %memberidx2.i.i489, align 8
  %.pre618 = load i64, ptr %memberidx.i.i487, align 4
  br label %Array_Type____sl__.exit477

Array_Type____sl__.exit477:                       ; preds = %for.body57.Array_Type____sl__.exit477_crit_edge, %if.entry.i474
  %137 = phi ptr [ %.pre619, %for.body57.Array_Type____sl__.exit477_crit_edge ], [ %136, %if.entry.i474 ]
  %138 = phi i64 [ %131, %for.body57.Array_Type____sl__.exit477_crit_edge ], [ %.pre618, %if.entry.i474 ]
  %139 = add nsw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i487, align 4
  %140 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %130, ptr %140, align 8
  %141 = add nuw nsw i64 %129, 1
  store i64 %141, ptr %memberidx1.i.i483, align 4
  %142 = getelementptr inbounds ptr, ptr %126, i64 %129
  %.not631 = icmp slt i64 %129, %127
  br i1 %.not631, label %for.body57, label %for.end59

for.end59:                                        ; preds = %Array_Type____sl__.exit477, %if.entry51
  tail call void @free(ptr nonnull %125)
  br label %common.ret

if.entry63:                                       ; preds = %2
  %143 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %143, align 8
  %memberidx.i463 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 2
  store i64 0, ptr %memberidx.i463, align 4
  %memberidx1.i464 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 3
  store i64 8, ptr %memberidx1.i464, align 4
  %memberidx2.i465 = getelementptr inbounds %Array_Type_, ptr %143, i64 0, i32 1
  %144 = tail call ptr @malloc(i32 64)
  store ptr %144, ptr %memberidx2.i465, align 8
  store i64 0, ptr %memberidx.i463, align 4
  %memberidx68 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 2
  %145 = load ptr, ptr %memberidx68, align 8
  %memberidx69 = getelementptr inbounds %IdentifierToken, ptr %145, i64 0, i32 2
  %146 = load ptr, ptr %memberidx69, align 8
  %147 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %147, align 8
  %148 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %148, align 8
  %memberidx.i.i460 = getelementptr inbounds %string, ptr %148, i64 0, i32 1
  store ptr %147, ptr %memberidx.i.i460, align 8
  %memberidx1.i.i461 = getelementptr inbounds %string, ptr %148, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i461, align 4
  %memberidx2.i.i462 = getelementptr inbounds %string, ptr %148, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i462, align 4
  %memberidx.i452 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  %149 = load i64, ptr %memberidx.i452, align 4
  %.not.i454 = icmp eq i64 %149, 4
  br i1 %.not.i454, label %ifend.i458, label %ifend72

ifend.i458:                                       ; preds = %if.entry63
  %memberidx2.i456 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %150 = load ptr, ptr %memberidx2.i456, align 8
  %151 = tail call i64 @memcmp(ptr %150, ptr nonnull %147, i64 4)
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %if.entry70, label %ifend72

ifend65:                                          ; preds = %2
  %153 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %153, align 4
  br label %common.ret

if.entry70:                                       ; preds = %ifend.i458
  %154 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %154, align 4
  br label %common.ret

ifend72:                                          ; preds = %if.entry63, %ifend.i458
  %155 = tail call ptr @malloc(i32 2)
  store i16 13429, ptr %155, align 8
  %156 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %156, align 8
  %memberidx.i.i449 = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  store ptr %155, ptr %memberidx.i.i449, align 8
  %memberidx1.i.i450 = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i450, align 4
  %memberidx2.i.i451 = getelementptr inbounds %string, ptr %156, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i451, align 4
  %157 = load i64, ptr %memberidx.i452, align 4
  %.not.i443 = icmp eq i64 %157, 2
  br i1 %.not.i443, label %ifend.i447, label %ifend75

ifend.i447:                                       ; preds = %ifend72
  %memberidx2.i445 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %158 = load ptr, ptr %memberidx2.i445, align 8
  %159 = tail call i64 @memcmp(ptr %158, ptr nonnull %155, i64 2)
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %if.entry73, label %ifend75

if.entry73:                                       ; preds = %ifend.i447
  %161 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %161, align 4
  %memberidx.i440 = getelementptr inbounds %IntType, ptr %161, i64 0, i32 1
  store i1 false, ptr %memberidx.i440, align 1
  br label %common.ret

ifend75:                                          ; preds = %ifend72, %ifend.i447
  %162 = tail call ptr @malloc(i32 2)
  store i16 14453, ptr %162, align 8
  %163 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %163, align 8
  %memberidx.i.i437 = getelementptr inbounds %string, ptr %163, i64 0, i32 1
  store ptr %162, ptr %memberidx.i.i437, align 8
  %memberidx1.i.i438 = getelementptr inbounds %string, ptr %163, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i438, align 4
  %memberidx2.i.i439 = getelementptr inbounds %string, ptr %163, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i439, align 4
  %164 = load i64, ptr %memberidx.i452, align 4
  %.not.i431 = icmp eq i64 %164, 2
  br i1 %.not.i431, label %ifend.i435, label %ifend78

ifend.i435:                                       ; preds = %ifend75
  %memberidx2.i433 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i433, align 8
  %166 = tail call i64 @memcmp(ptr %165, ptr nonnull %162, i64 2)
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %if.entry76, label %ifend78

if.entry76:                                       ; preds = %ifend.i435
  %168 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %168, align 4
  %memberidx.i428 = getelementptr inbounds %IntType, ptr %168, i64 0, i32 1
  store i1 false, ptr %memberidx.i428, align 1
  br label %common.ret

ifend78:                                          ; preds = %ifend75, %ifend.i435
  %169 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %169, ptr noundef nonnull align 8 dereferenceable(3) @162, i64 3, i1 false)
  %170 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %170, align 8
  %memberidx.i.i425 = getelementptr inbounds %string, ptr %170, i64 0, i32 1
  store ptr %169, ptr %memberidx.i.i425, align 8
  %memberidx1.i.i426 = getelementptr inbounds %string, ptr %170, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i426, align 4
  %memberidx2.i.i427 = getelementptr inbounds %string, ptr %170, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i427, align 4
  %171 = load i64, ptr %memberidx.i452, align 4
  %.not.i419 = icmp eq i64 %171, 3
  br i1 %.not.i419, label %ifend.i423, label %ifend81

ifend.i423:                                       ; preds = %ifend78
  %memberidx2.i421 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %172 = load ptr, ptr %memberidx2.i421, align 8
  %173 = tail call i64 @memcmp(ptr %172, ptr nonnull %169, i64 3)
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %if.entry79, label %ifend81

if.entry79:                                       ; preds = %ifend.i423
  %175 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %175, align 4
  %memberidx.i416 = getelementptr inbounds %IntType, ptr %175, i64 0, i32 1
  store i1 false, ptr %memberidx.i416, align 1
  br label %common.ret

ifend81:                                          ; preds = %ifend78, %ifend.i423
  %176 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %176, ptr noundef nonnull align 8 dereferenceable(3) @163, i64 3, i1 false)
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i413 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i413, align 8
  %memberidx1.i.i414 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i414, align 4
  %memberidx2.i.i415 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i415, align 4
  %178 = load i64, ptr %memberidx.i452, align 4
  %.not.i407 = icmp eq i64 %178, 3
  br i1 %.not.i407, label %ifend.i411, label %ifend84

ifend.i411:                                       ; preds = %ifend81
  %memberidx2.i409 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i409, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 3)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %if.entry82, label %ifend84

if.entry82:                                       ; preds = %ifend.i411
  %182 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %182, align 4
  %memberidx.i404 = getelementptr inbounds %IntType, ptr %182, i64 0, i32 1
  store i1 false, ptr %memberidx.i404, align 1
  br label %common.ret

ifend84:                                          ; preds = %ifend81, %ifend.i411
  %183 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %183, ptr noundef nonnull align 8 dereferenceable(3) @164, i64 3, i1 false)
  %184 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %184, align 8
  %memberidx.i.i401 = getelementptr inbounds %string, ptr %184, i64 0, i32 1
  store ptr %183, ptr %memberidx.i.i401, align 8
  %memberidx1.i.i402 = getelementptr inbounds %string, ptr %184, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i402, align 4
  %memberidx2.i.i403 = getelementptr inbounds %string, ptr %184, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i403, align 4
  %185 = load i64, ptr %memberidx.i452, align 4
  %.not.i395 = icmp eq i64 %185, 3
  br i1 %.not.i395, label %ifend.i399, label %ifend87

ifend.i399:                                       ; preds = %ifend84
  %memberidx2.i397 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %186 = load ptr, ptr %memberidx2.i397, align 8
  %187 = tail call i64 @memcmp(ptr %186, ptr nonnull %183, i64 3)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %if.entry85, label %ifend87

if.entry85:                                       ; preds = %ifend.i399
  %189 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %189, align 4
  %memberidx.i392 = getelementptr inbounds %IntType, ptr %189, i64 0, i32 1
  store i1 false, ptr %memberidx.i392, align 1
  br label %common.ret

ifend87:                                          ; preds = %ifend84, %ifend.i399
  %190 = tail call ptr @malloc(i32 4)
  store i32 942813557, ptr %190, align 8
  %191 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %191, align 8
  %memberidx.i.i389 = getelementptr inbounds %string, ptr %191, i64 0, i32 1
  store ptr %190, ptr %memberidx.i.i389, align 8
  %memberidx1.i.i390 = getelementptr inbounds %string, ptr %191, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i390, align 4
  %memberidx2.i.i391 = getelementptr inbounds %string, ptr %191, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i391, align 4
  %192 = load i64, ptr %memberidx.i452, align 4
  %.not.i383 = icmp eq i64 %192, 4
  br i1 %.not.i383, label %ifend.i387, label %ifend90

ifend.i387:                                       ; preds = %ifend87
  %memberidx2.i385 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %193 = load ptr, ptr %memberidx2.i385, align 8
  %194 = tail call i64 @memcmp(ptr %193, ptr nonnull %190, i64 4)
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %if.entry88, label %ifend90

if.entry88:                                       ; preds = %ifend.i387
  %196 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %196, align 4
  %memberidx.i380 = getelementptr inbounds %IntType, ptr %196, i64 0, i32 1
  store i1 false, ptr %memberidx.i380, align 1
  br label %common.ret

ifend90:                                          ; preds = %ifend87, %ifend.i387
  %197 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %197, align 8
  %198 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %198, align 8
  %memberidx.i.i377 = getelementptr inbounds %string, ptr %198, i64 0, i32 1
  store ptr %197, ptr %memberidx.i.i377, align 8
  %memberidx1.i.i378 = getelementptr inbounds %string, ptr %198, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i378, align 4
  %memberidx2.i.i379 = getelementptr inbounds %string, ptr %198, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i379, align 4
  %199 = load i64, ptr %memberidx.i452, align 4
  %.not.i371 = icmp eq i64 %199, 4
  br i1 %.not.i371, label %ifend.i375, label %ifend93

ifend.i375:                                       ; preds = %ifend90
  %memberidx2.i373 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %200 = load ptr, ptr %memberidx2.i373, align 8
  %201 = tail call i64 @memcmp(ptr %200, ptr nonnull %197, i64 4)
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %if.entry91, label %ifend93

if.entry91:                                       ; preds = %ifend.i375
  %203 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %203, align 4
  %memberidx.i368 = getelementptr inbounds %IntType, ptr %203, i64 0, i32 1
  store i1 false, ptr %memberidx.i368, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend90, %ifend.i375
  %204 = tail call ptr @malloc(i32 2)
  store i16 13417, ptr %204, align 8
  %205 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %205, align 8
  %memberidx.i.i365 = getelementptr inbounds %string, ptr %205, i64 0, i32 1
  store ptr %204, ptr %memberidx.i.i365, align 8
  %memberidx1.i.i366 = getelementptr inbounds %string, ptr %205, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i366, align 4
  %memberidx2.i.i367 = getelementptr inbounds %string, ptr %205, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i367, align 4
  %206 = load i64, ptr %memberidx.i452, align 4
  %.not.i359 = icmp eq i64 %206, 2
  br i1 %.not.i359, label %ifend.i363, label %ifend96

ifend.i363:                                       ; preds = %ifend93
  %memberidx2.i361 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %207 = load ptr, ptr %memberidx2.i361, align 8
  %208 = tail call i64 @memcmp(ptr %207, ptr nonnull %204, i64 2)
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %if.entry94, label %ifend96

if.entry94:                                       ; preds = %ifend.i363
  %210 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %210, align 4
  %memberidx.i356 = getelementptr inbounds %IntType, ptr %210, i64 0, i32 1
  store i1 true, ptr %memberidx.i356, align 1
  br label %common.ret

ifend96:                                          ; preds = %ifend93, %ifend.i363
  %211 = tail call ptr @malloc(i32 2)
  store i16 14441, ptr %211, align 8
  %212 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %212, align 8
  %memberidx.i.i353 = getelementptr inbounds %string, ptr %212, i64 0, i32 1
  store ptr %211, ptr %memberidx.i.i353, align 8
  %memberidx1.i.i354 = getelementptr inbounds %string, ptr %212, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i354, align 4
  %memberidx2.i.i355 = getelementptr inbounds %string, ptr %212, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i355, align 4
  %213 = load i64, ptr %memberidx.i452, align 4
  %.not.i347 = icmp eq i64 %213, 2
  br i1 %.not.i347, label %ifend.i351, label %ifend99

ifend.i351:                                       ; preds = %ifend96
  %memberidx2.i349 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %214 = load ptr, ptr %memberidx2.i349, align 8
  %215 = tail call i64 @memcmp(ptr %214, ptr nonnull %211, i64 2)
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %if.entry97, label %ifend99

if.entry97:                                       ; preds = %ifend.i351
  %217 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %217, align 4
  %memberidx.i344 = getelementptr inbounds %IntType, ptr %217, i64 0, i32 1
  store i1 true, ptr %memberidx.i344, align 1
  br label %common.ret

ifend99:                                          ; preds = %ifend96, %ifend.i351
  %218 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %218, ptr noundef nonnull align 8 dereferenceable(3) @165, i64 3, i1 false)
  %219 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %219, align 8
  %memberidx.i.i341 = getelementptr inbounds %string, ptr %219, i64 0, i32 1
  store ptr %218, ptr %memberidx.i.i341, align 8
  %memberidx1.i.i342 = getelementptr inbounds %string, ptr %219, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i342, align 4
  %memberidx2.i.i343 = getelementptr inbounds %string, ptr %219, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i343, align 4
  %220 = load i64, ptr %memberidx.i452, align 4
  %.not.i335 = icmp eq i64 %220, 3
  br i1 %.not.i335, label %ifend.i339, label %ifend102

ifend.i339:                                       ; preds = %ifend99
  %memberidx2.i337 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %221 = load ptr, ptr %memberidx2.i337, align 8
  %222 = tail call i64 @memcmp(ptr %221, ptr nonnull %218, i64 3)
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %if.entry100, label %ifend102

if.entry100:                                      ; preds = %ifend.i339
  %224 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %224, align 4
  %memberidx.i332 = getelementptr inbounds %IntType, ptr %224, i64 0, i32 1
  store i1 true, ptr %memberidx.i332, align 1
  br label %common.ret

ifend102:                                         ; preds = %ifend99, %ifend.i339
  %225 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %225, ptr noundef nonnull align 8 dereferenceable(3) @166, i64 3, i1 false)
  %226 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %226, align 8
  %memberidx.i.i329 = getelementptr inbounds %string, ptr %226, i64 0, i32 1
  store ptr %225, ptr %memberidx.i.i329, align 8
  %memberidx1.i.i330 = getelementptr inbounds %string, ptr %226, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i330, align 4
  %memberidx2.i.i331 = getelementptr inbounds %string, ptr %226, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i331, align 4
  %227 = load i64, ptr %memberidx.i452, align 4
  %.not.i323 = icmp eq i64 %227, 3
  br i1 %.not.i323, label %ifend.i327, label %ifend105

ifend.i327:                                       ; preds = %ifend102
  %memberidx2.i325 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %228 = load ptr, ptr %memberidx2.i325, align 8
  %229 = tail call i64 @memcmp(ptr %228, ptr nonnull %225, i64 3)
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %if.entry103, label %ifend105

if.entry103:                                      ; preds = %ifend.i327
  %231 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %231, align 4
  %memberidx.i320 = getelementptr inbounds %IntType, ptr %231, i64 0, i32 1
  store i1 true, ptr %memberidx.i320, align 1
  br label %common.ret

ifend105:                                         ; preds = %ifend102, %ifend.i327
  %232 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %232, ptr noundef nonnull align 8 dereferenceable(3) @167, i64 3, i1 false)
  %233 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %233, align 8
  %memberidx.i.i317 = getelementptr inbounds %string, ptr %233, i64 0, i32 1
  store ptr %232, ptr %memberidx.i.i317, align 8
  %memberidx1.i.i318 = getelementptr inbounds %string, ptr %233, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i318, align 4
  %memberidx2.i.i319 = getelementptr inbounds %string, ptr %233, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i319, align 4
  %234 = load i64, ptr %memberidx.i452, align 4
  %.not.i311 = icmp eq i64 %234, 3
  br i1 %.not.i311, label %ifend.i315, label %ifend108

ifend.i315:                                       ; preds = %ifend105
  %memberidx2.i313 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %235 = load ptr, ptr %memberidx2.i313, align 8
  %236 = tail call i64 @memcmp(ptr %235, ptr nonnull %232, i64 3)
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %if.entry106, label %ifend108

if.entry106:                                      ; preds = %ifend.i315
  %238 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %238, align 4
  %memberidx.i308 = getelementptr inbounds %IntType, ptr %238, i64 0, i32 1
  store i1 true, ptr %memberidx.i308, align 1
  br label %common.ret

ifend108:                                         ; preds = %ifend105, %ifend.i315
  %239 = tail call ptr @malloc(i32 4)
  store i32 942813545, ptr %239, align 8
  %240 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %240, align 8
  %memberidx.i.i305 = getelementptr inbounds %string, ptr %240, i64 0, i32 1
  store ptr %239, ptr %memberidx.i.i305, align 8
  %memberidx1.i.i306 = getelementptr inbounds %string, ptr %240, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i306, align 4
  %memberidx2.i.i307 = getelementptr inbounds %string, ptr %240, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i307, align 4
  %241 = load i64, ptr %memberidx.i452, align 4
  %.not.i299 = icmp eq i64 %241, 4
  br i1 %.not.i299, label %ifend.i303, label %ifend111

ifend.i303:                                       ; preds = %ifend108
  %memberidx2.i301 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %242 = load ptr, ptr %memberidx2.i301, align 8
  %243 = tail call i64 @memcmp(ptr %242, ptr nonnull %239, i64 4)
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %if.entry109, label %ifend111

if.entry109:                                      ; preds = %ifend.i303
  %245 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %245, align 4
  %memberidx.i296 = getelementptr inbounds %IntType, ptr %245, i64 0, i32 1
  store i1 true, ptr %memberidx.i296, align 1
  br label %common.ret

ifend111:                                         ; preds = %ifend108, %ifend.i303
  %246 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %246, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %247 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %247, align 8
  %memberidx.i.i293 = getelementptr inbounds %string, ptr %247, i64 0, i32 1
  store ptr %246, ptr %memberidx.i.i293, align 8
  %memberidx1.i.i294 = getelementptr inbounds %string, ptr %247, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i294, align 4
  %memberidx2.i.i295 = getelementptr inbounds %string, ptr %247, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i295, align 4
  %248 = load i64, ptr %memberidx.i452, align 4
  %.not.i287 = icmp eq i64 %248, 3
  br i1 %.not.i287, label %ifend.i291, label %ifend114

ifend.i291:                                       ; preds = %ifend111
  %memberidx2.i289 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %249 = load ptr, ptr %memberidx2.i289, align 8
  %250 = tail call i64 @memcmp(ptr %249, ptr nonnull %246, i64 3)
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %if.entry112, label %ifend114

if.entry112:                                      ; preds = %ifend.i291
  %252 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %252, align 4
  %memberidx.i284 = getelementptr inbounds %IntType, ptr %252, i64 0, i32 1
  store i1 true, ptr %memberidx.i284, align 1
  br label %common.ret

ifend114:                                         ; preds = %ifend111, %ifend.i291
  %253 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %253, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %254 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %254, align 8
  %memberidx.i.i281 = getelementptr inbounds %string, ptr %254, i64 0, i32 1
  store ptr %253, ptr %memberidx.i.i281, align 8
  %memberidx1.i.i282 = getelementptr inbounds %string, ptr %254, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i282, align 4
  %memberidx2.i.i283 = getelementptr inbounds %string, ptr %254, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i283, align 4
  %255 = load i64, ptr %memberidx.i452, align 4
  %.not.i275 = icmp eq i64 %255, 3
  br i1 %.not.i275, label %ifend.i279, label %ifend117

ifend.i279:                                       ; preds = %ifend114
  %memberidx2.i277 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %256 = load ptr, ptr %memberidx2.i277, align 8
  %257 = tail call i64 @memcmp(ptr %256, ptr nonnull %253, i64 3)
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %if.entry115, label %ifend117

if.entry115:                                      ; preds = %ifend.i279
  %259 = tail call ptr @malloc(i32 8)
  store i64 8, ptr %259, align 4
  br label %common.ret

ifend117:                                         ; preds = %ifend114, %ifend.i279
  %260 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %260, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %261 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %261, align 8
  %memberidx.i.i270 = getelementptr inbounds %string, ptr %261, i64 0, i32 1
  store ptr %260, ptr %memberidx.i.i270, align 8
  %memberidx1.i.i271 = getelementptr inbounds %string, ptr %261, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i271, align 4
  %memberidx2.i.i272 = getelementptr inbounds %string, ptr %261, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i272, align 4
  %262 = load i64, ptr %memberidx.i452, align 4
  %.not.i264 = icmp eq i64 %262, 3
  br i1 %.not.i264, label %ifend.i268, label %ifend120

ifend.i268:                                       ; preds = %ifend117
  %memberidx2.i266 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %263 = load ptr, ptr %memberidx2.i266, align 8
  %264 = tail call i64 @memcmp(ptr %263, ptr nonnull %260, i64 3)
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %if.entry118, label %ifend120

if.entry118:                                      ; preds = %ifend.i268
  %266 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %266, align 4
  br label %common.ret

ifend120:                                         ; preds = %ifend117, %ifend.i268
  %267 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %267, align 8
  %268 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %268, align 8
  %memberidx.i.i259 = getelementptr inbounds %string, ptr %268, i64 0, i32 1
  store ptr %267, ptr %memberidx.i.i259, align 8
  %memberidx1.i.i260 = getelementptr inbounds %string, ptr %268, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i260, align 4
  %memberidx2.i.i261 = getelementptr inbounds %string, ptr %268, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i261, align 4
  %269 = load i64, ptr %memberidx.i452, align 4
  %.not.i257 = icmp eq i64 %269, 4
  br i1 %.not.i257, label %ifend.i, label %ifend123

ifend.i:                                          ; preds = %ifend120
  %memberidx2.i258 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  %270 = load ptr, ptr %memberidx2.i258, align 8
  %271 = tail call i64 @memcmp(ptr %270, ptr nonnull %267, i64 4)
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %if.entry121, label %ifend123

if.entry121:                                      ; preds = %ifend.i
  %273 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %273, align 4
  br label %common.ret

ifend123:                                         ; preds = %ifend120, %ifend.i
  %memberidx124 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 3
  %274 = load ptr, ptr %memberidx124, align 8
  %memberidx125 = getelementptr inbounds %Array_TypeNode_, ptr %274, i64 0, i32 2
  %275 = load i64, ptr %memberidx125, align 4
  %276 = icmp sgt i64 %275, 0
  br i1 %276, label %for.entry129, label %ifend128

ifend128:                                         ; preds = %ifend142, %ifend123
  %277 = load ptr, ptr %memberidx69, align 8
  %278 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %277)
  %279 = load i64, ptr %278, align 4
  %280 = icmp eq i64 %279, 21
  br i1 %280, label %if.entry152, label %common.ret

for.entry129:                                     ; preds = %ifend123
  %281 = tail call ptr @malloc(i32 25)
  %memberidx.i251 = getelementptr inbounds %Array_TypeNode_, ptr %274, i64 0, i32 1
  %282 = load ptr, ptr %memberidx.i251, align 8
  %283 = load i64, ptr %memberidx125, align 4
  store i1 false, ptr %281, align 1
  %memberidx1.i.i253 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %281, i64 0, i32 1
  %memberidx2.i.i254 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %281, i64 0, i32 3
  store ptr %282, ptr %memberidx2.i.i254, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %281, i64 0, i32 2
  store i64 %283, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i253, align 4
  %284 = icmp slt i64 %283, 1
  br i1 %284, label %for.end134, label %for.body132

for.body132:                                      ; preds = %for.entry129, %Array_Type____sl__.exit
  %285 = phi i64 [ %297, %Array_Type____sl__.exit ], [ 1, %for.entry129 ]
  %arg4.0611.in = phi ptr [ %298, %Array_Type____sl__.exit ], [ %282, %for.entry129 ]
  %arg4.0611 = load ptr, ptr %arg4.0611.in, align 8
  %286 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg4.0611)
  %287 = load i64, ptr %memberidx.i463, align 4
  %288 = load i64, ptr %memberidx1.i464, align 4
  %.not.i = icmp slt i64 %287, %288
  br i1 %.not.i, label %for.body132.Array_Type____sl__.exit_crit_edge, label %if.entry.i

for.body132.Array_Type____sl__.exit_crit_edge:    ; preds = %for.body132
  %.pre615 = load ptr, ptr %memberidx2.i465, align 8
  br label %Array_Type____sl__.exit

if.entry.i:                                       ; preds = %for.body132
  %289 = shl nuw i64 %288, 1
  store i64 %289, ptr %memberidx1.i464, align 4
  %290 = load ptr, ptr %memberidx2.i465, align 8
  %291 = shl i64 %288, 4
  %292 = tail call ptr @realloc(ptr %290, i64 %291)
  store ptr %292, ptr %memberidx2.i465, align 8
  %.pre = load i64, ptr %memberidx.i463, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body132.Array_Type____sl__.exit_crit_edge, %if.entry.i
  %293 = phi ptr [ %.pre615, %for.body132.Array_Type____sl__.exit_crit_edge ], [ %292, %if.entry.i ]
  %294 = phi i64 [ %287, %for.body132.Array_Type____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %295 = add nsw i64 %294, 1
  store i64 %295, ptr %memberidx.i463, align 4
  %296 = getelementptr inbounds ptr, ptr %293, i64 %294
  store ptr %286, ptr %296, align 8
  %297 = add nuw nsw i64 %285, 1
  store i64 %297, ptr %memberidx1.i.i253, align 4
  %298 = getelementptr inbounds ptr, ptr %282, i64 %285
  %.not630 = icmp slt i64 %285, %283
  br i1 %.not630, label %for.body132, label %for.end134

for.end134:                                       ; preds = %Array_Type____sl__.exit, %for.entry129
  tail call void @free(ptr nonnull %281)
  %memberidx.i239 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %299 = load ptr, ptr %memberidx.i239, align 8
  %memberidx1.i240 = getelementptr inbounds %Compiler, ptr %299, i64 0, i32 6
  %300 = load ptr, ptr %memberidx1.i240, align 8
  %memberidx2.i241 = getelementptr inbounds %Array_FloError_, ptr %300, i64 0, i32 2
  %301 = load i64, ptr %memberidx2.i241, align 4
  %302 = icmp sgt i64 %301, 0
  br i1 %302, label %common.ret, label %ifend138

ifend138:                                         ; preds = %for.end134
  %303 = load ptr, ptr %memberidx69, align 8
  %304 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr nonnull %0, ptr %303, ptr nonnull %143)
  %305 = load ptr, ptr %memberidx.i239, align 8
  %memberidx1.i237 = getelementptr inbounds %Compiler, ptr %305, i64 0, i32 6
  %306 = load ptr, ptr %memberidx1.i237, align 8
  %memberidx2.i238 = getelementptr inbounds %Array_FloError_, ptr %306, i64 0, i32 2
  %307 = load i64, ptr %memberidx2.i238, align 4
  %308 = icmp sgt i64 %307, 0
  br i1 %308, label %if.entry140, label %ifend142

if.entry140:                                      ; preds = %ifend138
  %memberidx.i235 = getelementptr inbounds %Array_FloError_, ptr %306, i64 0, i32 1
  %309 = load ptr, ptr %memberidx.i235, align 8
  %310 = load ptr, ptr %309, align 8
  %memberidx145 = getelementptr inbounds %FloError, ptr %310, i64 0, i32 2
  %311 = load ptr, ptr %1, align 8
  store ptr %311, ptr %memberidx145, align 8
  br label %ifend142

ifend142:                                         ; preds = %ifend138, %if.entry140
  %.not = icmp eq ptr %304, null
  br i1 %.not, label %ifend128, label %common.ret

if.entry152:                                      ; preds = %ifend128
  %312 = load ptr, ptr %146, align 8
  %memberidx155 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %312, i64 0, i32 5
  %313 = load ptr, ptr %memberidx155, align 8
  %314 = tail call ptr %313(ptr nonnull %146)
  %315 = alloca ptr, align 8
  %316 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %315, ptr nonnull @168, ptr %314)
  %317 = load ptr, ptr %315, align 8
  %318 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %318, align 8
  %memberidx.i233 = getelementptr inbounds %string, ptr %318, i64 0, i32 1
  store ptr %317, ptr %memberidx.i233, align 8
  %memberidx1.i234 = getelementptr inbounds %string, ptr %318, i64 0, i32 2
  store i64 %316, ptr %memberidx1.i234, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %318, i64 0, i32 3
  store i64 %316, ptr %memberidx2.i, align 4
  tail call void @free(ptr %314)
  %memberidx156 = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  %319 = load ptr, ptr %memberidx156, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %320 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %320, i64 0, i32 6
  %321 = load ptr, ptr %memberidx1.i, align 8
  %322 = call ptr @malloc(i32 24)
  store i64 5, ptr %322, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %322, i64 0, i32 2
  store ptr %319, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %322, i64 0, i32 1
  store ptr %318, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 2
  %323 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 3
  %324 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %323, %324
  br i1 %.not.i.i, label %if.entry152.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry152.TypeChecker_error.exit_crit_edge:     ; preds = %if.entry152
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 1
  %.pre617 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry152
  %325 = shl nuw i64 %324, 1
  store i64 %325, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 1
  %326 = load ptr, ptr %memberidx2.i.i.i, align 8
  %327 = shl i64 %324, 4
  %328 = call ptr @realloc(ptr %326, i64 %327)
  store ptr %328, ptr %memberidx2.i.i.i, align 8
  %.pre616 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry152.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %329 = phi ptr [ %.pre617, %if.entry152.TypeChecker_error.exit_crit_edge ], [ %328, %if.entry.i.i ]
  %330 = phi i64 [ %323, %if.entry152.TypeChecker_error.exit_crit_edge ], [ %.pre616, %if.entry.i.i ]
  %331 = add nsw i64 %330, 1
  store i64 %331, ptr %memberidx.i.i, align 4
  %332 = getelementptr inbounds ptr, ptr %329, i64 %330
  store ptr %322, ptr %332, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_statement(ptr %0, ptr %1) unnamed_addr {
  %memberidx = getelementptr inbounds %StatementNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 2, label %if.entry6
    i64 3, label %if.entry10
    i64 4, label %if.entry14
    i64 5, label %if.entry18
    i64 6, label %if.entry22
    i64 7, label %if.entry26
    i64 8, label %if.entry30
  ]

common.ret:                                       ; preds = %2, %ifend.i76, %TypeChecker_error.exit.i75, %ifend.i, %TypeChecker_error.exit.i, %ifend61.i, %TypeChecker_error.exit170.i, %TypeChecker_error.exit.i96, %ifend.i92, %else.i, %if.entry30, %if.entry26, %TypeChecker_check_condition.exit, %if.entry6, %if.entry2, %TypeChecker_check_if_stamement.exit
  %common.ret.op = phi ptr [ %21, %TypeChecker_check_if_stamement.exit ], [ %22, %if.entry2 ], [ %23, %if.entry6 ], [ %330, %TypeChecker_check_condition.exit ], [ %367, %if.entry26 ], [ %369, %if.entry30 ], [ null, %TypeChecker_error.exit.i96 ], [ null, %TypeChecker_error.exit170.i ], [ %24, %ifend61.i ], [ null, %else.i ], [ null, %ifend.i92 ], [ null, %TypeChecker_error.exit.i ], [ %348, %ifend.i ], [ null, %TypeChecker_error.exit.i75 ], [ %366, %ifend.i76 ], [ null, %2 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i97 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i97, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i131 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i131, align 8
  %memberidx1.i.i132 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i.i132, align 8
  %memberidx2.i.i133 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i133, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %TypeChecker_check_condition.exit145, label %ifend.i136

ifend.i136:                                       ; preds = %if.entry
  %memberidx.i135 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i135, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %TypeChecker_check_condition.exit145, label %true_block.i143

true_block.i143:                                  ; preds = %ifend.i136
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i137 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i137, align 4
  %memberidx1.i.i.i.i138 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i139 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i139, align 8
  %memberidx1.i.i.i140 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i140, align 8
  %memberidx3.i.i.i142 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i142, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i138, align 1
  br label %TypeChecker_check_condition.exit145

TypeChecker_check_condition.exit145:              ; preds = %ifend.i136, %if.entry, %true_block.i143
  %common.ret.op.i134 = phi ptr [ null, %if.entry ], [ %15, %true_block.i143 ], [ %6, %ifend.i136 ]
  %memberidx1.i98 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 3
  %17 = load ptr, ptr %memberidx1.i98, align 8
  %18 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %17, ptr null, i1 false)
  %memberidx2.i99 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx2.i99, align 8
  %.not.i100 = icmp eq ptr %19, null
  br i1 %.not.i100, label %TypeChecker_check_if_stamement.exit, label %true_block.i

true_block.i:                                     ; preds = %TypeChecker_check_condition.exit145
  %20 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr nonnull %19, ptr null, i1 false)
  br label %TypeChecker_check_if_stamement.exit

TypeChecker_check_if_stamement.exit:              ; preds = %TypeChecker_check_condition.exit145, %true_block.i
  %ternary.i = phi ptr [ %20, %true_block.i ], [ null, %TypeChecker_check_condition.exit145 ]
  %21 = tail call ptr @malloc(i32 32)
  store i64 0, ptr %21, align 4
  %memberidx.i.i101 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 1
  store ptr %common.ret.op.i134, ptr %memberidx.i.i101, align 8
  %memberidx1.i.i102 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i103 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx2.i.i103, align 8
  br label %common.ret

if.entry2:                                        ; preds = %2
  %22 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry6:                                        ; preds = %2
  %23 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry10:                                       ; preds = %2
  %24 = tail call ptr @malloc(i32 48)
  store i64 3, ptr %24, align 4
  %memberidx.i.i80 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 1
  %memberidx1.i.i81 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 2
  %memberidx2.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 4
  %memberidx.i128.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %memberidx.i.i80, i8 0, i64 32, i1 false)
  %25 = load ptr, ptr %memberidx.i128.i, align 8
  %26 = load i64, ptr %25, align 4
  %27 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %26)
  %memberidx2.i129.i = getelementptr inbounds %Scope, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i128.i, align 8
  store ptr %28, ptr %memberidx2.i129.i, align 8
  %29 = load ptr, ptr %0, align 8
  %30 = load ptr, ptr %memberidx.i128.i, align 8
  %memberidx.i.i.i.i83 = getelementptr inbounds %Program, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i.i.i.i83, align 8
  %32 = load i64, ptr %30, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %32
  %35 = load ptr, ptr %34, align 8
  %memberidx2.i.i.i.i84 = getelementptr inbounds %Module, ptr %35, i64 0, i32 7
  %36 = load ptr, ptr %memberidx2.i.i.i.i84, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %37 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Scope_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %memberidx4.i.i = getelementptr inbounds %Scope, ptr %40, i64 0, i32 7
  %41 = load ptr, ptr %memberidx4.i.i, align 8
  %42 = load ptr, ptr %27, align 8
  %memberidx.i.i.i85 = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i.i85, align 4
  %memberidx1.i11.i.i = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i11.i.i, align 4
  %.not.i.i.i86 = icmp slt i64 %43, %44
  br i1 %.not.i.i.i86, label %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge, label %if.entry.i.i.i87

if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge: ; preds = %if.entry10
  %memberidx4.i.i.i88.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 1
  %.pre188 = load ptr, ptr %memberidx4.i.i.i88.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

if.entry.i.i.i87:                                 ; preds = %if.entry10
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i11.i.i, align 4
  %memberidx2.i.i13.i.i = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i13.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = tail call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i13.i.i, align 8
  %.pre187 = load i64, ptr %memberidx.i.i.i85, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

TypeChecker_create_child_scope_within_current_scope.exit.i: ; preds = %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge, %if.entry.i.i.i87
  %49 = phi ptr [ %48, %if.entry.i.i.i87 ], [ %.pre188, %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge ]
  %50 = phi i64 [ %.pre187, %if.entry.i.i.i87 ], [ %43, %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge ]
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i.i85, align 4
  %52 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %52, align 8
  %53 = load ptr, ptr %27, align 8
  store ptr %53, ptr %memberidx.i128.i, align 8
  %memberidx2.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %54 = load i1, ptr %memberidx2.i, align 1
  %memberidx3.i90 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 6
  %55 = load i64, ptr %memberidx3.i90, align 4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %if.entry.i91, label %else.i

if.entry.i91:                                     ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %memberidx4.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 2
  %57 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %57, null
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

else.i:                                           ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %58 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %58, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 5
  %59 = load ptr, ptr %memberidx22.i, align 8
  %60 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %58, ptr %59)
  %memberidx.i130.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i131.i = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx1.i131.i, align 8
  %memberidx2.i132.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i132.i, align 4
  %64 = icmp sgt i64 %63, 0
  br i1 %64, label %common.ret, label %ifend25.i

ifend.i92.sink.split:                             ; preds = %if.entry17.i, %get_class_prop_type.exit283.i
  %.sink = phi ptr [ %308, %get_class_prop_type.exit283.i ], [ %84, %if.entry17.i ]
  store ptr %.sink, ptr %memberidx3.i.i, align 8
  br label %ifend.i92

ifend.i92:                                        ; preds = %ifend.i92.sink.split, %ifend13.i
  %memberidx.i133.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %memberidx.i133.i, align 8
  %memberidx1.i134.i = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i134.i, align 8
  %memberidx2.i135.i = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i135.i, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend61.i

if.entry5.i:                                      ; preds = %if.entry.i91
  %69 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %57)
  store ptr %69, ptr %memberidx1.i.i81, align 8
  br label %ifend7.i

ifend7.i:                                         ; preds = %if.entry5.i, %if.entry.i91
  %memberidx10.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 3
  %70 = load ptr, ptr %memberidx10.i, align 8
  %.not126.i = icmp eq ptr %70, null
  br i1 %.not126.i, label %ifend13.i, label %if.entry11.i

if.entry11.i:                                     ; preds = %ifend7.i
  %71 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %71, align 4
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %71, ptr nonnull %70)
  %memberidx.i.i116 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i.i116, align 8
  %memberidx1.i.i117 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 6
  %74 = load ptr, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i.i118, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %TypeChecker_check_condition.exit130, label %ifend.i121

ifend.i121:                                       ; preds = %if.entry11.i
  %memberidx.i120 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %77 = load ptr, ptr %memberidx.i120, align 8
  %78 = load i64, ptr %77, align 4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %TypeChecker_check_condition.exit130, label %true_block.i128

true_block.i128:                                  ; preds = %ifend.i121
  %80 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %80, align 4
  %81 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %81, align 4
  %memberidx.i.i.i.i122 = getelementptr inbounds %Expression, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i122, align 4
  %memberidx1.i.i.i.i123 = getelementptr inbounds %Expression, ptr %81, i64 0, i32 1
  %memberidx.i.i.i124 = getelementptr inbounds %TypeCastExpression, ptr %81, i64 0, i32 4
  store ptr %72, ptr %memberidx.i.i.i124, align 8
  %memberidx1.i.i.i125 = getelementptr inbounds %Expression, ptr %81, i64 0, i32 3
  store ptr %80, ptr %memberidx1.i.i.i125, align 8
  %memberidx3.i.i.i127 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 1
  %82 = load i1, ptr %memberidx3.i.i.i127, align 1
  store i1 %82, ptr %memberidx1.i.i.i.i123, align 1
  br label %TypeChecker_check_condition.exit130

TypeChecker_check_condition.exit130:              ; preds = %ifend.i121, %if.entry11.i, %true_block.i128
  %common.ret.op.i119 = phi ptr [ null, %if.entry11.i ], [ %81, %true_block.i128 ], [ %72, %ifend.i121 ]
  store ptr %common.ret.op.i119, ptr %memberidx2.i.i, align 8
  br label %ifend13.i

ifend13.i:                                        ; preds = %TypeChecker_check_condition.exit130, %ifend7.i
  %memberidx16.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 4
  %83 = load ptr, ptr %memberidx16.i, align 8
  %.not127.i = icmp eq ptr %83, null
  br i1 %.not127.i, label %ifend.i92, label %if.entry17.i

if.entry17.i:                                     ; preds = %ifend13.i
  %84 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %83)
  br label %ifend.i92.sink.split

ifend25.i:                                        ; preds = %else.i
  %memberidx26.i = getelementptr inbounds %Expression, ptr %60, i64 0, i32 3
  %85 = load ptr, ptr %memberidx26.i, align 8
  %86 = load i64, ptr %85, align 4
  %87 = icmp eq i64 %86, 20
  br i1 %87, label %if.entry.i157, label %is_object.exit.thread

if.entry.i157:                                    ; preds = %ifend25.i, %if.entry.i157
  %.tr5.i = phi ptr [ %88, %if.entry.i157 ], [ %85, %ifend25.i ]
  %memberidx1.i156 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %88 = load ptr, ptr %memberidx1.i156, align 8
  %89 = load i64, ptr %88, align 4
  switch i64 %89, label %if.entry27.i [
    i64 20, label %if.entry.i157
    i64 11, label %ifend29.i
  ]

is_object.exit.thread:                            ; preds = %ifend25.i
  %90 = icmp eq i64 %86, 11
  br i1 %90, label %ifend29.i.thread, label %if.entry27.i

ifend29.i.thread:                                 ; preds = %is_object.exit.thread
  %91 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry27.i:                                     ; preds = %if.entry.i157, %is_object.exit.thread
  %92 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %92, ptr noundef nonnull align 8 dereferenceable(28) @236, i64 28, i1 false)
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i136.i = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i136.i, align 8
  %memberidx1.i.i137.i = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i137.i, align 4
  %memberidx2.i.i.i94 = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i.i94, align 4
  %94 = load ptr, ptr %memberidx22.i, align 8
  %95 = load ptr, ptr %94, align 8
  %96 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i139.i = getelementptr inbounds %Compiler, ptr %96, i64 0, i32 6
  %97 = load ptr, ptr %memberidx1.i139.i, align 8
  %98 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %98, align 4
  %memberidx1.i.i140.i = getelementptr inbounds %FloError, ptr %98, i64 0, i32 2
  store ptr %95, ptr %memberidx1.i.i140.i, align 8
  %memberidx2.i.i141.i = getelementptr inbounds %FloError, ptr %98, i64 0, i32 1
  store ptr %93, ptr %memberidx2.i.i141.i, align 8
  %memberidx.i.i142.i = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i.i142.i, align 4
  %memberidx1.i2.i.i95 = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 3
  %100 = load i64, ptr %memberidx1.i2.i.i95, align 4
  %.not.i.i143.i = icmp slt i64 %99, %100
  br i1 %.not.i.i143.i, label %if.entry27.i.TypeChecker_error.exit.i96_crit_edge, label %if.entry.i.i146.i

if.entry27.i.TypeChecker_error.exit.i96_crit_edge: ; preds = %if.entry27.i
  %memberidx4.i.i147.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 1
  %.pre190 = load ptr, ptr %memberidx4.i.i147.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i96

if.entry.i.i146.i:                                ; preds = %if.entry27.i
  %101 = shl nuw i64 %100, 1
  store i64 %101, ptr %memberidx1.i2.i.i95, align 4
  %memberidx2.i.i.i145.i = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 1
  %102 = load ptr, ptr %memberidx2.i.i.i145.i, align 8
  %103 = shl i64 %100, 4
  %104 = tail call ptr @realloc(ptr %102, i64 %103)
  store ptr %104, ptr %memberidx2.i.i.i145.i, align 8
  %.pre189 = load i64, ptr %memberidx.i.i142.i, align 4
  br label %TypeChecker_error.exit.i96

TypeChecker_error.exit.i96:                       ; preds = %if.entry27.i.TypeChecker_error.exit.i96_crit_edge, %if.entry.i.i146.i
  %105 = phi ptr [ %104, %if.entry.i.i146.i ], [ %.pre190, %if.entry27.i.TypeChecker_error.exit.i96_crit_edge ]
  %106 = phi i64 [ %.pre189, %if.entry.i.i146.i ], [ %99, %if.entry27.i.TypeChecker_error.exit.i96_crit_edge ]
  %107 = add nsw i64 %106, 1
  store i64 %107, ptr %memberidx.i.i142.i, align 4
  %108 = getelementptr inbounds ptr, ptr %105, i64 %106
  store ptr %98, ptr %108, align 8
  br label %common.ret

ifend29.i:                                        ; preds = %if.entry.i157
  %109 = load ptr, ptr %0, align 8
  br i1 %87, label %if.entry.i160, label %if.entry3.i

if.entry.i160:                                    ; preds = %ifend29.i, %if.entry.i160
  %.tr11.i181 = phi ptr [ %110, %if.entry.i160 ], [ %85, %ifend29.i ]
  %memberidx1.i159 = getelementptr inbounds %GenericType, ptr %.tr11.i181, i64 0, i32 3
  %110 = load ptr, ptr %memberidx1.i159, align 8
  %111 = load i64, ptr %110, align 4
  %switch = icmp eq i64 %111, 20
  br i1 %switch, label %if.entry.i160, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i160, %ifend29.i.thread, %ifend29.i
  %112 = phi ptr [ %109, %ifend29.i ], [ %91, %ifend29.i.thread ], [ %109, %if.entry.i160 ]
  %.tr11.i.lcssa = phi ptr [ %85, %ifend29.i ], [ %85, %ifend29.i.thread ], [ %110, %if.entry.i160 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %113 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i161 = getelementptr inbounds %Program, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %memberidx.i.i161, align 8
  %115 = load i64, ptr %113, align 4
  %memberidx.i.i.i162 = getelementptr inbounds %Array_Module_, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i.i.i162, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx2.i.i163 = getelementptr inbounds %Module, ptr %118, i64 0, i32 3
  %119 = load ptr, ptr %memberidx2.i.i163, align 8
  %memberidx3.i.i164 = getelementptr inbounds %TypeId, ptr %113, i64 0, i32 2
  %120 = load i64, ptr %memberidx3.i.i164, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %119, i64 0, i32 1
  %121 = load ptr, ptr %memberidx.i5.i.i, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  %123 = load ptr, ptr %122, align 8
  %memberidx34.i = getelementptr inbounds %Class, ptr %123, i64 0, i32 6
  %124 = load ptr, ptr %memberidx34.i, align 8
  %125 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %125, align 8
  %126 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %126, align 8
  %memberidx.i.i148.i = getelementptr inbounds %string, ptr %126, i64 0, i32 1
  store ptr %125, ptr %memberidx.i.i148.i, align 8
  %memberidx1.i.i149.i = getelementptr inbounds %string, ptr %126, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i149.i, align 4
  %memberidx2.i.i150.i = getelementptr inbounds %string, ptr %126, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i150.i, align 4
  %127 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %126)
  %memberidx.i151.i = getelementptr inbounds %Map_string_PropId_, ptr %124, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i151.i, align 4
  %129 = urem i64 %127, %128
  %130 = load ptr, ptr %124, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  %.not.i.i = icmp eq ptr %132, null
  br i1 %.not.i.i, label %if.entry35.i, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry3.i, %else.i.i
  %133 = phi ptr [ %143, %else.i.i ], [ %130, %if.entry3.i ]
  %134 = phi i64 [ %144, %else.i.i ], [ %128, %if.entry3.i ]
  %135 = phi ptr [ %148, %else.i.i ], [ %132, %if.entry3.i ]
  %hash.0.i.i = phi i64 [ %146, %else.i.i ], [ %129, %if.entry3.i ]
  %136 = load ptr, ptr %135, align 8
  %memberidx.i.i152.i = getelementptr inbounds %string, ptr %136, i64 0, i32 2
  %137 = load i64, ptr %memberidx.i.i152.i, align 4
  %138 = load i64, ptr %memberidx1.i.i149.i, align 4
  %.not.i.i154.i = icmp eq i64 %137, %138
  br i1 %.not.i.i154.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i155.i = getelementptr inbounds %string, ptr %136, i64 0, i32 1
  %139 = load ptr, ptr %memberidx2.i.i155.i, align 8
  %140 = load ptr, ptr %memberidx.i.i148.i, align 8
  %141 = tail call i64 @memcmp(ptr %139, ptr %140, i64 %137)
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre191 = load i64, ptr %memberidx.i151.i, align 4
  %.pre192 = load ptr, ptr %124, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre193.pre = load ptr, ptr %124, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre193.pre, i64 %hash.0.i.i
  %.pre194.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre194.pre, null
  br i1 %.not25.i.i, label %if.entry35.i, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %143 = phi ptr [ %.pre192, %ifend.i.i.i.else.i.i_crit_edge ], [ %133, %while.entry.i.i ]
  %144 = phi i64 [ %.pre191, %ifend.i.i.i.else.i.i_crit_edge ], [ %134, %while.entry.i.i ]
  %145 = add nuw i64 %hash.0.i.i, 1
  %146 = urem i64 %145, %144
  %147 = getelementptr inbounds ptr, ptr %143, i64 %146
  %148 = load ptr, ptr %147, align 8
  %.not26.i.i = icmp eq ptr %148, null
  br i1 %.not26.i.i, label %if.entry35.i, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre194.pre, i64 0, i32 1
  %149 = load ptr, ptr %memberidx11.i.i, align 8
  %150 = icmp eq ptr %149, null
  br i1 %150, label %if.entry35.i, label %ifend37.i

if.entry35.i:                                     ; preds = %else.i.i, %if.entry3.i, %while.end.i.i, %Map_string_PropId____getitem__.exit.i
  %151 = tail call ptr @malloc(i32 46)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %151, ptr noundef nonnull align 8 dereferenceable(46) @237, i64 46, i1 false)
  %152 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %152, align 8
  %memberidx.i.i156.i = getelementptr inbounds %string, ptr %152, i64 0, i32 1
  store ptr %151, ptr %memberidx.i.i156.i, align 8
  %memberidx1.i.i157.i = getelementptr inbounds %string, ptr %152, i64 0, i32 2
  store i64 46, ptr %memberidx1.i.i157.i, align 4
  %memberidx2.i.i158.i = getelementptr inbounds %string, ptr %152, i64 0, i32 3
  store i64 46, ptr %memberidx2.i.i158.i, align 4
  %153 = load ptr, ptr %memberidx22.i, align 8
  %154 = load ptr, ptr %153, align 8
  %155 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i160.i = getelementptr inbounds %Compiler, ptr %155, i64 0, i32 6
  %156 = load ptr, ptr %memberidx1.i160.i, align 8
  %157 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %157, align 4
  %memberidx1.i.i161.i = getelementptr inbounds %FloError, ptr %157, i64 0, i32 2
  store ptr %154, ptr %memberidx1.i.i161.i, align 8
  %memberidx2.i.i162.i = getelementptr inbounds %FloError, ptr %157, i64 0, i32 1
  store ptr %152, ptr %memberidx2.i.i162.i, align 8
  %memberidx.i.i163.i = getelementptr inbounds %Array_FloError_, ptr %156, i64 0, i32 2
  %158 = load i64, ptr %memberidx.i.i163.i, align 4
  %memberidx1.i2.i164.i = getelementptr inbounds %Array_FloError_, ptr %156, i64 0, i32 3
  %159 = load i64, ptr %memberidx1.i2.i164.i, align 4
  %.not.i.i165.i = icmp slt i64 %158, %159
  br i1 %.not.i.i165.i, label %if.entry35.i.TypeChecker_error.exit170.i_crit_edge, label %if.entry.i.i168.i

if.entry35.i.TypeChecker_error.exit170.i_crit_edge: ; preds = %if.entry35.i
  %memberidx4.i.i169.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %156, i64 0, i32 1
  %.pre206 = load ptr, ptr %memberidx4.i.i169.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit170.i

if.entry.i.i168.i:                                ; preds = %if.entry35.i
  %160 = shl nuw i64 %159, 1
  store i64 %160, ptr %memberidx1.i2.i164.i, align 4
  %memberidx2.i.i.i167.i = getelementptr inbounds %Array_FloError_, ptr %156, i64 0, i32 1
  %161 = load ptr, ptr %memberidx2.i.i.i167.i, align 8
  %162 = shl i64 %159, 4
  %163 = tail call ptr @realloc(ptr %161, i64 %162)
  store ptr %163, ptr %memberidx2.i.i.i167.i, align 8
  %.pre205 = load i64, ptr %memberidx.i.i163.i, align 4
  br label %TypeChecker_error.exit170.i

TypeChecker_error.exit170.i:                      ; preds = %if.entry35.i.TypeChecker_error.exit170.i_crit_edge, %if.entry.i.i168.i
  %164 = phi ptr [ %163, %if.entry.i.i168.i ], [ %.pre206, %if.entry35.i.TypeChecker_error.exit170.i_crit_edge ]
  %165 = phi i64 [ %.pre205, %if.entry.i.i168.i ], [ %158, %if.entry35.i.TypeChecker_error.exit170.i_crit_edge ]
  %166 = add nsw i64 %165, 1
  store i64 %166, ptr %memberidx.i.i163.i, align 4
  %167 = getelementptr inbounds ptr, ptr %164, i64 %165
  store ptr %157, ptr %167, align 8
  br label %common.ret

ifend37.i:                                        ; preds = %Map_string_PropId____getitem__.exit.i
  %168 = load ptr, ptr %0, align 8
  %memberidx.i.i171.i = getelementptr inbounds %PropId, ptr %149, i64 0, i32 1
  %169 = load ptr, ptr %memberidx.i.i171.i, align 8
  %memberidx.i.i.i172.i = getelementptr inbounds %Program, ptr %168, i64 0, i32 1
  %170 = load ptr, ptr %memberidx.i.i.i172.i, align 8
  %171 = load i64, ptr %169, align 4
  %memberidx.i.i.i.i173.i = getelementptr inbounds %Array_Module_, ptr %170, i64 0, i32 1
  %172 = load ptr, ptr %memberidx.i.i.i.i173.i, align 8
  %173 = getelementptr inbounds ptr, ptr %172, i64 %171
  %174 = load ptr, ptr %173, align 8
  %memberidx2.i.i.i174.i = getelementptr inbounds %Module, ptr %174, i64 0, i32 3
  %175 = load ptr, ptr %memberidx2.i.i.i174.i, align 8
  %memberidx3.i.i.i175.i = getelementptr inbounds %TypeId, ptr %169, i64 0, i32 2
  %176 = load i64, ptr %memberidx3.i.i.i175.i, align 4
  %memberidx.i5.i.i.i176.i = getelementptr inbounds %Array_Class_, ptr %175, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i5.i.i.i176.i, align 8
  %178 = getelementptr inbounds ptr, ptr %177, i64 %176
  %179 = load ptr, ptr %178, align 8
  %180 = load i64, ptr %149, align 4
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend37.i
  %memberidx1.i178.i = getelementptr inbounds %Class, ptr %179, i64 0, i32 5
  %182 = load ptr, ptr %memberidx1.i178.i, align 8
  %memberidx2.i179.i = getelementptr inbounds %PropId, ptr %149, i64 0, i32 2
  %183 = load i64, ptr %memberidx2.i179.i, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %182, i64 0, i32 1
  %184 = load ptr, ptr %memberidx.i12.i.i, align 8
  %185 = getelementptr inbounds ptr, ptr %184, i64 %183
  %186 = load ptr, ptr %185, align 8
  %memberidx3.i180.i = getelementptr inbounds %ClassMethod, ptr %186, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend37.i
  %memberidx4.i181.i = getelementptr inbounds %Class, ptr %179, i64 0, i32 4
  %187 = load ptr, ptr %memberidx4.i181.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %149, i64 0, i32 2
  %188 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %187, i64 0, i32 1
  %189 = load ptr, ptr %memberidx.i11.i.i, align 8
  %190 = getelementptr inbounds ptr, ptr %189, i64 %188
  %191 = load ptr, ptr %190, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %191, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i180.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i177.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %memberidx41.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i177.i, i64 0, i32 2
  %192 = load ptr, ptr %memberidx41.i, align 8
  %193 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %193, ptr noundef nonnull align 8 dereferenceable(6) @238, i64 6, i1 false)
  %194 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %194, align 8
  %memberidx.i.i182.i = getelementptr inbounds %string, ptr %194, i64 0, i32 1
  store ptr %193, ptr %memberidx.i.i182.i, align 8
  %memberidx1.i.i183.i = getelementptr inbounds %string, ptr %194, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i183.i, align 4
  %memberidx2.i.i184.i = getelementptr inbounds %string, ptr %194, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i184.i, align 4
  %195 = tail call ptr @malloc(i32 41)
  %196 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %196, align 4
  %memberidx.i.i185.i = getelementptr inbounds %Expression, ptr %196, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i185.i, align 4
  %memberidx1.i.i186.i = getelementptr inbounds %Expression, ptr %196, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i186.i, align 1
  %memberidx.i187.i = getelementptr inbounds %MemberExpression, ptr %196, i64 0, i32 4
  store ptr %60, ptr %memberidx.i187.i, align 8
  %memberidx1.i188.i = getelementptr inbounds %MemberExpression, ptr %196, i64 0, i32 5
  store ptr %149, ptr %memberidx1.i188.i, align 8
  %memberidx2.i189.i = getelementptr inbounds %Expression, ptr %196, i64 0, i32 3
  store ptr %common.ret.op.i177.i, ptr %memberidx2.i189.i, align 8
  %197 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %197, align 8
  %memberidx.i190.i = getelementptr inbounds %Array_Expression_, ptr %197, i64 0, i32 2
  store i64 0, ptr %memberidx.i190.i, align 4
  %memberidx1.i191.i = getelementptr inbounds %Array_Expression_, ptr %197, i64 0, i32 3
  store i64 8, ptr %memberidx1.i191.i, align 4
  %memberidx2.i192.i = getelementptr inbounds %Array_Expression_, ptr %197, i64 0, i32 1
  %198 = tail call ptr @malloc(i32 64)
  store ptr %198, ptr %memberidx2.i192.i, align 8
  store i64 0, ptr %memberidx.i190.i, align 4
  store i64 8, ptr %195, align 4
  %memberidx.i.i193.i = getelementptr inbounds %Expression, ptr %195, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i193.i, align 4
  %memberidx1.i.i194.i = getelementptr inbounds %Expression, ptr %195, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i194.i, align 1
  %memberidx.i195.i = getelementptr inbounds %CallExpression, ptr %195, i64 0, i32 4
  store ptr %196, ptr %memberidx.i195.i, align 8
  %memberidx1.i196.i = getelementptr inbounds %CallExpression, ptr %195, i64 0, i32 5
  store ptr %197, ptr %memberidx1.i196.i, align 8
  %memberidx2.i197.i = getelementptr inbounds %Expression, ptr %195, i64 0, i32 3
  store ptr %192, ptr %memberidx2.i197.i, align 8
  %199 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr nonnull %194, ptr nonnull %195, ptr %192)
  %memberidx44.i = getelementptr inbounds %Var, ptr %199, i64 0, i32 1
  %200 = load ptr, ptr %memberidx44.i, align 8
  %201 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %201, align 4
  %memberidx.i198.i = getelementptr inbounds %VarDeclaration, ptr %201, i64 0, i32 2
  store ptr %200, ptr %memberidx.i198.i, align 8
  %memberidx1.i199.i = getelementptr inbounds %VarDeclaration, ptr %201, i64 0, i32 1
  store ptr %194, ptr %memberidx1.i199.i, align 8
  %memberidx2.i200.i = getelementptr inbounds %VarDeclaration, ptr %201, i64 0, i32 3
  store i1 false, ptr %memberidx2.i200.i, align 1
  store ptr %201, ptr %memberidx.i.i80, align 8
  %202 = load ptr, ptr %0, align 8
  br label %tailrecurse.i166

tailrecurse.i166:                                 ; preds = %if.entry.i169, %get_class_prop_type.exit.i
  %.tr11.i165 = phi ptr [ %192, %get_class_prop_type.exit.i ], [ %204, %if.entry.i169 ]
  %203 = load i64, ptr %.tr11.i165, align 4
  switch i64 %203, label %get_class_from_type.exit177 [
    i64 20, label %if.entry.i169
    i64 11, label %if.entry3.i176
  ]

if.entry.i169:                                    ; preds = %tailrecurse.i166
  %memberidx1.i168 = getelementptr inbounds %GenericType, ptr %.tr11.i165, i64 0, i32 3
  %204 = load ptr, ptr %memberidx1.i168, align 8
  br label %tailrecurse.i166

if.entry3.i176:                                   ; preds = %tailrecurse.i166
  %memberidx6.i170 = getelementptr inbounds %ObjectType, ptr %.tr11.i165, i64 0, i32 1
  %205 = load ptr, ptr %memberidx6.i170, align 8
  %memberidx.i.i171 = getelementptr inbounds %Program, ptr %202, i64 0, i32 1
  %206 = load ptr, ptr %memberidx.i.i171, align 8
  %207 = load i64, ptr %205, align 4
  %memberidx.i.i.i172 = getelementptr inbounds %Array_Module_, ptr %206, i64 0, i32 1
  %208 = load ptr, ptr %memberidx.i.i.i172, align 8
  %209 = getelementptr inbounds ptr, ptr %208, i64 %207
  %210 = load ptr, ptr %209, align 8
  %memberidx2.i.i173 = getelementptr inbounds %Module, ptr %210, i64 0, i32 3
  %211 = load ptr, ptr %memberidx2.i.i173, align 8
  %memberidx3.i.i174 = getelementptr inbounds %TypeId, ptr %205, i64 0, i32 2
  %212 = load i64, ptr %memberidx3.i.i174, align 4
  %memberidx.i5.i.i175 = getelementptr inbounds %Array_Class_, ptr %211, i64 0, i32 1
  %213 = load ptr, ptr %memberidx.i5.i.i175, align 8
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  %215 = load ptr, ptr %214, align 8
  br label %get_class_from_type.exit177

get_class_from_type.exit177:                      ; preds = %tailrecurse.i166, %if.entry3.i176
  %common.ret.op.i167 = phi ptr [ %215, %if.entry3.i176 ], [ null, %tailrecurse.i166 ]
  %memberidx47.i = getelementptr inbounds %Class, ptr %common.ret.op.i167, i64 0, i32 6
  %216 = load ptr, ptr %memberidx47.i, align 8
  %217 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %217, align 8
  %218 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %218, align 8
  %memberidx.i.i201.i = getelementptr inbounds %string, ptr %218, i64 0, i32 1
  store ptr %217, ptr %memberidx.i.i201.i, align 8
  %memberidx1.i.i202.i = getelementptr inbounds %string, ptr %218, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i202.i, align 4
  %memberidx2.i.i203.i = getelementptr inbounds %string, ptr %218, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i203.i, align 4
  %219 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %218)
  %memberidx.i204.i = getelementptr inbounds %Map_string_PropId_, ptr %216, i64 0, i32 1
  %220 = load i64, ptr %memberidx.i204.i, align 4
  %221 = urem i64 %219, %220
  %222 = load ptr, ptr %216, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %221
  %224 = load ptr, ptr %223, align 8
  %.not.i205.i = icmp eq ptr %224, null
  br i1 %.not.i205.i, label %Map_string_PropId____getitem__.exit224.i, label %while.entry.i210.i

while.entry.i210.i:                               ; preds = %get_class_from_type.exit177, %else.i220.i
  %225 = phi ptr [ %235, %else.i220.i ], [ %222, %get_class_from_type.exit177 ]
  %226 = phi i64 [ %236, %else.i220.i ], [ %220, %get_class_from_type.exit177 ]
  %227 = phi ptr [ %240, %else.i220.i ], [ %224, %get_class_from_type.exit177 ]
  %hash.0.i206.i = phi i64 [ %238, %else.i220.i ], [ %221, %get_class_from_type.exit177 ]
  %228 = load ptr, ptr %227, align 8
  %memberidx.i.i207.i = getelementptr inbounds %string, ptr %228, i64 0, i32 2
  %229 = load i64, ptr %memberidx.i.i207.i, align 4
  %230 = load i64, ptr %memberidx1.i.i202.i, align 4
  %.not.i.i209.i = icmp eq i64 %229, %230
  br i1 %.not.i.i209.i, label %ifend.i.i213.i, label %else.i220.i

ifend.i.i213.i:                                   ; preds = %while.entry.i210.i
  %memberidx2.i.i211.i = getelementptr inbounds %string, ptr %228, i64 0, i32 1
  %231 = load ptr, ptr %memberidx2.i.i211.i, align 8
  %232 = load ptr, ptr %memberidx.i.i201.i, align 8
  %233 = tail call i64 @memcmp(ptr %231, ptr %232, i64 %229)
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %while.end.i218.i, label %ifend.i.i213.i.else.i220.i_crit_edge

ifend.i.i213.i.else.i220.i_crit_edge:             ; preds = %ifend.i.i213.i
  %.pre195 = load i64, ptr %memberidx.i204.i, align 4
  %.pre196 = load ptr, ptr %216, align 8
  br label %else.i220.i

while.end.i218.i:                                 ; preds = %ifend.i.i213.i
  %.pre197.pre = load ptr, ptr %216, align 8
  %.phi.trans.insert198.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre197.pre, i64 %hash.0.i206.i
  %.pre199.pre = load ptr, ptr %.phi.trans.insert198.phi.trans.insert, align 8
  %.not25.i217.i = icmp eq ptr %.pre199.pre, null
  br i1 %.not25.i217.i, label %Map_string_PropId____getitem__.exit224.i, label %if.entry7.i223.i

else.i220.i:                                      ; preds = %ifend.i.i213.i.else.i220.i_crit_edge, %while.entry.i210.i
  %235 = phi ptr [ %.pre196, %ifend.i.i213.i.else.i220.i_crit_edge ], [ %225, %while.entry.i210.i ]
  %236 = phi i64 [ %.pre195, %ifend.i.i213.i.else.i220.i_crit_edge ], [ %226, %while.entry.i210.i ]
  %237 = add nuw i64 %hash.0.i206.i, 1
  %238 = urem i64 %237, %236
  %239 = getelementptr inbounds ptr, ptr %235, i64 %238
  %240 = load ptr, ptr %239, align 8
  %.not26.i219.i = icmp eq ptr %240, null
  br i1 %.not26.i219.i, label %Map_string_PropId____getitem__.exit224.i, label %while.entry.i210.i

if.entry7.i223.i:                                 ; preds = %while.end.i218.i
  %memberidx11.i222.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre199.pre, i64 0, i32 1
  %241 = load ptr, ptr %memberidx11.i222.i, align 8
  br label %Map_string_PropId____getitem__.exit224.i

Map_string_PropId____getitem__.exit224.i:         ; preds = %else.i220.i, %get_class_from_type.exit177, %if.entry7.i223.i, %while.end.i218.i
  %common.ret.op.i221.i = phi ptr [ %241, %if.entry7.i223.i ], [ null, %while.end.i218.i ], [ null, %get_class_from_type.exit177 ], [ null, %else.i220.i ]
  %242 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %242, align 4
  %memberidx.i.i225.i = getelementptr inbounds %Expression, ptr %242, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i225.i, align 4
  %memberidx1.i.i226.i = getelementptr inbounds %Expression, ptr %242, i64 0, i32 1
  %memberidx.i227.i = getelementptr inbounds %VarAccessExpression, ptr %242, i64 0, i32 4
  store ptr %200, ptr %memberidx.i227.i, align 8
  %memberidx1.i228.i = getelementptr inbounds %Expression, ptr %242, i64 0, i32 3
  store ptr %192, ptr %memberidx1.i228.i, align 8
  %243 = load i64, ptr %200, align 4
  %244 = icmp eq i64 %243, 2
  store i1 %244, ptr %memberidx1.i.i226.i, align 1
  %245 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %245, align 4
  %246 = tail call ptr @malloc(i32 41)
  %247 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %247, align 4
  %memberidx.i.i230.i = getelementptr inbounds %Expression, ptr %247, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i230.i, align 4
  %memberidx1.i.i231.i = getelementptr inbounds %Expression, ptr %247, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i231.i, align 1
  %memberidx.i232.i = getelementptr inbounds %MemberExpression, ptr %247, i64 0, i32 4
  store ptr %242, ptr %memberidx.i232.i, align 8
  %memberidx1.i233.i = getelementptr inbounds %MemberExpression, ptr %247, i64 0, i32 5
  store ptr %common.ret.op.i221.i, ptr %memberidx1.i233.i, align 8
  %memberidx2.i234.i = getelementptr inbounds %Expression, ptr %247, i64 0, i32 3
  store ptr %245, ptr %memberidx2.i234.i, align 8
  store i64 8, ptr %246, align 4
  %memberidx.i.i235.i = getelementptr inbounds %Expression, ptr %246, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i235.i, align 4
  %memberidx1.i.i236.i = getelementptr inbounds %Expression, ptr %246, i64 0, i32 1
  %memberidx.i237.i = getelementptr inbounds %UnaryExpression, ptr %246, i64 0, i32 4
  store i64 7, ptr %memberidx.i237.i, align 4
  %memberidx1.i238.i = getelementptr inbounds %UnaryExpression, ptr %246, i64 0, i32 5
  store ptr %247, ptr %memberidx1.i238.i, align 8
  %memberidx2.i239.i = getelementptr inbounds %Expression, ptr %246, i64 0, i32 3
  store ptr %245, ptr %memberidx2.i239.i, align 8
  store i1 false, ptr %memberidx1.i.i236.i, align 1
  store ptr %246, ptr %memberidx2.i.i, align 8
  %memberidx49.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 7
  %248 = load ptr, ptr %memberidx49.i, align 8
  %memberidx50.i = getelementptr inbounds %IdentifierToken, ptr %248, i64 0, i32 2
  %249 = load ptr, ptr %memberidx50.i, align 8
  %250 = load ptr, ptr %memberidx47.i, align 8
  %251 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %251, align 8
  %252 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %252, align 8
  %memberidx.i.i241.i = getelementptr inbounds %string, ptr %252, i64 0, i32 1
  store ptr %251, ptr %memberidx.i.i241.i, align 8
  %memberidx1.i.i242.i = getelementptr inbounds %string, ptr %252, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i242.i, align 4
  %memberidx2.i.i243.i = getelementptr inbounds %string, ptr %252, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i243.i, align 4
  %253 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %252)
  %memberidx.i244.i = getelementptr inbounds %Map_string_PropId_, ptr %250, i64 0, i32 1
  %254 = load i64, ptr %memberidx.i244.i, align 4
  %255 = urem i64 %253, %254
  %256 = load ptr, ptr %250, align 8
  %257 = getelementptr inbounds ptr, ptr %256, i64 %255
  %258 = load ptr, ptr %257, align 8
  %.not.i245.i = icmp eq ptr %258, null
  br i1 %.not.i245.i, label %Map_string_PropId____getitem__.exit264.i, label %while.entry.i250.i

while.entry.i250.i:                               ; preds = %Map_string_PropId____getitem__.exit224.i, %else.i260.i
  %259 = phi ptr [ %269, %else.i260.i ], [ %256, %Map_string_PropId____getitem__.exit224.i ]
  %260 = phi i64 [ %270, %else.i260.i ], [ %254, %Map_string_PropId____getitem__.exit224.i ]
  %261 = phi ptr [ %274, %else.i260.i ], [ %258, %Map_string_PropId____getitem__.exit224.i ]
  %hash.0.i246.i = phi i64 [ %272, %else.i260.i ], [ %255, %Map_string_PropId____getitem__.exit224.i ]
  %262 = load ptr, ptr %261, align 8
  %memberidx.i.i247.i = getelementptr inbounds %string, ptr %262, i64 0, i32 2
  %263 = load i64, ptr %memberidx.i.i247.i, align 4
  %264 = load i64, ptr %memberidx1.i.i242.i, align 4
  %.not.i.i249.i = icmp eq i64 %263, %264
  br i1 %.not.i.i249.i, label %ifend.i.i253.i, label %else.i260.i

ifend.i.i253.i:                                   ; preds = %while.entry.i250.i
  %memberidx2.i.i251.i = getelementptr inbounds %string, ptr %262, i64 0, i32 1
  %265 = load ptr, ptr %memberidx2.i.i251.i, align 8
  %266 = load ptr, ptr %memberidx.i.i241.i, align 8
  %267 = tail call i64 @memcmp(ptr %265, ptr %266, i64 %263)
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %while.end.i258.i, label %ifend.i.i253.i.else.i260.i_crit_edge

ifend.i.i253.i.else.i260.i_crit_edge:             ; preds = %ifend.i.i253.i
  %.pre200 = load i64, ptr %memberidx.i244.i, align 4
  %.pre201 = load ptr, ptr %250, align 8
  br label %else.i260.i

while.end.i258.i:                                 ; preds = %ifend.i.i253.i
  %.pre202.pre = load ptr, ptr %250, align 8
  %.phi.trans.insert203.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre202.pre, i64 %hash.0.i246.i
  %.pre204.pre = load ptr, ptr %.phi.trans.insert203.phi.trans.insert, align 8
  %.not25.i257.i = icmp eq ptr %.pre204.pre, null
  br i1 %.not25.i257.i, label %Map_string_PropId____getitem__.exit264.i, label %if.entry7.i263.i

else.i260.i:                                      ; preds = %ifend.i.i253.i.else.i260.i_crit_edge, %while.entry.i250.i
  %269 = phi ptr [ %.pre201, %ifend.i.i253.i.else.i260.i_crit_edge ], [ %259, %while.entry.i250.i ]
  %270 = phi i64 [ %.pre200, %ifend.i.i253.i.else.i260.i_crit_edge ], [ %260, %while.entry.i250.i ]
  %271 = add nuw i64 %hash.0.i246.i, 1
  %272 = urem i64 %271, %270
  %273 = getelementptr inbounds ptr, ptr %269, i64 %272
  %274 = load ptr, ptr %273, align 8
  %.not26.i259.i = icmp eq ptr %274, null
  br i1 %.not26.i259.i, label %Map_string_PropId____getitem__.exit264.i, label %while.entry.i250.i

if.entry7.i263.i:                                 ; preds = %while.end.i258.i
  %memberidx11.i262.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre204.pre, i64 0, i32 1
  %275 = load ptr, ptr %memberidx11.i262.i, align 8
  br label %Map_string_PropId____getitem__.exit264.i

Map_string_PropId____getitem__.exit264.i:         ; preds = %else.i260.i, %Map_string_PropId____getitem__.exit224.i, %if.entry7.i263.i, %while.end.i258.i
  %common.ret.op.i261.i = phi ptr [ %275, %if.entry7.i263.i ], [ null, %while.end.i258.i ], [ null, %Map_string_PropId____getitem__.exit224.i ], [ null, %else.i260.i ]
  %276 = load ptr, ptr %0, align 8
  %memberidx.i.i265.i = getelementptr inbounds %PropId, ptr %common.ret.op.i261.i, i64 0, i32 1
  %277 = load ptr, ptr %memberidx.i.i265.i, align 8
  %memberidx.i.i.i266.i = getelementptr inbounds %Program, ptr %276, i64 0, i32 1
  %278 = load ptr, ptr %memberidx.i.i.i266.i, align 8
  %279 = load i64, ptr %277, align 4
  %memberidx.i.i.i.i267.i = getelementptr inbounds %Array_Module_, ptr %278, i64 0, i32 1
  %280 = load ptr, ptr %memberidx.i.i.i.i267.i, align 8
  %281 = getelementptr inbounds ptr, ptr %280, i64 %279
  %282 = load ptr, ptr %281, align 8
  %memberidx2.i.i.i268.i = getelementptr inbounds %Module, ptr %282, i64 0, i32 3
  %283 = load ptr, ptr %memberidx2.i.i.i268.i, align 8
  %memberidx3.i.i.i269.i = getelementptr inbounds %TypeId, ptr %277, i64 0, i32 2
  %284 = load i64, ptr %memberidx3.i.i.i269.i, align 4
  %memberidx.i5.i.i.i270.i = getelementptr inbounds %Array_Class_, ptr %283, i64 0, i32 1
  %285 = load ptr, ptr %memberidx.i5.i.i.i270.i, align 8
  %286 = getelementptr inbounds ptr, ptr %285, i64 %284
  %287 = load ptr, ptr %286, align 8
  %288 = load i64, ptr %common.ret.op.i261.i, align 4
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %if.entry.i277.i, label %ifend.i282.i

if.entry.i277.i:                                  ; preds = %Map_string_PropId____getitem__.exit264.i
  %memberidx1.i273.i = getelementptr inbounds %Class, ptr %287, i64 0, i32 5
  %290 = load ptr, ptr %memberidx1.i273.i, align 8
  %memberidx2.i274.i = getelementptr inbounds %PropId, ptr %common.ret.op.i261.i, i64 0, i32 2
  %291 = load i64, ptr %memberidx2.i274.i, align 4
  %memberidx.i12.i275.i = getelementptr inbounds %Array_ClassMethod_, ptr %290, i64 0, i32 1
  %292 = load ptr, ptr %memberidx.i12.i275.i, align 8
  %293 = getelementptr inbounds ptr, ptr %292, i64 %291
  %294 = load ptr, ptr %293, align 8
  %memberidx3.i276.i = getelementptr inbounds %ClassMethod, ptr %294, i64 0, i32 4
  br label %get_class_prop_type.exit283.i

ifend.i282.i:                                     ; preds = %Map_string_PropId____getitem__.exit264.i
  %memberidx4.i278.i = getelementptr inbounds %Class, ptr %287, i64 0, i32 4
  %295 = load ptr, ptr %memberidx4.i278.i, align 8
  %memberidx5.i279.i = getelementptr inbounds %PropId, ptr %common.ret.op.i261.i, i64 0, i32 2
  %296 = load i64, ptr %memberidx5.i279.i, align 4
  %memberidx.i11.i280.i = getelementptr inbounds %Array_ClassField_, ptr %295, i64 0, i32 1
  %297 = load ptr, ptr %memberidx.i11.i280.i, align 8
  %298 = getelementptr inbounds ptr, ptr %297, i64 %296
  %299 = load ptr, ptr %298, align 8
  %memberidx6.i281.i = getelementptr inbounds %ClassField, ptr %299, i64 0, i32 4
  br label %get_class_prop_type.exit283.i

get_class_prop_type.exit283.i:                    ; preds = %ifend.i282.i, %if.entry.i277.i
  %common.ret.op.in.i271.i = phi ptr [ %memberidx3.i276.i, %if.entry.i277.i ], [ %memberidx6.i281.i, %ifend.i282.i ]
  %common.ret.op.i272.i = load ptr, ptr %common.ret.op.in.i271.i, align 8
  %memberidx53.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i272.i, i64 0, i32 2
  %300 = load ptr, ptr %memberidx53.i, align 8
  %301 = tail call ptr @malloc(i32 41)
  %302 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %302, align 4
  %memberidx.i.i284.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i284.i, align 4
  %memberidx1.i.i285.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i285.i, align 1
  %memberidx.i286.i = getelementptr inbounds %MemberExpression, ptr %302, i64 0, i32 4
  store ptr %242, ptr %memberidx.i286.i, align 8
  %memberidx1.i287.i = getelementptr inbounds %MemberExpression, ptr %302, i64 0, i32 5
  store ptr %common.ret.op.i261.i, ptr %memberidx1.i287.i, align 8
  %memberidx2.i288.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 3
  store ptr %common.ret.op.i272.i, ptr %memberidx2.i288.i, align 8
  %303 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %303, align 8
  %memberidx.i289.i = getelementptr inbounds %Array_Expression_, ptr %303, i64 0, i32 2
  store i64 0, ptr %memberidx.i289.i, align 4
  %memberidx1.i290.i = getelementptr inbounds %Array_Expression_, ptr %303, i64 0, i32 3
  store i64 8, ptr %memberidx1.i290.i, align 4
  %memberidx2.i291.i = getelementptr inbounds %Array_Expression_, ptr %303, i64 0, i32 1
  %304 = tail call ptr @malloc(i32 64)
  store ptr %304, ptr %memberidx2.i291.i, align 8
  store i64 0, ptr %memberidx.i289.i, align 4
  store i64 8, ptr %301, align 4
  %memberidx.i.i292.i = getelementptr inbounds %Expression, ptr %301, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i292.i, align 4
  %memberidx1.i.i293.i = getelementptr inbounds %Expression, ptr %301, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i293.i, align 1
  %memberidx.i294.i = getelementptr inbounds %CallExpression, ptr %301, i64 0, i32 4
  store ptr %302, ptr %memberidx.i294.i, align 8
  %memberidx1.i295.i = getelementptr inbounds %CallExpression, ptr %301, i64 0, i32 5
  store ptr %303, ptr %memberidx1.i295.i, align 8
  %memberidx2.i296.i = getelementptr inbounds %Expression, ptr %301, i64 0, i32 3
  store ptr %300, ptr %memberidx2.i296.i, align 8
  %305 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %249, ptr nonnull %301, ptr %300)
  %memberidx56.i = getelementptr inbounds %Var, ptr %305, i64 0, i32 1
  %306 = load ptr, ptr %memberidx56.i, align 8
  %307 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %307, align 4
  %memberidx.i297.i = getelementptr inbounds %VarDeclaration, ptr %307, i64 0, i32 2
  store ptr %306, ptr %memberidx.i297.i, align 8
  %memberidx1.i298.i = getelementptr inbounds %VarDeclaration, ptr %307, i64 0, i32 1
  store ptr %249, ptr %memberidx1.i298.i, align 8
  %memberidx2.i299.i = getelementptr inbounds %VarDeclaration, ptr %307, i64 0, i32 3
  store i1 false, ptr %memberidx2.i299.i, align 1
  store ptr %307, ptr %memberidx1.i.i81, align 8
  %308 = tail call ptr @malloc(i32 49)
  %309 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %309, align 4
  %memberidx.i.i300.i = getelementptr inbounds %Expression, ptr %309, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i300.i, align 4
  %memberidx1.i.i301.i = getelementptr inbounds %Expression, ptr %309, i64 0, i32 1
  %memberidx.i302.i = getelementptr inbounds %VarAccessExpression, ptr %309, i64 0, i32 4
  store ptr %306, ptr %memberidx.i302.i, align 8
  %memberidx1.i303.i = getelementptr inbounds %Expression, ptr %309, i64 0, i32 3
  store ptr %300, ptr %memberidx1.i303.i, align 8
  %310 = load i64, ptr %306, align 4
  %311 = icmp eq i64 %310, 2
  store i1 %311, ptr %memberidx1.i.i301.i, align 1
  store i64 8, ptr %308, align 4
  %memberidx.i.i305.i = getelementptr inbounds %Expression, ptr %308, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i305.i, align 4
  %memberidx1.i.i306.i = getelementptr inbounds %Expression, ptr %308, i64 0, i32 1
  %memberidx.i307.i = getelementptr inbounds %BinaryExpression, ptr %308, i64 0, i32 4
  store ptr %309, ptr %memberidx.i307.i, align 8
  %memberidx1.i308.i = getelementptr inbounds %BinaryExpression, ptr %308, i64 0, i32 5
  store i64 19, ptr %memberidx1.i308.i, align 4
  %memberidx2.i309.i = getelementptr inbounds %BinaryExpression, ptr %308, i64 0, i32 6
  store ptr %301, ptr %memberidx2.i309.i, align 8
  %memberidx3.i310.i = getelementptr inbounds %Expression, ptr %308, i64 0, i32 3
  store ptr %300, ptr %memberidx3.i310.i, align 8
  store i1 false, ptr %memberidx1.i.i306.i, align 1
  br label %ifend.i92.sink.split

ifend61.i:                                        ; preds = %ifend.i92
  store i1 true, ptr %memberidx2.i, align 1
  %memberidx63.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 5
  %memberidx64.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 8
  %312 = load ptr, ptr %memberidx64.i, align 8
  %313 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %312, ptr nonnull %27, i1 false)
  store ptr %313, ptr %memberidx63.i, align 8
  store i1 %54, ptr %memberidx2.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %2
  %memberidx.i77 = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 2
  %314 = load ptr, ptr %memberidx.i77, align 8
  %315 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %315, align 4
  %316 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %315, ptr %314)
  %memberidx.i.i104 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %317 = load ptr, ptr %memberidx.i.i104, align 8
  %memberidx1.i.i105 = getelementptr inbounds %Compiler, ptr %317, i64 0, i32 6
  %318 = load ptr, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %Array_FloError_, ptr %318, i64 0, i32 2
  %319 = load i64, ptr %memberidx2.i.i106, align 4
  %320 = icmp sgt i64 %319, 0
  br i1 %320, label %TypeChecker_check_condition.exit, label %ifend.i109

ifend.i109:                                       ; preds = %if.entry14
  %memberidx.i108 = getelementptr inbounds %Expression, ptr %316, i64 0, i32 3
  %321 = load ptr, ptr %memberidx.i108, align 8
  %322 = load i64, ptr %321, align 4
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %TypeChecker_check_condition.exit, label %true_block.i115

true_block.i115:                                  ; preds = %ifend.i109
  %324 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %324, align 4
  %325 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %325, align 4
  %memberidx.i.i.i.i110 = getelementptr inbounds %Expression, ptr %325, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i110, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %325, i64 0, i32 1
  %memberidx.i.i.i111 = getelementptr inbounds %TypeCastExpression, ptr %325, i64 0, i32 4
  store ptr %316, ptr %memberidx.i.i.i111, align 8
  %memberidx1.i.i.i112 = getelementptr inbounds %Expression, ptr %325, i64 0, i32 3
  store ptr %324, ptr %memberidx1.i.i.i112, align 8
  %memberidx3.i.i.i114 = getelementptr inbounds %Expression, ptr %316, i64 0, i32 1
  %326 = load i1, ptr %memberidx3.i.i.i114, align 1
  store i1 %326, ptr %memberidx1.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i109, %if.entry14, %true_block.i115
  %common.ret.op.i107 = phi ptr [ null, %if.entry14 ], [ %325, %true_block.i115 ], [ %316, %ifend.i109 ]
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %327 = load i1, ptr %memberidx1.i, align 1
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx3.i = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 3
  %328 = load ptr, ptr %memberidx3.i, align 8
  %329 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %328, ptr null, i1 false)
  store i1 %327, ptr %memberidx1.i, align 1
  %330 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %330, align 4
  %memberidx.i.i78 = getelementptr inbounds %WhileStatement, ptr %330, i64 0, i32 1
  store ptr %common.ret.op.i107, ptr %memberidx.i.i78, align 8
  %memberidx1.i.i79 = getelementptr inbounds %WhileStatement, ptr %330, i64 0, i32 2
  store ptr %329, ptr %memberidx1.i.i79, align 8
  br label %common.ret

if.entry18:                                       ; preds = %2
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %331 = load i1, ptr %memberidx.i, align 1
  br i1 %331, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry18
  %332 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %332, ptr noundef nonnull align 8 dereferenceable(32) @240, i64 32, i1 false)
  %333 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %333, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %333, i64 0, i32 1
  store ptr %332, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %333, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %333, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i.i, align 4
  %334 = load ptr, ptr %1, align 8
  %memberidx.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %335 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Compiler, ptr %335, i64 0, i32 6
  %336 = load ptr, ptr %memberidx1.i.i, align 8
  %337 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %337, align 4
  %memberidx1.i.i3.i = getelementptr inbounds %FloError, ptr %337, i64 0, i32 2
  store ptr %334, ptr %memberidx1.i.i3.i, align 8
  %memberidx2.i.i4.i = getelementptr inbounds %FloError, ptr %337, i64 0, i32 1
  store ptr %333, ptr %memberidx2.i.i4.i, align 8
  %memberidx.i.i5.i = getelementptr inbounds %Array_FloError_, ptr %336, i64 0, i32 2
  %338 = load i64, ptr %memberidx.i.i5.i, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %336, i64 0, i32 3
  %339 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %338, %339
  br i1 %.not.i.i.i, label %if.entry.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry.i.TypeChecker_error.exit.i_crit_edge:    ; preds = %if.entry.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %336, i64 0, i32 1
  %.pre186 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i
  %340 = shl nuw i64 %339, 1
  store i64 %340, ptr %memberidx1.i2.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %336, i64 0, i32 1
  %341 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %342 = shl i64 %339, 4
  %343 = tail call ptr @realloc(ptr %341, i64 %342)
  store ptr %343, ptr %memberidx2.i.i.i.i, align 8
  %.pre185 = load i64, ptr %memberidx.i.i5.i, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %344 = phi ptr [ %343, %if.entry.i.i.i ], [ %.pre186, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %345 = phi i64 [ %.pre185, %if.entry.i.i.i ], [ %338, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %346 = add nsw i64 %345, 1
  store i64 %346, ptr %memberidx.i.i5.i, align 4
  %347 = getelementptr inbounds ptr, ptr %344, i64 %345
  store ptr %337, ptr %347, align 8
  br label %common.ret

ifend.i:                                          ; preds = %if.entry18
  %348 = tail call ptr @malloc(i32 8)
  store i64 5, ptr %348, align 4
  br label %common.ret

if.entry22:                                       ; preds = %2
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %349 = load i1, ptr %memberidx.i58, align 1
  br i1 %349, label %ifend.i76, label %if.entry.i70

if.entry.i70:                                     ; preds = %if.entry22
  %350 = tail call ptr @malloc(i32 29)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %350, ptr noundef nonnull align 8 dereferenceable(29) @239, i64 29, i1 false)
  %351 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %351, align 8
  %memberidx.i.i.i60 = getelementptr inbounds %string, ptr %351, i64 0, i32 1
  store ptr %350, ptr %memberidx.i.i.i60, align 8
  %memberidx1.i.i.i61 = getelementptr inbounds %string, ptr %351, i64 0, i32 2
  store i64 29, ptr %memberidx1.i.i.i61, align 4
  %memberidx2.i.i.i62 = getelementptr inbounds %string, ptr %351, i64 0, i32 3
  store i64 29, ptr %memberidx2.i.i.i62, align 4
  %352 = load ptr, ptr %1, align 8
  %memberidx.i.i63 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %353 = load ptr, ptr %memberidx.i.i63, align 8
  %memberidx1.i.i64 = getelementptr inbounds %Compiler, ptr %353, i64 0, i32 6
  %354 = load ptr, ptr %memberidx1.i.i64, align 8
  %355 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %355, align 4
  %memberidx1.i.i3.i65 = getelementptr inbounds %FloError, ptr %355, i64 0, i32 2
  store ptr %352, ptr %memberidx1.i.i3.i65, align 8
  %memberidx2.i.i4.i66 = getelementptr inbounds %FloError, ptr %355, i64 0, i32 1
  store ptr %351, ptr %memberidx2.i.i4.i66, align 8
  %memberidx.i.i5.i67 = getelementptr inbounds %Array_FloError_, ptr %354, i64 0, i32 2
  %356 = load i64, ptr %memberidx.i.i5.i67, align 4
  %memberidx1.i2.i.i68 = getelementptr inbounds %Array_FloError_, ptr %354, i64 0, i32 3
  %357 = load i64, ptr %memberidx1.i2.i.i68, align 4
  %.not.i.i.i69 = icmp slt i64 %356, %357
  br i1 %.not.i.i.i69, label %if.entry.i70.TypeChecker_error.exit.i75_crit_edge, label %if.entry.i.i.i73

if.entry.i70.TypeChecker_error.exit.i75_crit_edge: ; preds = %if.entry.i70
  %memberidx4.i.i.i74.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %354, i64 0, i32 1
  %.pre184 = load ptr, ptr %memberidx4.i.i.i74.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i75

if.entry.i.i.i73:                                 ; preds = %if.entry.i70
  %358 = shl nuw i64 %357, 1
  store i64 %358, ptr %memberidx1.i2.i.i68, align 4
  %memberidx2.i.i.i.i72 = getelementptr inbounds %Array_FloError_, ptr %354, i64 0, i32 1
  %359 = load ptr, ptr %memberidx2.i.i.i.i72, align 8
  %360 = shl i64 %357, 4
  %361 = tail call ptr @realloc(ptr %359, i64 %360)
  store ptr %361, ptr %memberidx2.i.i.i.i72, align 8
  %.pre = load i64, ptr %memberidx.i.i5.i67, align 4
  br label %TypeChecker_error.exit.i75

TypeChecker_error.exit.i75:                       ; preds = %if.entry.i70.TypeChecker_error.exit.i75_crit_edge, %if.entry.i.i.i73
  %362 = phi ptr [ %361, %if.entry.i.i.i73 ], [ %.pre184, %if.entry.i70.TypeChecker_error.exit.i75_crit_edge ]
  %363 = phi i64 [ %.pre, %if.entry.i.i.i73 ], [ %356, %if.entry.i70.TypeChecker_error.exit.i75_crit_edge ]
  %364 = add nsw i64 %363, 1
  store i64 %364, ptr %memberidx.i.i5.i67, align 4
  %365 = getelementptr inbounds ptr, ptr %362, i64 %363
  store ptr %355, ptr %365, align 8
  br label %common.ret

ifend.i76:                                        ; preds = %if.entry22
  %366 = tail call ptr @malloc(i32 8)
  store i64 6, ptr %366, align 4
  br label %common.ret

if.entry26:                                       ; preds = %2
  %367 = tail call fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry30:                                       ; preds = %2
  %368 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %368, align 4
  %369 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %368, ptr nonnull %1)
  br label %common.ret
}

define internal fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry27, %3
  %accumulator.tr.ph = phi i1 [ %36, %if.entry27 ], [ true, %3 ]
  %.tr202.ph = phi ptr [ %34, %if.entry27 ], [ %1, %3 ]
  %.tr203.ph = phi ptr [ %35, %if.entry27 ], [ %2, %3 ]
  br label %tailrecurse.outer208

tailrecurse.outer208:                             ; preds = %tailrecurse.outer, %if.entry56
  %.tr202.ph209 = phi ptr [ %.tr202.ph, %tailrecurse.outer ], [ %54, %if.entry56 ]
  %.tr203.ph210 = phi ptr [ %.tr203.ph, %tailrecurse.outer ], [ %55, %if.entry56 ]
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %.tr202.ph209, i64 0, i32 1
  %memberidx15 = getelementptr inbounds %FunctionType, ptr %.tr202.ph209, i64 0, i32 2
  %.pre = load i64, ptr %.tr202.ph209, align 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer208, %ifend75
  %4 = phi i64 [ 11, %ifend75 ], [ %.pre, %tailrecurse.outer208 ]
  %.tr203 = phi ptr [ %78, %ifend75 ], [ %.tr203.ph210, %tailrecurse.outer208 ]
  %5 = load i64, ptr %.tr203, align 4
  %.not = icmp eq i64 %4, %5
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %ifend75, %if.entry62, %if.entry35, %ifend13, %if.entry4, %tailrecurse, %for.body, %for.body47, %for.body106, %if.entry89, %if.entry116, %ifend91, %ifend96, %ifend.i.i, %if.entry83
  %common.ret.op = phi i1 [ %81, %if.entry83 ], [ false, %ifend.i.i ], [ false, %ifend96 ], [ true, %ifend91 ], [ %not., %if.entry116 ], [ false, %if.entry89 ], [ false, %for.body106 ], [ false, %for.body47 ], [ false, %for.body ], [ false, %tailrecurse ], [ false, %if.entry4 ], [ false, %ifend13 ], [ false, %if.entry35 ], [ true, %if.entry62 ], [ false, %ifend75 ]
  %accumulator.ret.tr = and i1 %accumulator.tr.ph, %common.ret.op
  ret i1 %accumulator.ret.tr

ifend:                                            ; preds = %tailrecurse
  %6 = icmp eq i64 %4, 16
  br i1 %6, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %7 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Type_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx8, align 4
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %.tr203, i64 0, i32 1
  %9 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Type_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx10, align 4
  %.not189 = icmp eq i64 %8, %10
  br i1 %.not189, label %ifend13, label %common.ret

ifend6thread-pre-split:                           ; preds = %for.cond, %for.cond.preheader
  %.pr = load i64, ptr %.tr202.ph209, align 4
  br label %ifend6

ifend6:                                           ; preds = %ifend6thread-pre-split, %ifend
  %11 = phi i64 [ %.pr, %ifend6thread-pre-split ], [ %4, %ifend ]
  switch i64 %11, label %ifend37 [
    i64 14, label %if.entry27
    i64 15, label %if.entry35
  ]

ifend13:                                          ; preds = %if.entry4
  %memberidx14 = getelementptr inbounds %FunctionType, ptr %.tr203, i64 0, i32 2
  %12 = load ptr, ptr %memberidx14, align 8
  %13 = load ptr, ptr %memberidx15, align 8
  %14 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %12, ptr %13)
  br i1 %14, label %for.cond.preheader, label %common.ret

for.cond.preheader:                               ; preds = %ifend13
  %15 = load ptr, ptr %memberidx7, align 8
  %memberidx20235 = getelementptr inbounds %Array_Type_, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx20235, align 4
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %for.body, label %ifend6thread-pre-split

for.cond:                                         ; preds = %for.body
  %18 = add nuw nsw i64 %i.0236, 1
  %19 = load ptr, ptr %memberidx7, align 8
  %memberidx20 = getelementptr inbounds %Array_Type_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx20, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %for.body, label %ifend6thread-pre-split

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %22 = phi ptr [ %19, %for.cond ], [ %15, %for.cond.preheader ]
  %i.0236 = phi i64 [ %18, %for.cond ], [ 0, %for.cond.preheader ]
  %memberidx.i190 = getelementptr inbounds %Array_Type_, ptr %22, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i190, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %i.0236
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %memberidx9, align 8
  %memberidx.i191 = getelementptr inbounds %Array_Type_, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i191, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %i.0236
  %29 = load ptr, ptr %28, align 8
  %30 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %25, ptr %29)
  br i1 %30, label %for.cond, label %common.ret

if.entry27:                                       ; preds = %ifend6
  %31 = load i64, ptr %memberidx15, align 4
  %memberidx31 = getelementptr inbounds %ArrayType, ptr %.tr203, i64 0, i32 2
  %32 = load i64, ptr %memberidx31, align 4
  %33 = icmp eq i64 %31, %32
  %34 = load ptr, ptr %memberidx7, align 8
  %memberidx33 = getelementptr inbounds %ArrayType, ptr %.tr203, i64 0, i32 1
  %35 = load ptr, ptr %memberidx33, align 8
  %36 = and i1 %accumulator.tr.ph, %33
  br label %tailrecurse.outer

if.entry35:                                       ; preds = %ifend6
  %37 = load ptr, ptr %memberidx7, align 8
  %memberidx39 = getelementptr inbounds %Array_Type_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx39, align 4
  %memberidx40 = getelementptr inbounds %TupleType, ptr %.tr203, i64 0, i32 1
  %39 = load ptr, ptr %memberidx40, align 8
  %memberidx41 = getelementptr inbounds %Array_Type_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx41, align 4
  %.not188 = icmp eq i64 %38, %40
  br i1 %.not188, label %for.cond46.preheader, label %common.ret

for.cond46.preheader:                             ; preds = %if.entry35
  %41 = icmp sgt i64 %38, 0
  br i1 %41, label %for.body47, label %ifend91

ifend37.loopexit:                                 ; preds = %for.cond46
  %.pre264 = load i64, ptr %.tr202.ph209, align 4
  br label %ifend37

ifend37:                                          ; preds = %ifend37.loopexit, %ifend6
  %42 = phi i64 [ %.pre264, %ifend37.loopexit ], [ %11, %ifend6 ]
  switch i64 %42, label %ifend91 [
    i64 13, label %if.entry56
    i64 11, label %if.entry62
    i64 12, label %if.entry83
    i64 20, label %if.entry89
  ]

for.cond46:                                       ; preds = %for.body47
  %43 = add nuw nsw i64 %i1.0237, 1
  %44 = icmp slt i64 %43, %38
  br i1 %44, label %for.body47, label %ifend37.loopexit

for.body47:                                       ; preds = %for.cond46.preheader, %for.cond46
  %i1.0237 = phi i64 [ %43, %for.cond46 ], [ 0, %for.cond46.preheader ]
  %45 = load ptr, ptr %memberidx7, align 8
  %memberidx.i193 = getelementptr inbounds %Array_Type_, ptr %45, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i193, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %i1.0237
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %memberidx40, align 8
  %memberidx.i194 = getelementptr inbounds %Array_Type_, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i194, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %i1.0237
  %52 = load ptr, ptr %51, align 8
  %53 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %48, ptr %52)
  br i1 %53, label %for.cond46, label %common.ret

if.entry56:                                       ; preds = %ifend37
  %54 = load ptr, ptr %memberidx7, align 8
  %memberidx60 = getelementptr inbounds %PointerType, ptr %.tr203, i64 0, i32 1
  %55 = load ptr, ptr %memberidx60, align 8
  br label %tailrecurse.outer208

if.entry62:                                       ; preds = %ifend37
  %56 = load ptr, ptr %memberidx7, align 8
  %memberidx66 = getelementptr inbounds %ObjectType, ptr %.tr203, i64 0, i32 1
  %57 = load ptr, ptr %memberidx66, align 8
  %memberidx67 = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx67, align 4
  %memberidx68 = getelementptr inbounds %TypeId, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx68, align 4
  %60 = icmp eq i64 %58, %59
  %61 = load i64, ptr %56, align 4
  %62 = load i64, ptr %57, align 4
  %63 = icmp eq i64 %61, %62
  %64 = and i1 %60, %63
  %memberidx71 = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %65 = load i64, ptr %memberidx71, align 4
  %memberidx72 = getelementptr inbounds %TypeId, ptr %57, i64 0, i32 2
  %66 = load i64, ptr %memberidx72, align 4
  %67 = icmp eq i64 %65, %66
  %68 = and i1 %64, %67
  br i1 %68, label %common.ret, label %ifend75

ifend75:                                          ; preds = %if.entry62
  %69 = load ptr, ptr %0, align 8
  %memberidx.i195 = getelementptr inbounds %Program, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i195, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %62
  %73 = load ptr, ptr %72, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %73, i64 0, i32 3
  %74 = load ptr, ptr %memberidx2.i, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_Class_, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i5.i, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %66
  %77 = load ptr, ptr %76, align 8
  %memberidx77 = getelementptr inbounds %Class, ptr %77, i64 0, i32 2
  %78 = load ptr, ptr %memberidx77, align 8
  %.not187 = icmp eq ptr %78, null
  br i1 %.not187, label %common.ret, label %tailrecurse

if.entry83:                                       ; preds = %ifend37
  %79 = load ptr, ptr %memberidx7, align 8
  %memberidx87 = getelementptr inbounds %EnumType, ptr %.tr203, i64 0, i32 1
  %80 = load ptr, ptr %memberidx87, align 8
  %81 = icmp eq ptr %79, %80
  br label %common.ret

if.entry89:                                       ; preds = %ifend37
  %82 = load ptr, ptr %memberidx7, align 8
  %memberidx93 = getelementptr inbounds %GenericType, ptr %.tr203, i64 0, i32 1
  %83 = load ptr, ptr %memberidx93, align 8
  %memberidx.i.i196 = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i196, align 4
  %memberidx1.i.i = getelementptr inbounds %string, ptr %83, i64 0, i32 2
  %85 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %84, %85
  br i1 %.not.i.i, label %ifend.i.i, label %common.ret

ifend.i.i:                                        ; preds = %if.entry89
  %memberidx2.i.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  %86 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %string, ptr %83, i64 0, i32 1
  %87 = load ptr, ptr %memberidx3.i.i, align 8
  %88 = tail call i64 @memcmp(ptr %86, ptr %87, i64 %84)
  %.not201 = icmp eq i64 %88, 0
  br i1 %.not201, label %ifend96, label %common.ret

ifend91:                                          ; preds = %for.cond46.preheader, %ifend37, %for.cond105, %for.cond105.preheader
  %89 = load i64, ptr %.tr202.ph209, align 4
  %90 = add i64 %89, -1
  %91 = icmp ult i64 %90, 7
  br i1 %91, label %if.entry116, label %common.ret

ifend96:                                          ; preds = %ifend.i.i
  %92 = load ptr, ptr %memberidx15, align 8
  %memberidx98 = getelementptr inbounds %Array_Type_, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx98, align 4
  %memberidx99 = getelementptr inbounds %GenericType, ptr %.tr203, i64 0, i32 2
  %94 = load ptr, ptr %memberidx99, align 8
  %memberidx100 = getelementptr inbounds %Array_Type_, ptr %94, i64 0, i32 2
  %95 = load i64, ptr %memberidx100, align 4
  %.not186 = icmp eq i64 %93, %95
  br i1 %.not186, label %for.cond105.preheader, label %common.ret

for.cond105.preheader:                            ; preds = %ifend96
  %96 = icmp sgt i64 %93, 0
  br i1 %96, label %for.body106, label %ifend91

for.cond105:                                      ; preds = %for.body106
  %97 = add nuw nsw i64 %i2.0234, 1
  %98 = load ptr, ptr %memberidx15, align 8
  %memberidx110 = getelementptr inbounds %Array_Type_, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx110, align 4
  %100 = icmp slt i64 %97, %99
  br i1 %100, label %for.body106, label %ifend91

for.body106:                                      ; preds = %for.cond105.preheader, %for.cond105
  %101 = phi ptr [ %98, %for.cond105 ], [ %92, %for.cond105.preheader ]
  %i2.0234 = phi i64 [ %97, %for.cond105 ], [ 0, %for.cond105.preheader ]
  %memberidx.i192 = getelementptr inbounds %Array_Type_, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i192, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %i2.0234
  %104 = load ptr, ptr %103, align 8
  %105 = load ptr, ptr %memberidx99, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %105, i64 0, i32 1
  %106 = load ptr, ptr %memberidx.i, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %i2.0234
  %108 = load ptr, ptr %107, align 8
  %109 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %104, ptr %108)
  br i1 %109, label %for.cond105, label %common.ret

if.entry116:                                      ; preds = %ifend91
  %110 = load i1, ptr %memberidx7, align 1
  %memberidx120 = getelementptr inbounds %IntType, ptr %.tr203, i64 0, i32 1
  %111 = load i1, ptr %memberidx120, align 1
  %112 = xor i1 %110, %111
  %not. = xor i1 %112, true
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_scope(ptr nocapture readonly %0, i64 %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i64 %1
  %7 = load ptr, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 64)
  %memberidx = getelementptr inbounds %Module, ptr %7, i64 0, i32 7
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = tail call ptr @malloc(i32 16)
  store i64 %1, ptr %11, align 4
  %memberidx1.i.i = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  store i64 %10, ptr %memberidx1.i.i, align 4
  store ptr %11, ptr %8, align 8
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call ptr @malloc(i32 2048)
  store ptr %13, ptr %12, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i16 = phi i64 [ 0, %2 ], [ %16, %for.body.i.i ]
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %i.0.i.i16
  store ptr null, ptr %15, align 8
  %16 = add nuw nsw i64 %i.0.i.i16, 1
  %17 = icmp ult i64 %i.0.i.i16, 255
  br i1 %17, label %for.body.i.i, label %Map_string_VarId__constructor.exit.i

Map_string_VarId__constructor.exit.i:             ; preds = %for.body.i.i
  %memberidx1.i8 = getelementptr inbounds %Scope, ptr %8, i64 0, i32 1
  %memberidx2.i18.i = getelementptr inbounds %Map_string_VarId_, ptr %12, i64 0, i32 1
  store i64 256, ptr %memberidx2.i18.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_VarId_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %12, ptr %memberidx1.i8, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = tail call ptr @malloc(i32 2048)
  store ptr %19, ptr %18, align 8
  br label %for.body.i21.i

for.body.i21.i:                                   ; preds = %Map_string_VarId__constructor.exit.i, %for.body.i21.i
  %i.0.i19.i15 = phi i64 [ 0, %Map_string_VarId__constructor.exit.i ], [ %22, %for.body.i21.i ]
  %20 = load ptr, ptr %18, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %i.0.i19.i15
  store ptr null, ptr %21, align 8
  %22 = add nuw nsw i64 %i.0.i19.i15, 1
  %23 = icmp ult i64 %i.0.i19.i15, 255
  br i1 %23, label %for.body.i21.i, label %Map_string_ClassId__constructor.exit.i

Map_string_ClassId__constructor.exit.i:           ; preds = %for.body.i21.i
  %memberidx2.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 2
  %memberidx2.i22.i = getelementptr inbounds %Map_string_ClassId_, ptr %18, i64 0, i32 1
  store i64 256, ptr %memberidx2.i22.i, align 4
  %memberidx3.i23.i = getelementptr inbounds %Map_string_ClassId_, ptr %18, i64 0, i32 2
  store i64 0, ptr %memberidx3.i23.i, align 4
  store ptr %18, ptr %memberidx2.i, align 8
  %24 = tail call ptr @malloc(i32 24)
  %25 = tail call ptr @malloc(i32 2048)
  store ptr %25, ptr %24, align 8
  br label %for.body.i26.i

for.body.i26.i:                                   ; preds = %Map_string_ClassId__constructor.exit.i, %for.body.i26.i
  %i.0.i24.i14 = phi i64 [ 0, %Map_string_ClassId__constructor.exit.i ], [ %28, %for.body.i26.i ]
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %i.0.i24.i14
  store ptr null, ptr %27, align 8
  %28 = add nuw nsw i64 %i.0.i24.i14, 1
  %29 = icmp ult i64 %i.0.i24.i14, 255
  br i1 %29, label %for.body.i26.i, label %Map_string_VarId__constructor.exit29.i

Map_string_VarId__constructor.exit29.i:           ; preds = %for.body.i26.i
  %memberidx3.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 3
  %memberidx2.i27.i = getelementptr inbounds %Map_string_VarId_, ptr %24, i64 0, i32 1
  store i64 256, ptr %memberidx2.i27.i, align 4
  %memberidx3.i28.i = getelementptr inbounds %Map_string_VarId_, ptr %24, i64 0, i32 2
  store i64 0, ptr %memberidx3.i28.i, align 4
  store ptr %24, ptr %memberidx3.i, align 8
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call ptr @malloc(i32 2048)
  store ptr %31, ptr %30, align 8
  br label %for.body.i32.i

for.body.i32.i:                                   ; preds = %Map_string_VarId__constructor.exit29.i, %for.body.i32.i
  %i.0.i30.i13 = phi i64 [ 0, %Map_string_VarId__constructor.exit29.i ], [ %34, %for.body.i32.i ]
  %32 = load ptr, ptr %30, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0.i30.i13
  store ptr null, ptr %33, align 8
  %34 = add nuw nsw i64 %i.0.i30.i13, 1
  %35 = icmp ult i64 %i.0.i30.i13, 255
  br i1 %35, label %for.body.i32.i, label %Map_string_EnumId__constructor.exit.i

Map_string_EnumId__constructor.exit.i:            ; preds = %for.body.i32.i
  %memberidx4.i9 = getelementptr inbounds %Scope, ptr %8, i64 0, i32 4
  %memberidx2.i33.i = getelementptr inbounds %Map_string_EnumId_, ptr %30, i64 0, i32 1
  store i64 256, ptr %memberidx2.i33.i, align 4
  %memberidx3.i34.i = getelementptr inbounds %Map_string_EnumId_, ptr %30, i64 0, i32 2
  store i64 0, ptr %memberidx3.i34.i, align 4
  store ptr %30, ptr %memberidx4.i9, align 8
  %36 = tail call ptr @malloc(i32 24)
  %37 = tail call ptr @malloc(i32 2048)
  store ptr %37, ptr %36, align 8
  br label %for.body.i37.i

for.body.i37.i:                                   ; preds = %Map_string_EnumId__constructor.exit.i, %for.body.i37.i
  %i.0.i35.i12 = phi i64 [ 0, %Map_string_EnumId__constructor.exit.i ], [ %40, %for.body.i37.i ]
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %i.0.i35.i12
  store ptr null, ptr %39, align 8
  %40 = add nuw nsw i64 %i.0.i35.i12, 1
  %41 = icmp ult i64 %i.0.i35.i12, 255
  br i1 %41, label %for.body.i37.i, label %Scope_constructor.exit

Scope_constructor.exit:                           ; preds = %for.body.i37.i
  %memberidx5.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 6
  %memberidx2.i38.i = getelementptr inbounds %Map_string_Type_, ptr %36, i64 0, i32 1
  store i64 256, ptr %memberidx2.i38.i, align 4
  %memberidx3.i39.i = getelementptr inbounds %Map_string_Type_, ptr %36, i64 0, i32 2
  store i64 0, ptr %memberidx3.i39.i, align 4
  store ptr %36, ptr %memberidx5.i, align 8
  %memberidx6.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 5
  store ptr null, ptr %memberidx6.i, align 8
  %memberidx7.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 7
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ScopeId_, ptr %42, align 8
  %memberidx.i.i10 = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i10, align 4
  %memberidx1.i17.i = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 3
  store i64 8, ptr %memberidx1.i17.i, align 4
  %memberidx2.i.i11 = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 1
  %43 = tail call ptr @malloc(i32 64)
  store ptr %43, ptr %memberidx2.i.i11, align 8
  store i64 0, ptr %memberidx.i.i10, align 4
  store ptr %42, ptr %memberidx7.i, align 8
  %44 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i6 = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i6, align 4
  %.not.i = icmp slt i64 %45, %46
  br i1 %.not.i, label %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, label %if.entry.i

Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge: ; preds = %Scope_constructor.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 1
  %.pre17 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Scope____sl__.exit

if.entry.i:                                       ; preds = %Scope_constructor.exit
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i6, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i, align 8
  %49 = shl i64 %46, 4
  %50 = tail call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i, align 4
  br label %Array_Scope____sl__.exit

Array_Scope____sl__.exit:                         ; preds = %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, %if.entry.i
  %51 = phi ptr [ %.pre17, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %50, %if.entry.i ]
  %52 = phi i64 [ %45, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i, align 4
  %54 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %8, ptr %54, align 8
  ret ptr %8
}

define internal fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %5)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend23, %ifend42, %TypeChecker_error.exit164, %if.entry28, %TypeChecker_error.exit133, %if.entry9, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %98, %if.entry9 ], [ null, %TypeChecker_error.exit133 ], [ %143, %if.entry28 ], [ null, %TypeChecker_error.exit164 ], [ %190, %ifend42 ], [ null, %ifend23 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %8 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %9 = load ptr, ptr %8, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %9, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr %10(ptr nonnull %8)
  %12 = alloca ptr, align 8
  %13 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @178, ptr %11)
  %14 = load ptr, ptr %12, align 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 %13, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 %13, ptr %memberidx2.i, align 4
  tail call void @free(ptr %11)
  %16 = load ptr, ptr %2, align 8
  %memberidx.i98 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i99, align 8
  %19 = call ptr @malloc(i32 24)
  store i64 4, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %20, %21
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %.pre201 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %22 = shl nuw i64 %21, 1
  store i64 %22, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %24 = shl i64 %21, 4
  %25 = call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i, align 8
  %.pre200 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %26 = phi ptr [ %.pre201, %if.entry.TypeChecker_error.exit_crit_edge ], [ %25, %if.entry.i.i ]
  %27 = phi i64 [ %20, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre200, %if.entry.i.i ]
  %28 = add nsw i64 %27, 1
  store i64 %28, ptr %memberidx.i.i, align 4
  %29 = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %19, ptr %29, align 8
  br label %common.ret

ifend:                                            ; preds = %4
  %30 = load ptr, ptr %0, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i183, %ifend
  %.tr11.i.in = phi ptr [ %memberidx4, %ifend ], [ %memberidx1.i182, %if.entry.i183 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %31 = load i64, ptr %.tr11.i, align 4
  switch i64 %31, label %get_class_from_type.exit [
    i64 20, label %if.entry.i183
    i64 11, label %if.entry3.i
  ]

if.entry.i183:                                    ; preds = %tailrecurse.i
  %memberidx1.i182 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i184 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %32 = load ptr, ptr %memberidx6.i184, align 8
  %memberidx.i.i185 = getelementptr inbounds %Program, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i185, align 8
  %34 = load i64, ptr %32, align 4
  %memberidx.i.i.i186 = getelementptr inbounds %Array_Module_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i.i186, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %memberidx2.i.i187 = getelementptr inbounds %Module, ptr %37, i64 0, i32 3
  %38 = load ptr, ptr %memberidx2.i.i187, align 8
  %memberidx3.i.i188 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 2
  %39 = load i64, ptr %memberidx3.i.i188, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i5.i.i, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i181 = phi ptr [ %42, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx5 = getelementptr inbounds %Class, ptr %common.ret.op.i181, i64 0, i32 6
  %43 = load ptr, ptr %memberidx5, align 8
  %44 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %6)
  %memberidx.i100 = getelementptr inbounds %Map_string_PropId_, ptr %43, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i100, align 4
  %46 = urem i64 %44, %45
  %47 = load ptr, ptr %43, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %.not.i = icmp eq ptr %49, null
  br i1 %.not.i, label %if.entry6, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %get_class_from_type.exit
  %memberidx1.i.i102 = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %50 = phi ptr [ %60, %else.i ], [ %47, %while.entry.i.preheader ]
  %51 = phi i64 [ %61, %else.i ], [ %45, %while.entry.i.preheader ]
  %52 = phi ptr [ %65, %else.i ], [ %49, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %63, %else.i ], [ %46, %while.entry.i.preheader ]
  %53 = load ptr, ptr %52, align 8
  %memberidx.i.i101 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %54 = load i64, ptr %memberidx.i.i101, align 4
  %55 = load i64, ptr %memberidx1.i.i102, align 4
  %.not.i.i103 = icmp eq i64 %54, %55
  br i1 %.not.i.i103, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i104 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i104, align 8
  %57 = load ptr, ptr %memberidx3.i.i, align 8
  %58 = tail call i64 @memcmp(ptr %56, ptr %57, i64 %54)
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i100, align 4
  %.pre192 = load ptr, ptr %43, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre193.pre = load ptr, ptr %43, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre193.pre, i64 %hash.0.i
  %.pre194.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre194.pre, null
  br i1 %.not25.i, label %if.entry6, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %60 = phi ptr [ %.pre192, %ifend.i.i.else.i_crit_edge ], [ %50, %while.entry.i ]
  %61 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %51, %while.entry.i ]
  %62 = add nuw i64 %hash.0.i, 1
  %63 = urem i64 %62, %61
  %64 = getelementptr inbounds ptr, ptr %60, i64 %63
  %65 = load ptr, ptr %64, align 8
  %.not26.i = icmp eq ptr %65, null
  br i1 %.not26.i, label %if.entry6, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre194.pre, i64 0, i32 1
  %66 = load ptr, ptr %memberidx11.i, align 8
  %67 = icmp eq ptr %66, null
  br i1 %67, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %68 = add i64 %5, -11
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %if.entry9, label %ifend11

ifend8:                                           ; preds = %Map_string_PropId____getitem__.exit
  %70 = load ptr, ptr %0, align 8
  %memberidx.i.i105 = getelementptr inbounds %PropId, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i105, align 8
  %memberidx.i.i.i106 = getelementptr inbounds %Program, ptr %70, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i.i.i106, align 8
  %73 = load i64, ptr %71, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %memberidx2.i.i.i107 = getelementptr inbounds %Module, ptr %76, i64 0, i32 3
  %77 = load ptr, ptr %memberidx2.i.i.i107, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %71, i64 0, i32 2
  %78 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %82 = load i64, ptr %66, align 4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend8
  %memberidx1.i109 = getelementptr inbounds %Class, ptr %81, i64 0, i32 5
  %84 = load ptr, ptr %memberidx1.i109, align 8
  %memberidx2.i110 = getelementptr inbounds %PropId, ptr %66, i64 0, i32 2
  %85 = load i64, ptr %memberidx2.i110, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %84, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i12.i, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %88, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend8
  %memberidx4.i = getelementptr inbounds %Class, ptr %81, i64 0, i32 4
  %89 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %66, i64 0, i32 2
  %90 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %89, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i11.i, align 8
  %92 = getelementptr inbounds ptr, ptr %91, i64 %90
  %93 = load ptr, ptr %92, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %93, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i108 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx20 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i108, i64 0, i32 1
  %94 = load ptr, ptr %memberidx20, align 8
  %memberidx.i111 = getelementptr inbounds %Array_Type_, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i111, align 8
  %96 = load ptr, ptr %95, align 8
  %97 = icmp eq ptr %3, null
  br i1 %97, label %if.entry21, label %ifend23

if.entry9:                                        ; preds = %if.entry6
  %98 = tail call ptr @malloc(i32 49)
  %99 = load ptr, ptr %memberidx4, align 8
  %memberidx13 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %100 = load ptr, ptr %memberidx13, align 8
  %101 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %99, ptr %100)
  %102 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %102, align 4
  store i64 8, ptr %98, align 4
  %memberidx.i.i112 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i112, align 4
  %memberidx1.i.i113 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 1
  %memberidx.i114 = getelementptr inbounds %BinaryExpression, ptr %98, i64 0, i32 4
  store ptr %1, ptr %memberidx.i114, align 8
  %memberidx1.i115 = getelementptr inbounds %BinaryExpression, ptr %98, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i115, align 4
  %memberidx2.i116 = getelementptr inbounds %BinaryExpression, ptr %98, i64 0, i32 6
  store ptr %101, ptr %memberidx2.i116, align 8
  %memberidx3.i117 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 3
  store ptr %102, ptr %memberidx3.i117, align 8
  store i1 false, ptr %memberidx1.i.i113, align 1
  br label %common.ret

ifend11:                                          ; preds = %if.entry6
  %103 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %104 = load ptr, ptr %103, align 8
  %memberidx14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %104, i64 0, i32 5
  %105 = load ptr, ptr %memberidx14, align 8
  %106 = tail call ptr %105(ptr nonnull %103)
  %memberidx15 = getelementptr inbounds %Class, ptr %common.ret.op.i181, i64 0, i32 1
  %107 = load ptr, ptr %memberidx15, align 8
  %108 = load ptr, ptr %107, align 8
  %memberidx16 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %108, i64 0, i32 5
  %109 = load ptr, ptr %memberidx16, align 8
  %110 = tail call ptr %109(ptr nonnull %107)
  %111 = load ptr, ptr %6, align 8
  %memberidx17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %111, i64 0, i32 5
  %112 = load ptr, ptr %memberidx17, align 8
  %113 = tail call ptr %112(ptr nonnull %6)
  %114 = alloca ptr, align 8
  %115 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %114, ptr nonnull @179, ptr %106, ptr %110, ptr %113)
  %116 = load ptr, ptr %114, align 8
  %117 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %117, align 8
  %memberidx.i119 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  store ptr %116, ptr %memberidx.i119, align 8
  %memberidx1.i120 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  store i64 %115, ptr %memberidx1.i120, align 4
  %memberidx2.i121 = getelementptr inbounds %string, ptr %117, i64 0, i32 3
  store i64 %115, ptr %memberidx2.i121, align 4
  tail call void @free(ptr %106)
  tail call void @free(ptr %110)
  tail call void @free(ptr %113)
  %118 = load ptr, ptr %2, align 8
  %memberidx.i122 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %119 = load ptr, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %Compiler, ptr %119, i64 0, i32 6
  %120 = load ptr, ptr %memberidx1.i123, align 8
  %121 = call ptr @malloc(i32 24)
  store i64 1, ptr %121, align 4
  %memberidx1.i.i124 = getelementptr inbounds %FloError, ptr %121, i64 0, i32 2
  store ptr %118, ptr %memberidx1.i.i124, align 8
  %memberidx2.i.i125 = getelementptr inbounds %FloError, ptr %121, i64 0, i32 1
  store ptr %117, ptr %memberidx2.i.i125, align 8
  %memberidx.i.i126 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 2
  %122 = load i64, ptr %memberidx.i.i126, align 4
  %memberidx1.i2.i127 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 3
  %123 = load i64, ptr %memberidx1.i2.i127, align 4
  %.not.i.i128 = icmp slt i64 %122, %123
  br i1 %.not.i.i128, label %ifend11.TypeChecker_error.exit133_crit_edge, label %if.entry.i.i131

ifend11.TypeChecker_error.exit133_crit_edge:      ; preds = %ifend11
  %memberidx4.i.i132.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %.pre199 = load ptr, ptr %memberidx4.i.i132.phi.trans.insert, align 8
  br label %TypeChecker_error.exit133

if.entry.i.i131:                                  ; preds = %ifend11
  %124 = shl nuw i64 %123, 1
  store i64 %124, ptr %memberidx1.i2.i127, align 4
  %memberidx2.i.i.i130 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %125 = load ptr, ptr %memberidx2.i.i.i130, align 8
  %126 = shl i64 %123, 4
  %127 = call ptr @realloc(ptr %125, i64 %126)
  store ptr %127, ptr %memberidx2.i.i.i130, align 8
  %.pre198 = load i64, ptr %memberidx.i.i126, align 4
  br label %TypeChecker_error.exit133

TypeChecker_error.exit133:                        ; preds = %ifend11.TypeChecker_error.exit133_crit_edge, %if.entry.i.i131
  %128 = phi ptr [ %.pre199, %ifend11.TypeChecker_error.exit133_crit_edge ], [ %127, %if.entry.i.i131 ]
  %129 = phi i64 [ %122, %ifend11.TypeChecker_error.exit133_crit_edge ], [ %.pre198, %if.entry.i.i131 ]
  %130 = add nsw i64 %129, 1
  store i64 %130, ptr %memberidx.i.i126, align 4
  %131 = getelementptr inbounds ptr, ptr %128, i64 %129
  store ptr %121, ptr %131, align 8
  br label %common.ret

if.entry21:                                       ; preds = %get_class_prop_type.exit
  %memberidx24 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %132 = load ptr, ptr %memberidx24, align 8
  %133 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %96, ptr %132)
  br label %ifend23

ifend23:                                          ; preds = %get_class_prop_type.exit, %if.entry21
  %right.0 = phi ptr [ %133, %if.entry21 ], [ %3, %get_class_prop_type.exit ]
  %memberidx.i134 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %134 = load ptr, ptr %memberidx.i134, align 8
  %memberidx1.i135 = getelementptr inbounds %Compiler, ptr %134, i64 0, i32 6
  %135 = load ptr, ptr %memberidx1.i135, align 8
  %memberidx2.i136 = getelementptr inbounds %Array_FloError_, ptr %135, i64 0, i32 2
  %136 = load i64, ptr %memberidx2.i136, align 4
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend23
  %memberidx.i137 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 2
  %138 = load i64, ptr %memberidx.i137, align 4
  %139 = icmp eq i64 %138, 5
  %140 = add i64 %5, -11
  %141 = icmp ult i64 %140, 2
  %142 = and i1 %141, %139
  br i1 %142, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend27
  %143 = tail call ptr @malloc(i32 49)
  %144 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %144, align 4
  store i64 8, ptr %143, align 4
  %memberidx.i.i138 = getelementptr inbounds %Expression, ptr %143, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i138, align 4
  %memberidx1.i.i139 = getelementptr inbounds %Expression, ptr %143, i64 0, i32 1
  %memberidx.i140 = getelementptr inbounds %BinaryExpression, ptr %143, i64 0, i32 4
  store ptr %1, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %BinaryExpression, ptr %143, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i141, align 4
  %memberidx2.i142 = getelementptr inbounds %BinaryExpression, ptr %143, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i142, align 8
  %memberidx3.i143 = getelementptr inbounds %Expression, ptr %143, i64 0, i32 3
  store ptr %144, ptr %memberidx3.i143, align 8
  store i1 false, ptr %memberidx1.i.i139, align 1
  br label %common.ret

ifend30:                                          ; preds = %ifend27
  %145 = icmp eq i64 %5, 18
  %memberidx34 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %146 = load ptr, ptr %memberidx34, align 8
  br i1 %145, label %if.entry31, label %ifend33

if.entry31:                                       ; preds = %ifend30
  %147 = load i64, ptr %146, align 4
  %148 = add i64 %147, -1
  %149 = icmp ult i64 %148, 7
  %150 = load i64, ptr %96, align 4
  %151 = add i64 %150, -1
  %152 = icmp ult i64 %151, 7
  %153 = and i1 %149, %152
  br i1 %153, label %if.entry35, label %ifend33

ifend33:                                          ; preds = %ifend30, %if.entry35, %if.entry31
  %154 = phi ptr [ %ternary.i, %if.entry35 ], [ %146, %if.entry31 ], [ %146, %ifend30 ]
  %right.1 = phi ptr [ %157, %if.entry35 ], [ %right.0, %if.entry31 ], [ %right.0, %ifend30 ]
  %155 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %96, ptr %154)
  br i1 %155, label %ifend42, label %if.entry40

if.entry35:                                       ; preds = %if.entry31
  %156 = icmp ugt i64 %147, %150
  %ternary.i = select i1 %156, ptr %146, ptr %96
  %157 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %157, align 4
  %memberidx.i.i.i145 = getelementptr inbounds %Expression, ptr %157, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i145, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %157, i64 0, i32 1
  %memberidx.i.i146 = getelementptr inbounds %TypeCastExpression, ptr %157, i64 0, i32 4
  store ptr %right.0, ptr %memberidx.i.i146, align 8
  %memberidx1.i.i147 = getelementptr inbounds %Expression, ptr %157, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i147, align 8
  %memberidx3.i.i149 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 1
  %158 = load i1, ptr %memberidx3.i.i149, align 1
  store i1 %158, ptr %memberidx1.i.i.i, align 1
  br label %ifend33

if.entry40:                                       ; preds = %ifend33
  %memberidx39 = getelementptr inbounds %Expression, ptr %right.1, i64 0, i32 3
  %159 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %96)
  %160 = load ptr, ptr %159, align 8
  %memberidx43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %160, i64 0, i32 5
  %161 = load ptr, ptr %memberidx43, align 8
  %162 = tail call ptr %161(ptr nonnull %159)
  %163 = load ptr, ptr %memberidx39, align 8
  %164 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %163)
  %165 = load ptr, ptr %164, align 8
  %memberidx45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %165, i64 0, i32 5
  %166 = load ptr, ptr %memberidx45, align 8
  %167 = tail call ptr %166(ptr nonnull %164)
  %168 = alloca ptr, align 8
  %169 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %168, ptr nonnull @177, ptr %162, ptr %167)
  %170 = load ptr, ptr %168, align 8
  %171 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %171, align 8
  %memberidx.i150 = getelementptr inbounds %string, ptr %171, i64 0, i32 1
  store ptr %170, ptr %memberidx.i150, align 8
  %memberidx1.i151 = getelementptr inbounds %string, ptr %171, i64 0, i32 2
  store i64 %169, ptr %memberidx1.i151, align 4
  %memberidx2.i152 = getelementptr inbounds %string, ptr %171, i64 0, i32 3
  store i64 %169, ptr %memberidx2.i152, align 4
  tail call void @free(ptr %162)
  tail call void @free(ptr %167)
  %memberidx46 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %172 = load ptr, ptr %memberidx46, align 8
  %173 = load ptr, ptr %172, align 8
  %174 = load ptr, ptr %memberidx.i134, align 8
  %memberidx1.i154 = getelementptr inbounds %Compiler, ptr %174, i64 0, i32 6
  %175 = load ptr, ptr %memberidx1.i154, align 8
  %176 = call ptr @malloc(i32 24)
  store i64 5, ptr %176, align 4
  %memberidx1.i.i155 = getelementptr inbounds %FloError, ptr %176, i64 0, i32 2
  store ptr %173, ptr %memberidx1.i.i155, align 8
  %memberidx2.i.i156 = getelementptr inbounds %FloError, ptr %176, i64 0, i32 1
  store ptr %171, ptr %memberidx2.i.i156, align 8
  %memberidx.i.i157 = getelementptr inbounds %Array_FloError_, ptr %175, i64 0, i32 2
  %177 = load i64, ptr %memberidx.i.i157, align 4
  %memberidx1.i2.i158 = getelementptr inbounds %Array_FloError_, ptr %175, i64 0, i32 3
  %178 = load i64, ptr %memberidx1.i2.i158, align 4
  %.not.i.i159 = icmp slt i64 %177, %178
  br i1 %.not.i.i159, label %if.entry40.TypeChecker_error.exit164_crit_edge, label %if.entry.i.i162

if.entry40.TypeChecker_error.exit164_crit_edge:   ; preds = %if.entry40
  %memberidx4.i.i163.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %175, i64 0, i32 1
  %.pre197 = load ptr, ptr %memberidx4.i.i163.phi.trans.insert, align 8
  br label %TypeChecker_error.exit164

if.entry.i.i162:                                  ; preds = %if.entry40
  %179 = shl nuw i64 %178, 1
  store i64 %179, ptr %memberidx1.i2.i158, align 4
  %memberidx2.i.i.i161 = getelementptr inbounds %Array_FloError_, ptr %175, i64 0, i32 1
  %180 = load ptr, ptr %memberidx2.i.i.i161, align 8
  %181 = shl i64 %178, 4
  %182 = call ptr @realloc(ptr %180, i64 %181)
  store ptr %182, ptr %memberidx2.i.i.i161, align 8
  %.pre196 = load i64, ptr %memberidx.i.i157, align 4
  br label %TypeChecker_error.exit164

TypeChecker_error.exit164:                        ; preds = %if.entry40.TypeChecker_error.exit164_crit_edge, %if.entry.i.i162
  %183 = phi ptr [ %.pre197, %if.entry40.TypeChecker_error.exit164_crit_edge ], [ %182, %if.entry.i.i162 ]
  %184 = phi i64 [ %177, %if.entry40.TypeChecker_error.exit164_crit_edge ], [ %.pre196, %if.entry.i.i162 ]
  %185 = add nsw i64 %184, 1
  store i64 %185, ptr %memberidx.i.i157, align 4
  %186 = getelementptr inbounds ptr, ptr %183, i64 %184
  store ptr %176, ptr %186, align 8
  br label %common.ret

ifend42:                                          ; preds = %ifend33
  %187 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %187, align 4
  %memberidx.i.i165 = getelementptr inbounds %Expression, ptr %187, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i165, align 4
  %memberidx1.i.i166 = getelementptr inbounds %Expression, ptr %187, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i166, align 1
  %memberidx.i167 = getelementptr inbounds %MemberExpression, ptr %187, i64 0, i32 4
  store ptr %1, ptr %memberidx.i167, align 8
  %memberidx1.i168 = getelementptr inbounds %MemberExpression, ptr %187, i64 0, i32 5
  store ptr %66, ptr %memberidx1.i168, align 8
  %memberidx2.i169 = getelementptr inbounds %Expression, ptr %187, i64 0, i32 3
  store ptr %common.ret.op.i108, ptr %memberidx2.i169, align 8
  %188 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %188, align 8
  %memberidx.i170 = getelementptr inbounds %Array_Expression_, ptr %188, i64 0, i32 2
  store i64 0, ptr %memberidx.i170, align 4
  %memberidx1.i171 = getelementptr inbounds %Array_Expression_, ptr %188, i64 0, i32 3
  store i64 8, ptr %memberidx1.i171, align 4
  %memberidx2.i172 = getelementptr inbounds %Array_Expression_, ptr %188, i64 0, i32 1
  %189 = tail call ptr @malloc(i32 64)
  store ptr %189, ptr %memberidx2.i172, align 8
  store ptr %right.1, ptr %189, align 8
  store i64 1, ptr %memberidx.i170, align 4
  %190 = tail call ptr @malloc(i32 41)
  %memberidx50 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i108, i64 0, i32 2
  %191 = load ptr, ptr %memberidx50, align 8
  store i64 8, ptr %190, align 4
  %memberidx.i.i173 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i173, align 4
  %memberidx1.i.i174 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i174, align 1
  %memberidx.i175 = getelementptr inbounds %CallExpression, ptr %190, i64 0, i32 4
  store ptr %187, ptr %memberidx.i175, align 8
  %memberidx1.i176 = getelementptr inbounds %CallExpression, ptr %190, i64 0, i32 5
  store ptr %188, ptr %memberidx1.i176, align 8
  %memberidx2.i177 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  store ptr %191, ptr %memberidx2.i177, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %5)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %if.entry42, %TypeChecker_error.exit146, %if.entry35, %ifend28, %TypeChecker_error.exit, %if.entry17, %ifend12
  %common.ret.op = phi ptr [ %17, %ifend12 ], [ %22, %if.entry17 ], [ null, %TypeChecker_error.exit ], [ %61, %ifend28 ], [ %73, %if.entry35 ], [ null, %TypeChecker_error.exit146 ], [ %111, %if.entry42 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %12 = load i1, ptr %memberidx3, align 1
  switch i64 %4, label %ifend16 [
    i64 6, label %if.entry4
    i64 7, label %if.entry14
  ]

if.entry4:                                        ; preds = %ifend
  %13 = load i64, ptr %11, align 4
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 9
  br i1 %15, label %if.entry7, label %ifend34.split

if.entry7:                                        ; preds = %if.entry4
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %if.entry7
  %memberidx13 = getelementptr inbounds %IntType, ptr %11, i64 0, i32 1
  store i1 true, ptr %memberidx13, align 1
  br label %ifend12

ifend12:                                          ; preds = %if.entry7, %if.entry10
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  %memberidx.i89 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 4
  store i64 6, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i90, align 8
  %memberidx2.i91 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i91, align 8
  store i1 %12, ptr %memberidx1.i.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend
  %18 = load i64, ptr %11, align 4
  %19 = icmp ult i64 %18, 10
  br i1 %19, label %if.entry17, label %ifend34.split

ifend16:                                          ; preds = %ifend
  %20 = add i64 %4, -2
  %21 = icmp ult i64 %20, 4
  br i1 %21, label %if.entry20, label %ifend22

if.entry17:                                       ; preds = %if.entry14
  %22 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %22, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 1
  %memberidx.i94 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 4
  store i64 7, ptr %memberidx.i94, align 4
  %memberidx1.i95 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i96, align 8
  store i1 %12, ptr %memberidx1.i.i93, align 1
  br label %common.ret

if.entry20:                                       ; preds = %ifend16
  %23 = load i64, ptr %11, align 4
  %24 = add i64 %23, -1
  %25 = icmp ult i64 %24, 9
  %26 = icmp eq i64 %23, 13
  %27 = or i1 %26, %25
  br i1 %27, label %if.entry23, label %ifend22

ifend22:                                          ; preds = %if.entry20, %ifend16
  switch i64 %4, label %ifend34.split [
    i64 8, label %if.entry32
    i64 1, label %if.entry39
  ]

if.entry23:                                       ; preds = %if.entry20
  %memberidx.i98 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i98, align 4
  switch i64 %28, label %if.entry26 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %if.entry23
  %memberidx1.i99 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %29 = load ptr, ptr %memberidx1.i99, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %ifend28, label %if.entry26

if.entry4.i:                                      ; preds = %if.entry23
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %32 = load ptr, ptr %memberidx7.i, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %ifend28, label %if.entry26

check_is_var.exit:                                ; preds = %if.entry23
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %35 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %36 = load ptr, ptr %memberidx14.i, align 8
  %37 = load i64, ptr %36, align 4
  %.not157 = icmp eq i64 %37, 15
  br i1 %.not157, label %if.entry26, label %ifend28

if.entry26:                                       ; preds = %if.entry4.i, %if.entry.i, %if.entry23, %check_is_var.exit
  %38 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %39 = load ptr, ptr %38, align 8
  %memberidx29 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i64 0, i32 5
  %40 = load ptr, ptr %memberidx29, align 8
  %41 = tail call ptr %40(ptr nonnull %38)
  %42 = alloca ptr, align 8
  %43 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %42, ptr nonnull @185, ptr %41)
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i100 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i100, align 8
  %memberidx1.i101 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 %43, ptr %memberidx1.i101, align 4
  %memberidx2.i102 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 %43, ptr %memberidx2.i102, align 4
  tail call void @free(ptr %41)
  %46 = load ptr, ptr %memberidx1, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 6
  %49 = load ptr, ptr %memberidx1.i104, align 8
  %50 = call ptr @malloc(i32 24)
  store i64 4, ptr %50, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %50, i64 0, i32 2
  store ptr %47, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %50, i64 0, i32 1
  store ptr %45, ptr %memberidx2.i.i, align 8
  %memberidx.i.i106 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i106, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 3
  %52 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %51, %52
  br i1 %.not.i.i, label %if.entry26.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry26.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry26
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %.pre161 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry26
  %53 = shl nuw i64 %52, 1
  store i64 %53, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %54 = load ptr, ptr %memberidx2.i.i.i, align 8
  %55 = shl i64 %52, 4
  %56 = call ptr @realloc(ptr %54, i64 %55)
  store ptr %56, ptr %memberidx2.i.i.i, align 8
  %.pre160 = load i64, ptr %memberidx.i.i106, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry26.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %57 = phi ptr [ %.pre161, %if.entry26.TypeChecker_error.exit_crit_edge ], [ %56, %if.entry.i.i ]
  %58 = phi i64 [ %51, %if.entry26.TypeChecker_error.exit_crit_edge ], [ %.pre160, %if.entry.i.i ]
  %59 = add nsw i64 %58, 1
  store i64 %59, ptr %memberidx.i.i106, align 4
  %60 = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %50, ptr %60, align 8
  br label %common.ret

ifend28:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %61 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %61, align 4
  %memberidx.i.i107 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i107, align 4
  %memberidx1.i.i108 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 1
  %memberidx.i109 = getelementptr inbounds %UnaryExpression, ptr %61, i64 0, i32 4
  store i64 %4, ptr %memberidx.i109, align 4
  %memberidx1.i110 = getelementptr inbounds %UnaryExpression, ptr %61, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i110, align 8
  %memberidx2.i111 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i111, align 8
  store i1 false, ptr %memberidx1.i.i108, align 1
  br label %common.ret

if.entry32:                                       ; preds = %ifend22
  %memberidx.i113 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %62 = load i64, ptr %memberidx.i113, align 4
  switch i64 %62, label %ifend34.split [
    i64 8, label %if.entry.i116
    i64 13, label %if.entry4.i119
    i64 14, label %check_is_var.exit124
  ]

if.entry.i116:                                    ; preds = %if.entry32
  %memberidx1.i115 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %63 = load ptr, ptr %memberidx1.i115, align 8
  %64 = load i64, ptr %63, align 4
  %65 = icmp eq i64 %64, 1
  br i1 %65, label %if.entry35, label %ifend34.split

if.entry4.i119:                                   ; preds = %if.entry32
  %memberidx7.i118 = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %66 = load ptr, ptr %memberidx7.i118, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %if.entry35, label %ifend34.split

check_is_var.exit124:                             ; preds = %if.entry32
  %memberidx13.i121 = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %69 = load ptr, ptr %memberidx13.i121, align 8
  %memberidx14.i122 = getelementptr inbounds %Expression, ptr %69, i64 0, i32 3
  %70 = load ptr, ptr %memberidx14.i122, align 8
  %71 = load i64, ptr %70, align 4
  %.not = icmp eq i64 %71, 15
  br i1 %.not, label %ifend34.split, label %if.entry35

ifend34.split:                                    ; preds = %if.entry4, %if.entry14, %check_is_var.exit124, %if.entry32, %if.entry.i116, %if.entry4.i119, %ifend22
  %72 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %.pre = load ptr, ptr %72, align 8
  br label %ifend41

if.entry35:                                       ; preds = %if.entry4.i119, %if.entry.i116, %check_is_var.exit124
  %73 = tail call ptr @malloc(i32 41)
  %74 = tail call ptr @malloc(i32 16)
  %75 = load ptr, ptr %memberidx2, align 8
  store i64 13, ptr %74, align 4
  %memberidx.i125 = getelementptr inbounds %PointerType, ptr %74, i64 0, i32 1
  store ptr %75, ptr %memberidx.i125, align 8
  store i64 8, ptr %73, align 4
  %memberidx.i.i126 = getelementptr inbounds %Expression, ptr %73, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i126, align 4
  %memberidx1.i.i127 = getelementptr inbounds %Expression, ptr %73, i64 0, i32 1
  %memberidx.i128 = getelementptr inbounds %UnaryExpression, ptr %73, i64 0, i32 4
  store i64 8, ptr %memberidx.i128, align 4
  %memberidx1.i129 = getelementptr inbounds %UnaryExpression, ptr %73, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i129, align 8
  %memberidx2.i130 = getelementptr inbounds %Expression, ptr %73, i64 0, i32 3
  store ptr %74, ptr %memberidx2.i130, align 8
  store i1 false, ptr %memberidx1.i.i127, align 1
  br label %common.ret

if.entry39:                                       ; preds = %ifend22
  %76 = load i64, ptr %11, align 4
  %77 = icmp eq i64 %76, 20
  br i1 %77, label %if.entry.i156, label %is_object.exit

if.entry.i156:                                    ; preds = %if.entry39, %if.entry.i156
  %.tr5.i = phi ptr [ %78, %if.entry.i156 ], [ %11, %if.entry39 ]
  %memberidx1.i155 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %78 = load ptr, ptr %memberidx1.i155, align 8
  %79 = load i64, ptr %78, align 4
  %80 = icmp eq i64 %79, 20
  br i1 %80, label %if.entry.i156, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i156, %if.entry39
  %.lcssa.i = phi i64 [ %76, %if.entry39 ], [ %79, %if.entry.i156 ]
  %81 = icmp eq i64 %.lcssa.i, 11
  %82 = icmp eq i64 %76, 13
  %83 = or i1 %82, %81
  br i1 %83, label %if.entry42, label %if.entry39.split

if.entry39.split:                                 ; preds = %is_object.exit
  %84 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %84, align 8
  %85 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %85, align 8
  %memberidx.i.i36.i = getelementptr inbounds %string, ptr %85, i64 0, i32 1
  store ptr %84, ptr %memberidx.i.i36.i, align 8
  %memberidx1.i.i37.i = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %string, ptr %85, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i38.i, align 4
  br label %ifend41

ifend41:                                          ; preds = %if.entry39.split, %ifend34.split
  %86 = phi ptr [ %.pre, %ifend34.split ], [ @VTablestring, %if.entry39.split ]
  %phi.call = phi ptr [ %72, %ifend34.split ], [ %85, %if.entry39.split ]
  %memberidx45 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %86, i64 0, i32 5
  %87 = load ptr, ptr %memberidx45, align 8
  %88 = tail call ptr %87(ptr nonnull %phi.call)
  %89 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %11)
  %90 = load ptr, ptr %89, align 8
  %memberidx46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx46, align 8
  %92 = tail call ptr %91(ptr nonnull %89)
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @186, ptr %88, ptr %92)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i132 = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i132, align 8
  %memberidx1.i133 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i133, align 4
  %memberidx2.i134 = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i134, align 4
  tail call void @free(ptr %88)
  tail call void @free(ptr %92)
  %97 = load ptr, ptr %2, align 8
  %98 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i136 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 6
  %99 = load ptr, ptr %memberidx1.i136, align 8
  %100 = call ptr @malloc(i32 24)
  store i64 5, ptr %100, align 4
  %memberidx1.i.i137 = getelementptr inbounds %FloError, ptr %100, i64 0, i32 2
  store ptr %97, ptr %memberidx1.i.i137, align 8
  %memberidx2.i.i138 = getelementptr inbounds %FloError, ptr %100, i64 0, i32 1
  store ptr %96, ptr %memberidx2.i.i138, align 8
  %memberidx.i.i139 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 2
  %101 = load i64, ptr %memberidx.i.i139, align 4
  %memberidx1.i2.i140 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 3
  %102 = load i64, ptr %memberidx1.i2.i140, align 4
  %.not.i.i141 = icmp slt i64 %101, %102
  br i1 %.not.i.i141, label %ifend41.TypeChecker_error.exit146_crit_edge, label %if.entry.i.i144

ifend41.TypeChecker_error.exit146_crit_edge:      ; preds = %ifend41
  %memberidx4.i.i145.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %.pre159 = load ptr, ptr %memberidx4.i.i145.phi.trans.insert, align 8
  br label %TypeChecker_error.exit146

if.entry.i.i144:                                  ; preds = %ifend41
  %103 = shl nuw i64 %102, 1
  store i64 %103, ptr %memberidx1.i2.i140, align 4
  %memberidx2.i.i.i143 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %104 = load ptr, ptr %memberidx2.i.i.i143, align 8
  %105 = shl i64 %102, 4
  %106 = call ptr @realloc(ptr %104, i64 %105)
  store ptr %106, ptr %memberidx2.i.i.i143, align 8
  %.pre158 = load i64, ptr %memberidx.i.i139, align 4
  br label %TypeChecker_error.exit146

TypeChecker_error.exit146:                        ; preds = %ifend41.TypeChecker_error.exit146_crit_edge, %if.entry.i.i144
  %107 = phi ptr [ %.pre159, %ifend41.TypeChecker_error.exit146_crit_edge ], [ %106, %if.entry.i.i144 ]
  %108 = phi i64 [ %101, %ifend41.TypeChecker_error.exit146_crit_edge ], [ %.pre158, %if.entry.i.i144 ]
  %109 = add nsw i64 %108, 1
  store i64 %109, ptr %memberidx.i.i139, align 4
  %110 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %100, ptr %110, align 8
  br label %common.ret

if.entry42:                                       ; preds = %is_object.exit
  %111 = tail call ptr @malloc(i32 41)
  %112 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %112, align 4
  store i64 8, ptr %111, align 4
  %memberidx.i.i147 = getelementptr inbounds %Expression, ptr %111, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i147, align 4
  %memberidx1.i.i148 = getelementptr inbounds %Expression, ptr %111, i64 0, i32 1
  %memberidx.i149 = getelementptr inbounds %UnaryExpression, ptr %111, i64 0, i32 4
  store i64 1, ptr %memberidx.i149, align 4
  %memberidx1.i150 = getelementptr inbounds %UnaryExpression, ptr %111, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i150, align 8
  %memberidx2.i151 = getelementptr inbounds %Expression, ptr %111, i64 0, i32 3
  store ptr %112, ptr %memberidx2.i151, align 8
  store i1 false, ptr %memberidx1.i.i148, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %args = alloca ptr, align 8
  %memberidx = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 3
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %3)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 6
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend27, %2, %TypeChecker_error.exit142, %TypeChecker_error.exit121, %TypeChecker_error.exit106, %TypeChecker_error.exit, %ifend10
  %common.ret.op = phi ptr [ %39, %ifend10 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit106 ], [ null, %TypeChecker_error.exit121 ], [ null, %TypeChecker_error.exit142 ], [ null, %2 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %9 = load i64, ptr %4, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx5 = getelementptr inbounds %GenericType, ptr %4, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %memory_type.0 = phi ptr [ %11, %if.entry2 ], [ %4, %ifend ]
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %12, align 8
  %memberidx.i82 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx.i82, align 4
  %memberidx1.i83 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 3
  store i64 8, ptr %memberidx1.i83, align 4
  %memberidx2.i84 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %memberidx2.i84, align 8
  store i64 0, ptr %memberidx.i82, align 4
  store ptr %12, ptr %args, align 8
  %14 = load i64, ptr %memory_type.0, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i149, label %is_object.exit.thread

if.entry.i149:                                    ; preds = %ifend4, %if.entry.i149
  %.tr5.i = phi ptr [ %16, %if.entry.i149 ], [ %memory_type.0, %ifend4 ]
  %memberidx1.i148 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i148, align 8
  %17 = load i64, ptr %16, align 4
  switch i64 %17, label %else9 [
    i64 20, label %if.entry.i149
    i64 11, label %if.entry8
  ]

is_object.exit.thread:                            ; preds = %ifend4
  switch i64 %14, label %else20 [
    i64 11, label %if.entry8.thread
    i64 13, label %if.entry19
  ]

if.entry8.thread:                                 ; preds = %is_object.exit.thread
  %18 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry8:                                        ; preds = %if.entry.i149
  %19 = load ptr, ptr %0, align 8
  br i1 %15, label %if.entry.i151, label %if.entry3.i

if.entry.i151:                                    ; preds = %if.entry8, %if.entry.i151
  %.tr11.i156 = phi ptr [ %20, %if.entry.i151 ], [ %memory_type.0, %if.entry8 ]
  %memberidx1.i150 = getelementptr inbounds %GenericType, ptr %.tr11.i156, i64 0, i32 3
  %20 = load ptr, ptr %memberidx1.i150, align 8
  %21 = load i64, ptr %20, align 4
  %switch = icmp eq i64 %21, 20
  br i1 %switch, label %if.entry.i151, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i151, %if.entry8.thread, %if.entry8
  %22 = phi ptr [ %19, %if.entry8 ], [ %18, %if.entry8.thread ], [ %19, %if.entry.i151 ]
  %.tr11.i.lcssa = phi ptr [ %memory_type.0, %if.entry8 ], [ %memory_type.0, %if.entry8.thread ], [ %20, %if.entry.i151 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i152 = getelementptr inbounds %Program, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i.i152, align 8
  %25 = load i64, ptr %23, align 4
  %memberidx.i.i.i153 = getelementptr inbounds %Array_Module_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i153, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i154 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i154, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i5.i.i, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 8
  %memberidx13 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %35 = load ptr, ptr %memberidx13, align 8
  %36 = call fastcc ptr @TypeChecker_check_constructor_call(ptr nonnull %0, ptr %34, ptr %35, ptr nonnull %args)
  %.not81 = icmp eq ptr %36, null
  br i1 %.not81, label %if.entry3.i.ifend10_crit_edge, label %if.entry14

if.entry3.i.ifend10_crit_edge:                    ; preds = %if.entry3.i
  %.pre167 = load ptr, ptr %args, align 8
  br label %ifend10

else9:                                            ; preds = %if.entry.i149
  %37 = icmp eq i64 %14, 13
  br i1 %37, label %if.entry19, label %else20

ifend10:                                          ; preds = %if.entry3.i.ifend10_crit_edge, %Array_Expression____sl__.exit
  %38 = phi ptr [ %.pre167, %if.entry3.i.ifend10_crit_edge ], [ %12, %Array_Expression____sl__.exit ]
  %memory_type.1 = phi ptr [ %memory_type.0, %if.entry3.i.ifend10_crit_edge ], [ %55, %Array_Expression____sl__.exit ]
  %39 = tail call ptr @malloc(i32 42)
  %memberidx44 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 4
  %40 = load i1, ptr %memberidx44, align 1
  store i64 8, ptr %39, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i85 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 6
  store ptr %memory_type.1, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 5
  store i1 %40, ptr %memberidx1.i86, align 1
  %memberidx2.i87 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 4
  store ptr %38, ptr %memberidx2.i87, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 3
  store ptr %4, ptr %memberidx3.i, align 8
  br label %common.ret

if.entry14:                                       ; preds = %if.entry3.i
  %41 = load ptr, ptr %1, align 8
  %42 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i89, align 8
  %44 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %44, align 4
  %memberidx1.i.i90 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i90, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i91 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i91, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %45, %46
  br i1 %.not.i.i, label %if.entry14.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry14.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry14
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %.pre166 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry14
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i.i, align 8
  %49 = shl i64 %46, 4
  %50 = tail call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i.i, align 8
  %.pre165 = load i64, ptr %memberidx.i.i91, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry14.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %51 = phi ptr [ %.pre166, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %50, %if.entry.i.i ]
  %52 = phi i64 [ %45, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %.pre165, %if.entry.i.i ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i.i91, align 4
  %54 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %54, align 8
  br label %common.ret

if.entry19:                                       ; preds = %is_object.exit.thread, %else9
  %memberidx22 = getelementptr inbounds %PointerType, ptr %memory_type.0, i64 0, i32 1
  %55 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %56 = load ptr, ptr %memberidx23, align 8
  %memberidx24 = getelementptr inbounds %Array_ExpressionNode_, ptr %56, i64 0, i32 2
  %57 = load i64, ptr %memberidx24, align 4
  %.not = icmp eq i64 %57, 1
  br i1 %.not, label %ifend27, label %if.entry25

else20:                                           ; preds = %is_object.exit.thread, %else9
  %58 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %memory_type.0)
  %59 = load ptr, ptr %58, align 8
  %memberidx42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %59, i64 0, i32 5
  %60 = load ptr, ptr %memberidx42, align 8
  %61 = tail call ptr %60(ptr nonnull %58)
  %62 = alloca ptr, align 8
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %62, ptr nonnull @194, ptr %61)
  %64 = load ptr, ptr %62, align 8
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i92 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx1.i93, align 4
  %memberidx2.i94 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 %63, ptr %memberidx2.i94, align 4
  tail call void @free(ptr %61)
  %66 = load ptr, ptr %1, align 8
  %67 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i96 = getelementptr inbounds %Compiler, ptr %67, i64 0, i32 6
  %68 = load ptr, ptr %memberidx1.i96, align 8
  %69 = call ptr @malloc(i32 24)
  store i64 5, ptr %69, align 4
  %memberidx1.i.i97 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 2
  store ptr %66, ptr %memberidx1.i.i97, align 8
  %memberidx2.i.i98 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 1
  store ptr %65, ptr %memberidx2.i.i98, align 8
  %memberidx.i.i99 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i99, align 4
  %memberidx1.i2.i100 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 3
  %71 = load i64, ptr %memberidx1.i2.i100, align 4
  %.not.i.i101 = icmp slt i64 %70, %71
  br i1 %.not.i.i101, label %else20.TypeChecker_error.exit106_crit_edge, label %if.entry.i.i104

else20.TypeChecker_error.exit106_crit_edge:       ; preds = %else20
  %memberidx4.i.i105.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 1
  %.pre158 = load ptr, ptr %memberidx4.i.i105.phi.trans.insert, align 8
  br label %TypeChecker_error.exit106

if.entry.i.i104:                                  ; preds = %else20
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx1.i2.i100, align 4
  %memberidx2.i.i.i103 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 1
  %73 = load ptr, ptr %memberidx2.i.i.i103, align 8
  %74 = shl i64 %71, 4
  %75 = call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %memberidx2.i.i.i103, align 8
  %.pre = load i64, ptr %memberidx.i.i99, align 4
  br label %TypeChecker_error.exit106

TypeChecker_error.exit106:                        ; preds = %else20.TypeChecker_error.exit106_crit_edge, %if.entry.i.i104
  %76 = phi ptr [ %.pre158, %else20.TypeChecker_error.exit106_crit_edge ], [ %75, %if.entry.i.i104 ]
  %77 = phi i64 [ %70, %else20.TypeChecker_error.exit106_crit_edge ], [ %.pre, %if.entry.i.i104 ]
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i99, align 4
  %79 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %69, ptr %79, align 8
  br label %common.ret

if.entry25:                                       ; preds = %if.entry19
  %80 = alloca ptr, align 8
  %81 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %80, ptr nonnull @192, i64 %57)
  %82 = load ptr, ptr %80, align 8
  %83 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %83, align 8
  %memberidx.i107 = getelementptr inbounds %string, ptr %83, i64 0, i32 1
  store ptr %82, ptr %memberidx.i107, align 8
  %memberidx1.i108 = getelementptr inbounds %string, ptr %83, i64 0, i32 2
  store i64 %81, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %string, ptr %83, i64 0, i32 3
  store i64 %81, ptr %memberidx2.i109, align 4
  %84 = load ptr, ptr %1, align 8
  %85 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i111 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 6
  %86 = load ptr, ptr %memberidx1.i111, align 8
  %87 = call ptr @malloc(i32 24)
  store i64 4, ptr %87, align 4
  %memberidx1.i.i112 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 2
  store ptr %84, ptr %memberidx1.i.i112, align 8
  %memberidx2.i.i113 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 1
  store ptr %83, ptr %memberidx2.i.i113, align 8
  %memberidx.i.i114 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %88 = load i64, ptr %memberidx.i.i114, align 4
  %memberidx1.i2.i115 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 3
  %89 = load i64, ptr %memberidx1.i2.i115, align 4
  %.not.i.i116 = icmp slt i64 %88, %89
  br i1 %.not.i.i116, label %if.entry25.TypeChecker_error.exit121_crit_edge, label %if.entry.i.i119

if.entry25.TypeChecker_error.exit121_crit_edge:   ; preds = %if.entry25
  %memberidx4.i.i120.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %.pre160 = load ptr, ptr %memberidx4.i.i120.phi.trans.insert, align 8
  br label %TypeChecker_error.exit121

if.entry.i.i119:                                  ; preds = %if.entry25
  %90 = shl nuw i64 %89, 1
  store i64 %90, ptr %memberidx1.i2.i115, align 4
  %memberidx2.i.i.i118 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %91 = load ptr, ptr %memberidx2.i.i.i118, align 8
  %92 = shl i64 %89, 4
  %93 = call ptr @realloc(ptr %91, i64 %92)
  store ptr %93, ptr %memberidx2.i.i.i118, align 8
  %.pre159 = load i64, ptr %memberidx.i.i114, align 4
  br label %TypeChecker_error.exit121

TypeChecker_error.exit121:                        ; preds = %if.entry25.TypeChecker_error.exit121_crit_edge, %if.entry.i.i119
  %94 = phi ptr [ %.pre160, %if.entry25.TypeChecker_error.exit121_crit_edge ], [ %93, %if.entry.i.i119 ]
  %95 = phi i64 [ %88, %if.entry25.TypeChecker_error.exit121_crit_edge ], [ %.pre159, %if.entry.i.i119 ]
  %96 = add nsw i64 %95, 1
  store i64 %96, ptr %memberidx.i.i114, align 4
  %97 = getelementptr inbounds ptr, ptr %94, i64 %95
  store ptr %87, ptr %97, align 8
  br label %common.ret

ifend27:                                          ; preds = %if.entry19
  %98 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %98, align 4
  %memberidx.i122 = getelementptr inbounds %IntType, ptr %98, i64 0, i32 1
  store i1 false, ptr %memberidx.i122, align 1
  %99 = load ptr, ptr %memberidx23, align 8
  %memberidx.i123 = getelementptr inbounds %Array_ExpressionNode_, ptr %99, i64 0, i32 1
  %100 = load ptr, ptr %memberidx.i123, align 8
  %101 = load ptr, ptr %100, align 8
  %102 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %98, ptr %101)
  %103 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i125 = getelementptr inbounds %Compiler, ptr %103, i64 0, i32 6
  %104 = load ptr, ptr %memberidx1.i125, align 8
  %memberidx2.i126 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 2
  %105 = load i64, ptr %memberidx2.i126, align 4
  %106 = icmp sgt i64 %105, 0
  br i1 %106, label %common.ret, label %ifend32

ifend32:                                          ; preds = %ifend27
  %memberidx33 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  %107 = load ptr, ptr %memberidx33, align 8
  %108 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %98, ptr %107)
  br i1 %108, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend32
  %109 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %98)
  %110 = load ptr, ptr %109, align 8
  %memberidx37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx37, align 8
  %112 = tail call ptr %111(ptr nonnull %109)
  %113 = load ptr, ptr %memberidx33, align 8
  %114 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %113)
  %115 = load ptr, ptr %114, align 8
  %memberidx39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %115, i64 0, i32 5
  %116 = load ptr, ptr %memberidx39, align 8
  %117 = tail call ptr %116(ptr nonnull %114)
  %118 = alloca ptr, align 8
  %119 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %118, ptr nonnull @193, ptr %112, ptr %117)
  %120 = load ptr, ptr %118, align 8
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %121, align 8
  %memberidx.i127 = getelementptr inbounds %string, ptr %121, i64 0, i32 1
  store ptr %120, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %string, ptr %121, i64 0, i32 2
  store i64 %119, ptr %memberidx1.i128, align 4
  %memberidx2.i129 = getelementptr inbounds %string, ptr %121, i64 0, i32 3
  store i64 %119, ptr %memberidx2.i129, align 4
  tail call void @free(ptr %112)
  tail call void @free(ptr %117)
  %122 = load ptr, ptr %memberidx23, align 8
  %memberidx.i130 = getelementptr inbounds %Array_ExpressionNode_, ptr %122, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i130, align 8
  %124 = load ptr, ptr %123, align 8
  %125 = load ptr, ptr %124, align 8
  %126 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i132 = getelementptr inbounds %Compiler, ptr %126, i64 0, i32 6
  %127 = load ptr, ptr %memberidx1.i132, align 8
  %128 = call ptr @malloc(i32 24)
  store i64 4, ptr %128, align 4
  %memberidx1.i.i133 = getelementptr inbounds %FloError, ptr %128, i64 0, i32 2
  store ptr %125, ptr %memberidx1.i.i133, align 8
  %memberidx2.i.i134 = getelementptr inbounds %FloError, ptr %128, i64 0, i32 1
  store ptr %121, ptr %memberidx2.i.i134, align 8
  %memberidx.i.i135 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 2
  %129 = load i64, ptr %memberidx.i.i135, align 4
  %memberidx1.i2.i136 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 3
  %130 = load i64, ptr %memberidx1.i2.i136, align 4
  %.not.i.i137 = icmp slt i64 %129, %130
  br i1 %.not.i.i137, label %if.entry34.TypeChecker_error.exit142_crit_edge, label %if.entry.i.i140

if.entry34.TypeChecker_error.exit142_crit_edge:   ; preds = %if.entry34
  %memberidx4.i.i141.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 1
  %.pre162 = load ptr, ptr %memberidx4.i.i141.phi.trans.insert, align 8
  br label %TypeChecker_error.exit142

if.entry.i.i140:                                  ; preds = %if.entry34
  %131 = shl nuw i64 %130, 1
  store i64 %131, ptr %memberidx1.i2.i136, align 4
  %memberidx2.i.i.i139 = getelementptr inbounds %Array_FloError_, ptr %127, i64 0, i32 1
  %132 = load ptr, ptr %memberidx2.i.i.i139, align 8
  %133 = shl i64 %130, 4
  %134 = call ptr @realloc(ptr %132, i64 %133)
  store ptr %134, ptr %memberidx2.i.i.i139, align 8
  %.pre161 = load i64, ptr %memberidx.i.i135, align 4
  br label %TypeChecker_error.exit142

TypeChecker_error.exit142:                        ; preds = %if.entry34.TypeChecker_error.exit142_crit_edge, %if.entry.i.i140
  %135 = phi ptr [ %.pre162, %if.entry34.TypeChecker_error.exit142_crit_edge ], [ %134, %if.entry.i.i140 ]
  %136 = phi i64 [ %129, %if.entry34.TypeChecker_error.exit142_crit_edge ], [ %.pre161, %if.entry.i.i140 ]
  %137 = add nsw i64 %136, 1
  store i64 %137, ptr %memberidx.i.i135, align 4
  %138 = getelementptr inbounds ptr, ptr %135, i64 %136
  store ptr %128, ptr %138, align 8
  tail call void @free(ptr nonnull %98)
  br label %common.ret

ifend36:                                          ; preds = %ifend32
  %139 = load i64, ptr %memberidx.i82, align 4
  %140 = load i64, ptr %memberidx1.i83, align 4
  %.not.i = icmp slt i64 %139, %140
  br i1 %.not.i, label %ifend36.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend36.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend36
  %.pre164 = load ptr, ptr %memberidx2.i84, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend36
  %141 = shl nuw i64 %140, 1
  store i64 %141, ptr %memberidx1.i83, align 4
  %142 = load ptr, ptr %memberidx2.i84, align 8
  %143 = shl i64 %140, 4
  %144 = tail call ptr @realloc(ptr %142, i64 %143)
  store ptr %144, ptr %memberidx2.i84, align 8
  %.pre163 = load i64, ptr %memberidx.i82, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend36.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %145 = phi ptr [ %.pre164, %ifend36.Array_Expression____sl__.exit_crit_edge ], [ %144, %if.entry.i ]
  %146 = phi i64 [ %139, %ifend36.Array_Expression____sl__.exit_crit_edge ], [ %.pre163, %if.entry.i ]
  %147 = add nsw i64 %146, 1
  store i64 %147, ptr %memberidx.i82, align 4
  %148 = getelementptr inbounds ptr, ptr %145, i64 %146
  store ptr %102, ptr %148, align 8
  br label %ifend10
}

define internal fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i.i51 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i52, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend.i

ifend.i:                                          ; preds = %3
  %memberidx.i53 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i53, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %ifend, label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i54 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i54, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i, align 1
  %.pre = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre, i64 0, i32 6
  %.pre56 = load ptr, ptr %memberidx1.i.phi.trans.insert, align 8
  %memberidx2.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre56, i64 0, i32 2
  %.pre57 = load i64, ptr %memberidx2.i.phi.trans.insert, align 4
  %17 = icmp sgt i64 %.pre57, 0
  br i1 %17, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %ifend4, %ifend, %TypeChecker_check_condition.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %59, %ifend13 ], [ null, %TypeChecker_check_condition.exit ], [ null, %ifend ], [ null, %ifend4 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %ifend.i, %TypeChecker_check_condition.exit
  %common.ret.op.i63 = phi ptr [ %15, %TypeChecker_check_condition.exit ], [ %6, %ifend.i ]
  %memberidx1 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 4
  %18 = load ptr, ptr %memberidx1, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %1, ptr %18)
  %20 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i35 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1.i35, align 8
  %memberidx2.i36 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i36, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret, label %ifend4

ifend4:                                           ; preds = %ifend
  %memberidx5 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %24 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx6, align 8
  %26 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %24, ptr %25)
  %27 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i38 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i38, align 8
  %memberidx2.i39 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i39, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %24, ptr %31)
  br i1 %32, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %33 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %24)
  %34 = load ptr, ptr %33, align 8
  %memberidx14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx14, align 8
  %36 = tail call ptr %35(ptr nonnull %33)
  %37 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %31)
  %38 = load ptr, ptr %37, align 8
  %memberidx15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %38, i64 0, i32 5
  %39 = load ptr, ptr %memberidx15, align 8
  %40 = tail call ptr %39(ptr nonnull %37)
  %41 = alloca ptr, align 8
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %41, ptr nonnull @207, ptr %36, ptr %40)
  %43 = load ptr, ptr %41, align 8
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %44, align 8
  %memberidx.i40 = getelementptr inbounds %string, ptr %44, i64 0, i32 1
  store ptr %43, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %string, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx1.i41, align 4
  %memberidx2.i42 = getelementptr inbounds %string, ptr %44, i64 0, i32 3
  store i64 %42, ptr %memberidx2.i42, align 4
  tail call void @free(ptr %36)
  tail call void @free(ptr %40)
  %45 = load ptr, ptr %2, align 8
  %46 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx1.i44, align 8
  %48 = call ptr @malloc(i32 24)
  store i64 5, ptr %48, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 3
  %50 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %49, %50
  br i1 %.not.i.i, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %.pre59 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i.i, align 8
  %53 = shl i64 %50, 4
  %54 = call ptr @realloc(ptr %52, i64 %53)
  store ptr %54, ptr %memberidx2.i.i.i, align 8
  %.pre58 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %55 = phi ptr [ %.pre59, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %54, %if.entry.i.i ]
  %56 = phi i64 [ %49, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre58, %if.entry.i.i ]
  %57 = add nsw i64 %56, 1
  store i64 %57, ptr %memberidx.i.i, align 4
  %58 = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %48, ptr %58, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %59 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %59, align 4
  %memberidx.i.i45 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i45, align 4
  %memberidx1.i.i46 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i46, align 1
  %memberidx.i47 = getelementptr inbounds %TernaryExpression, ptr %59, i64 0, i32 4
  store ptr %common.ret.op.i63, ptr %memberidx.i47, align 8
  %memberidx1.i48 = getelementptr inbounds %TernaryExpression, ptr %59, i64 0, i32 5
  store ptr %19, ptr %memberidx1.i48, align 8
  %memberidx2.i49 = getelementptr inbounds %TernaryExpression, ptr %59, i64 0, i32 6
  store ptr %26, ptr %memberidx2.i49, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %59, i64 0, i32 3
  %60 = load ptr, ptr %memberidx5, align 8
  store ptr %60, ptr %memberidx3.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load i64, ptr %1, align 4
  switch i64 %3, label %ifend76 [
    i64 16, label %if.entry
    i64 13, label %if.entry13
    i64 11, label %if.entry19
    i64 12, label %if.entry25
    i64 14, label %if.entry32
    i64 15, label %if.entry39
    i64 20, label %if.entry57
    i64 18, label %if.entry70
    i64 17, label %if.entry74
  ]

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 0)
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  store ptr %4, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %memberidx = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx2193 = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2193, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %if.entry, %ifend8
  %9 = phi ptr [ %47, %ifend8 ], [ %4, %if.entry ]
  %10 = phi i64 [ %48, %ifend8 ], [ 0, %if.entry ]
  %11 = phi ptr [ %46, %ifend8 ], [ %6, %if.entry ]
  %i.0194 = phi i64 [ %49, %ifend8 ], [ 0, %if.entry ]
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %i.0194
  %14 = load ptr, ptr %13, align 8
  %15 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %14)
  %memberidx1.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx1.i, align 4
  %17 = add nuw i64 %16, %10
  %18 = tail call ptr @realloc(ptr %9, i64 %17)
  store ptr %18, ptr %memberidx.i.i, align 8
  %19 = load i64, ptr %memberidx1.i.i, align 4
  %20 = getelementptr inbounds i8, ptr %18, i64 %19
  %memberidx6.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  %21 = load ptr, ptr %memberidx6.i, align 8
  %22 = load i64, ptr %memberidx1.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %20, ptr align 8 %21, i64 %22, i1 false)
  store i64 %17, ptr %memberidx1.i.i, align 4
  %23 = load ptr, ptr %memberidx, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx5, align 4
  %25 = add i64 %24, -1
  %26 = icmp slt i64 %i.0194, %25
  br i1 %26, label %if.entry6, label %ifend8

common.ret:                                       ; preds = %ifend76, %if.entry74, %if.entry70, %for.end65, %for.end46, %if.entry32, %if.entry25, %if.entry19, %if.entry13, %for.end
  %common.ret.op = phi ptr [ %38, %for.end ], [ %59, %if.entry13 ], [ %72, %if.entry19 ], [ %85, %if.entry25 ], [ %95, %if.entry32 ], [ %125, %for.end46 ], [ %179, %for.end65 ], [ %181, %if.entry70 ], [ %183, %if.entry74 ], [ %184, %ifend76 ]
  ret ptr %common.ret.op

for.end.loopexit:                                 ; preds = %ifend8
  %.pre204 = load ptr, ptr %5, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.entry
  %27 = phi ptr [ %.pre204, %for.end.loopexit ], [ @VTablestring, %if.entry ]
  %memberidx9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx9, align 8
  %29 = tail call ptr %28(ptr nonnull %5)
  %memberidx10 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 2
  %30 = load ptr, ptr %memberidx10, align 8
  %31 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %30)
  %32 = load ptr, ptr %31, align 8
  %memberidx11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx11, align 8
  %34 = tail call ptr %33(ptr nonnull %31)
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @81, ptr %29, ptr %34)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i125 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i125, align 8
  %memberidx1.i126 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i126, align 4
  %memberidx2.i127 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i127, align 4
  tail call void @free(ptr %29)
  tail call void @free(ptr %34)
  br label %common.ret

if.entry6:                                        ; preds = %for.body
  %39 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %39, align 8
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i128 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i128, align 8
  %memberidx1.i.i129 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i130, align 4
  %41 = add nuw i64 %17, 2
  %42 = tail call ptr @realloc(ptr %18, i64 %41)
  store ptr %42, ptr %memberidx.i.i, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %17
  %44 = load i16, ptr %39, align 8
  store i16 %44, ptr %43, align 536870912
  store i64 %41, ptr %memberidx1.i.i, align 4
  %.pre202 = load ptr, ptr %memberidx, align 8
  %memberidx2.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre202, i64 0, i32 2
  %.pre203 = load i64, ptr %memberidx2.phi.trans.insert, align 4
  br label %ifend8

ifend8:                                           ; preds = %for.body, %if.entry6
  %45 = phi i64 [ %24, %for.body ], [ %.pre203, %if.entry6 ]
  %46 = phi ptr [ %23, %for.body ], [ %.pre202, %if.entry6 ]
  %47 = phi ptr [ %18, %for.body ], [ %42, %if.entry6 ]
  %48 = phi i64 [ %17, %for.body ], [ %41, %if.entry6 ]
  %49 = add nuw nsw i64 %i.0194, 1
  %50 = icmp slt i64 %49, %45
  br i1 %50, label %for.body, label %for.end.loopexit

if.entry13:                                       ; preds = %2
  %memberidx16 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %51 = load ptr, ptr %memberidx16, align 8
  %52 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %51)
  %53 = load ptr, ptr %52, align 8
  %memberidx17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx17, align 8
  %55 = tail call ptr %54(ptr nonnull %52)
  %56 = alloca ptr, align 8
  %57 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %56, ptr nonnull @82, ptr %55)
  %58 = load ptr, ptr %56, align 8
  %59 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i138 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i138, align 8
  %memberidx1.i139 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %57, ptr %memberidx1.i139, align 4
  %memberidx2.i140 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %57, ptr %memberidx2.i140, align 4
  tail call void @free(ptr %55)
  br label %common.ret

if.entry19:                                       ; preds = %2
  %60 = load ptr, ptr %0, align 8
  %memberidx6.i190 = getelementptr inbounds %ObjectType, ptr %1, i64 0, i32 1
  %61 = load ptr, ptr %memberidx6.i190, align 8
  %memberidx.i.i191 = getelementptr inbounds %Program, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i191, align 8
  %63 = load i64, ptr %61, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx2.i.i192 = getelementptr inbounds %Module, ptr %66, i64 0, i32 3
  %67 = load ptr, ptr %memberidx2.i.i192, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %61, i64 0, i32 2
  %68 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i5.i.i, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx23 = getelementptr inbounds %Class, ptr %71, i64 0, i32 1
  %72 = load ptr, ptr %memberidx23, align 8
  br label %common.ret

if.entry25:                                       ; preds = %2
  %73 = load ptr, ptr %0, align 8
  %memberidx29 = getelementptr inbounds %EnumType, ptr %1, i64 0, i32 1
  %74 = load ptr, ptr %memberidx29, align 8
  %memberidx.i141 = getelementptr inbounds %Program, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i141, align 8
  %76 = load i64, ptr %74, align 4
  %memberidx.i.i142 = getelementptr inbounds %Array_Module_, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i.i142, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i143 = getelementptr inbounds %Module, ptr %79, i64 0, i32 6
  %80 = load ptr, ptr %memberidx2.i143, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Enum_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i5.i, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx30 = getelementptr inbounds %Enum, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx30, align 8
  br label %common.ret

if.entry32:                                       ; preds = %2
  %memberidx35 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %86 = load ptr, ptr %memberidx35, align 8
  %87 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %86)
  %88 = load ptr, ptr %87, align 8
  %memberidx36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %88, i64 0, i32 5
  %89 = load ptr, ptr %memberidx36, align 8
  %90 = tail call ptr %89(ptr nonnull %87)
  %memberidx37 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %91 = load i64, ptr %memberidx37, align 4
  %92 = alloca ptr, align 8
  %93 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %92, ptr nonnull @83, ptr %90, i64 %91)
  %94 = load ptr, ptr %92, align 8
  %95 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %95, align 8
  %memberidx.i150 = getelementptr inbounds %string, ptr %95, i64 0, i32 1
  store ptr %94, ptr %memberidx.i150, align 8
  %memberidx1.i151 = getelementptr inbounds %string, ptr %95, i64 0, i32 2
  store i64 %93, ptr %memberidx1.i151, align 4
  %memberidx2.i152 = getelementptr inbounds %string, ptr %95, i64 0, i32 3
  store i64 %93, ptr %memberidx2.i152, align 4
  tail call void @free(ptr %90)
  br label %common.ret

if.entry39:                                       ; preds = %2
  %96 = tail call ptr @malloc(i32 0)
  %97 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %97, align 8
  %memberidx.i.i153 = getelementptr inbounds %string, ptr %97, i64 0, i32 1
  store ptr %96, ptr %memberidx.i.i153, align 8
  %memberidx1.i.i154 = getelementptr inbounds %string, ptr %97, i64 0, i32 2
  %memberidx47 = getelementptr inbounds %TupleType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i154, i8 0, i64 16, i1 false)
  %98 = load ptr, ptr %memberidx47, align 8
  %memberidx48196 = getelementptr inbounds %Array_Type_, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx48196, align 4
  %100 = icmp sgt i64 %99, 0
  br i1 %100, label %for.body44, label %for.end46

for.body44:                                       ; preds = %if.entry39, %ifend54
  %101 = phi ptr [ %134, %ifend54 ], [ %96, %if.entry39 ]
  %102 = phi i64 [ %135, %ifend54 ], [ 0, %if.entry39 ]
  %103 = phi ptr [ %133, %ifend54 ], [ %98, %if.entry39 ]
  %i1.0197 = phi i64 [ %136, %ifend54 ], [ 0, %if.entry39 ]
  %memberidx.i156 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i156, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %i1.0197
  %106 = load ptr, ptr %105, align 8
  %107 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %106)
  %memberidx1.i161 = getelementptr inbounds %string, ptr %107, i64 0, i32 2
  %108 = load i64, ptr %memberidx1.i161, align 4
  %109 = add nuw i64 %108, %102
  %110 = tail call ptr @realloc(ptr %101, i64 %109)
  store ptr %110, ptr %memberidx.i.i153, align 8
  %111 = load i64, ptr %memberidx1.i.i154, align 4
  %112 = getelementptr inbounds i8, ptr %110, i64 %111
  %memberidx6.i163 = getelementptr inbounds %string, ptr %107, i64 0, i32 1
  %113 = load ptr, ptr %memberidx6.i163, align 8
  %114 = load i64, ptr %memberidx1.i161, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %112, ptr align 8 %113, i64 %114, i1 false)
  store i64 %109, ptr %memberidx1.i.i154, align 4
  %115 = load ptr, ptr %memberidx47, align 8
  %memberidx51 = getelementptr inbounds %Array_Type_, ptr %115, i64 0, i32 2
  %116 = load i64, ptr %memberidx51, align 4
  %117 = add i64 %116, -1
  %118 = icmp slt i64 %i1.0197, %117
  br i1 %118, label %if.entry52, label %ifend54

for.end46.loopexit:                               ; preds = %ifend54
  %.pre201 = load ptr, ptr %97, align 8
  br label %for.end46

for.end46:                                        ; preds = %for.end46.loopexit, %if.entry39
  %119 = phi ptr [ %.pre201, %for.end46.loopexit ], [ @VTablestring, %if.entry39 ]
  %memberidx55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %119, i64 0, i32 5
  %120 = load ptr, ptr %memberidx55, align 8
  %121 = tail call ptr %120(ptr nonnull %97)
  %122 = alloca ptr, align 8
  %123 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %122, ptr nonnull @84, ptr %121)
  %124 = load ptr, ptr %122, align 8
  %125 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %125, align 8
  %memberidx.i164 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  store ptr %124, ptr %memberidx.i164, align 8
  %memberidx1.i165 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  store i64 %123, ptr %memberidx1.i165, align 4
  %memberidx2.i166 = getelementptr inbounds %string, ptr %125, i64 0, i32 3
  store i64 %123, ptr %memberidx2.i166, align 4
  tail call void @free(ptr %121)
  br label %common.ret

if.entry52:                                       ; preds = %for.body44
  %126 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %126, align 8
  %127 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i.i167 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i.i167, align 8
  %memberidx1.i.i168 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i168, align 4
  %memberidx2.i.i169 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i169, align 4
  %128 = add nuw i64 %109, 2
  %129 = tail call ptr @realloc(ptr %110, i64 %128)
  store ptr %129, ptr %memberidx.i.i153, align 8
  %130 = getelementptr inbounds i8, ptr %129, i64 %109
  %131 = load i16, ptr %126, align 8
  store i16 %131, ptr %130, align 536870912
  store i64 %128, ptr %memberidx1.i.i154, align 4
  %.pre = load ptr, ptr %memberidx47, align 8
  %memberidx48.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre, i64 0, i32 2
  %.pre200 = load i64, ptr %memberidx48.phi.trans.insert, align 4
  br label %ifend54

ifend54:                                          ; preds = %for.body44, %if.entry52
  %132 = phi i64 [ %116, %for.body44 ], [ %.pre200, %if.entry52 ]
  %133 = phi ptr [ %115, %for.body44 ], [ %.pre, %if.entry52 ]
  %134 = phi ptr [ %110, %for.body44 ], [ %129, %if.entry52 ]
  %135 = phi i64 [ %109, %for.body44 ], [ %128, %if.entry52 ]
  %136 = add nuw nsw i64 %i1.0197, 1
  %137 = icmp slt i64 %136, %132
  br i1 %137, label %for.body44, label %for.end46.loopexit

if.entry57:                                       ; preds = %2
  %memberidx60 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %138 = load ptr, ptr %memberidx60, align 8
  %139 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %139, align 8
  %140 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %140, align 8
  %memberidx.i.i174 = getelementptr inbounds %string, ptr %140, i64 0, i32 1
  store ptr %139, ptr %memberidx.i.i174, align 8
  %memberidx1.i.i175 = getelementptr inbounds %string, ptr %140, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i175, align 4
  %memberidx2.i.i176 = getelementptr inbounds %string, ptr %140, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i176, align 4
  %memberidx.i177 = getelementptr inbounds %string, ptr %138, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i177, align 4
  %142 = add nuw i64 %141, 1
  %143 = trunc i64 %142 to i32
  %144 = tail call ptr @malloc(i32 %143)
  %memberidx2.i179 = getelementptr inbounds %string, ptr %138, i64 0, i32 1
  %145 = load ptr, ptr %memberidx2.i179, align 8
  %146 = load i64, ptr %memberidx.i177, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %144, ptr align 8 %145, i64 %146, i1 false)
  %147 = getelementptr inbounds i8, ptr %144, i64 %146
  %148 = load i8, ptr %139, align 8
  store i8 %148, ptr %147, align 8
  %149 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %149, align 8
  %memberidx.i.i181 = getelementptr inbounds %string, ptr %149, i64 0, i32 1
  store ptr %144, ptr %memberidx.i.i181, align 8
  %memberidx1.i.i182 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  store i64 %142, ptr %memberidx1.i.i182, align 4
  %memberidx2.i.i183 = getelementptr inbounds %string, ptr %149, i64 0, i32 3
  store i64 %142, ptr %memberidx2.i.i183, align 4
  %memberidx66 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %150 = load ptr, ptr %memberidx66, align 8
  %memberidx67198 = getelementptr inbounds %Array_Type_, ptr %150, i64 0, i32 2
  %151 = load i64, ptr %memberidx67198, align 4
  %152 = icmp sgt i64 %151, 0
  br i1 %152, label %for.body63, label %for.end65

for.body63:                                       ; preds = %if.entry57, %for.body63
  %153 = phi ptr [ %162, %for.body63 ], [ %144, %if.entry57 ]
  %154 = phi i64 [ %161, %for.body63 ], [ %142, %if.entry57 ]
  %155 = phi ptr [ %167, %for.body63 ], [ %150, %if.entry57 ]
  %x.0199 = phi i64 [ %166, %for.body63 ], [ 0, %if.entry57 ]
  %memberidx.i184 = getelementptr inbounds %Array_Type_, ptr %155, i64 0, i32 1
  %156 = load ptr, ptr %memberidx.i184, align 8
  %157 = getelementptr inbounds ptr, ptr %156, i64 %x.0199
  %158 = load ptr, ptr %157, align 8
  %159 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %158)
  %memberidx1.i186 = getelementptr inbounds %string, ptr %159, i64 0, i32 2
  %160 = load i64, ptr %memberidx1.i186, align 4
  %161 = add nuw i64 %160, %154
  %162 = tail call ptr @realloc(ptr %153, i64 %161)
  store ptr %162, ptr %memberidx.i.i181, align 8
  %163 = getelementptr inbounds i8, ptr %162, i64 %154
  %memberidx6.i188 = getelementptr inbounds %string, ptr %159, i64 0, i32 1
  %164 = load ptr, ptr %memberidx6.i188, align 8
  %165 = load i64, ptr %memberidx1.i186, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %163, ptr align 8 %164, i64 %165, i1 false)
  store i64 %161, ptr %memberidx1.i.i182, align 4
  %166 = add nuw nsw i64 %x.0199, 1
  %167 = load ptr, ptr %memberidx66, align 8
  %memberidx67 = getelementptr inbounds %Array_Type_, ptr %167, i64 0, i32 2
  %168 = load i64, ptr %memberidx67, align 4
  %169 = icmp slt i64 %166, %168
  br i1 %169, label %for.body63, label %for.end65

for.end65:                                        ; preds = %for.body63, %if.entry57
  %170 = phi ptr [ %144, %if.entry57 ], [ %162, %for.body63 ]
  %171 = phi i64 [ %142, %if.entry57 ], [ %161, %for.body63 ]
  %172 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %172, align 8
  %173 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %173, align 8
  %memberidx.i.i157 = getelementptr inbounds %string, ptr %173, i64 0, i32 1
  store ptr %172, ptr %memberidx.i.i157, align 8
  %memberidx1.i.i158 = getelementptr inbounds %string, ptr %173, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i158, align 4
  %memberidx2.i.i159 = getelementptr inbounds %string, ptr %173, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i159, align 4
  %174 = add nuw i64 %171, 1
  %175 = trunc i64 %174 to i32
  %176 = tail call ptr @malloc(i32 %175)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %176, ptr align 8 %170, i64 %171, i1 false)
  %177 = getelementptr inbounds i8, ptr %176, i64 %171
  %178 = load i8, ptr %172, align 8
  store i8 %178, ptr %177, align 8
  %179 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %179, align 8
  %memberidx.i.i147 = getelementptr inbounds %string, ptr %179, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i147, align 8
  %memberidx1.i.i148 = getelementptr inbounds %string, ptr %179, i64 0, i32 2
  store i64 %174, ptr %memberidx1.i.i148, align 4
  %memberidx2.i.i149 = getelementptr inbounds %string, ptr %179, i64 0, i32 3
  store i64 %174, ptr %memberidx2.i.i149, align 4
  br label %common.ret

if.entry70:                                       ; preds = %2
  %180 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %180, ptr noundef nonnull align 8 dereferenceable(9) @85, i64 9, i1 false)
  %181 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %181, align 8
  %memberidx.i.i135 = getelementptr inbounds %string, ptr %181, i64 0, i32 1
  store ptr %180, ptr %memberidx.i.i135, align 8
  %memberidx1.i.i136 = getelementptr inbounds %string, ptr %181, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %string, ptr %181, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i137, align 4
  br label %common.ret

if.entry74:                                       ; preds = %2
  %182 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %182, ptr noundef nonnull align 8 dereferenceable(6) @86, i64 6, i1 false)
  %183 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %183, align 8
  %memberidx.i.i122 = getelementptr inbounds %string, ptr %183, i64 0, i32 1
  store ptr %182, ptr %memberidx.i.i122, align 8
  %memberidx1.i.i123 = getelementptr inbounds %string, ptr %183, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i123, align 4
  %memberidx2.i.i124 = getelementptr inbounds %string, ptr %183, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i124, align 4
  br label %common.ret

ifend76:                                          ; preds = %2
  %184 = tail call fastcc ptr @dump_type(ptr nonnull %1, i1 false)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_Generic_, ptr %4, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = urem i64 %5, %6
  %8 = load ptr, ptr %4, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %.not.i = icmp eq ptr %10, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %3
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %11 = phi ptr [ %21, %else.i ], [ %8, %while.entry.i.preheader ]
  %12 = phi i64 [ %22, %else.i ], [ %6, %while.entry.i.preheader ]
  %13 = phi ptr [ %26, %else.i ], [ %10, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %24, %else.i ], [ %7, %while.entry.i.preheader ]
  %14 = load ptr, ptr %13, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %15, %16
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %18 = load ptr, ptr %memberidx3.i.i, align 8
  %19 = tail call i64 @memcmp(ptr %17, ptr %18, i64 %15)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre135 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre136.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre136.pre, i64 %hash.0.i
  %.pre137.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre137.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_string_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %21 = phi ptr [ %.pre135, %ifend.i.i.else.i_crit_edge ], [ %11, %while.entry.i ]
  %22 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %12, %while.entry.i ]
  %23 = add nuw i64 %hash.0.i, 1
  %24 = urem i64 %23, %22
  %25 = getelementptr inbounds ptr, ptr %21, i64 %24
  %26 = load ptr, ptr %25, align 8
  %.not26.i = icmp eq ptr %26, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_string_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre137.pre, i64 0, i32 1
  %27 = load ptr, ptr %memberidx11.i, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %3, %while.end.i, %Map_string_Generic____getitem__.exit, %ifend23, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %150, %ifend23 ], [ null, %Map_string_Generic____getitem__.exit ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_Generic____getitem__.exit
  %memberidx1 = getelementptr inbounds %Generic, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %29, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_GenericParameterNode_, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx3, align 4
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 2
  %32 = load i64, ptr %memberidx4, align 4
  %.not = icmp eq i64 %31, %32
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %ifend
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @102, i64 %31, i64 %32)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i82 = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i82, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %36, i64 0, i32 3
  store i64 %34, ptr %memberidx2.i, align 4
  %memberidx.i83 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %37, i64 0, i32 6
  %38 = load ptr, ptr %memberidx1.i84, align 8
  %39 = call ptr @malloc(i32 24)
  store i64 5, ptr %39, align 4
  %memberidx1.i.i85 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i85, align 8
  %memberidx2.i.i86 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i86, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %memberidx.i.i87, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 3
  %41 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i88 = icmp slt i64 %40, %41
  br i1 %.not.i.i88, label %if.entry5.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry5.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry5
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %.pre139 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry5
  %42 = shl nuw i64 %41, 1
  store i64 %42, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %43 = load ptr, ptr %memberidx2.i.i.i, align 8
  %44 = shl i64 %41, 4
  %45 = call ptr @realloc(ptr %43, i64 %44)
  store ptr %45, ptr %memberidx2.i.i.i, align 8
  %.pre138 = load i64, ptr %memberidx.i.i87, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry5.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %46 = phi ptr [ %.pre139, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %45, %if.entry.i.i ]
  %47 = phi i64 [ %40, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %.pre138, %if.entry.i.i ]
  %48 = add nsw i64 %47, 1
  store i64 %48, ptr %memberidx.i.i87, align 4
  %49 = getelementptr inbounds ptr, ptr %46, i64 %47
  store ptr %39, ptr %49, align 8
  br label %common.ret

ifend7:                                           ; preds = %ifend
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %50 = load ptr, ptr %memberidx10, align 8
  %51 = load ptr, ptr %0, align 8
  %memberidx1.i.i90 = getelementptr inbounds %Program, ptr %51, i64 0, i32 1
  %52 = load ptr, ptr %memberidx1.i.i90, align 8
  %memberidx.i.i.i91 = getelementptr inbounds %Array_Module_, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i.i91, align 8
  %54 = load ptr, ptr %53, align 8
  %memberidx1.i92 = getelementptr inbounds %Module, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i92, align 8
  store ptr %55, ptr %memberidx10, align 8
  %56 = load i64, ptr %55, align 4
  %57 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %56)
  %memberidx2.i94 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 5
  %58 = load ptr, ptr %memberidx10, align 8
  store ptr %58, ptr %memberidx2.i94, align 8
  %59 = load ptr, ptr %0, align 8
  %60 = load ptr, ptr %memberidx10, align 8
  %memberidx.i.i.i96 = getelementptr inbounds %Program, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i.i96, align 8
  %62 = load i64, ptr %60, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx2.i.i.i97 = getelementptr inbounds %Module, ptr %65, i64 0, i32 7
  %66 = load ptr, ptr %memberidx2.i.i.i97, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %60, i64 0, i32 1
  %67 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %70, i64 0, i32 7
  %71 = load ptr, ptr %memberidx4.i, align 8
  %72 = load ptr, ptr %57, align 8
  %memberidx.i.i98 = getelementptr inbounds %Array_ScopeId_, ptr %71, i64 0, i32 2
  %73 = load i64, ptr %memberidx.i.i98, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %71, i64 0, i32 3
  %74 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i99 = icmp slt i64 %73, %74
  br i1 %.not.i.i99, label %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i100

ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %ifend7
  %memberidx4.i.i101.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %71, i64 0, i32 1
  %.pre141 = load ptr, ptr %memberidx4.i.i101.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i100:                                  ; preds = %ifend7
  %75 = shl nuw i64 %74, 1
  store i64 %75, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %71, i64 0, i32 1
  %76 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %77 = shl i64 %74, 4
  %78 = tail call ptr @realloc(ptr %76, i64 %77)
  store ptr %78, ptr %memberidx2.i.i13.i, align 8
  %.pre140 = load i64, ptr %memberidx.i.i98, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i100
  %79 = phi ptr [ %.pre141, %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %78, %if.entry.i.i100 ]
  %80 = phi i64 [ %73, %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre140, %if.entry.i.i100 ]
  %81 = add nsw i64 %80, 1
  store i64 %81, ptr %memberidx.i.i98, align 4
  %82 = getelementptr inbounds ptr, ptr %79, i64 %80
  store ptr %72, ptr %82, align 8
  %83 = tail call ptr @malloc(i32 0)
  %84 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i.i102 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i.i102, align 8
  %memberidx1.i.i103 = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i103, i8 0, i64 16, i1 false)
  %85 = load i64, ptr %memberidx3, align 4
  %86 = icmp sgt i64 %85, 0
  br i1 %86, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx.i105 = getelementptr inbounds %Array_GenericParameterNode_, ptr %30, i64 0, i32 1
  %memberidx.i106 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 1
  %memberidx17 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %i.0134 = phi i64 [ 0, %for.body.lr.ph ], [ %115, %for.body ]
  %87 = load ptr, ptr %memberidx.i105, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %i.0134
  %89 = load ptr, ptr %88, align 8
  %90 = load ptr, ptr %89, align 8
  %memberidx13 = getelementptr inbounds %IdentifierToken, ptr %90, i64 0, i32 2
  %91 = load ptr, ptr %memberidx13, align 8
  %92 = load ptr, ptr %memberidx.i106, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %i.0134
  %94 = load ptr, ptr %93, align 8
  %95 = load i64, ptr %94, align 4
  %96 = icmp eq i64 %95, 20
  %memberidx15 = getelementptr inbounds %GenericType, ptr %94, i64 0, i32 3
  %spec.select = select i1 %96, ptr %memberidx15, ptr %93
  %ternary = load ptr, ptr %spec.select, align 8
  %97 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %98 = load ptr, ptr %97, align 8
  %memberidx16 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx16, align 8
  %100 = call ptr %99(ptr nonnull %97)
  %101 = alloca ptr, align 8
  %102 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %101, ptr nonnull @103, ptr %100)
  %103 = load ptr, ptr %101, align 8
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %104, align 8
  %memberidx.i112 = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  store ptr %103, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  store i64 %102, ptr %memberidx1.i113, align 4
  %memberidx2.i114 = getelementptr inbounds %string, ptr %104, i64 0, i32 3
  store i64 %102, ptr %memberidx2.i114, align 4
  tail call void @free(ptr %100)
  %105 = load i64, ptr %memberidx1.i.i103, align 4
  %106 = add nuw i64 %105, %102
  %107 = load ptr, ptr %memberidx.i.i102, align 8
  %108 = call ptr @realloc(ptr %107, i64 %106)
  store ptr %108, ptr %memberidx.i.i102, align 8
  %109 = load i64, ptr %memberidx1.i.i103, align 4
  %110 = getelementptr inbounds i8, ptr %108, i64 %109
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %110, ptr align 8 %103, i64 %102, i1 false)
  store i64 %106, ptr %memberidx1.i.i103, align 4
  %111 = load ptr, ptr %memberidx17, align 8
  %112 = load ptr, ptr %memberidx.i106, align 8
  %113 = getelementptr inbounds ptr, ptr %112, i64 %i.0134
  %114 = load ptr, ptr %113, align 8
  call fastcc void @Map_string_Type____setitem__(ptr %111, ptr %91, ptr %114)
  %115 = add nuw nsw i64 %i.0134, 1
  %116 = load i64, ptr %memberidx3, align 4
  %117 = icmp slt i64 %115, %116
  br i1 %117, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %TypeChecker_create_child_scope_within_current_scope.exit
  %118 = load ptr, ptr %1, align 8
  %memberidx18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %118, i64 0, i32 5
  %119 = load ptr, ptr %memberidx18, align 8
  %120 = call ptr %119(ptr nonnull %1)
  %121 = load ptr, ptr %84, align 8
  %memberidx19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %121, i64 0, i32 5
  %122 = load ptr, ptr %memberidx19, align 8
  %123 = call ptr %122(ptr nonnull %84)
  %124 = alloca ptr, align 8
  %125 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %124, ptr nonnull @104, ptr %120, ptr %123)
  %126 = load ptr, ptr %124, align 8
  %127 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i107 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i107, align 8
  %memberidx1.i108 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 %125, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 %125, ptr %memberidx2.i109, align 4
  tail call void @free(ptr %120)
  tail call void @free(ptr %123)
  %128 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %127)
  %129 = load i64, ptr %128, align 4
  %130 = icmp eq i64 %129, 21
  br i1 %130, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %for.end
  %131 = alloca %IdentifierToken, align 8
  %132 = load ptr, ptr %memberidx1, align 8
  %133 = load ptr, ptr %132, align 8
  %memberidx26 = getelementptr inbounds %Token, ptr %133, i64 0, i32 1
  %134 = load ptr, ptr %memberidx26, align 8
  store i64 53, ptr %131, align 8
  %memberidx1.i.i119 = getelementptr inbounds %Token, ptr %131, i64 0, i32 1
  store ptr %134, ptr %memberidx1.i.i119, align 8
  %memberidx.i120 = getelementptr inbounds %IdentifierToken, ptr %131, i64 0, i32 2
  store ptr %127, ptr %memberidx.i120, align 8
  %135 = alloca %ClassDeclarationNode, align 8
  store ptr %131, ptr %135, align 8
  %memberidx1.i121 = getelementptr inbounds %ClassDeclarationNode, ptr %135, i64 0, i32 3
  %136 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FieldNode_, ptr %136, align 8
  %memberidx.i.i122 = getelementptr inbounds %Array_FieldNode_, ptr %136, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i122, align 4
  %memberidx1.i.i123 = getelementptr inbounds %Array_FieldNode_, ptr %136, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i123, align 4
  %memberidx2.i.i124 = getelementptr inbounds %Array_FieldNode_, ptr %136, i64 0, i32 1
  %137 = call ptr @malloc(i32 64)
  store ptr %137, ptr %memberidx2.i.i124, align 8
  store i64 0, ptr %memberidx.i.i122, align 4
  %memberidx4.i125 = getelementptr inbounds %ClassDeclarationNode, ptr %135, i64 0, i32 4
  %138 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MethodNode_, ptr %138, align 8
  %memberidx.i15.i = getelementptr inbounds %Array_MethodNode_, ptr %138, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_MethodNode_, ptr %138, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i, align 4
  %memberidx2.i17.i = getelementptr inbounds %Array_MethodNode_, ptr %138, i64 0, i32 1
  %139 = call ptr @malloc(i32 64)
  store ptr %139, ptr %memberidx2.i17.i, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx7.i = getelementptr inbounds %ClassDeclarationNode, ptr %135, i64 0, i32 1
  %140 = call ptr @malloc(i32 32)
  store ptr @VTableArray_GenericParameterNode_, ptr %140, align 8
  %memberidx.i18.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %140, i64 0, i32 2
  store i64 0, ptr %memberidx.i18.i, align 4
  %memberidx1.i19.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %140, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19.i, align 4
  %memberidx2.i20.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %140, i64 0, i32 1
  %141 = call ptr @malloc(i32 64)
  store ptr %141, ptr %memberidx2.i20.i, align 8
  store i64 0, ptr %memberidx.i18.i, align 4
  store ptr %140, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %ClassDeclarationNode, ptr %135, i64 0, i32 2
  %142 = load ptr, ptr %memberidx1, align 8
  %memberidx29 = getelementptr inbounds %ClassDeclarationNode, ptr %142, i64 0, i32 2
  %143 = load ptr, ptr %memberidx29, align 8
  store ptr %143, ptr %memberidx10.i, align 8
  %144 = load ptr, ptr %memberidx1, align 8
  %memberidx32 = getelementptr inbounds %ClassDeclarationNode, ptr %144, i64 0, i32 3
  %145 = load ptr, ptr %memberidx32, align 8
  store ptr %145, ptr %memberidx1.i121, align 8
  %146 = load ptr, ptr %memberidx1, align 8
  %memberidx35 = getelementptr inbounds %ClassDeclarationNode, ptr %146, i64 0, i32 4
  %147 = load ptr, ptr %memberidx35, align 8
  store ptr %147, ptr %memberidx4.i125, align 8
  %148 = load ptr, ptr %57, align 8
  store ptr %148, ptr %memberidx10, align 8
  call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr nonnull %135)
  call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr nonnull %135)
  %149 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %127)
  br label %ifend23

ifend23:                                          ; preds = %for.end, %if.entry21
  %possible_type.0 = phi ptr [ %149, %if.entry21 ], [ %128, %for.end ]
  store ptr %50, ptr %memberidx10, align 8
  call fastcc void @Scope___del__(ptr nonnull %57)
  tail call void @free(ptr nonnull %57)
  %150 = tail call ptr @malloc(i32 32)
  store i64 20, ptr %150, align 4
  %memberidx.i127 = getelementptr inbounds %GenericType, ptr %150, i64 0, i32 1
  store ptr %1, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %GenericType, ptr %150, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i128, align 8
  %memberidx2.i129 = getelementptr inbounds %GenericType, ptr %150, i64 0, i32 3
  store ptr %possible_type.0, ptr %memberidx2.i129, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_enum_within_module(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 32)
  %memberidx.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 2
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumField_, ptr %4, align 8
  %memberidx.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %4, ptr %memberidx.i, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 2048)
  store ptr %7, ptr %6, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i61 = phi i64 [ 0, %2 ], [ %10, %for.body.i.i ]
  %8 = load ptr, ptr %6, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0.i.i61
  store ptr null, ptr %9, align 8
  %10 = add nuw nsw i64 %i.0.i.i61, 1
  %11 = icmp ult i64 %i.0.i.i61, 255
  br i1 %11, label %for.body.i.i, label %Enum_constructor.exit

Enum_constructor.exit:                            ; preds = %for.body.i.i
  %memberidx3.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 3
  %memberidx2.i5.i = getelementptr inbounds %Map_string_PropId_, ptr %6, i64 0, i32 1
  store i64 256, ptr %memberidx2.i5.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_PropId_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %6, ptr %memberidx3.i, align 8
  %12 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = load ptr, ptr %0, align 8
  %memberidx.i.i34 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %15 = load ptr, ptr %memberidx.i.i34, align 8
  %16 = load i64, ptr %15, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %14, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %16
  %20 = load ptr, ptr %19, align 8
  %memberidx1.i = getelementptr inbounds %Module, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i, align 8
  %22 = load i64, ptr %21, align 4
  %23 = getelementptr inbounds ptr, ptr %18, i64 %22
  %24 = load ptr, ptr %23, align 8
  %memberidx2.i.i35 = getelementptr inbounds %Module, ptr %24, i64 0, i32 7
  %25 = load ptr, ptr %memberidx2.i.i35, align 8
  %memberidx3.i.i36 = getelementptr inbounds %ScopeId, ptr %21, i64 0, i32 1
  %26 = load i64, ptr %memberidx3.i.i36, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i5.i.i, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  %29 = load ptr, ptr %28, align 8
  %memberidx2 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 1
  store ptr %13, ptr %memberidx2, align 8
  %30 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %13)
  %31 = load i64, ptr %30, align 4
  %.not = icmp eq i64 %31, 21
  br i1 %.not, label %ifend, label %if.entry

common.ret:                                       ; preds = %Array_Enum____sl__.exit, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Enum_constructor.exit
  %32 = load ptr, ptr %13, align 8
  %memberidx4 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx4, align 8
  %34 = tail call ptr %33(ptr nonnull %13)
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @101, ptr %34)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i37 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i37, align 8
  %memberidx1.i38 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i39, align 4
  tail call void @free(ptr %34)
  %39 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %39, i64 0, i32 1
  %40 = load ptr, ptr %memberidx6, align 8
  %memberidx.i40 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %41 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %41, i64 0, i32 6
  %42 = load ptr, ptr %memberidx1.i41, align 8
  %43 = call ptr @malloc(i32 24)
  store i64 1, ptr %43, align 4
  %memberidx1.i.i42 = getelementptr inbounds %FloError, ptr %43, i64 0, i32 2
  store ptr %40, ptr %memberidx1.i.i42, align 8
  %memberidx2.i.i43 = getelementptr inbounds %FloError, ptr %43, i64 0, i32 1
  store ptr %38, ptr %memberidx2.i.i43, align 8
  %memberidx.i.i44 = getelementptr inbounds %Array_FloError_, ptr %42, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i44, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %42, i64 0, i32 3
  %45 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %44, %45
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %42, i64 0, i32 1
  %.pre62 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %46 = shl nuw i64 %45, 1
  store i64 %46, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %42, i64 0, i32 1
  %47 = load ptr, ptr %memberidx2.i.i.i, align 8
  %48 = shl i64 %45, 4
  %49 = call ptr @realloc(ptr %47, i64 %48)
  store ptr %49, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i44, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %50 = phi ptr [ %.pre62, %if.entry.TypeChecker_error.exit_crit_edge ], [ %49, %if.entry.i.i ]
  %51 = phi i64 [ %44, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr %memberidx.i.i44, align 4
  %53 = getelementptr inbounds ptr, ptr %50, i64 %51
  store ptr %43, ptr %53, align 8
  br label %common.ret

ifend:                                            ; preds = %Enum_constructor.exit
  %54 = tail call ptr @malloc(i32 24)
  %55 = load ptr, ptr %memberidx.i.i34, align 8
  %56 = load i64, ptr %55, align 4
  %57 = load ptr, ptr %0, align 8
  %memberidx1.i.i47 = getelementptr inbounds %Program, ptr %57, i64 0, i32 1
  %58 = load ptr, ptr %memberidx1.i.i47, align 8
  %memberidx.i.i.i48 = getelementptr inbounds %Array_Module_, ptr %58, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i.i.i48, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %56
  %61 = load ptr, ptr %60, align 8
  %memberidx10 = getelementptr inbounds %Module, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Enum_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx11, align 4
  store i64 %56, ptr %54, align 4
  %memberidx1.i.i49 = getelementptr inbounds %TypeId, ptr %54, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i49, align 4
  %memberidx2.i.i50 = getelementptr inbounds %TypeId, ptr %54, i64 0, i32 2
  store i64 %63, ptr %memberidx2.i.i50, align 4
  store ptr %54, ptr %3, align 8
  %64 = load i64, ptr %55, align 4
  %65 = load ptr, ptr %memberidx1.i.i47, align 8
  %memberidx.i.i.i53 = getelementptr inbounds %Array_Module_, ptr %65, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i.i53, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %64
  %68 = load ptr, ptr %67, align 8
  %memberidx12 = getelementptr inbounds %Module, ptr %68, i64 0, i32 6
  %69 = load ptr, ptr %memberidx12, align 8
  %memberidx.i54 = getelementptr inbounds %Array_Enum_, ptr %69, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i54, align 4
  %memberidx1.i55 = getelementptr inbounds %Array_Enum_, ptr %69, i64 0, i32 3
  %71 = load i64, ptr %memberidx1.i55, align 4
  %.not.i = icmp slt i64 %70, %71
  br i1 %.not.i, label %ifend.Array_Enum____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_Enum____sl__.exit_crit_edge:          ; preds = %ifend
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Enum_, ptr %69, i64 0, i32 1
  %.pre64 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Enum____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx1.i55, align 4
  %memberidx2.i.i57 = getelementptr inbounds %Array_Enum_, ptr %69, i64 0, i32 1
  %73 = load ptr, ptr %memberidx2.i.i57, align 8
  %74 = shl i64 %71, 4
  %75 = tail call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %memberidx2.i.i57, align 8
  %.pre63 = load i64, ptr %memberidx.i54, align 4
  br label %Array_Enum____sl__.exit

Array_Enum____sl__.exit:                          ; preds = %ifend.Array_Enum____sl__.exit_crit_edge, %if.entry.i
  %76 = phi ptr [ %.pre64, %ifend.Array_Enum____sl__.exit_crit_edge ], [ %75, %if.entry.i ]
  %77 = phi i64 [ %70, %ifend.Array_Enum____sl__.exit_crit_edge ], [ %.pre63, %if.entry.i ]
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr %memberidx.i54, align 4
  %79 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %3, ptr %79, align 8
  %memberidx13 = getelementptr inbounds %Scope, ptr %29, i64 0, i32 4
  %80 = load ptr, ptr %memberidx13, align 8
  %81 = load ptr, ptr %memberidx2, align 8
  %82 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %80, ptr %81, ptr %82)
  %memberidx16 = getelementptr inbounds %Scope, ptr %29, i64 0, i32 1
  %83 = load ptr, ptr %memberidx16, align 8
  %84 = load ptr, ptr %memberidx2, align 8
  %85 = tail call ptr @malloc(i32 24)
  %86 = load ptr, ptr %3, align 8
  %87 = load i64, ptr %86, align 4
  %memberidx1.i58 = getelementptr inbounds %TypeId, ptr %86, i64 0, i32 2
  %88 = load i64, ptr %memberidx1.i58, align 4
  store i64 4, ptr %85, align 4
  %memberidx1.i.i59 = getelementptr inbounds %VarId, ptr %85, i64 0, i32 1
  store i64 %87, ptr %memberidx1.i.i59, align 4
  %memberidx2.i.i60 = getelementptr inbounds %VarId, ptr %85, i64 0, i32 2
  store i64 %88, ptr %memberidx2.i.i60, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %83, ptr %84, ptr nonnull %85)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_within_module(ptr %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp ne i64 %6, 21
  %memberidx3 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %4)
  %memberidx.i98 = getelementptr inbounds %Map_string_Generic_, ptr %8, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i98, align 4
  %11 = urem i64 %9, %10
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %.not.i99 = icmp eq ptr %14, null
  br i1 %.not.i99, label %Map_string_Generic____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %2
  %memberidx1.i.i101 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i104 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %15 = phi ptr [ %25, %else.i ], [ %12, %while.entry.i.preheader ]
  %16 = phi i64 [ %26, %else.i ], [ %10, %while.entry.i.preheader ]
  %17 = phi ptr [ %30, %else.i ], [ %14, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %11, %while.entry.i.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i.i100 = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i.i100, align 4
  %20 = load i64, ptr %memberidx1.i.i101, align 4
  %.not.i.i102 = icmp eq i64 %19, %20
  br i1 %.not.i.i102, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i103 = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i.i103, align 8
  %22 = load ptr, ptr %memberidx3.i.i104, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i98, align 4
  %.pre110 = load ptr, ptr %8, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre111.pre = load ptr, ptr %8, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre111.pre, i64 %hash.0.i
  %.pre112.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre112.pre, null
  br i1 %.not25.i, label %Map_string_Generic____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre110, %ifend.i.i.else.i_crit_edge ], [ %15, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_string_Generic____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i105 = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre112.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i105, align 8
  %phi.cmp = icmp ne ptr %31, null
  br label %Map_string_Generic____getitem__.exit

Map_string_Generic____getitem__.exit:             ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry7.i ], [ false, %while.end.i ], [ false, %2 ], [ false, %else.i ]
  %32 = or i1 %7, %common.ret.op.i
  br i1 %32, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry17, %Array_Class____sl__.exit, %if.entry9, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Map_string_Generic____getitem__.exit
  %33 = load ptr, ptr %4, align 8
  %memberidx4 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %33, i64 0, i32 5
  %34 = load ptr, ptr %memberidx4, align 8
  %35 = tail call ptr %34(ptr nonnull %4)
  %36 = alloca ptr, align 8
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %36, ptr nonnull @101, ptr %35)
  %38 = load ptr, ptr %36, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i95 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i95, align 8
  %memberidx1.i96 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx1.i96, align 4
  %memberidx2.i97 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 %37, ptr %memberidx2.i97, align 4
  tail call void @free(ptr %35)
  %40 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx6, align 8
  %memberidx.i89 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %42 = load ptr, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i90, align 8
  %44 = call ptr @malloc(i32 24)
  store i64 1, ptr %44, align 4
  %memberidx1.i.i91 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i91, align 8
  %memberidx2.i.i92 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i92, align 8
  %memberidx.i.i93 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i93, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %45, %46
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %.pre116 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i.i, align 8
  %49 = shl i64 %46, 4
  %50 = call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i.i, align 8
  %.pre115 = load i64, ptr %memberidx.i.i93, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %51 = phi ptr [ %.pre116, %if.entry.TypeChecker_error.exit_crit_edge ], [ %50, %if.entry.i.i ]
  %52 = phi i64 [ %45, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre115, %if.entry.i.i ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i.i93, align 4
  %54 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %54, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_Generic____getitem__.exit
  %memberidx7 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 1
  %55 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_GenericParameterNode_, ptr %55, i64 0, i32 2
  %56 = load i64, ptr %memberidx8, align 4
  %57 = icmp sgt i64 %56, 0
  br i1 %57, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend
  %memberidx12 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 true, ptr %memberidx12, align 1
  %58 = load ptr, ptr %memberidx3, align 8
  %59 = tail call ptr @malloc(i32 16)
  %memberidx14 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %60 = load ptr, ptr %memberidx14, align 8
  %61 = load i64, ptr %60, align 4
  store i64 %61, ptr %59, align 4
  %memberidx1.i88 = getelementptr inbounds %Generic, ptr %59, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i88, align 8
  tail call fastcc void @Map_string_Generic____setitem__(ptr %58, ptr %4, ptr nonnull %59)
  br label %common.ret

ifend11:                                          ; preds = %ifend
  %62 = tail call ptr @malloc(i32 81)
  %memberidx.i81 = getelementptr inbounds %Class, ptr %62, i64 0, i32 3
  store ptr null, ptr %memberidx.i81, align 8
  %memberidx2.i83 = getelementptr inbounds %Class, ptr %62, i64 0, i32 8
  %memberidx3.i = getelementptr inbounds %Class, ptr %62, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx2.i83, i8 0, i64 16, i1 false)
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassField_, ptr %63, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_ClassField_, ptr %63, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i84, align 4
  %memberidx1.i.i85 = getelementptr inbounds %Array_ClassField_, ptr %63, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i85, align 4
  %memberidx2.i.i86 = getelementptr inbounds %Array_ClassField_, ptr %63, i64 0, i32 1
  %64 = tail call ptr @malloc(i32 64)
  store ptr %64, ptr %memberidx2.i.i86, align 8
  store i64 0, ptr %memberidx.i.i84, align 4
  store ptr %63, ptr %memberidx3.i, align 8
  %memberidx6.i = getelementptr inbounds %Class, ptr %62, i64 0, i32 5
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassMethod_, ptr %65, align 8
  %memberidx.i19.i = getelementptr inbounds %Array_ClassMethod_, ptr %65, i64 0, i32 2
  store i64 0, ptr %memberidx.i19.i, align 4
  %memberidx1.i20.i = getelementptr inbounds %Array_ClassMethod_, ptr %65, i64 0, i32 3
  store i64 8, ptr %memberidx1.i20.i, align 4
  %memberidx2.i21.i = getelementptr inbounds %Array_ClassMethod_, ptr %65, i64 0, i32 1
  %66 = tail call ptr @malloc(i32 64)
  store ptr %66, ptr %memberidx2.i21.i, align 8
  store i64 0, ptr %memberidx.i19.i, align 4
  store ptr %65, ptr %memberidx6.i, align 8
  %67 = tail call ptr @malloc(i32 24)
  %68 = tail call ptr @malloc(i32 2048)
  store ptr %68, ptr %67, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend11, %for.body.i.i
  %i.0.i.i109 = phi i64 [ 0, %ifend11 ], [ %71, %for.body.i.i ]
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %i.0.i.i109
  store ptr null, ptr %70, align 8
  %71 = add nuw nsw i64 %i.0.i.i109, 1
  %72 = icmp ult i64 %i.0.i.i109, 255
  br i1 %72, label %for.body.i.i, label %Map_string_PropId__constructor.exit.i

Map_string_PropId__constructor.exit.i:            ; preds = %for.body.i.i
  %memberidx9.i = getelementptr inbounds %Class, ptr %62, i64 0, i32 6
  %memberidx2.i22.i = getelementptr inbounds %Map_string_PropId_, ptr %67, i64 0, i32 1
  store i64 256, ptr %memberidx2.i22.i, align 4
  %memberidx3.i.i87 = getelementptr inbounds %Map_string_PropId_, ptr %67, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i87, align 4
  store ptr %67, ptr %memberidx9.i, align 8
  %73 = tail call ptr @malloc(i32 24)
  %74 = tail call ptr @malloc(i32 2048)
  store ptr %74, ptr %73, align 8
  br label %for.body.i25.i

for.body.i25.i:                                   ; preds = %Map_string_PropId__constructor.exit.i, %for.body.i25.i
  %i.0.i23.i108 = phi i64 [ 0, %Map_string_PropId__constructor.exit.i ], [ %77, %for.body.i25.i ]
  %75 = load ptr, ptr %73, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %i.0.i23.i108
  store ptr null, ptr %76, align 8
  %77 = add nuw nsw i64 %i.0.i23.i108, 1
  %78 = icmp ult i64 %i.0.i23.i108, 255
  br i1 %78, label %for.body.i25.i, label %Class_constructor.exit

Class_constructor.exit:                           ; preds = %for.body.i25.i
  %memberidx10.i = getelementptr inbounds %Class, ptr %62, i64 0, i32 7
  %memberidx2.i26.i = getelementptr inbounds %Map_string_PropId_, ptr %73, i64 0, i32 1
  store i64 256, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %Map_string_PropId_, ptr %73, i64 0, i32 2
  store i64 0, ptr %memberidx3.i27.i, align 4
  store ptr %73, ptr %memberidx10.i, align 8
  %memberidx11.i = getelementptr inbounds %Class, ptr %62, i64 0, i32 10
  store i1 false, ptr %memberidx11.i, align 1
  %79 = load ptr, ptr %0, align 8
  %memberidx.i.i77 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %80 = load ptr, ptr %memberidx.i.i77, align 8
  %81 = load i64, ptr %80, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %79, i64 0, i32 1
  %82 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %81
  %85 = load ptr, ptr %84, align 8
  %memberidx1.i78 = getelementptr inbounds %Module, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx1.i78, align 8
  %87 = load i64, ptr %86, align 4
  %88 = getelementptr inbounds ptr, ptr %83, i64 %87
  %89 = load ptr, ptr %88, align 8
  %memberidx2.i.i80 = getelementptr inbounds %Module, ptr %89, i64 0, i32 7
  %90 = load ptr, ptr %memberidx2.i.i80, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %86, i64 0, i32 1
  %91 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %90, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i5.i.i, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %91
  %94 = load ptr, ptr %93, align 8
  %memberidx16 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 2
  %95 = load ptr, ptr %memberidx16, align 8
  %.not = icmp eq ptr %95, null
  %memberidx25 = getelementptr inbounds %Class, ptr %62, i64 0, i32 2
  br i1 %.not, label %else18, label %if.entry17

if.entry17:                                       ; preds = %Class_constructor.exit
  %96 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %95)
  store ptr %96, ptr %memberidx25, align 8
  %memberidx.i75 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %97 = load ptr, ptr %memberidx.i75, align 8
  %memberidx1.i76 = getelementptr inbounds %Compiler, ptr %97, i64 0, i32 6
  %98 = load ptr, ptr %memberidx1.i76, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx2.i, align 4
  %100 = icmp sgt i64 %99, 0
  br i1 %100, label %common.ret, label %ifend19

else18:                                           ; preds = %Class_constructor.exit
  store ptr null, ptr %memberidx25, align 8
  br label %ifend19

ifend19:                                          ; preds = %if.entry17, %else18
  %memberidx26 = getelementptr inbounds %Class, ptr %62, i64 0, i32 1
  store ptr %4, ptr %memberidx26, align 8
  %101 = tail call ptr @malloc(i32 24)
  %102 = load ptr, ptr %memberidx.i.i77, align 8
  %103 = load i64, ptr %102, align 4
  %104 = load ptr, ptr %0, align 8
  %memberidx1.i.i73 = getelementptr inbounds %Program, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx1.i.i73, align 8
  %memberidx.i.i.i74 = getelementptr inbounds %Array_Module_, ptr %105, i64 0, i32 1
  %106 = load ptr, ptr %memberidx.i.i.i74, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %103
  %108 = load ptr, ptr %107, align 8
  %memberidx30 = getelementptr inbounds %Module, ptr %108, i64 0, i32 3
  %109 = load ptr, ptr %memberidx30, align 8
  %memberidx31 = getelementptr inbounds %Array_Class_, ptr %109, i64 0, i32 2
  %110 = load i64, ptr %memberidx31, align 4
  store i64 %103, ptr %101, align 4
  %memberidx1.i.i70 = getelementptr inbounds %TypeId, ptr %101, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i70, align 4
  %memberidx2.i.i71 = getelementptr inbounds %TypeId, ptr %101, i64 0, i32 2
  store i64 %110, ptr %memberidx2.i.i71, align 4
  store ptr %101, ptr %62, align 8
  %111 = load i64, ptr %102, align 4
  %112 = load ptr, ptr %memberidx1.i.i73, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %112, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i.i.i, align 8
  %114 = getelementptr inbounds ptr, ptr %113, i64 %111
  %115 = load ptr, ptr %114, align 8
  %memberidx32 = getelementptr inbounds %Module, ptr %115, i64 0, i32 3
  %116 = load ptr, ptr %memberidx32, align 8
  %memberidx.i = getelementptr inbounds %Array_Class_, ptr %116, i64 0, i32 2
  %117 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i66 = getelementptr inbounds %Array_Class_, ptr %116, i64 0, i32 3
  %118 = load i64, ptr %memberidx1.i66, align 4
  %.not.i = icmp slt i64 %117, %118
  br i1 %.not.i, label %ifend19.Array_Class____sl__.exit_crit_edge, label %if.entry.i

ifend19.Array_Class____sl__.exit_crit_edge:       ; preds = %ifend19
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Class_, ptr %116, i64 0, i32 1
  %.pre114 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Class____sl__.exit

if.entry.i:                                       ; preds = %ifend19
  %119 = shl nuw i64 %118, 1
  store i64 %119, ptr %memberidx1.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %Array_Class_, ptr %116, i64 0, i32 1
  %120 = load ptr, ptr %memberidx2.i.i67, align 8
  %121 = shl i64 %118, 4
  %122 = tail call ptr @realloc(ptr %120, i64 %121)
  store ptr %122, ptr %memberidx2.i.i67, align 8
  %.pre113 = load i64, ptr %memberidx.i, align 4
  br label %Array_Class____sl__.exit

Array_Class____sl__.exit:                         ; preds = %ifend19.Array_Class____sl__.exit_crit_edge, %if.entry.i
  %123 = phi ptr [ %.pre114, %ifend19.Array_Class____sl__.exit_crit_edge ], [ %122, %if.entry.i ]
  %124 = phi i64 [ %117, %ifend19.Array_Class____sl__.exit_crit_edge ], [ %.pre113, %if.entry.i ]
  %125 = add nsw i64 %124, 1
  store i64 %125, ptr %memberidx.i, align 4
  %126 = getelementptr inbounds ptr, ptr %123, i64 %124
  store ptr %62, ptr %126, align 8
  %memberidx33 = getelementptr inbounds %Scope, ptr %94, i64 0, i32 2
  %127 = load ptr, ptr %memberidx33, align 8
  %128 = load ptr, ptr %62, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %127, ptr %4, ptr %128)
  %memberidx35 = getelementptr inbounds %Scope, ptr %94, i64 0, i32 1
  %129 = load ptr, ptr %memberidx35, align 8
  %130 = tail call ptr @malloc(i32 24)
  %131 = load ptr, ptr %62, align 8
  %132 = load i64, ptr %131, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %131, i64 0, i32 2
  %133 = load i64, ptr %memberidx1.i, align 4
  store i64 3, ptr %130, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %130, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %130, i64 0, i32 2
  store i64 %133, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %129, ptr %4, ptr nonnull %130)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_function_within_module(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %Function, ptr %3, i64 0, i32 6
  %memberidx1 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 4
  %4 = load i1, ptr %memberidx1, align 1
  store i1 %4, ptr %memberidx.i, align 1
  %5 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Function, ptr %3, i64 0, i32 1
  store ptr %6, ptr %memberidx4, align 8
  %7 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %6)
  %.not.i = icmp eq ptr %7, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_create_child_scope_within_current_scope.exit, %Array_Function____sl__.exit, %TypeChecker_error.exit97, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %if.entry.i
  %10 = load ptr, ptr %6, align 8
  %memberidx5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = tail call ptr %11(ptr nonnull %6)
  %13 = alloca ptr, align 8
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %13, ptr nonnull @109, ptr %12)
  %15 = load ptr, ptr %13, align 8
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i74 = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i74, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i, align 4
  tail call void @free(ptr %12)
  %17 = load ptr, ptr %1, align 8
  %memberidx7 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx7, align 8
  %memberidx.i79 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %19 = load ptr, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 6
  %20 = load ptr, ptr %memberidx1.i80, align 8
  %21 = call ptr @malloc(i32 24)
  store i64 1, ptr %21, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i81 = getelementptr inbounds %FloError, ptr %21, i64 0, i32 1
  store ptr %16, ptr %memberidx2.i.i81, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i82, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 3
  %23 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %22, %23
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %.pre127 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %24 = shl nuw i64 %23, 1
  store i64 %24, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i.i, align 8
  %26 = shl i64 %23, 4
  %27 = call ptr @realloc(ptr %25, i64 %26)
  store ptr %27, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i82, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %28 = phi ptr [ %.pre127, %if.entry.TypeChecker_error.exit_crit_edge ], [ %27, %if.entry.i.i ]
  %29 = phi i64 [ %22, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %30 = add nsw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i82, align 4
  %31 = getelementptr inbounds ptr, ptr %28, i64 %29
  store ptr %21, ptr %31, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %32 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %6)
  %33 = load i64, ptr %32, align 4
  %.not = icmp eq i64 %33, 21
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend
  %34 = load ptr, ptr %6, align 8
  %memberidx12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx12, align 8
  %36 = tail call ptr %35(ptr nonnull %6)
  %37 = alloca ptr, align 8
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %37, ptr nonnull @110, ptr %36)
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i83 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 %38, ptr %memberidx2.i85, align 4
  tail call void @free(ptr %36)
  %41 = load ptr, ptr %1, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %41, i64 0, i32 1
  %42 = load ptr, ptr %memberidx14, align 8
  %memberidx.i86 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %43 = load ptr, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %43, i64 0, i32 6
  %44 = load ptr, ptr %memberidx1.i87, align 8
  %45 = call ptr @malloc(i32 24)
  store i64 1, ptr %45, align 4
  %memberidx1.i.i88 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 2
  store ptr %42, ptr %memberidx1.i.i88, align 8
  %memberidx2.i.i89 = getelementptr inbounds %FloError, ptr %45, i64 0, i32 1
  store ptr %40, ptr %memberidx2.i.i89, align 8
  %memberidx.i.i90 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i90, align 4
  %memberidx1.i2.i91 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 3
  %47 = load i64, ptr %memberidx1.i2.i91, align 4
  %.not.i.i92 = icmp slt i64 %46, %47
  br i1 %.not.i.i92, label %if.entry9.TypeChecker_error.exit97_crit_edge, label %if.entry.i.i95

if.entry9.TypeChecker_error.exit97_crit_edge:     ; preds = %if.entry9
  %memberidx4.i.i96.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 1
  %.pre129 = load ptr, ptr %memberidx4.i.i96.phi.trans.insert, align 8
  br label %TypeChecker_error.exit97

if.entry.i.i95:                                   ; preds = %if.entry9
  %48 = shl nuw i64 %47, 1
  store i64 %48, ptr %memberidx1.i2.i91, align 4
  %memberidx2.i.i.i94 = getelementptr inbounds %Array_FloError_, ptr %44, i64 0, i32 1
  %49 = load ptr, ptr %memberidx2.i.i.i94, align 8
  %50 = shl i64 %47, 4
  %51 = call ptr @realloc(ptr %49, i64 %50)
  store ptr %51, ptr %memberidx2.i.i.i94, align 8
  %.pre128 = load i64, ptr %memberidx.i.i90, align 4
  br label %TypeChecker_error.exit97

TypeChecker_error.exit97:                         ; preds = %if.entry9.TypeChecker_error.exit97_crit_edge, %if.entry.i.i95
  %52 = phi ptr [ %.pre129, %if.entry9.TypeChecker_error.exit97_crit_edge ], [ %51, %if.entry.i.i95 ]
  %53 = phi i64 [ %46, %if.entry9.TypeChecker_error.exit97_crit_edge ], [ %.pre128, %if.entry.i.i95 ]
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx.i.i90, align 4
  %55 = getelementptr inbounds ptr, ptr %52, i64 %53
  store ptr %45, ptr %55, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend
  %memberidx15 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %56 = load ptr, ptr %memberidx15, align 8
  %57 = load i64, ptr %56, align 4
  %58 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %57)
  %memberidx2.i99 = getelementptr inbounds %Scope, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx15, align 8
  store ptr %59, ptr %memberidx2.i99, align 8
  %60 = load ptr, ptr %0, align 8
  %61 = load ptr, ptr %memberidx15, align 8
  %memberidx.i.i.i101 = getelementptr inbounds %Program, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i.i101, align 8
  %63 = load i64, ptr %61, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx2.i.i.i102 = getelementptr inbounds %Module, ptr %66, i64 0, i32 7
  %67 = load ptr, ptr %memberidx2.i.i.i102, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %61, i64 0, i32 1
  %68 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx4.i103 = getelementptr inbounds %Scope, ptr %71, i64 0, i32 7
  %72 = load ptr, ptr %memberidx4.i103, align 8
  %73 = load ptr, ptr %58, align 8
  %memberidx.i.i104 = getelementptr inbounds %Array_ScopeId_, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i104, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %72, i64 0, i32 3
  %75 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i105 = icmp slt i64 %74, %75
  br i1 %.not.i.i105, label %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i106

ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %ifend11
  %memberidx4.i.i107.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %72, i64 0, i32 1
  %.pre131 = load ptr, ptr %memberidx4.i.i107.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i106:                                  ; preds = %ifend11
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %72, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %78 = shl i64 %75, 4
  %79 = tail call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %memberidx2.i.i13.i, align 8
  %.pre130 = load i64, ptr %memberidx.i.i104, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i106
  %80 = phi ptr [ %.pre131, %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %79, %if.entry.i.i106 ]
  %81 = phi i64 [ %74, %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre130, %if.entry.i.i106 ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i104, align 4
  %83 = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %83, align 8
  %84 = load ptr, ptr %58, align 8
  store ptr %84, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %Function, ptr %3, i64 0, i32 2
  %85 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionArg_, ptr %85, align 8
  %memberidx.i108 = getelementptr inbounds %Array_FunctionArg_, ptr %85, i64 0, i32 2
  store i64 0, ptr %memberidx.i108, align 4
  %memberidx1.i109 = getelementptr inbounds %Array_FunctionArg_, ptr %85, i64 0, i32 3
  store i64 8, ptr %memberidx1.i109, align 4
  %memberidx2.i110 = getelementptr inbounds %Array_FunctionArg_, ptr %85, i64 0, i32 1
  %86 = tail call ptr @malloc(i32 64)
  store ptr %86, ptr %memberidx2.i110, align 8
  store i64 0, ptr %memberidx.i108, align 4
  store ptr %85, ptr %memberidx18, align 8
  %memberidx21 = getelementptr inbounds %Function, ptr %3, i64 0, i32 4
  %memberidx22 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 1
  %87 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 3
  %88 = load ptr, ptr %memberidx23, align 8
  %89 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %87, ptr %88, ptr nonnull %85)
  store ptr %89, ptr %memberidx21, align 8
  %memberidx.i111 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %90 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %Compiler, ptr %90, i64 0, i32 6
  %91 = load ptr, ptr %memberidx1.i112, align 8
  %memberidx2.i113 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %92 = load i64, ptr %memberidx2.i113, align 4
  %93 = icmp sgt i64 %92, 0
  br i1 %93, label %common.ret, label %ifend27

ifend27:                                          ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %94 = tail call ptr @malloc(i32 24)
  %95 = load ptr, ptr %memberidx15, align 8
  %96 = load i64, ptr %95, align 4
  %97 = load ptr, ptr %0, align 8
  %memberidx1.i.i115 = getelementptr inbounds %Program, ptr %97, i64 0, i32 1
  %98 = load ptr, ptr %memberidx1.i.i115, align 8
  %memberidx.i.i.i116 = getelementptr inbounds %Array_Module_, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i.i.i116, align 8
  %100 = getelementptr inbounds ptr, ptr %99, i64 %96
  %101 = load ptr, ptr %100, align 8
  %memberidx31 = getelementptr inbounds %Module, ptr %101, i64 0, i32 4
  %102 = load ptr, ptr %memberidx31, align 8
  %memberidx32 = getelementptr inbounds %Array_Function_, ptr %102, i64 0, i32 2
  %103 = load i64, ptr %memberidx32, align 4
  store i64 0, ptr %94, align 4
  %memberidx1.i117 = getelementptr inbounds %VarId, ptr %94, i64 0, i32 1
  store i64 %96, ptr %memberidx1.i117, align 4
  %memberidx2.i118 = getelementptr inbounds %VarId, ptr %94, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i118, align 4
  store ptr %94, ptr %3, align 8
  %104 = load ptr, ptr %memberidx2.i99, align 8
  store ptr %104, ptr %memberidx15, align 8
  %memberidx35 = getelementptr inbounds %Function, ptr %3, i64 0, i32 5
  %105 = load ptr, ptr %58, align 8
  store ptr %105, ptr %memberidx35, align 8
  %106 = load i64, ptr %104, align 4
  %107 = load ptr, ptr %memberidx1.i.i115, align 8
  %memberidx.i.i.i.i123 = getelementptr inbounds %Array_Module_, ptr %107, i64 0, i32 1
  %108 = load ptr, ptr %memberidx.i.i.i.i123, align 8
  %109 = getelementptr inbounds ptr, ptr %108, i64 %106
  %110 = load ptr, ptr %109, align 8
  %memberidx1.i124 = getelementptr inbounds %Module, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i124, align 8
  %112 = load i64, ptr %111, align 4
  %113 = getelementptr inbounds ptr, ptr %108, i64 %112
  %114 = load ptr, ptr %113, align 8
  %memberidx2.i.i126 = getelementptr inbounds %Module, ptr %114, i64 0, i32 7
  %115 = load ptr, ptr %memberidx2.i.i126, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %111, i64 0, i32 1
  %116 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i5.i.i, align 8
  %118 = getelementptr inbounds ptr, ptr %117, i64 %116
  %119 = load ptr, ptr %118, align 8
  %memberidx37 = getelementptr inbounds %Module, ptr %110, i64 0, i32 4
  %120 = load ptr, ptr %memberidx37, align 8
  %memberidx.i75 = getelementptr inbounds %Array_Function_, ptr %120, i64 0, i32 2
  %121 = load i64, ptr %memberidx.i75, align 4
  %memberidx1.i76 = getelementptr inbounds %Array_Function_, ptr %120, i64 0, i32 3
  %122 = load i64, ptr %memberidx1.i76, align 4
  %.not.i77 = icmp slt i64 %121, %122
  br i1 %.not.i77, label %ifend27.Array_Function____sl__.exit_crit_edge, label %if.entry.i78

ifend27.Array_Function____sl__.exit_crit_edge:    ; preds = %ifend27
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Function_, ptr %120, i64 0, i32 1
  %.pre133 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Function____sl__.exit

if.entry.i78:                                     ; preds = %ifend27
  %123 = shl nuw i64 %122, 1
  store i64 %123, ptr %memberidx1.i76, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Function_, ptr %120, i64 0, i32 1
  %124 = load ptr, ptr %memberidx2.i.i, align 8
  %125 = shl i64 %122, 4
  %126 = tail call ptr @realloc(ptr %124, i64 %125)
  store ptr %126, ptr %memberidx2.i.i, align 8
  %.pre132 = load i64, ptr %memberidx.i75, align 4
  br label %Array_Function____sl__.exit

Array_Function____sl__.exit:                      ; preds = %ifend27.Array_Function____sl__.exit_crit_edge, %if.entry.i78
  %127 = phi ptr [ %.pre133, %ifend27.Array_Function____sl__.exit_crit_edge ], [ %126, %if.entry.i78 ]
  %128 = phi i64 [ %121, %ifend27.Array_Function____sl__.exit_crit_edge ], [ %.pre132, %if.entry.i78 ]
  %129 = add nsw i64 %128, 1
  store i64 %129, ptr %memberidx.i75, align 4
  %130 = getelementptr inbounds ptr, ptr %127, i64 %128
  store ptr %3, ptr %130, align 8
  %memberidx38 = getelementptr inbounds %Scope, ptr %119, i64 0, i32 3
  %131 = load ptr, ptr %memberidx38, align 8
  %132 = load ptr, ptr %memberidx4, align 8
  %133 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %131, ptr %132, ptr %133)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %4)
  %6 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %tailrecurse.i, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i72, %tailrecurse.i ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %7 = load i64, ptr %.tr11.i, align 4
  %switch = icmp eq i64 %7, 20
  %memberidx1.i72 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br i1 %switch, label %tailrecurse.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i74 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %8 = load ptr, ptr %memberidx6.i74, align 8
  %memberidx.i.i75 = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i75, align 8
  %10 = load i64, ptr %8, align 4
  %memberidx.i.i.i76 = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i.i76, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx2.i.i77 = getelementptr inbounds %Module, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx2.i.i77, align 8
  %memberidx3.i.i78 = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %15 = load i64, ptr %memberidx3.i.i78, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i5.i.i, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx3 = getelementptr inbounds %Class, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx3, align 8
  %20 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %5)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %19, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %26 = phi ptr [ %36, %else.i ], [ %23, %while.entry.i.preheader ]
  %27 = phi i64 [ %37, %else.i ], [ %21, %while.entry.i.preheader ]
  %28 = phi ptr [ %41, %else.i ], [ %25, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %39, %else.i ], [ %22, %while.entry.i.preheader ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i, align 4
  %31 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %30, %31
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %memberidx2.i.i, align 8
  %33 = load ptr, ptr %memberidx3.i.i, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %30)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre80 = load ptr, ptr %19, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre81.pre = load ptr, ptr %19, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre81.pre, i64 %hash.0.i
  %.pre82.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre82.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %36 = phi ptr [ %.pre80, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = add nuw i64 %hash.0.i, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not26.i = icmp eq ptr %41, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre82.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx11.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %get_class_prop_type.exit, %Map_string_PropId____getitem__.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %110, %ifend13 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %get_class_prop_type.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %44 = load ptr, ptr %0, align 8
  %memberidx.i.i40 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i40, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i.i, align 8
  %47 = load i64, ptr %45, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = load i64, ptr %42, align 4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %59 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i12.i, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %62, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %64 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i11.i, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %67, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i41 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i41, i64 0, i32 1
  %68 = load ptr, ptr %memberidx5, align 8
  %memberidx.i42 = getelementptr inbounds %Array_Type_, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i42, align 8
  %70 = load ptr, ptr %69, align 8
  %memberidx6 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %71 = load ptr, ptr %memberidx6, align 8
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %70, ptr %71)
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 6
  %74 = load ptr, ptr %memberidx1.i44, align 8
  %memberidx2.i45 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i45, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %ifend9

ifend9:                                           ; preds = %get_class_prop_type.exit
  %memberidx10 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %77 = load ptr, ptr %memberidx10, align 8
  %78 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %70, ptr %77)
  br i1 %78, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %79 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %70)
  %80 = load ptr, ptr %79, align 8
  %memberidx14 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx14, align 8
  %82 = tail call ptr %81(ptr nonnull %79)
  %83 = load ptr, ptr %memberidx10, align 8
  %84 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %83)
  %85 = load ptr, ptr %84, align 8
  %memberidx16 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx16, align 8
  %87 = tail call ptr %86(ptr nonnull %84)
  %88 = alloca ptr, align 8
  %89 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %88, ptr nonnull @177, ptr %82, ptr %87)
  %90 = load ptr, ptr %88, align 8
  %91 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %91, align 8
  %memberidx.i46 = getelementptr inbounds %string, ptr %91, i64 0, i32 1
  store ptr %90, ptr %memberidx.i46, align 8
  %memberidx1.i47 = getelementptr inbounds %string, ptr %91, i64 0, i32 2
  store i64 %89, ptr %memberidx1.i47, align 4
  %memberidx2.i48 = getelementptr inbounds %string, ptr %91, i64 0, i32 3
  store i64 %89, ptr %memberidx2.i48, align 4
  tail call void @free(ptr %82)
  tail call void @free(ptr %87)
  %92 = load ptr, ptr %memberidx6, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i50 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 6
  %95 = load ptr, ptr %memberidx1.i50, align 8
  %96 = call ptr @malloc(i32 24)
  store i64 5, ptr %96, align 4
  %memberidx1.i.i51 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %91, ptr %memberidx2.i.i52, align 8
  %memberidx.i.i53 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %97 = load i64, ptr %memberidx.i.i53, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 3
  %98 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i54 = icmp slt i64 %97, %98
  br i1 %.not.i.i54, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %.pre84 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %99 = shl nuw i64 %98, 1
  store i64 %99, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i56 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %100 = load ptr, ptr %memberidx2.i.i.i56, align 8
  %101 = shl i64 %98, 4
  %102 = call ptr @realloc(ptr %100, i64 %101)
  store ptr %102, ptr %memberidx2.i.i.i56, align 8
  %.pre83 = load i64, ptr %memberidx.i.i53, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %103 = phi ptr [ %.pre84, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %102, %if.entry.i.i ]
  %104 = phi i64 [ %97, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre83, %if.entry.i.i ]
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr %memberidx.i.i53, align 4
  %106 = getelementptr inbounds ptr, ptr %103, i64 %104
  store ptr %96, ptr %106, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %107 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %107, align 4
  %memberidx.i.i57 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i57, align 4
  %memberidx1.i.i58 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i58, align 1
  %memberidx.i59 = getelementptr inbounds %MemberExpression, ptr %107, i64 0, i32 4
  store ptr %1, ptr %memberidx.i59, align 8
  %memberidx1.i60 = getelementptr inbounds %MemberExpression, ptr %107, i64 0, i32 5
  store ptr %42, ptr %memberidx1.i60, align 8
  %memberidx2.i61 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 3
  store ptr %common.ret.op.i41, ptr %memberidx2.i61, align 8
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %108, align 8
  %memberidx.i62 = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 2
  store i64 0, ptr %memberidx.i62, align 4
  %memberidx1.i63 = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 3
  store i64 8, ptr %memberidx1.i63, align 4
  %memberidx2.i64 = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 1
  %109 = tail call ptr @malloc(i32 64)
  store ptr %109, ptr %memberidx2.i64, align 8
  store ptr %72, ptr %109, align 8
  store i64 1, ptr %memberidx.i62, align 4
  %110 = tail call ptr @malloc(i32 41)
  %memberidx21 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i41, i64 0, i32 2
  %111 = load ptr, ptr %memberidx21, align 8
  store i64 8, ptr %110, align 4
  %memberidx.i.i65 = getelementptr inbounds %Expression, ptr %110, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i65, align 4
  %memberidx1.i.i66 = getelementptr inbounds %Expression, ptr %110, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i66, align 1
  %memberidx.i67 = getelementptr inbounds %CallExpression, ptr %110, i64 0, i32 4
  store ptr %107, ptr %memberidx.i67, align 8
  %memberidx1.i68 = getelementptr inbounds %CallExpression, ptr %110, i64 0, i32 5
  store ptr %108, ptr %memberidx1.i68, align 8
  %memberidx2.i69 = getelementptr inbounds %Expression, ptr %110, i64 0, i32 3
  store ptr %111, ptr %memberidx2.i69, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i95, %3
  %.tr11.i.in = phi ptr [ %memberidx1, %3 ], [ %memberidx1.i94, %if.entry.i95 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %5 = load i64, ptr %.tr11.i, align 4
  switch i64 %5, label %get_class_from_type.exit [
    i64 20, label %if.entry.i95
    i64 11, label %if.entry3.i
  ]

if.entry.i95:                                     ; preds = %tailrecurse.i
  %memberidx1.i94 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i96 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %6 = load ptr, ptr %memberidx6.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i97, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i98 = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i98, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i99 = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i99, align 8
  %memberidx3.i.i100 = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i100, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i93 = phi ptr [ %16, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx2 = getelementptr inbounds %Class, ptr %common.ret.op.i93, i64 0, i32 6
  %17 = load ptr, ptr %memberidx2, align 8
  %18 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %18, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i, align 4
  %20 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %19)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %26 = phi ptr [ %36, %else.i ], [ %23, %get_class_from_type.exit ]
  %27 = phi i64 [ %37, %else.i ], [ %21, %get_class_from_type.exit ]
  %28 = phi ptr [ %41, %else.i ], [ %25, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %39, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i44 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i44, align 4
  %31 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %30, %31
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i46 = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %memberidx2.i.i46, align 8
  %33 = load ptr, ptr %memberidx.i.i, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %30)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre104 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre105.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre105.pre, i64 %hash.0.i
  %.pre106.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre106.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %36 = phi ptr [ %.pre104, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = add nuw i64 %hash.0.i, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not26.i = icmp eq ptr %41, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre106.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx11.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %if.entry, label %ifend

common.ret:                                       ; preds = %get_class_prop_type.exit, %ifend15, %TypeChecker_error.exit78, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit78 ], [ %130, %ifend15 ], [ null, %get_class_prop_type.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i93, i64 0, i32 1
  %44 = load ptr, ptr %memberidx3, align 8
  %45 = load ptr, ptr %44, align 8
  %memberidx4 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx4, align 8
  %47 = tail call ptr %46(ptr nonnull %44)
  %48 = alloca ptr, align 8
  %49 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %48, ptr nonnull @208, ptr %47)
  %50 = load ptr, ptr %48, align 8
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i47 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i47, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 %49, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 %49, ptr %memberidx2.i, align 4
  tail call void @free(ptr %47)
  %52 = load ptr, ptr %2, align 8
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 6
  %54 = load ptr, ptr %memberidx1.i49, align 8
  %55 = call ptr @malloc(i32 24)
  store i64 4, ptr %55, align 4
  %memberidx1.i.i50 = getelementptr inbounds %FloError, ptr %55, i64 0, i32 2
  store ptr %52, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %FloError, ptr %55, i64 0, i32 1
  store ptr %51, ptr %memberidx2.i.i51, align 8
  %memberidx.i.i52 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %memberidx.i.i52, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 3
  %57 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i53 = icmp slt i64 %56, %57
  br i1 %.not.i.i53, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %.pre110 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %58 = shl nuw i64 %57, 1
  store i64 %58, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i.i.i, align 8
  %60 = shl i64 %57, 4
  %61 = call ptr @realloc(ptr %59, i64 %60)
  store ptr %61, ptr %memberidx2.i.i.i, align 8
  %.pre109 = load i64, ptr %memberidx.i.i52, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %62 = phi ptr [ %.pre110, %if.entry.TypeChecker_error.exit_crit_edge ], [ %61, %if.entry.i.i ]
  %63 = phi i64 [ %56, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre109, %if.entry.i.i ]
  %64 = add nsw i64 %63, 1
  store i64 %64, ptr %memberidx.i.i52, align 4
  %65 = getelementptr inbounds ptr, ptr %62, i64 %63
  store ptr %55, ptr %65, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %66 = load ptr, ptr %0, align 8
  %memberidx.i.i54 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i54, align 8
  %memberidx.i.i.i55 = getelementptr inbounds %Program, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i.i.i55, align 8
  %69 = load i64, ptr %67, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %69
  %72 = load ptr, ptr %71, align 8
  %memberidx2.i.i.i56 = getelementptr inbounds %Module, ptr %72, i64 0, i32 3
  %73 = load ptr, ptr %memberidx2.i.i.i56, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %67, i64 0, i32 2
  %74 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %78 = load i64, ptr %42, align 4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i58 = getelementptr inbounds %Class, ptr %77, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i58, align 8
  %memberidx2.i59 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i59, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i12.i, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %84, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %77, i64 0, i32 4
  %85 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %86 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i11.i, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %89, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i57 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i57, i64 0, i32 1
  %90 = load ptr, ptr %memberidx7, align 8
  %memberidx.i60 = getelementptr inbounds %Array_Type_, ptr %90, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i60, align 8
  %92 = load ptr, ptr %91, align 8
  %memberidx8 = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %93 = load ptr, ptr %memberidx8, align 8
  %94 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %92, ptr %93)
  %memberidx.i61 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %95 = load ptr, ptr %memberidx.i61, align 8
  %memberidx1.i62 = getelementptr inbounds %Compiler, ptr %95, i64 0, i32 6
  %96 = load ptr, ptr %memberidx1.i62, align 8
  %memberidx2.i63 = getelementptr inbounds %Array_FloError_, ptr %96, i64 0, i32 2
  %97 = load i64, ptr %memberidx2.i63, align 4
  %98 = icmp sgt i64 %97, 0
  br i1 %98, label %common.ret, label %ifend11

ifend11:                                          ; preds = %get_class_prop_type.exit
  %memberidx12 = getelementptr inbounds %Expression, ptr %94, i64 0, i32 3
  %99 = load ptr, ptr %memberidx12, align 8
  %100 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %92, ptr %99)
  br i1 %100, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend11
  %101 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %92)
  %102 = load ptr, ptr %101, align 8
  %memberidx16 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx16, align 8
  %104 = tail call ptr %103(ptr nonnull %101)
  %105 = load ptr, ptr %memberidx12, align 8
  %106 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %105)
  %107 = load ptr, ptr %106, align 8
  %memberidx18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %107, i64 0, i32 5
  %108 = load ptr, ptr %memberidx18, align 8
  %109 = tail call ptr %108(ptr nonnull %106)
  %110 = alloca ptr, align 8
  %111 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %110, ptr nonnull @177, ptr %104, ptr %109)
  %112 = load ptr, ptr %110, align 8
  %113 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %113, align 8
  %memberidx.i64 = getelementptr inbounds %string, ptr %113, i64 0, i32 1
  store ptr %112, ptr %memberidx.i64, align 8
  %memberidx1.i65 = getelementptr inbounds %string, ptr %113, i64 0, i32 2
  store i64 %111, ptr %memberidx1.i65, align 4
  %memberidx2.i66 = getelementptr inbounds %string, ptr %113, i64 0, i32 3
  store i64 %111, ptr %memberidx2.i66, align 4
  tail call void @free(ptr %104)
  tail call void @free(ptr %109)
  %114 = load ptr, ptr %memberidx8, align 8
  %115 = load ptr, ptr %114, align 8
  %116 = load ptr, ptr %memberidx.i61, align 8
  %memberidx1.i68 = getelementptr inbounds %Compiler, ptr %116, i64 0, i32 6
  %117 = load ptr, ptr %memberidx1.i68, align 8
  %118 = call ptr @malloc(i32 24)
  store i64 5, ptr %118, align 4
  %memberidx1.i.i69 = getelementptr inbounds %FloError, ptr %118, i64 0, i32 2
  store ptr %115, ptr %memberidx1.i.i69, align 8
  %memberidx2.i.i70 = getelementptr inbounds %FloError, ptr %118, i64 0, i32 1
  store ptr %113, ptr %memberidx2.i.i70, align 8
  %memberidx.i.i71 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 2
  %119 = load i64, ptr %memberidx.i.i71, align 4
  %memberidx1.i2.i72 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 3
  %120 = load i64, ptr %memberidx1.i2.i72, align 4
  %.not.i.i73 = icmp slt i64 %119, %120
  br i1 %.not.i.i73, label %if.entry13.TypeChecker_error.exit78_crit_edge, label %if.entry.i.i76

if.entry13.TypeChecker_error.exit78_crit_edge:    ; preds = %if.entry13
  %memberidx4.i.i77.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 1
  %.pre108 = load ptr, ptr %memberidx4.i.i77.phi.trans.insert, align 8
  br label %TypeChecker_error.exit78

if.entry.i.i76:                                   ; preds = %if.entry13
  %121 = shl nuw i64 %120, 1
  store i64 %121, ptr %memberidx1.i2.i72, align 4
  %memberidx2.i.i.i75 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 1
  %122 = load ptr, ptr %memberidx2.i.i.i75, align 8
  %123 = shl i64 %120, 4
  %124 = call ptr @realloc(ptr %122, i64 %123)
  store ptr %124, ptr %memberidx2.i.i.i75, align 8
  %.pre107 = load i64, ptr %memberidx.i.i71, align 4
  br label %TypeChecker_error.exit78

TypeChecker_error.exit78:                         ; preds = %if.entry13.TypeChecker_error.exit78_crit_edge, %if.entry.i.i76
  %125 = phi ptr [ %.pre108, %if.entry13.TypeChecker_error.exit78_crit_edge ], [ %124, %if.entry.i.i76 ]
  %126 = phi i64 [ %119, %if.entry13.TypeChecker_error.exit78_crit_edge ], [ %.pre107, %if.entry.i.i76 ]
  %127 = add nsw i64 %126, 1
  store i64 %127, ptr %memberidx.i.i71, align 4
  %128 = getelementptr inbounds ptr, ptr %125, i64 %126
  store ptr %118, ptr %128, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend11
  %129 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %129, align 4
  %memberidx.i.i79 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i79, align 4
  %memberidx1.i.i80 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i80, align 1
  %memberidx.i81 = getelementptr inbounds %MemberExpression, ptr %129, i64 0, i32 4
  store ptr %1, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %MemberExpression, ptr %129, i64 0, i32 5
  store ptr %42, ptr %memberidx1.i82, align 8
  %memberidx2.i83 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 3
  store ptr %common.ret.op.i57, ptr %memberidx2.i83, align 8
  %130 = tail call ptr @malloc(i32 41)
  %131 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %131, align 8
  %memberidx.i84 = getelementptr inbounds %Array_Expression_, ptr %131, i64 0, i32 2
  store i64 0, ptr %memberidx.i84, align 4
  %memberidx1.i85 = getelementptr inbounds %Array_Expression_, ptr %131, i64 0, i32 3
  store i64 8, ptr %memberidx1.i85, align 4
  %memberidx2.i86 = getelementptr inbounds %Array_Expression_, ptr %131, i64 0, i32 1
  %132 = tail call ptr @malloc(i32 64)
  store ptr %132, ptr %memberidx2.i86, align 8
  store ptr %94, ptr %132, align 8
  store i64 1, ptr %memberidx.i84, align 4
  %memberidx23 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i57, i64 0, i32 2
  %133 = load ptr, ptr %memberidx23, align 8
  store i64 8, ptr %130, align 4
  %memberidx.i.i87 = getelementptr inbounds %Expression, ptr %130, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i87, align 4
  %memberidx1.i.i88 = getelementptr inbounds %Expression, ptr %130, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i88, align 1
  %memberidx.i89 = getelementptr inbounds %CallExpression, ptr %130, i64 0, i32 4
  store ptr %129, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %CallExpression, ptr %130, i64 0, i32 5
  store ptr %131, ptr %memberidx1.i90, align 8
  %memberidx2.i91 = getelementptr inbounds %Expression, ptr %130, i64 0, i32 3
  store ptr %133, ptr %memberidx2.i91, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %IntType, align 8
  store i64 6, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %4, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx, align 8
  %6 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %4, ptr %5)
  %memberidx1 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry

common.ret:                                       ; preds = %ifend25, %TypeChecker_error.exit99, %TypeChecker_error.exit84, %TypeChecker_error.exit69, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit69 ], [ null, %TypeChecker_error.exit84 ], [ null, %TypeChecker_error.exit99 ], [ %104, %ifend25 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %11 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %11, ptr noundef nonnull align 8 dereferenceable(34) @209, i64 34, i1 false)
  %12 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 34, ptr %memberidx2.i.i, align 4
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load ptr, ptr %13, align 8
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %15, i64 0, i32 6
  %16 = load ptr, ptr %memberidx1.i, align 8
  %17 = call ptr @malloc(i32 24)
  store i64 5, ptr %17, align 4
  %memberidx1.i.i53 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %14, ptr %memberidx1.i.i53, align 8
  %memberidx2.i.i54 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %12, ptr %memberidx2.i.i54, align 8
  %memberidx.i.i55 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i.i55, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 3
  %19 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %18, %19
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %.pre111 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %20 = shl nuw i64 %19, 1
  store i64 %20, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i.i.i, align 8
  %22 = shl i64 %19, 4
  %23 = call ptr @realloc(ptr %21, i64 %22)
  store ptr %23, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i55, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %24 = phi ptr [ %.pre111, %if.entry.TypeChecker_error.exit_crit_edge ], [ %23, %if.entry.i.i ]
  %25 = phi i64 [ %18, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %26 = add nsw i64 %25, 1
  store i64 %26, ptr %memberidx.i.i55, align 4
  %27 = getelementptr inbounds ptr, ptr %24, i64 %25
  store ptr %17, ptr %27, align 8
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx5 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  %28 = load i1, ptr %memberidx5, align 1
  br i1 %28, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend
  %29 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %30 = load ptr, ptr %29, align 8
  %memberidx10 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %30, i64 0, i32 5
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = call ptr %31(ptr nonnull %29)
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @210, ptr %32)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i56 = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx1.i57, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %36, i64 0, i32 3
  store i64 %34, ptr %memberidx2.i, align 4
  tail call void @free(ptr %32)
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load ptr, ptr %37, align 8
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %39 = load ptr, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %Compiler, ptr %39, i64 0, i32 6
  %40 = load ptr, ptr %memberidx1.i59, align 8
  %41 = call ptr @malloc(i32 24)
  store i64 5, ptr %41, align 4
  %memberidx1.i.i60 = getelementptr inbounds %FloError, ptr %41, i64 0, i32 2
  store ptr %38, ptr %memberidx1.i.i60, align 8
  %memberidx2.i.i61 = getelementptr inbounds %FloError, ptr %41, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i61, align 8
  %memberidx.i.i62 = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 2
  %42 = load i64, ptr %memberidx.i.i62, align 4
  %memberidx1.i2.i63 = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 3
  %43 = load i64, ptr %memberidx1.i2.i63, align 4
  %.not.i.i64 = icmp slt i64 %42, %43
  br i1 %.not.i.i64, label %if.entry6.TypeChecker_error.exit69_crit_edge, label %if.entry.i.i67

if.entry6.TypeChecker_error.exit69_crit_edge:     ; preds = %if.entry6
  %memberidx4.i.i68.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 1
  %.pre117 = load ptr, ptr %memberidx4.i.i68.phi.trans.insert, align 8
  br label %TypeChecker_error.exit69

if.entry.i.i67:                                   ; preds = %if.entry6
  %44 = shl nuw i64 %43, 1
  store i64 %44, ptr %memberidx1.i2.i63, align 4
  %memberidx2.i.i.i66 = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 1
  %45 = load ptr, ptr %memberidx2.i.i.i66, align 8
  %46 = shl i64 %43, 4
  %47 = call ptr @realloc(ptr %45, i64 %46)
  store ptr %47, ptr %memberidx2.i.i.i66, align 8
  %.pre116 = load i64, ptr %memberidx.i.i62, align 4
  br label %TypeChecker_error.exit69

TypeChecker_error.exit69:                         ; preds = %if.entry6.TypeChecker_error.exit69_crit_edge, %if.entry.i.i67
  %48 = phi ptr [ %.pre117, %if.entry6.TypeChecker_error.exit69_crit_edge ], [ %47, %if.entry.i.i67 ]
  %49 = phi i64 [ %42, %if.entry6.TypeChecker_error.exit69_crit_edge ], [ %.pre116, %if.entry.i.i67 ]
  %50 = add nsw i64 %49, 1
  store i64 %50, ptr %memberidx.i.i62, align 4
  %51 = getelementptr inbounds ptr, ptr %48, i64 %49
  store ptr %41, ptr %51, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend
  %memberidx13 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %52 = load i1, ptr %memberidx13, align 1
  br i1 %52, label %ifend16, label %if.entry14

if.entry14:                                       ; preds = %ifend8
  %53 = call ptr @malloc(i32 40)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %53, ptr noundef nonnull align 8 dereferenceable(40) @211, i64 40, i1 false)
  %54 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i70 = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i70, align 8
  %memberidx1.i.i71 = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 40, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 40, ptr %memberidx2.i.i72, align 4
  %55 = load ptr, ptr %memberidx, align 8
  %56 = load ptr, ptr %55, align 8
  %memberidx.i73 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %57 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %57, i64 0, i32 6
  %58 = load ptr, ptr %memberidx1.i74, align 8
  %59 = call ptr @malloc(i32 24)
  store i64 5, ptr %59, align 4
  %memberidx1.i.i75 = getelementptr inbounds %FloError, ptr %59, i64 0, i32 2
  store ptr %56, ptr %memberidx1.i.i75, align 8
  %memberidx2.i.i76 = getelementptr inbounds %FloError, ptr %59, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i76, align 8
  %memberidx.i.i77 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 2
  %60 = load i64, ptr %memberidx.i.i77, align 4
  %memberidx1.i2.i78 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 3
  %61 = load i64, ptr %memberidx1.i2.i78, align 4
  %.not.i.i79 = icmp slt i64 %60, %61
  br i1 %.not.i.i79, label %if.entry14.TypeChecker_error.exit84_crit_edge, label %if.entry.i.i82

if.entry14.TypeChecker_error.exit84_crit_edge:    ; preds = %if.entry14
  %memberidx4.i.i83.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 1
  %.pre113 = load ptr, ptr %memberidx4.i.i83.phi.trans.insert, align 8
  br label %TypeChecker_error.exit84

if.entry.i.i82:                                   ; preds = %if.entry14
  %62 = shl nuw i64 %61, 1
  store i64 %62, ptr %memberidx1.i2.i78, align 4
  %memberidx2.i.i.i81 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 1
  %63 = load ptr, ptr %memberidx2.i.i.i81, align 8
  %64 = shl i64 %61, 4
  %65 = call ptr @realloc(ptr %63, i64 %64)
  store ptr %65, ptr %memberidx2.i.i.i81, align 8
  %.pre112 = load i64, ptr %memberidx.i.i77, align 4
  br label %TypeChecker_error.exit84

TypeChecker_error.exit84:                         ; preds = %if.entry14.TypeChecker_error.exit84_crit_edge, %if.entry.i.i82
  %66 = phi ptr [ %.pre113, %if.entry14.TypeChecker_error.exit84_crit_edge ], [ %65, %if.entry.i.i82 ]
  %67 = phi i64 [ %60, %if.entry14.TypeChecker_error.exit84_crit_edge ], [ %.pre112, %if.entry.i.i82 ]
  %68 = add nsw i64 %67, 1
  store i64 %68, ptr %memberidx.i.i77, align 4
  %69 = getelementptr inbounds ptr, ptr %66, i64 %67
  store ptr %59, ptr %69, align 8
  br label %common.ret

ifend16:                                          ; preds = %ifend8
  %70 = load ptr, ptr %0, align 8
  %71 = call fastcc i64 @evaluate_const_int_expression(ptr %70, ptr nonnull %6)
  %memberidx20 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %72 = load ptr, ptr %memberidx20, align 8
  %73 = icmp slt i64 %71, 0
  %memberidx21 = getelementptr inbounds %TupleType, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx21, align 8
  %memberidx22 = getelementptr inbounds %Array_Type_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx22, align 4
  %76 = icmp sge i64 %71, %75
  %77 = or i1 %73, %76
  br i1 %77, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend16
  %78 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %72)
  %79 = load ptr, ptr %78, align 8
  %memberidx26 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx26, align 8
  %81 = call ptr %80(ptr nonnull %78)
  %82 = alloca ptr, align 8
  %83 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %82, ptr nonnull @212, ptr %81)
  %84 = load ptr, ptr %82, align 8
  %85 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %85, align 8
  %memberidx.i85 = getelementptr inbounds %string, ptr %85, i64 0, i32 1
  store ptr %84, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  store i64 %83, ptr %memberidx1.i86, align 4
  %memberidx2.i87 = getelementptr inbounds %string, ptr %85, i64 0, i32 3
  store i64 %83, ptr %memberidx2.i87, align 4
  tail call void @free(ptr %81)
  %86 = load ptr, ptr %memberidx, align 8
  %87 = load ptr, ptr %86, align 8
  %memberidx.i88 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %88 = load ptr, ptr %memberidx.i88, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %88, i64 0, i32 6
  %89 = load ptr, ptr %memberidx1.i89, align 8
  %90 = call ptr @malloc(i32 24)
  store i64 5, ptr %90, align 4
  %memberidx1.i.i90 = getelementptr inbounds %FloError, ptr %90, i64 0, i32 2
  store ptr %87, ptr %memberidx1.i.i90, align 8
  %memberidx2.i.i91 = getelementptr inbounds %FloError, ptr %90, i64 0, i32 1
  store ptr %85, ptr %memberidx2.i.i91, align 8
  %memberidx.i.i92 = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 2
  %91 = load i64, ptr %memberidx.i.i92, align 4
  %memberidx1.i2.i93 = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 3
  %92 = load i64, ptr %memberidx1.i2.i93, align 4
  %.not.i.i94 = icmp slt i64 %91, %92
  br i1 %.not.i.i94, label %if.entry23.TypeChecker_error.exit99_crit_edge, label %if.entry.i.i97

if.entry23.TypeChecker_error.exit99_crit_edge:    ; preds = %if.entry23
  %memberidx4.i.i98.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 1
  %.pre115 = load ptr, ptr %memberidx4.i.i98.phi.trans.insert, align 8
  br label %TypeChecker_error.exit99

if.entry.i.i97:                                   ; preds = %if.entry23
  %93 = shl nuw i64 %92, 1
  store i64 %93, ptr %memberidx1.i2.i93, align 4
  %memberidx2.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 1
  %94 = load ptr, ptr %memberidx2.i.i.i96, align 8
  %95 = shl i64 %92, 4
  %96 = call ptr @realloc(ptr %94, i64 %95)
  store ptr %96, ptr %memberidx2.i.i.i96, align 8
  %.pre114 = load i64, ptr %memberidx.i.i92, align 4
  br label %TypeChecker_error.exit99

TypeChecker_error.exit99:                         ; preds = %if.entry23.TypeChecker_error.exit99_crit_edge, %if.entry.i.i97
  %97 = phi ptr [ %.pre115, %if.entry23.TypeChecker_error.exit99_crit_edge ], [ %96, %if.entry.i.i97 ]
  %98 = phi i64 [ %91, %if.entry23.TypeChecker_error.exit99_crit_edge ], [ %.pre114, %if.entry.i.i97 ]
  %99 = add nsw i64 %98, 1
  store i64 %99, ptr %memberidx.i.i92, align 4
  %100 = getelementptr inbounds ptr, ptr %97, i64 %98
  store ptr %90, ptr %100, align 8
  br label %common.ret

ifend25:                                          ; preds = %ifend16
  %memberidx.i100 = getelementptr inbounds %Array_Type_, ptr %74, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i100, align 8
  %102 = getelementptr inbounds ptr, ptr %101, i64 %71
  %103 = load ptr, ptr %102, align 8
  tail call void @free(ptr nonnull %6)
  %104 = tail call ptr @malloc(i32 41)
  %105 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %105, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i102, align 1
  %memberidx.i103 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 3
  %106 = call ptr @malloc(i32 9)
  store i64 6, ptr %106, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %106, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %106, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %IntExpression, ptr %105, i64 0, i32 4
  store i64 %71, ptr %memberidx1.i104, align 4
  store i1 true, ptr %memberidx1.i.i102, align 1
  store i64 8, ptr %104, align 4
  %memberidx.i.i106 = getelementptr inbounds %Expression, ptr %104, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i106, align 4
  %memberidx1.i.i107 = getelementptr inbounds %Expression, ptr %104, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i107, align 1
  %memberidx.i108 = getelementptr inbounds %IndexExpression, ptr %104, i64 0, i32 4
  store ptr %1, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %IndexExpression, ptr %104, i64 0, i32 5
  store ptr %105, ptr %memberidx1.i109, align 8
  %memberidx2.i110 = getelementptr inbounds %Expression, ptr %104, i64 0, i32 3
  store ptr %103, ptr %memberidx2.i110, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend9, %2, %TypeChecker_error.exit84, %ifend24, %TypeChecker_error.exit, %if.entry7, %if.entry2
  %common.ret.op = phi ptr [ %17, %if.entry2 ], [ %19, %if.entry7 ], [ null, %TypeChecker_error.exit ], [ %51, %ifend24 ], [ null, %TypeChecker_error.exit84 ], [ null, %2 ], [ null, %ifend9 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 20
  br i1 %12, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %13, %if.entry.i ], [ %10, %ifend ]
  %memberidx1.i85 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i85, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend
  %.lcssa.i = phi i64 [ %11, %ifend ], [ %14, %if.entry.i ]
  %16 = icmp eq i64 %.lcssa.i, 11
  br i1 %16, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit
  %17 = tail call fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend4:                                           ; preds = %is_object.exit
  %18 = icmp eq i64 %11, 15
  br i1 %18, label %if.entry7, label %ifend9

if.entry7:                                        ; preds = %ifend4
  %19 = tail call fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend9:                                           ; preds = %ifend4
  %20 = alloca %IntType, align 8
  store i64 6, ptr %20, align 8
  %memberidx.i56 = getelementptr inbounds %IntType, ptr %20, i64 0, i32 1
  store i1 false, ptr %memberidx.i56, align 8
  %memberidx10 = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %20, ptr %21)
  %23 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i58 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 6
  %24 = load ptr, ptr %memberidx1.i58, align 8
  %memberidx2.i59 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i59, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  %27 = load ptr, ptr %memberidx14, align 8
  %28 = load i64, ptr %27, align 4
  %29 = add i64 %28, -1
  %30 = icmp ult i64 %29, 7
  br i1 %30, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %31 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %31, ptr noundef nonnull align 8 dereferenceable(34) @209, i64 34, i1 false)
  %32 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 34, ptr %memberidx2.i.i, align 4
  %33 = load ptr, ptr %memberidx10, align 8
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i61 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 6
  %36 = load ptr, ptr %memberidx1.i61, align 8
  %37 = call ptr @malloc(i32 24)
  store i64 5, ptr %37, align 4
  %memberidx1.i.i62 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 2
  store ptr %34, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 1
  store ptr %32, ptr %memberidx2.i.i63, align 8
  %memberidx.i.i64 = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %38 = load i64, ptr %memberidx.i.i64, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 3
  %39 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %38, %39
  br i1 %.not.i.i, label %if.entry15.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry15.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry15
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %.pre86 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry15
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i.i.i, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i64, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry15.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %44 = phi ptr [ %.pre86, %if.entry15.TypeChecker_error.exit_crit_edge ], [ %43, %if.entry.i.i ]
  %45 = phi i64 [ %38, %if.entry15.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i64, align 4
  %47 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %37, ptr %47, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %48 = call ptr @malloc(i32 8)
  store i64 21, ptr %48, align 4
  %49 = load ptr, ptr %memberidx1, align 8
  %50 = load i64, ptr %49, align 4
  switch i64 %50, label %else28 [
    i64 13, label %if.entry22
    i64 14, label %if.entry27
  ]

if.entry22:                                       ; preds = %ifend17
  %memberidx25 = getelementptr inbounds %PointerType, ptr %49, i64 0, i32 1
  br label %ifend24

ifend24:                                          ; preds = %if.entry27, %if.entry22
  %value_type.0.in = phi ptr [ %memberidx25, %if.entry22 ], [ %memberidx30, %if.entry27 ]
  %value_type.0 = load ptr, ptr %value_type.0.in, align 8
  %51 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %51, align 4
  %memberidx.i.i65 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i65, align 4
  %memberidx1.i.i66 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i66, align 1
  %memberidx.i67 = getelementptr inbounds %IndexExpression, ptr %51, i64 0, i32 4
  store ptr %5, ptr %memberidx.i67, align 8
  %memberidx1.i68 = getelementptr inbounds %IndexExpression, ptr %51, i64 0, i32 5
  store ptr %22, ptr %memberidx1.i68, align 8
  %memberidx2.i69 = getelementptr inbounds %Expression, ptr %51, i64 0, i32 3
  store ptr %value_type.0, ptr %memberidx2.i69, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend17
  %memberidx30 = getelementptr inbounds %ArrayType, ptr %49, i64 0, i32 1
  br label %ifend24

else28:                                           ; preds = %ifend17
  %52 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %49)
  %53 = load ptr, ptr %52, align 8
  %memberidx31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx31, align 8
  %55 = call ptr %54(ptr nonnull %52)
  %56 = alloca ptr, align 8
  %57 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %56, ptr nonnull @213, ptr %55)
  %58 = load ptr, ptr %56, align 8
  %59 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i70 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i70, align 8
  %memberidx1.i71 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %57, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %57, ptr %memberidx2.i72, align 4
  tail call void @free(ptr %55)
  %60 = load ptr, ptr %1, align 8
  %61 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx1.i74, align 8
  %63 = call ptr @malloc(i32 24)
  store i64 5, ptr %63, align 4
  %memberidx1.i.i75 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i75, align 8
  %memberidx2.i.i76 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %59, ptr %memberidx2.i.i76, align 8
  %memberidx.i.i77 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i77, align 4
  %memberidx1.i2.i78 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %65 = load i64, ptr %memberidx1.i2.i78, align 4
  %.not.i.i79 = icmp slt i64 %64, %65
  br i1 %.not.i.i79, label %else28.TypeChecker_error.exit84_crit_edge, label %if.entry.i.i82

else28.TypeChecker_error.exit84_crit_edge:        ; preds = %else28
  %memberidx4.i.i83.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre88 = load ptr, ptr %memberidx4.i.i83.phi.trans.insert, align 8
  br label %TypeChecker_error.exit84

if.entry.i.i82:                                   ; preds = %else28
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i78, align 4
  %memberidx2.i.i.i81 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %67 = load ptr, ptr %memberidx2.i.i.i81, align 8
  %68 = shl i64 %65, 4
  %69 = call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %memberidx2.i.i.i81, align 8
  %.pre87 = load i64, ptr %memberidx.i.i77, align 4
  br label %TypeChecker_error.exit84

TypeChecker_error.exit84:                         ; preds = %else28.TypeChecker_error.exit84_crit_edge, %if.entry.i.i82
  %70 = phi ptr [ %.pre88, %else28.TypeChecker_error.exit84_crit_edge ], [ %69, %if.entry.i.i82 ]
  %71 = phi i64 [ %64, %else28.TypeChecker_error.exit84_crit_edge ], [ %.pre87, %if.entry.i.i82 ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i77, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_block(ptr %0, ptr nocapture readonly %1, ptr readonly %2, i1 %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 19)
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Statement_, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %6, ptr %5, align 8
  %memberidx3.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 1
  %memberidx4.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 2
  %memberidx5.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 3
  %memberidx6.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 4
  %.not = icmp eq ptr %2, null
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %memberidx3.i, i8 0, i64 11, i1 false)
  br i1 %.not, label %false_block, label %end

false_block:                                      ; preds = %4
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = load i64, ptr %8, align 4
  %10 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %9)
  %memberidx2.i77 = getelementptr inbounds %Scope, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  store ptr %11, ptr %memberidx2.i77, align 8
  %12 = load ptr, ptr %0, align 8
  %13 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i, align 8
  %15 = load i64, ptr %13, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %18, i64 0, i32 7
  %19 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %13, i64 0, i32 1
  %20 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4.i79 = getelementptr inbounds %Scope, ptr %23, i64 0, i32 7
  %24 = load ptr, ptr %memberidx4.i79, align 8
  %25 = load ptr, ptr %10, align 8
  %memberidx.i.i80 = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i80, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 3
  %27 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i = icmp slt i64 %26, %27
  br i1 %.not.i.i, label %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i

false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %false_block
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 1
  %.pre133 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i:                                     ; preds = %false_block
  %28 = shl nuw i64 %27, 1
  store i64 %28, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %30 = shl i64 %27, 4
  %31 = tail call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %memberidx2.i.i13.i, align 8
  %.pre = load i64, ptr %memberidx.i.i80, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i
  %32 = phi ptr [ %.pre133, %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %31, %if.entry.i.i ]
  %33 = phi i64 [ %26, %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i80, align 4
  %35 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %25, ptr %35, align 8
  br label %end

end:                                              ; preds = %4, %TypeChecker_create_child_scope_within_current_scope.exit
  %ternary = phi ptr [ %10, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %2, %4 ]
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %36 = load ptr, ptr %ternary, align 8
  store ptr %36, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %BlockNode, ptr %1, i64 0, i32 1
  %37 = load ptr, ptr %memberidx2, align 8
  %38 = tail call ptr @malloc(i32 25)
  %memberidx.i81 = getelementptr inbounds %Array_StatementNode_, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i81, align 8
  %memberidx1.i = getelementptr inbounds %Array_StatementNode_, ptr %37, i64 0, i32 2
  %40 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %38, align 1
  %memberidx1.i.i82 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 1
  %memberidx2.i.i83 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 3
  store ptr %39, ptr %memberidx2.i.i83, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 2
  store i64 %40, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i82, align 4
  %41 = icmp slt i64 %40, 1
  br i1 %41, label %for.end.thread138, label %for.body.lr.ph

for.end.thread138:                                ; preds = %end
  tail call void @free(ptr nonnull %38)
  br label %ifend38

for.body.lr.ph:                                   ; preds = %end
  %memberidx.i87 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend34
  %42 = phi i64 [ 1, %for.body.lr.ph ], [ %64, %ifend34 ]
  %stmt_node.0120.in = phi ptr [ %39, %for.body.lr.ph ], [ %65, %ifend34 ]
  %stmt_node.0120 = load ptr, ptr %stmt_node.0120.in, align 8
  %43 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr %stmt_node.0120)
  %44 = load ptr, ptr %memberidx.i87, align 8
  %memberidx1.i88 = getelementptr inbounds %Compiler, ptr %44, i64 0, i32 6
  %45 = load ptr, ptr %memberidx1.i88, align 8
  %memberidx2.i89 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx2.i89, align 4
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %common.ret.loopexit, label %ifend

if.entry36.thread:                                ; preds = %if.entry15, %Array_Statement____sl__.exit, %if.entry32, %if.entry27
  %memberidx5.i.sink = phi ptr [ %memberidx5.i, %if.entry32 ], [ %memberidx4.i, %if.entry27 ], [ %memberidx3.i, %Array_Statement____sl__.exit ], [ %memberidx3.i, %if.entry15 ]
  store i1 false, ptr %38, align 1
  store i1 true, ptr %memberidx5.i.sink, align 1
  tail call void @free(ptr nonnull %38)
  br label %ifend38

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %38, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend38
  %common.ret.op = phi ptr [ %5, %ifend38 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %48 = load i64, ptr %memberidx.i.i, align 4
  %49 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %48, %49
  br i1 %.not.i, label %ifend.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_Statement____sl__.exit_crit_edge:     ; preds = %ifend
  %.pre135 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx1.i.i, align 4
  %51 = load ptr, ptr %memberidx2.i.i, align 8
  %52 = shl i64 %49, 4
  %53 = tail call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %memberidx2.i.i, align 8
  %.pre134 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %ifend.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %54 = phi ptr [ %.pre135, %ifend.Array_Statement____sl__.exit_crit_edge ], [ %53, %if.entry.i ]
  %55 = phi i64 [ %48, %ifend.Array_Statement____sl__.exit_crit_edge ], [ %.pre134, %if.entry.i ]
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i, align 4
  %57 = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %43, ptr %57, align 8
  %58 = load i64, ptr %43, align 4
  switch i64 %58, label %ifend34 [
    i64 7, label %if.entry36.thread
    i64 0, label %if.entry11
    i64 5, label %if.entry27
    i64 6, label %if.entry32
  ]

if.entry11:                                       ; preds = %Array_Statement____sl__.exit
  %memberidx14 = getelementptr inbounds %IfStatement, ptr %43, i64 0, i32 3
  %59 = load ptr, ptr %memberidx14, align 8
  %.not76 = icmp eq ptr %59, null
  br i1 %.not76, label %ifend34, label %if.entry15

if.entry15:                                       ; preds = %if.entry11
  %memberidx18 = getelementptr inbounds %IfStatement, ptr %43, i64 0, i32 2
  %60 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Block, ptr %60, i64 0, i32 1
  %61 = load i1, ptr %memberidx19, align 1
  %memberidx21 = getelementptr inbounds %Block, ptr %59, i64 0, i32 1
  %62 = load i1, ptr %memberidx21, align 1
  %63 = and i1 %61, %62
  br i1 %63, label %if.entry36.thread, label %ifend34

if.entry27:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

if.entry32:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

ifend34:                                          ; preds = %Array_Statement____sl__.exit, %if.entry11, %if.entry15
  %64 = add nuw nsw i64 %42, 1
  store i64 %64, ptr %memberidx1.i.i82, align 4
  %65 = getelementptr inbounds ptr, ptr %39, i64 %42
  %.not137 = icmp slt i64 %42, %40
  br i1 %.not137, label %for.body, label %if.entry36

if.entry36:                                       ; preds = %ifend34
  tail call void @free(ptr nonnull %38)
  %.pre136 = load i64, ptr %43, align 4
  %66 = icmp eq i64 %.pre136, 8
  %67 = and i1 %66, %3
  br i1 %67, label %if.entry40, label %ifend38

ifend38:                                          ; preds = %if.entry36.thread, %for.end.thread138, %if.entry40, %if.entry36
  %memberidx47 = getelementptr inbounds %Scope, ptr %ternary, i64 0, i32 5
  %68 = load ptr, ptr %memberidx47, align 8
  store ptr %68, ptr %memberidx, align 8
  br label %common.ret

if.entry40:                                       ; preds = %if.entry36
  store ptr %43, ptr %memberidx6.i, align 8
  %69 = load ptr, ptr %6, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = tail call ptr %70(ptr nonnull %6)
  br label %ifend38
}

define internal fastcc void @Map_string_Generic__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_Generic_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_Generic____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_Generic____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_Generic__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_Generic__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @TypeChecker_check_class_body(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 21
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend55, %ifend13, %ifend10, %2, %TypeChecker_error.exit191, %for.end42, %TypeChecker_error.exit
  ret void

ifend:                                            ; preds = %2
  %8 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i193, %ifend
  %9 = phi i64 [ %.pr, %if.entry.i193 ], [ %6, %ifend ]
  %.tr11.i = phi ptr [ %10, %if.entry.i193 ], [ %5, %ifend ]
  switch i64 %9, label %get_class_from_type.exit [
    i64 20, label %if.entry.i193
    i64 11, label %if.entry3.i
  ]

if.entry.i193:                                    ; preds = %tailrecurse.i
  %memberidx1.i192 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i192, align 8
  %.pr = load i64, ptr %10, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i194 = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i194, align 8
  %13 = load i64, ptr %11, align 4
  %memberidx.i.i.i195 = getelementptr inbounds %Array_Module_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i195, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i196 = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i196, align 8
  %memberidx3.i.i197 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i197, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i5.i.i, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %21, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx4, align 8
  %23 = load ptr, ptr %common.ret.op.i, align 8
  store ptr %23, ptr %memberidx4, align 8
  %memberidx7 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 2
  %24 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %24, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %get_class_from_type.exit
  tail call fastcc void @TypeChecker_add_inherited_props_to_class(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  br label %ifend10

ifend10:                                          ; preds = %get_class_from_type.exit, %if.entry8
  tail call fastcc void @TypeChecker_declare_class_fields(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend10
  tail call fastcc void @TypeChecker_declare_class_methods(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i135 = getelementptr inbounds %Compiler, ptr %29, i64 0, i32 6
  %30 = load ptr, ptr %memberidx1.i135, align 8
  %memberidx2.i136 = getelementptr inbounds %Array_FloError_, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i136, align 4
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %common.ret, label %for.entry

for.entry:                                        ; preds = %ifend13
  %memberidx17 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %33 = load ptr, ptr %memberidx17, align 8
  %34 = tail call ptr @malloc(i32 25)
  %35 = load ptr, ptr %33, align 8
  %memberidx1.i137 = getelementptr inbounds %Map_string_PropId_, ptr %33, i64 0, i32 1
  %36 = load i64, ptr %memberidx1.i137, align 4
  %memberidx2.i138 = getelementptr inbounds %Map_string_PropId_, ptr %33, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i138, align 4
  store i1 false, ptr %34, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %34, i64 0, i32 1
  store ptr %35, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %34, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %34, i64 0, i32 3
  store i64 %37, ptr %memberidx3.i.i, align 4
  %38 = add nsw i64 %36, -1
  store i64 %38, ptr %memberidx2.i.i, align 4
  %39 = icmp sgt i64 %36, 0
  br i1 %39, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %40 = phi i64 [ %43, %ifend.i ], [ %38, %for.entry ]
  %41 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %35, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %41, i64 1
  %42 = load ptr, ptr %41, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %43 = add nsw i64 %40, -1
  store i64 %43, ptr %memberidx2.i.i, align 4
  %44 = icmp sgt i64 %40, 0
  br i1 %44, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %45 = phi i64 [ %43, %ifend.i ], [ %40, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %for.entry
  %46 = phi i64 [ %45, %MapIterator_string_PropId__next.exit.loopexit ], [ %38, %for.entry ]
  %memberidx1.i.i.promoted211 = phi ptr [ %incdec.ptr.i, %MapIterator_string_PropId__next.exit.loopexit ], [ %35, %for.entry ]
  %storemerge198206 = add nsw i64 %37, -1
  %storemerge207 = icmp slt i64 %37, 1
  br i1 %storemerge207, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit151
  %47 = phi i64 [ %79, %MapIterator_string_PropId__next.exit151 ], [ %46, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i145.lcssa213 = phi ptr [ %incdec.ptr.i145.lcssa212, %MapIterator_string_PropId__next.exit151 ], [ %memberidx1.i.i.promoted211, %MapIterator_string_PropId__next.exit ]
  %storemerge198208 = phi i64 [ %storemerge198, %MapIterator_string_PropId__next.exit151 ], [ %storemerge198206, %MapIterator_string_PropId__next.exit ]
  %prop_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i145.lcssa213, i64 -1
  %prop_entry.0 = load ptr, ptr %prop_entry.0.in, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_PropId_, ptr %prop_entry.0, i64 0, i32 1
  %48 = load ptr, ptr %memberidx19, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %if.entry22, label %ifend24

for.cond.for.end.loopexit_crit_edge:              ; preds = %MapIterator_string_PropId__next.exit151
  store ptr %incdec.ptr.i145.lcssa212, ptr %memberidx1.i.i, align 8
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.cond.for.end.loopexit_crit_edge, %MapIterator_string_PropId__next.exit
  %storemerge198.lcssa = phi i64 [ -1, %for.cond.for.end.loopexit_crit_edge ], [ %storemerge198206, %MapIterator_string_PropId__next.exit ]
  store i64 %storemerge198.lcssa, ptr %memberidx3.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %ifend33
  %.sink = phi ptr [ %34, %for.end.loopexit ], [ %memberidx37, %ifend33 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %34)
  %memberidx43 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 5
  %51 = load ptr, ptr %memberidx43, align 8
  %memberidx44201 = getelementptr inbounds %Array_ClassMethod_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx44201, align 4
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %for.body40.lr.ph, label %for.end42

for.body40.lr.ph:                                 ; preds = %for.end
  %memberidx45 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %memberidx49 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 4
  %memberidx50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %.pre224 = load ptr, ptr %memberidx45, align 8
  br label %for.body40

if.entry22:                                       ; preds = %for.body
  %54 = load ptr, ptr %prop_entry.0, align 8
  %55 = load ptr, ptr %0, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %48, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i.i.i, align 8
  %58 = load i64, ptr %56, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %61, i64 0, i32 3
  %62 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %63 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx.i141 = getelementptr inbounds %Class, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx.i141, align 8
  %memberidx1.i142 = getelementptr inbounds %PropId, ptr %48, i64 0, i32 2
  %68 = load i64, ptr %memberidx1.i142, align 4
  %memberidx.i3.i = getelementptr inbounds %Array_ClassMethod_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i3.i, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx26 = getelementptr inbounds %ClassMethod, ptr %71, i64 0, i32 7
  %72 = load i1, ptr %memberidx26, align 1
  br i1 %72, label %if.entry27, label %ifend24

ifend24:                                          ; preds = %if.entry22, %for.body
  %73 = add nsw i64 %47, -1
  store i64 %73, ptr %memberidx2.i.i, align 4
  %74 = icmp sgt i64 %47, 0
  br i1 %74, label %while.entry.i147, label %MapIterator_string_PropId__next.exit151

while.entry.i147:                                 ; preds = %ifend24, %ifend.i150
  %75 = phi i64 [ %78, %ifend.i150 ], [ %73, %ifend24 ]
  %76 = phi ptr [ %incdec.ptr.i145, %ifend.i150 ], [ %incdec.ptr.i145.lcssa213, %ifend24 ]
  %incdec.ptr.i145 = getelementptr inbounds ptr, ptr %76, i64 1
  %77 = load ptr, ptr %76, align 8
  %.not.i146 = icmp eq ptr %77, null
  br i1 %.not.i146, label %ifend.i150, label %MapIterator_string_PropId__next.exit151

ifend.i150:                                       ; preds = %while.entry.i147
  %78 = add nsw i64 %75, -1
  store i64 %78, ptr %memberidx2.i.i, align 4
  %.not234 = icmp eq i64 %75, 0
  br i1 %.not234, label %MapIterator_string_PropId__next.exit151, label %while.entry.i147

MapIterator_string_PropId__next.exit151:          ; preds = %while.entry.i147, %ifend.i150, %ifend24
  %79 = phi i64 [ %73, %ifend24 ], [ %75, %while.entry.i147 ], [ -1, %ifend.i150 ]
  %incdec.ptr.i145.lcssa212 = phi ptr [ %incdec.ptr.i145.lcssa213, %ifend24 ], [ %incdec.ptr.i145, %ifend.i150 ], [ %incdec.ptr.i145, %while.entry.i147 ]
  %storemerge198 = add nsw i64 %storemerge198208, -1
  %storemerge = icmp slt i64 %storemerge198208, 1
  br i1 %storemerge, label %for.cond.for.end.loopexit_crit_edge, label %for.body

if.entry27:                                       ; preds = %if.entry22
  store ptr %incdec.ptr.i145.lcssa213, ptr %memberidx1.i.i, align 8
  store i64 %storemerge198208, ptr %memberidx3.i.i, align 4
  store i1 false, ptr %34, align 1
  %memberidx30 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 3
  %80 = load ptr, ptr %memberidx30, align 8
  %.not133 = icmp eq ptr %80, null
  br i1 %.not133, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %if.entry27
  %81 = load ptr, ptr %54, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %81, i64 0, i32 5
  %82 = load ptr, ptr %memberidx34, align 8
  %83 = tail call ptr %82(ptr nonnull %54)
  %84 = alloca ptr, align 8
  %85 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %84, ptr nonnull @155, ptr %83)
  %86 = load ptr, ptr %84, align 8
  %87 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i152 = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i152, align 8
  %memberidx1.i153 = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 %85, ptr %memberidx1.i153, align 4
  %memberidx2.i154 = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 %85, ptr %memberidx2.i154, align 4
  tail call void @free(ptr %83)
  %88 = load ptr, ptr %1, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %88, i64 0, i32 1
  %89 = load ptr, ptr %memberidx36, align 8
  %90 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i156 = getelementptr inbounds %Compiler, ptr %90, i64 0, i32 6
  %91 = load ptr, ptr %memberidx1.i156, align 8
  %92 = call ptr @malloc(i32 24)
  store i64 4, ptr %92, align 4
  %memberidx1.i.i157 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 2
  store ptr %89, ptr %memberidx1.i.i157, align 8
  %memberidx2.i.i158 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 1
  store ptr %87, ptr %memberidx2.i.i158, align 8
  %memberidx.i.i159 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i159, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 3
  %94 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %93, %94
  br i1 %.not.i.i, label %if.entry31.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry31.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry31
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %.pre223 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry31
  %95 = shl nuw i64 %94, 1
  store i64 %95, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i161 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %96 = load ptr, ptr %memberidx2.i.i.i161, align 8
  %97 = shl i64 %94, 4
  %98 = call ptr @realloc(ptr %96, i64 %97)
  store ptr %98, ptr %memberidx2.i.i.i161, align 8
  %.pre = load i64, ptr %memberidx.i.i159, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry31.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %99 = phi ptr [ %.pre223, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %98, %if.entry.i.i ]
  %100 = phi i64 [ %93, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %101 = add nsw i64 %100, 1
  store i64 %101, ptr %memberidx.i.i159, align 4
  %102 = getelementptr inbounds ptr, ptr %99, i64 %100
  store ptr %92, ptr %102, align 8
  br label %common.ret

ifend33:                                          ; preds = %if.entry27
  %memberidx37 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 10
  br label %for.end

for.body40:                                       ; preds = %for.body40.lr.ph, %for.incr41
  %103 = phi ptr [ %.pre224, %for.body40.lr.ph ], [ %115, %for.incr41 ]
  %104 = phi ptr [ %51, %for.body40.lr.ph ], [ %117, %for.incr41 ]
  %i.0202 = phi i64 [ 0, %for.body40.lr.ph ], [ %116, %for.incr41 ]
  %memberidx.i162 = getelementptr inbounds %Array_ClassMethod_, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx.i162, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %i.0202
  %107 = load ptr, ptr %106, align 8
  %108 = load ptr, ptr %107, align 8
  store ptr %108, ptr %memberidx45, align 8
  %109 = load ptr, ptr %memberidx49, align 8
  %memberidx.i163 = getelementptr inbounds %Array_MethodNode_, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i163, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %i.0202
  %112 = load ptr, ptr %111, align 8
  %memberidx51 = getelementptr inbounds %ClassMethod, ptr %107, i64 0, i32 8
  %113 = load ptr, ptr %memberidx51, align 8
  store ptr %113, ptr %memberidx50, align 8
  %memberidx52 = getelementptr inbounds %ClassMethod, ptr %107, i64 0, i32 7
  %114 = load i1, ptr %memberidx52, align 1
  br i1 %114, label %for.incr41, label %ifend55

for.incr41:                                       ; preds = %for.body40, %ifend65
  %115 = phi ptr [ %108, %for.body40 ], [ %103, %ifend65 ]
  %116 = add nuw nsw i64 %i.0202, 1
  %117 = load ptr, ptr %memberidx43, align 8
  %memberidx44 = getelementptr inbounds %Array_ClassMethod_, ptr %117, i64 0, i32 2
  %118 = load i64, ptr %memberidx44, align 4
  %119 = icmp slt i64 %116, %118
  br i1 %119, label %for.body40, label %for.end42

for.end42:                                        ; preds = %for.incr41, %for.end
  store ptr %22, ptr %memberidx4, align 8
  br label %common.ret

ifend55:                                          ; preds = %for.body40
  %memberidx56 = getelementptr inbounds %ClassMethod, ptr %107, i64 0, i32 5
  %memberidx57 = getelementptr inbounds %MethodNode, ptr %112, i64 0, i32 2
  %120 = load ptr, ptr %memberidx57, align 8
  %121 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %120, ptr null, i1 false)
  store ptr %121, ptr %memberidx56, align 8
  %122 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i165 = getelementptr inbounds %Compiler, ptr %122, i64 0, i32 6
  %123 = load ptr, ptr %memberidx1.i165, align 8
  %memberidx2.i166 = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 2
  %124 = load i64, ptr %memberidx2.i166, align 4
  %125 = icmp sgt i64 %124, 0
  br i1 %125, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend55
  %memberidx62 = getelementptr inbounds %Block, ptr %121, i64 0, i32 1
  %126 = load i1, ptr %memberidx62, align 1
  br i1 %126, label %ifend65, label %if.entry63

if.entry63:                                       ; preds = %ifend60
  %memberidx66 = getelementptr inbounds %ClassMethod, ptr %107, i64 0, i32 4
  %127 = load ptr, ptr %memberidx66, align 8
  %memberidx67 = getelementptr inbounds %FunctionType, ptr %127, i64 0, i32 2
  %128 = load ptr, ptr %memberidx67, align 8
  %129 = load i64, ptr %128, align 4
  %130 = icmp eq i64 %129, 10
  br i1 %130, label %if.entry69, label %else70

ifend65:                                          ; preds = %ifend60, %Array_Statement____sl__.exit
  store ptr %103, ptr %memberidx45, align 8
  %131 = load ptr, ptr %0, align 8
  %132 = load ptr, ptr %memberidx51, align 8
  %memberidx.i167 = getelementptr inbounds %Program, ptr %131, i64 0, i32 1
  %133 = load ptr, ptr %memberidx.i167, align 8
  %134 = load i64, ptr %132, align 4
  %memberidx.i.i168 = getelementptr inbounds %Array_Module_, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i.i168, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  %memberidx2.i169 = getelementptr inbounds %Module, ptr %137, i64 0, i32 7
  %138 = load ptr, ptr %memberidx2.i169, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %132, i64 0, i32 1
  %139 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %138, i64 0, i32 1
  %140 = load ptr, ptr %memberidx.i5.i, align 8
  %141 = getelementptr inbounds ptr, ptr %140, i64 %139
  %142 = load ptr, ptr %141, align 8
  %memberidx80 = getelementptr inbounds %Scope, ptr %142, i64 0, i32 5
  %143 = load ptr, ptr %memberidx80, align 8
  store ptr %143, ptr %memberidx50, align 8
  br label %for.incr41

if.entry69:                                       ; preds = %if.entry63
  %144 = load ptr, ptr %121, align 8
  %145 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %145, align 4
  %memberidx.i170 = getelementptr inbounds %ReturnStatement, ptr %145, i64 0, i32 1
  store ptr null, ptr %memberidx.i170, align 8
  %memberidx.i171 = getelementptr inbounds %Array_Statement_, ptr %144, i64 0, i32 2
  %146 = load i64, ptr %memberidx.i171, align 4
  %memberidx1.i172 = getelementptr inbounds %Array_Statement_, ptr %144, i64 0, i32 3
  %147 = load i64, ptr %memberidx1.i172, align 4
  %.not.i173 = icmp slt i64 %146, %147
  br i1 %.not.i173, label %if.entry69.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

if.entry69.Array_Statement____sl__.exit_crit_edge: ; preds = %if.entry69
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Statement_, ptr %144, i64 0, i32 1
  %.pre228 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %if.entry69
  %148 = shl nuw i64 %147, 1
  store i64 %148, ptr %memberidx1.i172, align 4
  %memberidx2.i.i175 = getelementptr inbounds %Array_Statement_, ptr %144, i64 0, i32 1
  %149 = load ptr, ptr %memberidx2.i.i175, align 8
  %150 = shl i64 %147, 4
  %151 = tail call ptr @realloc(ptr %149, i64 %150)
  store ptr %151, ptr %memberidx2.i.i175, align 8
  %.pre227 = load i64, ptr %memberidx.i171, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %if.entry69.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %152 = phi ptr [ %.pre228, %if.entry69.Array_Statement____sl__.exit_crit_edge ], [ %151, %if.entry.i ]
  %153 = phi i64 [ %146, %if.entry69.Array_Statement____sl__.exit_crit_edge ], [ %.pre227, %if.entry.i ]
  %154 = add nsw i64 %153, 1
  store i64 %154, ptr %memberidx.i171, align 4
  %155 = getelementptr inbounds ptr, ptr %152, i64 %153
  store ptr %145, ptr %155, align 8
  br label %ifend65

else70:                                           ; preds = %if.entry63
  %156 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %156, ptr noundef nonnull align 8 dereferenceable(38) @156, i64 38, i1 false)
  %157 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %157, align 8
  %memberidx.i.i177 = getelementptr inbounds %string, ptr %157, i64 0, i32 1
  store ptr %156, ptr %memberidx.i.i177, align 8
  %memberidx1.i.i178 = getelementptr inbounds %string, ptr %157, i64 0, i32 2
  store i64 38, ptr %memberidx1.i.i178, align 4
  %memberidx2.i.i179 = getelementptr inbounds %string, ptr %157, i64 0, i32 3
  store i64 38, ptr %memberidx2.i.i179, align 4
  %memberidx74 = getelementptr inbounds %MethodNode, ptr %112, i64 0, i32 4
  %158 = load ptr, ptr %memberidx74, align 8
  %159 = load ptr, ptr %158, align 8
  %160 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i181 = getelementptr inbounds %Compiler, ptr %160, i64 0, i32 6
  %161 = load ptr, ptr %memberidx1.i181, align 8
  %162 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %162, align 4
  %memberidx1.i.i182 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 2
  store ptr %159, ptr %memberidx1.i.i182, align 8
  %memberidx2.i.i183 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 1
  store ptr %157, ptr %memberidx2.i.i183, align 8
  %memberidx.i.i184 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 2
  %163 = load i64, ptr %memberidx.i.i184, align 4
  %memberidx1.i2.i185 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 3
  %164 = load i64, ptr %memberidx1.i2.i185, align 4
  %.not.i.i186 = icmp slt i64 %163, %164
  br i1 %.not.i.i186, label %else70.TypeChecker_error.exit191_crit_edge, label %if.entry.i.i189

else70.TypeChecker_error.exit191_crit_edge:       ; preds = %else70
  %memberidx4.i.i190.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %.pre226 = load ptr, ptr %memberidx4.i.i190.phi.trans.insert, align 8
  br label %TypeChecker_error.exit191

if.entry.i.i189:                                  ; preds = %else70
  %165 = shl nuw i64 %164, 1
  store i64 %165, ptr %memberidx1.i2.i185, align 4
  %memberidx2.i.i.i188 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %166 = load ptr, ptr %memberidx2.i.i.i188, align 8
  %167 = shl i64 %164, 4
  %168 = tail call ptr @realloc(ptr %166, i64 %167)
  store ptr %168, ptr %memberidx2.i.i.i188, align 8
  %.pre225 = load i64, ptr %memberidx.i.i184, align 4
  br label %TypeChecker_error.exit191

TypeChecker_error.exit191:                        ; preds = %else70.TypeChecker_error.exit191_crit_edge, %if.entry.i.i189
  %169 = phi ptr [ %.pre226, %else70.TypeChecker_error.exit191_crit_edge ], [ %168, %if.entry.i.i189 ]
  %170 = phi i64 [ %163, %else70.TypeChecker_error.exit191_crit_edge ], [ %.pre225, %if.entry.i.i189 ]
  %171 = add nsw i64 %170, 1
  store i64 %171, ptr %memberidx.i.i184, align 4
  %172 = getelementptr inbounds ptr, ptr %169, i64 %170
  store ptr %162, ptr %172, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = icmp eq ptr %2, null
  %8 = load ptr, ptr %1, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i, align 4
  %12 = tail call i1 %9(ptr nonnull %1, ptr nonnull %11)
  %13 = or i1 %7, %12
  br i1 %13, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %14 = load ptr, ptr %memberidx.i, align 8
  %15 = load i64, ptr %14, align 4
  %16 = load ptr, ptr %0, align 8
  %memberidx1.i.i59 = getelementptr inbounds %Program, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i.i59, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %15
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr %21, align 8
  %memberidx.i60 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %22, i64 0, i32 5
  %23 = load ptr, ptr %memberidx.i60, align 8
  %24 = tail call ptr %23(ptr nonnull %21)
  %25 = tail call ptr @dirname(ptr %24)
  %26 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %25)
  %27 = trunc i64 %26 to i32
  %28 = tail call ptr @malloc(i32 %27)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %25, i64 %26, i1 false)
  %29 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %29, align 8
  %memberidx.i.i.i61 = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  store ptr %28, ptr %memberidx.i.i.i61, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %29, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %30 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %31 = tail call ptr %30(ptr nonnull %29)
  %32 = load ptr, ptr %1, align 8
  %memberidx1.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx1.i, align 8
  %34 = tail call ptr %33(ptr nonnull %1)
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @8, ptr %31, ptr %34)
  %36 = load ptr, ptr %4, align 8
  %37 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i63 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i63, align 8
  %memberidx1.i.i64 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i.i64, align 4
  %memberidx2.i.i65 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i.i65, align 4
  call void @free(ptr %31)
  call void @free(ptr %34)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %filepath.0 = phi ptr [ %37, %if.entry ], [ %1, %3 ]
  %38 = load ptr, ptr %memberidx, align 8
  %39 = load ptr, ptr %38, align 8
  %memberidx5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %39, i64 0, i32 1
  %40 = load ptr, ptr %memberidx5, align 8
  %41 = call ptr %40(ptr nonnull %38, ptr nonnull %filepath.0)
  %42 = load i64, ptr %41, align 4
  %43 = load ptr, ptr %0, align 8
  %memberidx8 = getelementptr inbounds %Program, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_Module_, ptr %44, i64 0, i32 2
  %45 = load i64, ptr %memberidx9, align 4
  %46 = icmp slt i64 %42, %45
  br i1 %46, label %if.entry10, label %ifend12

common.ret:                                       ; preds = %ifend31, %ifend26, %ifend18, %ifend34, %TypeChecker_error.exit, %if.entry10
  %common.ret.op = phi ptr [ %49, %if.entry10 ], [ null, %TypeChecker_error.exit ], [ %87, %ifend34 ], [ null, %ifend18 ], [ null, %ifend26 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

if.entry10:                                       ; preds = %ifend
  %memberidx.i.i67 = getelementptr inbounds %Array_Module_, ptr %44, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i67, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %42
  %49 = load ptr, ptr %48, align 8
  br label %common.ret

ifend12:                                          ; preds = %ifend
  %50 = load ptr, ptr %memberidx, align 8
  %51 = load ptr, ptr %50, align 8
  %memberidx15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %51, i64 0, i32 2
  %52 = load ptr, ptr %memberidx15, align 8
  %53 = call i1 %52(ptr nonnull %50, ptr nonnull %41)
  br i1 %53, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend12
  %54 = load ptr, ptr %1, align 8
  %memberidx19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx19, align 8
  %56 = call ptr %55(ptr nonnull %1)
  %57 = alloca ptr, align 8
  %58 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %57, ptr nonnull @40, ptr %56)
  %59 = load ptr, ptr %57, align 8
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i68 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i69, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 %58, ptr %memberidx2.i, align 4
  tail call void @free(ptr %56)
  %61 = load ptr, ptr %memberidx, align 8
  %memberidx1.i71 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx1.i71, align 8
  %63 = call ptr @malloc(i32 24)
  store i64 3, ptr %63, align 4
  %memberidx1.i.i72 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i.i72, align 8
  %memberidx2.i.i73 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %60, ptr %memberidx2.i.i73, align 8
  %memberidx.i.i74 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i74, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %65 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %64, %65
  br i1 %.not.i.i, label %if.entry16.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry16.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry16
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre86 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry16
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %67 = load ptr, ptr %memberidx2.i.i.i76, align 8
  %68 = shl i64 %65, 4
  %69 = call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %memberidx2.i.i.i76, align 8
  %.pre = load i64, ptr %memberidx.i.i74, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry16.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %70 = phi ptr [ %.pre86, %if.entry16.TypeChecker_error.exit_crit_edge ], [ %69, %if.entry.i.i ]
  %71 = phi i64 [ %64, %if.entry16.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i74, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend12
  %74 = load ptr, ptr %memberidx, align 8
  %memberidx21 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 3
  %75 = load ptr, ptr %memberidx21, align 8
  %memberidx23 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 6
  %76 = load ptr, ptr %memberidx23, align 8
  %77 = call fastcc ptr @Lexer_tokenize(ptr %75, ptr %76)
  %78 = load ptr, ptr %memberidx, align 8
  %memberidx1.i78 = getelementptr inbounds %Compiler, ptr %78, i64 0, i32 6
  %79 = load ptr, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 2
  %80 = load i64, ptr %memberidx2.i79, align 4
  %81 = icmp sgt i64 %80, 0
  br i1 %81, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend18
  %82 = call fastcc ptr @Parser_parse(ptr %77, ptr nonnull %79)
  %83 = load ptr, ptr %memberidx, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %83, i64 0, i32 6
  %84 = load ptr, ptr %memberidx1.i81, align 8
  %memberidx2.i82 = getelementptr inbounds %Array_FloError_, ptr %84, i64 0, i32 2
  %85 = load i64, ptr %memberidx2.i82, align 4
  %86 = icmp sgt i64 %85, 0
  br i1 %86, label %common.ret, label %ifend31

ifend31:                                          ; preds = %ifend26
  %87 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %0, ptr %82, ptr nonnull %filepath.0)
  %88 = load ptr, ptr %memberidx, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %88, i64 0, i32 6
  %89 = load ptr, ptr %memberidx1.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %Array_FloError_, ptr %89, i64 0, i32 2
  %90 = load i64, ptr %memberidx2.i85, align 4
  %91 = icmp sgt i64 %90, 0
  br i1 %91, label %common.ret, label %ifend34

ifend34:                                          ; preds = %ifend31
  %92 = load ptr, ptr %88, align 8
  %memberidx36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr }, ptr %92, i64 0, i32 2
  %93 = load ptr, ptr %memberidx36, align 8
  %94 = call i1 %93(ptr nonnull %88, ptr %6)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_fields(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 3
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2331 = getelementptr inbounds %Array_FieldNode_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx2331, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i178 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx92 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx99 = getelementptr inbounds %Class, ptr %1, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassField____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %218, %Array_ClassField____sl__.exit ]
  %current_vtable_index.0333 = phi i64 [ %6, %for.body.lr.ph ], [ %current_vtable_index.1, %Array_ClassField____sl__.exit ]
  %i.0332 = phi i64 [ 0, %for.body.lr.ph ], [ %217, %Array_ClassField____sl__.exit ]
  %memberidx.i = getelementptr inbounds %Array_FieldNode_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0332
  %10 = load ptr, ptr %9, align 8
  %11 = tail call ptr @malloc(i32 49)
  %memberidx.i173 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx.i173, align 1
  %memberidx4 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %10, align 8
  %memberidx6 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx6, align 8
  store ptr %13, ptr %memberidx4, align 8
  %14 = call fastcc i1 @is_operator_overload_name(ptr %13)
  br i1 %14, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassField____sl__.exit, %ifend, %if.entry62, %for.entry, %TypeChecker_error.exit308, %TypeChecker_error.exit267, %TypeChecker_error.exit247, %TypeChecker_error.exit207
  ret void

if.entry:                                         ; preds = %for.body
  %15 = load ptr, ptr %memberidx4, align 8
  %16 = call ptr @malloc(i32 75)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %16, ptr noundef nonnull align 8 dereferenceable(75) @136, i64 75, i1 false)
  %17 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 75, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 75, ptr %memberidx2.i.i, align 4
  %memberidx.i174 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i174, align 4
  %19 = add nuw i64 %18, 75
  %20 = trunc i64 %19 to i32
  %21 = call ptr @malloc(i32 %20)
  %memberidx2.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load i64, ptr %memberidx.i174, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %24, ptr noundef nonnull align 8 dereferenceable(75) %16, i64 75, i1 false)
  %25 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %25, align 8
  %memberidx.i.i175 = getelementptr inbounds %string, ptr %25, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i175, align 8
  %memberidx1.i.i176 = getelementptr inbounds %string, ptr %25, i64 0, i32 2
  store i64 %19, ptr %memberidx1.i.i176, align 4
  %memberidx2.i.i177 = getelementptr inbounds %string, ptr %25, i64 0, i32 3
  store i64 %19, ptr %memberidx2.i.i177, align 4
  %26 = load ptr, ptr %10, align 8
  %memberidx10 = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx10, align 8
  %28 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 6
  %29 = load ptr, ptr %memberidx1.i179, align 8
  %30 = call ptr @malloc(i32 24)
  store i64 1, ptr %30, align 4
  %memberidx1.i.i180 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 2
  store ptr %27, ptr %memberidx1.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 1
  store ptr %25, ptr %memberidx2.i.i181, align 8
  %memberidx.i.i182 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %31 = load i64, ptr %memberidx.i.i182, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 3
  %32 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %31, %32
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %.pre344 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %33 = shl nuw i64 %32, 1
  store i64 %33, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %34 = load ptr, ptr %memberidx2.i.i.i, align 8
  %35 = shl i64 %32, 4
  %36 = call ptr @realloc(ptr %34, i64 %35)
  store ptr %36, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i182, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %37 = phi ptr [ %.pre344, %if.entry.TypeChecker_error.exit_crit_edge ], [ %36, %if.entry.i.i ]
  %38 = phi i64 [ %31, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr %memberidx.i.i182, align 4
  %40 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %30, ptr %40, align 8
  br label %ifend

ifend:                                            ; preds = %for.body, %TypeChecker_error.exit
  %memberidx11 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 2
  %memberidx12 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 1
  %41 = load i64, ptr %memberidx12, align 4
  store i64 %41, ptr %memberidx11, align 4
  %42 = tail call ptr @malloc(i32 24)
  %43 = load ptr, ptr %1, align 8
  store i64 1, ptr %42, align 4
  %memberidx1.i183 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  store ptr %43, ptr %memberidx1.i183, align 8
  %memberidx2.i184 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  store i64 %i.0332, ptr %memberidx2.i184, align 4
  store ptr %42, ptr %11, align 8
  %memberidx15 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 4
  %memberidx16 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 3
  %44 = load ptr, ptr %memberidx16, align 8
  %45 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %44)
  store ptr %45, ptr %memberidx15, align 8
  %memberidx17 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 6
  store i64 %current_vtable_index.0333, ptr %memberidx17, align 4
  %46 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i186 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx1.i186, align 8
  %memberidx2.i187 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %48 = load i64, ptr %memberidx2.i187, align 4
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend
  %50 = load ptr, ptr %memberidx21, align 8
  %51 = load ptr, ptr %memberidx4, align 8
  %52 = call fastcc i64 @Map_string_PropId__hash_fnc(ptr %51)
  %memberidx.i188 = getelementptr inbounds %Map_string_PropId_, ptr %50, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i188, align 4
  %54 = urem i64 %52, %53
  %55 = load ptr, ptr %50, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %.not.i = icmp eq ptr %57, null
  br i1 %.not.i, label %ifend25, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend20
  %memberidx1.i.i190 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %58 = phi ptr [ %68, %else.i ], [ %55, %while.entry.i.preheader ]
  %59 = phi i64 [ %69, %else.i ], [ %53, %while.entry.i.preheader ]
  %60 = phi ptr [ %73, %else.i ], [ %57, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %71, %else.i ], [ %54, %while.entry.i.preheader ]
  %61 = load ptr, ptr %60, align 8
  %memberidx.i.i189 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %62 = load i64, ptr %memberidx.i.i189, align 4
  %63 = load i64, ptr %memberidx1.i.i190, align 4
  %.not.i.i191 = icmp eq i64 %62, %63
  br i1 %.not.i.i191, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i192 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  %64 = load ptr, ptr %memberidx2.i.i192, align 8
  %65 = load ptr, ptr %memberidx3.i.i, align 8
  %66 = call i64 @memcmp(ptr %64, ptr %65, i64 %62)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre345 = load i64, ptr %memberidx.i188, align 4
  %.pre346 = load ptr, ptr %50, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre347.pre = load ptr, ptr %50, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre347.pre, i64 %hash.0.i
  %.pre348.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre348.pre, null
  br i1 %.not25.i, label %ifend25, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %68 = phi ptr [ %.pre346, %ifend.i.i.else.i_crit_edge ], [ %58, %while.entry.i ]
  %69 = phi i64 [ %.pre345, %ifend.i.i.else.i_crit_edge ], [ %59, %while.entry.i ]
  %70 = add nuw i64 %hash.0.i, 1
  %71 = urem i64 %70, %69
  %72 = getelementptr inbounds ptr, ptr %68, i64 %71
  %73 = load ptr, ptr %72, align 8
  %.not26.i = icmp eq ptr %73, null
  br i1 %.not26.i, label %ifend25, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre348.pre, i64 0, i32 1
  %74 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %74, null
  br i1 %.not, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx26 = getelementptr inbounds %PropId, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx26, align 8
  %76 = load ptr, ptr %1, align 8
  %77 = icmp eq ptr %75, %76
  br i1 %77, label %if.entry28, label %ifend30

ifend25:                                          ; preds = %else.i, %ifend20, %while.end.i, %ifend42, %Map_string_PropId____getitem__.exit
  %memberidx61 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 2
  %78 = load ptr, ptr %memberidx61, align 8
  %.not171 = icmp eq ptr %78, null
  br i1 %.not171, label %else63, label %if.entry62

if.entry28:                                       ; preds = %if.entry23
  %79 = load ptr, ptr %memberidx4, align 8
  %80 = load ptr, ptr %79, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx32, align 8
  %82 = call ptr %81(ptr nonnull %79)
  %memberidx33 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %83 = load ptr, ptr %memberidx33, align 8
  %84 = load ptr, ptr %83, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx34, align 8
  %86 = call ptr %85(ptr nonnull %83)
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @137, ptr %82, ptr %86)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i193 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i193, align 8
  %memberidx1.i194 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx1.i194, align 4
  %memberidx2.i195 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 %88, ptr %memberidx2.i195, align 4
  tail call void @free(ptr %82)
  tail call void @free(ptr %86)
  %91 = load ptr, ptr %10, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx36, align 8
  %93 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i197 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 6
  %94 = load ptr, ptr %memberidx1.i197, align 8
  %95 = call ptr @malloc(i32 24)
  store i64 1, ptr %95, align 4
  %memberidx1.i.i198 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i198, align 8
  %memberidx2.i.i199 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i199, align 8
  %memberidx.i.i200 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %96 = load i64, ptr %memberidx.i.i200, align 4
  %memberidx1.i2.i201 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 3
  %97 = load i64, ptr %memberidx1.i2.i201, align 4
  %.not.i.i202 = icmp slt i64 %96, %97
  br i1 %.not.i.i202, label %if.entry28.TypeChecker_error.exit207_crit_edge, label %if.entry.i.i205

if.entry28.TypeChecker_error.exit207_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i206.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %.pre354 = load ptr, ptr %memberidx4.i.i206.phi.trans.insert, align 8
  br label %TypeChecker_error.exit207

if.entry.i.i205:                                  ; preds = %if.entry28
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx1.i2.i201, align 4
  %memberidx2.i.i.i204 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %99 = load ptr, ptr %memberidx2.i.i.i204, align 8
  %100 = shl i64 %97, 4
  %101 = call ptr @realloc(ptr %99, i64 %100)
  store ptr %101, ptr %memberidx2.i.i.i204, align 8
  %.pre353 = load i64, ptr %memberidx.i.i200, align 4
  br label %TypeChecker_error.exit207

TypeChecker_error.exit207:                        ; preds = %if.entry28.TypeChecker_error.exit207_crit_edge, %if.entry.i.i205
  %102 = phi ptr [ %.pre354, %if.entry28.TypeChecker_error.exit207_crit_edge ], [ %101, %if.entry.i.i205 ]
  %103 = phi i64 [ %96, %if.entry28.TypeChecker_error.exit207_crit_edge ], [ %.pre353, %if.entry.i.i205 ]
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr %memberidx.i.i200, align 4
  %105 = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %95, ptr %105, align 8
  br label %common.ret

ifend30:                                          ; preds = %if.entry23
  %106 = load ptr, ptr %0, align 8
  %memberidx.i.i.i209 = getelementptr inbounds %Program, ptr %106, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i.i.i209, align 8
  %108 = load i64, ptr %75, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %108
  %111 = load ptr, ptr %110, align 8
  %memberidx2.i.i.i210 = getelementptr inbounds %Module, ptr %111, i64 0, i32 3
  %112 = load ptr, ptr %memberidx2.i.i.i210, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %75, i64 0, i32 2
  %113 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %113
  %116 = load ptr, ptr %115, align 8
  %117 = load i64, ptr %74, align 4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %if.entry.i227, label %ifend.i232

if.entry.i227:                                    ; preds = %ifend30
  %memberidx1.i212 = getelementptr inbounds %Class, ptr %116, i64 0, i32 5
  %119 = load ptr, ptr %memberidx1.i212, align 8
  %memberidx2.i213 = getelementptr inbounds %PropId, ptr %74, i64 0, i32 2
  %120 = load i64, ptr %memberidx2.i213, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %119, i64 0, i32 1
  %121 = load ptr, ptr %memberidx.i12.i, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  %123 = load ptr, ptr %122, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %123, i64 0, i32 4
  %memberidx3.i226 = getelementptr inbounds %ClassMethod, ptr %123, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i232:                                       ; preds = %ifend30
  %memberidx4.i = getelementptr inbounds %Class, ptr %116, i64 0, i32 4
  %124 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i214 = getelementptr inbounds %PropId, ptr %74, i64 0, i32 2
  %125 = load i64, ptr %memberidx5.i214, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %124, i64 0, i32 1
  %126 = load ptr, ptr %memberidx.i11.i, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %128, i64 0, i32 4
  %memberidx6.i231 = getelementptr inbounds %ClassField, ptr %128, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i227, %ifend.i232
  %common.ret.op.i211318.in = phi ptr [ %memberidx3.i, %if.entry.i227 ], [ %memberidx6.i, %ifend.i232 ]
  %common.ret.op.in.i221 = phi ptr [ %memberidx3.i226, %if.entry.i227 ], [ %memberidx6.i231, %ifend.i232 ]
  %common.ret.op.i211318 = load ptr, ptr %common.ret.op.i211318.in, align 8
  %common.ret.op.i222 = load i64, ptr %common.ret.op.in.i221, align 4
  %129 = load ptr, ptr %memberidx15, align 8
  %130 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i211318, ptr %129)
  br i1 %130, label %ifend42, label %if.entry40

if.entry40:                                       ; preds = %get_class_prop_visibility.exit
  %131 = load ptr, ptr %memberidx4, align 8
  %132 = load ptr, ptr %131, align 8
  %memberidx44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %132, i64 0, i32 5
  %133 = load ptr, ptr %memberidx44, align 8
  %134 = call ptr %133(ptr nonnull %131)
  %memberidx45 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %135 = load ptr, ptr %memberidx45, align 8
  %136 = load ptr, ptr %135, align 8
  %memberidx46 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %136, i64 0, i32 5
  %137 = load ptr, ptr %memberidx46, align 8
  %138 = call ptr %137(ptr nonnull %135)
  %139 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i211318)
  %140 = load ptr, ptr %139, align 8
  %memberidx47 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx47, align 8
  %142 = call ptr %141(ptr nonnull %139)
  %143 = alloca ptr, align 8
  %144 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %143, ptr nonnull @138, ptr %134, ptr %138, ptr %142)
  %145 = load ptr, ptr %143, align 8
  %146 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %146, align 8
  %memberidx.i233 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  store ptr %145, ptr %memberidx.i233, align 8
  %memberidx1.i234 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  store i64 %144, ptr %memberidx1.i234, align 4
  %memberidx2.i235 = getelementptr inbounds %string, ptr %146, i64 0, i32 3
  store i64 %144, ptr %memberidx2.i235, align 4
  tail call void @free(ptr %134)
  tail call void @free(ptr %138)
  tail call void @free(ptr %142)
  %147 = load ptr, ptr %10, align 8
  %memberidx49 = getelementptr inbounds %Token, ptr %147, i64 0, i32 1
  %148 = load ptr, ptr %memberidx49, align 8
  %149 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i237 = getelementptr inbounds %Compiler, ptr %149, i64 0, i32 6
  %150 = load ptr, ptr %memberidx1.i237, align 8
  %151 = call ptr @malloc(i32 24)
  store i64 5, ptr %151, align 4
  %memberidx1.i.i238 = getelementptr inbounds %FloError, ptr %151, i64 0, i32 2
  store ptr %148, ptr %memberidx1.i.i238, align 8
  %memberidx2.i.i239 = getelementptr inbounds %FloError, ptr %151, i64 0, i32 1
  store ptr %146, ptr %memberidx2.i.i239, align 8
  %memberidx.i.i240 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 2
  %152 = load i64, ptr %memberidx.i.i240, align 4
  %memberidx1.i2.i241 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 3
  %153 = load i64, ptr %memberidx1.i2.i241, align 4
  %.not.i.i242 = icmp slt i64 %152, %153
  br i1 %.not.i.i242, label %if.entry40.TypeChecker_error.exit247_crit_edge, label %if.entry.i.i245

if.entry40.TypeChecker_error.exit247_crit_edge:   ; preds = %if.entry40
  %memberidx4.i.i246.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 1
  %.pre350 = load ptr, ptr %memberidx4.i.i246.phi.trans.insert, align 8
  br label %TypeChecker_error.exit247

if.entry.i.i245:                                  ; preds = %if.entry40
  %154 = shl nuw i64 %153, 1
  store i64 %154, ptr %memberidx1.i2.i241, align 4
  %memberidx2.i.i.i244 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i.i.i244, align 8
  %156 = shl i64 %153, 4
  %157 = call ptr @realloc(ptr %155, i64 %156)
  store ptr %157, ptr %memberidx2.i.i.i244, align 8
  %.pre349 = load i64, ptr %memberidx.i.i240, align 4
  br label %TypeChecker_error.exit247

TypeChecker_error.exit247:                        ; preds = %if.entry40.TypeChecker_error.exit247_crit_edge, %if.entry.i.i245
  %158 = phi ptr [ %.pre350, %if.entry40.TypeChecker_error.exit247_crit_edge ], [ %157, %if.entry.i.i245 ]
  %159 = phi i64 [ %152, %if.entry40.TypeChecker_error.exit247_crit_edge ], [ %.pre349, %if.entry.i.i245 ]
  %160 = add nsw i64 %159, 1
  store i64 %160, ptr %memberidx.i.i240, align 4
  %161 = getelementptr inbounds ptr, ptr %158, i64 %159
  store ptr %151, ptr %161, align 8
  br label %common.ret

ifend42:                                          ; preds = %get_class_prop_visibility.exit
  %162 = load i64, ptr %memberidx11, align 4
  %.not172 = icmp eq i64 %162, %common.ret.op.i222
  br i1 %.not172, label %ifend25, label %if.entry51

if.entry51:                                       ; preds = %ifend42
  %163 = load ptr, ptr %memberidx4, align 8
  %164 = load ptr, ptr %163, align 8
  %memberidx55 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %164, i64 0, i32 5
  %165 = load ptr, ptr %memberidx55, align 8
  %166 = call ptr %165(ptr nonnull %163)
  %memberidx56 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %167 = load ptr, ptr %memberidx56, align 8
  %168 = load ptr, ptr %167, align 8
  %memberidx57 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %168, i64 0, i32 5
  %169 = load ptr, ptr %memberidx57, align 8
  %170 = call ptr %169(ptr nonnull %167)
  switch i64 %common.ret.op.i222, label %ifend3.i [
    i64 1, label %if.entry.i251
    i64 2, label %if.entry1.i
  ]

if.entry.i251:                                    ; preds = %if.entry51
  %171 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %171, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry51
  %172 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %172, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry51
  %173 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %173, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i251, %if.entry1.i, %ifend3.i
  %.sink378 = phi ptr [ %171, %if.entry.i251 ], [ %172, %if.entry1.i ], [ %173, %ifend3.i ]
  %.sink376 = phi i64 [ 7, %if.entry.i251 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %174 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %174, align 8
  %memberidx.i.i.i249 = getelementptr inbounds %string, ptr %174, i64 0, i32 1
  store ptr %.sink378, ptr %memberidx.i.i.i249, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 2
  store i64 %.sink376, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i250 = getelementptr inbounds %string, ptr %174, i64 0, i32 3
  store i64 %.sink376, ptr %memberidx2.i.i.i250, align 4
  %175 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %176 = call ptr %175(ptr nonnull %174)
  %177 = alloca ptr, align 8
  %178 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %177, ptr nonnull @139, ptr %166, ptr %170, ptr %176)
  %179 = load ptr, ptr %177, align 8
  %180 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %180, align 8
  %memberidx.i253 = getelementptr inbounds %string, ptr %180, i64 0, i32 1
  store ptr %179, ptr %memberidx.i253, align 8
  %memberidx1.i254 = getelementptr inbounds %string, ptr %180, i64 0, i32 2
  store i64 %178, ptr %memberidx1.i254, align 4
  %memberidx2.i255 = getelementptr inbounds %string, ptr %180, i64 0, i32 3
  store i64 %178, ptr %memberidx2.i255, align 4
  tail call void @free(ptr %166)
  tail call void @free(ptr %170)
  tail call void @free(ptr %176)
  %181 = load ptr, ptr %10, align 8
  %memberidx60 = getelementptr inbounds %Token, ptr %181, i64 0, i32 1
  %182 = load ptr, ptr %memberidx60, align 8
  %183 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i257 = getelementptr inbounds %Compiler, ptr %183, i64 0, i32 6
  %184 = load ptr, ptr %memberidx1.i257, align 8
  %185 = call ptr @malloc(i32 24)
  store i64 4, ptr %185, align 4
  %memberidx1.i.i258 = getelementptr inbounds %FloError, ptr %185, i64 0, i32 2
  store ptr %182, ptr %memberidx1.i.i258, align 8
  %memberidx2.i.i259 = getelementptr inbounds %FloError, ptr %185, i64 0, i32 1
  store ptr %180, ptr %memberidx2.i.i259, align 8
  %memberidx.i.i260 = getelementptr inbounds %Array_FloError_, ptr %184, i64 0, i32 2
  %186 = load i64, ptr %memberidx.i.i260, align 4
  %memberidx1.i2.i261 = getelementptr inbounds %Array_FloError_, ptr %184, i64 0, i32 3
  %187 = load i64, ptr %memberidx1.i2.i261, align 4
  %.not.i.i262 = icmp slt i64 %186, %187
  br i1 %.not.i.i262, label %dump_access.exit.TypeChecker_error.exit267_crit_edge, label %if.entry.i.i265

dump_access.exit.TypeChecker_error.exit267_crit_edge: ; preds = %dump_access.exit
  %memberidx4.i.i266.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %184, i64 0, i32 1
  %.pre352 = load ptr, ptr %memberidx4.i.i266.phi.trans.insert, align 8
  br label %TypeChecker_error.exit267

if.entry.i.i265:                                  ; preds = %dump_access.exit
  %188 = shl nuw i64 %187, 1
  store i64 %188, ptr %memberidx1.i2.i261, align 4
  %memberidx2.i.i.i264 = getelementptr inbounds %Array_FloError_, ptr %184, i64 0, i32 1
  %189 = load ptr, ptr %memberidx2.i.i.i264, align 8
  %190 = shl i64 %187, 4
  %191 = call ptr @realloc(ptr %189, i64 %190)
  store ptr %191, ptr %memberidx2.i.i.i264, align 8
  %.pre351 = load i64, ptr %memberidx.i.i260, align 4
  br label %TypeChecker_error.exit267

TypeChecker_error.exit267:                        ; preds = %dump_access.exit.TypeChecker_error.exit267_crit_edge, %if.entry.i.i265
  %192 = phi ptr [ %.pre352, %dump_access.exit.TypeChecker_error.exit267_crit_edge ], [ %191, %if.entry.i.i265 ]
  %193 = phi i64 [ %186, %dump_access.exit.TypeChecker_error.exit267_crit_edge ], [ %.pre351, %if.entry.i.i265 ]
  %194 = add nsw i64 %193, 1
  store i64 %194, ptr %memberidx.i.i260, align 4
  %195 = getelementptr inbounds ptr, ptr %192, i64 %193
  store ptr %185, ptr %195, align 8
  br label %common.ret

if.entry62:                                       ; preds = %ifend25
  %memberidx65 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 5
  %196 = load ptr, ptr %memberidx15, align 8
  %197 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %196, ptr nonnull %78)
  store ptr %197, ptr %memberidx65, align 8
  %198 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i269 = getelementptr inbounds %Compiler, ptr %198, i64 0, i32 6
  %199 = load ptr, ptr %memberidx1.i269, align 8
  %memberidx2.i270 = getelementptr inbounds %Array_FloError_, ptr %199, i64 0, i32 2
  %200 = load i64, ptr %memberidx2.i270, align 4
  %201 = icmp sgt i64 %200, 0
  br i1 %201, label %common.ret, label %ifend70

else63:                                           ; preds = %ifend25
  store i1 false, ptr %memberidx.i173, align 1
  %202 = load ptr, ptr %memberidx21, align 8
  %203 = load ptr, ptr %memberidx4, align 8
  %204 = load ptr, ptr %11, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %202, ptr %203, ptr %204)
  %205 = add nsw i64 %current_vtable_index.0333, 1
  br label %ifend64

ifend64:                                          ; preds = %else63, %ifend88
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.0333, %ifend88 ], [ %205, %else63 ]
  %206 = load ptr, ptr %memberidx99, align 8
  %memberidx.i271 = getelementptr inbounds %Array_ClassField_, ptr %206, i64 0, i32 2
  %207 = load i64, ptr %memberidx.i271, align 4
  %memberidx1.i272 = getelementptr inbounds %Array_ClassField_, ptr %206, i64 0, i32 3
  %208 = load i64, ptr %memberidx1.i272, align 4
  %.not.i273 = icmp slt i64 %207, %208
  br i1 %.not.i273, label %ifend64.Array_ClassField____sl__.exit_crit_edge, label %if.entry.i276

ifend64.Array_ClassField____sl__.exit_crit_edge:  ; preds = %ifend64
  %memberidx4.i277.phi.trans.insert = getelementptr inbounds %Array_ClassField_, ptr %206, i64 0, i32 1
  %.pre360 = load ptr, ptr %memberidx4.i277.phi.trans.insert, align 8
  br label %Array_ClassField____sl__.exit

if.entry.i276:                                    ; preds = %ifend64
  %209 = shl nuw i64 %208, 1
  store i64 %209, ptr %memberidx1.i272, align 4
  %memberidx2.i.i275 = getelementptr inbounds %Array_ClassField_, ptr %206, i64 0, i32 1
  %210 = load ptr, ptr %memberidx2.i.i275, align 8
  %211 = shl i64 %208, 4
  %212 = call ptr @realloc(ptr %210, i64 %211)
  store ptr %212, ptr %memberidx2.i.i275, align 8
  %.pre359 = load i64, ptr %memberidx.i271, align 4
  br label %Array_ClassField____sl__.exit

Array_ClassField____sl__.exit:                    ; preds = %ifend64.Array_ClassField____sl__.exit_crit_edge, %if.entry.i276
  %213 = phi ptr [ %.pre360, %ifend64.Array_ClassField____sl__.exit_crit_edge ], [ %212, %if.entry.i276 ]
  %214 = phi i64 [ %207, %ifend64.Array_ClassField____sl__.exit_crit_edge ], [ %.pre359, %if.entry.i276 ]
  %215 = add nsw i64 %214, 1
  store i64 %215, ptr %memberidx.i271, align 4
  %216 = getelementptr inbounds ptr, ptr %213, i64 %214
  store ptr %11, ptr %216, align 8
  %217 = add nuw nsw i64 %i.0332, 1
  %218 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %218, i64 0, i32 2
  %219 = load i64, ptr %memberidx2, align 4
  %220 = icmp slt i64 %217, %219
  br i1 %220, label %for.body, label %common.ret

ifend70:                                          ; preds = %if.entry62
  %221 = load ptr, ptr %memberidx15, align 8
  %memberidx73 = getelementptr inbounds %Expression, ptr %197, i64 0, i32 3
  %222 = load ptr, ptr %memberidx73, align 8
  %223 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %221, ptr %222)
  br i1 %223, label %ifend76, label %if.entry74

if.entry74:                                       ; preds = %ifend70
  %224 = load ptr, ptr %memberidx15, align 8
  %225 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %224)
  %226 = load ptr, ptr %225, align 8
  %memberidx78 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %226, i64 0, i32 5
  %227 = load ptr, ptr %memberidx78, align 8
  %228 = call ptr %227(ptr nonnull %225)
  %229 = load ptr, ptr %memberidx65, align 8
  %memberidx80 = getelementptr inbounds %Expression, ptr %229, i64 0, i32 3
  %230 = load ptr, ptr %memberidx80, align 8
  %231 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %230)
  %232 = load ptr, ptr %231, align 8
  %memberidx81 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %232, i64 0, i32 5
  %233 = load ptr, ptr %memberidx81, align 8
  %234 = call ptr %233(ptr nonnull %231)
  %235 = alloca ptr, align 8
  %236 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %235, ptr nonnull @140, ptr %228, ptr %234)
  %237 = load ptr, ptr %235, align 8
  %238 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %238, align 8
  %memberidx.i279 = getelementptr inbounds %string, ptr %238, i64 0, i32 1
  store ptr %237, ptr %memberidx.i279, align 8
  %memberidx1.i280 = getelementptr inbounds %string, ptr %238, i64 0, i32 2
  store i64 %236, ptr %memberidx1.i280, align 4
  %memberidx2.i281 = getelementptr inbounds %string, ptr %238, i64 0, i32 3
  store i64 %236, ptr %memberidx2.i281, align 4
  tail call void @free(ptr %228)
  tail call void @free(ptr %234)
  %239 = load ptr, ptr %memberidx61, align 8
  %240 = load ptr, ptr %239, align 8
  %241 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i283 = getelementptr inbounds %Compiler, ptr %241, i64 0, i32 6
  %242 = load ptr, ptr %memberidx1.i283, align 8
  %243 = call ptr @malloc(i32 24)
  store i64 5, ptr %243, align 4
  %memberidx1.i.i284 = getelementptr inbounds %FloError, ptr %243, i64 0, i32 2
  store ptr %240, ptr %memberidx1.i.i284, align 8
  %memberidx2.i.i285 = getelementptr inbounds %FloError, ptr %243, i64 0, i32 1
  store ptr %238, ptr %memberidx2.i.i285, align 8
  %memberidx.i.i286 = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 2
  %244 = load i64, ptr %memberidx.i.i286, align 4
  %memberidx1.i2.i287 = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 3
  %245 = load i64, ptr %memberidx1.i2.i287, align 4
  %.not.i.i288 = icmp slt i64 %244, %245
  br i1 %.not.i.i288, label %if.entry74.TypeChecker_error.exit293_crit_edge, label %if.entry.i.i291

if.entry74.TypeChecker_error.exit293_crit_edge:   ; preds = %if.entry74
  %memberidx4.i.i292.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 1
  %.pre356 = load ptr, ptr %memberidx4.i.i292.phi.trans.insert, align 8
  br label %TypeChecker_error.exit293

if.entry.i.i291:                                  ; preds = %if.entry74
  %246 = shl nuw i64 %245, 1
  store i64 %246, ptr %memberidx1.i2.i287, align 4
  %memberidx2.i.i.i290 = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 1
  %247 = load ptr, ptr %memberidx2.i.i.i290, align 8
  %248 = shl i64 %245, 4
  %249 = call ptr @realloc(ptr %247, i64 %248)
  store ptr %249, ptr %memberidx2.i.i.i290, align 8
  %.pre355 = load i64, ptr %memberidx.i.i286, align 4
  br label %TypeChecker_error.exit293

TypeChecker_error.exit293:                        ; preds = %if.entry74.TypeChecker_error.exit293_crit_edge, %if.entry.i.i291
  %250 = phi ptr [ %.pre356, %if.entry74.TypeChecker_error.exit293_crit_edge ], [ %249, %if.entry.i.i291 ]
  %251 = phi i64 [ %244, %if.entry74.TypeChecker_error.exit293_crit_edge ], [ %.pre355, %if.entry.i.i291 ]
  %252 = add nsw i64 %251, 1
  store i64 %252, ptr %memberidx.i.i286, align 4
  %253 = getelementptr inbounds ptr, ptr %250, i64 %251
  store ptr %243, ptr %253, align 8
  br label %ifend76

ifend76:                                          ; preds = %ifend70, %TypeChecker_error.exit293
  %254 = load ptr, ptr %memberidx65, align 8
  %memberidx85 = getelementptr inbounds %Expression, ptr %254, i64 0, i32 1
  %255 = load i1, ptr %memberidx85, align 1
  br i1 %255, label %ifend88, label %if.entry86

if.entry86:                                       ; preds = %ifend76
  %256 = call ptr @malloc(i32 45)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %256, ptr noundef nonnull align 8 dereferenceable(45) @141, i64 45, i1 false)
  %257 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %257, align 8
  %memberidx.i.i294 = getelementptr inbounds %string, ptr %257, i64 0, i32 1
  store ptr %256, ptr %memberidx.i.i294, align 8
  %memberidx1.i.i295 = getelementptr inbounds %string, ptr %257, i64 0, i32 2
  store i64 45, ptr %memberidx1.i.i295, align 4
  %memberidx2.i.i296 = getelementptr inbounds %string, ptr %257, i64 0, i32 3
  store i64 45, ptr %memberidx2.i.i296, align 4
  %258 = load ptr, ptr %memberidx61, align 8
  %259 = load ptr, ptr %258, align 8
  %260 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i298 = getelementptr inbounds %Compiler, ptr %260, i64 0, i32 6
  %261 = load ptr, ptr %memberidx1.i298, align 8
  %262 = call ptr @malloc(i32 24)
  store i64 4, ptr %262, align 4
  %memberidx1.i.i299 = getelementptr inbounds %FloError, ptr %262, i64 0, i32 2
  store ptr %259, ptr %memberidx1.i.i299, align 8
  %memberidx2.i.i300 = getelementptr inbounds %FloError, ptr %262, i64 0, i32 1
  store ptr %257, ptr %memberidx2.i.i300, align 8
  %memberidx.i.i301 = getelementptr inbounds %Array_FloError_, ptr %261, i64 0, i32 2
  %263 = load i64, ptr %memberidx.i.i301, align 4
  %memberidx1.i2.i302 = getelementptr inbounds %Array_FloError_, ptr %261, i64 0, i32 3
  %264 = load i64, ptr %memberidx1.i2.i302, align 4
  %.not.i.i303 = icmp slt i64 %263, %264
  br i1 %.not.i.i303, label %if.entry86.TypeChecker_error.exit308_crit_edge, label %if.entry.i.i306

if.entry86.TypeChecker_error.exit308_crit_edge:   ; preds = %if.entry86
  %memberidx4.i.i307.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %261, i64 0, i32 1
  %.pre358 = load ptr, ptr %memberidx4.i.i307.phi.trans.insert, align 8
  br label %TypeChecker_error.exit308

if.entry.i.i306:                                  ; preds = %if.entry86
  %265 = shl nuw i64 %264, 1
  store i64 %265, ptr %memberidx1.i2.i302, align 4
  %memberidx2.i.i.i305 = getelementptr inbounds %Array_FloError_, ptr %261, i64 0, i32 1
  %266 = load ptr, ptr %memberidx2.i.i.i305, align 8
  %267 = shl i64 %264, 4
  %268 = call ptr @realloc(ptr %266, i64 %267)
  store ptr %268, ptr %memberidx2.i.i.i305, align 8
  %.pre357 = load i64, ptr %memberidx.i.i301, align 4
  br label %TypeChecker_error.exit308

TypeChecker_error.exit308:                        ; preds = %if.entry86.TypeChecker_error.exit308_crit_edge, %if.entry.i.i306
  %269 = phi ptr [ %.pre358, %if.entry86.TypeChecker_error.exit308_crit_edge ], [ %268, %if.entry.i.i306 ]
  %270 = phi i64 [ %263, %if.entry86.TypeChecker_error.exit308_crit_edge ], [ %.pre357, %if.entry.i.i306 ]
  %271 = add nsw i64 %270, 1
  store i64 %271, ptr %memberidx.i.i301, align 4
  %272 = getelementptr inbounds ptr, ptr %269, i64 %270
  store ptr %262, ptr %272, align 8
  br label %common.ret

ifend88:                                          ; preds = %ifend76
  store i1 true, ptr %memberidx.i173, align 1
  %273 = load ptr, ptr %memberidx92, align 8
  %274 = load ptr, ptr %memberidx4, align 8
  %275 = load ptr, ptr %11, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %273, ptr %274, ptr %275)
  br label %ifend64
}

define internal fastcc void @TypeChecker_check_module_import(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry55, %else56, %for.end, %ifend, %TypeChecker_error.exit304, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 51)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %7, ptr noundef nonnull align 8 dereferenceable(51) @107, i64 51, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %7, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 51, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 51, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %11, i64 0, i32 6
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %13, align 4
  %memberidx1.i.i117 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 2
  store ptr %10, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 1
  store ptr %8, ptr %memberidx2.i.i118, align 8
  %memberidx.i.i119 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i119, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 3
  %15 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %14, %15
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %.pre381 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %16 = shl nuw i64 %15, 1
  store i64 %16, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i.i.i, align 8
  %18 = shl i64 %15, 4
  %19 = tail call ptr @realloc(ptr %17, i64 %18)
  store ptr %19, ptr %memberidx2.i.i.i, align 8
  %.pre380 = load i64, ptr %memberidx.i.i119, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %20 = phi ptr [ %.pre381, %if.entry.TypeChecker_error.exit_crit_edge ], [ %19, %if.entry.i.i ]
  %21 = phi i64 [ %14, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre380, %if.entry.i.i ]
  %22 = add nsw i64 %21, 1
  store i64 %22, ptr %memberidx.i.i119, align 4
  %23 = getelementptr inbounds ptr, ptr %20, i64 %21
  store ptr %13, ptr %23, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %memberidx6 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 2
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %25 = load ptr, ptr %memberidx8, align 8
  %26 = tail call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %24, ptr %25)
  %memberidx.i120 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %27 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i121 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i121, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend11

ifend11:                                          ; preds = %ifend
  %31 = load ptr, ptr %0, align 8
  %memberidx13 = getelementptr inbounds %Module, ptr %26, i64 0, i32 5
  %32 = load ptr, ptr %memberidx13, align 8
  %memberidx.i122 = getelementptr inbounds %Program, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i122, align 8
  %34 = load i64, ptr %32, align 4
  %memberidx.i.i123 = getelementptr inbounds %Array_Module_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i123, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %memberidx2.i124 = getelementptr inbounds %Module, ptr %37, i64 0, i32 7
  %38 = load ptr, ptr %memberidx2.i124, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %32, i64 0, i32 1
  %39 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i5.i, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %1, align 8
  %memberidx15 = getelementptr inbounds %Array_ImportClause_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx15, align 4
  %45 = icmp sgt i64 %44, 0
  br i1 %45, label %for.entry, label %else17

else17:                                           ; preds = %ifend11
  %memberidx54 = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 2
  %46 = load ptr, ptr %memberidx54, align 8
  %.not = icmp eq ptr %46, null
  br i1 %.not, label %else56, label %if.entry55

for.entry:                                        ; preds = %ifend11
  %47 = tail call ptr @malloc(i32 25)
  %memberidx.i125 = getelementptr inbounds %Array_ImportClause_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i125, align 8
  %49 = load i64, ptr %memberidx15, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i127 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %47, i64 0, i32 1
  %memberidx2.i.i128 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i.i128, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %47, i64 0, i32 2
  store i64 %49, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i127, align 4
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx26 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %memberidx30 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 2
  %memberidx.i.i.i160 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx34 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 4
  %memberidx38 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 1
  %memberidx42 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Scope, ptr %42, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %51 = phi i64 [ 1, %for.body.lr.ph ], [ %55, %for.incr ]
  %import_clause.0345.in = phi ptr [ %48, %for.body.lr.ph ], [ %56, %for.incr ]
  %import_clause.0345 = load ptr, ptr %import_clause.0345.in, align 8
  %52 = load ptr, ptr %import_clause.0345, align 8
  %memberidx22 = getelementptr inbounds %IdentifierToken, ptr %52, i64 0, i32 2
  %53 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %ImportClause, ptr %import_clause.0345, i64 0, i32 1
  %54 = load ptr, ptr %memberidx23, align 8
  %.not110 = icmp eq ptr %54, null
  br i1 %.not110, label %end, label %true_block

for.incr:                                         ; preds = %Map_string_Generic____getitem__.exit, %if.entry47, %if.entry43, %if.entry39, %if.entry35, %if.entry31
  %55 = add nuw nsw i64 %51, 1
  store i64 %55, ptr %memberidx1.i.i127, align 4
  %56 = getelementptr inbounds ptr, ptr %48, i64 %51
  %.not394 = icmp slt i64 %51, %49
  br i1 %.not394, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %47)
  br label %common.ret

true_block:                                       ; preds = %for.body
  %memberidx25 = getelementptr inbounds %IdentifierToken, ptr %54, i64 0, i32 2
  %57 = load ptr, ptr %memberidx25, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %ternary = phi ptr [ %57, %true_block ], [ %53, %for.body ]
  %58 = load ptr, ptr %memberidx26, align 8
  %59 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %53)
  %memberidx.i134 = getelementptr inbounds %Map_string_Generic_, ptr %58, i64 0, i32 1
  %60 = load i64, ptr %memberidx.i134, align 4
  %61 = urem i64 %59, %60
  %62 = load ptr, ptr %58, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %.not.i = icmp eq ptr %64, null
  br i1 %.not.i, label %ifend29, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %end
  %memberidx1.i.i136 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %memberidx3.i.i139 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %65 = phi ptr [ %75, %else.i ], [ %62, %while.entry.i.preheader ]
  %66 = phi i64 [ %76, %else.i ], [ %60, %while.entry.i.preheader ]
  %67 = phi ptr [ %80, %else.i ], [ %64, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %78, %else.i ], [ %61, %while.entry.i.preheader ]
  %68 = load ptr, ptr %67, align 8
  %memberidx.i.i135 = getelementptr inbounds %string, ptr %68, i64 0, i32 2
  %69 = load i64, ptr %memberidx.i.i135, align 4
  %70 = load i64, ptr %memberidx1.i.i136, align 4
  %.not.i.i137 = icmp eq i64 %69, %70
  br i1 %.not.i.i137, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i138 = getelementptr inbounds %string, ptr %68, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i.i138, align 8
  %72 = load ptr, ptr %memberidx3.i.i139, align 8
  %73 = tail call i64 @memcmp(ptr %71, ptr %72, i64 %69)
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i134, align 4
  %.pre350 = load ptr, ptr %58, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre351.pre = load ptr, ptr %58, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre351.pre, i64 %hash.0.i
  %.pre352.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre352.pre, null
  br i1 %.not25.i, label %ifend29, label %Map_string_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %75 = phi ptr [ %.pre350, %ifend.i.i.else.i_crit_edge ], [ %65, %while.entry.i ]
  %76 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %66, %while.entry.i ]
  %77 = add nuw i64 %hash.0.i, 1
  %78 = urem i64 %77, %76
  %79 = getelementptr inbounds ptr, ptr %75, i64 %78
  %80 = load ptr, ptr %79, align 8
  %.not26.i = icmp eq ptr %80, null
  br i1 %.not26.i, label %ifend29, label %while.entry.i

Map_string_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre352.pre, i64 0, i32 1
  %81 = load ptr, ptr %memberidx11.i, align 8
  %.not111 = icmp eq ptr %81, null
  br i1 %.not111, label %ifend29, label %for.incr

ifend29:                                          ; preds = %else.i, %end, %while.end.i, %Map_string_Generic____getitem__.exit
  %82 = load ptr, ptr %memberidx30, align 8
  %83 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %53)
  %memberidx.i140 = getelementptr inbounds %Map_string_ClassId_, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i140, align 4
  %85 = urem i64 %83, %84
  %86 = load ptr, ptr %82, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %.not.i141 = icmp eq ptr %88, null
  br i1 %.not.i141, label %ifend33, label %while.entry.i146.preheader

while.entry.i146.preheader:                       ; preds = %ifend29
  %memberidx1.i.i144 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %memberidx3.i.i148 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  br label %while.entry.i146

while.entry.i146:                                 ; preds = %while.entry.i146.preheader, %else.i156
  %89 = phi ptr [ %99, %else.i156 ], [ %86, %while.entry.i146.preheader ]
  %90 = phi i64 [ %100, %else.i156 ], [ %84, %while.entry.i146.preheader ]
  %91 = phi ptr [ %104, %else.i156 ], [ %88, %while.entry.i146.preheader ]
  %hash.0.i142 = phi i64 [ %102, %else.i156 ], [ %85, %while.entry.i146.preheader ]
  %92 = load ptr, ptr %91, align 8
  %memberidx.i.i143 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i143, align 4
  %94 = load i64, ptr %memberidx1.i.i144, align 4
  %.not.i.i145 = icmp eq i64 %93, %94
  br i1 %.not.i.i145, label %ifend.i.i149, label %else.i156

ifend.i.i149:                                     ; preds = %while.entry.i146
  %memberidx2.i.i147 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i.i147, align 8
  %96 = load ptr, ptr %memberidx3.i.i148, align 8
  %97 = tail call i64 @memcmp(ptr %95, ptr %96, i64 %93)
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %while.end.i154, label %ifend.i.i149.else.i156_crit_edge

ifend.i.i149.else.i156_crit_edge:                 ; preds = %ifend.i.i149
  %.pre353 = load i64, ptr %memberidx.i140, align 4
  %.pre354 = load ptr, ptr %82, align 8
  br label %else.i156

while.end.i154:                                   ; preds = %ifend.i.i149
  %.pre355.pre = load ptr, ptr %82, align 8
  %.phi.trans.insert356.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre355.pre, i64 %hash.0.i142
  %.pre357.pre = load ptr, ptr %.phi.trans.insert356.phi.trans.insert, align 8
  %.not25.i153 = icmp eq ptr %.pre357.pre, null
  br i1 %.not25.i153, label %ifend33, label %Map_string_ClassId____getitem__.exit

else.i156:                                        ; preds = %ifend.i.i149.else.i156_crit_edge, %while.entry.i146
  %99 = phi ptr [ %.pre354, %ifend.i.i149.else.i156_crit_edge ], [ %89, %while.entry.i146 ]
  %100 = phi i64 [ %.pre353, %ifend.i.i149.else.i156_crit_edge ], [ %90, %while.entry.i146 ]
  %101 = add nuw i64 %hash.0.i142, 1
  %102 = urem i64 %101, %100
  %103 = getelementptr inbounds ptr, ptr %99, i64 %102
  %104 = load ptr, ptr %103, align 8
  %.not26.i155 = icmp eq ptr %104, null
  br i1 %.not26.i155, label %ifend33, label %while.entry.i146

Map_string_ClassId____getitem__.exit:             ; preds = %while.end.i154
  %memberidx11.i158 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre357.pre, i64 0, i32 1
  %105 = load ptr, ptr %memberidx11.i158, align 8
  %.not112 = icmp eq ptr %105, null
  br i1 %.not112, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %Map_string_ClassId____getitem__.exit
  %106 = load ptr, ptr %0, align 8
  %107 = load ptr, ptr %memberidx.i.i.i160, align 8
  %108 = load i64, ptr %107, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %106, i64 0, i32 1
  %109 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %108
  %112 = load ptr, ptr %111, align 8
  %memberidx1.i.i161 = getelementptr inbounds %Module, ptr %112, i64 0, i32 5
  %113 = load ptr, ptr %memberidx1.i.i161, align 8
  %114 = load i64, ptr %113, align 4
  %115 = getelementptr inbounds ptr, ptr %110, i64 %114
  %116 = load ptr, ptr %115, align 8
  %memberidx2.i.i.i162 = getelementptr inbounds %Module, ptr %116, i64 0, i32 7
  %117 = load ptr, ptr %memberidx2.i.i.i162, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %113, i64 0, i32 1
  %118 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %117, i64 0, i32 1
  %119 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %118
  %121 = load ptr, ptr %120, align 8
  %memberidx.i163 = getelementptr inbounds %Scope, ptr %121, i64 0, i32 2
  %122 = load ptr, ptr %memberidx.i163, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %122, ptr %ternary, ptr nonnull %105)
  %memberidx1.i164 = getelementptr inbounds %Scope, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx1.i164, align 8
  %124 = tail call ptr @malloc(i32 24)
  %125 = load i64, ptr %105, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %105, i64 0, i32 2
  %126 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %124, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %124, i64 0, i32 1
  store i64 %125, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %124, i64 0, i32 2
  store i64 %126, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %123, ptr %ternary, ptr nonnull %124)
  br label %for.incr

ifend33:                                          ; preds = %else.i156, %ifend29, %while.end.i154, %Map_string_ClassId____getitem__.exit
  %127 = load ptr, ptr %memberidx34, align 8
  %128 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %53)
  %memberidx.i165 = getelementptr inbounds %Map_string_EnumId_, ptr %127, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i165, align 4
  %130 = urem i64 %128, %129
  %131 = load ptr, ptr %127, align 8
  %132 = getelementptr inbounds ptr, ptr %131, i64 %130
  %133 = load ptr, ptr %132, align 8
  %.not.i166 = icmp eq ptr %133, null
  br i1 %.not.i166, label %ifend37, label %while.entry.i171.preheader

while.entry.i171.preheader:                       ; preds = %ifend33
  %memberidx1.i.i169 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %memberidx3.i.i173 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  br label %while.entry.i171

while.entry.i171:                                 ; preds = %while.entry.i171.preheader, %else.i181
  %134 = phi ptr [ %144, %else.i181 ], [ %131, %while.entry.i171.preheader ]
  %135 = phi i64 [ %145, %else.i181 ], [ %129, %while.entry.i171.preheader ]
  %136 = phi ptr [ %149, %else.i181 ], [ %133, %while.entry.i171.preheader ]
  %hash.0.i167 = phi i64 [ %147, %else.i181 ], [ %130, %while.entry.i171.preheader ]
  %137 = load ptr, ptr %136, align 8
  %memberidx.i.i168 = getelementptr inbounds %string, ptr %137, i64 0, i32 2
  %138 = load i64, ptr %memberidx.i.i168, align 4
  %139 = load i64, ptr %memberidx1.i.i169, align 4
  %.not.i.i170 = icmp eq i64 %138, %139
  br i1 %.not.i.i170, label %ifend.i.i174, label %else.i181

ifend.i.i174:                                     ; preds = %while.entry.i171
  %memberidx2.i.i172 = getelementptr inbounds %string, ptr %137, i64 0, i32 1
  %140 = load ptr, ptr %memberidx2.i.i172, align 8
  %141 = load ptr, ptr %memberidx3.i.i173, align 8
  %142 = tail call i64 @memcmp(ptr %140, ptr %141, i64 %138)
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %while.end.i179, label %ifend.i.i174.else.i181_crit_edge

ifend.i.i174.else.i181_crit_edge:                 ; preds = %ifend.i.i174
  %.pre358 = load i64, ptr %memberidx.i165, align 4
  %.pre359 = load ptr, ptr %127, align 8
  br label %else.i181

while.end.i179:                                   ; preds = %ifend.i.i174
  %.pre360.pre = load ptr, ptr %127, align 8
  %.phi.trans.insert361.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre360.pre, i64 %hash.0.i167
  %.pre362.pre = load ptr, ptr %.phi.trans.insert361.phi.trans.insert, align 8
  %.not25.i178 = icmp eq ptr %.pre362.pre, null
  br i1 %.not25.i178, label %ifend37, label %Map_string_EnumId____getitem__.exit

else.i181:                                        ; preds = %ifend.i.i174.else.i181_crit_edge, %while.entry.i171
  %144 = phi ptr [ %.pre359, %ifend.i.i174.else.i181_crit_edge ], [ %134, %while.entry.i171 ]
  %145 = phi i64 [ %.pre358, %ifend.i.i174.else.i181_crit_edge ], [ %135, %while.entry.i171 ]
  %146 = add nuw i64 %hash.0.i167, 1
  %147 = urem i64 %146, %145
  %148 = getelementptr inbounds ptr, ptr %144, i64 %147
  %149 = load ptr, ptr %148, align 8
  %.not26.i180 = icmp eq ptr %149, null
  br i1 %.not26.i180, label %ifend37, label %while.entry.i171

Map_string_EnumId____getitem__.exit:              ; preds = %while.end.i179
  %memberidx11.i183 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %.pre362.pre, i64 0, i32 1
  %150 = load ptr, ptr %memberidx11.i183, align 8
  %.not113 = icmp eq ptr %150, null
  br i1 %.not113, label %ifend37, label %if.entry35

if.entry35:                                       ; preds = %Map_string_EnumId____getitem__.exit
  %151 = load ptr, ptr %0, align 8
  %152 = load ptr, ptr %memberidx.i.i.i160, align 8
  %153 = load i64, ptr %152, align 4
  %memberidx1.i.i.i.i186 = getelementptr inbounds %Program, ptr %151, i64 0, i32 1
  %154 = load ptr, ptr %memberidx1.i.i.i.i186, align 8
  %memberidx.i.i.i.i.i187 = getelementptr inbounds %Array_Module_, ptr %154, i64 0, i32 1
  %155 = load ptr, ptr %memberidx.i.i.i.i.i187, align 8
  %156 = getelementptr inbounds ptr, ptr %155, i64 %153
  %157 = load ptr, ptr %156, align 8
  %memberidx1.i.i188 = getelementptr inbounds %Module, ptr %157, i64 0, i32 5
  %158 = load ptr, ptr %memberidx1.i.i188, align 8
  %159 = load i64, ptr %158, align 4
  %160 = getelementptr inbounds ptr, ptr %155, i64 %159
  %161 = load ptr, ptr %160, align 8
  %memberidx2.i.i.i191 = getelementptr inbounds %Module, ptr %161, i64 0, i32 7
  %162 = load ptr, ptr %memberidx2.i.i.i191, align 8
  %memberidx3.i.i.i192 = getelementptr inbounds %ScopeId, ptr %158, i64 0, i32 1
  %163 = load i64, ptr %memberidx3.i.i.i192, align 4
  %memberidx.i5.i.i.i193 = getelementptr inbounds %Array_Scope_, ptr %162, i64 0, i32 1
  %164 = load ptr, ptr %memberidx.i5.i.i.i193, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  %memberidx.i194 = getelementptr inbounds %Scope, ptr %166, i64 0, i32 4
  %167 = load ptr, ptr %memberidx.i194, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %167, ptr %ternary, ptr nonnull %150)
  %memberidx1.i195 = getelementptr inbounds %Scope, ptr %166, i64 0, i32 1
  %168 = load ptr, ptr %memberidx1.i195, align 8
  %169 = tail call ptr @malloc(i32 24)
  %170 = load i64, ptr %150, align 4
  %memberidx1.i5.i196 = getelementptr inbounds %TypeId, ptr %150, i64 0, i32 2
  %171 = load i64, ptr %memberidx1.i5.i196, align 4
  store i64 4, ptr %169, align 4
  %memberidx1.i.i.i197 = getelementptr inbounds %VarId, ptr %169, i64 0, i32 1
  store i64 %170, ptr %memberidx1.i.i.i197, align 4
  %memberidx2.i.i6.i198 = getelementptr inbounds %VarId, ptr %169, i64 0, i32 2
  store i64 %171, ptr %memberidx2.i.i6.i198, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %168, ptr %ternary, ptr nonnull %169)
  br label %for.incr

ifend37:                                          ; preds = %else.i181, %ifend33, %while.end.i179, %Map_string_EnumId____getitem__.exit
  %172 = load ptr, ptr %memberidx38, align 8
  %173 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %53)
  %memberidx.i199 = getelementptr inbounds %Map_string_VarId_, ptr %172, i64 0, i32 1
  %174 = load i64, ptr %memberidx.i199, align 4
  %175 = urem i64 %173, %174
  %176 = load ptr, ptr %172, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %175
  %178 = load ptr, ptr %177, align 8
  %.not.i200 = icmp eq ptr %178, null
  br i1 %.not.i200, label %ifend41, label %while.entry.i205.preheader

while.entry.i205.preheader:                       ; preds = %ifend37
  %memberidx1.i.i203 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %memberidx3.i.i207 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  br label %while.entry.i205

while.entry.i205:                                 ; preds = %while.entry.i205.preheader, %else.i215
  %179 = phi ptr [ %189, %else.i215 ], [ %176, %while.entry.i205.preheader ]
  %180 = phi i64 [ %190, %else.i215 ], [ %174, %while.entry.i205.preheader ]
  %181 = phi ptr [ %194, %else.i215 ], [ %178, %while.entry.i205.preheader ]
  %hash.0.i201 = phi i64 [ %192, %else.i215 ], [ %175, %while.entry.i205.preheader ]
  %182 = load ptr, ptr %181, align 8
  %memberidx.i.i202 = getelementptr inbounds %string, ptr %182, i64 0, i32 2
  %183 = load i64, ptr %memberidx.i.i202, align 4
  %184 = load i64, ptr %memberidx1.i.i203, align 4
  %.not.i.i204 = icmp eq i64 %183, %184
  br i1 %.not.i.i204, label %ifend.i.i208, label %else.i215

ifend.i.i208:                                     ; preds = %while.entry.i205
  %memberidx2.i.i206 = getelementptr inbounds %string, ptr %182, i64 0, i32 1
  %185 = load ptr, ptr %memberidx2.i.i206, align 8
  %186 = load ptr, ptr %memberidx3.i.i207, align 8
  %187 = tail call i64 @memcmp(ptr %185, ptr %186, i64 %183)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %while.end.i213, label %ifend.i.i208.else.i215_crit_edge

ifend.i.i208.else.i215_crit_edge:                 ; preds = %ifend.i.i208
  %.pre363 = load i64, ptr %memberidx.i199, align 4
  %.pre364 = load ptr, ptr %172, align 8
  br label %else.i215

while.end.i213:                                   ; preds = %ifend.i.i208
  %.pre365.pre = load ptr, ptr %172, align 8
  %.phi.trans.insert366.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre365.pre, i64 %hash.0.i201
  %.pre367.pre = load ptr, ptr %.phi.trans.insert366.phi.trans.insert, align 8
  %.not25.i212 = icmp eq ptr %.pre367.pre, null
  br i1 %.not25.i212, label %ifend41, label %Map_string_VarId____getitem__.exit

else.i215:                                        ; preds = %ifend.i.i208.else.i215_crit_edge, %while.entry.i205
  %189 = phi ptr [ %.pre364, %ifend.i.i208.else.i215_crit_edge ], [ %179, %while.entry.i205 ]
  %190 = phi i64 [ %.pre363, %ifend.i.i208.else.i215_crit_edge ], [ %180, %while.entry.i205 ]
  %191 = add nuw i64 %hash.0.i201, 1
  %192 = urem i64 %191, %190
  %193 = getelementptr inbounds ptr, ptr %189, i64 %192
  %194 = load ptr, ptr %193, align 8
  %.not26.i214 = icmp eq ptr %194, null
  br i1 %.not26.i214, label %ifend41, label %while.entry.i205

Map_string_VarId____getitem__.exit:               ; preds = %while.end.i213
  %memberidx11.i217 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre367.pre, i64 0, i32 1
  %195 = load ptr, ptr %memberidx11.i217, align 8
  %.not114 = icmp eq ptr %195, null
  br i1 %.not114, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %Map_string_VarId____getitem__.exit
  %196 = load ptr, ptr %0, align 8
  %197 = load ptr, ptr %memberidx.i.i.i160, align 8
  %198 = load i64, ptr %197, align 4
  %memberidx1.i.i.i.i220 = getelementptr inbounds %Program, ptr %196, i64 0, i32 1
  %199 = load ptr, ptr %memberidx1.i.i.i.i220, align 8
  %memberidx.i.i.i.i.i221 = getelementptr inbounds %Array_Module_, ptr %199, i64 0, i32 1
  %200 = load ptr, ptr %memberidx.i.i.i.i.i221, align 8
  %201 = getelementptr inbounds ptr, ptr %200, i64 %198
  %202 = load ptr, ptr %201, align 8
  %memberidx1.i.i222 = getelementptr inbounds %Module, ptr %202, i64 0, i32 5
  %203 = load ptr, ptr %memberidx1.i.i222, align 8
  %204 = load i64, ptr %203, align 4
  %205 = getelementptr inbounds ptr, ptr %200, i64 %204
  %206 = load ptr, ptr %205, align 8
  %memberidx2.i.i.i225 = getelementptr inbounds %Module, ptr %206, i64 0, i32 7
  %207 = load ptr, ptr %memberidx2.i.i.i225, align 8
  %memberidx3.i.i.i226 = getelementptr inbounds %ScopeId, ptr %203, i64 0, i32 1
  %208 = load i64, ptr %memberidx3.i.i.i226, align 4
  %memberidx.i5.i.i.i227 = getelementptr inbounds %Array_Scope_, ptr %207, i64 0, i32 1
  %209 = load ptr, ptr %memberidx.i5.i.i.i227, align 8
  %210 = getelementptr inbounds ptr, ptr %209, i64 %208
  %211 = load ptr, ptr %210, align 8
  %memberidx.i228 = getelementptr inbounds %Scope, ptr %211, i64 0, i32 1
  %212 = load ptr, ptr %memberidx.i228, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %212, ptr %ternary, ptr nonnull %195)
  br label %for.incr

ifend41:                                          ; preds = %else.i215, %ifend37, %while.end.i213, %Map_string_VarId____getitem__.exit
  %213 = load ptr, ptr %memberidx42, align 8
  %214 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %53)
  %memberidx.i229 = getelementptr inbounds %Map_string_VarId_, ptr %213, i64 0, i32 1
  %215 = load i64, ptr %memberidx.i229, align 4
  %216 = urem i64 %214, %215
  %217 = load ptr, ptr %213, align 8
  %218 = getelementptr inbounds ptr, ptr %217, i64 %216
  %219 = load ptr, ptr %218, align 8
  %.not.i230 = icmp eq ptr %219, null
  br i1 %.not.i230, label %ifend45, label %while.entry.i235.preheader

while.entry.i235.preheader:                       ; preds = %ifend41
  %memberidx1.i.i233 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %memberidx3.i.i237 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  br label %while.entry.i235

while.entry.i235:                                 ; preds = %while.entry.i235.preheader, %else.i245
  %220 = phi ptr [ %230, %else.i245 ], [ %217, %while.entry.i235.preheader ]
  %221 = phi i64 [ %231, %else.i245 ], [ %215, %while.entry.i235.preheader ]
  %222 = phi ptr [ %235, %else.i245 ], [ %219, %while.entry.i235.preheader ]
  %hash.0.i231 = phi i64 [ %233, %else.i245 ], [ %216, %while.entry.i235.preheader ]
  %223 = load ptr, ptr %222, align 8
  %memberidx.i.i232 = getelementptr inbounds %string, ptr %223, i64 0, i32 2
  %224 = load i64, ptr %memberidx.i.i232, align 4
  %225 = load i64, ptr %memberidx1.i.i233, align 4
  %.not.i.i234 = icmp eq i64 %224, %225
  br i1 %.not.i.i234, label %ifend.i.i238, label %else.i245

ifend.i.i238:                                     ; preds = %while.entry.i235
  %memberidx2.i.i236 = getelementptr inbounds %string, ptr %223, i64 0, i32 1
  %226 = load ptr, ptr %memberidx2.i.i236, align 8
  %227 = load ptr, ptr %memberidx3.i.i237, align 8
  %228 = tail call i64 @memcmp(ptr %226, ptr %227, i64 %224)
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %while.end.i243, label %ifend.i.i238.else.i245_crit_edge

ifend.i.i238.else.i245_crit_edge:                 ; preds = %ifend.i.i238
  %.pre368 = load i64, ptr %memberidx.i229, align 4
  %.pre369 = load ptr, ptr %213, align 8
  br label %else.i245

while.end.i243:                                   ; preds = %ifend.i.i238
  %.pre370.pre = load ptr, ptr %213, align 8
  %.phi.trans.insert371.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre370.pre, i64 %hash.0.i231
  %.pre372.pre = load ptr, ptr %.phi.trans.insert371.phi.trans.insert, align 8
  %.not25.i242 = icmp eq ptr %.pre372.pre, null
  br i1 %.not25.i242, label %ifend45, label %Map_string_VarId____getitem__.exit249

else.i245:                                        ; preds = %ifend.i.i238.else.i245_crit_edge, %while.entry.i235
  %230 = phi ptr [ %.pre369, %ifend.i.i238.else.i245_crit_edge ], [ %220, %while.entry.i235 ]
  %231 = phi i64 [ %.pre368, %ifend.i.i238.else.i245_crit_edge ], [ %221, %while.entry.i235 ]
  %232 = add nuw i64 %hash.0.i231, 1
  %233 = urem i64 %232, %231
  %234 = getelementptr inbounds ptr, ptr %230, i64 %233
  %235 = load ptr, ptr %234, align 8
  %.not26.i244 = icmp eq ptr %235, null
  br i1 %.not26.i244, label %ifend45, label %while.entry.i235

Map_string_VarId____getitem__.exit249:            ; preds = %while.end.i243
  %memberidx11.i247 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre372.pre, i64 0, i32 1
  %236 = load ptr, ptr %memberidx11.i247, align 8
  %.not115 = icmp eq ptr %236, null
  br i1 %.not115, label %ifend45, label %if.entry43

if.entry43:                                       ; preds = %Map_string_VarId____getitem__.exit249
  %237 = load ptr, ptr %0, align 8
  %238 = load ptr, ptr %memberidx.i.i.i160, align 8
  %239 = load i64, ptr %238, align 4
  %memberidx1.i.i.i.i251 = getelementptr inbounds %Program, ptr %237, i64 0, i32 1
  %240 = load ptr, ptr %memberidx1.i.i.i.i251, align 8
  %memberidx.i.i.i.i.i252 = getelementptr inbounds %Array_Module_, ptr %240, i64 0, i32 1
  %241 = load ptr, ptr %memberidx.i.i.i.i.i252, align 8
  %242 = getelementptr inbounds ptr, ptr %241, i64 %239
  %243 = load ptr, ptr %242, align 8
  %memberidx1.i.i253 = getelementptr inbounds %Module, ptr %243, i64 0, i32 5
  %244 = load ptr, ptr %memberidx1.i.i253, align 8
  %245 = load i64, ptr %244, align 4
  %246 = getelementptr inbounds ptr, ptr %241, i64 %245
  %247 = load ptr, ptr %246, align 8
  %memberidx2.i.i.i256 = getelementptr inbounds %Module, ptr %247, i64 0, i32 7
  %248 = load ptr, ptr %memberidx2.i.i.i256, align 8
  %memberidx3.i.i.i257 = getelementptr inbounds %ScopeId, ptr %244, i64 0, i32 1
  %249 = load i64, ptr %memberidx3.i.i.i257, align 4
  %memberidx.i5.i.i.i258 = getelementptr inbounds %Array_Scope_, ptr %248, i64 0, i32 1
  %250 = load ptr, ptr %memberidx.i5.i.i.i258, align 8
  %251 = getelementptr inbounds ptr, ptr %250, i64 %249
  %252 = load ptr, ptr %251, align 8
  %memberidx.i259 = getelementptr inbounds %Scope, ptr %252, i64 0, i32 3
  %253 = load ptr, ptr %memberidx.i259, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %253, ptr %ternary, ptr nonnull %236)
  br label %for.incr

ifend45:                                          ; preds = %else.i245, %ifend41, %while.end.i243, %Map_string_VarId____getitem__.exit249
  %254 = load ptr, ptr %memberidx46, align 8
  %255 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %53)
  %memberidx.i260 = getelementptr inbounds %Map_string_Type_, ptr %254, i64 0, i32 1
  %256 = load i64, ptr %memberidx.i260, align 4
  %257 = urem i64 %255, %256
  %258 = load ptr, ptr %254, align 8
  %259 = getelementptr inbounds ptr, ptr %258, i64 %257
  %260 = load ptr, ptr %259, align 8
  %.not.i261 = icmp eq ptr %260, null
  br i1 %.not.i261, label %else48, label %while.entry.i266.preheader

while.entry.i266.preheader:                       ; preds = %ifend45
  %memberidx1.i.i264 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %memberidx3.i.i268 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  br label %while.entry.i266

while.entry.i266:                                 ; preds = %while.entry.i266.preheader, %else.i276
  %261 = phi ptr [ %271, %else.i276 ], [ %258, %while.entry.i266.preheader ]
  %262 = phi i64 [ %272, %else.i276 ], [ %256, %while.entry.i266.preheader ]
  %263 = phi ptr [ %276, %else.i276 ], [ %260, %while.entry.i266.preheader ]
  %hash.0.i262 = phi i64 [ %274, %else.i276 ], [ %257, %while.entry.i266.preheader ]
  %264 = load ptr, ptr %263, align 8
  %memberidx.i.i263 = getelementptr inbounds %string, ptr %264, i64 0, i32 2
  %265 = load i64, ptr %memberidx.i.i263, align 4
  %266 = load i64, ptr %memberidx1.i.i264, align 4
  %.not.i.i265 = icmp eq i64 %265, %266
  br i1 %.not.i.i265, label %ifend.i.i269, label %else.i276

ifend.i.i269:                                     ; preds = %while.entry.i266
  %memberidx2.i.i267 = getelementptr inbounds %string, ptr %264, i64 0, i32 1
  %267 = load ptr, ptr %memberidx2.i.i267, align 8
  %268 = load ptr, ptr %memberidx3.i.i268, align 8
  %269 = tail call i64 @memcmp(ptr %267, ptr %268, i64 %265)
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %while.end.i274, label %ifend.i.i269.else.i276_crit_edge

ifend.i.i269.else.i276_crit_edge:                 ; preds = %ifend.i.i269
  %.pre373 = load i64, ptr %memberidx.i260, align 4
  %.pre374 = load ptr, ptr %254, align 8
  br label %else.i276

while.end.i274:                                   ; preds = %ifend.i.i269
  %.pre375.pre = load ptr, ptr %254, align 8
  %.phi.trans.insert376.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre375.pre, i64 %hash.0.i262
  %.pre377.pre = load ptr, ptr %.phi.trans.insert376.phi.trans.insert, align 8
  %.not25.i273 = icmp eq ptr %.pre377.pre, null
  br i1 %.not25.i273, label %else48, label %Map_string_Type____getitem__.exit

else.i276:                                        ; preds = %ifend.i.i269.else.i276_crit_edge, %while.entry.i266
  %271 = phi ptr [ %.pre374, %ifend.i.i269.else.i276_crit_edge ], [ %261, %while.entry.i266 ]
  %272 = phi i64 [ %.pre373, %ifend.i.i269.else.i276_crit_edge ], [ %262, %while.entry.i266 ]
  %273 = add nuw i64 %hash.0.i262, 1
  %274 = urem i64 %273, %272
  %275 = getelementptr inbounds ptr, ptr %271, i64 %274
  %276 = load ptr, ptr %275, align 8
  %.not26.i275 = icmp eq ptr %276, null
  br i1 %.not26.i275, label %else48, label %while.entry.i266

Map_string_Type____getitem__.exit:                ; preds = %while.end.i274
  %memberidx11.i278 = getelementptr inbounds %MapEntry_string_Type_, ptr %.pre377.pre, i64 0, i32 1
  %277 = load ptr, ptr %memberidx11.i278, align 8
  %.not116 = icmp eq ptr %277, null
  br i1 %.not116, label %else48, label %if.entry47

if.entry47:                                       ; preds = %Map_string_Type____getitem__.exit
  %278 = load ptr, ptr %0, align 8
  %279 = load ptr, ptr %memberidx.i.i.i160, align 8
  %280 = load i64, ptr %279, align 4
  %memberidx1.i.i.i.i281 = getelementptr inbounds %Program, ptr %278, i64 0, i32 1
  %281 = load ptr, ptr %memberidx1.i.i.i.i281, align 8
  %memberidx.i.i.i.i.i282 = getelementptr inbounds %Array_Module_, ptr %281, i64 0, i32 1
  %282 = load ptr, ptr %memberidx.i.i.i.i.i282, align 8
  %283 = getelementptr inbounds ptr, ptr %282, i64 %280
  %284 = load ptr, ptr %283, align 8
  %memberidx1.i.i283 = getelementptr inbounds %Module, ptr %284, i64 0, i32 5
  %285 = load ptr, ptr %memberidx1.i.i283, align 8
  %286 = load i64, ptr %285, align 4
  %287 = getelementptr inbounds ptr, ptr %282, i64 %286
  %288 = load ptr, ptr %287, align 8
  %memberidx2.i.i.i286 = getelementptr inbounds %Module, ptr %288, i64 0, i32 7
  %289 = load ptr, ptr %memberidx2.i.i.i286, align 8
  %memberidx3.i.i.i287 = getelementptr inbounds %ScopeId, ptr %285, i64 0, i32 1
  %290 = load i64, ptr %memberidx3.i.i.i287, align 4
  %memberidx.i5.i.i.i288 = getelementptr inbounds %Array_Scope_, ptr %289, i64 0, i32 1
  %291 = load ptr, ptr %memberidx.i5.i.i.i288, align 8
  %292 = getelementptr inbounds ptr, ptr %291, i64 %290
  %293 = load ptr, ptr %292, align 8
  %memberidx.i289 = getelementptr inbounds %Scope, ptr %293, i64 0, i32 6
  %294 = load ptr, ptr %memberidx.i289, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %294, ptr %ternary, ptr nonnull %277)
  br label %for.incr

else48:                                           ; preds = %ifend45, %while.end.i274, %Map_string_Type____getitem__.exit, %else.i276
  store i1 false, ptr %47, align 1
  %295 = load ptr, ptr %53, align 8
  %memberidx50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %295, i64 0, i32 5
  %296 = load ptr, ptr %memberidx50, align 8
  %297 = tail call ptr %296(ptr nonnull %53)
  %298 = load ptr, ptr %24, align 8
  %memberidx51 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %298, i64 0, i32 5
  %299 = load ptr, ptr %memberidx51, align 8
  %300 = tail call ptr %299(ptr nonnull %24)
  %301 = alloca ptr, align 8
  %302 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %301, ptr nonnull @108, ptr %297, ptr %300)
  %303 = load ptr, ptr %301, align 8
  %304 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %304, align 8
  %memberidx.i290 = getelementptr inbounds %string, ptr %304, i64 0, i32 1
  store ptr %303, ptr %memberidx.i290, align 8
  %memberidx1.i291 = getelementptr inbounds %string, ptr %304, i64 0, i32 2
  store i64 %302, ptr %memberidx1.i291, align 4
  %memberidx2.i292 = getelementptr inbounds %string, ptr %304, i64 0, i32 3
  store i64 %302, ptr %memberidx2.i292, align 4
  tail call void @free(ptr %297)
  tail call void @free(ptr %300)
  %305 = load ptr, ptr %import_clause.0345, align 8
  %memberidx53 = getelementptr inbounds %Token, ptr %305, i64 0, i32 1
  %306 = load ptr, ptr %memberidx53, align 8
  %307 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i294 = getelementptr inbounds %Compiler, ptr %307, i64 0, i32 6
  %308 = load ptr, ptr %memberidx1.i294, align 8
  %309 = call ptr @malloc(i32 24)
  store i64 1, ptr %309, align 4
  %memberidx1.i.i295 = getelementptr inbounds %FloError, ptr %309, i64 0, i32 2
  store ptr %306, ptr %memberidx1.i.i295, align 8
  %memberidx2.i.i296 = getelementptr inbounds %FloError, ptr %309, i64 0, i32 1
  store ptr %304, ptr %memberidx2.i.i296, align 8
  %memberidx.i.i297 = getelementptr inbounds %Array_FloError_, ptr %308, i64 0, i32 2
  %310 = load i64, ptr %memberidx.i.i297, align 4
  %memberidx1.i2.i298 = getelementptr inbounds %Array_FloError_, ptr %308, i64 0, i32 3
  %311 = load i64, ptr %memberidx1.i2.i298, align 4
  %.not.i.i299 = icmp slt i64 %310, %311
  br i1 %.not.i.i299, label %else48.TypeChecker_error.exit304_crit_edge, label %if.entry.i.i302

else48.TypeChecker_error.exit304_crit_edge:       ; preds = %else48
  %memberidx4.i.i303.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %308, i64 0, i32 1
  %.pre379 = load ptr, ptr %memberidx4.i.i303.phi.trans.insert, align 8
  br label %TypeChecker_error.exit304

if.entry.i.i302:                                  ; preds = %else48
  %312 = shl nuw i64 %311, 1
  store i64 %312, ptr %memberidx1.i2.i298, align 4
  %memberidx2.i.i.i301 = getelementptr inbounds %Array_FloError_, ptr %308, i64 0, i32 1
  %313 = load ptr, ptr %memberidx2.i.i.i301, align 8
  %314 = shl i64 %311, 4
  %315 = call ptr @realloc(ptr %313, i64 %314)
  store ptr %315, ptr %memberidx2.i.i.i301, align 8
  %.pre378 = load i64, ptr %memberidx.i.i297, align 4
  br label %TypeChecker_error.exit304

TypeChecker_error.exit304:                        ; preds = %else48.TypeChecker_error.exit304_crit_edge, %if.entry.i.i302
  %316 = phi ptr [ %.pre379, %else48.TypeChecker_error.exit304_crit_edge ], [ %315, %if.entry.i.i302 ]
  %317 = phi i64 [ %310, %else48.TypeChecker_error.exit304_crit_edge ], [ %.pre378, %if.entry.i.i302 ]
  %318 = add nsw i64 %317, 1
  store i64 %318, ptr %memberidx.i.i297, align 4
  %319 = getelementptr inbounds ptr, ptr %316, i64 %317
  store ptr %309, ptr %319, align 8
  br label %common.ret

if.entry55:                                       ; preds = %else17
  %memberidx59 = getelementptr inbounds %IdentifierToken, ptr %46, i64 0, i32 2
  %320 = load ptr, ptr %memberidx59, align 8
  %memberidx.i.i305 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %321 = load ptr, ptr %memberidx.i.i305, align 8
  %322 = load i64, ptr %321, align 4
  %323 = getelementptr inbounds ptr, ptr %35, i64 %322
  %324 = load ptr, ptr %323, align 8
  %memberidx1.i308 = getelementptr inbounds %Module, ptr %324, i64 0, i32 5
  %325 = load ptr, ptr %memberidx1.i308, align 8
  %326 = load i64, ptr %325, align 4
  %327 = getelementptr inbounds ptr, ptr %35, i64 %326
  %328 = load ptr, ptr %327, align 8
  %memberidx2.i.i310 = getelementptr inbounds %Module, ptr %328, i64 0, i32 7
  %329 = load ptr, ptr %memberidx2.i.i310, align 8
  %memberidx3.i.i311 = getelementptr inbounds %ScopeId, ptr %325, i64 0, i32 1
  %330 = load i64, ptr %memberidx3.i.i311, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %329, i64 0, i32 1
  %331 = load ptr, ptr %memberidx.i5.i.i, align 8
  %332 = getelementptr inbounds ptr, ptr %331, i64 %330
  %333 = load ptr, ptr %332, align 8
  %memberidx60 = getelementptr inbounds %Scope, ptr %333, i64 0, i32 1
  %334 = load ptr, ptr %memberidx60, align 8
  %335 = tail call ptr @malloc(i32 32)
  %336 = load ptr, ptr %42, align 8
  %337 = load i64, ptr %336, align 4
  %memberidx1.i312 = getelementptr inbounds %ScopeId, ptr %336, i64 0, i32 1
  %338 = load i64, ptr %memberidx1.i312, align 4
  store i64 5, ptr %335, align 4
  %memberidx1.i.i313 = getelementptr inbounds %VarId, ptr %335, i64 0, i32 1
  store i64 %337, ptr %memberidx1.i.i313, align 4
  %memberidx2.i.i314 = getelementptr inbounds %VarId, ptr %335, i64 0, i32 2
  store i64 %338, ptr %memberidx2.i.i314, align 4
  %memberidx2.i315 = getelementptr inbounds %ModuleVarId, ptr %335, i64 0, i32 3
  store ptr %336, ptr %memberidx2.i315, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %334, ptr %320, ptr nonnull %335)
  br label %common.ret

else56:                                           ; preds = %else17
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %26)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %TypeChecker_error.exit447, %if.entry91, %if.entry86, %TypeChecker_error.exit412, %Array_Expression____sl__.exit, %TypeChecker_error.exit327, %TypeChecker_error.exit293, %TypeChecker_error.exit281, %TypeChecker_error.exit206, %TypeChecker_error.exit, %ifend6
  %common.ret.op = phi ptr [ %17, %ifend6 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit206 ], [ null, %TypeChecker_error.exit281 ], [ null, %TypeChecker_error.exit293 ], [ null, %TypeChecker_error.exit327 ], [ %299, %Array_Expression____sl__.exit ], [ null, %TypeChecker_error.exit412 ], [ %359, %if.entry86 ], [ %369, %if.entry91 ], [ null, %TypeChecker_error.exit447 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %13, align 4
  %14 = load i64, ptr %10, align 4
  switch i64 %14, label %else92 [
    i64 20, label %if.entry.i2
    i64 11, label %if.entry3.i
    i64 17, label %if.entry27
    i64 13, label %if.entry60
    i64 14, label %if.entry83
    i64 18, label %if.entry91
  ]

if.entry.i2:                                      ; preds = %ifend, %if.entry.i2
  %.tr5.i = phi ptr [ %15, %if.entry.i2 ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %15 = load ptr, ptr %memberidx1.i1, align 8
  %16 = load i64, ptr %15, align 4
  switch i64 %16, label %else92 [
    i64 20, label %if.entry.i2
    i64 11, label %while.entry
  ]

ifend6:                                           ; preds = %if.entry83, %ifend.i422, %get_class_prop_type.exit312, %ifend53, %get_class_prop_type.exit
  %prop_ty.0 = phi ptr [ %common.ret.op.i210, %get_class_prop_type.exit ], [ %common.ret.op.i301, %get_class_prop_type.exit312 ], [ %285, %ifend53 ], [ %13, %ifend.i422 ], [ %13, %if.entry83 ]
  %prop_id.0 = phi ptr [ %56, %get_class_prop_type.exit ], [ %161, %get_class_prop_type.exit312 ], [ %191, %ifend53 ], [ null, %ifend.i422 ], [ null, %if.entry83 ]
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i180 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 4
  store ptr %5, ptr %memberidx.i180, align 8
  %memberidx1.i181 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 5
  store ptr %prop_id.0, ptr %memberidx1.i181, align 8
  %memberidx2.i182 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %prop_ty.0, ptr %memberidx2.i182, align 8
  br label %common.ret

while.entry:                                      ; preds = %if.entry.i2, %while.entry
  %prop_owner_type.0 = phi ptr [ %18, %while.entry ], [ %10, %if.entry.i2 ]
  %memberidx8 = getelementptr inbounds %GenericType, ptr %prop_owner_type.0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx8, align 8
  %19 = load i64, ptr %18, align 4
  %20 = icmp eq i64 %19, 20
  br i1 %20, label %while.entry, label %if.entry3.i

if.entry3.i:                                      ; preds = %while.entry, %ifend
  %prop_owner_type.1 = phi ptr [ %10, %ifend ], [ %18, %while.entry ]
  %21 = load ptr, ptr %0, align 8
  %memberidx6.i7 = getelementptr inbounds %ObjectType, ptr %prop_owner_type.1, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6.i7, align 8
  %memberidx.i.i8 = getelementptr inbounds %Program, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i.i8, align 8
  %24 = load i64, ptr %22, align 4
  %memberidx.i.i.i9 = getelementptr inbounds %Array_Module_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i.i9, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %memberidx2.i.i10 = getelementptr inbounds %Module, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx2.i.i10, align 8
  %memberidx3.i.i11 = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i.i11, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i5.i.i, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  %memberidx11 = getelementptr inbounds %Class, ptr %32, i64 0, i32 6
  %33 = load ptr, ptr %memberidx11, align 8
  %34 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i183 = getelementptr inbounds %Map_string_PropId_, ptr %33, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i183, align 4
  %36 = urem i64 %34, %35
  %37 = load ptr, ptr %33, align 8
  %38 = getelementptr inbounds ptr, ptr %37, i64 %36
  %39 = load ptr, ptr %38, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %if.entry12, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i185 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %40 = phi ptr [ %50, %else.i ], [ %37, %while.entry.i.preheader ]
  %41 = phi i64 [ %51, %else.i ], [ %35, %while.entry.i.preheader ]
  %42 = phi ptr [ %55, %else.i ], [ %39, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %53, %else.i ], [ %36, %while.entry.i.preheader ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i184 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i184, align 4
  %45 = load i64, ptr %memberidx1.i.i185, align 4
  %.not.i.i = icmp eq i64 %44, %45
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i, align 8
  %47 = load ptr, ptr %memberidx3.i.i, align 8
  %48 = tail call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i183, align 4
  %.pre19 = load ptr, ptr %33, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre20.pre = load ptr, ptr %33, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre20.pre, i64 %hash.0.i
  %.pre21.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre21.pre, null
  br i1 %.not25.i, label %if.entry12, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %50 = phi ptr [ %.pre19, %ifend.i.i.else.i_crit_edge ], [ %40, %while.entry.i ]
  %51 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %41, %while.entry.i ]
  %52 = add nuw i64 %hash.0.i, 1
  %53 = urem i64 %52, %51
  %54 = getelementptr inbounds ptr, ptr %50, i64 %53
  %55 = load ptr, ptr %54, align 8
  %.not26.i = icmp eq ptr %55, null
  br i1 %.not26.i, label %if.entry12, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre21.pre, i64 0, i32 1
  %56 = load ptr, ptr %memberidx11.i, align 8
  %57 = icmp eq ptr %56, null
  br i1 %57, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit
  %58 = load ptr, ptr %12, align 8
  %memberidx15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx15, align 8
  %60 = tail call ptr %59(ptr nonnull %12)
  %memberidx16 = getelementptr inbounds %Class, ptr %32, i64 0, i32 1
  %61 = load ptr, ptr %memberidx16, align 8
  %62 = load ptr, ptr %61, align 8
  %memberidx17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %62, i64 0, i32 5
  %63 = load ptr, ptr %memberidx17, align 8
  %64 = tail call ptr %63(ptr nonnull %61)
  %65 = alloca ptr, align 8
  %66 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %65, ptr nonnull @197, ptr %60, ptr %64)
  %67 = load ptr, ptr %65, align 8
  %68 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %68, align 8
  %memberidx.i186 = getelementptr inbounds %string, ptr %68, i64 0, i32 1
  store ptr %67, ptr %memberidx.i186, align 8
  %memberidx1.i187 = getelementptr inbounds %string, ptr %68, i64 0, i32 2
  store i64 %66, ptr %memberidx1.i187, align 4
  %memberidx2.i188 = getelementptr inbounds %string, ptr %68, i64 0, i32 3
  store i64 %66, ptr %memberidx2.i188, align 4
  tail call void @free(ptr %60)
  tail call void @free(ptr %64)
  %69 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Token, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx19, align 8
  %71 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i190 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i190, align 8
  %73 = call ptr @malloc(i32 24)
  store i64 1, ptr %73, align 4
  %memberidx1.i.i191 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 2
  store ptr %70, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 1
  store ptr %68, ptr %memberidx2.i.i192, align 8
  %memberidx.i.i193 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i193, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 3
  %75 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i194 = icmp slt i64 %74, %75
  br i1 %.not.i.i194, label %if.entry12.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry12.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry12
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %.pre25 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry12
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i.i.i, align 8
  %78 = shl i64 %75, 4
  %79 = call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %memberidx2.i.i.i, align 8
  %.pre24 = load i64, ptr %memberidx.i.i193, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %80 = phi ptr [ %.pre25, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %79, %if.entry.i.i ]
  %81 = phi i64 [ %74, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %.pre24, %if.entry.i.i ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i193, align 4
  %83 = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %83, align 8
  br label %common.ret

ifend14:                                          ; preds = %Map_string_PropId____getitem__.exit
  %84 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %56)
  %.not179 = icmp eq ptr %84, null
  br i1 %.not179, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %85 = load ptr, ptr %memberidx2, align 8
  %memberidx24 = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx24, align 8
  %87 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i196 = getelementptr inbounds %Compiler, ptr %87, i64 0, i32 6
  %88 = load ptr, ptr %memberidx1.i196, align 8
  %89 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %89, align 4
  %memberidx1.i.i197 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 2
  store ptr %86, ptr %memberidx1.i.i197, align 8
  %memberidx2.i.i198 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 1
  store ptr %84, ptr %memberidx2.i.i198, align 8
  %memberidx.i.i199 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i199, align 4
  %memberidx1.i2.i200 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 3
  %91 = load i64, ptr %memberidx1.i2.i200, align 4
  %.not.i.i201 = icmp slt i64 %90, %91
  br i1 %.not.i.i201, label %if.entry20.TypeChecker_error.exit206_crit_edge, label %if.entry.i.i204

if.entry20.TypeChecker_error.exit206_crit_edge:   ; preds = %if.entry20
  %memberidx4.i.i205.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %.pre23 = load ptr, ptr %memberidx4.i.i205.phi.trans.insert, align 8
  br label %TypeChecker_error.exit206

if.entry.i.i204:                                  ; preds = %if.entry20
  %92 = shl nuw i64 %91, 1
  store i64 %92, ptr %memberidx1.i2.i200, align 4
  %memberidx2.i.i.i203 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i.i.i203, align 8
  %94 = shl i64 %91, 4
  %95 = tail call ptr @realloc(ptr %93, i64 %94)
  store ptr %95, ptr %memberidx2.i.i.i203, align 8
  %.pre22 = load i64, ptr %memberidx.i.i199, align 4
  br label %TypeChecker_error.exit206

TypeChecker_error.exit206:                        ; preds = %if.entry20.TypeChecker_error.exit206_crit_edge, %if.entry.i.i204
  %96 = phi ptr [ %.pre23, %if.entry20.TypeChecker_error.exit206_crit_edge ], [ %95, %if.entry.i.i204 ]
  %97 = phi i64 [ %90, %if.entry20.TypeChecker_error.exit206_crit_edge ], [ %.pre22, %if.entry.i.i204 ]
  %98 = add nsw i64 %97, 1
  store i64 %98, ptr %memberidx.i.i199, align 4
  %99 = getelementptr inbounds ptr, ptr %96, i64 %97
  store ptr %89, ptr %99, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %100 = load ptr, ptr %0, align 8
  %memberidx.i.i207 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i.i207, align 8
  %memberidx.i.i.i208 = getelementptr inbounds %Program, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i.i208, align 8
  %103 = load i64, ptr %101, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %102, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  %memberidx2.i.i.i209 = getelementptr inbounds %Module, ptr %106, i64 0, i32 3
  %107 = load ptr, ptr %memberidx2.i.i.i209, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %101, i64 0, i32 2
  %108 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %108
  %111 = load ptr, ptr %110, align 8
  %112 = load i64, ptr %56, align 4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend22
  %memberidx1.i211 = getelementptr inbounds %Class, ptr %111, i64 0, i32 5
  %114 = load ptr, ptr %memberidx1.i211, align 8
  %memberidx2.i212 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  %115 = load i64, ptr %memberidx2.i212, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i12.i, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %118, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend22
  %memberidx4.i = getelementptr inbounds %Class, ptr %111, i64 0, i32 4
  %119 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  %120 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %119, i64 0, i32 1
  %121 = load ptr, ptr %memberidx.i11.i, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %120
  %123 = load ptr, ptr %122, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %123, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i210 = load ptr, ptr %common.ret.op.in.i, align 8
  br label %ifend6

if.entry27:                                       ; preds = %ifend
  %memberidx30 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %124 = load ptr, ptr %memberidx30, align 8
  %125 = load i64, ptr %124, align 4
  %126 = icmp eq i64 %125, 3
  %memberidx.i213 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 1
  %127 = load i64, ptr %memberidx.i213, align 4
  %128 = load ptr, ptr %0, align 8
  %memberidx1.i.i214 = getelementptr inbounds %Program, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %memberidx1.i.i214, align 8
  %memberidx.i.i.i215 = getelementptr inbounds %Array_Module_, ptr %129, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i.i.i215, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %127
  %132 = load ptr, ptr %131, align 8
  br i1 %126, label %if.entry32, label %else33

if.entry32:                                       ; preds = %if.entry27
  %memberidx1.i216 = getelementptr inbounds %Module, ptr %132, i64 0, i32 3
  %133 = load ptr, ptr %memberidx1.i216, align 8
  %memberidx2.i217 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 2
  %134 = load i64, ptr %memberidx2.i217, align 4
  %memberidx.i.i218 = getelementptr inbounds %Array_Class_, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i.i218, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  %memberidx35 = getelementptr inbounds %Class, ptr %137, i64 0, i32 7
  %138 = load ptr, ptr %memberidx35, align 8
  %139 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i219 = getelementptr inbounds %Map_string_PropId_, ptr %138, i64 0, i32 1
  %140 = load i64, ptr %memberidx.i219, align 4
  %141 = urem i64 %139, %140
  %142 = load ptr, ptr %138, align 8
  %143 = getelementptr inbounds ptr, ptr %142, i64 %141
  %144 = load ptr, ptr %143, align 8
  %.not.i220 = icmp eq ptr %144, null
  br i1 %.not.i220, label %if.entry36, label %while.entry.i225.preheader

while.entry.i225.preheader:                       ; preds = %if.entry32
  %memberidx1.i.i223 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i227 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i225

while.entry.i225:                                 ; preds = %while.entry.i225.preheader, %else.i235
  %145 = phi ptr [ %155, %else.i235 ], [ %142, %while.entry.i225.preheader ]
  %146 = phi i64 [ %156, %else.i235 ], [ %140, %while.entry.i225.preheader ]
  %147 = phi ptr [ %160, %else.i235 ], [ %144, %while.entry.i225.preheader ]
  %hash.0.i221 = phi i64 [ %158, %else.i235 ], [ %141, %while.entry.i225.preheader ]
  %148 = load ptr, ptr %147, align 8
  %memberidx.i.i222 = getelementptr inbounds %string, ptr %148, i64 0, i32 2
  %149 = load i64, ptr %memberidx.i.i222, align 4
  %150 = load i64, ptr %memberidx1.i.i223, align 4
  %.not.i.i224 = icmp eq i64 %149, %150
  br i1 %.not.i.i224, label %ifend.i.i228, label %else.i235

ifend.i.i228:                                     ; preds = %while.entry.i225
  %memberidx2.i.i226 = getelementptr inbounds %string, ptr %148, i64 0, i32 1
  %151 = load ptr, ptr %memberidx2.i.i226, align 8
  %152 = load ptr, ptr %memberidx3.i.i227, align 8
  %153 = tail call i64 @memcmp(ptr %151, ptr %152, i64 %149)
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %while.end.i233, label %ifend.i.i228.else.i235_crit_edge

ifend.i.i228.else.i235_crit_edge:                 ; preds = %ifend.i.i228
  %.pre37 = load i64, ptr %memberidx.i219, align 4
  %.pre38 = load ptr, ptr %138, align 8
  br label %else.i235

while.end.i233:                                   ; preds = %ifend.i.i228
  %.pre39.pre = load ptr, ptr %138, align 8
  %.phi.trans.insert40.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre39.pre, i64 %hash.0.i221
  %.pre41.pre = load ptr, ptr %.phi.trans.insert40.phi.trans.insert, align 8
  %.not25.i232 = icmp eq ptr %.pre41.pre, null
  br i1 %.not25.i232, label %if.entry36, label %Map_string_PropId____getitem__.exit239

else.i235:                                        ; preds = %ifend.i.i228.else.i235_crit_edge, %while.entry.i225
  %155 = phi ptr [ %.pre38, %ifend.i.i228.else.i235_crit_edge ], [ %145, %while.entry.i225 ]
  %156 = phi i64 [ %.pre37, %ifend.i.i228.else.i235_crit_edge ], [ %146, %while.entry.i225 ]
  %157 = add nuw i64 %hash.0.i221, 1
  %158 = urem i64 %157, %156
  %159 = getelementptr inbounds ptr, ptr %155, i64 %158
  %160 = load ptr, ptr %159, align 8
  %.not26.i234 = icmp eq ptr %160, null
  br i1 %.not26.i234, label %if.entry36, label %while.entry.i225

Map_string_PropId____getitem__.exit239:           ; preds = %while.end.i233
  %memberidx11.i237 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre41.pre, i64 0, i32 1
  %161 = load ptr, ptr %memberidx11.i237, align 8
  %162 = icmp eq ptr %161, null
  br i1 %162, label %if.entry36, label %ifend38

else33:                                           ; preds = %if.entry27
  %memberidx1.i243 = getelementptr inbounds %Module, ptr %132, i64 0, i32 6
  %163 = load ptr, ptr %memberidx1.i243, align 8
  %memberidx2.i244 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 2
  %164 = load i64, ptr %memberidx2.i244, align 4
  %memberidx.i.i245 = getelementptr inbounds %Array_Enum_, ptr %163, i64 0, i32 1
  %165 = load ptr, ptr %memberidx.i.i245, align 8
  %166 = getelementptr inbounds ptr, ptr %165, i64 %164
  %167 = load ptr, ptr %166, align 8
  %memberidx50 = getelementptr inbounds %Enum, ptr %167, i64 0, i32 3
  %168 = load ptr, ptr %memberidx50, align 8
  %169 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i246 = getelementptr inbounds %Map_string_PropId_, ptr %168, i64 0, i32 1
  %170 = load i64, ptr %memberidx.i246, align 4
  %171 = urem i64 %169, %170
  %172 = load ptr, ptr %168, align 8
  %173 = getelementptr inbounds ptr, ptr %172, i64 %171
  %174 = load ptr, ptr %173, align 8
  %.not.i247 = icmp eq ptr %174, null
  br i1 %.not.i247, label %if.entry51, label %while.entry.i252.preheader

while.entry.i252.preheader:                       ; preds = %else33
  %memberidx1.i.i250 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i254 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i252

while.entry.i252:                                 ; preds = %while.entry.i252.preheader, %else.i262
  %175 = phi ptr [ %185, %else.i262 ], [ %172, %while.entry.i252.preheader ]
  %176 = phi i64 [ %186, %else.i262 ], [ %170, %while.entry.i252.preheader ]
  %177 = phi ptr [ %190, %else.i262 ], [ %174, %while.entry.i252.preheader ]
  %hash.0.i248 = phi i64 [ %188, %else.i262 ], [ %171, %while.entry.i252.preheader ]
  %178 = load ptr, ptr %177, align 8
  %memberidx.i.i249 = getelementptr inbounds %string, ptr %178, i64 0, i32 2
  %179 = load i64, ptr %memberidx.i.i249, align 4
  %180 = load i64, ptr %memberidx1.i.i250, align 4
  %.not.i.i251 = icmp eq i64 %179, %180
  br i1 %.not.i.i251, label %ifend.i.i255, label %else.i262

ifend.i.i255:                                     ; preds = %while.entry.i252
  %memberidx2.i.i253 = getelementptr inbounds %string, ptr %178, i64 0, i32 1
  %181 = load ptr, ptr %memberidx2.i.i253, align 8
  %182 = load ptr, ptr %memberidx3.i.i254, align 8
  %183 = tail call i64 @memcmp(ptr %181, ptr %182, i64 %179)
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %while.end.i260, label %ifend.i.i255.else.i262_crit_edge

ifend.i.i255.else.i262_crit_edge:                 ; preds = %ifend.i.i255
  %.pre30 = load i64, ptr %memberidx.i246, align 4
  %.pre31 = load ptr, ptr %168, align 8
  br label %else.i262

while.end.i260:                                   ; preds = %ifend.i.i255
  %.pre32.pre = load ptr, ptr %168, align 8
  %.phi.trans.insert33.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre32.pre, i64 %hash.0.i248
  %.pre34.pre = load ptr, ptr %.phi.trans.insert33.phi.trans.insert, align 8
  %.not25.i259 = icmp eq ptr %.pre34.pre, null
  br i1 %.not25.i259, label %if.entry51, label %Map_string_PropId____getitem__.exit266

else.i262:                                        ; preds = %ifend.i.i255.else.i262_crit_edge, %while.entry.i252
  %185 = phi ptr [ %.pre31, %ifend.i.i255.else.i262_crit_edge ], [ %175, %while.entry.i252 ]
  %186 = phi i64 [ %.pre30, %ifend.i.i255.else.i262_crit_edge ], [ %176, %while.entry.i252 ]
  %187 = add nuw i64 %hash.0.i248, 1
  %188 = urem i64 %187, %186
  %189 = getelementptr inbounds ptr, ptr %185, i64 %188
  %190 = load ptr, ptr %189, align 8
  %.not26.i261 = icmp eq ptr %190, null
  br i1 %.not26.i261, label %if.entry51, label %while.entry.i252

Map_string_PropId____getitem__.exit266:           ; preds = %while.end.i260
  %memberidx11.i264 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre34.pre, i64 0, i32 1
  %191 = load ptr, ptr %memberidx11.i264, align 8
  %192 = icmp eq ptr %191, null
  br i1 %192, label %if.entry51, label %ifend53

if.entry36:                                       ; preds = %else.i235, %if.entry32, %while.end.i233, %Map_string_PropId____getitem__.exit239
  %193 = load ptr, ptr %12, align 8
  %memberidx39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %193, i64 0, i32 5
  %194 = load ptr, ptr %memberidx39, align 8
  %195 = tail call ptr %194(ptr nonnull %12)
  %memberidx40 = getelementptr inbounds %Class, ptr %137, i64 0, i32 1
  %196 = load ptr, ptr %memberidx40, align 8
  %197 = load ptr, ptr %196, align 8
  %memberidx41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %197, i64 0, i32 5
  %198 = load ptr, ptr %memberidx41, align 8
  %199 = tail call ptr %198(ptr nonnull %196)
  %200 = alloca ptr, align 8
  %201 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %200, ptr nonnull @198, ptr %195, ptr %199)
  %202 = load ptr, ptr %200, align 8
  %203 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %203, align 8
  %memberidx.i267 = getelementptr inbounds %string, ptr %203, i64 0, i32 1
  store ptr %202, ptr %memberidx.i267, align 8
  %memberidx1.i268 = getelementptr inbounds %string, ptr %203, i64 0, i32 2
  store i64 %201, ptr %memberidx1.i268, align 4
  %memberidx2.i269 = getelementptr inbounds %string, ptr %203, i64 0, i32 3
  store i64 %201, ptr %memberidx2.i269, align 4
  tail call void @free(ptr %195)
  tail call void @free(ptr %199)
  %204 = load ptr, ptr %memberidx2, align 8
  %memberidx43 = getelementptr inbounds %Token, ptr %204, i64 0, i32 1
  %205 = load ptr, ptr %memberidx43, align 8
  %206 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i271 = getelementptr inbounds %Compiler, ptr %206, i64 0, i32 6
  %207 = load ptr, ptr %memberidx1.i271, align 8
  %208 = call ptr @malloc(i32 24)
  store i64 1, ptr %208, align 4
  %memberidx1.i.i272 = getelementptr inbounds %FloError, ptr %208, i64 0, i32 2
  store ptr %205, ptr %memberidx1.i.i272, align 8
  %memberidx2.i.i273 = getelementptr inbounds %FloError, ptr %208, i64 0, i32 1
  store ptr %203, ptr %memberidx2.i.i273, align 8
  %memberidx.i.i274 = getelementptr inbounds %Array_FloError_, ptr %207, i64 0, i32 2
  %209 = load i64, ptr %memberidx.i.i274, align 4
  %memberidx1.i2.i275 = getelementptr inbounds %Array_FloError_, ptr %207, i64 0, i32 3
  %210 = load i64, ptr %memberidx1.i2.i275, align 4
  %.not.i.i276 = icmp slt i64 %209, %210
  br i1 %.not.i.i276, label %if.entry36.TypeChecker_error.exit281_crit_edge, label %if.entry.i.i279

if.entry36.TypeChecker_error.exit281_crit_edge:   ; preds = %if.entry36
  %memberidx4.i.i280.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %207, i64 0, i32 1
  %.pre45 = load ptr, ptr %memberidx4.i.i280.phi.trans.insert, align 8
  br label %TypeChecker_error.exit281

if.entry.i.i279:                                  ; preds = %if.entry36
  %211 = shl nuw i64 %210, 1
  store i64 %211, ptr %memberidx1.i2.i275, align 4
  %memberidx2.i.i.i278 = getelementptr inbounds %Array_FloError_, ptr %207, i64 0, i32 1
  %212 = load ptr, ptr %memberidx2.i.i.i278, align 8
  %213 = shl i64 %210, 4
  %214 = call ptr @realloc(ptr %212, i64 %213)
  store ptr %214, ptr %memberidx2.i.i.i278, align 8
  %.pre44 = load i64, ptr %memberidx.i.i274, align 4
  br label %TypeChecker_error.exit281

TypeChecker_error.exit281:                        ; preds = %if.entry36.TypeChecker_error.exit281_crit_edge, %if.entry.i.i279
  %215 = phi ptr [ %.pre45, %if.entry36.TypeChecker_error.exit281_crit_edge ], [ %214, %if.entry.i.i279 ]
  %216 = phi i64 [ %209, %if.entry36.TypeChecker_error.exit281_crit_edge ], [ %.pre44, %if.entry.i.i279 ]
  %217 = add nsw i64 %216, 1
  store i64 %217, ptr %memberidx.i.i274, align 4
  %218 = getelementptr inbounds ptr, ptr %215, i64 %216
  store ptr %208, ptr %218, align 8
  br label %common.ret

ifend38:                                          ; preds = %Map_string_PropId____getitem__.exit239
  %219 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %161)
  %.not = icmp eq ptr %219, null
  br i1 %.not, label %ifend46, label %if.entry44

if.entry44:                                       ; preds = %ifend38
  %220 = load ptr, ptr %memberidx2, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %220, i64 0, i32 1
  %221 = load ptr, ptr %memberidx48, align 8
  %222 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i283 = getelementptr inbounds %Compiler, ptr %222, i64 0, i32 6
  %223 = load ptr, ptr %memberidx1.i283, align 8
  %224 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %224, align 4
  %memberidx1.i.i284 = getelementptr inbounds %FloError, ptr %224, i64 0, i32 2
  store ptr %221, ptr %memberidx1.i.i284, align 8
  %memberidx2.i.i285 = getelementptr inbounds %FloError, ptr %224, i64 0, i32 1
  store ptr %219, ptr %memberidx2.i.i285, align 8
  %memberidx.i.i286 = getelementptr inbounds %Array_FloError_, ptr %223, i64 0, i32 2
  %225 = load i64, ptr %memberidx.i.i286, align 4
  %memberidx1.i2.i287 = getelementptr inbounds %Array_FloError_, ptr %223, i64 0, i32 3
  %226 = load i64, ptr %memberidx1.i2.i287, align 4
  %.not.i.i288 = icmp slt i64 %225, %226
  br i1 %.not.i.i288, label %if.entry44.TypeChecker_error.exit293_crit_edge, label %if.entry.i.i291

if.entry44.TypeChecker_error.exit293_crit_edge:   ; preds = %if.entry44
  %memberidx4.i.i292.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %223, i64 0, i32 1
  %.pre43 = load ptr, ptr %memberidx4.i.i292.phi.trans.insert, align 8
  br label %TypeChecker_error.exit293

if.entry.i.i291:                                  ; preds = %if.entry44
  %227 = shl nuw i64 %226, 1
  store i64 %227, ptr %memberidx1.i2.i287, align 4
  %memberidx2.i.i.i290 = getelementptr inbounds %Array_FloError_, ptr %223, i64 0, i32 1
  %228 = load ptr, ptr %memberidx2.i.i.i290, align 8
  %229 = shl i64 %226, 4
  %230 = tail call ptr @realloc(ptr %228, i64 %229)
  store ptr %230, ptr %memberidx2.i.i.i290, align 8
  %.pre42 = load i64, ptr %memberidx.i.i286, align 4
  br label %TypeChecker_error.exit293

TypeChecker_error.exit293:                        ; preds = %if.entry44.TypeChecker_error.exit293_crit_edge, %if.entry.i.i291
  %231 = phi ptr [ %.pre43, %if.entry44.TypeChecker_error.exit293_crit_edge ], [ %230, %if.entry.i.i291 ]
  %232 = phi i64 [ %225, %if.entry44.TypeChecker_error.exit293_crit_edge ], [ %.pre42, %if.entry.i.i291 ]
  %233 = add nsw i64 %232, 1
  store i64 %233, ptr %memberidx.i.i286, align 4
  %234 = getelementptr inbounds ptr, ptr %231, i64 %232
  store ptr %224, ptr %234, align 8
  br label %common.ret

ifend46:                                          ; preds = %ifend38
  %235 = load ptr, ptr %0, align 8
  %memberidx.i.i294 = getelementptr inbounds %PropId, ptr %161, i64 0, i32 1
  %236 = load ptr, ptr %memberidx.i.i294, align 8
  %memberidx.i.i.i295 = getelementptr inbounds %Program, ptr %235, i64 0, i32 1
  %237 = load ptr, ptr %memberidx.i.i.i295, align 8
  %238 = load i64, ptr %236, align 4
  %memberidx.i.i.i.i296 = getelementptr inbounds %Array_Module_, ptr %237, i64 0, i32 1
  %239 = load ptr, ptr %memberidx.i.i.i.i296, align 8
  %240 = getelementptr inbounds ptr, ptr %239, i64 %238
  %241 = load ptr, ptr %240, align 8
  %memberidx2.i.i.i297 = getelementptr inbounds %Module, ptr %241, i64 0, i32 3
  %242 = load ptr, ptr %memberidx2.i.i.i297, align 8
  %memberidx3.i.i.i298 = getelementptr inbounds %TypeId, ptr %236, i64 0, i32 2
  %243 = load i64, ptr %memberidx3.i.i.i298, align 4
  %memberidx.i5.i.i.i299 = getelementptr inbounds %Array_Class_, ptr %242, i64 0, i32 1
  %244 = load ptr, ptr %memberidx.i5.i.i.i299, align 8
  %245 = getelementptr inbounds ptr, ptr %244, i64 %243
  %246 = load ptr, ptr %245, align 8
  %247 = load i64, ptr %161, align 4
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %if.entry.i306, label %ifend.i311

if.entry.i306:                                    ; preds = %ifend46
  %memberidx1.i302 = getelementptr inbounds %Class, ptr %246, i64 0, i32 5
  %249 = load ptr, ptr %memberidx1.i302, align 8
  %memberidx2.i303 = getelementptr inbounds %PropId, ptr %161, i64 0, i32 2
  %250 = load i64, ptr %memberidx2.i303, align 4
  %memberidx.i12.i304 = getelementptr inbounds %Array_ClassMethod_, ptr %249, i64 0, i32 1
  %251 = load ptr, ptr %memberidx.i12.i304, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %250
  %253 = load ptr, ptr %252, align 8
  %memberidx3.i305 = getelementptr inbounds %ClassMethod, ptr %253, i64 0, i32 4
  br label %get_class_prop_type.exit312

ifend.i311:                                       ; preds = %ifend46
  %memberidx4.i307 = getelementptr inbounds %Class, ptr %246, i64 0, i32 4
  %254 = load ptr, ptr %memberidx4.i307, align 8
  %memberidx5.i308 = getelementptr inbounds %PropId, ptr %161, i64 0, i32 2
  %255 = load i64, ptr %memberidx5.i308, align 4
  %memberidx.i11.i309 = getelementptr inbounds %Array_ClassField_, ptr %254, i64 0, i32 1
  %256 = load ptr, ptr %memberidx.i11.i309, align 8
  %257 = getelementptr inbounds ptr, ptr %256, i64 %255
  %258 = load ptr, ptr %257, align 8
  %memberidx6.i310 = getelementptr inbounds %ClassField, ptr %258, i64 0, i32 4
  br label %get_class_prop_type.exit312

get_class_prop_type.exit312:                      ; preds = %if.entry.i306, %ifend.i311
  %common.ret.op.in.i300 = phi ptr [ %memberidx3.i305, %if.entry.i306 ], [ %memberidx6.i310, %ifend.i311 ]
  %common.ret.op.i301 = load ptr, ptr %common.ret.op.in.i300, align 8
  br label %ifend6

if.entry51:                                       ; preds = %else.i262, %else33, %while.end.i260, %Map_string_PropId____getitem__.exit266
  %259 = load ptr, ptr %12, align 8
  %memberidx54 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %259, i64 0, i32 5
  %260 = load ptr, ptr %memberidx54, align 8
  %261 = tail call ptr %260(ptr nonnull %12)
  %memberidx55 = getelementptr inbounds %Enum, ptr %167, i64 0, i32 1
  %262 = load ptr, ptr %memberidx55, align 8
  %263 = load ptr, ptr %262, align 8
  %memberidx56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %263, i64 0, i32 5
  %264 = load ptr, ptr %memberidx56, align 8
  %265 = tail call ptr %264(ptr nonnull %262)
  %266 = alloca ptr, align 8
  %267 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %266, ptr nonnull @199, ptr %261, ptr %265)
  %268 = load ptr, ptr %266, align 8
  %269 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %269, align 8
  %memberidx.i313 = getelementptr inbounds %string, ptr %269, i64 0, i32 1
  store ptr %268, ptr %memberidx.i313, align 8
  %memberidx1.i314 = getelementptr inbounds %string, ptr %269, i64 0, i32 2
  store i64 %267, ptr %memberidx1.i314, align 4
  %memberidx2.i315 = getelementptr inbounds %string, ptr %269, i64 0, i32 3
  store i64 %267, ptr %memberidx2.i315, align 4
  tail call void @free(ptr %261)
  tail call void @free(ptr %265)
  %270 = load ptr, ptr %memberidx2, align 8
  %memberidx58 = getelementptr inbounds %Token, ptr %270, i64 0, i32 1
  %271 = load ptr, ptr %memberidx58, align 8
  %272 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i317 = getelementptr inbounds %Compiler, ptr %272, i64 0, i32 6
  %273 = load ptr, ptr %memberidx1.i317, align 8
  %274 = call ptr @malloc(i32 24)
  store i64 1, ptr %274, align 4
  %memberidx1.i.i318 = getelementptr inbounds %FloError, ptr %274, i64 0, i32 2
  store ptr %271, ptr %memberidx1.i.i318, align 8
  %memberidx2.i.i319 = getelementptr inbounds %FloError, ptr %274, i64 0, i32 1
  store ptr %269, ptr %memberidx2.i.i319, align 8
  %memberidx.i.i320 = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 2
  %275 = load i64, ptr %memberidx.i.i320, align 4
  %memberidx1.i2.i321 = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 3
  %276 = load i64, ptr %memberidx1.i2.i321, align 4
  %.not.i.i322 = icmp slt i64 %275, %276
  br i1 %.not.i.i322, label %if.entry51.TypeChecker_error.exit327_crit_edge, label %if.entry.i.i325

if.entry51.TypeChecker_error.exit327_crit_edge:   ; preds = %if.entry51
  %memberidx4.i.i326.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 1
  %.pre36 = load ptr, ptr %memberidx4.i.i326.phi.trans.insert, align 8
  br label %TypeChecker_error.exit327

if.entry.i.i325:                                  ; preds = %if.entry51
  %277 = shl nuw i64 %276, 1
  store i64 %277, ptr %memberidx1.i2.i321, align 4
  %memberidx2.i.i.i324 = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 1
  %278 = load ptr, ptr %memberidx2.i.i.i324, align 8
  %279 = shl i64 %276, 4
  %280 = call ptr @realloc(ptr %278, i64 %279)
  store ptr %280, ptr %memberidx2.i.i.i324, align 8
  %.pre35 = load i64, ptr %memberidx.i.i320, align 4
  br label %TypeChecker_error.exit327

TypeChecker_error.exit327:                        ; preds = %if.entry51.TypeChecker_error.exit327_crit_edge, %if.entry.i.i325
  %281 = phi ptr [ %.pre36, %if.entry51.TypeChecker_error.exit327_crit_edge ], [ %280, %if.entry.i.i325 ]
  %282 = phi i64 [ %275, %if.entry51.TypeChecker_error.exit327_crit_edge ], [ %.pre35, %if.entry.i.i325 ]
  %283 = add nsw i64 %282, 1
  store i64 %283, ptr %memberidx.i.i320, align 4
  %284 = getelementptr inbounds ptr, ptr %281, i64 %282
  store ptr %274, ptr %284, align 8
  br label %common.ret

ifend53:                                          ; preds = %Map_string_PropId____getitem__.exit266
  %285 = tail call ptr @malloc(i32 16)
  %286 = load ptr, ptr %167, align 8
  store i64 12, ptr %285, align 4
  %memberidx.i328 = getelementptr inbounds %EnumType, ptr %285, i64 0, i32 1
  store ptr %286, ptr %memberidx.i328, align 8
  br label %ifend6

if.entry60:                                       ; preds = %ifend
  %287 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %287, ptr noundef nonnull align 8 dereferenceable(9) @200, i64 9, i1 false)
  %288 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %288, align 8
  %memberidx.i.i329 = getelementptr inbounds %string, ptr %288, i64 0, i32 1
  store ptr %287, ptr %memberidx.i.i329, align 8
  %memberidx1.i.i330 = getelementptr inbounds %string, ptr %288, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i330, align 4
  %memberidx2.i.i331 = getelementptr inbounds %string, ptr %288, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i331, align 4
  %memberidx.i332 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %289 = load i64, ptr %memberidx.i332, align 4
  %.not.i334 = icmp eq i64 %289, 9
  br i1 %.not.i334, label %ifend.i338, label %else64

ifend.i338:                                       ; preds = %if.entry60
  %memberidx2.i336 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %290 = load ptr, ptr %memberidx2.i336, align 8
  %291 = tail call i64 @memcmp(ptr %290, ptr nonnull %287, i64 9)
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %ifend65, label %else64

else64:                                           ; preds = %if.entry60, %ifend.i338
  %293 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %293, ptr noundef nonnull align 8 dereferenceable(9) @201, i64 9, i1 false)
  %294 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %294, align 8
  %memberidx.i.i339 = getelementptr inbounds %string, ptr %294, i64 0, i32 1
  store ptr %293, ptr %memberidx.i.i339, align 8
  %memberidx1.i.i340 = getelementptr inbounds %string, ptr %294, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i340, align 4
  %memberidx2.i.i341 = getelementptr inbounds %string, ptr %294, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i341, align 4
  %295 = load i64, ptr %memberidx.i332, align 4
  %.not.i344 = icmp eq i64 %295, 9
  br i1 %.not.i344, label %ifend.i348, label %else67

ifend.i348:                                       ; preds = %else64
  %memberidx2.i346 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %296 = load ptr, ptr %memberidx2.i346, align 8
  %297 = tail call i64 @memcmp(ptr %296, ptr nonnull %293, i64 9)
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %ifend65, label %else67

ifend65:                                          ; preds = %ifend.i396, %ifend.i385, %ifend.i374, %ifend.i348, %ifend.i338
  %mem_intrinsic.0 = phi i64 [ 3, %ifend.i338 ], [ 4, %ifend.i348 ], [ 5, %ifend.i374 ], [ 6, %ifend.i385 ], [ 7, %ifend.i396 ]
  %299 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %299, align 4
  %memberidx.i.i350 = getelementptr inbounds %Expression, ptr %299, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i350, align 4
  %memberidx1.i.i351 = getelementptr inbounds %Expression, ptr %299, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i351, align 1
  %memberidx.i352 = getelementptr inbounds %IntrinsicCall, ptr %299, i64 0, i32 4
  store i64 %mem_intrinsic.0, ptr %memberidx.i352, align 4
  %memberidx1.i353 = getelementptr inbounds %IntrinsicCall, ptr %299, i64 0, i32 5
  %300 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %300, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %300, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %300, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i, align 4
  %memberidx2.i.i354 = getelementptr inbounds %Array_Expression_, ptr %300, i64 0, i32 1
  %301 = tail call ptr @malloc(i32 64)
  store ptr %301, ptr %memberidx2.i.i354, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %300, ptr %memberidx1.i353, align 8
  %memberidx4.i356 = getelementptr inbounds %Expression, ptr %299, i64 0, i32 3
  %302 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %302, align 4
  store ptr %302, ptr %memberidx4.i356, align 8
  %303 = load i64, ptr %memberidx.i7.i, align 4
  %304 = load i64, ptr %memberidx1.i8.i, align 4
  %.not.i359 = icmp slt i64 %303, %304
  br i1 %.not.i359, label %ifend65.Array_Expression____sl__.exit_crit_edge, label %if.entry.i362

ifend65.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend65
  %.pre29 = load ptr, ptr %memberidx2.i.i354, align 8
  br label %Array_Expression____sl__.exit

if.entry.i362:                                    ; preds = %ifend65
  %305 = shl nuw i64 %304, 1
  store i64 %305, ptr %memberidx1.i8.i, align 4
  %306 = load ptr, ptr %memberidx2.i.i354, align 8
  %307 = shl i64 %304, 4
  %308 = tail call ptr @realloc(ptr %306, i64 %307)
  store ptr %308, ptr %memberidx2.i.i354, align 8
  %.pre28 = load i64, ptr %memberidx.i7.i, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend65.Array_Expression____sl__.exit_crit_edge, %if.entry.i362
  %309 = phi ptr [ %.pre29, %ifend65.Array_Expression____sl__.exit_crit_edge ], [ %308, %if.entry.i362 ]
  %310 = phi i64 [ %303, %ifend65.Array_Expression____sl__.exit_crit_edge ], [ %.pre28, %if.entry.i362 ]
  %311 = add nsw i64 %310, 1
  store i64 %311, ptr %memberidx.i7.i, align 4
  %312 = getelementptr inbounds ptr, ptr %309, i64 %310
  store ptr %5, ptr %312, align 8
  br label %common.ret

else67:                                           ; preds = %else64, %ifend.i348
  %313 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %313, ptr noundef nonnull align 8 dereferenceable(9) @202, i64 9, i1 false)
  %314 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %314, align 8
  %memberidx.i.i365 = getelementptr inbounds %string, ptr %314, i64 0, i32 1
  store ptr %313, ptr %memberidx.i.i365, align 8
  %memberidx1.i.i366 = getelementptr inbounds %string, ptr %314, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i366, align 4
  %memberidx2.i.i367 = getelementptr inbounds %string, ptr %314, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i367, align 4
  %315 = load i64, ptr %memberidx.i332, align 4
  %.not.i370 = icmp eq i64 %315, 9
  br i1 %.not.i370, label %ifend.i374, label %else70

ifend.i374:                                       ; preds = %else67
  %memberidx2.i372 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %316 = load ptr, ptr %memberidx2.i372, align 8
  %317 = tail call i64 @memcmp(ptr %316, ptr nonnull %313, i64 9)
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %ifend65, label %else70

else70:                                           ; preds = %else67, %ifend.i374
  %319 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %319, ptr noundef nonnull align 8 dereferenceable(6) @203, i64 6, i1 false)
  %320 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %320, align 8
  %memberidx.i.i376 = getelementptr inbounds %string, ptr %320, i64 0, i32 1
  store ptr %319, ptr %memberidx.i.i376, align 8
  %memberidx1.i.i377 = getelementptr inbounds %string, ptr %320, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i377, align 4
  %memberidx2.i.i378 = getelementptr inbounds %string, ptr %320, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i378, align 4
  %321 = load i64, ptr %memberidx.i332, align 4
  %.not.i381 = icmp eq i64 %321, 6
  br i1 %.not.i381, label %ifend.i385, label %else73

ifend.i385:                                       ; preds = %else70
  %memberidx2.i383 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %322 = load ptr, ptr %memberidx2.i383, align 8
  %323 = tail call i64 @memcmp(ptr %322, ptr nonnull %319, i64 6)
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %ifend65, label %else73

else73:                                           ; preds = %else70, %ifend.i385
  %325 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %325, ptr noundef nonnull align 8 dereferenceable(7) @204, i64 7, i1 false)
  %326 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %326, align 8
  %memberidx.i.i387 = getelementptr inbounds %string, ptr %326, i64 0, i32 1
  store ptr %325, ptr %memberidx.i.i387, align 8
  %memberidx1.i.i388 = getelementptr inbounds %string, ptr %326, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i388, align 4
  %memberidx2.i.i389 = getelementptr inbounds %string, ptr %326, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i389, align 4
  %327 = load i64, ptr %memberidx.i332, align 4
  %.not.i392 = icmp eq i64 %327, 7
  br i1 %.not.i392, label %ifend.i396, label %else76

ifend.i396:                                       ; preds = %else73
  %memberidx2.i394 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %328 = load ptr, ptr %memberidx2.i394, align 8
  %329 = tail call i64 @memcmp(ptr %328, ptr nonnull %325, i64 7)
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %ifend65, label %else76

else76:                                           ; preds = %else73, %ifend.i396
  %331 = load ptr, ptr %12, align 8
  %memberidx78 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %331, i64 0, i32 5
  %332 = load ptr, ptr %memberidx78, align 8
  %333 = tail call ptr %332(ptr nonnull %12)
  %334 = alloca ptr, align 8
  %335 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %334, ptr nonnull @205, ptr %333)
  %336 = load ptr, ptr %334, align 8
  %337 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %337, align 8
  %memberidx.i398 = getelementptr inbounds %string, ptr %337, i64 0, i32 1
  store ptr %336, ptr %memberidx.i398, align 8
  %memberidx1.i399 = getelementptr inbounds %string, ptr %337, i64 0, i32 2
  store i64 %335, ptr %memberidx1.i399, align 4
  %memberidx2.i400 = getelementptr inbounds %string, ptr %337, i64 0, i32 3
  store i64 %335, ptr %memberidx2.i400, align 4
  tail call void @free(ptr %333)
  %338 = load ptr, ptr %memberidx2, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %338, i64 0, i32 1
  %339 = load ptr, ptr %memberidx80, align 8
  %340 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i402 = getelementptr inbounds %Compiler, ptr %340, i64 0, i32 6
  %341 = load ptr, ptr %memberidx1.i402, align 8
  %342 = call ptr @malloc(i32 24)
  store i64 1, ptr %342, align 4
  %memberidx1.i.i403 = getelementptr inbounds %FloError, ptr %342, i64 0, i32 2
  store ptr %339, ptr %memberidx1.i.i403, align 8
  %memberidx2.i.i404 = getelementptr inbounds %FloError, ptr %342, i64 0, i32 1
  store ptr %337, ptr %memberidx2.i.i404, align 8
  %memberidx.i.i405 = getelementptr inbounds %Array_FloError_, ptr %341, i64 0, i32 2
  %343 = load i64, ptr %memberidx.i.i405, align 4
  %memberidx1.i2.i406 = getelementptr inbounds %Array_FloError_, ptr %341, i64 0, i32 3
  %344 = load i64, ptr %memberidx1.i2.i406, align 4
  %.not.i.i407 = icmp slt i64 %343, %344
  br i1 %.not.i.i407, label %else76.TypeChecker_error.exit412_crit_edge, label %if.entry.i.i410

else76.TypeChecker_error.exit412_crit_edge:       ; preds = %else76
  %memberidx4.i.i411.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %341, i64 0, i32 1
  %.pre27 = load ptr, ptr %memberidx4.i.i411.phi.trans.insert, align 8
  br label %TypeChecker_error.exit412

if.entry.i.i410:                                  ; preds = %else76
  %345 = shl nuw i64 %344, 1
  store i64 %345, ptr %memberidx1.i2.i406, align 4
  %memberidx2.i.i.i409 = getelementptr inbounds %Array_FloError_, ptr %341, i64 0, i32 1
  %346 = load ptr, ptr %memberidx2.i.i.i409, align 8
  %347 = shl i64 %344, 4
  %348 = call ptr @realloc(ptr %346, i64 %347)
  store ptr %348, ptr %memberidx2.i.i.i409, align 8
  %.pre26 = load i64, ptr %memberidx.i.i405, align 4
  br label %TypeChecker_error.exit412

TypeChecker_error.exit412:                        ; preds = %else76.TypeChecker_error.exit412_crit_edge, %if.entry.i.i410
  %349 = phi ptr [ %.pre27, %else76.TypeChecker_error.exit412_crit_edge ], [ %348, %if.entry.i.i410 ]
  %350 = phi i64 [ %343, %else76.TypeChecker_error.exit412_crit_edge ], [ %.pre26, %if.entry.i.i410 ]
  %351 = add nsw i64 %350, 1
  store i64 %351, ptr %memberidx.i.i405, align 4
  %352 = getelementptr inbounds ptr, ptr %349, i64 %350
  store ptr %342, ptr %352, align 8
  br label %common.ret

if.entry83:                                       ; preds = %ifend
  %353 = tail call ptr @malloc(i32 4)
  store i32 1702521203, ptr %353, align 8
  %354 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %354, align 8
  %memberidx.i.i413 = getelementptr inbounds %string, ptr %354, i64 0, i32 1
  store ptr %353, ptr %memberidx.i.i413, align 8
  %memberidx1.i.i414 = getelementptr inbounds %string, ptr %354, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i414, align 4
  %memberidx2.i.i415 = getelementptr inbounds %string, ptr %354, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i415, align 4
  %memberidx.i416 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %355 = load i64, ptr %memberidx.i416, align 4
  %.not.i418 = icmp eq i64 %355, 4
  br i1 %.not.i418, label %ifend.i422, label %ifend6

ifend.i422:                                       ; preds = %if.entry83
  %memberidx2.i420 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %356 = load ptr, ptr %memberidx2.i420, align 8
  %357 = tail call i64 @memcmp(ptr %356, ptr nonnull %353, i64 4)
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %if.entry86, label %ifend6

if.entry86:                                       ; preds = %ifend.i422
  %359 = tail call ptr @malloc(i32 33)
  %memberidx89 = getelementptr inbounds %ArrayType, ptr %10, i64 0, i32 2
  %360 = load i64, ptr %memberidx89, align 4
  store i64 8, ptr %359, align 4
  %memberidx.i.i424 = getelementptr inbounds %Expression, ptr %359, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i424, align 4
  %memberidx1.i.i425 = getelementptr inbounds %Expression, ptr %359, i64 0, i32 1
  %memberidx.i426 = getelementptr inbounds %Expression, ptr %359, i64 0, i32 3
  %361 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %361, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %361, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %361, ptr %memberidx.i426, align 8
  %memberidx1.i427 = getelementptr inbounds %IntExpression, ptr %359, i64 0, i32 4
  store i64 %360, ptr %memberidx1.i427, align 4
  store i1 true, ptr %memberidx1.i.i425, align 1
  br label %common.ret

if.entry91:                                       ; preds = %ifend
  %memberidx94 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %362 = load ptr, ptr %memberidx94, align 8
  %memberidx95 = getelementptr inbounds %ModuleVarId, ptr %362, i64 0, i32 3
  %363 = load ptr, ptr %memberidx95, align 8
  %memberidx96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %364 = load ptr, ptr %memberidx96, align 8
  store ptr %363, ptr %memberidx96, align 8
  %365 = alloca %VarAccessExpressionNode, align 8
  %366 = load ptr, ptr %memberidx2, align 8
  %memberidx.i429 = getelementptr inbounds %Token, ptr %366, i64 0, i32 1
  %367 = load ptr, ptr %memberidx.i429, align 8
  store ptr %367, ptr %365, align 8
  %memberidx.i.i.i430 = getelementptr inbounds %StatementNode, ptr %365, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i430, align 8
  %memberidx.i.i431 = getelementptr inbounds %ExpressionNode, ptr %365, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i431, align 8
  %memberidx1.i432 = getelementptr inbounds %VarAccessExpressionNode, ptr %365, i64 0, i32 3
  store ptr %366, ptr %memberidx1.i432, align 8
  %368 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %368, align 4
  %369 = call fastcc ptr @TypeChecker_check_var_access_expr(ptr nonnull %0, ptr nonnull %368, ptr nonnull %365)
  store ptr %364, ptr %memberidx96, align 8
  br label %common.ret

else92:                                           ; preds = %if.entry.i2, %ifend
  %370 = load ptr, ptr %12, align 8
  %memberidx100 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %370, i64 0, i32 5
  %371 = load ptr, ptr %memberidx100, align 8
  %372 = tail call ptr %371(ptr nonnull %12)
  %373 = load ptr, ptr %memberidx1, align 8
  %374 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %373)
  %375 = load ptr, ptr %374, align 8
  %memberidx102 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %375, i64 0, i32 5
  %376 = load ptr, ptr %memberidx102, align 8
  %377 = tail call ptr %376(ptr nonnull %374)
  %378 = alloca ptr, align 8
  %379 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %378, ptr nonnull @206, ptr %372, ptr %377)
  %380 = load ptr, ptr %378, align 8
  %381 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %381, align 8
  %memberidx.i433 = getelementptr inbounds %string, ptr %381, i64 0, i32 1
  store ptr %380, ptr %memberidx.i433, align 8
  %memberidx1.i434 = getelementptr inbounds %string, ptr %381, i64 0, i32 2
  store i64 %379, ptr %memberidx1.i434, align 4
  %memberidx2.i435 = getelementptr inbounds %string, ptr %381, i64 0, i32 3
  store i64 %379, ptr %memberidx2.i435, align 4
  tail call void @free(ptr %372)
  tail call void @free(ptr %377)
  %382 = load ptr, ptr %memberidx, align 8
  %383 = load ptr, ptr %382, align 8
  %384 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i437 = getelementptr inbounds %Compiler, ptr %384, i64 0, i32 6
  %385 = load ptr, ptr %memberidx1.i437, align 8
  %386 = call ptr @malloc(i32 24)
  store i64 4, ptr %386, align 4
  %memberidx1.i.i438 = getelementptr inbounds %FloError, ptr %386, i64 0, i32 2
  store ptr %383, ptr %memberidx1.i.i438, align 8
  %memberidx2.i.i439 = getelementptr inbounds %FloError, ptr %386, i64 0, i32 1
  store ptr %381, ptr %memberidx2.i.i439, align 8
  %memberidx.i.i440 = getelementptr inbounds %Array_FloError_, ptr %385, i64 0, i32 2
  %387 = load i64, ptr %memberidx.i.i440, align 4
  %memberidx1.i2.i441 = getelementptr inbounds %Array_FloError_, ptr %385, i64 0, i32 3
  %388 = load i64, ptr %memberidx1.i2.i441, align 4
  %.not.i.i442 = icmp slt i64 %387, %388
  br i1 %.not.i.i442, label %else92.TypeChecker_error.exit447_crit_edge, label %if.entry.i.i445

else92.TypeChecker_error.exit447_crit_edge:       ; preds = %else92
  %memberidx4.i.i446.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %385, i64 0, i32 1
  %.pre47 = load ptr, ptr %memberidx4.i.i446.phi.trans.insert, align 8
  br label %TypeChecker_error.exit447

if.entry.i.i445:                                  ; preds = %else92
  %389 = shl nuw i64 %388, 1
  store i64 %389, ptr %memberidx1.i2.i441, align 4
  %memberidx2.i.i.i444 = getelementptr inbounds %Array_FloError_, ptr %385, i64 0, i32 1
  %390 = load ptr, ptr %memberidx2.i.i.i444, align 8
  %391 = shl i64 %388, 4
  %392 = call ptr @realloc(ptr %390, i64 %391)
  store ptr %392, ptr %memberidx2.i.i.i444, align 8
  %.pre46 = load i64, ptr %memberidx.i.i440, align 4
  br label %TypeChecker_error.exit447

TypeChecker_error.exit447:                        ; preds = %else92.TypeChecker_error.exit447_crit_edge, %if.entry.i.i445
  %393 = phi ptr [ %.pre47, %else92.TypeChecker_error.exit447_crit_edge ], [ %392, %if.entry.i.i445 ]
  %394 = phi i64 [ %387, %else92.TypeChecker_error.exit447_crit_edge ], [ %.pre46, %if.entry.i.i445 ]
  %395 = add nsw i64 %394, 1
  store i64 %395, ptr %memberidx.i.i440, align 4
  %396 = getelementptr inbounds ptr, ptr %393, i64 %394
  store ptr %386, ptr %396, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %.not = icmp eq i64 %5, 19
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 20
  br i1 %8, label %if.entry.i87, label %is_object.exit

if.entry.i87:                                     ; preds = %if.entry, %if.entry.i87
  %.tr5.i = phi ptr [ %9, %if.entry.i87 ], [ %6, %if.entry ]
  %memberidx1.i86 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i86, align 8
  %10 = load i64, ptr %9, align 4
  %11 = icmp eq i64 %10, 20
  br i1 %11, label %if.entry.i87, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i87, %if.entry
  %.lcssa.i = phi i64 [ %7, %if.entry ], [ %10, %if.entry.i87 ]
  %12 = icmp eq i64 %.lcssa.i, 11
  br i1 %12, label %if.entry2, label %ifend4

ifend:                                            ; preds = %ifend4, %4
  %right.0 = phi ptr [ %52, %ifend4 ], [ %2, %4 ]
  %memberidx.i = getelementptr inbounds %Expression, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx.i, align 4
  switch i64 %13, label %if.entry12 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %14 = load ptr, ptr %memberidx1.i, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %ifend14, label %if.entry12

if.entry4.i:                                      ; preds = %ifend
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx7.i, align 8
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %ifend14, label %if.entry12

check_is_var.exit:                                ; preds = %ifend
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %1, i64 0, i32 4
  %20 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  %21 = load ptr, ptr %memberidx14.i, align 8
  %22 = load i64, ptr %21, align 4
  %.not88 = icmp eq i64 %22, 15
  br i1 %.not88, label %if.entry12, label %ifend14

if.entry2:                                        ; preds = %is_object.exit
  %23 = tail call fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr %3)
  %24 = icmp ne ptr %23, null
  %memberidx.i50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i50, align 8
  %memberidx1.i51 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i51, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  %29 = or i1 %24, %28
  br i1 %29, label %common.ret, label %if.entry2.ifend4_crit_edge

if.entry2.ifend4_crit_edge:                       ; preds = %if.entry2
  %.pre = load ptr, ptr %memberidx1, align 8
  %.pre89 = load i64, ptr %memberidx, align 4
  br label %ifend4

ifend4:                                           ; preds = %if.entry2.ifend4_crit_edge, %is_object.exit
  %30 = phi i64 [ %.pre89, %if.entry2.ifend4_crit_edge ], [ %5, %is_object.exit ]
  %31 = phi ptr [ %.pre, %if.entry2.ifend4_crit_edge ], [ %6, %is_object.exit ]
  %32 = icmp eq i64 %30, 20
  %spec.store.select.i = select i1 %32, i64 1, i64 %30
  %33 = icmp eq i64 %spec.store.select.i, 21
  %spec.store.select34.i = select i1 %33, i64 2, i64 %spec.store.select.i
  %34 = icmp eq i64 %spec.store.select34.i, 22
  %spec.store.select30.i = select i1 %34, i64 3, i64 %spec.store.select34.i
  %35 = icmp eq i64 %spec.store.select30.i, 23
  %spec.store.select37.i = select i1 %35, i64 4, i64 %spec.store.select30.i
  %36 = icmp eq i64 %spec.store.select37.i, 24
  %spec.store.select31.i = select i1 %36, i64 5, i64 %spec.store.select37.i
  %37 = icmp eq i64 %spec.store.select31.i, 25
  %spec.store.select35.i = select i1 %37, i64 6, i64 %spec.store.select31.i
  %38 = icmp eq i64 %spec.store.select35.i, 26
  %spec.store.select32.i = select i1 %38, i64 16, i64 %spec.store.select35.i
  %39 = icmp eq i64 %spec.store.select32.i, 27
  %spec.store.select38.i = select i1 %39, i64 15, i64 %spec.store.select32.i
  %40 = icmp eq i64 %spec.store.select38.i, 29
  %spec.store.select33.i = select i1 %40, i64 13, i64 %spec.store.select38.i
  %41 = icmp eq i64 %spec.store.select33.i, 30
  %spec.store.select36.i = select i1 %41, i64 14, i64 %spec.store.select33.i
  %42 = tail call ptr @malloc(i32 48)
  %memberidx28.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %43 = load ptr, ptr %memberidx28.i, align 8
  %memberidx29.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 5
  %44 = load ptr, ptr %memberidx29.i, align 8
  %45 = load ptr, ptr %43, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  %48 = load i64, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 3
  %51 = load i64, ptr %memberidx3.i.i.i, align 4
  store i64 %48, ptr %47, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 1
  store i64 %49, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 3
  store i64 %51, ptr %memberidx3.i.i.i.i, align 4
  store ptr %47, ptr %42, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %42, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %ExpressionNode, ptr %42, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 4
  store i64 %spec.store.select36.i, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 5
  store ptr %44, ptr %memberidx4.i.i, align 8
  %52 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %31, ptr nonnull %42)
  %memberidx.i54 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i54, align 8
  %memberidx1.i55 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 6
  %54 = load ptr, ptr %memberidx1.i55, align 8
  %memberidx2.i56 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i56, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %common.ret, label %ifend

common.ret:                                       ; preds = %if.entry2, %ifend4, %ifend21, %TypeChecker_error.exit80, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit80 ], [ %105, %ifend21 ], [ null, %ifend4 ], [ %23, %if.entry2 ]
  ret ptr %common.ret.op

if.entry12:                                       ; preds = %if.entry4.i, %if.entry.i, %ifend, %check_is_var.exit
  %57 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %57, ptr noundef nonnull align 8 dereferenceable(33) @172, i64 33, i1 false)
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i57 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i57, align 4
  %memberidx15 = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %59 = load ptr, ptr %memberidx15, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx1.i59, align 8
  %63 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %63, align 4
  %memberidx1.i.i60 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i60, align 8
  %memberidx2.i.i61 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i61, align 8
  %memberidx.i.i62 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i62, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %65 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %64, %65
  br i1 %.not.i.i, label %if.entry12.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry12.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry12
  %memberidx4.i.i65.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre93 = load ptr, ptr %memberidx4.i.i65.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry12
  %66 = shl nuw i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i64 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %67 = load ptr, ptr %memberidx2.i.i.i64, align 8
  %68 = shl i64 %65, 4
  %69 = tail call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %memberidx2.i.i.i64, align 8
  %.pre92 = load i64, ptr %memberidx.i.i62, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %70 = phi ptr [ %.pre93, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %69, %if.entry.i.i ]
  %71 = phi i64 [ %64, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %.pre92, %if.entry.i.i ]
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %memberidx.i.i62, align 4
  %73 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %73, align 8
  br label %common.ret

ifend14:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %memberidx17 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %74 = load ptr, ptr %memberidx17, align 8
  %memberidx18 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %75 = load ptr, ptr %memberidx18, align 8
  %76 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %74, ptr %75)
  br i1 %76, label %ifend21, label %if.entry19

if.entry19:                                       ; preds = %ifend14
  %77 = load ptr, ptr %memberidx18, align 8
  %78 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %77)
  %79 = load ptr, ptr %78, align 8
  %memberidx23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx23, align 8
  %81 = tail call ptr %80(ptr nonnull %78)
  %82 = load ptr, ptr %memberidx17, align 8
  %83 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %82)
  %84 = load ptr, ptr %83, align 8
  %memberidx25 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx25, align 8
  %86 = tail call ptr %85(ptr nonnull %83)
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @173, ptr %81, ptr %86)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i66 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i66, align 8
  %memberidx1.i67 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx1.i67, align 4
  %memberidx2.i68 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 %88, ptr %memberidx2.i68, align 4
  tail call void @free(ptr %81)
  tail call void @free(ptr %86)
  %91 = load ptr, ptr %3, align 8
  %memberidx.i69 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %92 = load ptr, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %Compiler, ptr %92, i64 0, i32 6
  %93 = load ptr, ptr %memberidx1.i70, align 8
  %94 = call ptr @malloc(i32 24)
  store i64 5, ptr %94, align 4
  %memberidx1.i.i71 = getelementptr inbounds %FloError, ptr %94, i64 0, i32 2
  store ptr %91, ptr %memberidx1.i.i71, align 8
  %memberidx2.i.i72 = getelementptr inbounds %FloError, ptr %94, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i72, align 8
  %memberidx.i.i73 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %95 = load i64, ptr %memberidx.i.i73, align 4
  %memberidx1.i2.i74 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 3
  %96 = load i64, ptr %memberidx1.i2.i74, align 4
  %.not.i.i75 = icmp slt i64 %95, %96
  br i1 %.not.i.i75, label %if.entry19.TypeChecker_error.exit80_crit_edge, label %if.entry.i.i78

if.entry19.TypeChecker_error.exit80_crit_edge:    ; preds = %if.entry19
  %memberidx4.i.i79.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 1
  %.pre91 = load ptr, ptr %memberidx4.i.i79.phi.trans.insert, align 8
  br label %TypeChecker_error.exit80

if.entry.i.i78:                                   ; preds = %if.entry19
  %97 = shl nuw i64 %96, 1
  store i64 %97, ptr %memberidx1.i2.i74, align 4
  %memberidx2.i.i.i77 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 1
  %98 = load ptr, ptr %memberidx2.i.i.i77, align 8
  %99 = shl i64 %96, 4
  %100 = call ptr @realloc(ptr %98, i64 %99)
  store ptr %100, ptr %memberidx2.i.i.i77, align 8
  %.pre90 = load i64, ptr %memberidx.i.i73, align 4
  br label %TypeChecker_error.exit80

TypeChecker_error.exit80:                         ; preds = %if.entry19.TypeChecker_error.exit80_crit_edge, %if.entry.i.i78
  %101 = phi ptr [ %.pre91, %if.entry19.TypeChecker_error.exit80_crit_edge ], [ %100, %if.entry.i.i78 ]
  %102 = phi i64 [ %95, %if.entry19.TypeChecker_error.exit80_crit_edge ], [ %.pre90, %if.entry.i.i78 ]
  %103 = add nsw i64 %102, 1
  store i64 %103, ptr %memberidx.i.i73, align 4
  %104 = getelementptr inbounds ptr, ptr %101, i64 %102
  store ptr %94, ptr %104, align 8
  br label %common.ret

ifend21:                                          ; preds = %ifend14
  %105 = tail call ptr @malloc(i32 49)
  %106 = load ptr, ptr %memberidx18, align 8
  store i64 8, ptr %105, align 4
  %memberidx.i.i81 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i81, align 4
  %memberidx1.i.i82 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 1
  %memberidx.i83 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 4
  store ptr %1, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 5
  store i64 19, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i85, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %105, i64 0, i32 3
  store ptr %106, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i82, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr nocapture readonly %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %6 = tail call ptr @malloc(i32 25)
  %memberidx.i77 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %8 = load i64, ptr %memberidx1.i78, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 2
  store i64 %8, ptr %memberidx3.i.i, align 4
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i84 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx.i90 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 2
  %memberidx1.i91 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 3
  %memberidx2.i.i93 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Type____sl__.exit
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %52, %Array_Type____sl__.exit ]
  %arg.0116.in = phi ptr [ %7, %for.body.lr.ph ], [ %53, %Array_Type____sl__.exit ]
  %arg.0116 = load ptr, ptr %arg.0116.in, align 8
  %11 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %11, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %11, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i, align 4
  %memberidx1.i.i81 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i81, align 1
  %memberidx3 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %arg.0116, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx5, align 8
  store ptr %13, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 6
  store ptr null, ptr %memberidx6, align 8
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  %memberidx7 = getelementptr inbounds %ArgNode, ptr %arg.0116, i64 0, i32 1
  %15 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

common.ret.loopexit:                              ; preds = %if.entry, %if.entry13
  store i1 false, ptr %6, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %for.end
  %common.ret.op = phi ptr [ %17, %for.end ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %Array_Type____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  %16 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %2)
  %17 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %17, align 4
  %memberidx.i82 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 1
  store ptr %4, ptr %memberidx.i82, align 8
  %memberidx1.i83 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i83, align 8
  br label %common.ret

if.entry:                                         ; preds = %for.body
  %18 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %15)
  %19 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 6
  %20 = load ptr, ptr %memberidx1.i85, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i86, align 4
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %common.ret.loopexit, label %ifend

ifend:                                            ; preds = %if.entry, %for.body
  %arg_type.0 = phi ptr [ %18, %if.entry ], [ %14, %for.body ]
  %memberidx12 = getelementptr inbounds %ArgNode, ptr %arg.0116, i64 0, i32 2
  %23 = load ptr, ptr %memberidx12, align 8
  %.not76 = icmp eq ptr %23, null
  br i1 %.not76, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend
  %24 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %arg_type.0, ptr nonnull %23)
  store ptr %24, ptr %memberidx6, align 8
  %25 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i88 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i88, align 8
  %memberidx2.i89 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i89, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret.loopexit, label %ifend20

ifend15:                                          ; preds = %ifend20, %TypeChecker_error.exit, %else23, %ifend
  %arg_type.1 = phi ptr [ %arg_type.0, %TypeChecker_error.exit ], [ %arg_type.0, %else23 ], [ %arg_type.0, %ifend ], [ %56, %ifend20 ]
  %29 = load i64, ptr %memberidx.i90, align 4
  %30 = load i64, ptr %memberidx1.i91, align 4
  %.not.i = icmp slt i64 %29, %30
  br i1 %.not.i, label %ifend15.Array_FunctionArg____sl__.exit_crit_edge, label %if.entry.i

ifend15.Array_FunctionArg____sl__.exit_crit_edge: ; preds = %ifend15
  %.pre120 = load ptr, ptr %memberidx2.i.i93, align 8
  br label %Array_FunctionArg____sl__.exit

if.entry.i:                                       ; preds = %ifend15
  %31 = shl nuw i64 %30, 1
  store i64 %31, ptr %memberidx1.i91, align 4
  %32 = load ptr, ptr %memberidx2.i.i93, align 8
  %33 = shl i64 %30, 4
  %34 = call ptr @realloc(ptr %32, i64 %33)
  store ptr %34, ptr %memberidx2.i.i93, align 8
  %.pre119 = load i64, ptr %memberidx.i90, align 4
  br label %Array_FunctionArg____sl__.exit

Array_FunctionArg____sl__.exit:                   ; preds = %ifend15.Array_FunctionArg____sl__.exit_crit_edge, %if.entry.i
  %35 = phi ptr [ %.pre120, %ifend15.Array_FunctionArg____sl__.exit_crit_edge ], [ %34, %if.entry.i ]
  %36 = phi i64 [ %29, %ifend15.Array_FunctionArg____sl__.exit_crit_edge ], [ %.pre119, %if.entry.i ]
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr %memberidx.i90, align 4
  %38 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %11, ptr %38, align 8
  %memberidx38 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 3
  store ptr %arg_type.1, ptr %memberidx38, align 8
  %39 = load ptr, ptr %memberidx3, align 8
  %40 = call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr %0, ptr %39, ptr nonnull %11, ptr %arg_type.1)
  %memberidx40 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 4
  %memberidx41 = getelementptr inbounds %Var, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx41, align 8
  store ptr %41, ptr %memberidx40, align 8
  %42 = load i64, ptr %memberidx.i, align 4
  %43 = load i64, ptr %memberidx1.i, align 4
  %.not.i96 = icmp slt i64 %42, %43
  br i1 %.not.i96, label %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, label %if.entry.i99

Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge: ; preds = %Array_FunctionArg____sl__.exit
  %.pre122 = load ptr, ptr %memberidx2.i, align 8
  br label %Array_Type____sl__.exit

if.entry.i99:                                     ; preds = %Array_FunctionArg____sl__.exit
  %44 = shl nuw i64 %43, 1
  store i64 %44, ptr %memberidx1.i, align 4
  %45 = load ptr, ptr %memberidx2.i, align 8
  %46 = shl i64 %43, 4
  %47 = call ptr @realloc(ptr %45, i64 %46)
  store ptr %47, ptr %memberidx2.i, align 8
  %.pre121 = load i64, ptr %memberidx.i, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, %if.entry.i99
  %48 = phi ptr [ %.pre122, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %47, %if.entry.i99 ]
  %49 = phi i64 [ %42, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %.pre121, %if.entry.i99 ]
  %50 = add nsw i64 %49, 1
  store i64 %50, ptr %memberidx.i, align 4
  %51 = getelementptr inbounds ptr, ptr %48, i64 %49
  store ptr %arg_type.1, ptr %51, align 8
  %52 = add nuw nsw i64 %10, 1
  store i64 %52, ptr %memberidx1.i.i, align 4
  %53 = getelementptr inbounds ptr, ptr %7, i64 %10
  %.not123 = icmp slt i64 %10, %8
  br i1 %.not123, label %for.body, label %for.end

ifend20:                                          ; preds = %if.entry13
  %54 = load i64, ptr %arg_type.0, align 4
  %55 = icmp eq i64 %54, 21
  %memberidx26 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %56 = load ptr, ptr %memberidx26, align 8
  br i1 %55, label %ifend15, label %else23

else23:                                           ; preds = %ifend20
  %57 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %arg_type.0, ptr %56)
  br i1 %57, label %ifend15, label %if.entry29

if.entry29:                                       ; preds = %else23
  %58 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %arg_type.0)
  %59 = load ptr, ptr %58, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %59, i64 0, i32 5
  %60 = load ptr, ptr %memberidx32, align 8
  %61 = call ptr %60(ptr nonnull %58)
  %62 = load ptr, ptr %memberidx6, align 8
  %memberidx34 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 3
  %63 = load ptr, ptr %memberidx34, align 8
  %64 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %63)
  %65 = load ptr, ptr %64, align 8
  %memberidx35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %65, i64 0, i32 5
  %66 = load ptr, ptr %memberidx35, align 8
  %67 = call ptr %66(ptr nonnull %64)
  %68 = alloca ptr, align 8
  %69 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %68, ptr nonnull @106, ptr %61, ptr %67)
  %70 = load ptr, ptr %68, align 8
  %71 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %71, align 8
  %memberidx.i104 = getelementptr inbounds %string, ptr %71, i64 0, i32 1
  store ptr %70, ptr %memberidx.i104, align 8
  %memberidx1.i105 = getelementptr inbounds %string, ptr %71, i64 0, i32 2
  store i64 %69, ptr %memberidx1.i105, align 4
  %memberidx2.i106 = getelementptr inbounds %string, ptr %71, i64 0, i32 3
  store i64 %69, ptr %memberidx2.i106, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %67)
  %72 = load ptr, ptr %memberidx12, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i108 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 6
  %75 = load ptr, ptr %memberidx1.i108, align 8
  %76 = call ptr @malloc(i32 24)
  store i64 5, ptr %76, align 4
  %memberidx1.i.i109 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 2
  store ptr %73, ptr %memberidx1.i.i109, align 8
  %memberidx2.i.i110 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 1
  store ptr %71, ptr %memberidx2.i.i110, align 8
  %memberidx.i.i111 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %77 = load i64, ptr %memberidx.i.i111, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 3
  %78 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %77, %78
  br i1 %.not.i.i, label %if.entry29.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry29.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry29
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %.pre118 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry29
  %79 = shl nuw i64 %78, 1
  store i64 %79, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %80 = load ptr, ptr %memberidx2.i.i.i, align 8
  %81 = shl i64 %78, 4
  %82 = call ptr @realloc(ptr %80, i64 %81)
  store ptr %82, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i111, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %83 = phi ptr [ %.pre118, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %82, %if.entry.i.i ]
  %84 = phi i64 [ %77, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %85 = add nsw i64 %84, 1
  store i64 %85, ptr %memberidx.i.i111, align 4
  %86 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %76, ptr %86, align 8
  br label %ifend15
}

define internal fastcc ptr @TypeChecker_check_constructor_call(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) unnamed_addr {
  %5 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i, align 8
  %7 = load i64, ptr %1, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Class_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %else13, %if.entry12, %ifend11, %if.entry
  %common.ret.op = phi ptr [ %19, %if.entry ], [ null, %ifend11 ], [ %52, %if.entry12 ], [ %72, %else13 ], [ null, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %18 = tail call ptr @malloc(i32 44)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(44) %18, ptr noundef nonnull align 8 dereferenceable(44) @189, i64 44, i1 false)
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i40 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i40, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 44, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %4
  %memberidx2 = getelementptr inbounds %Class, ptr %15, i64 0, i32 5
  %20 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %16, i64 0, i32 2
  %21 = load i64, ptr %memberidx3, align 4
  %memberidx.i41 = getelementptr inbounds %Array_ClassMethod_, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i41, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 6
  %26 = load ptr, ptr %memberidx5, align 8
  %27 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr %25, ptr %26, ptr %2)
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 6
  %29 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i43 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i43, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend
  %memberidx.i44 = getelementptr inbounds %FunctionType, ptr %25, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i44, align 8
  %memberidx1.i45 = getelementptr inbounds %Array_Type_, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx1.i45, align 4
  %memberidx2.i46 = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i46, align 4
  %.not.i = icmp eq i64 %33, %34
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry12

for.cond.i.preheader:                             ; preds = %ifend8
  %35 = icmp sgt i64 %33, 0
  br i1 %35, label %for.body.i.lr.ph, label %ifend11

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %memberidx.i16.i = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %ifend8.i
  %i.0.i62 = phi i64 [ 0, %for.body.i.lr.ph ], [ %45, %ifend8.i ]
  %36 = load ptr, ptr %memberidx.i44, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_Type_, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i.i47, align 8
  %38 = getelementptr inbounds ptr, ptr %37, i64 %i.0.i62
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %memberidx.i16.i, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %i.0.i62
  %42 = load ptr, ptr %41, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %42, i64 0, i32 3
  %43 = load ptr, ptr %memberidx5.i, align 8
  %44 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %39, ptr %43)
  br i1 %44, label %ifend8.i, label %else13

ifend8.i:                                         ; preds = %for.body.i
  %45 = add nuw nsw i64 %i.0.i62, 1
  %46 = load i64, ptr %memberidx2.i46, align 4
  %47 = icmp slt i64 %45, %46
  br i1 %47, label %for.body.i, label %ifend11

ifend11:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  store ptr %27, ptr %3, align 8
  br label %common.ret

if.entry12:                                       ; preds = %ifend8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %2, i64 0, i32 2
  %48 = load i64, ptr %memberidx17, align 4
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @190, i64 %33, i64 %48)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i48 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx1.i49, align 4
  %memberidx2.i50 = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 %50, ptr %memberidx2.i50, align 4
  br label %common.ret

else13:                                           ; preds = %for.body.i
  %53 = load ptr, ptr %memberidx.i44, align 8
  %memberidx.i51 = getelementptr inbounds %Array_Type_, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i51, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %i.0.i62
  %56 = load ptr, ptr %55, align 8
  %57 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %56)
  %58 = load ptr, ptr %57, align 8
  %memberidx19 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx19, align 8
  %60 = tail call ptr %59(ptr nonnull %57)
  %61 = load ptr, ptr %memberidx.i16.i, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %i.0.i62
  %63 = load ptr, ptr %62, align 8
  %memberidx20 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 3
  %64 = load ptr, ptr %memberidx20, align 8
  %65 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %64)
  %66 = load ptr, ptr %65, align 8
  %memberidx21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx21, align 8
  %68 = tail call ptr %67(ptr nonnull %65)
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @191, ptr %60, ptr %68, i64 %i.0.i62)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %72, align 8
  %memberidx.i53 = getelementptr inbounds %string, ptr %72, i64 0, i32 1
  store ptr %71, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %string, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx1.i54, align 4
  %memberidx2.i55 = getelementptr inbounds %string, ptr %72, i64 0, i32 3
  store i64 %70, ptr %memberidx2.i55, align 4
  tail call void @free(ptr %60)
  tail call void @free(ptr %68)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_methods(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2669 = getelementptr inbounds %Array_MethodNode_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx2669, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i267 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx55 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx124 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %memberidx139 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx112 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx152 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassMethod____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %462, %Array_ClassMethod____sl__.exit ]
  %current_vtable_index.0671 = phi i64 [ %6, %for.body.lr.ph ], [ %current_vtable_index.1, %Array_ClassMethod____sl__.exit ]
  %i.0670 = phi i64 [ 0, %for.body.lr.ph ], [ %461, %Array_ClassMethod____sl__.exit ]
  %memberidx.i = getelementptr inbounds %Array_MethodNode_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0670
  %10 = load ptr, ptr %9, align 8
  %11 = tail call ptr @malloc(i32 66)
  %memberidx.i266 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 7
  store i1 false, ptr %memberidx.i266, align 1
  %12 = load ptr, ptr %10, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 3
  store ptr %13, ptr %memberidx6, align 8
  %14 = load ptr, ptr %memberidx.i267, align 8
  %15 = load i64, ptr %14, align 4
  %16 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %15)
  %memberidx2.i = getelementptr inbounds %Scope, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i267, align 8
  store ptr %17, ptr %memberidx2.i, align 8
  %18 = load ptr, ptr %0, align 8
  %19 = load ptr, ptr %memberidx.i267, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i.i.i, align 8
  %21 = load i64, ptr %19, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %24, i64 0, i32 7
  %25 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %19, i64 0, i32 1
  %26 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  %29 = load ptr, ptr %28, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %29, i64 0, i32 7
  %30 = load ptr, ptr %memberidx4.i, align 8
  %31 = load ptr, ptr %16, align 8
  %memberidx.i.i = getelementptr inbounds %Array_ScopeId_, ptr %30, i64 0, i32 2
  %32 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %30, i64 0, i32 3
  %33 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i = icmp slt i64 %32, %33
  br i1 %.not.i.i, label %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i

for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %for.body
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %30, i64 0, i32 1
  %.pre700 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i:                                     ; preds = %for.body
  %34 = shl nuw i64 %33, 1
  store i64 %34, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %30, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %36 = shl i64 %33, 4
  %37 = tail call ptr @realloc(ptr %35, i64 %36)
  store ptr %37, ptr %memberidx2.i.i13.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i
  %38 = phi ptr [ %.pre700, %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %37, %if.entry.i.i ]
  %39 = phi i64 [ %32, %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %40 = add nsw i64 %39, 1
  store i64 %40, ptr %memberidx.i.i, align 4
  %41 = getelementptr inbounds ptr, ptr %38, i64 %39
  store ptr %31, ptr %41, align 8
  %42 = load ptr, ptr %16, align 8
  store ptr %42, ptr %memberidx.i267, align 8
  %memberidx9 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 6
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionArg_, ptr %43, align 8
  %memberidx.i268 = getelementptr inbounds %Array_FunctionArg_, ptr %43, i64 0, i32 2
  store i64 0, ptr %memberidx.i268, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionArg_, ptr %43, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i269 = getelementptr inbounds %Array_FunctionArg_, ptr %43, i64 0, i32 1
  %44 = tail call ptr @malloc(i32 64)
  store ptr %44, ptr %memberidx2.i269, align 8
  store i64 0, ptr %memberidx.i268, align 4
  store ptr %43, ptr %memberidx9, align 8
  %45 = tail call fastcc i1 @is_operator_overload_name(ptr %13)
  br i1 %45, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassMethod____sl__.exit, %for.entry, %TypeChecker_error.exit569, %TypeChecker_error.exit554, %TypeChecker_error.exit535, %TypeChecker_error.exit509, %TypeChecker_error.exit457, %TypeChecker_error.exit436, %TypeChecker_error.exit391, %TypeChecker_error.exit374, %TypeChecker_error.exit335, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %46 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %46, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i.i270 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i.i270, align 8
  %memberidx1.i.i271 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i271, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i, align 4
  %memberidx.i272 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  %48 = load i64, ptr %memberidx.i272, align 4
  %.not.i = icmp eq i64 %48, 8
  br i1 %.not.i, label %ifend.i, label %string___eq__.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx2.i274 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  %49 = load ptr, ptr %memberidx2.i274, align 8
  %50 = tail call i64 @memcmp(ptr %49, ptr nonnull %46, i64 8)
  %51 = icmp eq i64 %50, 0
  br label %string___eq__.exit

string___eq__.exit:                               ; preds = %if.entry, %ifend.i
  %common.ret.op.i = phi i1 [ %51, %ifend.i ], [ false, %if.entry ]
  %52 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %52, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %53 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %53, align 8
  %memberidx.i.i275 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  store ptr %52, ptr %memberidx.i.i275, align 8
  %memberidx1.i.i276 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i276, align 4
  %memberidx2.i.i277 = getelementptr inbounds %string, ptr %53, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i277, align 4
  %54 = load i64, ptr %memberidx.i272, align 4
  %.not.i280 = icmp eq i64 %54, 7
  br i1 %.not.i280, label %ifend.i284, label %string___eq__.exit285

ifend.i284:                                       ; preds = %string___eq__.exit
  %memberidx2.i282 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i282, align 8
  %56 = tail call i64 @memcmp(ptr %55, ptr nonnull %52, i64 7)
  %57 = icmp eq i64 %56, 0
  br label %string___eq__.exit285

string___eq__.exit285:                            ; preds = %string___eq__.exit, %ifend.i284
  %common.ret.op.i281 = phi i1 [ %57, %ifend.i284 ], [ false, %string___eq__.exit ]
  %58 = or i1 %common.ret.op.i, %common.ret.op.i281
  br i1 %58, label %ifend14, label %else13

ifend:                                            ; preds = %ifend22, %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx36 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 6
  %59 = load i1, ptr %memberidx36, align 1
  store i1 %59, ptr %memberidx.i266, align 1
  %memberidx37 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 1
  %memberidx38 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 5
  %60 = load i1, ptr %memberidx38, align 1
  store i1 %60, ptr %memberidx37, align 1
  %memberidx39 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 2
  %memberidx40 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 3
  %61 = load i64, ptr %memberidx40, align 4
  store i64 %61, ptr %memberidx39, align 4
  %memberidx41 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 4
  %memberidx42 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 1
  %62 = load ptr, ptr %memberidx42, align 8
  %memberidx43 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 4
  %63 = load ptr, ptr %memberidx43, align 8
  %64 = load ptr, ptr %memberidx9, align 8
  %65 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %62, ptr %63, ptr %64)
  store ptr %65, ptr %memberidx41, align 8
  %66 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %66, align 8
  %67 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %67, align 8
  %memberidx.i.i286 = getelementptr inbounds %string, ptr %67, i64 0, i32 1
  store ptr %66, ptr %memberidx.i.i286, align 8
  %memberidx1.i.i287 = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i287, align 4
  %memberidx2.i.i288 = getelementptr inbounds %string, ptr %67, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i288, align 4
  %memberidx.i289 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  %68 = load i64, ptr %memberidx.i289, align 4
  %.not.i291 = icmp eq i64 %68, 8
  br i1 %.not.i291, label %ifend.i295, label %ifend47

ifend.i295:                                       ; preds = %ifend
  %memberidx2.i293 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i293, align 8
  %70 = tail call i64 @memcmp(ptr %69, ptr nonnull %66, i64 8)
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %if.entry45, label %ifend47

else13:                                           ; preds = %string___eq__.exit285
  %72 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %72, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %73 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i.i297 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i.i297, align 8
  %memberidx1.i.i298 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i298, align 4
  %memberidx2.i.i299 = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i299, align 4
  %74 = load i64, ptr %memberidx.i272, align 4
  %.not.i302 = icmp eq i64 %74, 11
  br i1 %.not.i302, label %string___eq__.exit307, label %ifend14

string___eq__.exit307:                            ; preds = %else13
  %memberidx2.i304 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  %75 = load ptr, ptr %memberidx2.i304, align 8
  %76 = tail call i64 @memcmp(ptr %75, ptr nonnull %72, i64 11)
  %.fr = freeze i64 %76
  %77 = icmp eq i64 %.fr, 0
  %spec.select = select i1 %77, i64 2, i64 1
  br label %ifend14

ifend14:                                          ; preds = %string___eq__.exit307, %else13, %string___eq__.exit285
  %args_num.0 = phi i64 [ 0, %string___eq__.exit285 ], [ 1, %else13 ], [ %spec.select, %string___eq__.exit307 ]
  %memberidx18 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 1
  %78 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Array_ArgNode_, ptr %78, i64 0, i32 2
  %79 = load i64, ptr %memberidx19, align 4
  %.not265 = icmp eq i64 %79, %args_num.0
  br i1 %.not265, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %80 = load ptr, ptr %13, align 8
  %memberidx23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx23, align 8
  %82 = tail call ptr %81(ptr nonnull %13)
  %83 = load ptr, ptr %memberidx18, align 8
  %memberidx25 = getelementptr inbounds %Array_ArgNode_, ptr %83, i64 0, i32 2
  %84 = load i64, ptr %memberidx25, align 4
  %85 = alloca ptr, align 8
  %86 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %85, ptr nonnull @142, i64 %args_num.0, ptr %82, i64 %84)
  %87 = load ptr, ptr %85, align 8
  %88 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %88, align 8
  %memberidx.i308 = getelementptr inbounds %string, ptr %88, i64 0, i32 1
  store ptr %87, ptr %memberidx.i308, align 8
  %memberidx1.i309 = getelementptr inbounds %string, ptr %88, i64 0, i32 2
  store i64 %86, ptr %memberidx1.i309, align 4
  %memberidx2.i310 = getelementptr inbounds %string, ptr %88, i64 0, i32 3
  store i64 %86, ptr %memberidx2.i310, align 4
  tail call void @free(ptr %82)
  %89 = load ptr, ptr %10, align 8
  %memberidx27 = getelementptr inbounds %Token, ptr %89, i64 0, i32 1
  %90 = load ptr, ptr %memberidx27, align 8
  %memberidx.i311 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %91 = load ptr, ptr %memberidx.i311, align 8
  %memberidx1.i312 = getelementptr inbounds %Compiler, ptr %91, i64 0, i32 6
  %92 = load ptr, ptr %memberidx1.i312, align 8
  %93 = call ptr @malloc(i32 24)
  store i64 4, ptr %93, align 4
  %memberidx1.i.i313 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 2
  store ptr %90, ptr %memberidx1.i.i313, align 8
  %memberidx2.i.i314 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 1
  store ptr %88, ptr %memberidx2.i.i314, align 8
  %memberidx.i.i315 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i.i315, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 3
  %95 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i316 = icmp slt i64 %94, %95
  br i1 %.not.i.i316, label %if.entry20.TypeChecker_error.exit_crit_edge, label %if.entry.i.i319

if.entry20.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry20
  %memberidx4.i.i320.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %.pre702 = load ptr, ptr %memberidx4.i.i320.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i319:                                  ; preds = %if.entry20
  %96 = shl nuw i64 %95, 1
  store i64 %96, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i318 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %97 = load ptr, ptr %memberidx2.i.i.i318, align 8
  %98 = shl i64 %95, 4
  %99 = call ptr @realloc(ptr %97, i64 %98)
  store ptr %99, ptr %memberidx2.i.i.i318, align 8
  %.pre701 = load i64, ptr %memberidx.i.i315, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry20.TypeChecker_error.exit_crit_edge, %if.entry.i.i319
  %100 = phi ptr [ %.pre702, %if.entry20.TypeChecker_error.exit_crit_edge ], [ %99, %if.entry.i.i319 ]
  %101 = phi i64 [ %94, %if.entry20.TypeChecker_error.exit_crit_edge ], [ %.pre701, %if.entry.i.i319 ]
  %102 = add nsw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i315, align 4
  %103 = getelementptr inbounds ptr, ptr %100, i64 %101
  store ptr %93, ptr %103, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %memberidx28 = getelementptr inbounds %MethodNode, ptr %10, i64 0, i32 5
  %104 = load i1, ptr %memberidx28, align 1
  br i1 %104, label %if.entry29, label %ifend

if.entry29:                                       ; preds = %ifend22
  %105 = load ptr, ptr %13, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx32, align 8
  %107 = tail call ptr %106(ptr nonnull %13)
  %108 = alloca ptr, align 8
  %109 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %108, ptr nonnull @143, ptr %107)
  %110 = load ptr, ptr %108, align 8
  %111 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %111, align 8
  %memberidx.i321 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  store ptr %110, ptr %memberidx.i321, align 8
  %memberidx1.i322 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  store i64 %109, ptr %memberidx1.i322, align 4
  %memberidx2.i323 = getelementptr inbounds %string, ptr %111, i64 0, i32 3
  store i64 %109, ptr %memberidx2.i323, align 4
  tail call void @free(ptr %107)
  %112 = load ptr, ptr %10, align 8
  %memberidx34 = getelementptr inbounds %Token, ptr %112, i64 0, i32 1
  %113 = load ptr, ptr %memberidx34, align 8
  %memberidx.i324 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %114 = load ptr, ptr %memberidx.i324, align 8
  %memberidx1.i325 = getelementptr inbounds %Compiler, ptr %114, i64 0, i32 6
  %115 = load ptr, ptr %memberidx1.i325, align 8
  %116 = call ptr @malloc(i32 24)
  store i64 4, ptr %116, align 4
  %memberidx1.i.i326 = getelementptr inbounds %FloError, ptr %116, i64 0, i32 2
  store ptr %113, ptr %memberidx1.i.i326, align 8
  %memberidx2.i.i327 = getelementptr inbounds %FloError, ptr %116, i64 0, i32 1
  store ptr %111, ptr %memberidx2.i.i327, align 8
  %memberidx.i.i328 = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 2
  %117 = load i64, ptr %memberidx.i.i328, align 4
  %memberidx1.i2.i329 = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 3
  %118 = load i64, ptr %memberidx1.i2.i329, align 4
  %.not.i.i330 = icmp slt i64 %117, %118
  br i1 %.not.i.i330, label %if.entry29.TypeChecker_error.exit335_crit_edge, label %if.entry.i.i333

if.entry29.TypeChecker_error.exit335_crit_edge:   ; preds = %if.entry29
  %memberidx4.i.i334.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 1
  %.pre737 = load ptr, ptr %memberidx4.i.i334.phi.trans.insert, align 8
  br label %TypeChecker_error.exit335

if.entry.i.i333:                                  ; preds = %if.entry29
  %119 = shl nuw i64 %118, 1
  store i64 %119, ptr %memberidx1.i2.i329, align 4
  %memberidx2.i.i.i332 = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 1
  %120 = load ptr, ptr %memberidx2.i.i.i332, align 8
  %121 = shl i64 %118, 4
  %122 = call ptr @realloc(ptr %120, i64 %121)
  store ptr %122, ptr %memberidx2.i.i.i332, align 8
  %.pre736 = load i64, ptr %memberidx.i.i328, align 4
  br label %TypeChecker_error.exit335

TypeChecker_error.exit335:                        ; preds = %if.entry29.TypeChecker_error.exit335_crit_edge, %if.entry.i.i333
  %123 = phi ptr [ %.pre737, %if.entry29.TypeChecker_error.exit335_crit_edge ], [ %122, %if.entry.i.i333 ]
  %124 = phi i64 [ %117, %if.entry29.TypeChecker_error.exit335_crit_edge ], [ %.pre736, %if.entry.i.i333 ]
  %125 = add nsw i64 %124, 1
  store i64 %125, ptr %memberidx.i.i328, align 4
  %126 = getelementptr inbounds ptr, ptr %123, i64 %124
  store ptr %116, ptr %126, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend.i295
  %127 = load ptr, ptr %memberidx41, align 8
  %memberidx49 = getelementptr inbounds %FunctionType, ptr %127, i64 0, i32 2
  %128 = load ptr, ptr %memberidx49, align 8
  %129 = load i64, ptr %128, align 4
  %130 = icmp eq i64 %129, 20
  br i1 %130, label %if.entry.i617, label %is_object.exit

if.entry.i617:                                    ; preds = %if.entry45, %if.entry.i617
  %.tr5.i = phi ptr [ %131, %if.entry.i617 ], [ %128, %if.entry45 ]
  %memberidx1.i616 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %131 = load ptr, ptr %memberidx1.i616, align 8
  %132 = load i64, ptr %131, align 4
  %133 = icmp eq i64 %132, 20
  br i1 %133, label %if.entry.i617, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i617, %if.entry45
  %.lcssa.i = phi i64 [ %129, %if.entry45 ], [ %132, %if.entry.i617 ]
  %134 = icmp eq i64 %.lcssa.i, 11
  br i1 %134, label %ifend.i342, label %if.entry50

ifend.i342:                                       ; preds = %is_object.exit
  %135 = load ptr, ptr %0, align 8
  br label %tailrecurse.i620

tailrecurse.i620:                                 ; preds = %if.entry.i623, %ifend.i342
  %136 = phi i64 [ %129, %ifend.i342 ], [ %.pre703, %if.entry.i623 ]
  %.tr11.i619 = phi ptr [ %128, %ifend.i342 ], [ %137, %if.entry.i623 ]
  switch i64 %136, label %get_class_from_type.exit631 [
    i64 20, label %if.entry.i623
    i64 11, label %if.entry3.i630
  ]

if.entry.i623:                                    ; preds = %tailrecurse.i620
  %memberidx1.i622 = getelementptr inbounds %GenericType, ptr %.tr11.i619, i64 0, i32 3
  %137 = load ptr, ptr %memberidx1.i622, align 8
  %.pre703 = load i64, ptr %137, align 4
  br label %tailrecurse.i620

if.entry3.i630:                                   ; preds = %tailrecurse.i620
  %memberidx6.i624 = getelementptr inbounds %ObjectType, ptr %.tr11.i619, i64 0, i32 1
  %138 = load ptr, ptr %memberidx6.i624, align 8
  %memberidx.i.i625 = getelementptr inbounds %Program, ptr %135, i64 0, i32 1
  %139 = load ptr, ptr %memberidx.i.i625, align 8
  %140 = load i64, ptr %138, align 4
  %memberidx.i.i.i626 = getelementptr inbounds %Array_Module_, ptr %139, i64 0, i32 1
  %141 = load ptr, ptr %memberidx.i.i.i626, align 8
  %142 = getelementptr inbounds ptr, ptr %141, i64 %140
  %143 = load ptr, ptr %142, align 8
  %memberidx2.i.i627 = getelementptr inbounds %Module, ptr %143, i64 0, i32 3
  %144 = load ptr, ptr %memberidx2.i.i627, align 8
  %memberidx3.i.i628 = getelementptr inbounds %TypeId, ptr %138, i64 0, i32 2
  %145 = load i64, ptr %memberidx3.i.i628, align 4
  %memberidx.i5.i.i629 = getelementptr inbounds %Array_Class_, ptr %144, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i5.i.i629, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  br label %get_class_from_type.exit631

get_class_from_type.exit631:                      ; preds = %tailrecurse.i620, %if.entry3.i630
  %common.ret.op.i621 = phi ptr [ %148, %if.entry3.i630 ], [ null, %tailrecurse.i620 ]
  %memberidx1.i337 = getelementptr inbounds %Class, ptr %common.ret.op.i621, i64 0, i32 6
  %149 = load ptr, ptr %memberidx1.i337, align 8
  %150 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %150, align 8
  %151 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %151, align 8
  %memberidx.i.i.i338 = getelementptr inbounds %string, ptr %151, i64 0, i32 1
  store ptr %150, ptr %memberidx.i.i.i338, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %151, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i339 = getelementptr inbounds %string, ptr %151, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i339, align 4
  %152 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %151)
  %memberidx.i.i340 = getelementptr inbounds %Map_string_PropId_, ptr %149, i64 0, i32 1
  %153 = load i64, ptr %memberidx.i.i340, align 4
  %154 = urem i64 %152, %153
  %155 = load ptr, ptr %149, align 8
  %156 = getelementptr inbounds ptr, ptr %155, i64 %154
  %157 = load ptr, ptr %156, align 8
  %.not.i.i341 = icmp eq ptr %157, null
  br i1 %.not.i.i341, label %if.entry50, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %get_class_from_type.exit631, %else.i.i
  %158 = phi ptr [ %168, %else.i.i ], [ %155, %get_class_from_type.exit631 ]
  %159 = phi i64 [ %169, %else.i.i ], [ %153, %get_class_from_type.exit631 ]
  %160 = phi ptr [ %173, %else.i.i ], [ %157, %get_class_from_type.exit631 ]
  %hash.0.i.i = phi i64 [ %171, %else.i.i ], [ %154, %get_class_from_type.exit631 ]
  %161 = load ptr, ptr %160, align 8
  %memberidx.i.i33.i = getelementptr inbounds %string, ptr %161, i64 0, i32 2
  %162 = load i64, ptr %memberidx.i.i33.i, align 4
  %163 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %162, %163
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i35.i = getelementptr inbounds %string, ptr %161, i64 0, i32 1
  %164 = load ptr, ptr %memberidx2.i.i35.i, align 8
  %165 = load ptr, ptr %memberidx.i.i.i338, align 8
  %166 = tail call i64 @memcmp(ptr %164, ptr %165, i64 %162)
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre704 = load i64, ptr %memberidx.i.i340, align 4
  %.pre705 = load ptr, ptr %149, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre706.pre = load ptr, ptr %149, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre706.pre, i64 %hash.0.i.i
  %.pre707.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre707.pre, null
  br i1 %.not25.i.i, label %if.entry50, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %168 = phi ptr [ %.pre705, %ifend.i.i.i.else.i.i_crit_edge ], [ %158, %while.entry.i.i ]
  %169 = phi i64 [ %.pre704, %ifend.i.i.i.else.i.i_crit_edge ], [ %159, %while.entry.i.i ]
  %170 = add nuw i64 %hash.0.i.i, 1
  %171 = urem i64 %170, %169
  %172 = getelementptr inbounds ptr, ptr %168, i64 %171
  %173 = load ptr, ptr %172, align 8
  %.not26.i.i = icmp eq ptr %173, null
  br i1 %.not26.i.i, label %if.entry50, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre707.pre, i64 0, i32 1
  %174 = load ptr, ptr %memberidx11.i.i, align 8
  %175 = icmp eq ptr %174, null
  br i1 %175, label %if.entry50, label %ifend4.i

ifend4.i:                                         ; preds = %Map_string_PropId____getitem__.exit.i
  %176 = load ptr, ptr %0, align 8
  %memberidx.i.i36.i = getelementptr inbounds %PropId, ptr %174, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i.i36.i, align 8
  %memberidx.i.i.i.i344 = getelementptr inbounds %Program, ptr %176, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i.i.i.i344, align 8
  %179 = load i64, ptr %177, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %178, i64 0, i32 1
  %180 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %181 = getelementptr inbounds ptr, ptr %180, i64 %179
  %182 = load ptr, ptr %181, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %182, i64 0, i32 3
  %183 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %177, i64 0, i32 2
  %184 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %183, i64 0, i32 1
  %185 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %186 = getelementptr inbounds ptr, ptr %185, i64 %184
  %187 = load ptr, ptr %186, align 8
  %188 = load i64, ptr %174, align 4
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %if.entry.i.i347, label %ifend.i.i

if.entry.i.i347:                                  ; preds = %ifend4.i
  %memberidx1.i.i345 = getelementptr inbounds %Class, ptr %187, i64 0, i32 5
  %190 = load ptr, ptr %memberidx1.i.i345, align 8
  %memberidx2.i.i346 = getelementptr inbounds %PropId, ptr %174, i64 0, i32 2
  %191 = load i64, ptr %memberidx2.i.i346, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %190, i64 0, i32 1
  %192 = load ptr, ptr %memberidx.i12.i.i, align 8
  %193 = getelementptr inbounds ptr, ptr %192, i64 %191
  %194 = load ptr, ptr %193, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %194, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend4.i
  %memberidx4.i.i348 = getelementptr inbounds %Class, ptr %187, i64 0, i32 4
  %195 = load ptr, ptr %memberidx4.i.i348, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %174, i64 0, i32 2
  %196 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 1
  %197 = load ptr, ptr %memberidx.i11.i.i, align 8
  %198 = getelementptr inbounds ptr, ptr %197, i64 %196
  %199 = load ptr, ptr %198, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %199, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i347
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i347 ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i37.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %200 = load i64, ptr %common.ret.op.i37.i, align 4
  %.not.i349 = icmp eq i64 %200, 0
  br i1 %.not.i349, label %ifend9.i, label %if.entry50

ifend9.i:                                         ; preds = %get_class_prop_type.exit.i
  %201 = load ptr, ptr %memberidx1.i337, align 8
  %202 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %202, align 8
  %203 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %203, align 8
  %memberidx.i.i38.i = getelementptr inbounds %string, ptr %203, i64 0, i32 1
  store ptr %202, ptr %memberidx.i.i38.i, align 8
  %memberidx1.i.i39.i = getelementptr inbounds %string, ptr %203, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i39.i, align 4
  %memberidx2.i.i40.i = getelementptr inbounds %string, ptr %203, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i40.i, align 4
  %204 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %203)
  %memberidx.i41.i = getelementptr inbounds %Map_string_PropId_, ptr %201, i64 0, i32 1
  %205 = load i64, ptr %memberidx.i41.i, align 4
  %206 = urem i64 %204, %205
  %207 = load ptr, ptr %201, align 8
  %208 = getelementptr inbounds ptr, ptr %207, i64 %206
  %209 = load ptr, ptr %208, align 8
  %.not.i42.i = icmp eq ptr %209, null
  br i1 %.not.i42.i, label %if.entry50, label %while.entry.i47.i

while.entry.i47.i:                                ; preds = %ifend9.i, %else.i57.i
  %210 = phi ptr [ %220, %else.i57.i ], [ %207, %ifend9.i ]
  %211 = phi i64 [ %221, %else.i57.i ], [ %205, %ifend9.i ]
  %212 = phi ptr [ %225, %else.i57.i ], [ %209, %ifend9.i ]
  %hash.0.i43.i = phi i64 [ %223, %else.i57.i ], [ %206, %ifend9.i ]
  %213 = load ptr, ptr %212, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %213, i64 0, i32 2
  %214 = load i64, ptr %memberidx.i.i44.i, align 4
  %215 = load i64, ptr %memberidx1.i.i39.i, align 4
  %.not.i.i46.i = icmp eq i64 %214, %215
  br i1 %.not.i.i46.i, label %ifend.i.i50.i, label %else.i57.i

ifend.i.i50.i:                                    ; preds = %while.entry.i47.i
  %memberidx2.i.i48.i = getelementptr inbounds %string, ptr %213, i64 0, i32 1
  %216 = load ptr, ptr %memberidx2.i.i48.i, align 8
  %217 = load ptr, ptr %memberidx.i.i38.i, align 8
  %218 = tail call i64 @memcmp(ptr %216, ptr %217, i64 %214)
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %while.end.i55.i, label %ifend.i.i50.i.else.i57.i_crit_edge

ifend.i.i50.i.else.i57.i_crit_edge:               ; preds = %ifend.i.i50.i
  %.pre708 = load i64, ptr %memberidx.i41.i, align 4
  %.pre709 = load ptr, ptr %201, align 8
  br label %else.i57.i

while.end.i55.i:                                  ; preds = %ifend.i.i50.i
  %.pre710.pre = load ptr, ptr %201, align 8
  %.phi.trans.insert711.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre710.pre, i64 %hash.0.i43.i
  %.pre712.pre = load ptr, ptr %.phi.trans.insert711.phi.trans.insert, align 8
  %.not25.i54.i = icmp eq ptr %.pre712.pre, null
  br i1 %.not25.i54.i, label %if.entry50, label %Map_string_PropId____getitem__.exit61.i

else.i57.i:                                       ; preds = %ifend.i.i50.i.else.i57.i_crit_edge, %while.entry.i47.i
  %220 = phi ptr [ %.pre709, %ifend.i.i50.i.else.i57.i_crit_edge ], [ %210, %while.entry.i47.i ]
  %221 = phi i64 [ %.pre708, %ifend.i.i50.i.else.i57.i_crit_edge ], [ %211, %while.entry.i47.i ]
  %222 = add nuw i64 %hash.0.i43.i, 1
  %223 = urem i64 %222, %221
  %224 = getelementptr inbounds ptr, ptr %220, i64 %223
  %225 = load ptr, ptr %224, align 8
  %.not26.i56.i = icmp eq ptr %225, null
  br i1 %.not26.i56.i, label %if.entry50, label %while.entry.i47.i

Map_string_PropId____getitem__.exit61.i:          ; preds = %while.end.i55.i
  %memberidx11.i59.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre712.pre, i64 0, i32 1
  %226 = load ptr, ptr %memberidx11.i59.i, align 8
  %227 = icmp eq ptr %226, null
  br i1 %227, label %if.entry50, label %ifend13.i

ifend13.i:                                        ; preds = %Map_string_PropId____getitem__.exit61.i
  %228 = load ptr, ptr %0, align 8
  %memberidx.i.i62.i = getelementptr inbounds %PropId, ptr %226, i64 0, i32 1
  %229 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx.i.i.i63.i = getelementptr inbounds %Program, ptr %228, i64 0, i32 1
  %230 = load ptr, ptr %memberidx.i.i.i63.i, align 8
  %231 = load i64, ptr %229, align 4
  %memberidx.i.i.i.i64.i = getelementptr inbounds %Array_Module_, ptr %230, i64 0, i32 1
  %232 = load ptr, ptr %memberidx.i.i.i.i64.i, align 8
  %233 = getelementptr inbounds ptr, ptr %232, i64 %231
  %234 = load ptr, ptr %233, align 8
  %memberidx2.i.i.i65.i = getelementptr inbounds %Module, ptr %234, i64 0, i32 3
  %235 = load ptr, ptr %memberidx2.i.i.i65.i, align 8
  %memberidx3.i.i.i66.i = getelementptr inbounds %TypeId, ptr %229, i64 0, i32 2
  %236 = load i64, ptr %memberidx3.i.i.i66.i, align 4
  %memberidx.i5.i.i.i67.i = getelementptr inbounds %Array_Class_, ptr %235, i64 0, i32 1
  %237 = load ptr, ptr %memberidx.i5.i.i.i67.i, align 8
  %238 = getelementptr inbounds ptr, ptr %237, i64 %236
  %239 = load ptr, ptr %238, align 8
  %240 = load i64, ptr %226, align 4
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %if.entry.i74.i, label %ifend.i79.i

if.entry.i74.i:                                   ; preds = %ifend13.i
  %memberidx1.i70.i = getelementptr inbounds %Class, ptr %239, i64 0, i32 5
  %242 = load ptr, ptr %memberidx1.i70.i, align 8
  %memberidx2.i71.i = getelementptr inbounds %PropId, ptr %226, i64 0, i32 2
  %243 = load i64, ptr %memberidx2.i71.i, align 4
  %memberidx.i12.i72.i = getelementptr inbounds %Array_ClassMethod_, ptr %242, i64 0, i32 1
  %244 = load ptr, ptr %memberidx.i12.i72.i, align 8
  %245 = getelementptr inbounds ptr, ptr %244, i64 %243
  %246 = load ptr, ptr %245, align 8
  %memberidx3.i73.i = getelementptr inbounds %ClassMethod, ptr %246, i64 0, i32 4
  br label %get_class_prop_type.exit80.i

ifend.i79.i:                                      ; preds = %ifend13.i
  %memberidx4.i75.i = getelementptr inbounds %Class, ptr %239, i64 0, i32 4
  %247 = load ptr, ptr %memberidx4.i75.i, align 8
  %memberidx5.i76.i = getelementptr inbounds %PropId, ptr %226, i64 0, i32 2
  %248 = load i64, ptr %memberidx5.i76.i, align 4
  %memberidx.i11.i77.i = getelementptr inbounds %Array_ClassField_, ptr %247, i64 0, i32 1
  %249 = load ptr, ptr %memberidx.i11.i77.i, align 8
  %250 = getelementptr inbounds ptr, ptr %249, i64 %248
  %251 = load ptr, ptr %250, align 8
  %memberidx6.i78.i = getelementptr inbounds %ClassField, ptr %251, i64 0, i32 4
  br label %get_class_prop_type.exit80.i

get_class_prop_type.exit80.i:                     ; preds = %ifend.i79.i, %if.entry.i74.i
  %common.ret.op.in.i68.i = phi ptr [ %memberidx3.i73.i, %if.entry.i74.i ], [ %memberidx6.i78.i, %ifend.i79.i ]
  %common.ret.op.i69.i = load ptr, ptr %common.ret.op.in.i68.i, align 8
  %252 = load i64, ptr %common.ret.op.i69.i, align 4
  %.not31.i = icmp eq i64 %252, 16
  br i1 %.not31.i, label %ifend18.i, label %if.entry50

ifend18.i:                                        ; preds = %get_class_prop_type.exit80.i
  %memberidx19.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i69.i, i64 0, i32 1
  %253 = load ptr, ptr %memberidx19.i, align 8
  %memberidx20.i = getelementptr inbounds %Array_Type_, ptr %253, i64 0, i32 2
  %254 = load i64, ptr %memberidx20.i, align 4
  %.not32.i = icmp eq i64 %254, 0
  br i1 %.not32.i, label %ifend47, label %if.entry50

ifend47:                                          ; preds = %ifend, %ifend18.i, %ifend.i295
  %255 = load ptr, ptr %memberidx55, align 8
  %256 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %13)
  %memberidx.i350 = getelementptr inbounds %Map_string_PropId_, ptr %255, i64 0, i32 1
  %257 = load i64, ptr %memberidx.i350, align 4
  %258 = urem i64 %256, %257
  %259 = load ptr, ptr %255, align 8
  %260 = getelementptr inbounds ptr, ptr %259, i64 %258
  %261 = load ptr, ptr %260, align 8
  %.not.i351 = icmp eq ptr %261, null
  br i1 %.not.i351, label %else57, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend47
  %memberidx3.i.i356 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %262 = phi ptr [ %272, %else.i ], [ %259, %while.entry.i.preheader ]
  %263 = phi i64 [ %273, %else.i ], [ %257, %while.entry.i.preheader ]
  %264 = phi ptr [ %277, %else.i ], [ %261, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %275, %else.i ], [ %258, %while.entry.i.preheader ]
  %265 = load ptr, ptr %264, align 8
  %memberidx.i.i352 = getelementptr inbounds %string, ptr %265, i64 0, i32 2
  %266 = load i64, ptr %memberidx.i.i352, align 4
  %267 = load i64, ptr %memberidx.i289, align 4
  %.not.i.i354 = icmp eq i64 %266, %267
  br i1 %.not.i.i354, label %ifend.i.i357, label %else.i

ifend.i.i357:                                     ; preds = %while.entry.i
  %memberidx2.i.i355 = getelementptr inbounds %string, ptr %265, i64 0, i32 1
  %268 = load ptr, ptr %memberidx2.i.i355, align 8
  %269 = load ptr, ptr %memberidx3.i.i356, align 8
  %270 = tail call i64 @memcmp(ptr %268, ptr %269, i64 %266)
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %while.end.i, label %ifend.i.i357.else.i_crit_edge

ifend.i.i357.else.i_crit_edge:                    ; preds = %ifend.i.i357
  %.pre713 = load i64, ptr %memberidx.i350, align 4
  %.pre714 = load ptr, ptr %255, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i357
  %.pre715.pre = load ptr, ptr %255, align 8
  %.phi.trans.insert716.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre715.pre, i64 %hash.0.i
  %.pre717.pre = load ptr, ptr %.phi.trans.insert716.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre717.pre, null
  br i1 %.not25.i, label %else57, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i357.else.i_crit_edge, %while.entry.i
  %272 = phi ptr [ %.pre714, %ifend.i.i357.else.i_crit_edge ], [ %262, %while.entry.i ]
  %273 = phi i64 [ %.pre713, %ifend.i.i357.else.i_crit_edge ], [ %263, %while.entry.i ]
  %274 = add nuw i64 %hash.0.i, 1
  %275 = urem i64 %274, %273
  %276 = getelementptr inbounds ptr, ptr %272, i64 %275
  %277 = load ptr, ptr %276, align 8
  %.not26.i = icmp eq ptr %277, null
  br i1 %.not26.i, label %else57, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre717.pre, i64 0, i32 1
  %278 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %278, null
  br i1 %.not, label %else57, label %if.entry56

if.entry50:                                       ; preds = %ifend9.i, %get_class_from_type.exit631, %while.end.i55.i, %while.end.i.i, %is_object.exit, %Map_string_PropId____getitem__.exit.i, %get_class_prop_type.exit.i, %Map_string_PropId____getitem__.exit61.i, %get_class_prop_type.exit80.i, %ifend18.i, %else.i.i, %else.i57.i
  %279 = tail call ptr @malloc(i32 74)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(74) %279, ptr noundef nonnull align 8 dereferenceable(74) @144, i64 74, i1 false)
  %280 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %280, align 8
  %memberidx.i.i360 = getelementptr inbounds %string, ptr %280, i64 0, i32 1
  store ptr %279, ptr %memberidx.i.i360, align 8
  %memberidx1.i.i361 = getelementptr inbounds %string, ptr %280, i64 0, i32 2
  store i64 74, ptr %memberidx1.i.i361, align 4
  %memberidx2.i.i362 = getelementptr inbounds %string, ptr %280, i64 0, i32 3
  store i64 74, ptr %memberidx2.i.i362, align 4
  %281 = load ptr, ptr %10, align 8
  %memberidx54 = getelementptr inbounds %Token, ptr %281, i64 0, i32 1
  %282 = load ptr, ptr %memberidx54, align 8
  %memberidx.i363 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %283 = load ptr, ptr %memberidx.i363, align 8
  %memberidx1.i364 = getelementptr inbounds %Compiler, ptr %283, i64 0, i32 6
  %284 = load ptr, ptr %memberidx1.i364, align 8
  %285 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %285, align 4
  %memberidx1.i.i365 = getelementptr inbounds %FloError, ptr %285, i64 0, i32 2
  store ptr %282, ptr %memberidx1.i.i365, align 8
  %memberidx2.i.i366 = getelementptr inbounds %FloError, ptr %285, i64 0, i32 1
  store ptr %280, ptr %memberidx2.i.i366, align 8
  %memberidx.i.i367 = getelementptr inbounds %Array_FloError_, ptr %284, i64 0, i32 2
  %286 = load i64, ptr %memberidx.i.i367, align 4
  %memberidx1.i2.i368 = getelementptr inbounds %Array_FloError_, ptr %284, i64 0, i32 3
  %287 = load i64, ptr %memberidx1.i2.i368, align 4
  %.not.i.i369 = icmp slt i64 %286, %287
  br i1 %.not.i.i369, label %if.entry50.TypeChecker_error.exit374_crit_edge, label %if.entry.i.i372

if.entry50.TypeChecker_error.exit374_crit_edge:   ; preds = %if.entry50
  %memberidx4.i.i373.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %284, i64 0, i32 1
  %.pre735 = load ptr, ptr %memberidx4.i.i373.phi.trans.insert, align 8
  br label %TypeChecker_error.exit374

if.entry.i.i372:                                  ; preds = %if.entry50
  %288 = shl nuw i64 %287, 1
  store i64 %288, ptr %memberidx1.i2.i368, align 4
  %memberidx2.i.i.i371 = getelementptr inbounds %Array_FloError_, ptr %284, i64 0, i32 1
  %289 = load ptr, ptr %memberidx2.i.i.i371, align 8
  %290 = shl i64 %287, 4
  %291 = tail call ptr @realloc(ptr %289, i64 %290)
  store ptr %291, ptr %memberidx2.i.i.i371, align 8
  %.pre734 = load i64, ptr %memberidx.i.i367, align 4
  br label %TypeChecker_error.exit374

TypeChecker_error.exit374:                        ; preds = %if.entry50.TypeChecker_error.exit374_crit_edge, %if.entry.i.i372
  %292 = phi ptr [ %.pre735, %if.entry50.TypeChecker_error.exit374_crit_edge ], [ %291, %if.entry.i.i372 ]
  %293 = phi i64 [ %286, %if.entry50.TypeChecker_error.exit374_crit_edge ], [ %.pre734, %if.entry.i.i372 ]
  %294 = add nsw i64 %293, 1
  store i64 %294, ptr %memberidx.i.i367, align 4
  %295 = getelementptr inbounds ptr, ptr %292, i64 %293
  store ptr %285, ptr %295, align 8
  br label %common.ret

if.entry56:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx59 = getelementptr inbounds %PropId, ptr %278, i64 0, i32 1
  %296 = load ptr, ptr %memberidx59, align 8
  %297 = load ptr, ptr %1, align 8
  %298 = icmp eq ptr %296, %297
  br i1 %298, label %if.entry61, label %ifend63

else57:                                           ; preds = %else.i, %ifend47, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx93 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 9
  store i64 %current_vtable_index.0671, ptr %memberidx93, align 4
  br label %ifend58

ifend58:                                          ; preds = %else57, %get_vtable_index.exit
  %299 = tail call ptr @malloc(i32 24)
  %300 = load ptr, ptr %1, align 8
  store i64 0, ptr %299, align 4
  %memberidx1.i375 = getelementptr inbounds %PropId, ptr %299, i64 0, i32 1
  store ptr %300, ptr %memberidx1.i375, align 8
  %memberidx2.i376 = getelementptr inbounds %PropId, ptr %299, i64 0, i32 2
  store i64 %i.0670, ptr %memberidx2.i376, align 4
  store ptr %299, ptr %11, align 8
  %301 = load i1, ptr %memberidx38, align 1
  br i1 %301, label %if.entry97, label %else98

if.entry61:                                       ; preds = %if.entry56
  %302 = load ptr, ptr %13, align 8
  %memberidx64 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %302, i64 0, i32 5
  %303 = load ptr, ptr %memberidx64, align 8
  %304 = tail call ptr %303(ptr nonnull %13)
  %memberidx65 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %305 = load ptr, ptr %memberidx65, align 8
  %306 = load ptr, ptr %305, align 8
  %memberidx66 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %306, i64 0, i32 5
  %307 = load ptr, ptr %memberidx66, align 8
  %308 = tail call ptr %307(ptr nonnull %305)
  %309 = alloca ptr, align 8
  %310 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %309, ptr nonnull @145, ptr %304, ptr %308)
  %311 = load ptr, ptr %309, align 8
  %312 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %312, align 8
  %memberidx.i377 = getelementptr inbounds %string, ptr %312, i64 0, i32 1
  store ptr %311, ptr %memberidx.i377, align 8
  %memberidx1.i378 = getelementptr inbounds %string, ptr %312, i64 0, i32 2
  store i64 %310, ptr %memberidx1.i378, align 4
  %memberidx2.i379 = getelementptr inbounds %string, ptr %312, i64 0, i32 3
  store i64 %310, ptr %memberidx2.i379, align 4
  tail call void @free(ptr %304)
  tail call void @free(ptr %308)
  %313 = load ptr, ptr %10, align 8
  %memberidx68 = getelementptr inbounds %Token, ptr %313, i64 0, i32 1
  %314 = load ptr, ptr %memberidx68, align 8
  %memberidx.i380 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %315 = load ptr, ptr %memberidx.i380, align 8
  %memberidx1.i381 = getelementptr inbounds %Compiler, ptr %315, i64 0, i32 6
  %316 = load ptr, ptr %memberidx1.i381, align 8
  %317 = call ptr @malloc(i32 24)
  store i64 1, ptr %317, align 4
  %memberidx1.i.i382 = getelementptr inbounds %FloError, ptr %317, i64 0, i32 2
  store ptr %314, ptr %memberidx1.i.i382, align 8
  %memberidx2.i.i383 = getelementptr inbounds %FloError, ptr %317, i64 0, i32 1
  store ptr %312, ptr %memberidx2.i.i383, align 8
  %memberidx.i.i384 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 2
  %318 = load i64, ptr %memberidx.i.i384, align 4
  %memberidx1.i2.i385 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 3
  %319 = load i64, ptr %memberidx1.i2.i385, align 4
  %.not.i.i386 = icmp slt i64 %318, %319
  br i1 %.not.i.i386, label %if.entry61.TypeChecker_error.exit391_crit_edge, label %if.entry.i.i389

if.entry61.TypeChecker_error.exit391_crit_edge:   ; preds = %if.entry61
  %memberidx4.i.i390.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 1
  %.pre723 = load ptr, ptr %memberidx4.i.i390.phi.trans.insert, align 8
  br label %TypeChecker_error.exit391

if.entry.i.i389:                                  ; preds = %if.entry61
  %320 = shl nuw i64 %319, 1
  store i64 %320, ptr %memberidx1.i2.i385, align 4
  %memberidx2.i.i.i388 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 1
  %321 = load ptr, ptr %memberidx2.i.i.i388, align 8
  %322 = shl i64 %319, 4
  %323 = call ptr @realloc(ptr %321, i64 %322)
  store ptr %323, ptr %memberidx2.i.i.i388, align 8
  %.pre722 = load i64, ptr %memberidx.i.i384, align 4
  br label %TypeChecker_error.exit391

TypeChecker_error.exit391:                        ; preds = %if.entry61.TypeChecker_error.exit391_crit_edge, %if.entry.i.i389
  %324 = phi ptr [ %.pre723, %if.entry61.TypeChecker_error.exit391_crit_edge ], [ %323, %if.entry.i.i389 ]
  %325 = phi i64 [ %318, %if.entry61.TypeChecker_error.exit391_crit_edge ], [ %.pre722, %if.entry.i.i389 ]
  %326 = add nsw i64 %325, 1
  store i64 %326, ptr %memberidx.i.i384, align 4
  %327 = getelementptr inbounds ptr, ptr %324, i64 %325
  store ptr %317, ptr %327, align 8
  br label %common.ret

ifend63:                                          ; preds = %if.entry56
  %328 = load ptr, ptr %0, align 8
  %memberidx.i.i.i393 = getelementptr inbounds %Program, ptr %328, i64 0, i32 1
  %329 = load ptr, ptr %memberidx.i.i.i393, align 8
  %330 = load i64, ptr %296, align 4
  %memberidx.i.i.i.i394 = getelementptr inbounds %Array_Module_, ptr %329, i64 0, i32 1
  %331 = load ptr, ptr %memberidx.i.i.i.i394, align 8
  %332 = getelementptr inbounds ptr, ptr %331, i64 %330
  %333 = load ptr, ptr %332, align 8
  %memberidx2.i.i.i395 = getelementptr inbounds %Module, ptr %333, i64 0, i32 3
  %334 = load ptr, ptr %memberidx2.i.i.i395, align 8
  %memberidx3.i.i.i396 = getelementptr inbounds %TypeId, ptr %296, i64 0, i32 2
  %335 = load i64, ptr %memberidx3.i.i.i396, align 4
  %memberidx.i5.i.i.i397 = getelementptr inbounds %Array_Class_, ptr %334, i64 0, i32 1
  %336 = load ptr, ptr %memberidx.i5.i.i.i397, align 8
  %337 = getelementptr inbounds ptr, ptr %336, i64 %335
  %338 = load ptr, ptr %337, align 8
  %339 = load i64, ptr %278, align 4
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %if.entry.i416, label %ifend.i421

if.entry.i416:                                    ; preds = %ifend63
  %memberidx1.i399 = getelementptr inbounds %Class, ptr %338, i64 0, i32 5
  %341 = load ptr, ptr %memberidx1.i399, align 8
  %memberidx2.i400 = getelementptr inbounds %PropId, ptr %278, i64 0, i32 2
  %342 = load i64, ptr %memberidx2.i400, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %341, i64 0, i32 1
  %343 = load ptr, ptr %memberidx.i12.i, align 8
  %344 = getelementptr inbounds ptr, ptr %343, i64 %342
  %345 = load ptr, ptr %344, align 8
  %memberidx3.i401 = getelementptr inbounds %ClassMethod, ptr %345, i64 0, i32 4
  %memberidx3.i415 = getelementptr inbounds %ClassMethod, ptr %345, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i421:                                       ; preds = %ifend63
  %memberidx4.i402 = getelementptr inbounds %Class, ptr %338, i64 0, i32 4
  %346 = load ptr, ptr %memberidx4.i402, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %278, i64 0, i32 2
  %347 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %346, i64 0, i32 1
  %348 = load ptr, ptr %memberidx.i11.i, align 8
  %349 = getelementptr inbounds ptr, ptr %348, i64 %347
  %350 = load ptr, ptr %349, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %350, i64 0, i32 4
  %memberidx6.i420 = getelementptr inbounds %ClassField, ptr %350, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i416, %ifend.i421
  %common.ret.op.i398640.in = phi ptr [ %memberidx3.i401, %if.entry.i416 ], [ %memberidx6.i, %ifend.i421 ]
  %common.ret.op.in.i410 = phi ptr [ %memberidx3.i415, %if.entry.i416 ], [ %memberidx6.i420, %ifend.i421 ]
  %common.ret.op.i398640 = load ptr, ptr %common.ret.op.i398640.in, align 8
  %common.ret.op.i411 = load i64, ptr %common.ret.op.in.i410, align 4
  %351 = load ptr, ptr %memberidx41, align 8
  %352 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i398640, ptr %351)
  br i1 %352, label %ifend74, label %if.entry72

if.entry72:                                       ; preds = %get_class_prop_visibility.exit
  %353 = load ptr, ptr %13, align 8
  %memberidx75 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %353, i64 0, i32 5
  %354 = load ptr, ptr %memberidx75, align 8
  %355 = tail call ptr %354(ptr nonnull %13)
  %memberidx76 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %356 = load ptr, ptr %memberidx76, align 8
  %357 = load ptr, ptr %356, align 8
  %memberidx77 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %357, i64 0, i32 5
  %358 = load ptr, ptr %memberidx77, align 8
  %359 = tail call ptr %358(ptr nonnull %356)
  %360 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i398640)
  %361 = load ptr, ptr %360, align 8
  %memberidx78 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %361, i64 0, i32 5
  %362 = load ptr, ptr %memberidx78, align 8
  %363 = tail call ptr %362(ptr nonnull %360)
  %364 = alloca ptr, align 8
  %365 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %364, ptr nonnull @146, ptr %355, ptr %359, ptr %363)
  %366 = load ptr, ptr %364, align 8
  %367 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %367, align 8
  %memberidx.i422 = getelementptr inbounds %string, ptr %367, i64 0, i32 1
  store ptr %366, ptr %memberidx.i422, align 8
  %memberidx1.i423 = getelementptr inbounds %string, ptr %367, i64 0, i32 2
  store i64 %365, ptr %memberidx1.i423, align 4
  %memberidx2.i424 = getelementptr inbounds %string, ptr %367, i64 0, i32 3
  store i64 %365, ptr %memberidx2.i424, align 4
  tail call void @free(ptr %355)
  tail call void @free(ptr %359)
  tail call void @free(ptr %363)
  %368 = load ptr, ptr %10, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %368, i64 0, i32 1
  %369 = load ptr, ptr %memberidx80, align 8
  %memberidx.i425 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %370 = load ptr, ptr %memberidx.i425, align 8
  %memberidx1.i426 = getelementptr inbounds %Compiler, ptr %370, i64 0, i32 6
  %371 = load ptr, ptr %memberidx1.i426, align 8
  %372 = call ptr @malloc(i32 24)
  store i64 5, ptr %372, align 4
  %memberidx1.i.i427 = getelementptr inbounds %FloError, ptr %372, i64 0, i32 2
  store ptr %369, ptr %memberidx1.i.i427, align 8
  %memberidx2.i.i428 = getelementptr inbounds %FloError, ptr %372, i64 0, i32 1
  store ptr %367, ptr %memberidx2.i.i428, align 8
  %memberidx.i.i429 = getelementptr inbounds %Array_FloError_, ptr %371, i64 0, i32 2
  %373 = load i64, ptr %memberidx.i.i429, align 4
  %memberidx1.i2.i430 = getelementptr inbounds %Array_FloError_, ptr %371, i64 0, i32 3
  %374 = load i64, ptr %memberidx1.i2.i430, align 4
  %.not.i.i431 = icmp slt i64 %373, %374
  br i1 %.not.i.i431, label %if.entry72.TypeChecker_error.exit436_crit_edge, label %if.entry.i.i434

if.entry72.TypeChecker_error.exit436_crit_edge:   ; preds = %if.entry72
  %memberidx4.i.i435.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %371, i64 0, i32 1
  %.pre719 = load ptr, ptr %memberidx4.i.i435.phi.trans.insert, align 8
  br label %TypeChecker_error.exit436

if.entry.i.i434:                                  ; preds = %if.entry72
  %375 = shl nuw i64 %374, 1
  store i64 %375, ptr %memberidx1.i2.i430, align 4
  %memberidx2.i.i.i433 = getelementptr inbounds %Array_FloError_, ptr %371, i64 0, i32 1
  %376 = load ptr, ptr %memberidx2.i.i.i433, align 8
  %377 = shl i64 %374, 4
  %378 = call ptr @realloc(ptr %376, i64 %377)
  store ptr %378, ptr %memberidx2.i.i.i433, align 8
  %.pre718 = load i64, ptr %memberidx.i.i429, align 4
  br label %TypeChecker_error.exit436

TypeChecker_error.exit436:                        ; preds = %if.entry72.TypeChecker_error.exit436_crit_edge, %if.entry.i.i434
  %379 = phi ptr [ %.pre719, %if.entry72.TypeChecker_error.exit436_crit_edge ], [ %378, %if.entry.i.i434 ]
  %380 = phi i64 [ %373, %if.entry72.TypeChecker_error.exit436_crit_edge ], [ %.pre718, %if.entry.i.i434 ]
  %381 = add nsw i64 %380, 1
  store i64 %381, ptr %memberidx.i.i429, align 4
  %382 = getelementptr inbounds ptr, ptr %379, i64 %380
  store ptr %372, ptr %382, align 8
  br label %common.ret

ifend74:                                          ; preds = %get_class_prop_visibility.exit
  %383 = load i64, ptr %memberidx39, align 4
  %.not264 = icmp eq i64 %383, %common.ret.op.i411
  br i1 %.not264, label %ifend84, label %if.entry82

if.entry82:                                       ; preds = %ifend74
  %384 = load ptr, ptr %13, align 8
  %memberidx85 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %384, i64 0, i32 5
  %385 = load ptr, ptr %memberidx85, align 8
  %386 = tail call ptr %385(ptr nonnull %13)
  %memberidx86 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %387 = load ptr, ptr %memberidx86, align 8
  %388 = load ptr, ptr %387, align 8
  %memberidx87 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %388, i64 0, i32 5
  %389 = load ptr, ptr %memberidx87, align 8
  %390 = tail call ptr %389(ptr nonnull %387)
  switch i64 %common.ret.op.i411, label %ifend3.i [
    i64 1, label %if.entry.i441
    i64 2, label %if.entry1.i
  ]

if.entry.i441:                                    ; preds = %if.entry82
  %391 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %391, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry82
  %392 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %392, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry82
  %393 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %393, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i441, %if.entry1.i, %ifend3.i
  %.sink787 = phi ptr [ %391, %if.entry.i441 ], [ %392, %if.entry1.i ], [ %393, %ifend3.i ]
  %.sink785 = phi i64 [ 7, %if.entry.i441 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %394 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %394, align 8
  %memberidx.i.i.i438 = getelementptr inbounds %string, ptr %394, i64 0, i32 1
  store ptr %.sink787, ptr %memberidx.i.i.i438, align 8
  %memberidx1.i.i.i439 = getelementptr inbounds %string, ptr %394, i64 0, i32 2
  store i64 %.sink785, ptr %memberidx1.i.i.i439, align 4
  %memberidx2.i.i.i440 = getelementptr inbounds %string, ptr %394, i64 0, i32 3
  store i64 %.sink785, ptr %memberidx2.i.i.i440, align 4
  %395 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %396 = tail call ptr %395(ptr nonnull %394)
  %397 = alloca ptr, align 8
  %398 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %397, ptr nonnull @147, ptr %386, ptr %390, ptr %396)
  %399 = load ptr, ptr %397, align 8
  %400 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %400, align 8
  %memberidx.i443 = getelementptr inbounds %string, ptr %400, i64 0, i32 1
  store ptr %399, ptr %memberidx.i443, align 8
  %memberidx1.i444 = getelementptr inbounds %string, ptr %400, i64 0, i32 2
  store i64 %398, ptr %memberidx1.i444, align 4
  %memberidx2.i445 = getelementptr inbounds %string, ptr %400, i64 0, i32 3
  store i64 %398, ptr %memberidx2.i445, align 4
  tail call void @free(ptr %386)
  tail call void @free(ptr %390)
  tail call void @free(ptr %396)
  %401 = load ptr, ptr %10, align 8
  %memberidx90 = getelementptr inbounds %Token, ptr %401, i64 0, i32 1
  %402 = load ptr, ptr %memberidx90, align 8
  %memberidx.i446 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %403 = load ptr, ptr %memberidx.i446, align 8
  %memberidx1.i447 = getelementptr inbounds %Compiler, ptr %403, i64 0, i32 6
  %404 = load ptr, ptr %memberidx1.i447, align 8
  %405 = call ptr @malloc(i32 24)
  store i64 4, ptr %405, align 4
  %memberidx1.i.i448 = getelementptr inbounds %FloError, ptr %405, i64 0, i32 2
  store ptr %402, ptr %memberidx1.i.i448, align 8
  %memberidx2.i.i449 = getelementptr inbounds %FloError, ptr %405, i64 0, i32 1
  store ptr %400, ptr %memberidx2.i.i449, align 8
  %memberidx.i.i450 = getelementptr inbounds %Array_FloError_, ptr %404, i64 0, i32 2
  %406 = load i64, ptr %memberidx.i.i450, align 4
  %memberidx1.i2.i451 = getelementptr inbounds %Array_FloError_, ptr %404, i64 0, i32 3
  %407 = load i64, ptr %memberidx1.i2.i451, align 4
  %.not.i.i452 = icmp slt i64 %406, %407
  br i1 %.not.i.i452, label %dump_access.exit.TypeChecker_error.exit457_crit_edge, label %if.entry.i.i455

dump_access.exit.TypeChecker_error.exit457_crit_edge: ; preds = %dump_access.exit
  %memberidx4.i.i456.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %404, i64 0, i32 1
  %.pre721 = load ptr, ptr %memberidx4.i.i456.phi.trans.insert, align 8
  br label %TypeChecker_error.exit457

if.entry.i.i455:                                  ; preds = %dump_access.exit
  %408 = shl nuw i64 %407, 1
  store i64 %408, ptr %memberidx1.i2.i451, align 4
  %memberidx2.i.i.i454 = getelementptr inbounds %Array_FloError_, ptr %404, i64 0, i32 1
  %409 = load ptr, ptr %memberidx2.i.i.i454, align 8
  %410 = shl i64 %407, 4
  %411 = call ptr @realloc(ptr %409, i64 %410)
  store ptr %411, ptr %memberidx2.i.i.i454, align 8
  %.pre720 = load i64, ptr %memberidx.i.i450, align 4
  br label %TypeChecker_error.exit457

TypeChecker_error.exit457:                        ; preds = %dump_access.exit.TypeChecker_error.exit457_crit_edge, %if.entry.i.i455
  %412 = phi ptr [ %.pre721, %dump_access.exit.TypeChecker_error.exit457_crit_edge ], [ %411, %if.entry.i.i455 ]
  %413 = phi i64 [ %406, %dump_access.exit.TypeChecker_error.exit457_crit_edge ], [ %.pre720, %if.entry.i.i455 ]
  %414 = add nsw i64 %413, 1
  store i64 %414, ptr %memberidx.i.i450, align 4
  %415 = getelementptr inbounds ptr, ptr %412, i64 %413
  store ptr %405, ptr %415, align 8
  br label %common.ret

ifend84:                                          ; preds = %ifend74
  %memberidx91 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 9
  %416 = load ptr, ptr %0, align 8
  %417 = load ptr, ptr %memberidx59, align 8
  %memberidx.i.i.i459 = getelementptr inbounds %Program, ptr %416, i64 0, i32 1
  %418 = load ptr, ptr %memberidx.i.i.i459, align 8
  %419 = load i64, ptr %417, align 4
  %memberidx.i.i.i.i460 = getelementptr inbounds %Array_Module_, ptr %418, i64 0, i32 1
  %420 = load ptr, ptr %memberidx.i.i.i.i460, align 8
  %421 = getelementptr inbounds ptr, ptr %420, i64 %419
  %422 = load ptr, ptr %421, align 8
  %memberidx2.i.i.i461 = getelementptr inbounds %Module, ptr %422, i64 0, i32 3
  %423 = load ptr, ptr %memberidx2.i.i.i461, align 8
  %memberidx3.i.i.i462 = getelementptr inbounds %TypeId, ptr %417, i64 0, i32 2
  %424 = load i64, ptr %memberidx3.i.i.i462, align 4
  %memberidx.i5.i.i.i463 = getelementptr inbounds %Array_Class_, ptr %423, i64 0, i32 1
  %425 = load ptr, ptr %memberidx.i5.i.i.i463, align 8
  %426 = getelementptr inbounds ptr, ptr %425, i64 %424
  %427 = load ptr, ptr %426, align 8
  %428 = load i64, ptr %278, align 4
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %if.entry.i470, label %ifend.i475

if.entry.i470:                                    ; preds = %ifend84
  %memberidx1.i466 = getelementptr inbounds %Class, ptr %427, i64 0, i32 5
  %430 = load ptr, ptr %memberidx1.i466, align 8
  %memberidx2.i467 = getelementptr inbounds %PropId, ptr %278, i64 0, i32 2
  %431 = load i64, ptr %memberidx2.i467, align 4
  %memberidx.i12.i468 = getelementptr inbounds %Array_ClassMethod_, ptr %430, i64 0, i32 1
  %432 = load ptr, ptr %memberidx.i12.i468, align 8
  %433 = getelementptr inbounds ptr, ptr %432, i64 %431
  %434 = load ptr, ptr %433, align 8
  %memberidx3.i469 = getelementptr inbounds %ClassMethod, ptr %434, i64 0, i32 9
  br label %get_vtable_index.exit

ifend.i475:                                       ; preds = %ifend84
  %memberidx4.i471 = getelementptr inbounds %Class, ptr %427, i64 0, i32 4
  %435 = load ptr, ptr %memberidx4.i471, align 8
  %memberidx5.i472 = getelementptr inbounds %PropId, ptr %278, i64 0, i32 2
  %436 = load i64, ptr %memberidx5.i472, align 4
  %memberidx.i11.i473 = getelementptr inbounds %Array_ClassField_, ptr %435, i64 0, i32 1
  %437 = load ptr, ptr %memberidx.i11.i473, align 8
  %438 = getelementptr inbounds ptr, ptr %437, i64 %436
  %439 = load ptr, ptr %438, align 8
  %memberidx6.i474 = getelementptr inbounds %ClassField, ptr %439, i64 0, i32 6
  br label %get_vtable_index.exit

get_vtable_index.exit:                            ; preds = %if.entry.i470, %ifend.i475
  %common.ret.op.in.i464 = phi ptr [ %memberidx3.i469, %if.entry.i470 ], [ %memberidx6.i474, %ifend.i475 ]
  %common.ret.op.i465 = load i64, ptr %common.ret.op.in.i464, align 4
  store i64 %common.ret.op.i465, ptr %memberidx91, align 4
  br label %ifend58

if.entry97:                                       ; preds = %ifend58
  %440 = load i1, ptr %memberidx36, align 1
  br i1 %440, label %if.entry101, label %ifend103

else98:                                           ; preds = %ifend58
  %441 = load ptr, ptr %memberidx6, align 8
  %442 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %442, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %443 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %443, align 8
  %memberidx.i.i476 = getelementptr inbounds %string, ptr %443, i64 0, i32 1
  store ptr %442, ptr %memberidx.i.i476, align 8
  %memberidx1.i.i477 = getelementptr inbounds %string, ptr %443, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i477, align 4
  %memberidx2.i.i478 = getelementptr inbounds %string, ptr %443, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i478, align 4
  %memberidx.i479 = getelementptr inbounds %string, ptr %441, i64 0, i32 2
  %444 = load i64, ptr %memberidx.i479, align 4
  %.not.i481 = icmp eq i64 %444, 11
  br i1 %.not.i481, label %ifend.i485, label %else116

ifend.i485:                                       ; preds = %else98
  %memberidx2.i483 = getelementptr inbounds %string, ptr %441, i64 0, i32 1
  %445 = load ptr, ptr %memberidx2.i483, align 8
  %446 = tail call i64 @memcmp(ptr %445, ptr nonnull %442, i64 11)
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %if.entry115, label %else116

ifend99:                                          ; preds = %get_class_prop_type.exit588, %if.entry3.i, %ifend117, %ifend109
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.0671, %ifend109 ], [ %current_vtable_index.2, %get_class_prop_type.exit588 ], [ %current_vtable_index.2, %if.entry3.i ], [ %current_vtable_index.2, %ifend117 ]
  %memberidx150 = getelementptr inbounds %ClassMethod, ptr %11, i64 0, i32 8
  %448 = load ptr, ptr %16, align 8
  store ptr %448, ptr %memberidx150, align 8
  %449 = load ptr, ptr %memberidx152, align 8
  %memberidx.i487 = getelementptr inbounds %Array_ClassMethod_, ptr %449, i64 0, i32 2
  %450 = load i64, ptr %memberidx.i487, align 4
  %memberidx1.i488 = getelementptr inbounds %Array_ClassMethod_, ptr %449, i64 0, i32 3
  %451 = load i64, ptr %memberidx1.i488, align 4
  %.not.i489 = icmp slt i64 %450, %451
  br i1 %.not.i489, label %ifend99.Array_ClassMethod____sl__.exit_crit_edge, label %if.entry.i492

ifend99.Array_ClassMethod____sl__.exit_crit_edge: ; preds = %ifend99
  %memberidx4.i493.phi.trans.insert = getelementptr inbounds %Array_ClassMethod_, ptr %449, i64 0, i32 1
  %.pre729 = load ptr, ptr %memberidx4.i493.phi.trans.insert, align 8
  br label %Array_ClassMethod____sl__.exit

if.entry.i492:                                    ; preds = %ifend99
  %452 = shl nuw i64 %451, 1
  store i64 %452, ptr %memberidx1.i488, align 4
  %memberidx2.i.i491 = getelementptr inbounds %Array_ClassMethod_, ptr %449, i64 0, i32 1
  %453 = load ptr, ptr %memberidx2.i.i491, align 8
  %454 = shl i64 %451, 4
  %455 = tail call ptr @realloc(ptr %453, i64 %454)
  store ptr %455, ptr %memberidx2.i.i491, align 8
  %.pre728 = load i64, ptr %memberidx.i487, align 4
  br label %Array_ClassMethod____sl__.exit

Array_ClassMethod____sl__.exit:                   ; preds = %ifend99.Array_ClassMethod____sl__.exit_crit_edge, %if.entry.i492
  %456 = phi ptr [ %.pre729, %ifend99.Array_ClassMethod____sl__.exit_crit_edge ], [ %455, %if.entry.i492 ]
  %457 = phi i64 [ %450, %ifend99.Array_ClassMethod____sl__.exit_crit_edge ], [ %.pre728, %if.entry.i492 ]
  %458 = add nsw i64 %457, 1
  store i64 %458, ptr %memberidx.i487, align 4
  %459 = getelementptr inbounds ptr, ptr %456, i64 %457
  store ptr %11, ptr %459, align 8
  %460 = load ptr, ptr %memberidx2.i, align 8
  store ptr %460, ptr %memberidx.i267, align 8
  %461 = add nuw nsw i64 %i.0670, 1
  %462 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_MethodNode_, ptr %462, i64 0, i32 2
  %463 = load i64, ptr %memberidx2, align 4
  %464 = icmp slt i64 %461, %463
  br i1 %464, label %for.body, label %common.ret

if.entry101:                                      ; preds = %if.entry97
  %465 = tail call ptr @malloc(i32 31)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %465, ptr noundef nonnull align 8 dereferenceable(31) @148, i64 31, i1 false)
  %466 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %466, align 8
  %memberidx.i.i495 = getelementptr inbounds %string, ptr %466, i64 0, i32 1
  store ptr %465, ptr %memberidx.i.i495, align 8
  %memberidx1.i.i496 = getelementptr inbounds %string, ptr %466, i64 0, i32 2
  store i64 31, ptr %memberidx1.i.i496, align 4
  %memberidx2.i.i497 = getelementptr inbounds %string, ptr %466, i64 0, i32 3
  store i64 31, ptr %memberidx2.i.i497, align 4
  %467 = load ptr, ptr %10, align 8
  %memberidx105 = getelementptr inbounds %Token, ptr %467, i64 0, i32 1
  %468 = load ptr, ptr %memberidx105, align 8
  %memberidx.i498 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %469 = load ptr, ptr %memberidx.i498, align 8
  %memberidx1.i499 = getelementptr inbounds %Compiler, ptr %469, i64 0, i32 6
  %470 = load ptr, ptr %memberidx1.i499, align 8
  %471 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %471, align 4
  %memberidx1.i.i500 = getelementptr inbounds %FloError, ptr %471, i64 0, i32 2
  store ptr %468, ptr %memberidx1.i.i500, align 8
  %memberidx2.i.i501 = getelementptr inbounds %FloError, ptr %471, i64 0, i32 1
  store ptr %466, ptr %memberidx2.i.i501, align 8
  %memberidx.i.i502 = getelementptr inbounds %Array_FloError_, ptr %470, i64 0, i32 2
  %472 = load i64, ptr %memberidx.i.i502, align 4
  %memberidx1.i2.i503 = getelementptr inbounds %Array_FloError_, ptr %470, i64 0, i32 3
  %473 = load i64, ptr %memberidx1.i2.i503, align 4
  %.not.i.i504 = icmp slt i64 %472, %473
  br i1 %.not.i.i504, label %if.entry101.TypeChecker_error.exit509_crit_edge, label %if.entry.i.i507

if.entry101.TypeChecker_error.exit509_crit_edge:  ; preds = %if.entry101
  %memberidx4.i.i508.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %470, i64 0, i32 1
  %.pre733 = load ptr, ptr %memberidx4.i.i508.phi.trans.insert, align 8
  br label %TypeChecker_error.exit509

if.entry.i.i507:                                  ; preds = %if.entry101
  %474 = shl nuw i64 %473, 1
  store i64 %474, ptr %memberidx1.i2.i503, align 4
  %memberidx2.i.i.i506 = getelementptr inbounds %Array_FloError_, ptr %470, i64 0, i32 1
  %475 = load ptr, ptr %memberidx2.i.i.i506, align 8
  %476 = shl i64 %473, 4
  %477 = tail call ptr @realloc(ptr %475, i64 %476)
  store ptr %477, ptr %memberidx2.i.i.i506, align 8
  %.pre732 = load i64, ptr %memberidx.i.i502, align 4
  br label %TypeChecker_error.exit509

TypeChecker_error.exit509:                        ; preds = %if.entry101.TypeChecker_error.exit509_crit_edge, %if.entry.i.i507
  %478 = phi ptr [ %.pre733, %if.entry101.TypeChecker_error.exit509_crit_edge ], [ %477, %if.entry.i.i507 ]
  %479 = phi i64 [ %472, %if.entry101.TypeChecker_error.exit509_crit_edge ], [ %.pre732, %if.entry.i.i507 ]
  %480 = add nsw i64 %479, 1
  store i64 %480, ptr %memberidx.i.i502, align 4
  %481 = getelementptr inbounds ptr, ptr %478, i64 %479
  store ptr %471, ptr %481, align 8
  br label %common.ret

ifend103:                                         ; preds = %if.entry97
  %482 = load ptr, ptr %memberidx6, align 8
  %483 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %483, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %484 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %484, align 8
  %memberidx.i.i510 = getelementptr inbounds %string, ptr %484, i64 0, i32 1
  store ptr %483, ptr %memberidx.i.i510, align 8
  %memberidx1.i.i511 = getelementptr inbounds %string, ptr %484, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i511, align 4
  %memberidx2.i.i512 = getelementptr inbounds %string, ptr %484, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i512, align 4
  %memberidx.i513 = getelementptr inbounds %string, ptr %482, i64 0, i32 2
  %485 = load i64, ptr %memberidx.i513, align 4
  %.not.i515 = icmp eq i64 %485, 11
  br i1 %.not.i515, label %ifend.i519, label %ifend109

ifend.i519:                                       ; preds = %ifend103
  %memberidx2.i517 = getelementptr inbounds %string, ptr %482, i64 0, i32 1
  %486 = load ptr, ptr %memberidx2.i517, align 8
  %487 = tail call i64 @memcmp(ptr %486, ptr nonnull %483, i64 11)
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %if.entry107, label %ifend109

if.entry107:                                      ; preds = %ifend.i519
  %489 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %489, ptr noundef nonnull align 8 dereferenceable(33) @150, i64 33, i1 false)
  %490 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %490, align 8
  %memberidx.i.i521 = getelementptr inbounds %string, ptr %490, i64 0, i32 1
  store ptr %489, ptr %memberidx.i.i521, align 8
  %memberidx1.i.i522 = getelementptr inbounds %string, ptr %490, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i522, align 4
  %memberidx2.i.i523 = getelementptr inbounds %string, ptr %490, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i523, align 4
  %491 = load ptr, ptr %10, align 8
  %memberidx111 = getelementptr inbounds %Token, ptr %491, i64 0, i32 1
  %492 = load ptr, ptr %memberidx111, align 8
  %memberidx.i524 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %493 = load ptr, ptr %memberidx.i524, align 8
  %memberidx1.i525 = getelementptr inbounds %Compiler, ptr %493, i64 0, i32 6
  %494 = load ptr, ptr %memberidx1.i525, align 8
  %495 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %495, align 4
  %memberidx1.i.i526 = getelementptr inbounds %FloError, ptr %495, i64 0, i32 2
  store ptr %492, ptr %memberidx1.i.i526, align 8
  %memberidx2.i.i527 = getelementptr inbounds %FloError, ptr %495, i64 0, i32 1
  store ptr %490, ptr %memberidx2.i.i527, align 8
  %memberidx.i.i528 = getelementptr inbounds %Array_FloError_, ptr %494, i64 0, i32 2
  %496 = load i64, ptr %memberidx.i.i528, align 4
  %memberidx1.i2.i529 = getelementptr inbounds %Array_FloError_, ptr %494, i64 0, i32 3
  %497 = load i64, ptr %memberidx1.i2.i529, align 4
  %.not.i.i530 = icmp slt i64 %496, %497
  br i1 %.not.i.i530, label %if.entry107.TypeChecker_error.exit535_crit_edge, label %if.entry.i.i533

if.entry107.TypeChecker_error.exit535_crit_edge:  ; preds = %if.entry107
  %memberidx4.i.i534.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %494, i64 0, i32 1
  %.pre731 = load ptr, ptr %memberidx4.i.i534.phi.trans.insert, align 8
  br label %TypeChecker_error.exit535

if.entry.i.i533:                                  ; preds = %if.entry107
  %498 = shl nuw i64 %497, 1
  store i64 %498, ptr %memberidx1.i2.i529, align 4
  %memberidx2.i.i.i532 = getelementptr inbounds %Array_FloError_, ptr %494, i64 0, i32 1
  %499 = load ptr, ptr %memberidx2.i.i.i532, align 8
  %500 = shl i64 %497, 4
  %501 = tail call ptr @realloc(ptr %499, i64 %500)
  store ptr %501, ptr %memberidx2.i.i.i532, align 8
  %.pre730 = load i64, ptr %memberidx.i.i528, align 4
  br label %TypeChecker_error.exit535

TypeChecker_error.exit535:                        ; preds = %if.entry107.TypeChecker_error.exit535_crit_edge, %if.entry.i.i533
  %502 = phi ptr [ %.pre731, %if.entry107.TypeChecker_error.exit535_crit_edge ], [ %501, %if.entry.i.i533 ]
  %503 = phi i64 [ %496, %if.entry107.TypeChecker_error.exit535_crit_edge ], [ %.pre730, %if.entry.i.i533 ]
  %504 = add nsw i64 %503, 1
  store i64 %504, ptr %memberidx.i.i528, align 4
  %505 = getelementptr inbounds ptr, ptr %502, i64 %503
  store ptr %495, ptr %505, align 8
  br label %common.ret

ifend109:                                         ; preds = %ifend103, %ifend.i519
  %506 = load ptr, ptr %memberidx112, align 8
  %507 = load ptr, ptr %11, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr %506, ptr %13, ptr %507)
  br label %ifend99

if.entry115:                                      ; preds = %ifend.i485
  %508 = load i1, ptr %memberidx36, align 1
  br i1 %508, label %if.entry119, label %ifend121

else116:                                          ; preds = %else98, %ifend.i485
  %509 = load i64, ptr %memberidx39, align 4
  %.not261 = icmp eq i64 %509, 1
  br i1 %.not261, label %else128, label %if.entry127

ifend117:                                         ; preds = %ifend129, %ifend121
  %current_vtable_index.2 = phi i64 [ %current_vtable_index.0671, %ifend121 ], [ %current_vtable_index.3, %ifend129 ]
  %510 = tail call ptr @malloc(i32 16)
  %511 = load ptr, ptr %1, align 8
  store i64 11, ptr %510, align 4
  %memberidx.i536 = getelementptr inbounds %ObjectType, ptr %510, i64 0, i32 1
  store ptr %511, ptr %memberidx.i536, align 8
  %512 = tail call ptr @malloc(i32 4)
  store i32 1936287860, ptr %512, align 8
  %513 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %513, align 8
  %memberidx.i.i537 = getelementptr inbounds %string, ptr %513, i64 0, i32 1
  store ptr %512, ptr %memberidx.i.i537, align 8
  %memberidx1.i.i538 = getelementptr inbounds %string, ptr %513, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i538, align 4
  %memberidx2.i.i539 = getelementptr inbounds %string, ptr %513, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i539, align 4
  %514 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %513, ptr null, ptr nonnull %510)
  %515 = load ptr, ptr %memberidx139, align 8
  %.not262 = icmp eq ptr %515, null
  br i1 %.not262, label %ifend99, label %if.entry140

if.entry119:                                      ; preds = %if.entry115
  %516 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %516, ptr noundef nonnull align 8 dereferenceable(35) @151, i64 35, i1 false)
  %517 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %517, align 8
  %memberidx.i.i540 = getelementptr inbounds %string, ptr %517, i64 0, i32 1
  store ptr %516, ptr %memberidx.i.i540, align 8
  %memberidx1.i.i541 = getelementptr inbounds %string, ptr %517, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i541, align 4
  %memberidx2.i.i542 = getelementptr inbounds %string, ptr %517, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i542, align 4
  %518 = load ptr, ptr %10, align 8
  %memberidx123 = getelementptr inbounds %Token, ptr %518, i64 0, i32 1
  %519 = load ptr, ptr %memberidx123, align 8
  %memberidx.i543 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %520 = load ptr, ptr %memberidx.i543, align 8
  %memberidx1.i544 = getelementptr inbounds %Compiler, ptr %520, i64 0, i32 6
  %521 = load ptr, ptr %memberidx1.i544, align 8
  %522 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %522, align 4
  %memberidx1.i.i545 = getelementptr inbounds %FloError, ptr %522, i64 0, i32 2
  store ptr %519, ptr %memberidx1.i.i545, align 8
  %memberidx2.i.i546 = getelementptr inbounds %FloError, ptr %522, i64 0, i32 1
  store ptr %517, ptr %memberidx2.i.i546, align 8
  %memberidx.i.i547 = getelementptr inbounds %Array_FloError_, ptr %521, i64 0, i32 2
  %523 = load i64, ptr %memberidx.i.i547, align 4
  %memberidx1.i2.i548 = getelementptr inbounds %Array_FloError_, ptr %521, i64 0, i32 3
  %524 = load i64, ptr %memberidx1.i2.i548, align 4
  %.not.i.i549 = icmp slt i64 %523, %524
  br i1 %.not.i.i549, label %if.entry119.TypeChecker_error.exit554_crit_edge, label %if.entry.i.i552

if.entry119.TypeChecker_error.exit554_crit_edge:  ; preds = %if.entry119
  %memberidx4.i.i553.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %521, i64 0, i32 1
  %.pre727 = load ptr, ptr %memberidx4.i.i553.phi.trans.insert, align 8
  br label %TypeChecker_error.exit554

if.entry.i.i552:                                  ; preds = %if.entry119
  %525 = shl nuw i64 %524, 1
  store i64 %525, ptr %memberidx1.i2.i548, align 4
  %memberidx2.i.i.i551 = getelementptr inbounds %Array_FloError_, ptr %521, i64 0, i32 1
  %526 = load ptr, ptr %memberidx2.i.i.i551, align 8
  %527 = shl i64 %524, 4
  %528 = tail call ptr @realloc(ptr %526, i64 %527)
  store ptr %528, ptr %memberidx2.i.i.i551, align 8
  %.pre726 = load i64, ptr %memberidx.i.i547, align 4
  br label %TypeChecker_error.exit554

TypeChecker_error.exit554:                        ; preds = %if.entry119.TypeChecker_error.exit554_crit_edge, %if.entry.i.i552
  %529 = phi ptr [ %.pre727, %if.entry119.TypeChecker_error.exit554_crit_edge ], [ %528, %if.entry.i.i552 ]
  %530 = phi i64 [ %523, %if.entry119.TypeChecker_error.exit554_crit_edge ], [ %.pre726, %if.entry.i.i552 ]
  %531 = add nsw i64 %530, 1
  store i64 %531, ptr %memberidx.i.i547, align 4
  %532 = getelementptr inbounds ptr, ptr %529, i64 %530
  store ptr %522, ptr %532, align 8
  br label %common.ret

ifend121:                                         ; preds = %if.entry115
  %533 = load ptr, ptr %11, align 8
  store ptr %533, ptr %memberidx124, align 8
  br label %ifend117

if.entry127:                                      ; preds = %else116
  %534 = add nsw i64 %current_vtable_index.0671, 1
  br label %ifend129

else128:                                          ; preds = %else116
  %535 = load i1, ptr %memberidx36, align 1
  br i1 %535, label %if.entry131, label %ifend129

ifend129:                                         ; preds = %else128, %if.entry127
  %current_vtable_index.3 = phi i64 [ %534, %if.entry127 ], [ %current_vtable_index.0671, %else128 ]
  %536 = load ptr, ptr %memberidx55, align 8
  %537 = load ptr, ptr %11, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr %536, ptr %13, ptr %537)
  br label %ifend117

if.entry131:                                      ; preds = %else128
  %538 = tail call ptr @malloc(i32 58)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(58) %538, ptr noundef nonnull align 8 dereferenceable(58) @152, i64 58, i1 false)
  %539 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %539, align 8
  %memberidx.i.i555 = getelementptr inbounds %string, ptr %539, i64 0, i32 1
  store ptr %538, ptr %memberidx.i.i555, align 8
  %memberidx1.i.i556 = getelementptr inbounds %string, ptr %539, i64 0, i32 2
  store i64 58, ptr %memberidx1.i.i556, align 4
  %memberidx2.i.i557 = getelementptr inbounds %string, ptr %539, i64 0, i32 3
  store i64 58, ptr %memberidx2.i.i557, align 4
  %540 = load ptr, ptr %10, align 8
  %memberidx135 = getelementptr inbounds %Token, ptr %540, i64 0, i32 1
  %541 = load ptr, ptr %memberidx135, align 8
  %memberidx.i558 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %542 = load ptr, ptr %memberidx.i558, align 8
  %memberidx1.i559 = getelementptr inbounds %Compiler, ptr %542, i64 0, i32 6
  %543 = load ptr, ptr %memberidx1.i559, align 8
  %544 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %544, align 4
  %memberidx1.i.i560 = getelementptr inbounds %FloError, ptr %544, i64 0, i32 2
  store ptr %541, ptr %memberidx1.i.i560, align 8
  %memberidx2.i.i561 = getelementptr inbounds %FloError, ptr %544, i64 0, i32 1
  store ptr %539, ptr %memberidx2.i.i561, align 8
  %memberidx.i.i562 = getelementptr inbounds %Array_FloError_, ptr %543, i64 0, i32 2
  %545 = load i64, ptr %memberidx.i.i562, align 4
  %memberidx1.i2.i563 = getelementptr inbounds %Array_FloError_, ptr %543, i64 0, i32 3
  %546 = load i64, ptr %memberidx1.i2.i563, align 4
  %.not.i.i564 = icmp slt i64 %545, %546
  br i1 %.not.i.i564, label %if.entry131.TypeChecker_error.exit569_crit_edge, label %if.entry.i.i567

if.entry131.TypeChecker_error.exit569_crit_edge:  ; preds = %if.entry131
  %memberidx4.i.i568.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %543, i64 0, i32 1
  %.pre725 = load ptr, ptr %memberidx4.i.i568.phi.trans.insert, align 8
  br label %TypeChecker_error.exit569

if.entry.i.i567:                                  ; preds = %if.entry131
  %547 = shl nuw i64 %546, 1
  store i64 %547, ptr %memberidx1.i2.i563, align 4
  %memberidx2.i.i.i566 = getelementptr inbounds %Array_FloError_, ptr %543, i64 0, i32 1
  %548 = load ptr, ptr %memberidx2.i.i.i566, align 8
  %549 = shl i64 %546, 4
  %550 = tail call ptr @realloc(ptr %548, i64 %549)
  store ptr %550, ptr %memberidx2.i.i.i566, align 8
  %.pre724 = load i64, ptr %memberidx.i.i562, align 4
  br label %TypeChecker_error.exit569

TypeChecker_error.exit569:                        ; preds = %if.entry131.TypeChecker_error.exit569_crit_edge, %if.entry.i.i567
  %551 = phi ptr [ %.pre725, %if.entry131.TypeChecker_error.exit569_crit_edge ], [ %550, %if.entry.i.i567 ]
  %552 = phi i64 [ %545, %if.entry131.TypeChecker_error.exit569_crit_edge ], [ %.pre724, %if.entry.i.i567 ]
  %553 = add nsw i64 %552, 1
  store i64 %553, ptr %memberidx.i.i562, align 4
  %554 = getelementptr inbounds ptr, ptr %551, i64 %552
  store ptr %544, ptr %554, align 8
  br label %common.ret

if.entry140:                                      ; preds = %ifend117
  %555 = load ptr, ptr %0, align 8
  %556 = load i64, ptr %515, align 4
  %switch667 = icmp eq i64 %556, 20
  br i1 %switch667, label %if.entry.i610, label %if.entry3.i

if.entry.i610:                                    ; preds = %if.entry140, %if.entry.i610
  %.tr11.i668 = phi ptr [ %557, %if.entry.i610 ], [ %515, %if.entry140 ]
  %memberidx1.i609 = getelementptr inbounds %GenericType, ptr %.tr11.i668, i64 0, i32 3
  %557 = load ptr, ptr %memberidx1.i609, align 8
  %558 = load i64, ptr %557, align 4
  %switch = icmp eq i64 %558, 20
  br i1 %switch, label %if.entry.i610, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i610, %if.entry140
  %.tr11.i.lcssa = phi ptr [ %515, %if.entry140 ], [ %557, %if.entry.i610 ]
  %memberidx6.i611 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %559 = load ptr, ptr %memberidx6.i611, align 8
  %memberidx.i.i612 = getelementptr inbounds %Program, ptr %555, i64 0, i32 1
  %560 = load ptr, ptr %memberidx.i.i612, align 8
  %561 = load i64, ptr %559, align 4
  %memberidx.i.i.i613 = getelementptr inbounds %Array_Module_, ptr %560, i64 0, i32 1
  %562 = load ptr, ptr %memberidx.i.i.i613, align 8
  %563 = getelementptr inbounds ptr, ptr %562, i64 %561
  %564 = load ptr, ptr %563, align 8
  %memberidx2.i.i614 = getelementptr inbounds %Module, ptr %564, i64 0, i32 3
  %565 = load ptr, ptr %memberidx2.i.i614, align 8
  %memberidx3.i.i615 = getelementptr inbounds %TypeId, ptr %559, i64 0, i32 2
  %566 = load i64, ptr %memberidx3.i.i615, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %565, i64 0, i32 1
  %567 = load ptr, ptr %memberidx.i5.i.i, align 8
  %568 = getelementptr inbounds ptr, ptr %567, i64 %566
  %569 = load ptr, ptr %568, align 8
  %memberidx145 = getelementptr inbounds %Class, ptr %569, i64 0, i32 3
  %570 = load ptr, ptr %memberidx145, align 8
  %.not263 = icmp eq ptr %570, null
  br i1 %.not263, label %ifend99, label %if.entry146

if.entry146:                                      ; preds = %if.entry3.i
  %memberidx.i.i570 = getelementptr inbounds %PropId, ptr %570, i64 0, i32 1
  %571 = load ptr, ptr %memberidx.i.i570, align 8
  %572 = load i64, ptr %571, align 4
  %573 = getelementptr inbounds ptr, ptr %562, i64 %572
  %574 = load ptr, ptr %573, align 8
  %memberidx2.i.i.i573 = getelementptr inbounds %Module, ptr %574, i64 0, i32 3
  %575 = load ptr, ptr %memberidx2.i.i.i573, align 8
  %memberidx3.i.i.i574 = getelementptr inbounds %TypeId, ptr %571, i64 0, i32 2
  %576 = load i64, ptr %memberidx3.i.i.i574, align 4
  %memberidx.i5.i.i.i575 = getelementptr inbounds %Array_Class_, ptr %575, i64 0, i32 1
  %577 = load ptr, ptr %memberidx.i5.i.i.i575, align 8
  %578 = getelementptr inbounds ptr, ptr %577, i64 %576
  %579 = load ptr, ptr %578, align 8
  %580 = load i64, ptr %570, align 4
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %if.entry.i582, label %ifend.i587

if.entry.i582:                                    ; preds = %if.entry146
  %memberidx1.i578 = getelementptr inbounds %Class, ptr %579, i64 0, i32 5
  %582 = load ptr, ptr %memberidx1.i578, align 8
  %memberidx2.i579 = getelementptr inbounds %PropId, ptr %570, i64 0, i32 2
  %583 = load i64, ptr %memberidx2.i579, align 4
  %memberidx.i12.i580 = getelementptr inbounds %Array_ClassMethod_, ptr %582, i64 0, i32 1
  %584 = load ptr, ptr %memberidx.i12.i580, align 8
  %585 = getelementptr inbounds ptr, ptr %584, i64 %583
  %586 = load ptr, ptr %585, align 8
  %memberidx3.i581 = getelementptr inbounds %ClassMethod, ptr %586, i64 0, i32 4
  br label %get_class_prop_type.exit588

ifend.i587:                                       ; preds = %if.entry146
  %memberidx4.i583 = getelementptr inbounds %Class, ptr %579, i64 0, i32 4
  %587 = load ptr, ptr %memberidx4.i583, align 8
  %memberidx5.i584 = getelementptr inbounds %PropId, ptr %570, i64 0, i32 2
  %588 = load i64, ptr %memberidx5.i584, align 4
  %memberidx.i11.i585 = getelementptr inbounds %Array_ClassField_, ptr %587, i64 0, i32 1
  %589 = load ptr, ptr %memberidx.i11.i585, align 8
  %590 = getelementptr inbounds ptr, ptr %589, i64 %588
  %591 = load ptr, ptr %590, align 8
  %memberidx6.i586 = getelementptr inbounds %ClassField, ptr %591, i64 0, i32 4
  br label %get_class_prop_type.exit588

get_class_prop_type.exit588:                      ; preds = %if.entry.i582, %ifend.i587
  %common.ret.op.in.i576 = phi ptr [ %memberidx3.i581, %if.entry.i582 ], [ %memberidx6.i586, %ifend.i587 ]
  %common.ret.op.i577 = load ptr, ptr %common.ret.op.in.i576, align 8
  %592 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %592, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %593 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %593, align 8
  %memberidx.i.i589 = getelementptr inbounds %string, ptr %593, i64 0, i32 1
  store ptr %592, ptr %memberidx.i.i589, align 8
  %memberidx1.i.i590 = getelementptr inbounds %string, ptr %593, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i590, align 4
  %memberidx2.i.i591 = getelementptr inbounds %string, ptr %593, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i591, align 4
  %594 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %593, ptr null, ptr %common.ret.op.i577)
  br label %ifend99
}

define internal fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 6
  %5 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %for.body, %3, %ifend45, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %100, %ifend45 ], [ null, %3 ], [ null, %for.body ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %8, align 8
  %memberidx.i91 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i91, align 4
  %memberidx1.i92 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i92, align 4
  %memberidx2.i93 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i93, align 8
  store i64 0, ptr %memberidx.i91, align 4
  %10 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %10, align 4
  %11 = load i64, ptr %1, align 4
  switch i64 %11, label %ifend5 [
    i64 14, label %if.entry3
    i64 20, label %if.entry.i132
  ]

if.entry3:                                        ; preds = %ifend
  %memberidx6 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  br label %ifend5.sink.split

ifend5.sink.split:                                ; preds = %if.entry3, %if.entry12
  %.sink = phi ptr [ %29, %if.entry12 ], [ %memberidx6, %if.entry3 ]
  %is_constant.0.ph = phi i1 [ false, %if.entry12 ], [ true, %if.entry3 ]
  %12 = load ptr, ptr %.sink, align 8
  br label %ifend5

ifend5:                                           ; preds = %ifend5.sink.split, %is_object.exit, %ifend, %string___eq__.exit
  %is_constant.0 = phi i1 [ false, %string___eq__.exit ], [ true, %ifend ], [ false, %is_object.exit ], [ %is_constant.0.ph, %ifend5.sink.split ]
  %element_type.0 = phi ptr [ %10, %string___eq__.exit ], [ %10, %ifend ], [ %10, %is_object.exit ], [ %12, %ifend5.sink.split ]
  %memberidx16 = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx16, align 8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx17, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body, label %ifend20

if.entry.i132:                                    ; preds = %ifend, %if.entry.i132
  %.tr5.i = phi ptr [ %16, %if.entry.i132 ], [ %1, %ifend ]
  %memberidx1.i131 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i131, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i132, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i132
  %memberidx11 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx11, align 8
  %20 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %20, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i, align 4
  %memberidx.i94 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i94, align 4
  %.not.i = icmp eq i64 %22, 5
  br i1 %.not.i, label %string___eq__.exit, label %ifend5

string___eq__.exit:                               ; preds = %is_object.exit
  %23 = icmp eq i64 %17, 11
  %memberidx2.i96 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i96, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr nonnull %20, i64 5)
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %if.entry12, label %ifend5

if.entry12:                                       ; preds = %string___eq__.exit
  %memberidx15 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx15, align 8
  %memberidx.i97 = getelementptr inbounds %Array_Type_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i97, align 8
  br label %ifend5.sink.split

ifend20:                                          ; preds = %Array_Expression____sl__.exit, %ifend5
  %is_constant.1 = phi i1 [ %is_constant.0, %ifend5 ], [ %47, %Array_Expression____sl__.exit ]
  %element_type.1 = phi ptr [ %element_type.0, %ifend5 ], [ %.element_type.2143, %Array_Expression____sl__.exit ]
  %30 = load i64, ptr %1, align 4
  %.not = icmp eq i64 %30, 14
  br i1 %.not, label %else44, label %if.entry43

for.body:                                         ; preds = %ifend5, %Array_Expression____sl__.exit
  %31 = phi ptr [ %59, %Array_Expression____sl__.exit ], [ %13, %ifend5 ]
  %i.0144 = phi i64 [ %58, %Array_Expression____sl__.exit ], [ 0, %ifend5 ]
  %element_type.2143 = phi ptr [ %.element_type.2143, %Array_Expression____sl__.exit ], [ %element_type.0, %ifend5 ]
  %is_constant.2142 = phi i1 [ %47, %Array_Expression____sl__.exit ], [ %is_constant.0, %ifend5 ]
  %memberidx.i98 = getelementptr inbounds %Array_ExpressionNode_, ptr %31, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i98, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0144
  %34 = load ptr, ptr %33, align 8
  %35 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %element_type.2143, ptr %34)
  %36 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 6
  %37 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i101, align 4
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %common.ret, label %ifend26

ifend26:                                          ; preds = %for.body
  %40 = icmp eq i64 %i.0144, 0
  %41 = load i64, ptr %element_type.2143, align 4
  %42 = icmp eq i64 %41, 21
  %43 = and i1 %40, %42
  %memberidx31 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %44 = load ptr, ptr %memberidx31, align 8
  %.element_type.2143 = select i1 %43, ptr %44, ptr %element_type.2143
  %memberidx32 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %45 = load i1, ptr %memberidx32, align 1
  %46 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %.element_type.2143, ptr %44)
  br i1 %46, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend26
  %47 = and i1 %is_constant.2142, %45
  %48 = load i64, ptr %memberidx.i91, align 4
  %49 = load i64, ptr %memberidx1.i92, align 4
  %.not.i104 = icmp slt i64 %48, %49
  br i1 %.not.i104, label %if.entry34.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

if.entry34.Array_Expression____sl__.exit_crit_edge: ; preds = %if.entry34
  %.pre154 = load ptr, ptr %memberidx2.i93, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %if.entry34
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx1.i92, align 4
  %51 = load ptr, ptr %memberidx2.i93, align 8
  %52 = shl i64 %49, 4
  %53 = tail call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %memberidx2.i93, align 8
  %.pre153 = load i64, ptr %memberidx.i91, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %if.entry34.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %54 = phi ptr [ %.pre154, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %53, %if.entry.i ]
  %55 = phi i64 [ %48, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %.pre153, %if.entry.i ]
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx.i91, align 4
  %57 = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %35, ptr %57, align 8
  %58 = add nuw nsw i64 %i.0144, 1
  %59 = load ptr, ptr %memberidx16, align 8
  %memberidx22 = getelementptr inbounds %Array_ExpressionNode_, ptr %59, i64 0, i32 2
  %60 = load i64, ptr %memberidx22, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %for.body, label %ifend20

else35:                                           ; preds = %ifend26
  %memberidx33 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %62 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %.element_type.2143)
  %63 = load ptr, ptr %62, align 8
  %memberidx37 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx37, align 8
  %65 = tail call ptr %64(ptr nonnull %62)
  %66 = load ptr, ptr %memberidx33, align 8
  %67 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %66)
  %68 = load ptr, ptr %67, align 8
  %memberidx39 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %68, i64 0, i32 5
  %69 = load ptr, ptr %memberidx39, align 8
  %70 = tail call ptr %69(ptr nonnull %67)
  %71 = alloca ptr, align 8
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %71, ptr nonnull @169, ptr %65, ptr %70)
  %73 = load ptr, ptr %71, align 8
  %74 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %74, align 8
  %memberidx.i108 = getelementptr inbounds %string, ptr %74, i64 0, i32 1
  store ptr %73, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %string, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i109, align 4
  %memberidx2.i110 = getelementptr inbounds %string, ptr %74, i64 0, i32 3
  store i64 %72, ptr %memberidx2.i110, align 4
  tail call void @free(ptr %65)
  tail call void @free(ptr %70)
  %75 = load ptr, ptr %memberidx16, align 8
  %memberidx.i111 = getelementptr inbounds %Array_ExpressionNode_, ptr %75, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i111, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %i.0144
  %78 = load ptr, ptr %77, align 8
  %79 = load ptr, ptr %78, align 8
  %80 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i113 = getelementptr inbounds %Compiler, ptr %80, i64 0, i32 6
  %81 = load ptr, ptr %memberidx1.i113, align 8
  %82 = call ptr @malloc(i32 24)
  store i64 5, ptr %82, align 4
  %memberidx1.i.i114 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 2
  store ptr %79, ptr %memberidx1.i.i114, align 8
  %memberidx2.i.i115 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 1
  store ptr %74, ptr %memberidx2.i.i115, align 8
  %memberidx.i.i116 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 2
  %83 = load i64, ptr %memberidx.i.i116, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 3
  %84 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %83, %84
  br i1 %.not.i.i, label %else35.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

else35.TypeChecker_error.exit_crit_edge:          ; preds = %else35
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %.pre152 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %else35
  %85 = shl nuw i64 %84, 1
  store i64 %85, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %86 = load ptr, ptr %memberidx2.i.i.i, align 8
  %87 = shl i64 %84, 4
  %88 = call ptr @realloc(ptr %86, i64 %87)
  store ptr %88, ptr %memberidx2.i.i.i, align 8
  %.pre151 = load i64, ptr %memberidx.i.i116, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %else35.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %89 = phi ptr [ %.pre152, %else35.TypeChecker_error.exit_crit_edge ], [ %88, %if.entry.i.i ]
  %90 = phi i64 [ %83, %else35.TypeChecker_error.exit_crit_edge ], [ %.pre151, %if.entry.i.i ]
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr %memberidx.i.i116, align 4
  %92 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %82, ptr %92, align 8
  br label %common.ret

if.entry43:                                       ; preds = %ifend20
  %93 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %93, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %94 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %94, align 8
  %memberidx.i.i117 = getelementptr inbounds %string, ptr %94, i64 0, i32 1
  store ptr %93, ptr %memberidx.i.i117, align 8
  %memberidx1.i.i118 = getelementptr inbounds %string, ptr %94, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %string, ptr %94, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i119, align 4
  %95 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %95, align 8
  %memberidx.i120 = getelementptr inbounds %Array_Type_, ptr %95, i64 0, i32 2
  store i64 0, ptr %memberidx.i120, align 4
  %memberidx1.i121 = getelementptr inbounds %Array_Type_, ptr %95, i64 0, i32 3
  store i64 8, ptr %memberidx1.i121, align 4
  %memberidx2.i122 = getelementptr inbounds %Array_Type_, ptr %95, i64 0, i32 1
  %96 = tail call ptr @malloc(i32 64)
  store ptr %96, ptr %memberidx2.i122, align 8
  store ptr %element_type.1, ptr %96, align 8
  store i64 1, ptr %memberidx.i120, align 4
  %97 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr nonnull %94, ptr nonnull %95)
  %.not90 = icmp eq ptr %97, null
  %spec.select = select i1 %.not90, i1 %is_constant.1, i1 false
  %spec.select130 = select i1 %.not90, ptr %1, ptr %97
  br label %ifend45

else44:                                           ; preds = %ifend20
  %98 = tail call ptr @malloc(i32 24)
  %99 = load i64, ptr %memberidx.i91, align 4
  store i64 14, ptr %98, align 4
  %memberidx.i123 = getelementptr inbounds %ArrayType, ptr %98, i64 0, i32 1
  store ptr %element_type.1, ptr %memberidx.i123, align 8
  %memberidx1.i124 = getelementptr inbounds %ArrayType, ptr %98, i64 0, i32 2
  store i64 %99, ptr %memberidx1.i124, align 4
  br label %ifend45

ifend45:                                          ; preds = %if.entry43, %else44
  %is_constant.3 = phi i1 [ %is_constant.1, %else44 ], [ %spec.select, %if.entry43 ]
  %array_type.0 = phi ptr [ %98, %else44 ], [ %spec.select130, %if.entry43 ]
  %100 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %100, align 4
  %memberidx.i.i125 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i125, align 4
  %memberidx1.i.i126 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 1
  %memberidx.i127 = getelementptr inbounds %ArrayExpression, ptr %100, i64 0, i32 4
  store ptr %8, ptr %memberidx.i127, align 8
  store i1 %is_constant.3, ptr %memberidx1.i.i126, align 1
  %memberidx53 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  store ptr %array_type.0, ptr %memberidx53, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_enum_body(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %6 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %6, align 4
  %memberidx.i = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  store i1 true, ptr %memberidx.i, align 1
  br label %ifend

else:                                             ; preds = %3
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %4)
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry2

ifend:                                            ; preds = %TypeChecker_error.exit99, %else, %if.entry
  %enum_variant.0 = phi ptr [ %6, %if.entry ], [ %7, %TypeChecker_error.exit99 ], [ %7, %else ]
  %memberidx8 = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %memberidx8, align 8
  %memberidx9134 = getelementptr inbounds %Array_EnumNodeField_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx9134, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx44 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  br label %for.body

if.entry2:                                        ; preds = %else
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %15 = load ptr, ptr %14, align 8
  %memberidx5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx5, align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = alloca ptr, align 8
  %19 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %18, ptr nonnull @111, ptr %17)
  %20 = load ptr, ptr %18, align 8
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i86 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 %19, ptr %memberidx1.i87, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 %19, ptr %memberidx2.i, align 4
  tail call void @free(ptr %17)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx.i88 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %24 = load ptr, ptr %memberidx.i88, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %24, i64 0, i32 6
  %25 = load ptr, ptr %memberidx1.i89, align 8
  %26 = call ptr @malloc(i32 24)
  store i64 5, ptr %26, align 4
  %memberidx1.i.i90 = getelementptr inbounds %FloError, ptr %26, i64 0, i32 2
  store ptr %23, ptr %memberidx1.i.i90, align 8
  %memberidx2.i.i91 = getelementptr inbounds %FloError, ptr %26, i64 0, i32 1
  store ptr %21, ptr %memberidx2.i.i91, align 8
  %memberidx.i.i92 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i92, align 4
  %memberidx1.i2.i93 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i2.i93, align 4
  %.not.i.i94 = icmp slt i64 %27, %28
  br i1 %.not.i.i94, label %if.entry2.TypeChecker_error.exit99_crit_edge, label %if.entry.i.i97

if.entry2.TypeChecker_error.exit99_crit_edge:     ; preds = %if.entry2
  %memberidx4.i.i98.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 1
  %.pre140 = load ptr, ptr %memberidx4.i.i98.phi.trans.insert, align 8
  br label %TypeChecker_error.exit99

if.entry.i.i97:                                   ; preds = %if.entry2
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx1.i2.i93, align 4
  %memberidx2.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i.i96, align 8
  %31 = shl i64 %28, 4
  %32 = call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i.i96, align 8
  %.pre = load i64, ptr %memberidx.i.i92, align 4
  br label %TypeChecker_error.exit99

TypeChecker_error.exit99:                         ; preds = %if.entry2.TypeChecker_error.exit99_crit_edge, %if.entry.i.i97
  %33 = phi ptr [ %.pre140, %if.entry2.TypeChecker_error.exit99_crit_edge ], [ %32, %if.entry.i.i97 ]
  %34 = phi i64 [ %27, %if.entry2.TypeChecker_error.exit99_crit_edge ], [ %.pre, %if.entry.i.i97 ]
  %35 = add nsw i64 %34, 1
  store i64 %35, ptr %memberidx.i.i92, align 4
  %36 = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %36, align 8
  br label %ifend

for.body:                                         ; preds = %for.body.lr.ph, %Array_EnumField____sl__.exit
  %37 = phi ptr [ %11, %for.body.lr.ph ], [ %65, %Array_EnumField____sl__.exit ]
  %next_enum_value.0136 = phi i64 [ 0, %for.body.lr.ph ], [ %next_enum_value.1, %Array_EnumField____sl__.exit ]
  %i.0135 = phi i64 [ 0, %for.body.lr.ph ], [ %64, %Array_EnumField____sl__.exit ]
  %memberidx.i100 = getelementptr inbounds %Array_EnumNodeField_, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i100, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %i.0135
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %40, align 8
  %memberidx12 = getelementptr inbounds %IdentifierToken, ptr %41, i64 0, i32 2
  %42 = load ptr, ptr %memberidx12, align 8
  %43 = tail call ptr @malloc(i32 24)
  %memberidx.i101 = getelementptr inbounds %EnumField, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i101, align 8
  %44 = tail call ptr @malloc(i32 24)
  %45 = load ptr, ptr %1, align 8
  store i64 1, ptr %44, align 4
  %memberidx1.i105 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 1
  store ptr %45, ptr %memberidx1.i105, align 8
  %memberidx2.i106 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  store i64 %i.0135, ptr %memberidx2.i106, align 4
  store ptr %44, ptr %43, align 8
  %memberidx15 = getelementptr inbounds %EnumNodeField, ptr %40, i64 0, i32 1
  %46 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %46, null
  %memberidx41 = getelementptr inbounds %EnumField, ptr %43, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

common.ret:                                       ; preds = %Array_EnumField____sl__.exit, %ifend, %TypeChecker_error.exit, %TypeChecker_error.exit130
  ret void

if.entry16:                                       ; preds = %for.body
  %47 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %enum_variant.0, ptr nonnull %46)
  store ptr %47, ptr %memberidx41, align 8
  %memberidx22 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %48 = load i1, ptr %memberidx22, align 1
  br i1 %48, label %ifend25, label %if.entry23

else17:                                           ; preds = %for.body
  %49 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %49, align 4
  %memberidx.i.i107 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i107, align 4
  %memberidx1.i.i108 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i108, align 1
  %memberidx.i109 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 3
  %50 = call ptr @malloc(i32 9)
  store i64 6, ptr %50, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %50, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  %memberidx1.i110 = getelementptr inbounds %IntExpression, ptr %49, i64 0, i32 4
  store i64 %next_enum_value.0136, ptr %memberidx1.i110, align 4
  store i1 true, ptr %memberidx1.i.i108, align 1
  store ptr %49, ptr %memberidx41, align 8
  store ptr %enum_variant.0, ptr %memberidx.i109, align 8
  br label %ifend18

ifend18:                                          ; preds = %else17, %ifend32
  %next_enum_value.1.in = phi i64 [ %118, %ifend32 ], [ %next_enum_value.0136, %else17 ]
  %next_enum_value.1 = add nsw i64 %next_enum_value.1.in, 1
  %51 = load ptr, ptr %memberidx44, align 8
  %52 = load ptr, ptr %43, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %51, ptr %42, ptr %52)
  %53 = load ptr, ptr %memberidx46, align 8
  %memberidx.i112 = getelementptr inbounds %Array_EnumField_, ptr %53, i64 0, i32 2
  %54 = load i64, ptr %memberidx.i112, align 4
  %memberidx1.i113 = getelementptr inbounds %Array_EnumField_, ptr %53, i64 0, i32 3
  %55 = load i64, ptr %memberidx1.i113, align 4
  %.not.i = icmp slt i64 %54, %55
  br i1 %.not.i, label %ifend18.Array_EnumField____sl__.exit_crit_edge, label %if.entry.i

ifend18.Array_EnumField____sl__.exit_crit_edge:   ; preds = %ifend18
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_EnumField_, ptr %53, i64 0, i32 1
  %.pre146 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_EnumField____sl__.exit

if.entry.i:                                       ; preds = %ifend18
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx1.i113, align 4
  %memberidx2.i.i115 = getelementptr inbounds %Array_EnumField_, ptr %53, i64 0, i32 1
  %57 = load ptr, ptr %memberidx2.i.i115, align 8
  %58 = shl i64 %55, 4
  %59 = call ptr @realloc(ptr %57, i64 %58)
  store ptr %59, ptr %memberidx2.i.i115, align 8
  %.pre145 = load i64, ptr %memberidx.i112, align 4
  br label %Array_EnumField____sl__.exit

Array_EnumField____sl__.exit:                     ; preds = %ifend18.Array_EnumField____sl__.exit_crit_edge, %if.entry.i
  %60 = phi ptr [ %.pre146, %ifend18.Array_EnumField____sl__.exit_crit_edge ], [ %59, %if.entry.i ]
  %61 = phi i64 [ %54, %ifend18.Array_EnumField____sl__.exit_crit_edge ], [ %.pre145, %if.entry.i ]
  %62 = add nsw i64 %61, 1
  store i64 %62, ptr %memberidx.i112, align 4
  %63 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %43, ptr %63, align 8
  %64 = add nuw nsw i64 %i.0135, 1
  %65 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_EnumNodeField_, ptr %65, i64 0, i32 2
  %66 = load i64, ptr %memberidx9, align 4
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %for.body, label %common.ret

if.entry23:                                       ; preds = %if.entry16
  %68 = call ptr @malloc(i32 37)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %68, ptr noundef nonnull align 8 dereferenceable(37) @112, i64 37, i1 false)
  %69 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i.i116 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i.i116, align 8
  %memberidx1.i.i117 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 37, ptr %memberidx1.i.i117, align 4
  %memberidx2.i.i118 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 37, ptr %memberidx2.i.i118, align 4
  %70 = load ptr, ptr %memberidx15, align 8
  %71 = load ptr, ptr %70, align 8
  %memberidx.i119 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %72 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i120 = getelementptr inbounds %Compiler, ptr %72, i64 0, i32 6
  %73 = load ptr, ptr %memberidx1.i120, align 8
  %74 = call ptr @malloc(i32 24)
  store i64 5, ptr %74, align 4
  %memberidx1.i.i121 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 2
  store ptr %71, ptr %memberidx1.i.i121, align 8
  %memberidx2.i.i122 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 1
  store ptr %69, ptr %memberidx2.i.i122, align 8
  %memberidx.i.i123 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %memberidx.i.i123, align 4
  %memberidx1.i2.i124 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 3
  %76 = load i64, ptr %memberidx1.i2.i124, align 4
  %.not.i.i125 = icmp slt i64 %75, %76
  br i1 %.not.i.i125, label %if.entry23.TypeChecker_error.exit130_crit_edge, label %if.entry.i.i128

if.entry23.TypeChecker_error.exit130_crit_edge:   ; preds = %if.entry23
  %memberidx4.i.i129.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %.pre142 = load ptr, ptr %memberidx4.i.i129.phi.trans.insert, align 8
  br label %TypeChecker_error.exit130

if.entry.i.i128:                                  ; preds = %if.entry23
  %77 = shl nuw i64 %76, 1
  store i64 %77, ptr %memberidx1.i2.i124, align 4
  %memberidx2.i.i.i127 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %78 = load ptr, ptr %memberidx2.i.i.i127, align 8
  %79 = shl i64 %76, 4
  %80 = call ptr @realloc(ptr %78, i64 %79)
  store ptr %80, ptr %memberidx2.i.i.i127, align 8
  %.pre141 = load i64, ptr %memberidx.i.i123, align 4
  br label %TypeChecker_error.exit130

TypeChecker_error.exit130:                        ; preds = %if.entry23.TypeChecker_error.exit130_crit_edge, %if.entry.i.i128
  %81 = phi ptr [ %.pre142, %if.entry23.TypeChecker_error.exit130_crit_edge ], [ %80, %if.entry.i.i128 ]
  %82 = phi i64 [ %75, %if.entry23.TypeChecker_error.exit130_crit_edge ], [ %.pre141, %if.entry.i.i128 ]
  %83 = add nsw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i123, align 4
  %84 = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %74, ptr %84, align 8
  br label %common.ret

ifend25:                                          ; preds = %if.entry16
  %memberidx29 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %85 = load ptr, ptr %memberidx29, align 8
  %86 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %enum_variant.0, ptr %85)
  br i1 %86, label %ifend32, label %if.entry30

if.entry30:                                       ; preds = %ifend25
  %87 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %enum_variant.0)
  %88 = load ptr, ptr %87, align 8
  %memberidx33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %88, i64 0, i32 5
  %89 = load ptr, ptr %memberidx33, align 8
  %90 = call ptr %89(ptr nonnull %87)
  %91 = load ptr, ptr %memberidx41, align 8
  %memberidx35 = getelementptr inbounds %Expression, ptr %91, i64 0, i32 3
  %92 = load ptr, ptr %memberidx35, align 8
  %93 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %92)
  %94 = load ptr, ptr %93, align 8
  %memberidx36 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx36, align 8
  %96 = call ptr %95(ptr nonnull %93)
  %97 = alloca ptr, align 8
  %98 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %97, ptr nonnull @113, ptr %90, ptr %96)
  %99 = load ptr, ptr %97, align 8
  %100 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i102 = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 %98, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 %98, ptr %memberidx2.i104, align 4
  tail call void @free(ptr %90)
  tail call void @free(ptr %96)
  %101 = load ptr, ptr %memberidx15, align 8
  %102 = load ptr, ptr %101, align 8
  %memberidx.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %103 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %103, i64 0, i32 6
  %104 = load ptr, ptr %memberidx1.i, align 8
  %105 = call ptr @malloc(i32 24)
  store i64 5, ptr %105, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %105, i64 0, i32 2
  store ptr %102, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %105, i64 0, i32 1
  store ptr %100, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 2
  %106 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 3
  %107 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %106, %107
  br i1 %.not.i.i, label %if.entry30.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry30.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry30
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %.pre144 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry30
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %109 = load ptr, ptr %memberidx2.i.i.i, align 8
  %110 = shl i64 %107, 4
  %111 = call ptr @realloc(ptr %109, i64 %110)
  store ptr %111, ptr %memberidx2.i.i.i, align 8
  %.pre143 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry30.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %112 = phi ptr [ %.pre144, %if.entry30.TypeChecker_error.exit_crit_edge ], [ %111, %if.entry.i.i ]
  %113 = phi i64 [ %106, %if.entry30.TypeChecker_error.exit_crit_edge ], [ %.pre143, %if.entry.i.i ]
  %114 = add nsw i64 %113, 1
  store i64 %114, ptr %memberidx.i.i, align 4
  %115 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %105, ptr %115, align 8
  br label %common.ret

ifend32:                                          ; preds = %ifend25
  %116 = load ptr, ptr %0, align 8
  %117 = load ptr, ptr %memberidx41, align 8
  %118 = call fastcc i64 @evaluate_const_int_expression(ptr %116, ptr %117)
  br label %ifend18
}

define internal fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %Type, align 8
  %memberidx = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  switch i64 %5, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 3, label %if.entry6
    i64 2, label %if.entry10
    i64 6, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 10, label %if.entry30
    i64 16, label %if.entry34
    i64 11, label %if.entry38
    i64 12, label %if.entry42
    i64 13, label %if.entry46
    i64 14, label %if.entry50
    i64 15, label %if.entry54
    i64 17, label %if.entry58
  ]

common.ret:                                       ; preds = %3, %if.entry8.i, %ifend.i128, %if.entry42.i, %ifend35.i, %if.entry58, %if.entry54, %if.entry50, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %TypeChecker_check_tuple_expression.exit, %if.entry14, %TypeChecker_check_string_expression.exit, %if.entry6
  %common.ret.op = phi ptr [ %60, %if.entry6 ], [ %99, %TypeChecker_check_string_expression.exit ], [ %103, %if.entry14 ], [ %common.ret.op.i, %TypeChecker_check_tuple_expression.exit ], [ %158, %if.entry22 ], [ %159, %if.entry26 ], [ %160, %if.entry30 ], [ %161, %if.entry34 ], [ %162, %if.entry38 ], [ %163, %if.entry42 ], [ %164, %if.entry46 ], [ %165, %if.entry50 ], [ %166, %if.entry54 ], [ %167, %if.entry58 ], [ %8, %ifend35.i ], [ %8, %if.entry42.i ], [ %43, %ifend.i128 ], [ %43, %if.entry8.i ], [ null, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %IntExpressionNode, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %IntToken, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1.i, align 4
  %8 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %8, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %9, align 4
  %memberidx.i5.i.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i, align 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %IntExpression, ptr %8, i64 0, i32 4
  store i64 %7, ptr %memberidx1.i.i, align 4
  store i1 true, ptr %memberidx1.i.i.i, align 1
  %10 = load i64, ptr %1, align 4
  %11 = add i64 %10, -1
  %12 = icmp ult i64 %11, 7
  br i1 %12, label %ifend.i, label %ifend35.i

ifend.i:                                          ; preds = %if.entry
  store i64 %10, ptr %9, align 4
  %memberidx7.i = getelementptr inbounds %IntType, ptr %1, i64 0, i32 1
  %13 = load i1, ptr %memberidx7.i, align 1
  store i1 %13, ptr %memberidx.i5.i.i, align 1
  %14 = add i64 %7, -8
  %15 = icmp ult i64 %14, -16
  %16 = icmp eq i64 %10, 1
  %17 = and i1 %15, %16
  %18 = select i1 %17, i64 2, i64 %10
  %19 = add i64 %7, -128
  %20 = icmp ult i64 %19, -256
  %21 = icmp eq i64 %18, 2
  %22 = and i1 %20, %21
  %23 = select i1 %22, i64 3, i64 %18
  %.demorgan = and i1 %15, %16
  %.demorgan190 = and i1 %20, %21
  %24 = or i1 %.demorgan, %.demorgan190
  %25 = add i64 %7, -32768
  %26 = icmp ult i64 %25, -65536
  %27 = icmp eq i64 %23, 3
  %28 = and i1 %26, %27
  %spec.select188 = select i1 %28, i64 4, i64 %23
  %.demorgan191 = and i1 %26, %27
  %29 = or i1 %24, %.demorgan191
  %30 = add i64 %7, -2147483648
  %31 = icmp ult i64 %30, -4294967296
  %32 = icmp eq i64 %spec.select188, 4
  %33 = and i1 %31, %32
  %spec.select189 = select i1 %33, i64 5, i64 %spec.select188
  %.demorgan192 = and i1 %31, %32
  %34 = or i1 %29, %.demorgan192
  br i1 %34, label %35, label %ifend35.i

35:                                               ; preds = %ifend.i
  store i64 %spec.select189, ptr %9, align 4
  br label %ifend35.i

ifend35.i:                                        ; preds = %35, %ifend.i, %if.entry
  %36 = phi i64 [ 6, %if.entry ], [ %spec.select189, %ifend.i ], [ %spec.select189, %35 ]
  %37 = icmp eq i64 %7, -9223372036854775808
  %38 = add nsw i64 %36, -5
  %39 = icmp ult i64 %38, 2
  %40 = and i1 %37, %39
  br i1 %40, label %if.entry42.i, label %common.ret

if.entry42.i:                                     ; preds = %ifend35.i
  store i64 7, ptr %9, align 4
  br label %common.ret

if.entry2:                                        ; preds = %3
  %memberidx.i118 = getelementptr inbounds %FloatExpressionNode, ptr %2, i64 0, i32 3
  %41 = load ptr, ptr %memberidx.i118, align 8
  %memberidx1.i119 = getelementptr inbounds %FloatToken, ptr %41, i64 0, i32 2
  %42 = load double, ptr %memberidx1.i119, align 8
  %43 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %43, align 4
  %memberidx.i.i.i120 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i.i120, align 4
  %memberidx1.i.i.i121 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i.i122 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  %44 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %44, align 4
  store ptr %44, ptr %memberidx.i.i122, align 8
  %memberidx1.i.i123 = getelementptr inbounds %FloatExpression, ptr %43, i64 0, i32 4
  store double %42, ptr %memberidx1.i.i123, align 8
  store i1 true, ptr %memberidx1.i.i.i121, align 1
  %45 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %45, ptr noundef nonnull align 8 dereferenceable(6) @221, i64 6, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i20.i = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i20.i, align 8
  %memberidx1.i.i21.i = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i21.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i.i, align 4
  %47 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %48 = tail call ptr %47(ptr nonnull %46)
  %49 = tail call double @atof(ptr %48)
  tail call void @free(ptr %48)
  %50 = load i64, ptr %1, align 4
  %51 = and i64 %50, -2
  %52 = icmp eq i64 %51, 8
  br i1 %52, label %if.entry.i126, label %if.entry2.ifend.i128_crit_edge

if.entry2.ifend.i128_crit_edge:                   ; preds = %if.entry2
  %.pre187 = load i64, ptr %44, align 4
  br label %ifend.i128

if.entry.i126:                                    ; preds = %if.entry2
  store i64 %50, ptr %44, align 4
  br label %ifend.i128

ifend.i128:                                       ; preds = %if.entry2.ifend.i128_crit_edge, %if.entry.i126
  %53 = phi i64 [ %.pre187, %if.entry2.ifend.i128_crit_edge ], [ %50, %if.entry.i126 ]
  %54 = fneg double %49
  %55 = fcmp olt double %42, %54
  %56 = fcmp ogt double %42, %49
  %57 = or i1 %55, %56
  %58 = icmp eq i64 %53, 8
  %59 = and i1 %57, %58
  br i1 %59, label %if.entry8.i, label %common.ret

if.entry8.i:                                      ; preds = %ifend.i128
  store i64 9, ptr %44, align 4
  br label %common.ret

if.entry6:                                        ; preds = %3
  %60 = tail call ptr @malloc(i32 33)
  %memberidx.i129 = getelementptr inbounds %CharExpressionNode, ptr %2, i64 0, i32 3
  %61 = load ptr, ptr %memberidx.i129, align 8
  %memberidx1.i130 = getelementptr inbounds %CharToken, ptr %61, i64 0, i32 2
  %62 = load i8, ptr %memberidx1.i130, align 1
  %63 = zext i8 %62 to i64
  store i64 8, ptr %60, align 4
  %memberidx.i.i.i131 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i131, align 4
  %memberidx1.i.i.i132 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 1
  %memberidx.i.i133 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 3
  %64 = tail call ptr @malloc(i32 9)
  %memberidx.i5.i.i134 = getelementptr inbounds %IntType, ptr %64, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i134, align 1
  store ptr %64, ptr %memberidx.i.i133, align 8
  %memberidx1.i.i135 = getelementptr inbounds %IntExpression, ptr %60, i64 0, i32 4
  store i64 %63, ptr %memberidx1.i.i135, align 4
  store i1 true, ptr %memberidx1.i.i.i132, align 1
  store i64 2, ptr %64, align 4
  br label %common.ret

if.entry10:                                       ; preds = %3
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %65, align 8
  %memberidx.i.i149 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i149, align 4
  %memberidx1.i.i150 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i150, align 4
  %memberidx2.i.i151 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 1
  %66 = tail call ptr @malloc(i32 64)
  store ptr %66, ptr %memberidx2.i.i151, align 8
  store i64 0, ptr %memberidx.i.i149, align 4
  %memberidx2.i153 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 4
  %67 = load ptr, ptr %memberidx2.i153, align 8
  %68 = tail call ptr @malloc(i32 25)
  %memberidx.i21.i = getelementptr inbounds %Array_ExpressionNode_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i21.i, align 8
  %memberidx1.i22.i = getelementptr inbounds %Array_ExpressionNode_, ptr %67, i64 0, i32 2
  %70 = load i64, ptr %memberidx1.i22.i, align 4
  store i1 false, ptr %68, align 1
  %memberidx1.i.i.i154 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 1
  %memberidx2.i.i.i155 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 3
  store ptr %69, ptr %memberidx2.i.i.i155, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 2
  store i64 %70, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i154, align 4
  %71 = icmp slt i64 %70, 1
  br i1 %71, label %for.end.i164, label %for.body.i159

for.body.i159:                                    ; preds = %if.entry10, %Array_Expression____sl__.exit.i163
  %72 = phi i64 [ %85, %Array_Expression____sl__.exit.i163 ], [ 1, %if.entry10 ]
  %arg.0.i175.in = phi ptr [ %86, %Array_Expression____sl__.exit.i163 ], [ %69, %if.entry10 ]
  %arg.0.i175 = load ptr, ptr %arg.0.i175.in, align 8
  %73 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %73, align 4
  %74 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %73, ptr %arg.0.i175)
  %75 = load i64, ptr %memberidx.i.i149, align 4
  %76 = load i64, ptr %memberidx1.i.i150, align 4
  %.not.i.i158 = icmp slt i64 %75, %76
  br i1 %.not.i.i158, label %for.body.i159.Array_Expression____sl__.exit.i163_crit_edge, label %if.entry.i.i161

for.body.i159.Array_Expression____sl__.exit.i163_crit_edge: ; preds = %for.body.i159
  %.pre186 = load ptr, ptr %memberidx2.i.i151, align 8
  br label %Array_Expression____sl__.exit.i163

if.entry.i.i161:                                  ; preds = %for.body.i159
  %77 = shl nuw i64 %76, 1
  store i64 %77, ptr %memberidx1.i.i150, align 4
  %78 = load ptr, ptr %memberidx2.i.i151, align 8
  %79 = shl i64 %76, 4
  %80 = tail call ptr @realloc(ptr %78, i64 %79)
  store ptr %80, ptr %memberidx2.i.i151, align 8
  %.pre185 = load i64, ptr %memberidx.i.i149, align 4
  br label %Array_Expression____sl__.exit.i163

Array_Expression____sl__.exit.i163:               ; preds = %for.body.i159.Array_Expression____sl__.exit.i163_crit_edge, %if.entry.i.i161
  %81 = phi ptr [ %80, %if.entry.i.i161 ], [ %.pre186, %for.body.i159.Array_Expression____sl__.exit.i163_crit_edge ]
  %82 = phi i64 [ %.pre185, %if.entry.i.i161 ], [ %75, %for.body.i159.Array_Expression____sl__.exit.i163_crit_edge ]
  %83 = add nsw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i149, align 4
  %84 = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %74, ptr %84, align 8
  %85 = add nuw nsw i64 %72, 1
  store i64 %85, ptr %memberidx1.i.i.i154, align 4
  %86 = getelementptr inbounds ptr, ptr %69, i64 %72
  %.not = icmp slt i64 %72, %70
  br i1 %.not, label %for.body.i159, label %for.end.i164

for.end.i164:                                     ; preds = %Array_Expression____sl__.exit.i163, %if.entry10
  tail call void @free(ptr nonnull %68)
  %87 = load i64, ptr %1, align 4
  %88 = icmp eq i64 %87, 13
  br i1 %88, label %if.entry.i32.i, label %if.entry.i165

if.entry.i32.i:                                   ; preds = %for.end.i164
  %memberidx1.i31.i = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %89 = load ptr, ptr %memberidx1.i31.i, align 8
  %90 = load i64, ptr %89, align 4
  %91 = add i64 %90, -1
  %92 = icmp ult i64 %91, 7
  br i1 %92, label %if.entry2.i.i, label %if.entry.i165

if.entry2.i.i:                                    ; preds = %if.entry.i32.i
  %93 = icmp ne i64 %90, 2
  %memberidx6.i.i = getelementptr inbounds %IntType, ptr %89, i64 0, i32 1
  %94 = load i1, ptr %memberidx6.i.i, align 1
  %95 = or i1 %93, %94
  br i1 %95, label %if.entry.i165, label %TypeChecker_check_string_expression.exit

if.entry.i165:                                    ; preds = %for.end.i164, %if.entry.i32.i, %if.entry2.i.i
  %96 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %96, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %97 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %97, align 8
  %memberidx.i.i33.i = getelementptr inbounds %string, ptr %97, i64 0, i32 1
  store ptr %96, ptr %memberidx.i.i33.i, align 8
  %memberidx1.i.i34.i = getelementptr inbounds %string, ptr %97, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i34.i, align 4
  %memberidx2.i.i35.i = getelementptr inbounds %string, ptr %97, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i35.i, align 4
  %98 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %97)
  br label %TypeChecker_check_string_expression.exit

TypeChecker_check_string_expression.exit:         ; preds = %if.entry2.i.i, %if.entry.i165
  %is_const.1.i = phi i1 [ false, %if.entry.i165 ], [ %71, %if.entry2.i.i ]
  %expected_type.0.i = phi ptr [ %98, %if.entry.i165 ], [ %1, %if.entry2.i.i ]
  %99 = tail call ptr @malloc(i32 49)
  %memberidx4.i166 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 3
  %100 = load ptr, ptr %memberidx4.i166, align 8
  %memberidx5.i = getelementptr inbounds %StrToken, ptr %100, i64 0, i32 2
  %101 = load ptr, ptr %memberidx5.i, align 8
  %memberidx7.i167 = getelementptr inbounds %StrToken, ptr %100, i64 0, i32 3
  %102 = load ptr, ptr %memberidx7.i167, align 8
  store i64 8, ptr %99, align 4
  %memberidx.i.i36.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i36.i, align 4
  %memberidx1.i.i37.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 1
  %memberidx.i38.i = getelementptr inbounds %StringExpression, ptr %99, i64 0, i32 6
  store ptr %65, ptr %memberidx.i38.i, align 8
  %memberidx1.i39.i = getelementptr inbounds %StringExpression, ptr %99, i64 0, i32 5
  store ptr %102, ptr %memberidx1.i39.i, align 8
  %memberidx2.i40.i168 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %StringExpression, ptr %99, i64 0, i32 4
  store ptr %101, ptr %memberidx3.i.i, align 8
  store ptr %expected_type.0.i, ptr %memberidx2.i40.i168, align 8
  store i1 %is_const.1.i, ptr %memberidx1.i.i37.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %3
  %103 = tail call fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry18:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store i64 21, ptr %4, align 8
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %104, align 8
  %memberidx.i.i138 = getelementptr inbounds %Array_Expression_, ptr %104, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i138, align 4
  %memberidx1.i.i139 = getelementptr inbounds %Array_Expression_, ptr %104, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i139, align 4
  %memberidx2.i.i140 = getelementptr inbounds %Array_Expression_, ptr %104, i64 0, i32 1
  %105 = tail call ptr @malloc(i32 64)
  store ptr %105, ptr %memberidx2.i.i140, align 8
  store i64 0, ptr %memberidx.i.i138, align 4
  %106 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %106, align 4
  %memberidx.i39.i = getelementptr inbounds %TupleType, ptr %106, i64 0, i32 1
  %107 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %107, align 8
  %memberidx.i.i.i142 = getelementptr inbounds %Array_Type_, ptr %107, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i142, align 4
  %memberidx1.i.i.i143 = getelementptr inbounds %Array_Type_, ptr %107, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i143, align 4
  %memberidx2.i.i.i144 = getelementptr inbounds %Array_Type_, ptr %107, i64 0, i32 1
  %108 = tail call ptr @malloc(i32 64)
  store ptr %108, ptr %memberidx2.i.i.i144, align 8
  store i64 0, ptr %memberidx.i.i.i142, align 4
  store ptr %107, ptr %memberidx.i39.i, align 8
  %memberidx3.i146 = getelementptr inbounds %TupleExpressionNode, ptr %2, i64 0, i32 3
  %109 = load ptr, ptr %memberidx3.i146, align 8
  %memberidx4.i177 = getelementptr inbounds %Array_ExpressionNode_, ptr %109, i64 0, i32 2
  %110 = load i64, ptr %memberidx4.i177, align 4
  %111 = icmp sgt i64 %110, 0
  br i1 %111, label %for.body.i.lr.ph, label %for.end.i

for.body.i.lr.ph:                                 ; preds = %if.entry18
  %112 = load i64, ptr %1, align 4
  %113 = icmp eq i64 %112, 15
  %spec.select = select i1 %113, ptr %1, ptr null
  %.not.i = icmp eq ptr %spec.select, null
  %memberidx8.i147 = getelementptr inbounds %TupleType, ptr %spec.select, i64 0, i32 1
  %memberidx.i45.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_Expression____sl__.exit.i
  %114 = phi ptr [ %109, %for.body.i.lr.ph ], [ %155, %Array_Expression____sl__.exit.i ]
  %i.0.i179 = phi i64 [ 0, %for.body.i.lr.ph ], [ %154, %Array_Expression____sl__.exit.i ]
  %is_constant.0.i178 = phi i1 [ true, %for.body.i.lr.ph ], [ %131, %Array_Expression____sl__.exit.i ]
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

for.end.i:                                        ; preds = %Array_Expression____sl__.exit.i, %if.entry18
  %is_constant.0.i.lcssa = phi i1 [ true, %if.entry18 ], [ %131, %Array_Expression____sl__.exit.i ]
  %115 = call ptr @malloc(i32 33)
  store i64 8, ptr %115, align 4
  %memberidx.i.i41.i = getelementptr inbounds %Expression, ptr %115, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i41.i, align 4
  %memberidx1.i.i42.i = getelementptr inbounds %Expression, ptr %115, i64 0, i32 1
  %memberidx.i43.i = getelementptr inbounds %TupleExpression, ptr %115, i64 0, i32 4
  store ptr %104, ptr %memberidx.i43.i, align 8
  store i1 %is_constant.0.i.lcssa, ptr %memberidx1.i.i42.i, align 1
  %memberidx22.i = getelementptr inbounds %Expression, ptr %115, i64 0, i32 3
  store ptr %106, ptr %memberidx22.i, align 8
  br label %TypeChecker_check_tuple_expression.exit

if.entry5.i:                                      ; preds = %for.body.i
  %116 = load ptr, ptr %memberidx8.i147, align 8
  %memberidx9.i = getelementptr inbounds %Array_Type_, ptr %116, i64 0, i32 2
  %117 = load i64, ptr %memberidx9.i, align 4
  %118 = icmp slt i64 %i.0.i179, %117
  br i1 %118, label %if.entry10.i148, label %ifend7.i

ifend7.i:                                         ; preds = %if.entry10.i148, %if.entry5.i, %for.body.i
  %expected_element_type.0.i = phi ptr [ %129, %if.entry10.i148 ], [ %4, %if.entry5.i ], [ %4, %for.body.i ]
  %memberidx.i44.i = getelementptr inbounds %Array_ExpressionNode_, ptr %114, i64 0, i32 1
  %119 = load ptr, ptr %memberidx.i44.i, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %i.0.i179
  %121 = load ptr, ptr %120, align 8
  %122 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_element_type.0.i, ptr %121)
  %123 = load ptr, ptr %memberidx.i45.i, align 8
  %memberidx1.i46.i = getelementptr inbounds %Compiler, ptr %123, i64 0, i32 6
  %124 = load ptr, ptr %memberidx1.i46.i, align 8
  %memberidx2.i47.i = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 2
  %125 = load i64, ptr %memberidx2.i47.i, align 4
  %126 = icmp sgt i64 %125, 0
  br i1 %126, label %TypeChecker_check_tuple_expression.exit, label %ifend17.i

if.entry10.i148:                                  ; preds = %if.entry5.i
  %memberidx.i48.i = getelementptr inbounds %Array_Type_, ptr %116, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i48.i, align 8
  %128 = getelementptr inbounds ptr, ptr %127, i64 %i.0.i179
  %129 = load ptr, ptr %128, align 8
  br label %ifend7.i

ifend17.i:                                        ; preds = %ifend7.i
  %memberidx18.i = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  %130 = load i1, ptr %memberidx18.i, align 1
  %131 = and i1 %is_constant.0.i178, %130
  %132 = load ptr, ptr %memberidx.i39.i, align 8
  %memberidx20.i = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %133 = load ptr, ptr %memberidx20.i, align 8
  %memberidx.i49.i = getelementptr inbounds %Array_Type_, ptr %132, i64 0, i32 2
  %134 = load i64, ptr %memberidx.i49.i, align 4
  %memberidx1.i50.i = getelementptr inbounds %Array_Type_, ptr %132, i64 0, i32 3
  %135 = load i64, ptr %memberidx1.i50.i, align 4
  %.not.i.i = icmp slt i64 %134, %135
  br i1 %.not.i.i, label %ifend17.i.Array_Type____sl__.exit.i_crit_edge, label %if.entry.i.i

ifend17.i.Array_Type____sl__.exit.i_crit_edge:    ; preds = %ifend17.i
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %132, i64 0, i32 1
  %.pre182 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Array_Type____sl__.exit.i

if.entry.i.i:                                     ; preds = %ifend17.i
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx1.i50.i, align 4
  %memberidx2.i.i52.i = getelementptr inbounds %Array_Type_, ptr %132, i64 0, i32 1
  %137 = load ptr, ptr %memberidx2.i.i52.i, align 8
  %138 = shl i64 %135, 4
  %139 = call ptr @realloc(ptr %137, i64 %138)
  store ptr %139, ptr %memberidx2.i.i52.i, align 8
  %.pre = load i64, ptr %memberidx.i49.i, align 4
  br label %Array_Type____sl__.exit.i

Array_Type____sl__.exit.i:                        ; preds = %ifend17.i.Array_Type____sl__.exit.i_crit_edge, %if.entry.i.i
  %140 = phi ptr [ %139, %if.entry.i.i ], [ %.pre182, %ifend17.i.Array_Type____sl__.exit.i_crit_edge ]
  %141 = phi i64 [ %.pre, %if.entry.i.i ], [ %134, %ifend17.i.Array_Type____sl__.exit.i_crit_edge ]
  %142 = add nsw i64 %141, 1
  store i64 %142, ptr %memberidx.i49.i, align 4
  %143 = getelementptr inbounds ptr, ptr %140, i64 %141
  store ptr %133, ptr %143, align 8
  %144 = load i64, ptr %memberidx.i.i138, align 4
  %145 = load i64, ptr %memberidx1.i.i139, align 4
  %.not.i55.i = icmp slt i64 %144, %145
  br i1 %.not.i55.i, label %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge, label %if.entry.i58.i

Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge: ; preds = %Array_Type____sl__.exit.i
  %.pre184 = load ptr, ptr %memberidx2.i.i140, align 8
  br label %Array_Expression____sl__.exit.i

if.entry.i58.i:                                   ; preds = %Array_Type____sl__.exit.i
  %146 = shl nuw i64 %145, 1
  store i64 %146, ptr %memberidx1.i.i139, align 4
  %147 = load ptr, ptr %memberidx2.i.i140, align 8
  %148 = shl i64 %145, 4
  %149 = call ptr @realloc(ptr %147, i64 %148)
  store ptr %149, ptr %memberidx2.i.i140, align 8
  %.pre183 = load i64, ptr %memberidx.i.i138, align 4
  br label %Array_Expression____sl__.exit.i

Array_Expression____sl__.exit.i:                  ; preds = %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge, %if.entry.i58.i
  %150 = phi ptr [ %149, %if.entry.i58.i ], [ %.pre184, %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge ]
  %151 = phi i64 [ %.pre183, %if.entry.i58.i ], [ %144, %Array_Type____sl__.exit.i.Array_Expression____sl__.exit.i_crit_edge ]
  %152 = add nsw i64 %151, 1
  store i64 %152, ptr %memberidx.i.i138, align 4
  %153 = getelementptr inbounds ptr, ptr %150, i64 %151
  store ptr %122, ptr %153, align 8
  %154 = add nuw nsw i64 %i.0.i179, 1
  %155 = load ptr, ptr %memberidx3.i146, align 8
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %155, i64 0, i32 2
  %156 = load i64, ptr %memberidx4.i, align 4
  %157 = icmp slt i64 %154, %156
  br i1 %157, label %for.body.i, label %for.end.i

TypeChecker_check_tuple_expression.exit:          ; preds = %ifend7.i, %for.end.i
  %common.ret.op.i = phi ptr [ %115, %for.end.i ], [ null, %ifend7.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %common.ret

if.entry22:                                       ; preds = %3
  %158 = tail call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %159 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry30:                                       ; preds = %3
  %160 = tail call fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry34:                                       ; preds = %3
  %161 = tail call fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry38:                                       ; preds = %3
  %162 = tail call fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry42:                                       ; preds = %3
  %163 = tail call fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry46:                                       ; preds = %3
  %164 = tail call fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %165 = tail call fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry54:                                       ; preds = %3
  %166 = tail call fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry58:                                       ; preds = %3
  %167 = tail call fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_access_expr(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %4, i64 0, i32 2
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, 4
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %3
  %memberidx2.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx2.i, align 8
  %10 = tail call i64 @memcmp(ptr %9, ptr nonnull %6, i64 4)
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %TypeChecker_error.exit131, %ifend11, %TypeChecker_error.exit, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %12, %if.entry ], [ %20, %if.entry2 ], [ null, %TypeChecker_error.exit ], [ %49, %ifend11 ], [ null, %TypeChecker_error.exit131 ], [ %84, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %ifend.i
  %12 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %12, align 4
  %memberidx.i.i69 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i69, align 4
  %memberidx1.i.i70 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %13, align 4
  %memberidx.i71 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i71, align 8
  %memberidx1.i72 = getelementptr inbounds %BooleanExpression, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i72, align 1
  store i1 true, ptr %memberidx1.i.i70, align 1
  br label %common.ret

ifend:                                            ; preds = %3, %ifend.i
  %14 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %14, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i74 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i74, align 8
  %memberidx1.i.i75 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i75, align 4
  %memberidx2.i.i76 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i76, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i79 = icmp eq i64 %16, 5
  br i1 %.not.i79, label %ifend.i83, label %ifend4

ifend.i83:                                        ; preds = %ifend
  %memberidx2.i81 = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i81, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 5)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend.i83
  %20 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %20, align 4
  %memberidx.i.i85 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i85, align 4
  %memberidx1.i.i86 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %21, align 4
  %memberidx.i87 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx.i87, align 8
  %memberidx1.i88 = getelementptr inbounds %BooleanExpression, ptr %20, i64 0, i32 4
  store i1 false, ptr %memberidx1.i88, align 1
  store i1 true, ptr %memberidx1.i.i86, align 1
  br label %common.ret

ifend4:                                           ; preds = %ifend, %ifend.i83
  %22 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i.i90 = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %22, ptr %memberidx.i.i90, align 8
  %memberidx1.i.i91 = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i91, align 4
  %memberidx2.i.i92 = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i92, align 4
  %24 = load i64, ptr %memberidx.i, align 4
  %.not.i95 = icmp eq i64 %24, 4
  br i1 %.not.i95, label %ifend.i99, label %ifend7

ifend.i99:                                        ; preds = %ifend4
  %memberidx2.i97 = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i97, align 8
  %26 = tail call i64 @memcmp(ptr %25, ptr nonnull %22, i64 4)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend.i99
  %28 = load i64, ptr %1, align 4
  %29 = icmp eq i64 %28, 10
  br i1 %29, label %if.entry9, label %ifend11

ifend7:                                           ; preds = %ifend4, %ifend.i99
  %30 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr nonnull %5)
  %31 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %31, align 4
  %.not = icmp eq ptr %30, null
  br i1 %.not, label %ifend16, label %if.entry14

if.entry9:                                        ; preds = %if.entry5
  %32 = tail call ptr @malloc(i32 37)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %32, ptr noundef nonnull align 8 dereferenceable(37) @170, i64 37, i1 false)
  %33 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i104 = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i104, align 8
  %memberidx1.i.i105 = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 37, ptr %memberidx1.i.i105, align 4
  %memberidx2.i.i106 = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 37, ptr %memberidx2.i.i106, align 4
  %34 = load ptr, ptr %memberidx, align 8
  %memberidx13 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx13, align 8
  %memberidx.i107 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %36 = load ptr, ptr %memberidx.i107, align 8
  %memberidx1.i108 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 6
  %37 = load ptr, ptr %memberidx1.i108, align 8
  %38 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %38, align 4
  %memberidx1.i.i109 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 2
  store ptr %35, ptr %memberidx1.i.i109, align 8
  %memberidx2.i.i110 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 1
  store ptr %33, ptr %memberidx2.i.i110, align 8
  %memberidx.i.i111 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 2
  %39 = load i64, ptr %memberidx.i.i111, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 3
  %40 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %39, %40
  br i1 %.not.i.i, label %if.entry9.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry9.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry9
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %.pre160 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry9
  %41 = shl nuw i64 %40, 1
  store i64 %41, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %42 = load ptr, ptr %memberidx2.i.i.i, align 8
  %43 = shl i64 %40, 4
  %44 = tail call ptr @realloc(ptr %42, i64 %43)
  store ptr %44, ptr %memberidx2.i.i.i, align 8
  %.pre159 = load i64, ptr %memberidx.i.i111, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %45 = phi ptr [ %.pre160, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %44, %if.entry.i.i ]
  %46 = phi i64 [ %39, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %.pre159, %if.entry.i.i ]
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr %memberidx.i.i111, align 4
  %48 = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %38, ptr %48, align 8
  br label %common.ret

ifend11:                                          ; preds = %if.entry5
  %49 = tail call ptr @malloc(i32 25)
  store i64 8, ptr %49, align 4
  %memberidx.i.i113 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 2
  store i64 5, ptr %memberidx.i.i113, align 4
  %memberidx1.i.i114 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 1
  %memberidx.i115 = getelementptr inbounds %Expression, ptr %49, i64 0, i32 3
  store ptr %1, ptr %memberidx.i115, align 8
  store i1 true, ptr %memberidx1.i.i114, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend7
  %50 = load i64, ptr %30, align 4
  switch i64 %50, label %else31 [
    i64 0, label %if.entry18
    i64 1, label %if.entry24
    i64 2, label %if.entry30
  ]

ifend16:                                          ; preds = %ifend7
  %51 = load ptr, ptr %5, align 8
  %memberidx44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx44, align 8
  %53 = tail call ptr %52(ptr nonnull %5)
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @171, ptr %53)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i117 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i118, align 4
  %memberidx2.i119 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 %55, ptr %memberidx2.i119, align 4
  tail call void @free(ptr %53)
  %58 = load ptr, ptr %2, align 8
  %memberidx.i120 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %59 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i121 = getelementptr inbounds %Compiler, ptr %59, i64 0, i32 6
  %60 = load ptr, ptr %memberidx1.i121, align 8
  %61 = call ptr @malloc(i32 24)
  store i64 1, ptr %61, align 4
  %memberidx1.i.i122 = getelementptr inbounds %FloError, ptr %61, i64 0, i32 2
  store ptr %58, ptr %memberidx1.i.i122, align 8
  %memberidx2.i.i123 = getelementptr inbounds %FloError, ptr %61, i64 0, i32 1
  store ptr %57, ptr %memberidx2.i.i123, align 8
  %memberidx.i.i124 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 2
  %62 = load i64, ptr %memberidx.i.i124, align 4
  %memberidx1.i2.i125 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 3
  %63 = load i64, ptr %memberidx1.i2.i125, align 4
  %.not.i.i126 = icmp slt i64 %62, %63
  br i1 %.not.i.i126, label %ifend16.TypeChecker_error.exit131_crit_edge, label %if.entry.i.i129

ifend16.TypeChecker_error.exit131_crit_edge:      ; preds = %ifend16
  %memberidx4.i.i130.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %.pre158 = load ptr, ptr %memberidx4.i.i130.phi.trans.insert, align 8
  br label %TypeChecker_error.exit131

if.entry.i.i129:                                  ; preds = %ifend16
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx1.i2.i125, align 4
  %memberidx2.i.i.i128 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i.i128, align 8
  %66 = shl i64 %63, 4
  %67 = call ptr @realloc(ptr %65, i64 %66)
  store ptr %67, ptr %memberidx2.i.i.i128, align 8
  %.pre = load i64, ptr %memberidx.i.i124, align 4
  br label %TypeChecker_error.exit131

TypeChecker_error.exit131:                        ; preds = %ifend16.TypeChecker_error.exit131_crit_edge, %if.entry.i.i129
  %68 = phi ptr [ %.pre158, %ifend16.TypeChecker_error.exit131_crit_edge ], [ %67, %if.entry.i.i129 ]
  %69 = phi i64 [ %62, %ifend16.TypeChecker_error.exit131_crit_edge ], [ %.pre, %if.entry.i.i129 ]
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %memberidx.i.i124, align 4
  %71 = getelementptr inbounds ptr, ptr %68, i64 %69
  store ptr %61, ptr %71, align 8
  br label %common.ret

if.entry18:                                       ; preds = %if.entry14
  %72 = load ptr, ptr %0, align 8
  %memberidx.i132 = getelementptr inbounds %Program, ptr %72, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i132, align 8
  %memberidx1.i133 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %74 = load i64, ptr %memberidx1.i133, align 4
  %memberidx.i.i134 = getelementptr inbounds %Array_Module_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i134, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx2.i135 = getelementptr inbounds %Module, ptr %77, i64 0, i32 4
  %78 = load ptr, ptr %memberidx2.i135, align 8
  %memberidx3.i136 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %79 = load i64, ptr %memberidx3.i136, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Function_, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i5.i, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  %82 = load ptr, ptr %81, align 8
  %memberidx22 = getelementptr inbounds %Function, ptr %82, i64 0, i32 4
  %83 = load ptr, ptr %memberidx22, align 8
  br label %ifend20

ifend20:                                          ; preds = %if.entry41, %else38, %if.entry37, %if.entry30, %if.entry24, %if.entry18
  %var_ty.0 = phi ptr [ %83, %if.entry18 ], [ %98, %if.entry24 ], [ %110, %if.entry30 ], [ %113, %if.entry37 ], [ %115, %if.entry41 ], [ %31, %else38 ]
  %84 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %84, align 4
  %memberidx.i.i137 = getelementptr inbounds %Expression, ptr %84, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i137, align 4
  %memberidx1.i.i138 = getelementptr inbounds %Expression, ptr %84, i64 0, i32 1
  %memberidx.i139 = getelementptr inbounds %VarAccessExpression, ptr %84, i64 0, i32 4
  store ptr %30, ptr %memberidx.i139, align 8
  %memberidx1.i140 = getelementptr inbounds %Expression, ptr %84, i64 0, i32 3
  store ptr %var_ty.0, ptr %memberidx1.i140, align 8
  %85 = load i64, ptr %30, align 4
  %86 = icmp eq i64 %85, 2
  store i1 %86, ptr %memberidx1.i.i138, align 1
  br label %common.ret

if.entry24:                                       ; preds = %if.entry14
  %87 = load ptr, ptr %0, align 8
  %memberidx.i142 = getelementptr inbounds %Program, ptr %87, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i142, align 8
  %memberidx1.i143 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %89 = load i64, ptr %memberidx1.i143, align 4
  %memberidx.i.i144 = getelementptr inbounds %Array_Module_, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx.i.i144, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx2.i145 = getelementptr inbounds %Module, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i145, align 8
  %memberidx3.i146 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %94 = load i64, ptr %memberidx3.i146, align 4
  %memberidx.i5.i147 = getelementptr inbounds %Array_Var_, ptr %93, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i5.i147, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %98 = load ptr, ptr %97, align 8
  br label %ifend20

if.entry30:                                       ; preds = %if.entry14
  %99 = load ptr, ptr %0, align 8
  %memberidx.i148 = getelementptr inbounds %Program, ptr %99, i64 0, i32 1
  %100 = load ptr, ptr %memberidx.i148, align 8
  %memberidx1.i149 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %101 = load i64, ptr %memberidx1.i149, align 4
  %memberidx.i.i150 = getelementptr inbounds %Array_Module_, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i150, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx2.i151 = getelementptr inbounds %Module, ptr %104, i64 0, i32 2
  %105 = load ptr, ptr %memberidx2.i151, align 8
  %memberidx3.i152 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %106 = load i64, ptr %memberidx3.i152, align 4
  %memberidx.i5.i153 = getelementptr inbounds %Array_Const_, ptr %105, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i5.i153, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %110 = load ptr, ptr %109, align 8
  br label %ifend20

else31:                                           ; preds = %if.entry14
  %111 = add i64 %50, -3
  %112 = icmp ult i64 %111, 2
  br i1 %112, label %if.entry37, label %else38

if.entry37:                                       ; preds = %else31
  %113 = tail call ptr @malloc(i32 8)
  store i64 17, ptr %113, align 4
  br label %ifend20

else38:                                           ; preds = %else31
  %114 = icmp eq i64 %50, 5
  br i1 %114, label %if.entry41, label %ifend20

if.entry41:                                       ; preds = %else38
  %115 = tail call ptr @malloc(i32 8)
  store i64 18, ptr %115, align 4
  br label %ifend20
}

define internal fastcc ptr @TypeChecker_check_intrinsic_call(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = add i64 %4, -3
  %6 = icmp ult i64 %5, 2
  %7 = icmp eq i64 %4, 7
  %8 = or i1 %7, %6
  %9 = alloca %IntType, align 8
  store i64 6, ptr %9, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %10 = alloca %Type, align 8
  store i64 21, ptr %10, align 8
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %memberidx2, align 4
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx3 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %13 = icmp eq i64 %4, 6
  %14 = icmp eq i64 %4, 5
  %memberidx.i125 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %memberidx.i126 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %i.0193 = phi i64 [ 0, %for.body.lr.ph ], [ %54, %Array_Expression____sl__.exit ]
  %15 = icmp eq i64 %i.0193, 1
  %16 = and i1 %8, %15
  br i1 %16, label %end, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %memberidx27 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx27, align 8
  %memberidx.i123 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i123, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx28 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %20 = load ptr, ptr %memberidx28, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp eq i64 %21, 13
  br i1 %22, label %ifend31, label %if.entry29

false_block:                                      ; preds = %for.body
  %23 = load ptr, ptr %memberidx3, align 8
  %memberidx.i124 = getelementptr inbounds %Array_Expression_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i124, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx4, align 8
  br label %end

end:                                              ; preds = %for.body, %false_block
  %ternary = phi ptr [ %26, %false_block ], [ %10, %for.body ]
  %27 = and i1 %6, %15
  %28 = icmp eq i64 %i.0193, 0
  %29 = and i1 %13, %28
  %30 = select i1 %14, i1 true, i1 %29
  %31 = select i1 %30, i1 true, i1 %27
  %expected_type.2 = select i1 %31, ptr %9, ptr %ternary
  %32 = load ptr, ptr %memberidx.i125, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0193
  %34 = load ptr, ptr %33, align 8
  %35 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_type.2, ptr %34)
  %36 = load ptr, ptr %memberidx.i126, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 6
  %37 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i, align 4
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %common.ret, label %ifend13

common.ret:                                       ; preds = %end, %ifend31, %ifend44, %ifend58, %if.entry65, %TypeChecker_error.exit183, %TypeChecker_error.exit167, %TypeChecker_error.exit152, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit152 ], [ null, %TypeChecker_error.exit167 ], [ null, %TypeChecker_error.exit183 ], [ %1, %if.entry65 ], [ %1, %ifend58 ], [ %1, %ifend44 ], [ %1, %ifend31 ], [ null, %end ]
  ret ptr %common.ret.op

ifend13:                                          ; preds = %end
  %40 = load i64, ptr %expected_type.2, align 4
  %.not122 = icmp eq i64 %40, 21
  br i1 %.not122, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %memberidx18 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %41 = load ptr, ptr %memberidx18, align 8
  %42 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %expected_type.2, ptr %41)
  br i1 %42, label %ifend17, label %if.entry19

ifend17:                                          ; preds = %if.entry15, %ifend13
  %43 = load ptr, ptr %memberidx3, align 8
  %memberidx.i127 = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i127, align 4
  %memberidx1.i128 = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 3
  %45 = load i64, ptr %memberidx1.i128, align 4
  %.not.i = icmp slt i64 %44, %45
  br i1 %.not.i, label %ifend17.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend17.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend17
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 1
  %.pre200 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend17
  %46 = shl nuw i64 %45, 1
  store i64 %46, ptr %memberidx1.i128, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 1
  %47 = load ptr, ptr %memberidx2.i.i, align 8
  %48 = shl i64 %45, 4
  %49 = call ptr @realloc(ptr %47, i64 %48)
  store ptr %49, ptr %memberidx2.i.i, align 8
  %.pre199 = load i64, ptr %memberidx.i127, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend17.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %50 = phi ptr [ %.pre200, %ifend17.Array_Expression____sl__.exit_crit_edge ], [ %49, %if.entry.i ]
  %51 = phi i64 [ %44, %ifend17.Array_Expression____sl__.exit_crit_edge ], [ %.pre199, %if.entry.i ]
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr %memberidx.i127, align 4
  %53 = getelementptr inbounds ptr, ptr %50, i64 %51
  store ptr %35, ptr %53, align 8
  %54 = add nuw nsw i64 %i.0193, 1
  %55 = load i64, ptr %memberidx2, align 4
  %56 = icmp slt i64 %54, %55
  br i1 %56, label %for.body, label %for.end

if.entry19:                                       ; preds = %if.entry15
  %57 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %expected_type.2)
  %58 = load ptr, ptr %57, align 8
  %memberidx22 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx22, align 8
  %60 = call ptr %59(ptr nonnull %57)
  %61 = load ptr, ptr %memberidx18, align 8
  %62 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %61)
  %63 = load ptr, ptr %62, align 8
  %memberidx24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx24, align 8
  %65 = call ptr %64(ptr nonnull %62)
  %66 = alloca ptr, align 8
  %67 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %66, ptr nonnull @217, i64 %i.0193, ptr %60, ptr %65)
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i129 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i129, align 8
  %memberidx1.i130 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 %67, ptr %memberidx1.i130, align 4
  %memberidx2.i131 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 %67, ptr %memberidx2.i131, align 4
  tail call void @free(ptr %60)
  tail call void @free(ptr %65)
  %70 = load ptr, ptr %memberidx.i125, align 8
  %71 = getelementptr inbounds ptr, ptr %70, i64 %i.0193
  %72 = load ptr, ptr %71, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = load ptr, ptr %memberidx.i126, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 6
  %75 = load ptr, ptr %memberidx1.i134, align 8
  %76 = call ptr @malloc(i32 24)
  store i64 5, ptr %76, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %76, i64 0, i32 2
  store ptr %73, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i135 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 1
  store ptr %69, ptr %memberidx2.i.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %77 = load i64, ptr %memberidx.i.i136, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 3
  %78 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %77, %78
  br i1 %.not.i.i, label %if.entry19.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry19.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry19
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %.pre198 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry19
  %79 = shl nuw i64 %78, 1
  store i64 %79, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %80 = load ptr, ptr %memberidx2.i.i.i, align 8
  %81 = shl i64 %78, 4
  %82 = call ptr @realloc(ptr %80, i64 %81)
  store ptr %82, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i136, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry19.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %83 = phi ptr [ %.pre198, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %82, %if.entry.i.i ]
  %84 = phi i64 [ %77, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %85 = add nsw i64 %84, 1
  store i64 %85, ptr %memberidx.i.i136, align 4
  %86 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %76, ptr %86, align 8
  br label %common.ret

if.entry29:                                       ; preds = %for.end
  %87 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %20)
  %88 = load ptr, ptr %87, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %88, i64 0, i32 5
  %89 = load ptr, ptr %memberidx34, align 8
  %90 = call ptr %89(ptr nonnull %87)
  %91 = alloca ptr, align 8
  %92 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %91, ptr nonnull @218, ptr %90)
  %93 = load ptr, ptr %91, align 8
  %94 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %94, align 8
  %memberidx.i138 = getelementptr inbounds %string, ptr %94, i64 0, i32 1
  store ptr %93, ptr %memberidx.i138, align 8
  %memberidx1.i139 = getelementptr inbounds %string, ptr %94, i64 0, i32 2
  store i64 %92, ptr %memberidx1.i139, align 4
  %memberidx2.i140 = getelementptr inbounds %string, ptr %94, i64 0, i32 3
  store i64 %92, ptr %memberidx2.i140, align 4
  tail call void @free(ptr %90)
  %memberidx35 = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 3
  %95 = load ptr, ptr %memberidx35, align 8
  %96 = load ptr, ptr %95, align 8
  %memberidx.i141 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %97 = load ptr, ptr %memberidx.i141, align 8
  %memberidx1.i142 = getelementptr inbounds %Compiler, ptr %97, i64 0, i32 6
  %98 = load ptr, ptr %memberidx1.i142, align 8
  %99 = call ptr @malloc(i32 24)
  store i64 5, ptr %99, align 4
  %memberidx1.i.i143 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %96, ptr %memberidx1.i.i143, align 8
  %memberidx2.i.i144 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %94, ptr %memberidx2.i.i144, align 8
  %memberidx.i.i145 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %100 = load i64, ptr %memberidx.i.i145, align 4
  %memberidx1.i2.i146 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 3
  %101 = load i64, ptr %memberidx1.i2.i146, align 4
  %.not.i.i147 = icmp slt i64 %100, %101
  br i1 %.not.i.i147, label %if.entry29.TypeChecker_error.exit152_crit_edge, label %if.entry.i.i150

if.entry29.TypeChecker_error.exit152_crit_edge:   ; preds = %if.entry29
  %memberidx4.i.i151.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %.pre202 = load ptr, ptr %memberidx4.i.i151.phi.trans.insert, align 8
  br label %TypeChecker_error.exit152

if.entry.i.i150:                                  ; preds = %if.entry29
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx1.i2.i146, align 4
  %memberidx2.i.i.i149 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %103 = load ptr, ptr %memberidx2.i.i.i149, align 8
  %104 = shl i64 %101, 4
  %105 = call ptr @realloc(ptr %103, i64 %104)
  store ptr %105, ptr %memberidx2.i.i.i149, align 8
  %.pre201 = load i64, ptr %memberidx.i.i145, align 4
  br label %TypeChecker_error.exit152

TypeChecker_error.exit152:                        ; preds = %if.entry29.TypeChecker_error.exit152_crit_edge, %if.entry.i.i150
  %106 = phi ptr [ %.pre202, %if.entry29.TypeChecker_error.exit152_crit_edge ], [ %105, %if.entry.i.i150 ]
  %107 = phi i64 [ %100, %if.entry29.TypeChecker_error.exit152_crit_edge ], [ %.pre201, %if.entry.i.i150 ]
  %108 = add nsw i64 %107, 1
  store i64 %108, ptr %memberidx.i.i145, align 4
  %109 = getelementptr inbounds ptr, ptr %106, i64 %107
  store ptr %99, ptr %109, align 8
  br label %common.ret

ifend31:                                          ; preds = %for.end
  switch i64 %4, label %common.ret [
    i64 6, label %if.entry37
    i64 7, label %if.entry51
    i64 5, label %if.entry51
    i64 4, label %if.entry51
    i64 3, label %if.entry51
  ]

if.entry37:                                       ; preds = %ifend31
  %memberidx41 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 2
  %110 = load i64, ptr %memberidx41, align 4
  %.not121 = icmp eq i64 %110, 2
  br i1 %.not121, label %ifend44, label %if.entry42

if.entry42:                                       ; preds = %if.entry37
  %111 = alloca ptr, align 8
  %112 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %111, ptr nonnull @219, i64 %110)
  %113 = load ptr, ptr %111, align 8
  %114 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %114, align 8
  %memberidx.i153 = getelementptr inbounds %string, ptr %114, i64 0, i32 1
  store ptr %113, ptr %memberidx.i153, align 8
  %memberidx1.i154 = getelementptr inbounds %string, ptr %114, i64 0, i32 2
  store i64 %112, ptr %memberidx1.i154, align 4
  %memberidx2.i155 = getelementptr inbounds %string, ptr %114, i64 0, i32 3
  store i64 %112, ptr %memberidx2.i155, align 4
  %115 = load ptr, ptr %2, align 8
  %memberidx.i156 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %116 = load ptr, ptr %memberidx.i156, align 8
  %memberidx1.i157 = getelementptr inbounds %Compiler, ptr %116, i64 0, i32 6
  %117 = load ptr, ptr %memberidx1.i157, align 8
  %118 = call ptr @malloc(i32 24)
  store i64 4, ptr %118, align 4
  %memberidx1.i.i158 = getelementptr inbounds %FloError, ptr %118, i64 0, i32 2
  store ptr %115, ptr %memberidx1.i.i158, align 8
  %memberidx2.i.i159 = getelementptr inbounds %FloError, ptr %118, i64 0, i32 1
  store ptr %114, ptr %memberidx2.i.i159, align 8
  %memberidx.i.i160 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 2
  %119 = load i64, ptr %memberidx.i.i160, align 4
  %memberidx1.i2.i161 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 3
  %120 = load i64, ptr %memberidx1.i2.i161, align 4
  %.not.i.i162 = icmp slt i64 %119, %120
  br i1 %.not.i.i162, label %if.entry42.TypeChecker_error.exit167_crit_edge, label %if.entry.i.i165

if.entry42.TypeChecker_error.exit167_crit_edge:   ; preds = %if.entry42
  %memberidx4.i.i166.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 1
  %.pre206 = load ptr, ptr %memberidx4.i.i166.phi.trans.insert, align 8
  br label %TypeChecker_error.exit167

if.entry.i.i165:                                  ; preds = %if.entry42
  %121 = shl nuw i64 %120, 1
  store i64 %121, ptr %memberidx1.i2.i161, align 4
  %memberidx2.i.i.i164 = getelementptr inbounds %Array_FloError_, ptr %117, i64 0, i32 1
  %122 = load ptr, ptr %memberidx2.i.i.i164, align 8
  %123 = shl i64 %120, 4
  %124 = call ptr @realloc(ptr %122, i64 %123)
  store ptr %124, ptr %memberidx2.i.i.i164, align 8
  %.pre205 = load i64, ptr %memberidx.i.i160, align 4
  br label %TypeChecker_error.exit167

TypeChecker_error.exit167:                        ; preds = %if.entry42.TypeChecker_error.exit167_crit_edge, %if.entry.i.i165
  %125 = phi ptr [ %.pre206, %if.entry42.TypeChecker_error.exit167_crit_edge ], [ %124, %if.entry.i.i165 ]
  %126 = phi i64 [ %119, %if.entry42.TypeChecker_error.exit167_crit_edge ], [ %.pre205, %if.entry.i.i165 ]
  %127 = add nsw i64 %126, 1
  store i64 %127, ptr %memberidx.i.i160, align 4
  %128 = getelementptr inbounds ptr, ptr %125, i64 %126
  store ptr %118, ptr %128, align 8
  br label %common.ret

ifend44:                                          ; preds = %if.entry37
  %memberidx48 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx48, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend31, %ifend31, %ifend31, %ifend31
  %memberidx55 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 2
  %129 = load i64, ptr %memberidx55, align 4
  %.not = icmp eq i64 %129, 3
  br i1 %.not, label %ifend58, label %if.entry56

if.entry56:                                       ; preds = %if.entry51
  %130 = alloca ptr, align 8
  %131 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %130, ptr nonnull @220, i64 %129)
  %132 = load ptr, ptr %130, align 8
  %133 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %133, align 8
  %memberidx.i169 = getelementptr inbounds %string, ptr %133, i64 0, i32 1
  store ptr %132, ptr %memberidx.i169, align 8
  %memberidx1.i170 = getelementptr inbounds %string, ptr %133, i64 0, i32 2
  store i64 %131, ptr %memberidx1.i170, align 4
  %memberidx2.i171 = getelementptr inbounds %string, ptr %133, i64 0, i32 3
  store i64 %131, ptr %memberidx2.i171, align 4
  %134 = load ptr, ptr %2, align 8
  %memberidx.i172 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %135 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i173 = getelementptr inbounds %Compiler, ptr %135, i64 0, i32 6
  %136 = load ptr, ptr %memberidx1.i173, align 8
  %137 = call ptr @malloc(i32 24)
  store i64 4, ptr %137, align 4
  %memberidx1.i.i174 = getelementptr inbounds %FloError, ptr %137, i64 0, i32 2
  store ptr %134, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i175 = getelementptr inbounds %FloError, ptr %137, i64 0, i32 1
  store ptr %133, ptr %memberidx2.i.i175, align 8
  %memberidx.i.i176 = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 2
  %138 = load i64, ptr %memberidx.i.i176, align 4
  %memberidx1.i2.i177 = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 3
  %139 = load i64, ptr %memberidx1.i2.i177, align 4
  %.not.i.i178 = icmp slt i64 %138, %139
  br i1 %.not.i.i178, label %if.entry56.TypeChecker_error.exit183_crit_edge, label %if.entry.i.i181

if.entry56.TypeChecker_error.exit183_crit_edge:   ; preds = %if.entry56
  %memberidx4.i.i182.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 1
  %.pre204 = load ptr, ptr %memberidx4.i.i182.phi.trans.insert, align 8
  br label %TypeChecker_error.exit183

if.entry.i.i181:                                  ; preds = %if.entry56
  %140 = shl nuw i64 %139, 1
  store i64 %140, ptr %memberidx1.i2.i177, align 4
  %memberidx2.i.i.i180 = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 1
  %141 = load ptr, ptr %memberidx2.i.i.i180, align 8
  %142 = shl i64 %139, 4
  %143 = call ptr @realloc(ptr %141, i64 %142)
  store ptr %143, ptr %memberidx2.i.i.i180, align 8
  %.pre203 = load i64, ptr %memberidx.i.i176, align 4
  br label %TypeChecker_error.exit183

TypeChecker_error.exit183:                        ; preds = %if.entry56.TypeChecker_error.exit183_crit_edge, %if.entry.i.i181
  %144 = phi ptr [ %.pre204, %if.entry56.TypeChecker_error.exit183_crit_edge ], [ %143, %if.entry.i.i181 ]
  %145 = phi i64 [ %138, %if.entry56.TypeChecker_error.exit183_crit_edge ], [ %.pre203, %if.entry.i.i181 ]
  %146 = add nsw i64 %145, 1
  store i64 %146, ptr %memberidx.i.i176, align 4
  %147 = getelementptr inbounds ptr, ptr %144, i64 %145
  store ptr %137, ptr %147, align 8
  br label %common.ret

ifend58:                                          ; preds = %if.entry51
  %memberidx64 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx64, align 8
  br i1 %7, label %if.entry65, label %common.ret

if.entry65:                                       ; preds = %ifend58
  %148 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %148, align 4
  %memberidx.i185 = getelementptr inbounds %IntType, ptr %148, i64 0, i32 1
  store i1 true, ptr %memberidx.i185, align 1
  store ptr %148, ptr %memberidx64, align 8
  br label %common.ret
}

define internal fastcc ptr @dump_type(ptr nocapture readonly %0, i1 %1) unnamed_addr {
  %3 = load i64, ptr %0, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %true_block, %false_block, %ifend61, %if.entry59, %if.entry55, %if.entry51, %if.entry47, %if.entry42, %if.entry37, %if.entry32, %if.entry27, %if.entry22, %if.entry17, %if.entry4, %if.entry
  %common.ret.op = phi ptr [ %6, %if.entry ], [ %13, %if.entry4 ], [ %28, %if.entry17 ], [ %34, %if.entry22 ], [ %40, %if.entry27 ], [ %46, %if.entry32 ], [ %52, %if.entry37 ], [ %58, %if.entry42 ], [ %60, %if.entry47 ], [ %62, %if.entry51 ], [ %64, %if.entry55 ], [ %66, %if.entry59 ], [ %68, %ifend61 ], [ %20, %true_block ], [ %22, %false_block ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %2
  %7 = add i64 %3, -1
  %8 = icmp ult i64 %7, 7
  br i1 %8, label %if.entry1, label %ifend3

if.entry1:                                        ; preds = %ifend
  br i1 %1, label %if.entry4, label %ifend6

ifend3:                                           ; preds = %ifend11, %ifend
  %9 = phi i64 [ %18, %ifend11 ], [ %3, %ifend ]
  switch i64 %9, label %ifend61 [
    i64 8, label %if.entry47
    i64 9, label %if.entry51
    i64 10, label %if.entry55
    i64 17, label %if.entry59
  ]

if.entry4:                                        ; preds = %if.entry1
  %10 = alloca ptr, align 8
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %10, ptr nonnull @87, i64 64)
  %12 = load ptr, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i, align 4
  br label %common.ret

ifend6:                                           ; preds = %if.entry1
  %memberidx7 = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %14 = load i1, ptr %memberidx7, align 1
  %15 = icmp eq i64 %3, 6
  br i1 %15, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend6
  br i1 %14, label %true_block, label %false_block

ifend11:                                          ; preds = %ifend6
  %16 = tail call ptr @malloc(i32 1)
  %. = select i1 %14, i8 105, i8 117
  store i8 %., ptr %16, align 8
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i93 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i93, align 8
  %memberidx1.i.i94 = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i95, align 4
  %18 = load i64, ptr %0, align 4
  switch i64 %18, label %ifend3 [
    i64 1, label %if.entry17
    i64 2, label %if.entry22
    i64 3, label %if.entry27
    i64 4, label %if.entry32
    i64 5, label %if.entry37
    i64 7, label %if.entry42
  ]

true_block:                                       ; preds = %if.entry9
  %19 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %19, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %20 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i84 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i84, align 8
  %memberidx1.i.i85 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i85, align 4
  %memberidx2.i.i86 = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i86, align 4
  br label %common.ret

false_block:                                      ; preds = %if.entry9
  %21 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i87 = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i87, align 8
  %memberidx1.i.i88 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i88, align 4
  %memberidx2.i.i89 = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i89, align 4
  br label %common.ret

if.entry17:                                       ; preds = %ifend11
  %23 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %24 = tail call ptr %23(ptr nonnull %17)
  %25 = alloca ptr, align 8
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %25, ptr nonnull @89, ptr %24)
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i96 = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %24)
  br label %common.ret

if.entry22:                                       ; preds = %ifend11
  %29 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = tail call ptr %29(ptr nonnull %17)
  %31 = alloca ptr, align 8
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %31, ptr nonnull @90, ptr %30)
  %33 = load ptr, ptr %31, align 8
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i99 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %30)
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %35 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %36 = tail call ptr %35(ptr nonnull %17)
  %37 = alloca ptr, align 8
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %37, ptr nonnull @91, ptr %36)
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i102 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 %38, ptr %memberidx2.i104, align 4
  tail call void @free(ptr %36)
  br label %common.ret

if.entry32:                                       ; preds = %ifend11
  %41 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %42 = tail call ptr %41(ptr nonnull %17)
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @92, ptr %42)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i105 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i105, align 8
  %memberidx1.i106 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 %44, ptr %memberidx2.i107, align 4
  tail call void @free(ptr %42)
  br label %common.ret

if.entry37:                                       ; preds = %ifend11
  %47 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %48 = tail call ptr %47(ptr nonnull %17)
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @93, ptr %48)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i108 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx1.i109, align 4
  %memberidx2.i110 = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 %50, ptr %memberidx2.i110, align 4
  tail call void @free(ptr %48)
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %53 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %54 = tail call ptr %53(ptr nonnull %17)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @94, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i111 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i112, align 4
  %memberidx2.i113 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i113, align 4
  tail call void @free(ptr %54)
  br label %common.ret

if.entry47:                                       ; preds = %ifend3
  %59 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %59, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i117 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i117, align 8
  %memberidx1.i.i118 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i119, align 4
  br label %common.ret

if.entry51:                                       ; preds = %ifend3
  %61 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %61, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i.i120 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i.i120, align 8
  %memberidx1.i.i121 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i121, align 4
  %memberidx2.i.i122 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i122, align 4
  br label %common.ret

if.entry55:                                       ; preds = %ifend3
  %63 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %63, align 8
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %64, align 8
  %memberidx.i.i123 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  store ptr %63, ptr %memberidx.i.i123, align 8
  %memberidx1.i.i124 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i124, align 4
  %memberidx2.i.i125 = getelementptr inbounds %string, ptr %64, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i125, align 4
  br label %common.ret

if.entry59:                                       ; preds = %ifend3
  %65 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %65, ptr noundef nonnull align 8 dereferenceable(6) @97, i64 6, i1 false)
  %66 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i.i114 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i.i114, align 8
  %memberidx1.i.i115 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i115, align 4
  %memberidx2.i.i116 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i116, align 4
  br label %common.ret

ifend61:                                          ; preds = %ifend3
  %67 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %67, ptr noundef nonnull align 8 dereferenceable(7) @98, i64 7, i1 false)
  %68 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %68, align 8
  %memberidx.i.i81 = getelementptr inbounds %string, ptr %68, i64 0, i32 1
  store ptr %67, ptr %memberidx.i.i81, align 8
  %memberidx1.i.i82 = getelementptr inbounds %string, ptr %68, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i82, align 4
  %memberidx2.i.i83 = getelementptr inbounds %string, ptr %68, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i83, align 4
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind readonly
define internal fastcc i64 @evaluate_const_int_expression(ptr %0, ptr nocapture readonly %1) unnamed_addr #13 {
  %memberidx.i = getelementptr inbounds %Program, ptr %0, i64 0, i32 1
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry12, %2
  %accumulator.tr.ph = phi i64 [ %11, %if.entry12 ], [ 0, %2 ]
  %.tr157.ph = phi ptr [ %10, %if.entry12 ], [ %1, %2 ]
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.entry86
  %.tr157 = phi ptr [ %74, %if.entry86 ], [ %.tr157.ph, %tailrecurse.outer ]
  %memberidx = getelementptr inbounds %Expression, ptr %.tr157, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry3
    i64 9, label %if.entry8
    i64 10, label %if.entry72
    i64 8, label %if.entry86
  ]

common.ret169:                                    ; preds = %if.entry81, %if.entry76, %if.entry66, %if.entry60, %if.entry54, %if.entry48, %if.entry42, %if.entry36, %if.entry30, %if.entry24, %if.entry18, %common.ret
  %common.ret169.op = phi i64 [ %accumulator.ret.tr, %common.ret ], [ %accumulator.ret.tr158, %if.entry18 ], [ %accumulator.ret.tr159, %if.entry24 ], [ %accumulator.ret.tr160, %if.entry30 ], [ %accumulator.ret.tr161, %if.entry36 ], [ %accumulator.ret.tr162, %if.entry42 ], [ %accumulator.ret.tr163, %if.entry48 ], [ %accumulator.ret.tr164, %if.entry54 ], [ %accumulator.ret.tr165, %if.entry60 ], [ %accumulator.ret.tr166, %if.entry66 ], [ %accumulator.ret.tr167, %if.entry76 ], [ %accumulator.ret.tr168, %if.entry81 ]
  ret i64 %common.ret169.op

common.ret:                                       ; preds = %if.entry8, %tailrecurse, %if.entry72, %if.entry3, %if.entry
  %common.ret.op = phi i64 [ %4, %if.entry ], [ %6, %if.entry3 ], [ -99999999, %if.entry72 ], [ -99999999, %tailrecurse ], [ -99999999, %if.entry8 ]
  %accumulator.ret.tr = add nsw i64 %common.ret.op, %accumulator.tr.ph
  br label %common.ret169

if.entry:                                         ; preds = %tailrecurse
  %memberidx1 = getelementptr inbounds %IntExpression, ptr %.tr157, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  br label %common.ret

if.entry3:                                        ; preds = %tailrecurse
  %memberidx6 = getelementptr inbounds %FloatExpression, ptr %.tr157, i64 0, i32 4
  %5 = load double, ptr %memberidx6, align 8
  %6 = fptosi double %5 to i64
  br label %common.ret

if.entry8:                                        ; preds = %tailrecurse
  %memberidx11 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 5
  %7 = load i64, ptr %memberidx11, align 4
  switch i64 %7, label %common.ret [
    i64 1, label %if.entry12
    i64 2, label %if.entry18
    i64 3, label %if.entry24
    i64 4, label %if.entry30
    i64 5, label %if.entry36
    i64 13, label %if.entry42
    i64 14, label %if.entry48
    i64 15, label %if.entry54
    i64 16, label %if.entry60
    i64 17, label %if.entry66
  ]

if.entry12:                                       ; preds = %if.entry8
  %memberidx15 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %8 = load ptr, ptr %memberidx15, align 8
  %9 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %8)
  %memberidx16 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %10 = load ptr, ptr %memberidx16, align 8
  %11 = add nsw i64 %9, %accumulator.tr.ph
  br label %tailrecurse.outer

if.entry18:                                       ; preds = %if.entry8
  %memberidx21 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %12 = load ptr, ptr %memberidx21, align 8
  %13 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %12)
  %memberidx22 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %14 = load ptr, ptr %memberidx22, align 8
  %15 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %14)
  %16 = add i64 %13, %accumulator.tr.ph
  %accumulator.ret.tr158 = sub i64 %16, %15
  br label %common.ret169

if.entry24:                                       ; preds = %if.entry8
  %memberidx27 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %17 = load ptr, ptr %memberidx27, align 8
  %18 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %17)
  %memberidx28 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %19 = load ptr, ptr %memberidx28, align 8
  %20 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %19)
  %21 = mul nsw i64 %20, %18
  %accumulator.ret.tr159 = add nsw i64 %21, %accumulator.tr.ph
  br label %common.ret169

if.entry30:                                       ; preds = %if.entry8
  %memberidx33 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %22 = load ptr, ptr %memberidx33, align 8
  %23 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %22)
  %memberidx34 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %24 = load ptr, ptr %memberidx34, align 8
  %25 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %24)
  %26 = sdiv i64 %23, %25
  %accumulator.ret.tr160 = add nsw i64 %26, %accumulator.tr.ph
  br label %common.ret169

if.entry36:                                       ; preds = %if.entry8
  %memberidx39 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %27 = load ptr, ptr %memberidx39, align 8
  %28 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %27)
  %memberidx40 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %29 = load ptr, ptr %memberidx40, align 8
  %30 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %29)
  %31 = srem i64 %28, %30
  %accumulator.ret.tr161 = add nsw i64 %31, %accumulator.tr.ph
  br label %common.ret169

if.entry42:                                       ; preds = %if.entry8
  %memberidx45 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %32 = load ptr, ptr %memberidx45, align 8
  %33 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %32)
  %memberidx46 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %34 = load ptr, ptr %memberidx46, align 8
  %35 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %34)
  %36 = shl i64 %33, %35
  %accumulator.ret.tr162 = add nsw i64 %36, %accumulator.tr.ph
  br label %common.ret169

if.entry48:                                       ; preds = %if.entry8
  %memberidx51 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %37 = load ptr, ptr %memberidx51, align 8
  %38 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %37)
  %memberidx52 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %39 = load ptr, ptr %memberidx52, align 8
  %40 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %39)
  %41 = lshr i64 %38, %40
  %accumulator.ret.tr163 = add nsw i64 %41, %accumulator.tr.ph
  br label %common.ret169

if.entry54:                                       ; preds = %if.entry8
  %memberidx57 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %42 = load ptr, ptr %memberidx57, align 8
  %43 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %42)
  %memberidx58 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %44 = load ptr, ptr %memberidx58, align 8
  %45 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %44)
  %46 = or i64 %45, %43
  %accumulator.ret.tr164 = add nsw i64 %46, %accumulator.tr.ph
  br label %common.ret169

if.entry60:                                       ; preds = %if.entry8
  %memberidx63 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %47 = load ptr, ptr %memberidx63, align 8
  %48 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %47)
  %memberidx64 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %49 = load ptr, ptr %memberidx64, align 8
  %50 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %49)
  %51 = and i64 %50, %48
  %accumulator.ret.tr165 = add nsw i64 %51, %accumulator.tr.ph
  br label %common.ret169

if.entry66:                                       ; preds = %if.entry8
  %memberidx69 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %52 = load ptr, ptr %memberidx69, align 8
  %53 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %52)
  %memberidx70 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %54 = load ptr, ptr %memberidx70, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %54)
  %56 = xor i64 %55, %53
  %accumulator.ret.tr166 = add nsw i64 %56, %accumulator.tr.ph
  br label %common.ret169

if.entry72:                                       ; preds = %tailrecurse
  %memberidx75 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 4
  %57 = load i64, ptr %memberidx75, align 4
  switch i64 %57, label %common.ret [
    i64 6, label %if.entry76
    i64 7, label %if.entry81
  ]

if.entry76:                                       ; preds = %if.entry72
  %memberidx79 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %58 = load ptr, ptr %memberidx79, align 8
  %59 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %58)
  %accumulator.ret.tr167 = sub i64 %accumulator.tr.ph, %59
  br label %common.ret169

if.entry81:                                       ; preds = %if.entry72
  %memberidx84 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %60 = load ptr, ptr %memberidx84, align 8
  %61 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %60)
  %62 = xor i64 %61, -1
  %accumulator.ret.tr168 = add nsw i64 %accumulator.tr.ph, %62
  br label %common.ret169

if.entry86:                                       ; preds = %tailrecurse
  %memberidx89 = getelementptr inbounds %VarAccessExpression, ptr %.tr157, i64 0, i32 4
  %63 = load ptr, ptr %memberidx89, align 8
  %64 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %68, i64 0, i32 2
  %69 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 2
  %70 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Const_, ptr %69, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i5.i, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %70
  %73 = load ptr, ptr %72, align 8
  %memberidx90 = getelementptr inbounds %Const, ptr %73, i64 0, i32 2
  %74 = load ptr, ptr %memberidx90, align 8
  br label %tailrecurse
}

define internal fastcc i1 @is_operator_overload_name(ptr readonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %2, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %3 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %3, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 1
  store ptr %2, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %4, 6
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %1
  %memberidx2.i = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %6 = tail call i64 @memcmp(ptr %5, ptr nonnull %2, i64 6)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend.i449, %ifend87, %ifend.i438, %ifend.i427, %ifend.i416, %ifend.i405, %ifend.i394, %ifend.i383, %ifend.i372, %ifend.i361, %ifend.i350, %ifend.i339, %ifend.i328, %ifend.i317, %ifend.i306, %ifend.i295, %ifend.i284, %ifend.i273, %ifend.i262, %ifend.i251, %ifend.i240, %ifend.i229, %ifend.i218, %ifend.i207, %ifend.i196, %ifend.i185, %ifend.i174, %ifend.i163, %ifend.i152, %ifend.i141, %ifend.i130, %ifend.i
  %common.ret.op = phi i1 [ true, %ifend.i ], [ true, %ifend.i130 ], [ true, %ifend.i141 ], [ true, %ifend.i152 ], [ true, %ifend.i163 ], [ true, %ifend.i174 ], [ true, %ifend.i185 ], [ true, %ifend.i196 ], [ true, %ifend.i207 ], [ true, %ifend.i218 ], [ true, %ifend.i229 ], [ true, %ifend.i240 ], [ true, %ifend.i251 ], [ true, %ifend.i262 ], [ true, %ifend.i273 ], [ true, %ifend.i284 ], [ true, %ifend.i295 ], [ true, %ifend.i306 ], [ true, %ifend.i317 ], [ true, %ifend.i328 ], [ true, %ifend.i339 ], [ true, %ifend.i350 ], [ true, %ifend.i361 ], [ true, %ifend.i372 ], [ true, %ifend.i383 ], [ true, %ifend.i394 ], [ true, %ifend.i405 ], [ true, %ifend.i416 ], [ true, %ifend.i427 ], [ true, %ifend.i438 ], [ %187, %ifend.i449 ], [ false, %ifend87 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %1, %ifend.i
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i121 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i122, align 4
  %memberidx2.i.i123 = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i123, align 4
  %10 = load i64, ptr %memberidx.i, align 4
  %.not.i126 = icmp eq i64 %10, 7
  br i1 %.not.i126, label %ifend.i130, label %ifend3

ifend.i130:                                       ; preds = %ifend
  %memberidx2.i128 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %memberidx2.i128, align 8
  %12 = tail call i64 @memcmp(ptr %11, ptr nonnull %8, i64 7)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %common.ret, label %ifend3

ifend3:                                           ; preds = %ifend, %ifend.i130
  %14 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %14, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i132 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i132, align 8
  %memberidx1.i.i133 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i134, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i137 = icmp eq i64 %16, 7
  br i1 %.not.i137, label %ifend.i141, label %ifend6

ifend.i141:                                       ; preds = %ifend3
  %memberidx2.i139 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i139, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 7)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %common.ret, label %ifend6

ifend6:                                           ; preds = %ifend3, %ifend.i141
  %20 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i143 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i143, align 8
  %memberidx1.i.i144 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i144, align 4
  %memberidx2.i.i145 = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i145, align 4
  %22 = load i64, ptr %memberidx.i, align 4
  %.not.i148 = icmp eq i64 %22, 7
  br i1 %.not.i148, label %ifend.i152, label %ifend9

ifend.i152:                                       ; preds = %ifend6
  %memberidx2.i150 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i150, align 8
  %24 = tail call i64 @memcmp(ptr %23, ptr nonnull %20, i64 7)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend6, %ifend.i152
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i154 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i154, align 8
  %memberidx1.i.i155 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i156 = getelementptr inbounds %string, ptr %27, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i156, align 4
  %28 = load i64, ptr %memberidx.i, align 4
  %.not.i159 = icmp eq i64 %28, 7
  br i1 %.not.i159, label %ifend.i163, label %ifend12

ifend.i163:                                       ; preds = %ifend9
  %memberidx2.i161 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i161, align 8
  %30 = tail call i64 @memcmp(ptr %29, ptr nonnull %26, i64 7)
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %common.ret, label %ifend12

ifend12:                                          ; preds = %ifend9, %ifend.i163
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i165 = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i165, align 8
  %memberidx1.i.i166 = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i166, align 4
  %memberidx2.i.i167 = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i167, align 4
  %34 = load i64, ptr %memberidx.i, align 4
  %.not.i170 = icmp eq i64 %34, 6
  br i1 %.not.i170, label %ifend.i174, label %ifend15

ifend.i174:                                       ; preds = %ifend12
  %memberidx2.i172 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i172, align 8
  %36 = tail call i64 @memcmp(ptr %35, ptr nonnull %32, i64 6)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend12, %ifend.i174
  %38 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i176 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i176, align 8
  %memberidx1.i.i177 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i178, align 4
  %40 = load i64, ptr %memberidx.i, align 4
  %.not.i181 = icmp eq i64 %40, 8
  br i1 %.not.i181, label %ifend.i185, label %ifend18

ifend.i185:                                       ; preds = %ifend15
  %memberidx2.i183 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i183, align 8
  %42 = tail call i64 @memcmp(ptr %41, ptr nonnull %38, i64 8)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %common.ret, label %ifend18

ifend18:                                          ; preds = %ifend15, %ifend.i185
  %44 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %44, align 8
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i189, align 4
  %46 = load i64, ptr %memberidx.i, align 4
  %.not.i192 = icmp eq i64 %46, 8
  br i1 %.not.i192, label %ifend.i196, label %ifend21

ifend.i196:                                       ; preds = %ifend18
  %memberidx2.i194 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %47 = load ptr, ptr %memberidx2.i194, align 8
  %48 = tail call i64 @memcmp(ptr %47, ptr nonnull %44, i64 8)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %common.ret, label %ifend21

ifend21:                                          ; preds = %ifend18, %ifend.i196
  %50 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i198 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i198, align 8
  %memberidx1.i.i199 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i199, align 4
  %memberidx2.i.i200 = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i200, align 4
  %52 = load i64, ptr %memberidx.i, align 4
  %.not.i203 = icmp eq i64 %52, 8
  br i1 %.not.i203, label %ifend.i207, label %ifend24

ifend.i207:                                       ; preds = %ifend21
  %memberidx2.i205 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %53 = load ptr, ptr %memberidx2.i205, align 8
  %54 = tail call i64 @memcmp(ptr %53, ptr nonnull %50, i64 8)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend21, %ifend.i207
  %56 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i209 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i209, align 8
  %memberidx1.i.i210 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i210, align 4
  %memberidx2.i.i211 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i211, align 4
  %58 = load i64, ptr %memberidx.i, align 4
  %.not.i214 = icmp eq i64 %58, 8
  br i1 %.not.i214, label %ifend.i218, label %ifend27

ifend.i218:                                       ; preds = %ifend24
  %memberidx2.i216 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i216, align 8
  %60 = tail call i64 @memcmp(ptr %59, ptr nonnull %56, i64 8)
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend24, %ifend.i218
  %62 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %62, ptr noundef nonnull align 8 dereferenceable(7) @120, i64 7, i1 false)
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i220 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i220, align 8
  %memberidx1.i.i221 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i221, align 4
  %memberidx2.i.i222 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i222, align 4
  %64 = load i64, ptr %memberidx.i, align 4
  %.not.i225 = icmp eq i64 %64, 7
  br i1 %.not.i225, label %ifend.i229, label %ifend30

ifend.i229:                                       ; preds = %ifend27
  %memberidx2.i227 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i227, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 7)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27, %ifend.i229
  %68 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i.i231 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i.i231, align 8
  %memberidx1.i.i232 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i233, align 4
  %70 = load i64, ptr %memberidx.i, align 4
  %.not.i236 = icmp eq i64 %70, 8
  br i1 %.not.i236, label %ifend.i240, label %ifend33

ifend.i240:                                       ; preds = %ifend30
  %memberidx2.i238 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i238, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 8)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %common.ret, label %ifend33

ifend33:                                          ; preds = %ifend30, %ifend.i240
  %74 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %74, align 8
  %75 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i242 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i242, align 8
  %memberidx1.i.i243 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i243, align 4
  %memberidx2.i.i244 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i244, align 4
  %76 = load i64, ptr %memberidx.i, align 4
  %.not.i247 = icmp eq i64 %76, 8
  br i1 %.not.i247, label %ifend.i251, label %ifend36

ifend.i251:                                       ; preds = %ifend33
  %memberidx2.i249 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i249, align 8
  %78 = tail call i64 @memcmp(ptr %77, ptr nonnull %74, i64 8)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %common.ret, label %ifend36

ifend36:                                          ; preds = %ifend33, %ifend.i251
  %80 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %80, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %81 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %81, align 8
  %memberidx.i.i253 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  store ptr %80, ptr %memberidx.i.i253, align 8
  %memberidx1.i.i254 = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i254, align 4
  %memberidx2.i.i255 = getelementptr inbounds %string, ptr %81, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i255, align 4
  %82 = load i64, ptr %memberidx.i, align 4
  %.not.i258 = icmp eq i64 %82, 11
  br i1 %.not.i258, label %ifend.i262, label %ifend39

ifend.i262:                                       ; preds = %ifend36
  %memberidx2.i260 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i260, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr nonnull %80, i64 11)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %common.ret, label %ifend39

ifend39:                                          ; preds = %ifend36, %ifend.i262
  %86 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %86, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %87 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i.i264 = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i.i264, align 8
  %memberidx1.i.i265 = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i266, align 4
  %88 = load i64, ptr %memberidx.i, align 4
  %.not.i269 = icmp eq i64 %88, 11
  br i1 %.not.i269, label %ifend.i273, label %ifend42

ifend.i273:                                       ; preds = %ifend39
  %memberidx2.i271 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %89 = load ptr, ptr %memberidx2.i271, align 8
  %90 = tail call i64 @memcmp(ptr %89, ptr nonnull %86, i64 11)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %common.ret, label %ifend42

ifend42:                                          ; preds = %ifend39, %ifend.i273
  %92 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %92, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i275 = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i275, align 8
  %memberidx1.i.i276 = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i276, align 4
  %memberidx2.i.i277 = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i277, align 4
  %94 = load i64, ptr %memberidx.i, align 4
  %.not.i280 = icmp eq i64 %94, 6
  br i1 %.not.i280, label %ifend.i284, label %ifend45

ifend.i284:                                       ; preds = %ifend42
  %memberidx2.i282 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i282, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr nonnull %92, i64 6)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %common.ret, label %ifend45

ifend45:                                          ; preds = %ifend42, %ifend.i284
  %98 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %99, align 8
  %memberidx.i.i286 = getelementptr inbounds %string, ptr %99, i64 0, i32 1
  store ptr %98, ptr %memberidx.i.i286, align 8
  %memberidx1.i.i287 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i287, align 4
  %memberidx2.i.i288 = getelementptr inbounds %string, ptr %99, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i288, align 4
  %100 = load i64, ptr %memberidx.i, align 4
  %.not.i291 = icmp eq i64 %100, 6
  br i1 %.not.i291, label %ifend.i295, label %ifend48

ifend.i295:                                       ; preds = %ifend45
  %memberidx2.i293 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i293, align 8
  %102 = tail call i64 @memcmp(ptr %101, ptr nonnull %98, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %common.ret, label %ifend48

ifend48:                                          ; preds = %ifend45, %ifend.i295
  %104 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %104, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %105 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %105, align 8
  %memberidx.i.i297 = getelementptr inbounds %string, ptr %105, i64 0, i32 1
  store ptr %104, ptr %memberidx.i.i297, align 8
  %memberidx1.i.i298 = getelementptr inbounds %string, ptr %105, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i298, align 4
  %memberidx2.i.i299 = getelementptr inbounds %string, ptr %105, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i299, align 4
  %106 = load i64, ptr %memberidx.i, align 4
  %.not.i302 = icmp eq i64 %106, 7
  br i1 %.not.i302, label %ifend.i306, label %ifend51

ifend.i306:                                       ; preds = %ifend48
  %memberidx2.i304 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %107 = load ptr, ptr %memberidx2.i304, align 8
  %108 = tail call i64 @memcmp(ptr %107, ptr nonnull %104, i64 7)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %common.ret, label %ifend51

ifend51:                                          ; preds = %ifend48, %ifend.i306
  %110 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %110, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %111 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %111, align 8
  %memberidx.i.i308 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  store ptr %110, ptr %memberidx.i.i308, align 8
  %memberidx1.i.i309 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i309, align 4
  %memberidx2.i.i310 = getelementptr inbounds %string, ptr %111, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i310, align 4
  %112 = load i64, ptr %memberidx.i, align 4
  %.not.i313 = icmp eq i64 %112, 7
  br i1 %.not.i313, label %ifend.i317, label %ifend54

ifend.i317:                                       ; preds = %ifend51
  %memberidx2.i315 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i315, align 8
  %114 = tail call i64 @memcmp(ptr %113, ptr nonnull %110, i64 7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %common.ret, label %ifend54

ifend54:                                          ; preds = %ifend51, %ifend.i317
  %116 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %116, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %117 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %117, align 8
  %memberidx.i.i319 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  store ptr %116, ptr %memberidx.i.i319, align 8
  %memberidx1.i.i320 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i320, align 4
  %memberidx2.i.i321 = getelementptr inbounds %string, ptr %117, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i321, align 4
  %118 = load i64, ptr %memberidx.i, align 4
  %.not.i324 = icmp eq i64 %118, 6
  br i1 %.not.i324, label %ifend.i328, label %ifend57

ifend.i328:                                       ; preds = %ifend54
  %memberidx2.i326 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i326, align 8
  %120 = tail call i64 @memcmp(ptr %119, ptr nonnull %116, i64 6)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %common.ret, label %ifend57

ifend57:                                          ; preds = %ifend54, %ifend.i328
  %122 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %122, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %123 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %123, align 8
  %memberidx.i.i330 = getelementptr inbounds %string, ptr %123, i64 0, i32 1
  store ptr %122, ptr %memberidx.i.i330, align 8
  %memberidx1.i.i331 = getelementptr inbounds %string, ptr %123, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i331, align 4
  %memberidx2.i.i332 = getelementptr inbounds %string, ptr %123, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i332, align 4
  %124 = load i64, ptr %memberidx.i, align 4
  %.not.i335 = icmp eq i64 %124, 6
  br i1 %.not.i335, label %ifend.i339, label %ifend60

ifend.i339:                                       ; preds = %ifend57
  %memberidx2.i337 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %125 = load ptr, ptr %memberidx2.i337, align 8
  %126 = tail call i64 @memcmp(ptr %125, ptr nonnull %122, i64 6)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend57, %ifend.i339
  %128 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %128, ptr noundef nonnull align 8 dereferenceable(6) @129, i64 6, i1 false)
  %129 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %129, align 8
  %memberidx.i.i341 = getelementptr inbounds %string, ptr %129, i64 0, i32 1
  store ptr %128, ptr %memberidx.i.i341, align 8
  %memberidx1.i.i342 = getelementptr inbounds %string, ptr %129, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i342, align 4
  %memberidx2.i.i343 = getelementptr inbounds %string, ptr %129, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i343, align 4
  %130 = load i64, ptr %memberidx.i, align 4
  %.not.i346 = icmp eq i64 %130, 6
  br i1 %.not.i346, label %ifend.i350, label %ifend63

ifend.i350:                                       ; preds = %ifend60
  %memberidx2.i348 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %131 = load ptr, ptr %memberidx2.i348, align 8
  %132 = tail call i64 @memcmp(ptr %131, ptr nonnull %128, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %common.ret, label %ifend63

ifend63:                                          ; preds = %ifend60, %ifend.i350
  %134 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %135, align 8
  %memberidx.i.i352 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  store ptr %134, ptr %memberidx.i.i352, align 8
  %memberidx1.i.i353 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i353, align 4
  %memberidx2.i.i354 = getelementptr inbounds %string, ptr %135, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i354, align 4
  %136 = load i64, ptr %memberidx.i, align 4
  %.not.i357 = icmp eq i64 %136, 6
  br i1 %.not.i357, label %ifend.i361, label %ifend66

ifend.i361:                                       ; preds = %ifend63
  %memberidx2.i359 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %137 = load ptr, ptr %memberidx2.i359, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 6)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %common.ret, label %ifend66

ifend66:                                          ; preds = %ifend63, %ifend.i361
  %140 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %140, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %141 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %141, align 8
  %memberidx.i.i363 = getelementptr inbounds %string, ptr %141, i64 0, i32 1
  store ptr %140, ptr %memberidx.i.i363, align 8
  %memberidx1.i.i364 = getelementptr inbounds %string, ptr %141, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i364, align 4
  %memberidx2.i.i365 = getelementptr inbounds %string, ptr %141, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i365, align 4
  %142 = load i64, ptr %memberidx.i, align 4
  %.not.i368 = icmp eq i64 %142, 6
  br i1 %.not.i368, label %ifend.i372, label %ifend69

ifend.i372:                                       ; preds = %ifend66
  %memberidx2.i370 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %143 = load ptr, ptr %memberidx2.i370, align 8
  %144 = tail call i64 @memcmp(ptr %143, ptr nonnull %140, i64 6)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %common.ret, label %ifend69

ifend69:                                          ; preds = %ifend66, %ifend.i372
  %146 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %146, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %147 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %147, align 8
  %memberidx.i.i374 = getelementptr inbounds %string, ptr %147, i64 0, i32 1
  store ptr %146, ptr %memberidx.i.i374, align 8
  %memberidx1.i.i375 = getelementptr inbounds %string, ptr %147, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i375, align 4
  %memberidx2.i.i376 = getelementptr inbounds %string, ptr %147, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i376, align 4
  %148 = load i64, ptr %memberidx.i, align 4
  %.not.i379 = icmp eq i64 %148, 6
  br i1 %.not.i379, label %ifend.i383, label %ifend72

ifend.i383:                                       ; preds = %ifend69
  %memberidx2.i381 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %149 = load ptr, ptr %memberidx2.i381, align 8
  %150 = tail call i64 @memcmp(ptr %149, ptr nonnull %146, i64 6)
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %common.ret, label %ifend72

ifend72:                                          ; preds = %ifend69, %ifend.i383
  %152 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %153 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %153, align 8
  %memberidx.i.i385 = getelementptr inbounds %string, ptr %153, i64 0, i32 1
  store ptr %152, ptr %memberidx.i.i385, align 8
  %memberidx1.i.i386 = getelementptr inbounds %string, ptr %153, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i386, align 4
  %memberidx2.i.i387 = getelementptr inbounds %string, ptr %153, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i387, align 4
  %154 = load i64, ptr %memberidx.i, align 4
  %.not.i390 = icmp eq i64 %154, 7
  br i1 %.not.i390, label %ifend.i394, label %ifend75

ifend.i394:                                       ; preds = %ifend72
  %memberidx2.i392 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i392, align 8
  %156 = tail call i64 @memcmp(ptr %155, ptr nonnull %152, i64 7)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %common.ret, label %ifend75

ifend75:                                          ; preds = %ifend72, %ifend.i394
  %158 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %158, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %159 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %159, align 8
  %memberidx.i.i396 = getelementptr inbounds %string, ptr %159, i64 0, i32 1
  store ptr %158, ptr %memberidx.i.i396, align 8
  %memberidx1.i.i397 = getelementptr inbounds %string, ptr %159, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i397, align 4
  %memberidx2.i.i398 = getelementptr inbounds %string, ptr %159, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i398, align 4
  %160 = load i64, ptr %memberidx.i, align 4
  %.not.i401 = icmp eq i64 %160, 7
  br i1 %.not.i401, label %ifend.i405, label %ifend78

ifend.i405:                                       ; preds = %ifend75
  %memberidx2.i403 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %161 = load ptr, ptr %memberidx2.i403, align 8
  %162 = tail call i64 @memcmp(ptr %161, ptr nonnull %158, i64 7)
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %common.ret, label %ifend78

ifend78:                                          ; preds = %ifend75, %ifend.i405
  %164 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %164, align 8
  %165 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %165, align 8
  %memberidx.i.i407 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  store ptr %164, ptr %memberidx.i.i407, align 8
  %memberidx1.i.i408 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i408, align 4
  %memberidx2.i.i409 = getelementptr inbounds %string, ptr %165, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i409, align 4
  %166 = load i64, ptr %memberidx.i, align 4
  %.not.i412 = icmp eq i64 %166, 8
  br i1 %.not.i412, label %ifend.i416, label %ifend81

ifend.i416:                                       ; preds = %ifend78
  %memberidx2.i414 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %167 = load ptr, ptr %memberidx2.i414, align 8
  %168 = tail call i64 @memcmp(ptr %167, ptr nonnull %164, i64 8)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %common.ret, label %ifend81

ifend81:                                          ; preds = %ifend78, %ifend.i416
  %170 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %170, align 8
  %171 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %171, align 8
  %memberidx.i.i418 = getelementptr inbounds %string, ptr %171, i64 0, i32 1
  store ptr %170, ptr %memberidx.i.i418, align 8
  %memberidx1.i.i419 = getelementptr inbounds %string, ptr %171, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i419, align 4
  %memberidx2.i.i420 = getelementptr inbounds %string, ptr %171, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i420, align 4
  %172 = load i64, ptr %memberidx.i, align 4
  %.not.i423 = icmp eq i64 %172, 8
  br i1 %.not.i423, label %ifend.i427, label %ifend84

ifend.i427:                                       ; preds = %ifend81
  %memberidx2.i425 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %173 = load ptr, ptr %memberidx2.i425, align 8
  %174 = tail call i64 @memcmp(ptr %173, ptr nonnull %170, i64 8)
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %common.ret, label %ifend84

ifend84:                                          ; preds = %ifend81, %ifend.i427
  %176 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i429 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i429, align 8
  %memberidx1.i.i430 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i430, align 4
  %memberidx2.i.i431 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i431, align 4
  %178 = load i64, ptr %memberidx.i, align 4
  %.not.i434 = icmp eq i64 %178, 8
  br i1 %.not.i434, label %ifend.i438, label %ifend87

ifend.i438:                                       ; preds = %ifend84
  %memberidx2.i436 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i436, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 8)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %common.ret, label %ifend87

ifend87:                                          ; preds = %ifend84, %ifend.i438
  %182 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %182, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %183 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %183, align 8
  %memberidx.i.i440 = getelementptr inbounds %string, ptr %183, i64 0, i32 1
  store ptr %182, ptr %memberidx.i.i440, align 8
  %memberidx1.i.i441 = getelementptr inbounds %string, ptr %183, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i441, align 4
  %memberidx2.i.i442 = getelementptr inbounds %string, ptr %183, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i442, align 4
  %184 = load i64, ptr %memberidx.i, align 4
  %.not.i445 = icmp eq i64 %184, 7
  br i1 %.not.i445, label %ifend.i449, label %common.ret

ifend.i449:                                       ; preds = %ifend87
  %memberidx2.i447 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %185 = load ptr, ptr %memberidx2.i447, align 8
  %186 = tail call i64 @memcmp(ptr %185, ptr nonnull %182, i64 7)
  %187 = icmp eq i64 %186, 0
  br label %common.ret
}

define internal fastcc noalias ptr @bin_op_to_op_overload_name(i64 %0) unnamed_addr {
  switch i64 %0, label %common.ret [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 20, label %if.entry16
    i64 21, label %if.entry19
    i64 22, label %if.entry22
    i64 23, label %if.entry25
    i64 24, label %if.entry28
    i64 25, label %if.entry31
    i64 7, label %if.entry34
    i64 8, label %if.entry37
    i64 9, label %if.entry40
    i64 10, label %if.entry43
    i64 11, label %if.entry46
    i64 12, label %if.entry49
    i64 13, label %if.entry52
    i64 14, label %if.entry55
    i64 29, label %if.entry58
    i64 30, label %if.entry61
    i64 15, label %if.entry64
    i64 16, label %if.entry67
    i64 17, label %if.entry70
    i64 26, label %if.entry73
    i64 28, label %if.entry76
    i64 18, label %if.entry79
  ]

common.ret.sink.split:                            ; preds = %if.entry, %if.entry1, %if.entry4, %if.entry7, %if.entry10, %if.entry13, %if.entry16, %if.entry19, %if.entry22, %if.entry25, %if.entry28, %if.entry31, %if.entry34, %if.entry37, %if.entry40, %if.entry43, %if.entry46, %if.entry49, %if.entry52, %if.entry55, %if.entry58, %if.entry61, %if.entry64, %if.entry67, %if.entry70, %if.entry73, %if.entry76, %if.entry79
  %.sink193 = phi ptr [ %30, %if.entry79 ], [ %29, %if.entry76 ], [ %28, %if.entry73 ], [ %27, %if.entry70 ], [ %26, %if.entry67 ], [ %25, %if.entry64 ], [ %24, %if.entry61 ], [ %23, %if.entry58 ], [ %22, %if.entry55 ], [ %21, %if.entry52 ], [ %20, %if.entry49 ], [ %19, %if.entry46 ], [ %18, %if.entry43 ], [ %17, %if.entry40 ], [ %16, %if.entry37 ], [ %15, %if.entry34 ], [ %14, %if.entry31 ], [ %13, %if.entry28 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry19 ], [ %9, %if.entry16 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink191 = phi i64 [ 6, %if.entry79 ], [ 8, %if.entry76 ], [ 8, %if.entry73 ], [ 7, %if.entry70 ], [ 7, %if.entry67 ], [ 6, %if.entry64 ], [ 7, %if.entry61 ], [ 7, %if.entry58 ], [ 6, %if.entry55 ], [ 6, %if.entry52 ], [ 6, %if.entry49 ], [ 6, %if.entry46 ], [ 6, %if.entry43 ], [ 6, %if.entry40 ], [ 6, %if.entry37 ], [ 6, %if.entry34 ], [ 8, %if.entry31 ], [ 8, %if.entry28 ], [ 8, %if.entry25 ], [ 8, %if.entry22 ], [ 8, %if.entry19 ], [ 8, %if.entry16 ], [ 7, %if.entry13 ], [ 7, %if.entry10 ], [ 7, %if.entry7 ], [ 7, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink193, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink191, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink191, ptr %memberidx2.i.i189, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %1
  %common.ret.op = phi ptr [ null, %1 ], [ %2, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %5, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %6, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry16:                                       ; preds = %1
  %9 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %9, align 8
  br label %common.ret.sink.split

if.entry19:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %10, align 8
  br label %common.ret.sink.split

if.entry22:                                       ; preds = %1
  %11 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %11, align 8
  br label %common.ret.sink.split

if.entry25:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %12, align 8
  br label %common.ret.sink.split

if.entry28:                                       ; preds = %1
  %13 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %13, align 8
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %14, align 8
  br label %common.ret.sink.split

if.entry34:                                       ; preds = %1
  %15 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %15, ptr noundef nonnull align 8 dereferenceable(6) @174, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry37:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %16, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry40:                                       ; preds = %1
  %17 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %17, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry43:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry46:                                       ; preds = %1
  %19 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %19, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry49:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %20, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry52:                                       ; preds = %1
  %21 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %21, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry55:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %22, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry58:                                       ; preds = %1
  %23 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %23, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry61:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %24, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry64:                                       ; preds = %1
  %25 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %25, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry67:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @175, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry70:                                       ; preds = %1
  %27 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %27, ptr noundef nonnull align 8 dereferenceable(7) @176, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry73:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %28, align 8
  br label %common.ret.sink.split

if.entry76:                                       ; preds = %1
  %29 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %29, align 8
  br label %common.ret.sink.split

if.entry79:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %30, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  br label %common.ret.sink.split
}

define internal fastcc noalias ptr @dump_bin_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend54 [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 7, label %if.entry16
    i64 8, label %if.entry19
    i64 9, label %if.entry22
    i64 10, label %if.entry25
    i64 11, label %if.entry28
    i64 12, label %if.entry31
    i64 13, label %if.entry34
    i64 14, label %if.entry37
    i64 15, label %if.entry40
    i64 16, label %if.entry43
    i64 17, label %if.entry46
    i64 18, label %if.entry49
    i64 19, label %if.entry52
  ]

common.ret:                                       ; preds = %ifend54, %if.entry52, %if.entry49, %if.entry46, %if.entry43, %if.entry40, %if.entry37, %if.entry34, %if.entry31, %if.entry28, %if.entry25, %if.entry22, %if.entry19, %if.entry16, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink133 = phi ptr [ %22, %ifend54 ], [ %21, %if.entry52 ], [ %20, %if.entry49 ], [ %19, %if.entry46 ], [ %18, %if.entry43 ], [ %17, %if.entry40 ], [ %16, %if.entry37 ], [ %15, %if.entry34 ], [ %14, %if.entry31 ], [ %13, %if.entry28 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry19 ], [ %9, %if.entry16 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink131 = phi i64 [ 2, %ifend54 ], [ 1, %if.entry52 ], [ 2, %if.entry49 ], [ 1, %if.entry46 ], [ 3, %if.entry43 ], [ 2, %if.entry40 ], [ 2, %if.entry37 ], [ 2, %if.entry34 ], [ 2, %if.entry31 ], [ 2, %if.entry28 ], [ 2, %if.entry25 ], [ 1, %if.entry22 ], [ 2, %if.entry19 ], [ 1, %if.entry16 ], [ 1, %if.entry13 ], [ 2, %if.entry10 ], [ 1, %if.entry7 ], [ 1, %if.entry4 ], [ 1, %if.entry1 ], [ 1, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i127 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink133, ptr %memberidx.i.i127, align 8
  %memberidx1.i.i128 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink131, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink131, ptr %memberidx2.i.i129, align 4
  ret ptr %2

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 1)
  store i8 43, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %4, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 1)
  store i8 42, ptr %5, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 1)
  store i8 47, ptr %6, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 2)
  store i16 10794, ptr %7, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %8, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %9 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %9, align 8
  br label %common.ret

if.entry19:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 2)
  store i16 15678, ptr %10, align 8
  br label %common.ret

if.entry22:                                       ; preds = %1
  %11 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %11, align 8
  br label %common.ret

if.entry25:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 2)
  store i16 15676, ptr %12, align 8
  br label %common.ret

if.entry28:                                       ; preds = %1
  %13 = tail call ptr @malloc(i32 2)
  store i16 15677, ptr %13, align 8
  br label %common.ret

if.entry31:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 2)
  store i16 15649, ptr %14, align 8
  br label %common.ret

if.entry34:                                       ; preds = %1
  %15 = tail call ptr @malloc(i32 2)
  store i16 15420, ptr %15, align 8
  br label %common.ret

if.entry37:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 2)
  store i16 15934, ptr %16, align 8
  br label %common.ret

if.entry40:                                       ; preds = %1
  %17 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %17, align 8
  br label %common.ret

if.entry43:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %18, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  br label %common.ret

if.entry46:                                       ; preds = %1
  %19 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %19, align 8
  br label %common.ret

if.entry49:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %20, align 8
  br label %common.ret

if.entry52:                                       ; preds = %1
  %21 = tail call ptr @malloc(i32 1)
  store i8 61, ptr %21, align 8
  br label %common.ret

ifend54:                                          ; preds = %1
  %22 = tail call ptr @malloc(i32 2)
  store i16 11822, ptr %22, align 8
  br label %common.ret
}

define internal fastcc void @check_cast_lower_bits(ptr nocapture %0, ptr nocapture %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %4, align 4
  %8 = load i64, ptr %6, align 4
  %.not = icmp eq i64 %7, %8
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %2
  %9 = and i64 %7, -2
  %10 = icmp eq i64 %9, 8
  %11 = add i64 %8, -1
  %12 = icmp ult i64 %11, 7
  %13 = and i1 %10, %12
  br i1 %13, label %if.entry4, label %else5

ifend:                                            ; preds = %if.entry7, %ifend12, %if.entry4, %2
  ret void

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %14, align 4
  %memberidx.i.i.i50 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i50, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 1
  %memberidx.i.i52 = getelementptr inbounds %TypeCastExpression, ptr %14, i64 0, i32 4
  store ptr %5, ptr %memberidx.i.i52, align 8
  %memberidx1.i.i53 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 3
  store ptr %4, ptr %memberidx1.i.i53, align 8
  %memberidx3.i.i55 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 1
  %15 = load i1, ptr %memberidx3.i.i55, align 1
  store i1 %15, ptr %memberidx1.i.i.i51, align 1
  store ptr %14, ptr %1, align 8
  br label %ifend

else5:                                            ; preds = %if.entry
  %16 = add i64 %7, -1
  %17 = icmp ult i64 %16, 7
  %18 = and i64 %8, -2
  %19 = icmp eq i64 %18, 8
  %20 = and i1 %17, %19
  br i1 %20, label %if.entry7, label %else8

if.entry7:                                        ; preds = %else5
  %21 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %21, align 4
  %memberidx.i.i.i56 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i56, align 4
  %memberidx1.i.i.i57 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %memberidx.i.i58 = getelementptr inbounds %TypeCastExpression, ptr %21, i64 0, i32 4
  store ptr %3, ptr %memberidx.i.i58, align 8
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  store ptr %6, ptr %memberidx1.i.i59, align 8
  %memberidx3.i.i61 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %22 = load i1, ptr %memberidx3.i.i61, align 1
  store i1 %22, ptr %memberidx1.i.i.i57, align 1
  store ptr %21, ptr %0, align 8
  br label %ifend

else8:                                            ; preds = %else5
  %23 = icmp sgt i64 %7, %8
  %ternary.i = select i1 %23, ptr %4, ptr %6
  %24 = load i64, ptr %ternary.i, align 4
  %25 = add i64 %24, -1
  %26 = icmp ult i64 %25, 7
  %27 = and i1 %12, %26
  br i1 %27, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %else8
  %memberidx13 = getelementptr inbounds %IntType, ptr %ternary.i, i64 0, i32 1
  %28 = load i1, ptr %memberidx13, align 1
  %memberidx14 = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  %29 = load i1, ptr %memberidx14, align 1
  %30 = xor i1 %28, %29
  br i1 %30, label %if.entry15, label %ifend12

ifend12:                                          ; preds = %if.entry15, %if.entry10, %else8
  %31 = phi ptr [ %.pre, %if.entry15 ], [ %3, %if.entry10 ], [ %3, %else8 ]
  %32 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %32, align 4
  %memberidx.i.i.i44 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i44, align 4
  %memberidx1.i.i.i45 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 1
  %memberidx.i.i46 = getelementptr inbounds %TypeCastExpression, ptr %32, i64 0, i32 4
  store ptr %31, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i47, align 8
  %memberidx3.i.i49 = getelementptr inbounds %Expression, ptr %31, i64 0, i32 1
  %33 = load i1, ptr %memberidx3.i.i49, align 1
  store i1 %33, ptr %memberidx1.i.i.i45, align 1
  store ptr %32, ptr %0, align 8
  %34 = load ptr, ptr %1, align 8
  %35 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %35, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %35, i64 0, i32 4
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %36 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %36, ptr %memberidx1.i.i.i, align 1
  store ptr %35, ptr %1, align 8
  br label %ifend

if.entry15:                                       ; preds = %if.entry10
  store i1 true, ptr %memberidx14, align 1
  store i1 true, ptr %memberidx13, align 1
  %.pre = load ptr, ptr %0, align 8
  br label %ifend12
}

define internal fastcc noalias ptr @dump_unary_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend15 [
    i64 2, label %if.entry
    i64 3, label %if.entry1
    i64 4, label %if.entry4
    i64 5, label %if.entry7
    i64 6, label %if.entry10
    i64 7, label %if.entry13
  ]

common.ret:                                       ; preds = %ifend15, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink42 = phi ptr [ %9, %ifend15 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink40 = phi i64 [ 1, %ifend15 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 8, %if.entry7 ], [ 8, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i36 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink42, ptr %memberidx.i.i36, align 8
  %memberidx1.i.i37 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink40, ptr %memberidx1.i.i37, align 4
  %memberidx2.i.i38 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink40, ptr %memberidx2.i.i38, align 4
  ret ptr %2

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @183, i64 7, i1 false)
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @184, i64 7, i1 false)
  br label %common.ret

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 8)
  store i64 3110625547759087656, ptr %5, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 8)
  store i64 3255303685788364840, ptr %6, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %7, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 33, ptr %8, align 8
  br label %common.ret

ifend15:                                          ; preds = %1
  %9 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %9, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_store_expr_to_mem(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %next_args.i = alloca [2 x ptr], align 8
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp ne i64 %5, 6
  %memberidx1 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %7 = load i1, ptr %memberidx1, align 1
  %8 = or i1 %7, %6
  br i1 %8, label %else, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx2 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load i64, ptr %9, align 4
  %.not = icmp eq i64 %10, 20
  br i1 %.not, label %ifend6, label %if.entry4

else:                                             ; preds = %4
  %11 = icmp ne i64 %5, 7
  %12 = or i1 %7, %11
  br i1 %12, label %else10, label %if.entry9

common.ret:                                       ; preds = %CodeGen_store_tuple_elements.exit, %if.entry4, %ifend
  %common.ret.op = phi ptr [ %value.0, %ifend ], [ %19, %if.entry4 ], [ %2, %CodeGen_store_tuple_elements.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else10, %ifend6
  %value.0 = phi ptr [ %20, %ifend6 ], [ %39, %else10 ]
  %13 = tail call ptr @LLVMBuildStore(ptr %1, ptr %value.0, ptr %2)
  br label %common.ret

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %args, align 8
  %16 = getelementptr inbounds ptr, ptr %args, i64 1
  store ptr %15, ptr %16, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %9, i1 true)
  %18 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %17, ptr %2, ptr nonnull %args, i64 2, ptr nonnull @80)
  %19 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %18, ptr nonnull %3)
  br label %common.ret

ifend6:                                           ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %9, ptr nonnull %3)
  br label %ifend

if.entry9:                                        ; preds = %else
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %next_args.i)
  %21 = tail call ptr @LLVMInt32Type()
  %22 = tail call ptr @LLVMConstInt(ptr %21, i64 0, i1 false)
  store ptr %22, ptr %next_args.i, align 8
  %23 = getelementptr inbounds ptr, ptr %next_args.i, i64 1
  store ptr null, ptr %23, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %24 = load ptr, ptr %memberidx.i, align 8
  %25 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %24, i1 true)
  %memberidx1.i = getelementptr inbounds %TupleExpression, ptr %3, i64 0, i32 4
  %26 = load ptr, ptr %memberidx1.i, align 8
  %27 = tail call ptr @malloc(i32 25)
  %memberidx.i.i = getelementptr inbounds %Array_Expression_, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %26, i64 0, i32 2
  %29 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %27, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 3
  store ptr %28, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 2
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %CodeGen_store_tuple_elements.exit, label %for.body.i

for.body.i:                                       ; preds = %if.entry9, %for.body.i
  %31 = phi i64 [ %37, %for.body.i ], [ 1, %if.entry9 ]
  %value.0.i41.in = phi ptr [ %38, %for.body.i ], [ %28, %if.entry9 ]
  %idx.0.i40 = phi i64 [ %32, %for.body.i ], [ 0, %if.entry9 ]
  %value.0.i41 = load ptr, ptr %value.0.i41.in, align 8
  %32 = add nuw nsw i64 %idx.0.i40, 1
  %33 = call ptr @LLVMConstInt(ptr %21, i64 %idx.0.i40, i1 false)
  store ptr %33, ptr %23, align 8
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %25, ptr %2, ptr nonnull %next_args.i, i64 2, ptr nonnull @80)
  %35 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.0.i41)
  %36 = call ptr @LLVMBuildStore(ptr %1, ptr %35, ptr %34)
  %37 = add nuw nsw i64 %31, 1
  store i64 %37, ptr %memberidx1.i.i.i, align 4
  %38 = getelementptr inbounds ptr, ptr %28, i64 %31
  %.not42 = icmp slt i64 %31, %29
  br i1 %.not42, label %for.body.i, label %CodeGen_store_tuple_elements.exit

CodeGen_store_tuple_elements.exit:                ; preds = %for.body.i, %if.entry9
  call void @free(ptr nonnull %27)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %next_args.i)
  br label %common.ret

else10:                                           ; preds = %else
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %3)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_array_exp(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  %common.ret.op = phi ptr [ %7, %if.entry ], [ %43, %for.end ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %7 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %4, ptr nonnull %2)
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx3 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %8 = load i1, ptr %memberidx3, align 1
  br i1 %8, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  %9 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %9, ptr noundef nonnull align 8 dereferenceable(54) @256, i64 54, i1 false)
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i, align 4
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %13 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %14 = tail call ptr %13(ptr nonnull %12)
  %15 = load i64, ptr %memberidx1.i.i.i, align 4
  %16 = tail call i64 @write(i64 1, ptr %14, i64 %15)
  %17 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %17)
  tail call void @free(ptr %12)
  %18 = load ptr, ptr %10, align 8
  %memberidx.i.i.i35 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx.i.i.i35, align 8
  %20 = tail call ptr %19(ptr nonnull %10)
  %21 = load i64, ptr %memberidx1.i.i, align 4
  %22 = tail call i64 @write(i64 1, ptr %20, i64 %21)
  %23 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %24 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %24)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  %.pre = load ptr, ptr %memberidx, align 8
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %25 = phi ptr [ %4, %ifend ], [ %.pre, %if.entry4 ]
  %memberidx8 = getelementptr inbounds %ArrayType, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %26, i1 true)
  %memberidx9 = getelementptr inbounds %ArrayExpression, ptr %2, i64 0, i32 4
  %28 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx10, align 4
  %30 = alloca ptr, i64 %29, align 8
  %31 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %28, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i, align 8
  %33 = load i64, ptr %memberidx10, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i29 = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 1
  %memberidx2.i.i30 = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i30, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i29, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %for.end, label %for.body

for.body:                                         ; preds = %ifend6, %for.body
  %35 = phi i64 [ %39, %for.body ], [ 1, %ifend6 ]
  %value.040.in = phi ptr [ %40, %for.body ], [ %32, %ifend6 ]
  %idx.039 = phi i64 [ %36, %for.body ], [ 0, %ifend6 ]
  %value.040 = load ptr, ptr %value.040.in, align 8
  %36 = add nuw nsw i64 %idx.039, 1
  %37 = getelementptr inbounds ptr, ptr %30, i64 %idx.039
  %38 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.040)
  store ptr %38, ptr %37, align 8
  %39 = add nuw nsw i64 %35, 1
  store i64 %39, ptr %memberidx1.i.i29, align 4
  %40 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not = icmp slt i64 %35, %33
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend6
  tail call void @free(ptr nonnull %31)
  %41 = load ptr, ptr %memberidx9, align 8
  %memberidx14 = getelementptr inbounds %Array_Expression_, ptr %41, i64 0, i32 2
  %42 = load i64, ptr %memberidx14, align 4
  %43 = call ptr @LLVMConstArray(ptr %27, ptr nonnull %30, i64 %42)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_var_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Var_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %memberidx2 = getelementptr inbounds %Var, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 3
  %19 = load i1, ptr %memberidx3, align 1
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %memberidx4, align 8
  %21 = load ptr, ptr %20, align 8
  %memberidx5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %21, i64 0, i32 5
  %22 = load ptr, ptr %memberidx5, align 8
  %23 = tail call ptr %22(ptr nonnull %20)
  %24 = load ptr, ptr %17, align 8
  %25 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %24, i1 true)
  %26 = load ptr, ptr %0, align 8
  %27 = tail call ptr @LLVMAddGlobal(ptr %26, ptr %25, ptr %23)
  %.not31 = icmp eq ptr %18, null
  br i1 %.not31, label %ifend10, label %if.entry8

else:                                             ; preds = %3
  %memberidx.i32 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %28 = load ptr, ptr %memberidx.i32, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %29 = load i64, ptr %6, align 4
  %30 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %9, i64 %29, i64 %14)
  %31 = load ptr, ptr %5, align 8
  %32 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 %30, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 %30, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %33 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %32)
  %memberidx.i40 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %28, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i40, align 4
  %35 = urem i64 %33, %34
  %36 = load ptr, ptr %28, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  %.not.i = icmp eq ptr %38, null
  br i1 %.not.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %39 = phi ptr [ %49, %else.i ], [ %36, %else ]
  %40 = phi i64 [ %50, %else.i ], [ %34, %else ]
  %41 = phi ptr [ %54, %else.i ], [ %38, %else ]
  %hash.0.i = phi i64 [ %52, %else.i ], [ %35, %else ]
  %42 = load ptr, ptr %41, align 8
  %memberidx.i.i41 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i41, align 4
  %44 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i = icmp eq i64 %43, %44
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i42 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  %45 = load ptr, ptr %memberidx2.i.i42, align 8
  %46 = load ptr, ptr %memberidx.i.i.i, align 8
  %47 = call i64 @memcmp(ptr %45, ptr %46, i64 %43)
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i40, align 4
  %.pre45 = load ptr, ptr %28, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre46.pre = load ptr, ptr %28, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre46.pre, i64 %hash.0.i
  %.pre47.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre47.pre, null
  br i1 %.not25.i, label %Map_string_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %49 = phi ptr [ %.pre45, %ifend.i.i.else.i_crit_edge ], [ %39, %while.entry.i ]
  %50 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %40, %while.entry.i ]
  %51 = add nuw i64 %hash.0.i, 1
  %52 = urem i64 %51, %50
  %53 = getelementptr inbounds ptr, ptr %49, i64 %52
  %54 = load ptr, ptr %53, align 8
  %.not26.i = icmp eq ptr %54, null
  br i1 %.not26.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre47.pre, i64 0, i32 1
  %55 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %55, %if.entry7.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %.not = icmp eq ptr %18, null
  br i1 %.not, label %ifend, label %if.entry11

ifend:                                            ; preds = %if.entry11, %Map_string_LLVMValueRef____getitem__.exit, %ifend10
  ret void

if.entry8:                                        ; preds = %if.entry
  %56 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %18)
  tail call void @LLVMSetInitializer(ptr %27, ptr %56)
  br label %ifend10

ifend10:                                          ; preds = %if.entry, %if.entry8
  %memberidx.i34 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %57 = load ptr, ptr %memberidx.i34, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %58 = load i64, ptr %memberidx1.i, align 4
  %59 = load i64, ptr %6, align 4
  %60 = load i64, ptr %memberidx3.i, align 4
  %61 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %58, i64 %59, i64 %60)
  %62 = load ptr, ptr %4, align 8
  %63 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i.i37 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i.i37, align 8
  %memberidx1.i.i.i38 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 %61, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 %61, ptr %memberidx2.i.i.i39, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %57, ptr nonnull %63, ptr %27)
  br label %ifend

if.entry11:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit
  %64 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr nonnull %18)
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_const_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Const_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %memberidx2 = getelementptr inbounds %Const, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 3
  %19 = load i1, ptr %memberidx3, align 1
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %20 = load ptr, ptr %memberidx4, align 8
  %21 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %20, i1 true)
  %memberidx5 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 1
  %22 = load ptr, ptr %memberidx5, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx6, align 8
  %25 = tail call ptr %24(ptr nonnull %22)
  %26 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %18)
  %27 = load ptr, ptr %0, align 8
  %28 = tail call ptr @LLVMAddGlobal(ptr %27, ptr %21, ptr %25)
  tail call void @LLVMSetInitializer(ptr %28, ptr %26)
  tail call void @LLVMSetGlobalConstant(ptr %28, i1 true)
  %memberidx.i24 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %29 = load ptr, ptr %memberidx.i24, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %30 = load i64, ptr %memberidx1.i, align 4
  %31 = load i64, ptr %6, align 4
  %32 = load i64, ptr %memberidx3.i, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %5, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %29, ptr nonnull %35, ptr %28)
  br label %ifend

else:                                             ; preds = %3
  %memberidx.i26 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %36 = load ptr, ptr %memberidx.i26, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %37 = load i64, ptr %6, align 4
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %9, i64 %37, i64 %14)
  %39 = load ptr, ptr %4, align 8
  %40 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i.i29 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i.i29, align 8
  %memberidx1.i.i.i30 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx1.i.i.i30, align 4
  %memberidx2.i.i.i31 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 %38, ptr %memberidx2.i.i.i31, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %41 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %40)
  %memberidx.i32 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %36, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i32, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %36, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %.not.i = icmp eq ptr %46, null
  br i1 %.not.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %47 = phi ptr [ %57, %else.i ], [ %44, %else ]
  %48 = phi i64 [ %58, %else.i ], [ %42, %else ]
  %49 = phi ptr [ %62, %else.i ], [ %46, %else ]
  %hash.0.i = phi i64 [ %60, %else.i ], [ %43, %else ]
  %50 = load ptr, ptr %49, align 8
  %memberidx.i.i33 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i33, align 4
  %52 = load i64, ptr %memberidx1.i.i.i30, align 4
  %.not.i.i = icmp eq i64 %51, %52
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i34 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  %53 = load ptr, ptr %memberidx2.i.i34, align 8
  %54 = load ptr, ptr %memberidx.i.i.i29, align 8
  %55 = call i64 @memcmp(ptr %53, ptr %54, i64 %51)
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i32, align 4
  %.pre36 = load ptr, ptr %36, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre37.pre = load ptr, ptr %36, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre37.pre, i64 %hash.0.i
  %.pre38.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre38.pre, null
  br i1 %.not25.i, label %Map_string_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %57 = phi ptr [ %.pre36, %ifend.i.i.else.i_crit_edge ], [ %47, %while.entry.i ]
  %58 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %48, %while.entry.i ]
  %59 = add nuw i64 %hash.0.i, 1
  %60 = urem i64 %59, %58
  %61 = getelementptr inbounds ptr, ptr %57, i64 %60
  %62 = load ptr, ptr %61, align 8
  %.not26.i = icmp eq ptr %62, null
  br i1 %.not26.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre38.pre, i64 0, i32 1
  %63 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %63, %if.entry7.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %64 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr %18)
  br label %ifend

ifend:                                            ; preds = %Map_string_LLVMValueRef____getitem__.exit, %if.entry
  ret void
}

define internal fastcc void @Map_string_LLVMValueRef__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_LLVMValueRef____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_LLVMValueRef__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_store_array_elements(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %next_args = alloca [1 x ptr], align 8
  %4 = tail call ptr @LLVMIntType(i64 64)
  %5 = tail call ptr @LLVMConstInt(ptr %4, i64 1, i1 false)
  store ptr %5, ptr %next_args, align 8
  %6 = tail call ptr @LLVMTypeOf(ptr %2)
  %memberidx = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 2
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %value.017.in = phi ptr [ %17, %for.body ], [ %9, %for.entry ]
  %addr.016 = phi ptr [ %15, %for.body ], [ %2, %for.entry ]
  %value.017 = load ptr, ptr %value.017.in, align 8
  %13 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.017)
  %14 = call ptr @LLVMBuildStore(ptr %1, ptr %13, ptr %addr.016)
  %15 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %6, ptr %addr.016, ptr nonnull %next_args, i64 1, ptr nonnull @80)
  %16 = add nuw nsw i64 %12, 1
  %17 = getelementptr inbounds ptr, ptr %9, i64 %12
  %.not = icmp slt i64 %12, %10
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %addr.0.lcssa = phi ptr [ %2, %for.entry ], [ %15, %for.body ]
  tail call void @free(ptr nonnull %8)
  ret ptr %addr.0.lcssa
}

define internal fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %6 = load i64, ptr %2, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %2, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i5.i, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %memberidx2 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 1
  %15 = load ptr, ptr %memberidx2, align 8
  %16 = tail call ptr @malloc(i32 25)
  %17 = load ptr, ptr %15, align 8
  %memberidx1.i = getelementptr inbounds %Map_string_VarId_, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i50 = getelementptr inbounds %Map_string_VarId_, ptr %15, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i50, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_VarId_, ptr %16, i64 0, i32 1
  store ptr %17, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_VarId_, ptr %16, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_VarId_, ptr %16, i64 0, i32 3
  %20 = add nsw i64 %18, -1
  store i64 %20, ptr %memberidx2.i.i, align 4
  %21 = icmp sgt i64 %18, 0
  br i1 %21, label %while.entry.i, label %MapIterator_string_VarId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %22 = phi i64 [ %25, %ifend.i ], [ %20, %for.entry ]
  %23 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %17, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %23, i64 1
  %24 = load ptr, ptr %23, align 8
  %.not.i = icmp eq ptr %24, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_VarId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %25 = add nsw i64 %22, -1
  store i64 %25, ptr %memberidx2.i.i, align 4
  %26 = icmp sgt i64 %22, 0
  br i1 %26, label %while.entry.i, label %MapIterator_string_VarId__next.exit.loopexit

MapIterator_string_VarId__next.exit.loopexit:     ; preds = %ifend.i, %while.entry.i
  %27 = phi i64 [ %25, %ifend.i ], [ %22, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_VarId__next.exit

MapIterator_string_VarId__next.exit:              ; preds = %MapIterator_string_VarId__next.exit.loopexit, %for.entry
  %28 = phi i64 [ %27, %MapIterator_string_VarId__next.exit.loopexit ], [ %20, %for.entry ]
  %.pn103 = phi ptr [ %incdec.ptr.i, %MapIterator_string_VarId__next.exit.loopexit ], [ %17, %for.entry ]
  %storemerge9497 = add nsw i64 %19, -1
  store i64 %storemerge9497, ptr %memberidx3.i.i, align 4
  %storemerge98 = icmp slt i64 %19, 1
  store i1 %storemerge98, ptr %16, align 1
  br i1 %storemerge98, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_VarId__next.exit
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_VarId__next.exit77
  %29 = phi i64 [ %storemerge9497, %for.body.lr.ph ], [ %storemerge94, %MapIterator_string_VarId__next.exit77 ]
  %30 = phi i64 [ %28, %for.body.lr.ph ], [ %70, %MapIterator_string_VarId__next.exit77 ]
  %memberidx1.i.i.promoted = phi ptr [ %.pn103, %for.body.lr.ph ], [ %.pn102, %MapIterator_string_VarId__next.exit77 ]
  %var_value_type.099 = phi ptr [ undef, %for.body.lr.ph ], [ %var_value_type.1, %MapIterator_string_VarId__next.exit77 ]
  %var_entry.0.in = getelementptr inbounds ptr, ptr %memberidx1.i.i.promoted, i64 -1
  %var_entry.0 = load ptr, ptr %var_entry.0.in, align 8
  %31 = load ptr, ptr %var_entry.0, align 8
  %memberidx5 = getelementptr inbounds %MapEntry_string_VarId_, ptr %var_entry.0, i64 0, i32 1
  %32 = load ptr, ptr %memberidx5, align 8
  %33 = load i64, ptr %32, align 4
  switch i64 %33, label %ifend [
    i64 1, label %if.entry
    i64 0, label %if.entry10
    i64 2, label %if.entry16
  ]

for.end:                                          ; preds = %MapIterator_string_VarId__next.exit77, %MapIterator_string_VarId__next.exit
  tail call void @free(ptr nonnull %16)
  %memberidx23 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 7
  %34 = load ptr, ptr %memberidx23, align 8
  %35 = call ptr @malloc(i32 25)
  %memberidx.i53 = getelementptr inbounds %Array_ScopeId_, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %Array_ScopeId_, ptr %34, i64 0, i32 2
  %37 = load i64, ptr %memberidx1.i54, align 4
  store i1 false, ptr %35, align 1
  %memberidx1.i.i55 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 1
  %memberidx2.i.i56 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 3
  store ptr %36, ptr %memberidx2.i.i56, align 8
  %memberidx3.i.i57 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 2
  store i64 %37, ptr %memberidx3.i.i57, align 4
  store i64 1, ptr %memberidx1.i.i55, align 4
  %38 = icmp slt i64 %37, 1
  br i1 %38, label %for.end27, label %for.body25

if.entry:                                         ; preds = %for.body
  %39 = load ptr, ptr %memberidx, align 8
  %memberidx.i60 = getelementptr inbounds %Program, ptr %39, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i60, align 8
  %memberidx1.i61 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %41 = load i64, ptr %memberidx1.i61, align 4
  %memberidx.i.i62 = getelementptr inbounds %Array_Module_, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i62, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i63 = getelementptr inbounds %Module, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx2.i63, align 8
  %memberidx3.i64 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i64, align 4
  %memberidx.i5.i65 = getelementptr inbounds %Array_Var_, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i5.i65, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  br label %ifend.sink.split

ifend.sink.split:                                 ; preds = %if.entry, %if.entry10, %if.entry16
  %.sink = phi ptr [ %92, %if.entry16 ], [ %memberidx14, %if.entry10 ], [ %49, %if.entry ]
  %50 = load ptr, ptr %.sink, align 8
  br label %ifend

ifend:                                            ; preds = %ifend.sink.split, %for.body
  %var_value_type.1 = phi ptr [ %var_value_type.099, %for.body ], [ %50, %ifend.sink.split ]
  %51 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %var_value_type.1, i1 true)
  %52 = load ptr, ptr %31, align 8
  %memberidx21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx21, align 8
  %54 = call ptr %53(ptr nonnull %31)
  %55 = call ptr @LLVMBuildAlloca(ptr %1, ptr %51, ptr %54)
  %56 = load ptr, ptr %memberidx.i66, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i67 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i.i67, align 4
  %58 = load i64, ptr %32, align 4
  %memberidx2.i.i68 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %59 = load i64, ptr %memberidx2.i.i68, align 4
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %57, i64 %58, i64 %59)
  %61 = load ptr, ptr %3, align 8
  %62 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 %60, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %56, ptr nonnull %62, ptr %55)
  %63 = add nsw i64 %30, -1
  store i64 %63, ptr %memberidx2.i.i, align 4
  %64 = icmp sgt i64 %30, 0
  br i1 %64, label %while.entry.i73, label %MapIterator_string_VarId__next.exit77

while.entry.i73:                                  ; preds = %ifend, %ifend.i76
  %65 = phi i64 [ %68, %ifend.i76 ], [ %63, %ifend ]
  %66 = phi ptr [ %incdec.ptr.i71, %ifend.i76 ], [ %memberidx1.i.i.promoted, %ifend ]
  %incdec.ptr.i71 = getelementptr inbounds ptr, ptr %66, i64 1
  %67 = load ptr, ptr %66, align 8
  %.not.i72 = icmp eq ptr %67, null
  br i1 %.not.i72, label %ifend.i76, label %MapIterator_string_VarId__next.exit77.loopexit

ifend.i76:                                        ; preds = %while.entry.i73
  %68 = add nsw i64 %65, -1
  store i64 %68, ptr %memberidx2.i.i, align 4
  %.not104 = icmp eq i64 %65, 0
  br i1 %.not104, label %MapIterator_string_VarId__next.exit77.loopexit, label %while.entry.i73

MapIterator_string_VarId__next.exit77.loopexit:   ; preds = %ifend.i76, %while.entry.i73
  %69 = phi i64 [ -1, %ifend.i76 ], [ %65, %while.entry.i73 ]
  store ptr %incdec.ptr.i71, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_VarId__next.exit77

MapIterator_string_VarId__next.exit77:            ; preds = %MapIterator_string_VarId__next.exit77.loopexit, %ifend
  %70 = phi i64 [ %69, %MapIterator_string_VarId__next.exit77.loopexit ], [ %63, %ifend ]
  %.pn102 = phi ptr [ %incdec.ptr.i71, %MapIterator_string_VarId__next.exit77.loopexit ], [ %memberidx1.i.i.promoted, %ifend ]
  %storemerge94 = add nsw i64 %29, -1
  store i64 %storemerge94, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %29, 1
  store i1 %storemerge, ptr %16, align 1
  br i1 %storemerge, label %for.end, label %for.body

if.entry10:                                       ; preds = %for.body
  %71 = load ptr, ptr %memberidx, align 8
  %memberidx.i78 = getelementptr inbounds %Program, ptr %71, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %73 = load i64, ptr %memberidx1.i79, align 4
  %memberidx.i.i80 = getelementptr inbounds %Array_Module_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i80, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %memberidx2.i81 = getelementptr inbounds %Module, ptr %76, i64 0, i32 4
  %77 = load ptr, ptr %memberidx2.i81, align 8
  %memberidx3.i82 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %78 = load i64, ptr %memberidx3.i82, align 4
  %memberidx.i5.i83 = getelementptr inbounds %Array_Function_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i5.i83, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %memberidx14 = getelementptr inbounds %Function, ptr %81, i64 0, i32 4
  br label %ifend.sink.split

if.entry16:                                       ; preds = %for.body
  %82 = load ptr, ptr %memberidx, align 8
  %memberidx.i84 = getelementptr inbounds %Program, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %84 = load i64, ptr %memberidx1.i85, align 4
  %memberidx.i.i86 = getelementptr inbounds %Array_Module_, ptr %83, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i.i86, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx2.i87 = getelementptr inbounds %Module, ptr %87, i64 0, i32 2
  %88 = load ptr, ptr %memberidx2.i87, align 8
  %memberidx3.i88 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %89 = load i64, ptr %memberidx3.i88, align 4
  %memberidx.i5.i89 = getelementptr inbounds %Array_Const_, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx.i5.i89, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  br label %ifend.sink.split

for.body25:                                       ; preds = %for.end, %for.body25
  %93 = phi i64 [ %94, %for.body25 ], [ 1, %for.end ]
  %child_scope.096.in = phi ptr [ %95, %for.body25 ], [ %36, %for.end ]
  %child_scope.096 = load ptr, ptr %child_scope.096.in, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr %0, ptr %1, ptr %child_scope.096)
  %94 = add nuw nsw i64 %93, 1
  store i64 %94, ptr %memberidx1.i.i55, align 4
  %95 = getelementptr inbounds ptr, ptr %36, i64 %93
  %.not = icmp slt i64 %93, %37
  br i1 %.not, label %for.body25, label %for.end27

for.end27:                                        ; preds = %for.body25, %for.end
  tail call void @free(ptr nonnull %35)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_type(ptr nocapture %0, ptr nocapture readonly %1, i1 %2) unnamed_addr {
  %4 = load i64, ptr %1, align 4
  switch i64 %4, label %ifend58 [
    i64 10, label %if.entry
    i64 0, label %if.entry5
    i64 1, label %if.entry9
    i64 2, label %if.entry13
    i64 3, label %if.entry17
    i64 4, label %if.entry21
    i64 6, label %if.entry25
    i64 5, label %if.entry29
    i64 7, label %if.entry33
    i64 8, label %if.entry37
    i64 9, label %if.entry41
    i64 13, label %if.entry45
    i64 14, label %if.entry50
    i64 20, label %if.entry56
  ]

common.ret:                                       ; preds = %if.entry88, %for.end, %true_block91, %true_block, %if.entry102, %ifend100, %for.end81, %if.entry50, %if.entry45, %if.entry41, %if.entry37, %if.entry33, %if.entry29, %if.entry25, %if.entry21, %if.entry17, %if.entry13, %if.entry9, %if.entry5, %if.entry
  %common.ret.op = phi ptr [ %5, %if.entry ], [ %6, %if.entry5 ], [ %7, %if.entry9 ], [ %8, %if.entry13 ], [ %9, %if.entry17 ], [ %10, %if.entry21 ], [ %11, %if.entry25 ], [ %12, %if.entry29 ], [ %13, %if.entry33 ], [ %14, %if.entry37 ], [ %15, %if.entry41 ], [ %18, %if.entry45 ], [ %22, %if.entry50 ], [ %57, %for.end81 ], [ null, %ifend100 ], [ %108, %if.entry102 ], [ %43, %true_block ], [ %76, %true_block91 ], [ %42, %for.end ], [ %75, %if.entry88 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %5 = tail call ptr @LLVMVoidType()
  br label %common.ret

if.entry5:                                        ; preds = %3
  %6 = tail call ptr @LLVMInt1Type()
  br label %common.ret

if.entry9:                                        ; preds = %3
  %7 = tail call ptr @LLVMIntType(i64 4)
  br label %common.ret

if.entry13:                                       ; preds = %3
  %8 = tail call ptr @LLVMInt8Type()
  br label %common.ret

if.entry17:                                       ; preds = %3
  %9 = tail call ptr @LLVMInt16Type()
  br label %common.ret

if.entry21:                                       ; preds = %3
  %10 = tail call ptr @LLVMInt32Type()
  br label %common.ret

if.entry25:                                       ; preds = %3
  %11 = tail call ptr @LLVMIntType(i64 64)
  br label %common.ret

if.entry29:                                       ; preds = %3
  %12 = tail call ptr @LLVMInt64Type()
  br label %common.ret

if.entry33:                                       ; preds = %3
  %13 = tail call ptr @LLVMInt128Type()
  br label %common.ret

if.entry37:                                       ; preds = %3
  %14 = tail call ptr @LLVMFloatType()
  br label %common.ret

if.entry41:                                       ; preds = %3
  %15 = tail call ptr @LLVMDoubleType()
  br label %common.ret

if.entry45:                                       ; preds = %3
  %memberidx48 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %16 = load ptr, ptr %memberidx48, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %18 = tail call ptr @LLVMPointerType(ptr %17, i64 0)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %memberidx53 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx53, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  %memberidx54 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %21 = load i64, ptr %memberidx54, align 4
  %22 = tail call ptr @LLVMArrayType(ptr %20, i64 %21)
  br label %common.ret

if.entry56:                                       ; preds = %3
  %memberidx59 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %memberidx59, align 8
  %.pr = load i64, ptr %23, align 4
  br label %ifend58

ifend58:                                          ; preds = %3, %if.entry56
  %24 = phi i64 [ %4, %3 ], [ %.pr, %if.entry56 ]
  %tt.0 = phi ptr [ %1, %3 ], [ %23, %if.entry56 ]
  switch i64 %24, label %ifend86 [
    i64 16, label %if.entry60
    i64 15, label %if.entry71
    i64 11, label %if.entry84
  ]

if.entry60:                                       ; preds = %ifend58
  %memberidx63 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx63, align 8
  %memberidx64 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx64, align 4
  %27 = alloca ptr, i64 %26, align 8
  %28 = tail call ptr @malloc(i32 25)
  %memberidx.i168 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i168, align 8
  %30 = load i64, ptr %memberidx64, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i170 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 1
  %memberidx2.i.i171 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i171, align 8
  %memberidx3.i.i172 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i172, align 4
  store i64 1, ptr %memberidx1.i.i170, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry60, %for.body
  %32 = phi i64 [ %36, %for.body ], [ 1, %if.entry60 ]
  %arg_ty.0203.in = phi ptr [ %37, %for.body ], [ %29, %if.entry60 ]
  %idx.0202 = phi i64 [ %33, %for.body ], [ 0, %if.entry60 ]
  %arg_ty.0203 = load ptr, ptr %arg_ty.0203.in, align 8
  %33 = add nuw nsw i64 %idx.0202, 1
  %34 = getelementptr inbounds ptr, ptr %27, i64 %idx.0202
  %35 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %arg_ty.0203, i1 true)
  store ptr %35, ptr %34, align 8
  %36 = add nuw nsw i64 %32, 1
  store i64 %36, ptr %memberidx1.i.i170, align 4
  %37 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not212 = icmp slt i64 %32, %30
  br i1 %.not212, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.entry60
  tail call void @free(ptr nonnull %28)
  %memberidx67 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx67, align 8
  %39 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %38, i1 true)
  %40 = load ptr, ptr %memberidx63, align 8
  %memberidx69 = getelementptr inbounds %Array_Type_, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx69, align 4
  %42 = call ptr @LLVMFunctionType(ptr %39, ptr nonnull %27, i64 %41, i1 false)
  br i1 %2, label %true_block, label %common.ret

true_block:                                       ; preds = %for.end
  %43 = call ptr @LLVMPointerType(ptr %42, i64 0)
  br label %common.ret

if.entry71:                                       ; preds = %ifend58
  %memberidx74 = getelementptr inbounds %TupleType, ptr %tt.0, i64 0, i32 1
  %44 = load ptr, ptr %memberidx74, align 8
  %memberidx75 = getelementptr inbounds %Array_Type_, ptr %44, i64 0, i32 2
  %45 = load i64, ptr %memberidx75, align 4
  %46 = alloca ptr, i64 %45, align 8
  %47 = tail call ptr @malloc(i32 25)
  %memberidx.i159 = getelementptr inbounds %Array_Type_, ptr %44, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i159, align 8
  %49 = load i64, ptr %memberidx75, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i160 = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 1
  %memberidx2.i.i161 = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i.i161, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 2
  store i64 %49, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i160, align 4
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %for.end81, label %for.body79

for.body79:                                       ; preds = %if.entry71, %for.body79
  %51 = phi i64 [ %55, %for.body79 ], [ 1, %if.entry71 ]
  %element_type2.0206.in = phi ptr [ %56, %for.body79 ], [ %48, %if.entry71 ]
  %idx1.0205 = phi i64 [ %52, %for.body79 ], [ 0, %if.entry71 ]
  %element_type2.0206 = load ptr, ptr %element_type2.0206.in, align 8
  %52 = add nuw nsw i64 %idx1.0205, 1
  %53 = getelementptr inbounds ptr, ptr %46, i64 %idx1.0205
  %54 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %element_type2.0206, i1 true)
  store ptr %54, ptr %53, align 8
  %55 = add nuw nsw i64 %51, 1
  store i64 %55, ptr %memberidx1.i.i160, align 4
  %56 = getelementptr inbounds ptr, ptr %48, i64 %51
  %.not211 = icmp slt i64 %51, %49
  br i1 %.not211, label %for.body79, label %for.end81

for.end81:                                        ; preds = %for.body79, %if.entry71
  %idx1.0.lcssa = phi i64 [ 0, %if.entry71 ], [ %52, %for.body79 ]
  tail call void @free(ptr nonnull %47)
  %57 = call ptr @LLVMStructType(ptr nonnull %46, i64 %idx1.0.lcssa, i1 false)
  br label %common.ret

if.entry84:                                       ; preds = %ifend58
  %memberidx87 = getelementptr inbounds %ObjectType, ptr %tt.0, i64 0, i32 1
  %58 = load ptr, ptr %memberidx87, align 8
  %59 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %58)
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %if.entry88

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry84
  %memberidx.i173 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %60 = load ptr, ptr %memberidx.i173, align 8
  %memberidx.i.i174 = getelementptr inbounds %Program, ptr %60, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i174, align 8
  %62 = load i64, ptr %58, align 4
  %memberidx.i.i.i175 = getelementptr inbounds %Array_Module_, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i175, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx2.i.i176 = getelementptr inbounds %Module, ptr %65, i64 0, i32 3
  %66 = load ptr, ptr %memberidx2.i.i176, align 8
  %memberidx3.i.i177 = getelementptr inbounds %TypeId, ptr %58, i64 0, i32 2
  %67 = load i64, ptr %memberidx3.i.i177, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i5.i.i, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %70)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %70)
  %71 = load ptr, ptr %70, align 8
  %72 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %71)
  %.not155 = icmp eq ptr %72, null
  br i1 %.not155, label %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge, label %if.entry88

CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge: ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %.pre = load i64, ptr %tt.0, align 4
  br label %ifend86

ifend86:                                          ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge, %ifend58
  %73 = phi i64 [ %.pre, %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge ], [ %24, %ifend58 ]
  %74 = icmp eq i64 %73, 12
  br i1 %74, label %if.entry98, label %ifend100

if.entry88:                                       ; preds = %if.entry84, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i197 = phi ptr [ %72, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %59, %if.entry84 ]
  %75 = load ptr, ptr %common.ret.op.i197, align 8
  br i1 %2, label %true_block91, label %common.ret

true_block91:                                     ; preds = %if.entry88
  %76 = tail call ptr @LLVMPointerType(ptr %75, i64 0)
  br label %common.ret

if.entry98:                                       ; preds = %ifend86
  %memberidx101 = getelementptr inbounds %EnumType, ptr %tt.0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx101, align 8
  %78 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %77)
  %.not.i178 = icmp eq ptr %78, null
  br i1 %.not.i178, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %if.entry102

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry98
  %memberidx.i181 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %79 = load ptr, ptr %memberidx.i181, align 8
  %memberidx.i.i182 = getelementptr inbounds %Program, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i.i182, align 8
  %81 = load i64, ptr %77, align 4
  %memberidx.i.i.i183 = getelementptr inbounds %Array_Module_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i.i.i183, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx2.i.i184 = getelementptr inbounds %Module, ptr %84, i64 0, i32 6
  %85 = load ptr, ptr %memberidx2.i.i184, align 8
  %memberidx3.i.i185 = getelementptr inbounds %TypeId, ptr %77, i64 0, i32 2
  %86 = load i64, ptr %memberidx3.i.i185, align 4
  %memberidx.i5.i.i186 = getelementptr inbounds %Array_Enum_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i5.i.i186, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %89)
  %90 = load ptr, ptr %89, align 8
  %91 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %90)
  %.not = icmp eq ptr %91, null
  br i1 %.not, label %ifend100, label %if.entry102

ifend100:                                         ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit, %ifend86
  %92 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %92, ptr noundef nonnull align 8 dereferenceable(32) @244, i64 32, i1 false)
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i, align 4
  %94 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %94, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %95 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %95, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %95, i64 0, i32 1
  store ptr %94, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %95, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %95, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %96 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %97 = tail call ptr %96(ptr nonnull %95)
  %98 = load i64, ptr %memberidx1.i.i.i, align 4
  %99 = tail call i64 @write(i64 1, ptr %97, i64 %98)
  %100 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %100)
  tail call void @free(ptr %95)
  %101 = load ptr, ptr %93, align 8
  %memberidx.i.i.i188 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %101, i64 0, i32 3
  %102 = load ptr, ptr %memberidx.i.i.i188, align 8
  %103 = tail call ptr %102(ptr nonnull %93)
  %104 = load i64, ptr %memberidx1.i.i, align 4
  %105 = tail call i64 @write(i64 1, ptr %103, i64 %104)
  %106 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %107 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %107)
  tail call void @free(ptr %93)
  tail call void @exit(i64 -1)
  br label %common.ret

if.entry102:                                      ; preds = %if.entry98, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i179200 = phi ptr [ %91, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %78, %if.entry98 ]
  %108 = load ptr, ptr %common.ret.op.i179200, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_tuple_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %4 = load i1, ptr %memberidx, align 1
  br i1 %4, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %5 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %5, ptr noundef nonnull align 8 dereferenceable(54) @257, i64 54, i1 false)
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i, align 4
  %7 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %7, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %9 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %10 = tail call ptr %9(ptr nonnull %8)
  %11 = load i64, ptr %memberidx1.i.i.i, align 4
  %12 = tail call i64 @write(i64 1, ptr %10, i64 %11)
  %13 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %13)
  tail call void @free(ptr %8)
  %14 = load ptr, ptr %6, align 8
  %memberidx.i.i.i18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %14, i64 0, i32 3
  %15 = load ptr, ptr %memberidx.i.i.i18, align 8
  %16 = tail call ptr %15(ptr nonnull %6)
  %17 = load i64, ptr %memberidx1.i.i, align 4
  %18 = tail call i64 @write(i64 1, ptr %16, i64 %17)
  %19 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %20 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %20)
  tail call void @free(ptr %6)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx1 = getelementptr inbounds %TupleExpression, ptr %2, i64 0, i32 4
  %21 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2, align 4
  %23 = alloca ptr, i64 %22, align 8
  %24 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i, align 8
  %26 = load i64, ptr %memberidx2, align 4
  store i1 false, ptr %24, align 1
  %memberidx1.i.i12 = getelementptr inbounds %ArrayIterator_Expression_, ptr %24, i64 0, i32 1
  %memberidx2.i.i13 = getelementptr inbounds %ArrayIterator_Expression_, ptr %24, i64 0, i32 3
  store ptr %25, ptr %memberidx2.i.i13, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %24, i64 0, i32 2
  store i64 %26, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i12, align 4
  %27 = icmp slt i64 %26, 1
  br i1 %27, label %for.end, label %for.body

for.body:                                         ; preds = %ifend, %for.body
  %28 = phi i64 [ %32, %for.body ], [ 1, %ifend ]
  %value.023.in = phi ptr [ %33, %for.body ], [ %25, %ifend ]
  %idx.022 = phi i64 [ %29, %for.body ], [ 0, %ifend ]
  %value.023 = load ptr, ptr %value.023.in, align 8
  %29 = add nuw nsw i64 %idx.022, 1
  %30 = getelementptr inbounds ptr, ptr %23, i64 %idx.022
  %31 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.023)
  store ptr %31, ptr %30, align 8
  %32 = add nuw nsw i64 %28, 1
  store i64 %32, ptr %memberidx1.i.i12, align 4
  %33 = getelementptr inbounds ptr, ptr %25, i64 %28
  %.not = icmp slt i64 %28, %26
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %29, %for.body ]
  tail call void @free(ptr nonnull %24)
  %34 = call ptr @LLVMConstStruct(ptr nonnull %23, i64 %idx.0.lcssa, i1 false)
  ret ptr %34
}

define internal fastcc ptr @CodeGen_codegen_var_access_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %2, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %4)
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %6, i1 true)
  %8 = icmp eq ptr %5, null
  br i1 %8, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %9 = tail call ptr @malloc(i32 50)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %9, ptr noundef nonnull align 8 dereferenceable(50) @266, i64 50, i1 false)
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 50, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 50, ptr %memberidx2.i.i, align 4
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %13 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %14 = tail call ptr %13(ptr nonnull %12)
  %15 = load i64, ptr %memberidx1.i.i.i, align 4
  %16 = tail call i64 @write(i64 1, ptr %14, i64 %15)
  %17 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %17)
  tail call void @free(ptr %12)
  %18 = load ptr, ptr %10, align 8
  %memberidx.i.i.i18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx.i.i.i18, align 8
  %20 = tail call ptr %19(ptr nonnull %10)
  %21 = load i64, ptr %memberidx1.i.i, align 4
  %22 = tail call i64 @write(i64 1, ptr %20, i64 %21)
  %23 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %24 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %24)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %25 = load ptr, ptr %memberidx, align 8
  %26 = load i64, ptr %25, align 4
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %common.ret, label %ifend6

common.ret:                                       ; preds = %ifend, %ifend10, %if.entry8
  %common.ret.op = phi ptr [ %29, %if.entry8 ], [ %30, %ifend10 ], [ %5, %ifend ]
  ret ptr %common.ret.op

ifend6:                                           ; preds = %ifend
  %memberidx7 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %28 = load i1, ptr %memberidx7, align 1
  br i1 %28, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend6
  %29 = tail call ptr @LLVMGetInitializer(ptr %5)
  br label %common.ret

ifend10:                                          ; preds = %ifend6
  %30 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %7, ptr %5, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc void @Map_string_uint__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_uint_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx19, align 4
  tail call fastcc void @Map_string_uint____setitem__(ptr nonnull %0, ptr %18, i64 %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_uint____setitem__(ptr nocapture %0, ptr %1, i64 %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_uint__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_uint__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_uint_, ptr %37, i64 0, i32 1
  store i64 %2, ptr %memberidx1.i, align 4
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_uint__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_match_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @271)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = tail call ptr @LLVMAppendBasicBlock(ptr %6, ptr nonnull @272)
  %memberidx2 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 5
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3, align 4
  %10 = add nuw i64 %9, 1
  %11 = alloca ptr, i64 %10, align 8
  %12 = alloca ptr, i64 %10, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx4, align 8
  %14 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %13, i1 true)
  %memberidx5 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 4
  %15 = load ptr, ptr %memberidx5, align 8
  %16 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %15)
  %memberidx6 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 7
  %17 = load i1, ptr %memberidx6, align 1
  br i1 %17, label %end, label %false_block

false_block:                                      ; preds = %3
  %18 = tail call ptr @LLVMBuildSwitch(ptr %1, ptr %16, ptr %5, i64 0)
  br label %end

end:                                              ; preds = %3, %false_block
  %ternary = phi ptr [ %18, %false_block ], [ null, %3 ]
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %19, i64 0, i32 2
  %22 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %20, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 2
  store i64 %22, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %end
  %24 = icmp ne ptr %ternary, null
  %memberidx.i93 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %CodeGen_codegen_block.exit
  %25 = phi i64 [ 1, %for.body.lr.ph ], [ %69, %CodeGen_codegen_block.exit ]
  %case.0124.in = phi ptr [ %21, %for.body.lr.ph ], [ %70, %CodeGen_codegen_block.exit ]
  %curr_block.0123 = phi ptr [ null, %for.body.lr.ph ], [ %curr_block.1, %CodeGen_codegen_block.exit ]
  %idx.0122 = phi i64 [ 0, %for.body.lr.ph ], [ %67, %CodeGen_codegen_block.exit ]
  %case.0124 = load ptr, ptr %case.0124.in, align 8
  %.not88 = icmp eq ptr %curr_block.0123, null
  br i1 %.not88, label %ifend, label %if.entry

for.end:                                          ; preds = %CodeGen_codegen_block.exit, %end
  %idx.0.lcssa = phi i64 [ 0, %end ], [ %67, %CodeGen_codegen_block.exit ]
  tail call void @free(ptr nonnull %20)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %26 = getelementptr inbounds ptr, ptr %11, i64 %idx.0.lcssa
  store ptr %5, ptr %26, align 8
  %27 = getelementptr inbounds ptr, ptr %12, i64 %idx.0.lcssa
  %memberidx24 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 6
  %28 = load ptr, ptr %memberidx24, align 8
  %memberidx.i95 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %29 = load i1, ptr %memberidx.i95, align 1
  store i1 false, ptr %memberidx.i95, align 1
  %30 = load ptr, ptr %28, align 8
  %31 = tail call ptr @malloc(i32 25)
  %memberidx.i.i96 = getelementptr inbounds %Array_Statement_, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i96, align 8
  %memberidx1.i.i97 = getelementptr inbounds %Array_Statement_, ptr %30, i64 0, i32 2
  %33 = load i64, ptr %memberidx1.i.i97, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i98 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i99 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i99, align 8
  %memberidx3.i.i.i100 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i100, align 4
  store i64 1, ptr %memberidx1.i.i.i98, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %for.end.i112, label %for.body.i109

for.body.i109:                                    ; preds = %for.end, %for.body.i109
  %35 = phi i64 [ %36, %for.body.i109 ], [ 1, %for.end ]
  %statement.0.i104117.in = phi ptr [ %37, %for.body.i109 ], [ %32, %for.end ]
  %statement.0.i104117 = load ptr, ptr %statement.0.i104117.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i104117)
  %36 = add nuw nsw i64 %35, 1
  store i64 %36, ptr %memberidx1.i.i.i98, align 4
  %37 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not132 = icmp slt i64 %35, %33
  br i1 %.not132, label %for.body.i109, label %for.end.i112

for.end.i112:                                     ; preds = %for.body.i109, %for.end
  tail call void @free(ptr nonnull %31)
  %memberidx4.i110 = getelementptr inbounds %Block, ptr %28, i64 0, i32 4
  %38 = load ptr, ptr %memberidx4.i110, align 8
  %.not.i111 = icmp eq ptr %38, null
  br i1 %.not.i111, label %CodeGen_codegen_block.exit115, label %if.entry.i113

if.entry.i113:                                    ; preds = %for.end.i112
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %38)
  br label %CodeGen_codegen_block.exit115

CodeGen_codegen_block.exit115:                    ; preds = %for.end.i112, %if.entry.i113
  %yields.0.i114 = phi ptr [ %39, %if.entry.i113 ], [ null, %for.end.i112 ]
  store i1 %29, ptr %memberidx.i95, align 1
  store ptr %yields.0.i114, ptr %27, align 8
  %40 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %7)
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = load i64, ptr %41, align 4
  %.not = icmp eq i64 %42, 10
  br i1 %.not, label %common.ret, label %if.entry27

if.entry:                                         ; preds = %for.body
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr nonnull %curr_block.0123)
  br label %ifend

ifend:                                            ; preds = %for.body, %if.entry
  %43 = load ptr, ptr %memberidx, align 8
  %44 = tail call ptr @LLVMAppendBasicBlock(ptr %43, ptr nonnull @273)
  %45 = load i64, ptr %case.0124, align 4
  %46 = icmp eq i64 %45, 1
  %47 = and i1 %24, %46
  br i1 %47, label %if.entry11, label %else12

if.entry11:                                       ; preds = %ifend
  %memberidx14 = getelementptr inbounds %MatchExpressionCase, ptr %case.0124, i64 0, i32 1
  %48 = load ptr, ptr %memberidx14, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr nonnull %0, ptr %1, ptr nonnull %ternary, ptr %48, ptr %44)
  br label %ifend13

else12:                                           ; preds = %ifend
  %49 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx19, align 4
  %51 = add i64 %50, -1
  %52 = icmp eq i64 %idx.0122, %51
  br i1 %52, label %end17, label %false_block16

ifend13:                                          ; preds = %end17, %if.entry11
  %curr_block.1 = phi ptr [ %curr_block.0123, %if.entry11 ], [ %ternary21, %end17 ]
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %44)
  %memberidx23 = getelementptr inbounds %MatchExpressionCase, ptr %case.0124, i64 0, i32 2
  %53 = load ptr, ptr %memberidx23, align 8
  %54 = load i1, ptr %memberidx.i93, align 1
  store i1 false, ptr %memberidx.i93, align 1
  %55 = load ptr, ptr %53, align 8
  %56 = tail call ptr @malloc(i32 25)
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i94 = getelementptr inbounds %Array_Statement_, ptr %55, i64 0, i32 2
  %58 = load i64, ptr %memberidx1.i.i94, align 4
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %56, i64 0, i32 1
  %59 = icmp slt i64 %58, 1
  br i1 %59, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %ifend13, %for.body.i
  %60 = phi i64 [ %61, %for.body.i ], [ 1, %ifend13 ]
  %statement.0.i119.in = phi ptr [ %62, %for.body.i ], [ %57, %ifend13 ]
  %statement.0.i119 = load ptr, ptr %statement.0.i119.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i119)
  %61 = add nuw nsw i64 %60, 1
  store i64 %61, ptr %memberidx1.i.i.i, align 4
  %62 = getelementptr inbounds ptr, ptr %57, i64 %60
  %.not130 = icmp slt i64 %60, %58
  br i1 %.not130, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ifend13
  tail call void @free(ptr nonnull %56)
  %memberidx4.i = getelementptr inbounds %Block, ptr %53, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %63, null
  br i1 %.not.i, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %64 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %63)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  %yields.0.i = phi ptr [ %64, %if.entry.i ], [ null, %for.end.i ]
  store i1 %54, ptr %memberidx.i93, align 1
  %65 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  %66 = getelementptr inbounds ptr, ptr %11, i64 %idx.0122
  store ptr %44, ptr %66, align 8
  %67 = add nuw nsw i64 %idx.0122, 1
  %68 = getelementptr inbounds ptr, ptr %12, i64 %idx.0122
  store ptr %yields.0.i, ptr %68, align 8
  %69 = add nuw nsw i64 %25, 1
  store i64 %69, ptr %memberidx1.i.i, align 4
  %70 = getelementptr inbounds ptr, ptr %21, i64 %25
  %.not131 = icmp slt i64 %25, %22
  br i1 %.not131, label %for.body, label %for.end

false_block16:                                    ; preds = %else12
  %71 = load ptr, ptr %memberidx, align 8
  %72 = tail call ptr @LLVMAppendBasicBlock(ptr %71, ptr nonnull @274)
  br label %end17

end17:                                            ; preds = %else12, %false_block16
  %ternary21 = phi ptr [ %72, %false_block16 ], [ %5, %else12 ]
  %memberidx22 = getelementptr inbounds %MatchExpressionCase, ptr %case.0124, i64 0, i32 1
  %73 = load ptr, ptr %memberidx22, align 8
  %74 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %73)
  %75 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %74, ptr %44, ptr %ternary21)
  br label %ifend13

common.ret:                                       ; preds = %CodeGen_codegen_block.exit115, %if.entry27
  %common.ret.op = phi ptr [ %77, %if.entry27 ], [ null, %CodeGen_codegen_block.exit115 ]
  ret ptr %common.ret.op

if.entry27:                                       ; preds = %CodeGen_codegen_block.exit115
  %76 = add nuw nsw i64 %idx.0.lcssa, 1
  %77 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %14, ptr nonnull @275)
  call void @LLVMAddIncoming(ptr %77, ptr nonnull %12, ptr nonnull %11, i64 %76)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %indices = alloca [1 x ptr], align 8
  %8 = load ptr, ptr %1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %memberidx1 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 2
  %13 = load i64, ptr %memberidx1.i, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 3
  store ptr %12, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 2
  store i64 %13, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %14 = icmp slt i64 %13, 1
  %method.0313 = load ptr, ptr %12, align 8
  store i1 %14, ptr %11, align 1
  br i1 %14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx5 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 3
  %memberidx8 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx.i162 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %memberidx24 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 4
  %memberidx30 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx42 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %memberidx52 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %memberidx.i300 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %15 = phi i64 [ 1, %for.body.lr.ph ], [ %17, %for.incr ]
  %method.0314 = phi ptr [ %method.0313, %for.body.lr.ph ], [ %method.0, %for.incr ]
  %memberidx3 = getelementptr inbounds %ClassMethod, ptr %method.0314, i64 0, i32 7
  %16 = load i1, ptr %memberidx3, align 1
  br i1 %16, label %for.incr, label %ifend

for.incr:                                         ; preds = %for.body, %CodeGen_codegen_block.exit
  %17 = add nuw nsw i64 %15, 1
  store i64 %17, ptr %memberidx1.i.i, align 4
  %18 = getelementptr inbounds ptr, ptr %12, i64 %15
  %19 = icmp sge i64 %15, %13
  %method.0 = load ptr, ptr %18, align 8
  store i1 %19, ptr %11, align 1
  br i1 %19, label %for.end, label %for.body

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %11)
  ret void

ifend:                                            ; preds = %for.body
  %20 = load ptr, ptr %method.0314, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %memberidx.i114 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i114, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i115 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx1.i.i115, align 4
  %memberidx2.i.i116 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i.i116, align 4
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @243, i64 %22, i64 %23, i64 %24)
  %26 = load ptr, ptr %6, align 8
  %27 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %27, i64 0, i32 3
  store i64 %25, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %28 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %29 = call ptr %28(ptr nonnull %27)
  %30 = load i64, ptr %20, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %31 = load i64, ptr %memberidx3.i, align 4
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @259, ptr %29, i64 %30, i64 %31)
  %33 = load ptr, ptr %7, align 8
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %29)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %35 = load ptr, ptr %memberidx5, align 8
  %36 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %34)
  %memberidx.i118 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %35, i64 0, i32 1
  %37 = load i64, ptr %memberidx.i118, align 4
  %38 = urem i64 %36, %37
  %39 = load ptr, ptr %35, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %.not.i = icmp eq ptr %41, null
  br i1 %.not.i, label %while.end.i, label %while.entry.i

while.entry.i:                                    ; preds = %ifend, %else.i
  %42 = phi ptr [ %56, %else.i ], [ %39, %ifend ]
  %43 = phi i64 [ %57, %else.i ], [ %37, %ifend ]
  %44 = phi ptr [ %61, %else.i ], [ %41, %ifend ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %38, %ifend ]
  %45 = load ptr, ptr %44, align 8
  %memberidx.i.i119 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i119, align 4
  %47 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %46, %47
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i121 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i121, align 8
  %49 = load ptr, ptr %memberidx.i.i, align 8
  %50 = call i64 @memcmp(ptr %48, ptr %49, i64 %46)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i118, align 4
  %.pre315 = load ptr, ptr %35, align 8
  br label %else.i

while.end.i:                                      ; preds = %else.i, %ifend.i.i, %ifend
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %method.0314, i64 0, i32 3
  %52 = load ptr, ptr %memberidx6, align 8
  %53 = call ptr @malloc(i32 11)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %53, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %54 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i123 = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i123, align 8
  %memberidx1.i.i124 = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i124, align 4
  %memberidx2.i.i125 = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i125, align 4
  %memberidx.i126 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  %55 = load i64, ptr %memberidx.i126, align 4
  %.not.i128 = icmp eq i64 %55, 11
  br i1 %.not.i128, label %ifend.i, label %string___eq__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre315, %ifend.i.i.else.i_crit_edge ], [ %42, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %43, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %while.end.i, label %while.entry.i

ifend.i:                                          ; preds = %while.end.i
  %memberidx2.i130 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i130, align 8
  %63 = call i64 @memcmp(ptr %62, ptr nonnull %53, i64 11)
  %64 = icmp eq i64 %63, 0
  br label %string___eq__.exit

string___eq__.exit:                               ; preds = %while.end.i, %ifend.i
  %common.ret.op.i129 = phi i1 [ %64, %ifend.i ], [ false, %while.end.i ]
  %65 = load ptr, ptr %0, align 8
  %66 = load ptr, ptr %memberidx8, align 8
  %67 = load ptr, ptr %66, align 8
  %memberidx9 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %67, i64 0, i32 5
  %68 = load ptr, ptr %memberidx9, align 8
  %69 = call ptr %68(ptr nonnull %66)
  %70 = load ptr, ptr %memberidx6, align 8
  %71 = load ptr, ptr %70, align 8
  %memberidx11 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx11, align 8
  %73 = call ptr %72(ptr nonnull %70)
  %74 = alloca ptr, align 8
  %75 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %74, ptr nonnull @104, ptr %69, ptr %73)
  %76 = load ptr, ptr %74, align 8
  %77 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i132 = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i132, align 8
  %memberidx1.i133 = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 %75, ptr %memberidx1.i133, align 4
  %memberidx2.i134 = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 %75, ptr %memberidx2.i134, align 4
  tail call void @free(ptr %69)
  tail call void @free(ptr %73)
  %78 = load ptr, ptr %77, align 8
  %memberidx12 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %78, i64 0, i32 5
  %79 = load ptr, ptr %memberidx12, align 8
  %80 = call ptr %79(ptr nonnull %77)
  %81 = call ptr @LLVMGetNamedFunction(ptr %65, ptr %80)
  %82 = call ptr @LLVMAppendBasicBlock(ptr %81, ptr nonnull @80)
  %83 = call ptr @LLVMCreateBuilder()
  call void @LLVMPositionBuilderAtEnd(ptr %83, ptr %82)
  %memberidx13 = getelementptr inbounds %ClassMethod, ptr %method.0314, i64 0, i32 8
  %84 = load ptr, ptr %memberidx13, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %83, ptr %84)
  %memberidx14 = getelementptr inbounds %ClassMethod, ptr %method.0314, i64 0, i32 1
  %85 = load i1, ptr %memberidx14, align 1
  br i1 %85, label %for.entry43, label %if.entry15

if.entry15:                                       ; preds = %string___eq__.exit
  %86 = call ptr @LLVMGetParam(ptr %81, i64 0)
  %87 = load ptr, ptr %memberidx18, align 8
  %88 = load ptr, ptr %memberidx13, align 8
  %memberidx.i135 = getelementptr inbounds %Program, ptr %87, i64 0, i32 1
  %89 = load ptr, ptr %memberidx.i135, align 8
  %90 = load i64, ptr %88, align 4
  %memberidx.i.i136 = getelementptr inbounds %Array_Module_, ptr %89, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i.i136, align 8
  %92 = getelementptr inbounds ptr, ptr %91, i64 %90
  %93 = load ptr, ptr %92, align 8
  %memberidx2.i137 = getelementptr inbounds %Module, ptr %93, i64 0, i32 7
  %94 = load ptr, ptr %memberidx2.i137, align 8
  %memberidx3.i138 = getelementptr inbounds %ScopeId, ptr %88, i64 0, i32 1
  %95 = load i64, ptr %memberidx3.i138, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %94, i64 0, i32 1
  %96 = load ptr, ptr %memberidx.i5.i, align 8
  %97 = getelementptr inbounds ptr, ptr %96, i64 %95
  %98 = load ptr, ptr %97, align 8
  %memberidx20 = getelementptr inbounds %Scope, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx20, align 8
  %100 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %100, align 8
  %101 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %101, align 8
  %memberidx.i.i139 = getelementptr inbounds %string, ptr %101, i64 0, i32 1
  store ptr %100, ptr %memberidx.i.i139, align 8
  %memberidx1.i.i140 = getelementptr inbounds %string, ptr %101, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i140, align 4
  %memberidx2.i.i141 = getelementptr inbounds %string, ptr %101, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i141, align 4
  %102 = call fastcc i64 @Map_string_VarId__hash_fnc(ptr nonnull %101)
  %memberidx.i142 = getelementptr inbounds %Map_string_VarId_, ptr %99, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i142, align 4
  %104 = urem i64 %102, %103
  %105 = load ptr, ptr %99, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  br label %while.entry.i148

while.entry.i148:                                 ; preds = %else.i158, %if.entry15
  %.sink360 = phi ptr [ %135, %else.i158 ], [ %106, %if.entry15 ]
  %107 = phi ptr [ %131, %else.i158 ], [ %105, %if.entry15 ]
  %108 = phi i64 [ %132, %else.i158 ], [ %103, %if.entry15 ]
  %hash.0.i144 = phi i64 [ %134, %else.i158 ], [ %104, %if.entry15 ]
  %109 = load ptr, ptr %.sink360, align 8, !nonnull !0
  %110 = load ptr, ptr %109, align 8
  %memberidx.i.i145 = getelementptr inbounds %string, ptr %110, i64 0, i32 2
  %111 = load i64, ptr %memberidx.i.i145, align 4
  %112 = load i64, ptr %memberidx1.i.i140, align 4
  %.not.i.i147 = icmp eq i64 %111, %112
  br i1 %.not.i.i147, label %ifend.i.i151, label %else.i158

ifend.i.i151:                                     ; preds = %while.entry.i148
  %memberidx2.i.i149 = getelementptr inbounds %string, ptr %110, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i.i149, align 8
  %114 = load ptr, ptr %memberidx.i.i139, align 8
  %115 = call i64 @memcmp(ptr %113, ptr %114, i64 %111)
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %ifend.i.i151.while.end.i156.loopexit_crit_edge, label %ifend.i.i151.else.i158_crit_edge

ifend.i.i151.while.end.i156.loopexit_crit_edge:   ; preds = %ifend.i.i151
  %.pre318.pre = load ptr, ptr %99, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre318.pre, i64 %hash.0.i144
  %.pre319.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %memberidx11.i160 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre319.pre, i64 0, i32 1
  %117 = load ptr, ptr %memberidx11.i160, align 8
  %118 = load ptr, ptr %memberidx.i162, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i.i163 = getelementptr inbounds %VarId, ptr %117, i64 0, i32 1
  %119 = load i64, ptr %memberidx.i.i163, align 4
  %120 = load i64, ptr %117, align 4
  %memberidx2.i.i164 = getelementptr inbounds %VarId, ptr %117, i64 0, i32 2
  %121 = load i64, ptr %memberidx2.i.i164, align 4
  %122 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %119, i64 %120, i64 %121)
  %123 = load ptr, ptr %5, align 8
  %124 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %124, align 8
  %memberidx.i.i.i165 = getelementptr inbounds %string, ptr %124, i64 0, i32 1
  store ptr %123, ptr %memberidx.i.i.i165, align 8
  %memberidx1.i.i.i166 = getelementptr inbounds %string, ptr %124, i64 0, i32 2
  store i64 %122, ptr %memberidx1.i.i.i166, align 4
  %memberidx2.i.i.i167 = getelementptr inbounds %string, ptr %124, i64 0, i32 3
  store i64 %122, ptr %memberidx2.i.i.i167, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %125 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %124)
  %memberidx.i223 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %118, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i223, align 4
  %127 = urem i64 %125, %126
  %128 = load ptr, ptr %118, align 8
  %129 = getelementptr inbounds ptr, ptr %128, i64 %127
  %130 = load ptr, ptr %129, align 8
  %.not.i224 = icmp eq ptr %130, null
  br i1 %.not.i224, label %Map_string_LLVMValueRef____getitem__.exit243, label %while.entry.i229

ifend.i.i151.else.i158_crit_edge:                 ; preds = %ifend.i.i151
  %.pre316 = load i64, ptr %memberidx.i142, align 4
  %.pre317 = load ptr, ptr %99, align 8
  br label %else.i158

else.i158:                                        ; preds = %ifend.i.i151.else.i158_crit_edge, %while.entry.i148
  %131 = phi ptr [ %.pre317, %ifend.i.i151.else.i158_crit_edge ], [ %107, %while.entry.i148 ]
  %132 = phi i64 [ %.pre316, %ifend.i.i151.else.i158_crit_edge ], [ %108, %while.entry.i148 ]
  %133 = add nuw i64 %hash.0.i144, 1
  %134 = urem i64 %133, %132
  %135 = getelementptr inbounds ptr, ptr %131, i64 %134
  br label %while.entry.i148

while.entry.i229:                                 ; preds = %ifend.i.i151.while.end.i156.loopexit_crit_edge, %else.i239
  %136 = phi ptr [ %146, %else.i239 ], [ %128, %ifend.i.i151.while.end.i156.loopexit_crit_edge ]
  %137 = phi i64 [ %147, %else.i239 ], [ %126, %ifend.i.i151.while.end.i156.loopexit_crit_edge ]
  %138 = phi ptr [ %151, %else.i239 ], [ %130, %ifend.i.i151.while.end.i156.loopexit_crit_edge ]
  %hash.0.i225 = phi i64 [ %149, %else.i239 ], [ %127, %ifend.i.i151.while.end.i156.loopexit_crit_edge ]
  %139 = load ptr, ptr %138, align 8
  %memberidx.i.i226 = getelementptr inbounds %string, ptr %139, i64 0, i32 2
  %140 = load i64, ptr %memberidx.i.i226, align 4
  %141 = load i64, ptr %memberidx1.i.i.i166, align 4
  %.not.i.i228 = icmp eq i64 %140, %141
  br i1 %.not.i.i228, label %ifend.i.i232, label %else.i239

ifend.i.i232:                                     ; preds = %while.entry.i229
  %memberidx2.i.i230 = getelementptr inbounds %string, ptr %139, i64 0, i32 1
  %142 = load ptr, ptr %memberidx2.i.i230, align 8
  %143 = load ptr, ptr %memberidx.i.i.i165, align 8
  %144 = call i64 @memcmp(ptr %142, ptr %143, i64 %140)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %while.end.i237, label %ifend.i.i232.else.i239_crit_edge

ifend.i.i232.else.i239_crit_edge:                 ; preds = %ifend.i.i232
  %.pre320 = load i64, ptr %memberidx.i223, align 4
  %.pre321 = load ptr, ptr %118, align 8
  br label %else.i239

while.end.i237:                                   ; preds = %ifend.i.i232
  %.pre322.pre = load ptr, ptr %118, align 8
  %.phi.trans.insert323.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre322.pre, i64 %hash.0.i225
  %.pre324.pre = load ptr, ptr %.phi.trans.insert323.phi.trans.insert, align 8
  %.not25.i236 = icmp eq ptr %.pre324.pre, null
  br i1 %.not25.i236, label %Map_string_LLVMValueRef____getitem__.exit243, label %if.entry7.i242

else.i239:                                        ; preds = %ifend.i.i232.else.i239_crit_edge, %while.entry.i229
  %146 = phi ptr [ %.pre321, %ifend.i.i232.else.i239_crit_edge ], [ %136, %while.entry.i229 ]
  %147 = phi i64 [ %.pre320, %ifend.i.i232.else.i239_crit_edge ], [ %137, %while.entry.i229 ]
  %148 = add nuw i64 %hash.0.i225, 1
  %149 = urem i64 %148, %147
  %150 = getelementptr inbounds ptr, ptr %146, i64 %149
  %151 = load ptr, ptr %150, align 8
  %.not26.i238 = icmp eq ptr %151, null
  br i1 %.not26.i238, label %Map_string_LLVMValueRef____getitem__.exit243, label %while.entry.i229

if.entry7.i242:                                   ; preds = %while.end.i237
  %memberidx11.i241 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre324.pre, i64 0, i32 1
  %152 = load ptr, ptr %memberidx11.i241, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit243

Map_string_LLVMValueRef____getitem__.exit243:     ; preds = %else.i239, %ifend.i.i151.while.end.i156.loopexit_crit_edge, %while.end.i237, %if.entry7.i242
  %common.ret.op.i240 = phi ptr [ %152, %if.entry7.i242 ], [ null, %while.end.i237 ], [ null, %ifend.i.i151.while.end.i156.loopexit_crit_edge ], [ null, %else.i239 ]
  %153 = call ptr @LLVMBuildStore(ptr %83, ptr %86, ptr %common.ret.op.i240)
  br i1 %common.ret.op.i129, label %if.entry21, label %for.entry43

if.entry21:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit243
  %154 = load ptr, ptr %memberidx24, align 8
  %.not = icmp eq ptr %154, null
  br i1 %.not, label %ifend27, label %if.entry25

if.entry25:                                       ; preds = %if.entry21
  %155 = load ptr, ptr %9, align 8
  %156 = call ptr @LLVMPointerType(ptr %155, i64 0)
  %157 = call ptr @LLVMIntType(i64 64)
  %158 = call ptr @LLVMConstInt(ptr %157, i64 0, i1 false)
  store ptr %158, ptr %indices, align 8
  %159 = call ptr @LLVMBuildInBoundsGEP2(ptr %83, ptr %156, ptr %86, ptr nonnull %indices, i64 1, ptr nonnull @80)
  %160 = load ptr, ptr %memberidx24, align 8
  %161 = call ptr @LLVMBuildStore(ptr %83, ptr %160, ptr %159)
  br label %ifend27

ifend27:                                          ; preds = %if.entry21, %if.entry25
  %162 = load ptr, ptr %memberidx30, align 8
  %.not108 = icmp eq ptr %162, null
  br i1 %.not108, label %for.entry43, label %if.entry31

if.entry31:                                       ; preds = %ifend27
  %163 = load ptr, ptr %memberidx18, align 8
  %164 = load ptr, ptr %memberidx13, align 8
  %memberidx.i168 = getelementptr inbounds %Program, ptr %163, i64 0, i32 1
  %165 = load ptr, ptr %memberidx.i168, align 8
  %166 = load i64, ptr %164, align 4
  %memberidx.i.i169 = getelementptr inbounds %Array_Module_, ptr %165, i64 0, i32 1
  %167 = load ptr, ptr %memberidx.i.i169, align 8
  %168 = getelementptr inbounds ptr, ptr %167, i64 %166
  %169 = load ptr, ptr %168, align 8
  %memberidx2.i170 = getelementptr inbounds %Module, ptr %169, i64 0, i32 7
  %170 = load ptr, ptr %memberidx2.i170, align 8
  %memberidx3.i171 = getelementptr inbounds %ScopeId, ptr %164, i64 0, i32 1
  %171 = load i64, ptr %memberidx3.i171, align 4
  %memberidx.i5.i172 = getelementptr inbounds %Array_Scope_, ptr %170, i64 0, i32 1
  %172 = load ptr, ptr %memberidx.i5.i172, align 8
  %173 = getelementptr inbounds ptr, ptr %172, i64 %171
  %174 = load ptr, ptr %173, align 8
  %memberidx36 = getelementptr inbounds %Scope, ptr %174, i64 0, i32 1
  %175 = load ptr, ptr %memberidx36, align 8
  %176 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %176, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %177 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i173 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i173, align 8
  %memberidx1.i.i174 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i174, align 4
  %memberidx2.i.i175 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i175, align 4
  %178 = call fastcc i64 @Map_string_VarId__hash_fnc(ptr nonnull %177)
  %memberidx.i176 = getelementptr inbounds %Map_string_VarId_, ptr %175, i64 0, i32 1
  %179 = load i64, ptr %memberidx.i176, align 4
  %180 = urem i64 %178, %179
  %181 = load ptr, ptr %175, align 8
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  %183 = load ptr, ptr %182, align 8
  %.not.i177 = icmp eq ptr %183, null
  br i1 %.not.i177, label %for.entry43, label %while.entry.i182

while.entry.i182:                                 ; preds = %if.entry31, %else.i192
  %184 = phi ptr [ %194, %else.i192 ], [ %181, %if.entry31 ]
  %185 = phi i64 [ %195, %else.i192 ], [ %179, %if.entry31 ]
  %186 = phi ptr [ %199, %else.i192 ], [ %183, %if.entry31 ]
  %hash.0.i178 = phi i64 [ %197, %else.i192 ], [ %180, %if.entry31 ]
  %187 = load ptr, ptr %186, align 8
  %memberidx.i.i179 = getelementptr inbounds %string, ptr %187, i64 0, i32 2
  %188 = load i64, ptr %memberidx.i.i179, align 4
  %189 = load i64, ptr %memberidx1.i.i174, align 4
  %.not.i.i181 = icmp eq i64 %188, %189
  br i1 %.not.i.i181, label %ifend.i.i185, label %else.i192

ifend.i.i185:                                     ; preds = %while.entry.i182
  %memberidx2.i.i183 = getelementptr inbounds %string, ptr %187, i64 0, i32 1
  %190 = load ptr, ptr %memberidx2.i.i183, align 8
  %191 = load ptr, ptr %memberidx.i.i173, align 8
  %192 = call i64 @memcmp(ptr %190, ptr %191, i64 %188)
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %while.end.i190, label %ifend.i.i185.else.i192_crit_edge

ifend.i.i185.else.i192_crit_edge:                 ; preds = %ifend.i.i185
  %.pre325 = load i64, ptr %memberidx.i176, align 4
  %.pre326 = load ptr, ptr %175, align 8
  br label %else.i192

while.end.i190:                                   ; preds = %ifend.i.i185
  %.pre327.pre = load ptr, ptr %175, align 8
  %.phi.trans.insert328.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre327.pre, i64 %hash.0.i178
  %.pre329.pre = load ptr, ptr %.phi.trans.insert328.phi.trans.insert, align 8
  %.not25.i189 = icmp eq ptr %.pre329.pre, null
  br i1 %.not25.i189, label %for.entry43, label %Map_string_VarId____getitem__.exit196

else.i192:                                        ; preds = %ifend.i.i185.else.i192_crit_edge, %while.entry.i182
  %194 = phi ptr [ %.pre326, %ifend.i.i185.else.i192_crit_edge ], [ %184, %while.entry.i182 ]
  %195 = phi i64 [ %.pre325, %ifend.i.i185.else.i192_crit_edge ], [ %185, %while.entry.i182 ]
  %196 = add nuw i64 %hash.0.i178, 1
  %197 = urem i64 %196, %195
  %198 = getelementptr inbounds ptr, ptr %194, i64 %197
  %199 = load ptr, ptr %198, align 8
  %.not26.i191 = icmp eq ptr %199, null
  br i1 %.not26.i191, label %for.entry43, label %while.entry.i182

Map_string_VarId____getitem__.exit196:            ; preds = %while.end.i190
  %memberidx11.i194 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre329.pre, i64 0, i32 1
  %200 = load ptr, ptr %memberidx11.i194, align 8
  %.not109 = icmp eq ptr %200, null
  br i1 %.not109, label %for.entry43, label %if.entry37

if.entry37:                                       ; preds = %Map_string_VarId____getitem__.exit196
  %memberidx40 = getelementptr inbounds %ObjectType, ptr %162, i64 0, i32 1
  %201 = load ptr, ptr %memberidx40, align 8
  %202 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %201)
  %.not.i215 = icmp eq ptr %202, null
  br i1 %.not.i215, label %ifend.i222, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i222:                                       ; preds = %if.entry37
  %203 = load ptr, ptr %memberidx18, align 8
  %memberidx.i.i218 = getelementptr inbounds %Program, ptr %203, i64 0, i32 1
  %204 = load ptr, ptr %memberidx.i.i218, align 8
  %205 = load i64, ptr %201, align 4
  %memberidx.i.i.i219 = getelementptr inbounds %Array_Module_, ptr %204, i64 0, i32 1
  %206 = load ptr, ptr %memberidx.i.i.i219, align 8
  %207 = getelementptr inbounds ptr, ptr %206, i64 %205
  %208 = load ptr, ptr %207, align 8
  %memberidx2.i.i220 = getelementptr inbounds %Module, ptr %208, i64 0, i32 3
  %209 = load ptr, ptr %memberidx2.i.i220, align 8
  %memberidx3.i.i221 = getelementptr inbounds %TypeId, ptr %201, i64 0, i32 2
  %210 = load i64, ptr %memberidx3.i.i221, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %209, i64 0, i32 1
  %211 = load ptr, ptr %memberidx.i5.i.i, align 8
  %212 = getelementptr inbounds ptr, ptr %211, i64 %210
  %213 = load ptr, ptr %212, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %213)
  call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %213)
  %214 = load ptr, ptr %213, align 8
  %215 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %214)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry37, %ifend.i222
  %common.ret.op.i216 = phi ptr [ %215, %ifend.i222 ], [ %202, %if.entry37 ]
  %memberidx41 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i216, i64 0, i32 6
  %216 = load ptr, ptr %memberidx41, align 8
  %217 = load ptr, ptr %memberidx.i162, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i198 = getelementptr inbounds %VarId, ptr %200, i64 0, i32 1
  %218 = load i64, ptr %memberidx.i.i198, align 4
  %219 = load i64, ptr %200, align 4
  %memberidx2.i.i199 = getelementptr inbounds %VarId, ptr %200, i64 0, i32 2
  %220 = load i64, ptr %memberidx2.i.i199, align 4
  %221 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %218, i64 %219, i64 %220)
  %222 = load ptr, ptr %4, align 8
  %223 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %223, align 8
  %memberidx.i.i.i200 = getelementptr inbounds %string, ptr %223, i64 0, i32 1
  store ptr %222, ptr %memberidx.i.i.i200, align 8
  %memberidx1.i.i.i201 = getelementptr inbounds %string, ptr %223, i64 0, i32 2
  store i64 %221, ptr %memberidx1.i.i.i201, align 4
  %memberidx2.i.i.i202 = getelementptr inbounds %string, ptr %223, i64 0, i32 3
  store i64 %221, ptr %memberidx2.i.i.i202, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %224 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %223)
  %memberidx.i244 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %217, i64 0, i32 1
  %225 = load i64, ptr %memberidx.i244, align 4
  %226 = urem i64 %224, %225
  %227 = load ptr, ptr %217, align 8
  %228 = getelementptr inbounds ptr, ptr %227, i64 %226
  %229 = load ptr, ptr %228, align 8
  %.not.i245 = icmp eq ptr %229, null
  br i1 %.not.i245, label %Map_string_LLVMValueRef____getitem__.exit264, label %while.entry.i250

while.entry.i250:                                 ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i260
  %230 = phi ptr [ %240, %else.i260 ], [ %227, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %231 = phi i64 [ %241, %else.i260 ], [ %225, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %232 = phi ptr [ %245, %else.i260 ], [ %229, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i246 = phi i64 [ %243, %else.i260 ], [ %226, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %233 = load ptr, ptr %232, align 8
  %memberidx.i.i247 = getelementptr inbounds %string, ptr %233, i64 0, i32 2
  %234 = load i64, ptr %memberidx.i.i247, align 4
  %235 = load i64, ptr %memberidx1.i.i.i201, align 4
  %.not.i.i249 = icmp eq i64 %234, %235
  br i1 %.not.i.i249, label %ifend.i.i253, label %else.i260

ifend.i.i253:                                     ; preds = %while.entry.i250
  %memberidx2.i.i251 = getelementptr inbounds %string, ptr %233, i64 0, i32 1
  %236 = load ptr, ptr %memberidx2.i.i251, align 8
  %237 = load ptr, ptr %memberidx.i.i.i200, align 8
  %238 = call i64 @memcmp(ptr %236, ptr %237, i64 %234)
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %while.end.i258, label %ifend.i.i253.else.i260_crit_edge

ifend.i.i253.else.i260_crit_edge:                 ; preds = %ifend.i.i253
  %.pre330 = load i64, ptr %memberidx.i244, align 4
  %.pre331 = load ptr, ptr %217, align 8
  br label %else.i260

while.end.i258:                                   ; preds = %ifend.i.i253
  %.pre332.pre = load ptr, ptr %217, align 8
  %.phi.trans.insert333.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre332.pre, i64 %hash.0.i246
  %.pre334.pre = load ptr, ptr %.phi.trans.insert333.phi.trans.insert, align 8
  %.not25.i257 = icmp eq ptr %.pre334.pre, null
  br i1 %.not25.i257, label %Map_string_LLVMValueRef____getitem__.exit264, label %if.entry7.i263

else.i260:                                        ; preds = %ifend.i.i253.else.i260_crit_edge, %while.entry.i250
  %240 = phi ptr [ %.pre331, %ifend.i.i253.else.i260_crit_edge ], [ %230, %while.entry.i250 ]
  %241 = phi i64 [ %.pre330, %ifend.i.i253.else.i260_crit_edge ], [ %231, %while.entry.i250 ]
  %242 = add nuw i64 %hash.0.i246, 1
  %243 = urem i64 %242, %241
  %244 = getelementptr inbounds ptr, ptr %240, i64 %243
  %245 = load ptr, ptr %244, align 8
  %.not26.i259 = icmp eq ptr %245, null
  br i1 %.not26.i259, label %Map_string_LLVMValueRef____getitem__.exit264, label %while.entry.i250

if.entry7.i263:                                   ; preds = %while.end.i258
  %memberidx11.i262 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre334.pre, i64 0, i32 1
  %246 = load ptr, ptr %memberidx11.i262, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit264

Map_string_LLVMValueRef____getitem__.exit264:     ; preds = %else.i260, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i258, %if.entry7.i263
  %common.ret.op.i261 = phi ptr [ %246, %if.entry7.i263 ], [ null, %while.end.i258 ], [ null, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ null, %else.i260 ]
  %247 = call ptr @LLVMBuildStore(ptr %83, ptr %216, ptr %common.ret.op.i261)
  %248 = load ptr, ptr %memberidx42, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %249 = load i64, ptr %memberidx.i.i198, align 4
  %250 = load i64, ptr %200, align 4
  %251 = load i64, ptr %memberidx2.i.i199, align 4
  %252 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %249, i64 %250, i64 %251)
  %253 = load ptr, ptr %3, align 8
  %254 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %254, align 8
  %memberidx.i.i205 = getelementptr inbounds %string, ptr %254, i64 0, i32 1
  store ptr %253, ptr %memberidx.i.i205, align 8
  %memberidx1.i.i206 = getelementptr inbounds %string, ptr %254, i64 0, i32 2
  store i64 %252, ptr %memberidx1.i.i206, align 4
  %memberidx2.i.i207 = getelementptr inbounds %string, ptr %254, i64 0, i32 3
  store i64 %252, ptr %memberidx2.i.i207, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %248, ptr nonnull %254, ptr %86)
  br label %for.entry43

for.entry43:                                      ; preds = %else.i192, %if.entry31, %while.end.i190, %Map_string_LLVMValueRef____getitem__.exit243, %ifend27, %Map_string_VarId____getitem__.exit196, %Map_string_LLVMValueRef____getitem__.exit264, %string___eq__.exit
  %offset.0 = phi i64 [ 0, %string___eq__.exit ], [ 1, %Map_string_LLVMValueRef____getitem__.exit264 ], [ 1, %Map_string_VarId____getitem__.exit196 ], [ 1, %ifend27 ], [ 1, %Map_string_LLVMValueRef____getitem__.exit243 ], [ 1, %while.end.i190 ], [ 1, %if.entry31 ], [ 1, %else.i192 ]
  %memberidx48 = getelementptr inbounds %ClassMethod, ptr %method.0314, i64 0, i32 6
  %255 = load ptr, ptr %memberidx48, align 8
  %memberidx49309 = getelementptr inbounds %Array_FunctionArg_, ptr %255, i64 0, i32 2
  %256 = load i64, ptr %memberidx49309, align 4
  %257 = icmp sgt i64 %256, 0
  br i1 %257, label %for.body45, label %for.end47

for.body45:                                       ; preds = %for.entry43, %Map_string_LLVMValueRef____getitem__.exit285
  %i.0310 = phi i64 [ %296, %Map_string_LLVMValueRef____getitem__.exit285 ], [ 0, %for.entry43 ]
  %258 = add nuw nsw i64 %i.0310, %offset.0
  %259 = call ptr @LLVMGetParam(ptr %81, i64 %258)
  %260 = load ptr, ptr %memberidx48, align 8
  %memberidx.i208 = getelementptr inbounds %Array_FunctionArg_, ptr %260, i64 0, i32 1
  %261 = load ptr, ptr %memberidx.i208, align 8
  %262 = getelementptr inbounds ptr, ptr %261, i64 %i.0310
  %263 = load ptr, ptr %262, align 8
  %memberidx51 = getelementptr inbounds %FunctionArg, ptr %263, i64 0, i32 4
  %264 = load ptr, ptr %memberidx51, align 8
  %265 = load ptr, ptr %memberidx.i162, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %memberidx.i.i210 = getelementptr inbounds %VarId, ptr %264, i64 0, i32 1
  %266 = load i64, ptr %memberidx.i.i210, align 4
  %267 = load i64, ptr %264, align 4
  %memberidx2.i.i211 = getelementptr inbounds %VarId, ptr %264, i64 0, i32 2
  %268 = load i64, ptr %memberidx2.i.i211, align 4
  %269 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @243, i64 %266, i64 %267, i64 %268)
  %270 = load ptr, ptr %2, align 8
  %271 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %271, align 8
  %memberidx.i.i.i212 = getelementptr inbounds %string, ptr %271, i64 0, i32 1
  store ptr %270, ptr %memberidx.i.i.i212, align 8
  %memberidx1.i.i.i213 = getelementptr inbounds %string, ptr %271, i64 0, i32 2
  store i64 %269, ptr %memberidx1.i.i.i213, align 4
  %memberidx2.i.i.i214 = getelementptr inbounds %string, ptr %271, i64 0, i32 3
  store i64 %269, ptr %memberidx2.i.i.i214, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  %272 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %271)
  %memberidx.i265 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %265, i64 0, i32 1
  %273 = load i64, ptr %memberidx.i265, align 4
  %274 = urem i64 %272, %273
  %275 = load ptr, ptr %265, align 8
  %276 = getelementptr inbounds ptr, ptr %275, i64 %274
  %277 = load ptr, ptr %276, align 8
  %.not.i266 = icmp eq ptr %277, null
  br i1 %.not.i266, label %Map_string_LLVMValueRef____getitem__.exit285, label %while.entry.i271

while.entry.i271:                                 ; preds = %for.body45, %else.i281
  %278 = phi ptr [ %288, %else.i281 ], [ %275, %for.body45 ]
  %279 = phi i64 [ %289, %else.i281 ], [ %273, %for.body45 ]
  %280 = phi ptr [ %293, %else.i281 ], [ %277, %for.body45 ]
  %hash.0.i267 = phi i64 [ %291, %else.i281 ], [ %274, %for.body45 ]
  %281 = load ptr, ptr %280, align 8
  %memberidx.i.i268 = getelementptr inbounds %string, ptr %281, i64 0, i32 2
  %282 = load i64, ptr %memberidx.i.i268, align 4
  %283 = load i64, ptr %memberidx1.i.i.i213, align 4
  %.not.i.i270 = icmp eq i64 %282, %283
  br i1 %.not.i.i270, label %ifend.i.i274, label %else.i281

ifend.i.i274:                                     ; preds = %while.entry.i271
  %memberidx2.i.i272 = getelementptr inbounds %string, ptr %281, i64 0, i32 1
  %284 = load ptr, ptr %memberidx2.i.i272, align 8
  %285 = load ptr, ptr %memberidx.i.i.i212, align 8
  %286 = call i64 @memcmp(ptr %284, ptr %285, i64 %282)
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %while.end.i279, label %ifend.i.i274.else.i281_crit_edge

ifend.i.i274.else.i281_crit_edge:                 ; preds = %ifend.i.i274
  %.pre335 = load i64, ptr %memberidx.i265, align 4
  %.pre336 = load ptr, ptr %265, align 8
  br label %else.i281

while.end.i279:                                   ; preds = %ifend.i.i274
  %.pre337.pre = load ptr, ptr %265, align 8
  %.phi.trans.insert338.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre337.pre, i64 %hash.0.i267
  %.pre339.pre = load ptr, ptr %.phi.trans.insert338.phi.trans.insert, align 8
  %.not25.i278 = icmp eq ptr %.pre339.pre, null
  br i1 %.not25.i278, label %Map_string_LLVMValueRef____getitem__.exit285, label %if.entry7.i284

else.i281:                                        ; preds = %ifend.i.i274.else.i281_crit_edge, %while.entry.i271
  %288 = phi ptr [ %.pre336, %ifend.i.i274.else.i281_crit_edge ], [ %278, %while.entry.i271 ]
  %289 = phi i64 [ %.pre335, %ifend.i.i274.else.i281_crit_edge ], [ %279, %while.entry.i271 ]
  %290 = add nuw i64 %hash.0.i267, 1
  %291 = urem i64 %290, %289
  %292 = getelementptr inbounds ptr, ptr %288, i64 %291
  %293 = load ptr, ptr %292, align 8
  %.not26.i280 = icmp eq ptr %293, null
  br i1 %.not26.i280, label %Map_string_LLVMValueRef____getitem__.exit285, label %while.entry.i271

if.entry7.i284:                                   ; preds = %while.end.i279
  %memberidx11.i283 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre339.pre, i64 0, i32 1
  %294 = load ptr, ptr %memberidx11.i283, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit285

Map_string_LLVMValueRef____getitem__.exit285:     ; preds = %else.i281, %for.body45, %while.end.i279, %if.entry7.i284
  %common.ret.op.i282 = phi ptr [ %294, %if.entry7.i284 ], [ null, %while.end.i279 ], [ null, %for.body45 ], [ null, %else.i281 ]
  %295 = call ptr @LLVMBuildStore(ptr %83, ptr %259, ptr %common.ret.op.i282)
  %296 = add nuw nsw i64 %i.0310, 1
  %297 = load ptr, ptr %memberidx48, align 8
  %memberidx49 = getelementptr inbounds %Array_FunctionArg_, ptr %297, i64 0, i32 2
  %298 = load i64, ptr %memberidx49, align 4
  %299 = icmp slt i64 %296, %298
  br i1 %299, label %for.body45, label %for.end47

for.end47:                                        ; preds = %Map_string_LLVMValueRef____getitem__.exit285, %for.entry43
  %300 = load ptr, ptr %memberidx52, align 8
  store ptr %81, ptr %memberidx52, align 8
  %memberidx54 = getelementptr inbounds %ClassMethod, ptr %method.0314, i64 0, i32 5
  %301 = load ptr, ptr %memberidx54, align 8
  %302 = load i1, ptr %memberidx.i300, align 1
  store i1 false, ptr %memberidx.i300, align 1
  %303 = load ptr, ptr %301, align 8
  %304 = call ptr @malloc(i32 25)
  %memberidx.i.i301 = getelementptr inbounds %Array_Statement_, ptr %303, i64 0, i32 1
  %305 = load ptr, ptr %memberidx.i.i301, align 8
  %memberidx1.i.i302 = getelementptr inbounds %Array_Statement_, ptr %303, i64 0, i32 2
  %306 = load i64, ptr %memberidx1.i.i302, align 4
  %memberidx1.i.i.i303 = getelementptr inbounds %ArrayIterator_Statement_, ptr %304, i64 0, i32 1
  %307 = icmp slt i64 %306, 1
  br i1 %307, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.end47, %for.body.i
  %308 = phi i64 [ %309, %for.body.i ], [ 1, %for.end47 ]
  %statement.0.i312.in = phi ptr [ %310, %for.body.i ], [ %305, %for.end47 ]
  %statement.0.i312 = load ptr, ptr %statement.0.i312.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %83, ptr %statement.0.i312)
  %309 = add nuw nsw i64 %308, 1
  store i64 %309, ptr %memberidx1.i.i.i303, align 4
  %310 = getelementptr inbounds ptr, ptr %305, i64 %308
  %.not350 = icmp slt i64 %308, %306
  br i1 %.not350, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.end47
  call void @free(ptr nonnull %304)
  %memberidx4.i = getelementptr inbounds %Block, ptr %301, i64 0, i32 4
  %311 = load ptr, ptr %memberidx4.i, align 8
  %.not.i305 = icmp eq ptr %311, null
  br i1 %.not.i305, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %312 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %83, ptr nonnull %311)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %302, ptr %memberidx.i300, align 1
  store ptr %300, ptr %memberidx52, align 8
  call void @LLVMDisposeBuilder(ptr %83)
  br label %for.incr
}

define internal fastcc ptr @CodeGen_codegen_string_to_cstring(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2, align 8
  %memberidx.i34 = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i34, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Module, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load i64, ptr %8, align 4
  %10 = getelementptr inbounds ptr, ptr %6, i64 %9
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %8, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx4 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx4, align 8
  %18 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i29 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i29, align 8
  %memberidx1.i.i30 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i31, align 4
  %20 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr nonnull %19)
  %memberidx.i20 = getelementptr inbounds %Map_string_ClassId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i20, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %get_class_from_type.exit, label %while.entry.i

while.entry.i:                                    ; preds = %3, %else.i
  %26 = phi ptr [ %36, %else.i ], [ %23, %3 ]
  %27 = phi i64 [ %37, %else.i ], [ %21, %3 ]
  %28 = phi ptr [ %41, %else.i ], [ %25, %3 ]
  %hash.0.i = phi i64 [ %39, %else.i ], [ %22, %3 ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i21 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i21, align 4
  %31 = load i64, ptr %memberidx1.i.i30, align 4
  %.not.i.i23 = icmp eq i64 %30, %31
  br i1 %.not.i.i23, label %ifend.i.i26, label %else.i

ifend.i.i26:                                      ; preds = %while.entry.i
  %memberidx2.i.i24 = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %memberidx2.i.i24, align 8
  %33 = load ptr, ptr %memberidx.i.i29, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %30)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i26.else.i_crit_edge

ifend.i.i26.else.i_crit_edge:                     ; preds = %ifend.i.i26
  %.pre = load i64, ptr %memberidx.i20, align 4
  %.pre48 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i26
  %.pre49.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre49.pre, i64 %hash.0.i
  %.pre50.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre50.pre, null
  br i1 %.not25.i, label %get_class_from_type.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i26.else.i_crit_edge, %while.entry.i
  %36 = phi ptr [ %.pre48, %ifend.i.i26.else.i_crit_edge ], [ %26, %while.entry.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i26.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = add nuw i64 %hash.0.i, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not26.i = icmp eq ptr %41, null
  br i1 %.not26.i, label %get_class_from_type.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre50.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx11.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %else.i, %3, %while.end.i, %if.entry7.i
  %common.ret.op.i28 = phi ptr [ %42, %if.entry7.i ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  %43 = alloca %ObjectType, align 8
  store i64 11, ptr %43, align 8
  %memberidx.i19 = getelementptr inbounds %ObjectType, ptr %43, i64 0, i32 1
  store ptr %common.ret.op.i28, ptr %memberidx.i19, align 8
  %44 = load ptr, ptr %memberidx, align 8
  %45 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %45, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i16 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i16, align 8
  %memberidx1.i.i17 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i17, align 4
  %memberidx2.i.i18 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i18, align 4
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %43, i64 0, i32 1
  %47 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i40 = getelementptr inbounds %Program, ptr %44, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i40, align 8
  %49 = load i64, ptr %47, align 4
  %memberidx.i.i.i41 = getelementptr inbounds %Array_Module_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i.i.i41, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i.i42 = getelementptr inbounds %Module, ptr %52, i64 0, i32 3
  %53 = load ptr, ptr %memberidx2.i.i42, align 8
  %memberidx3.i.i43 = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i.i43, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i5.i.i, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %58 = icmp eq ptr %57, null
  br i1 %58, label %get_class_prop_type_with_name.exit, label %ifend.i

ifend.i:                                          ; preds = %get_class_from_type.exit
  %memberidx.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 6
  %59 = load ptr, ptr %memberidx.i, align 8
  %60 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %46)
  %memberidx.i.i13 = getelementptr inbounds %Map_string_PropId_, ptr %59, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i.i13, align 4
  %62 = urem i64 %60, %61
  %63 = load ptr, ptr %59, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %.not.i.i = icmp eq ptr %65, null
  br i1 %.not.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %ifend.i, %else.i.i
  %66 = phi ptr [ %76, %else.i.i ], [ %63, %ifend.i ]
  %67 = phi i64 [ %77, %else.i.i ], [ %61, %ifend.i ]
  %68 = phi ptr [ %81, %else.i.i ], [ %65, %ifend.i ]
  %hash.0.i.i = phi i64 [ %79, %else.i.i ], [ %62, %ifend.i ]
  %69 = load ptr, ptr %68, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i.i, align 4
  %71 = load i64, ptr %memberidx1.i.i17, align 4
  %.not.i.i.i = icmp eq i64 %70, %71
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  %72 = load ptr, ptr %memberidx2.i.i.i, align 8
  %73 = load ptr, ptr %memberidx.i.i16, align 8
  %74 = tail call i64 @memcmp(ptr %72, ptr %73, i64 %70)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre52 = load i64, ptr %memberidx.i.i13, align 4
  %.pre53 = load ptr, ptr %59, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre54.pre = load ptr, ptr %59, align 8
  %.phi.trans.insert55.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre54.pre, i64 %hash.0.i.i
  %.pre56.pre = load ptr, ptr %.phi.trans.insert55.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre56.pre, null
  br i1 %.not25.i.i, label %get_class_prop_type_with_name.exit, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %76 = phi ptr [ %.pre53, %ifend.i.i.i.else.i.i_crit_edge ], [ %66, %while.entry.i.i ]
  %77 = phi i64 [ %.pre52, %ifend.i.i.i.else.i.i_crit_edge ], [ %67, %while.entry.i.i ]
  %78 = add nuw i64 %hash.0.i.i, 1
  %79 = urem i64 %78, %77
  %80 = getelementptr inbounds ptr, ptr %76, i64 %79
  %81 = load ptr, ptr %80, align 8
  %.not26.i.i = icmp eq ptr %81, null
  br i1 %.not26.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre56.pre, i64 0, i32 1
  %82 = load ptr, ptr %memberidx11.i.i, align 8
  %83 = icmp eq ptr %82, null
  br i1 %83, label %get_class_prop_type_with_name.exit, label %ifend3.i

ifend3.i:                                         ; preds = %Map_string_PropId____getitem__.exit.i
  %memberidx.i.i7.i = getelementptr inbounds %PropId, ptr %82, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i7.i, align 8
  %85 = load ptr, ptr %memberidx.i.i40, align 8
  %86 = load i64, ptr %84, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %89, i64 0, i32 3
  %90 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %84, i64 0, i32 2
  %91 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %90, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %91
  %94 = load ptr, ptr %93, align 8
  %95 = load i64, ptr %82, align 4
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend3.i
  %memberidx1.i.i14 = getelementptr inbounds %Class, ptr %94, i64 0, i32 5
  %97 = load ptr, ptr %memberidx1.i.i14, align 8
  %memberidx2.i.i15 = getelementptr inbounds %PropId, ptr %82, i64 0, i32 2
  %98 = load i64, ptr %memberidx2.i.i15, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %97, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i12.i.i, align 8
  %100 = getelementptr inbounds ptr, ptr %99, i64 %98
  %101 = load ptr, ptr %100, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %101, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend3.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %94, i64 0, i32 4
  %102 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %82, i64 0, i32 2
  %103 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %102, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i11.i.i, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %106, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i8.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  br label %get_class_prop_type_with_name.exit

get_class_prop_type_with_name.exit:               ; preds = %else.i.i, %ifend.i, %while.end.i.i, %get_class_from_type.exit, %Map_string_PropId____getitem__.exit.i, %get_class_prop_type.exit.i
  %common.ret.op.i = phi ptr [ %common.ret.op.i8.i, %get_class_prop_type.exit.i ], [ null, %get_class_from_type.exit ], [ null, %Map_string_PropId____getitem__.exit.i ], [ null, %while.end.i.i ], [ null, %ifend.i ], [ null, %else.i.i ]
  %107 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %107, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %108, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 1
  store ptr %107, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i, align 4
  %109 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %2, ptr nonnull %43, ptr nonnull %108, ptr null)
  store ptr %2, ptr %args, align 8
  %110 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i, i1 false)
  %111 = call ptr @LLVMBuildCall2(ptr %1, ptr %110, ptr %109, ptr nonnull %args, i64 1, ptr nonnull @80)
  ret ptr %111
}

define internal fastcc void @CodeGen_codegen_statement(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %4 = load i64, ptr %2, align 4
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i70 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i70, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %6)
  %memberidx1.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i, align 8
  %9 = tail call ptr @LLVMAppendBasicBlock(ptr %8, ptr nonnull @281)
  %10 = load ptr, ptr %memberidx1.i, align 8
  %11 = tail call ptr @LLVMAppendBasicBlock(ptr %10, ptr nonnull @45)
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @282)
  %14 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %7, ptr %9, ptr %11)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %9)
  %memberidx4.i = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 2
  %15 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i108 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %16 = load i1, ptr %memberidx.i108, align 1
  store i1 false, ptr %memberidx.i108, align 1
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 25)
  %memberidx.i.i109 = getelementptr inbounds %Array_Statement_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i.i109, align 8
  %memberidx1.i.i110 = getelementptr inbounds %Array_Statement_, ptr %17, i64 0, i32 2
  %20 = load i64, ptr %memberidx1.i.i110, align 4
  store i1 false, ptr %18, align 1
  %memberidx1.i.i.i111 = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 1
  %memberidx2.i.i.i112 = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 3
  store ptr %19, ptr %memberidx2.i.i.i112, align 8
  %memberidx3.i.i.i113 = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 2
  store i64 %20, ptr %memberidx3.i.i.i113, align 4
  store i64 1, ptr %memberidx1.i.i.i111, align 4
  %21 = icmp slt i64 %20, 1
  br i1 %21, label %for.end.i125, label %for.body.i122

for.body.i122:                                    ; preds = %if.entry, %for.body.i122
  %22 = phi i64 [ %23, %for.body.i122 ], [ 1, %if.entry ]
  %statement.0.i117139.in = phi ptr [ %24, %for.body.i122 ], [ %19, %if.entry ]
  %statement.0.i117139 = load ptr, ptr %statement.0.i117139.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i117139)
  %23 = add nuw nsw i64 %22, 1
  store i64 %23, ptr %memberidx1.i.i.i111, align 4
  %24 = getelementptr inbounds ptr, ptr %19, i64 %22
  %.not145 = icmp slt i64 %22, %20
  br i1 %.not145, label %for.body.i122, label %for.end.i125

for.end.i125:                                     ; preds = %for.body.i122, %if.entry
  tail call void @free(ptr nonnull %18)
  %memberidx4.i123 = getelementptr inbounds %Block, ptr %15, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4.i123, align 8
  %.not.i124 = icmp eq ptr %25, null
  br i1 %.not.i124, label %CodeGen_codegen_block.exit129, label %if.entry.i126

if.entry.i126:                                    ; preds = %for.end.i125
  %26 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %25)
  br label %CodeGen_codegen_block.exit129

CodeGen_codegen_block.exit129:                    ; preds = %for.end.i125, %if.entry.i126
  store i1 %16, ptr %memberidx.i108, align 1
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i71 = getelementptr inbounds %Block, ptr %27, i64 0, i32 1
  %28 = load i1, ptr %memberidx.i.i71, align 1
  %memberidx1.i.i72 = getelementptr inbounds %Block, ptr %27, i64 0, i32 2
  %29 = load i1, ptr %memberidx1.i.i72, align 1
  %30 = or i1 %28, %29
  %memberidx2.i.i73 = getelementptr inbounds %Block, ptr %27, i64 0, i32 3
  %31 = load i1, ptr %memberidx2.i.i73, align 1
  %32 = or i1 %30, %31
  br i1 %32, label %ifend.i77, label %if.entry.i74

if.entry.i74:                                     ; preds = %CodeGen_codegen_block.exit129
  %33 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %ifend.i77

ifend.i77:                                        ; preds = %if.entry.i74, %CodeGen_codegen_block.exit129
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %11)
  %memberidx6.i75 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 3
  %34 = load ptr, ptr %memberidx6.i75, align 8
  %.not.i76 = icmp eq ptr %34, null
  br i1 %.not.i76, label %if.entry12.i, label %if.entry7.i

if.entry7.i:                                      ; preds = %ifend.i77
  %35 = load i1, ptr %memberidx.i108, align 1
  store i1 false, ptr %memberidx.i108, align 1
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 25)
  %memberidx.i.i87 = getelementptr inbounds %Array_Statement_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i87, align 8
  %memberidx1.i.i88 = getelementptr inbounds %Array_Statement_, ptr %36, i64 0, i32 2
  %39 = load i64, ptr %memberidx1.i.i88, align 4
  store i1 false, ptr %37, align 1
  %memberidx1.i.i.i89 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 1
  %memberidx2.i.i.i90 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 3
  store ptr %38, ptr %memberidx2.i.i.i90, align 8
  %memberidx3.i.i.i91 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 2
  store i64 %39, ptr %memberidx3.i.i.i91, align 4
  store i64 1, ptr %memberidx1.i.i.i89, align 4
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %for.end.i103, label %for.body.i100

for.body.i100:                                    ; preds = %if.entry7.i, %for.body.i100
  %41 = phi i64 [ %42, %for.body.i100 ], [ 1, %if.entry7.i ]
  %statement.0.i95136.in = phi ptr [ %43, %for.body.i100 ], [ %38, %if.entry7.i ]
  %statement.0.i95136 = load ptr, ptr %statement.0.i95136.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i95136)
  %42 = add nuw nsw i64 %41, 1
  store i64 %42, ptr %memberidx1.i.i.i89, align 4
  %43 = getelementptr inbounds ptr, ptr %38, i64 %41
  %.not146 = icmp slt i64 %41, %39
  br i1 %.not146, label %for.body.i100, label %for.end.i103

for.end.i103:                                     ; preds = %for.body.i100, %if.entry7.i
  tail call void @free(ptr nonnull %37)
  %memberidx4.i101 = getelementptr inbounds %Block, ptr %34, i64 0, i32 4
  %44 = load ptr, ptr %memberidx4.i101, align 8
  %.not.i102 = icmp eq ptr %44, null
  br i1 %.not.i102, label %CodeGen_codegen_block.exit107, label %if.entry.i104

if.entry.i104:                                    ; preds = %for.end.i103
  %45 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %44)
  br label %CodeGen_codegen_block.exit107

CodeGen_codegen_block.exit107:                    ; preds = %for.end.i103, %if.entry.i104
  store i1 %35, ptr %memberidx.i108, align 1
  %46 = load ptr, ptr %memberidx6.i75, align 8
  %memberidx.i42.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 1
  %47 = load i1, ptr %memberidx.i42.i, align 1
  %memberidx1.i43.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 2
  %48 = load i1, ptr %memberidx1.i43.i, align 1
  %49 = or i1 %47, %48
  %memberidx2.i44.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 3
  %50 = load i1, ptr %memberidx2.i44.i, align 1
  %51 = or i1 %49, %50
  br i1 %51, label %else13.i, label %if.entry12.i

if.entry12.i:                                     ; preds = %ifend.i77, %CodeGen_codegen_block.exit107
  %52 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

else13.i:                                         ; preds = %CodeGen_codegen_block.exit107
  br i1 %32, label %if.entry15.i, label %CodeGen_codegen_if_stmt.exit

if.entry15.i:                                     ; preds = %else13.i
  tail call void @LLVMDeleteBasicBlock(ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

CodeGen_codegen_if_stmt.exit:                     ; preds = %if.entry12.i, %else13.i, %if.entry15.i
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %13)
  %.pr = load i64, ptr %2, align 4
  br label %ifend

ifend:                                            ; preds = %3, %CodeGen_codegen_if_stmt.exit
  %53 = phi i64 [ %4, %3 ], [ %.pr, %CodeGen_codegen_if_stmt.exit ]
  %54 = icmp eq i64 %53, 3
  br i1 %54, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_for_stmt(ptr %0, ptr %1, ptr nonnull %2)
  %.pre = load i64, ptr %2, align 4
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %55 = phi i64 [ %53, %ifend ], [ %.pre, %if.entry2 ]
  %56 = icmp eq i64 %55, 4
  br i1 %56, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend4
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i66, align 8
  %58 = tail call ptr @LLVMAppendBasicBlock(ptr %57, ptr nonnull @288)
  %59 = load ptr, ptr %memberidx.i66, align 8
  %60 = tail call ptr @LLVMAppendBasicBlock(ptr %59, ptr nonnull @289)
  %memberidx2.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %61 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i67 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %62 = load ptr, ptr %memberidx3.i67, align 8
  store ptr %60, ptr %memberidx2.i, align 8
  store ptr %58, ptr %memberidx3.i67, align 8
  %memberidx6.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 1
  %63 = load ptr, ptr %memberidx6.i, align 8
  %64 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %63)
  %65 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %64, ptr %58, ptr %60)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %58)
  %memberidx7.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 2
  %66 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i79 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %67 = load i1, ptr %memberidx.i79, align 1
  store i1 false, ptr %memberidx.i79, align 1
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 25)
  %memberidx.i.i80 = getelementptr inbounds %Array_Statement_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i80, align 8
  %memberidx1.i.i81 = getelementptr inbounds %Array_Statement_, ptr %68, i64 0, i32 2
  %71 = load i64, ptr %memberidx1.i.i81, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.entry6, %for.body.i
  %73 = phi i64 [ %74, %for.body.i ], [ 1, %if.entry6 ]
  %statement.0.i134.in = phi ptr [ %75, %for.body.i ], [ %70, %if.entry6 ]
  %statement.0.i134 = load ptr, ptr %statement.0.i134.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i134)
  %74 = add nuw nsw i64 %73, 1
  store i64 %74, ptr %memberidx1.i.i.i, align 4
  %75 = getelementptr inbounds ptr, ptr %70, i64 %73
  %.not = icmp slt i64 %73, %71
  br i1 %.not, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %if.entry6
  tail call void @free(ptr nonnull %69)
  %memberidx4.i82 = getelementptr inbounds %Block, ptr %66, i64 0, i32 4
  %76 = load ptr, ptr %memberidx4.i82, align 8
  %.not.i83 = icmp eq ptr %76, null
  br i1 %.not.i83, label %CodeGen_codegen_block.exit, label %if.entry.i84

if.entry.i84:                                     ; preds = %for.end.i
  %77 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %76)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i84
  store i1 %67, ptr %memberidx.i79, align 1
  %78 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 1
  %79 = load i1, ptr %memberidx.i.i, align 1
  %memberidx1.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 2
  %80 = load i1, ptr %memberidx1.i.i, align 1
  %81 = or i1 %79, %80
  %memberidx2.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 3
  %82 = load i1, ptr %memberidx2.i.i, align 1
  %83 = or i1 %81, %82
  br i1 %83, label %CodeGen_codegen_while_stmt.exit, label %if.entry.i68

if.entry.i68:                                     ; preds = %CodeGen_codegen_block.exit
  %84 = load ptr, ptr %memberidx6.i, align 8
  %85 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %84)
  %86 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %85, ptr %58, ptr %60)
  br label %CodeGen_codegen_while_stmt.exit

CodeGen_codegen_while_stmt.exit:                  ; preds = %CodeGen_codegen_block.exit, %if.entry.i68
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %60)
  store ptr %61, ptr %memberidx2.i, align 8
  store ptr %62, ptr %memberidx3.i67, align 8
  %.pr130 = load i64, ptr %2, align 4
  br label %ifend8

ifend8:                                           ; preds = %ifend4, %CodeGen_codegen_while_stmt.exit
  %87 = phi i64 [ %55, %ifend4 ], [ %.pr130, %CodeGen_codegen_while_stmt.exit ]
  %88 = icmp eq i64 %87, 5
  br i1 %88, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %89 = load ptr, ptr %memberidx13, align 8
  %90 = tail call ptr @LLVMBuildBr(ptr %1, ptr %89)
  %.pre143 = load i64, ptr %2, align 4
  br label %ifend12

ifend12:                                          ; preds = %ifend8, %if.entry10
  %91 = phi i64 [ %87, %ifend8 ], [ %.pre143, %if.entry10 ]
  %92 = icmp eq i64 %91, 6
  br i1 %92, label %if.entry15, label %ifend17

if.entry15:                                       ; preds = %ifend12
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %93 = load ptr, ptr %memberidx18, align 8
  %94 = tail call ptr @LLVMBuildBr(ptr %1, ptr %93)
  %.pr131 = load i64, ptr %2, align 4
  br label %ifend17

ifend17:                                          ; preds = %ifend12, %if.entry15
  %95 = phi i64 [ %91, %ifend12 ], [ %.pr131, %if.entry15 ]
  %96 = icmp eq i64 %95, 1
  br i1 %96, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend17
  tail call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pre144 = load i64, ptr %2, align 4
  br label %ifend22

ifend22:                                          ; preds = %ifend17, %if.entry20
  %97 = phi i64 [ %95, %ifend17 ], [ %.pre144, %if.entry20 ]
  %98 = icmp eq i64 %97, 2
  br i1 %98, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend22
  tail call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pr132 = load i64, ptr %2, align 4
  br label %ifend26

ifend26:                                          ; preds = %ifend22, %if.entry24
  %99 = phi i64 [ %97, %ifend22 ], [ %.pr132, %if.entry24 ]
  %100 = icmp eq i64 %99, 7
  br i1 %100, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend26
  %memberidx.i = getelementptr inbounds %ReturnStatement, ptr %2, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %101, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry28
  %102 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %101)
  %103 = load ptr, ptr %memberidx.i, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  %104 = load ptr, ptr %memberidx3.i, align 8
  %105 = load i64, ptr %104, align 4
  %.not12.i = icmp eq i64 %105, 10
  br i1 %.not12.i, label %ifend.i, label %if.entry5.i

ifend.i:                                          ; preds = %if.entry.i, %if.entry28
  %106 = tail call ptr @LLVMBuildRetVoid(ptr %1)
  br label %ifend30

if.entry5.i:                                      ; preds = %if.entry.i
  %107 = tail call ptr @LLVMBuildRet(ptr %1, ptr %102)
  br label %ifend30

ifend30:                                          ; preds = %if.entry5.i, %ifend.i, %ifend26
  %108 = load i64, ptr %2, align 4
  %109 = icmp eq i64 %108, 8
  br i1 %109, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %110 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  ret void
}

define internal fastcc void @Map_string_CGClassType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_CGClassType____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_CGClassType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_CGClassType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_CGClassType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_CGClassType__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_LLVMValueRef__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_LLVMValueRef__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_LLVMValueRef__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc ptr @CodeGen_get_string_val(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture %4, i64 %5) unnamed_addr {
  %indices = alloca [1 x ptr], align 8
  %7 = load i64, ptr %3, align 4
  switch i64 %7, label %is_object.exit330 [
    i64 0, label %if.entry
    i64 20, label %if.entry.i327
  ]

common.ret:                                       ; preds = %ifend4, %if.entry.i, %Map_string_LLVMValueRef____getitem__.exit, %if.entry.i149, %Map_string_LLVMValueRef____getitem__.exit241, %CodeGen_get_or_codegen_enum_from_typeid.exit, %Array_LLVMValueRef____sl__.exit124, %Array_LLVMValueRef____sl__.exit171, %CodeGen_createGlobalLLVMString.exit187
  %common.ret.op = phi ptr [ %72, %CodeGen_createGlobalLLVMString.exit187 ], [ %107, %Array_LLVMValueRef____sl__.exit171 ], [ %250, %Array_LLVMValueRef____sl__.exit124 ], [ %345, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %183, %if.entry.i149 ], [ %178, %Map_string_LLVMValueRef____getitem__.exit241 ], [ %324, %if.entry.i ], [ %319, %Map_string_LLVMValueRef____getitem__.exit ], [ %2, %ifend4 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %6
  %8 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i197 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i197, align 8
  %memberidx1.i.i198 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i198, align 4
  %memberidx2.i.i199 = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i199, align 4
  %memberidx.i191 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %memberidx.i191, align 8
  %11 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %9)
  %memberidx.i263 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %10, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i263, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i264 = icmp eq ptr %16, null
  br i1 %.not.i264, label %if.entry.i193, label %while.entry.i269

while.entry.i269:                                 ; preds = %if.entry, %else.i279
  %17 = phi ptr [ %27, %else.i279 ], [ %14, %if.entry ]
  %18 = phi i64 [ %28, %else.i279 ], [ %12, %if.entry ]
  %19 = phi ptr [ %32, %else.i279 ], [ %16, %if.entry ]
  %hash.0.i265 = phi i64 [ %30, %else.i279 ], [ %13, %if.entry ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i266 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i266, align 4
  %22 = load i64, ptr %memberidx1.i.i198, align 4
  %.not.i.i268 = icmp eq i64 %21, %22
  br i1 %.not.i.i268, label %ifend.i.i272, label %else.i279

ifend.i.i272:                                     ; preds = %while.entry.i269
  %memberidx2.i.i270 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i270, align 8
  %24 = load ptr, ptr %memberidx.i.i197, align 8
  %25 = tail call i64 @memcmp(ptr %23, ptr %24, i64 %21)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %while.end.i277, label %ifend.i.i272.else.i279_crit_edge

ifend.i.i272.else.i279_crit_edge:                 ; preds = %ifend.i.i272
  %.pre = load i64, ptr %memberidx.i263, align 4
  %.pre363 = load ptr, ptr %10, align 8
  br label %else.i279

while.end.i277:                                   ; preds = %ifend.i.i272
  %.pre364.pre = load ptr, ptr %10, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre364.pre, i64 %hash.0.i265
  %.pre365.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i276 = icmp eq ptr %.pre365.pre, null
  br i1 %.not25.i276, label %if.entry.i193, label %Map_string_LLVMValueRef____getitem__.exit283

else.i279:                                        ; preds = %ifend.i.i272.else.i279_crit_edge, %while.entry.i269
  %27 = phi ptr [ %.pre363, %ifend.i.i272.else.i279_crit_edge ], [ %17, %while.entry.i269 ]
  %28 = phi i64 [ %.pre, %ifend.i.i272.else.i279_crit_edge ], [ %18, %while.entry.i269 ]
  %29 = add nuw i64 %hash.0.i265, 1
  %30 = urem i64 %29, %28
  %31 = getelementptr inbounds ptr, ptr %27, i64 %30
  %32 = load ptr, ptr %31, align 8
  %.not26.i278 = icmp eq ptr %32, null
  br i1 %.not26.i278, label %if.entry.i193, label %while.entry.i269

Map_string_LLVMValueRef____getitem__.exit283:     ; preds = %while.end.i277
  %memberidx11.i281 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre365.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx11.i281, align 8
  %34 = icmp eq ptr %33, null
  br i1 %34, label %if.entry.i193, label %CodeGen_createGlobalLLVMString.exit196

if.entry.i193:                                    ; preds = %else.i279, %if.entry, %while.end.i277, %Map_string_LLVMValueRef____getitem__.exit283
  %35 = load ptr, ptr %9, align 8
  %memberidx1.i192 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx1.i192, align 8
  %37 = tail call ptr %36(ptr nonnull %9)
  %38 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %37, ptr nonnull @80)
  %39 = load ptr, ptr %memberidx.i191, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %39, ptr nonnull %9, ptr %38)
  br label %CodeGen_createGlobalLLVMString.exit196

CodeGen_createGlobalLLVMString.exit196:           ; preds = %Map_string_LLVMValueRef____getitem__.exit283, %if.entry.i193
  %str.0.i194 = phi ptr [ %38, %if.entry.i193 ], [ %33, %Map_string_LLVMValueRef____getitem__.exit283 ]
  %40 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %40, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %41 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %41, align 8
  %memberidx.i.i188 = getelementptr inbounds %string, ptr %41, i64 0, i32 1
  store ptr %40, ptr %memberidx.i.i188, align 8
  %memberidx1.i.i189 = getelementptr inbounds %string, ptr %41, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i189, align 4
  %memberidx2.i.i190 = getelementptr inbounds %string, ptr %41, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i190, align 4
  %42 = load ptr, ptr %memberidx.i191, align 8
  %43 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %41)
  %memberidx.i242 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %42, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i242, align 4
  %45 = urem i64 %43, %44
  %46 = load ptr, ptr %42, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %45
  %48 = load ptr, ptr %47, align 8
  %.not.i243 = icmp eq ptr %48, null
  br i1 %.not.i243, label %if.entry.i184, label %while.entry.i248

while.entry.i248:                                 ; preds = %CodeGen_createGlobalLLVMString.exit196, %else.i258
  %49 = phi ptr [ %59, %else.i258 ], [ %46, %CodeGen_createGlobalLLVMString.exit196 ]
  %50 = phi i64 [ %60, %else.i258 ], [ %44, %CodeGen_createGlobalLLVMString.exit196 ]
  %51 = phi ptr [ %64, %else.i258 ], [ %48, %CodeGen_createGlobalLLVMString.exit196 ]
  %hash.0.i244 = phi i64 [ %62, %else.i258 ], [ %45, %CodeGen_createGlobalLLVMString.exit196 ]
  %52 = load ptr, ptr %51, align 8
  %memberidx.i.i245 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i245, align 4
  %54 = load i64, ptr %memberidx1.i.i189, align 4
  %.not.i.i247 = icmp eq i64 %53, %54
  br i1 %.not.i.i247, label %ifend.i.i251, label %else.i258

ifend.i.i251:                                     ; preds = %while.entry.i248
  %memberidx2.i.i249 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i249, align 8
  %56 = load ptr, ptr %memberidx.i.i188, align 8
  %57 = tail call i64 @memcmp(ptr %55, ptr %56, i64 %53)
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %while.end.i256, label %ifend.i.i251.else.i258_crit_edge

ifend.i.i251.else.i258_crit_edge:                 ; preds = %ifend.i.i251
  %.pre366 = load i64, ptr %memberidx.i242, align 4
  %.pre367 = load ptr, ptr %42, align 8
  br label %else.i258

while.end.i256:                                   ; preds = %ifend.i.i251
  %.pre368.pre = load ptr, ptr %42, align 8
  %.phi.trans.insert369.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre368.pre, i64 %hash.0.i244
  %.pre370.pre = load ptr, ptr %.phi.trans.insert369.phi.trans.insert, align 8
  %.not25.i255 = icmp eq ptr %.pre370.pre, null
  br i1 %.not25.i255, label %if.entry.i184, label %Map_string_LLVMValueRef____getitem__.exit262

else.i258:                                        ; preds = %ifend.i.i251.else.i258_crit_edge, %while.entry.i248
  %59 = phi ptr [ %.pre367, %ifend.i.i251.else.i258_crit_edge ], [ %49, %while.entry.i248 ]
  %60 = phi i64 [ %.pre366, %ifend.i.i251.else.i258_crit_edge ], [ %50, %while.entry.i248 ]
  %61 = add nuw i64 %hash.0.i244, 1
  %62 = urem i64 %61, %60
  %63 = getelementptr inbounds ptr, ptr %59, i64 %62
  %64 = load ptr, ptr %63, align 8
  %.not26.i257 = icmp eq ptr %64, null
  br i1 %.not26.i257, label %if.entry.i184, label %while.entry.i248

Map_string_LLVMValueRef____getitem__.exit262:     ; preds = %while.end.i256
  %memberidx11.i260 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre370.pre, i64 0, i32 1
  %65 = load ptr, ptr %memberidx11.i260, align 8
  %66 = icmp eq ptr %65, null
  br i1 %66, label %if.entry.i184, label %CodeGen_createGlobalLLVMString.exit187

if.entry.i184:                                    ; preds = %else.i258, %CodeGen_createGlobalLLVMString.exit196, %while.end.i256, %Map_string_LLVMValueRef____getitem__.exit262
  %67 = load ptr, ptr %41, align 8
  %memberidx1.i183 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %67, i64 0, i32 5
  %68 = load ptr, ptr %memberidx1.i183, align 8
  %69 = tail call ptr %68(ptr nonnull %41)
  %70 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %69, ptr nonnull @80)
  %71 = load ptr, ptr %memberidx.i191, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %71, ptr nonnull %41, ptr %70)
  br label %CodeGen_createGlobalLLVMString.exit187

CodeGen_createGlobalLLVMString.exit187:           ; preds = %Map_string_LLVMValueRef____getitem__.exit262, %if.entry.i184
  %str.0.i185 = phi ptr [ %70, %if.entry.i184 ], [ %65, %Map_string_LLVMValueRef____getitem__.exit262 ]
  %72 = tail call ptr @LLVMBuildSelect(ptr %1, ptr %2, ptr %str.0.i194, ptr %str.0.i185, ptr nonnull @80)
  br label %common.ret

if.entry.i327:                                    ; preds = %6, %if.entry.i327
  %.tr5.i325 = phi ptr [ %73, %if.entry.i327 ], [ %3, %6 ]
  %memberidx1.i326 = getelementptr inbounds %GenericType, ptr %.tr5.i325, i64 0, i32 3
  %73 = load ptr, ptr %memberidx1.i326, align 8
  %74 = load i64, ptr %73, align 4
  %75 = icmp eq i64 %74, 20
  br i1 %75, label %if.entry.i327, label %is_object.exit330

is_object.exit330:                                ; preds = %if.entry.i327, %6
  %.lcssa.i328 = phi i64 [ %7, %6 ], [ %74, %if.entry.i327 ]
  %76 = icmp eq i64 %.lcssa.i328, 11
  br i1 %76, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit330
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %77 = load ptr, ptr %memberidx, align 8
  %78 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %78, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %79 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %79, align 8
  %memberidx.i.i179 = getelementptr inbounds %string, ptr %79, i64 0, i32 1
  store ptr %78, ptr %memberidx.i.i179, align 8
  %memberidx1.i.i180 = getelementptr inbounds %string, ptr %79, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i180, align 4
  %memberidx2.i.i181 = getelementptr inbounds %string, ptr %79, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i181, align 4
  %80 = load i64, ptr %3, align 4
  %81 = icmp eq i64 %80, 20
  br i1 %81, label %if.entry.i321, label %is_object.exit324.thread

if.entry.i321:                                    ; preds = %if.entry2, %if.entry.i321
  %.tr5.i319 = phi ptr [ %82, %if.entry.i321 ], [ %3, %if.entry2 ]
  %memberidx1.i320 = getelementptr inbounds %GenericType, ptr %.tr5.i319, i64 0, i32 3
  %82 = load ptr, ptr %memberidx1.i320, align 8
  %83 = load i64, ptr %82, align 4
  switch i64 %83, label %ifend7 [
    i64 20, label %if.entry.i321
    i64 11, label %tailrecurse.i307.preheader
  ]

is_object.exit324.thread:                         ; preds = %if.entry2
  %84 = icmp eq i64 %80, 11
  br i1 %84, label %if.entry3.i317, label %ifend7

tailrecurse.i307.preheader:                       ; preds = %if.entry.i321
  br i1 %81, label %if.entry.i310, label %if.entry3.i317

if.entry.i310:                                    ; preds = %tailrecurse.i307.preheader, %if.entry.i310
  %.tr11.i306355 = phi ptr [ %85, %if.entry.i310 ], [ %3, %tailrecurse.i307.preheader ]
  %memberidx1.i309 = getelementptr inbounds %GenericType, ptr %.tr11.i306355, i64 0, i32 3
  %85 = load ptr, ptr %memberidx1.i309, align 8
  %86 = load i64, ptr %85, align 4
  %switch = icmp eq i64 %86, 20
  br i1 %switch, label %if.entry.i310, label %if.entry3.i317

if.entry3.i317:                                   ; preds = %if.entry.i310, %is_object.exit324.thread, %tailrecurse.i307.preheader
  %.tr11.i306.lcssa = phi ptr [ %3, %tailrecurse.i307.preheader ], [ %3, %is_object.exit324.thread ], [ %85, %if.entry.i310 ]
  %memberidx6.i311 = getelementptr inbounds %ObjectType, ptr %.tr11.i306.lcssa, i64 0, i32 1
  %87 = load ptr, ptr %memberidx6.i311, align 8
  %memberidx.i.i312 = getelementptr inbounds %Program, ptr %77, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i.i312, align 8
  %89 = load i64, ptr %87, align 4
  %memberidx.i.i.i313 = getelementptr inbounds %Array_Module_, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx.i.i.i313, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx2.i.i314 = getelementptr inbounds %Module, ptr %92, i64 0, i32 3
  %93 = load ptr, ptr %memberidx2.i.i314, align 8
  %memberidx3.i.i315 = getelementptr inbounds %TypeId, ptr %87, i64 0, i32 2
  %94 = load i64, ptr %memberidx3.i.i315, align 4
  %memberidx.i5.i.i316 = getelementptr inbounds %Array_Class_, ptr %93, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i5.i.i316, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx.i173 = getelementptr inbounds %Class, ptr %97, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i173, align 8
  %memberidx.i.i174 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i.i174, align 4
  %.not.i.i = icmp eq i64 %99, 6
  br i1 %.not.i.i, label %string___eq__.exit.i, label %ifend7

string___eq__.exit.i:                             ; preds = %if.entry3.i317
  %memberidx2.i.i177 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  %100 = load ptr, ptr %memberidx2.i.i177, align 8
  %101 = tail call i64 @memcmp(ptr %100, ptr %78, i64 6)
  %102 = icmp eq i64 %101, 0
  %103 = load ptr, ptr %97, align 8
  %104 = load i64, ptr %103, align 4
  %105 = icmp eq i64 %104, 1
  %106 = and i1 %102, %105
  br i1 %106, label %if.entry5, label %ifend7

ifend4:                                           ; preds = %is_object.exit330
  switch i64 %7, label %common.ret [
    i64 16, label %if.entry35
    i64 12, label %if.entry39
  ]

if.entry5:                                        ; preds = %string___eq__.exit.i
  %107 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %2)
  %memberidx.i163 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %108 = load i64, ptr %memberidx.i163, align 4
  %memberidx1.i164 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %109 = load i64, ptr %memberidx1.i164, align 4
  %.not.i165 = icmp slt i64 %108, %109
  br i1 %.not.i165, label %if.entry5.Array_LLVMValueRef____sl__.exit171_crit_edge, label %if.entry.i168

if.entry5.Array_LLVMValueRef____sl__.exit171_crit_edge: ; preds = %if.entry5
  %memberidx4.i169.phi.trans.insert = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %.pre387 = load ptr, ptr %memberidx4.i169.phi.trans.insert, align 8
  br label %Array_LLVMValueRef____sl__.exit171

if.entry.i168:                                    ; preds = %if.entry5
  %110 = shl nuw i64 %109, 1
  store i64 %110, ptr %memberidx1.i164, align 4
  %memberidx2.i.i167 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %111 = load ptr, ptr %memberidx2.i.i167, align 8
  %112 = shl i64 %109, 4
  %113 = tail call ptr @realloc(ptr %111, i64 %112)
  store ptr %113, ptr %memberidx2.i.i167, align 8
  %.pre386 = load i64, ptr %memberidx.i163, align 4
  br label %Array_LLVMValueRef____sl__.exit171

Array_LLVMValueRef____sl__.exit171:               ; preds = %if.entry5.Array_LLVMValueRef____sl__.exit171_crit_edge, %if.entry.i168
  %114 = phi ptr [ %.pre387, %if.entry5.Array_LLVMValueRef____sl__.exit171_crit_edge ], [ %113, %if.entry.i168 ]
  %115 = phi i64 [ %108, %if.entry5.Array_LLVMValueRef____sl__.exit171_crit_edge ], [ %.pre386, %if.entry.i168 ]
  %116 = add nsw i64 %115, 1
  store i64 %116, ptr %memberidx.i163, align 4
  %117 = getelementptr inbounds ptr, ptr %114, i64 %115
  store ptr %107, ptr %117, align 8
  br label %common.ret

ifend7:                                           ; preds = %if.entry.i321, %is_object.exit324.thread, %if.entry3.i317, %string___eq__.exit.i
  %118 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i299, %ifend7
  %.tr11.i = phi ptr [ %3, %ifend7 ], [ %120, %if.entry.i299 ]
  %119 = load i64, ptr %.tr11.i, align 4
  switch i64 %119, label %get_class_from_type.exit [
    i64 20, label %if.entry.i299
    i64 11, label %if.entry3.i
  ]

if.entry.i299:                                    ; preds = %tailrecurse.i
  %memberidx1.i298 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %120 = load ptr, ptr %memberidx1.i298, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i300 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %121 = load ptr, ptr %memberidx6.i300, align 8
  %memberidx.i.i301 = getelementptr inbounds %Program, ptr %118, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i.i301, align 8
  %123 = load i64, ptr %121, align 4
  %memberidx.i.i.i302 = getelementptr inbounds %Array_Module_, ptr %122, i64 0, i32 1
  %124 = load ptr, ptr %memberidx.i.i.i302, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx2.i.i303 = getelementptr inbounds %Module, ptr %126, i64 0, i32 3
  %127 = load ptr, ptr %memberidx2.i.i303, align 8
  %memberidx3.i.i304 = getelementptr inbounds %TypeId, ptr %121, i64 0, i32 2
  %128 = load i64, ptr %memberidx3.i.i304, align 4
  %memberidx.i5.i.i305 = getelementptr inbounds %Array_Class_, ptr %127, i64 0, i32 1
  %129 = load ptr, ptr %memberidx.i5.i.i305, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i297 = phi ptr [ %131, %if.entry3.i ], [ null, %tailrecurse.i ]
  %132 = alloca %StringBuilder, align 8
  %memberidx9 = getelementptr inbounds %Class, ptr %common.ret.op.i297, i64 0, i32 1
  %133 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %string, ptr %133, i64 0, i32 2
  %134 = load i64, ptr %memberidx10, align 4
  %135 = add nuw i64 %134, 14
  store ptr @VTableStringBuilder, ptr %132, align 8
  %memberidx.i159 = getelementptr inbounds %StringBuilder, ptr %132, i64 0, i32 2
  store i64 %135, ptr %memberidx.i159, align 8
  %memberidx1.i160 = getelementptr inbounds %StringBuilder, ptr %132, i64 0, i32 1
  %136 = trunc i64 %135 to i32
  %137 = tail call ptr @malloc(i32 %136)
  store ptr %137, ptr %memberidx1.i160, align 8
  %memberidx3.i161 = getelementptr inbounds %StringBuilder, ptr %132, i64 0, i32 3
  store ptr %137, ptr %memberidx3.i161, align 8
  %memberidx5.i162 = getelementptr inbounds %StringBuilder, ptr %132, i64 0, i32 4
  store i64 0, ptr %memberidx5.i162, align 8
  %138 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr }, ptr @VTableStringBuilder, i64 0, i32 1), align 8
  %139 = load ptr, ptr %memberidx9, align 8
  %140 = load ptr, ptr %139, align 8
  %memberidx13 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx13, align 8
  %142 = tail call ptr %141(ptr nonnull %139)
  %143 = alloca ptr, align 8
  %144 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %143, ptr nonnull @247, ptr %142)
  %145 = load ptr, ptr %143, align 8
  %146 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %146, align 8
  %memberidx.i156 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  store ptr %145, ptr %memberidx.i156, align 8
  %memberidx1.i157 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  store i64 %144, ptr %memberidx1.i157, align 4
  %memberidx2.i158 = getelementptr inbounds %string, ptr %146, i64 0, i32 3
  store i64 %144, ptr %memberidx2.i158, align 4
  tail call void @free(ptr %142)
  call void %138(ptr nonnull %132, ptr nonnull %146)
  %147 = icmp eq i64 %5, 3
  br i1 %147, label %if.entry14, label %ifend16

if.entry14:                                       ; preds = %get_class_from_type.exit
  %148 = load ptr, ptr %132, align 8
  %memberidx17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %148, i64 0, i32 1
  %149 = load ptr, ptr %memberidx17, align 8
  %150 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %150, ptr noundef nonnull align 8 dereferenceable(6) @248, i64 6, i1 false)
  %151 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %151, align 8
  %memberidx.i.i153 = getelementptr inbounds %string, ptr %151, i64 0, i32 1
  store ptr %150, ptr %memberidx.i.i153, align 8
  %memberidx1.i.i154 = getelementptr inbounds %string, ptr %151, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i154, align 4
  %memberidx2.i.i155 = getelementptr inbounds %string, ptr %151, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i155, align 4
  call void %149(ptr nonnull %132, ptr nonnull %151)
  %152 = load ptr, ptr %132, align 8
  %memberidx18 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %152, i64 0, i32 3
  %153 = load ptr, ptr %memberidx18, align 8
  %154 = call ptr %153(ptr nonnull %132)
  %memberidx.i147 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %155 = load ptr, ptr %memberidx.i147, align 8
  %156 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %154)
  %memberidx.i221 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %155, i64 0, i32 1
  %157 = load i64, ptr %memberidx.i221, align 4
  %158 = urem i64 %156, %157
  %159 = load ptr, ptr %155, align 8
  %160 = getelementptr inbounds ptr, ptr %159, i64 %158
  %161 = load ptr, ptr %160, align 8
  %.not.i222 = icmp eq ptr %161, null
  br i1 %.not.i222, label %if.entry.i149, label %while.entry.i227.preheader

while.entry.i227.preheader:                       ; preds = %if.entry14
  %memberidx1.i.i225 = getelementptr inbounds %string, ptr %154, i64 0, i32 2
  %memberidx3.i.i229 = getelementptr inbounds %string, ptr %154, i64 0, i32 1
  br label %while.entry.i227

while.entry.i227:                                 ; preds = %while.entry.i227.preheader, %else.i237
  %162 = phi ptr [ %172, %else.i237 ], [ %159, %while.entry.i227.preheader ]
  %163 = phi i64 [ %173, %else.i237 ], [ %157, %while.entry.i227.preheader ]
  %164 = phi ptr [ %177, %else.i237 ], [ %161, %while.entry.i227.preheader ]
  %hash.0.i223 = phi i64 [ %175, %else.i237 ], [ %158, %while.entry.i227.preheader ]
  %165 = load ptr, ptr %164, align 8
  %memberidx.i.i224 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i.i224, align 4
  %167 = load i64, ptr %memberidx1.i.i225, align 4
  %.not.i.i226 = icmp eq i64 %166, %167
  br i1 %.not.i.i226, label %ifend.i.i230, label %else.i237

ifend.i.i230:                                     ; preds = %while.entry.i227
  %memberidx2.i.i228 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  %168 = load ptr, ptr %memberidx2.i.i228, align 8
  %169 = load ptr, ptr %memberidx3.i.i229, align 8
  %170 = call i64 @memcmp(ptr %168, ptr %169, i64 %166)
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %while.end.i235, label %ifend.i.i230.else.i237_crit_edge

ifend.i.i230.else.i237_crit_edge:                 ; preds = %ifend.i.i230
  %.pre381 = load i64, ptr %memberidx.i221, align 4
  %.pre382 = load ptr, ptr %155, align 8
  br label %else.i237

while.end.i235:                                   ; preds = %ifend.i.i230
  %.pre383.pre = load ptr, ptr %155, align 8
  %.phi.trans.insert384.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre383.pre, i64 %hash.0.i223
  %.pre385.pre = load ptr, ptr %.phi.trans.insert384.phi.trans.insert, align 8
  %.not25.i234 = icmp eq ptr %.pre385.pre, null
  br i1 %.not25.i234, label %if.entry.i149, label %Map_string_LLVMValueRef____getitem__.exit241

else.i237:                                        ; preds = %ifend.i.i230.else.i237_crit_edge, %while.entry.i227
  %172 = phi ptr [ %.pre382, %ifend.i.i230.else.i237_crit_edge ], [ %162, %while.entry.i227 ]
  %173 = phi i64 [ %.pre381, %ifend.i.i230.else.i237_crit_edge ], [ %163, %while.entry.i227 ]
  %174 = add nuw i64 %hash.0.i223, 1
  %175 = urem i64 %174, %173
  %176 = getelementptr inbounds ptr, ptr %172, i64 %175
  %177 = load ptr, ptr %176, align 8
  %.not26.i236 = icmp eq ptr %177, null
  br i1 %.not26.i236, label %if.entry.i149, label %while.entry.i227

Map_string_LLVMValueRef____getitem__.exit241:     ; preds = %while.end.i235
  %memberidx11.i239 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre385.pre, i64 0, i32 1
  %178 = load ptr, ptr %memberidx11.i239, align 8
  %179 = icmp eq ptr %178, null
  br i1 %179, label %if.entry.i149, label %common.ret

if.entry.i149:                                    ; preds = %else.i237, %if.entry14, %while.end.i235, %Map_string_LLVMValueRef____getitem__.exit241
  %180 = load ptr, ptr %154, align 8
  %memberidx1.i148 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %180, i64 0, i32 5
  %181 = load ptr, ptr %memberidx1.i148, align 8
  %182 = call ptr %181(ptr nonnull %154)
  %183 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %182, ptr nonnull @80)
  %184 = load ptr, ptr %memberidx.i147, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %184, ptr nonnull %154, ptr %183)
  br label %common.ret

ifend16:                                          ; preds = %get_class_from_type.exit
  %memberidx19 = getelementptr inbounds %Class, ptr %common.ret.op.i297, i64 0, i32 6
  %185 = load ptr, ptr %memberidx19, align 8
  %memberidx20 = getelementptr inbounds %Map_string_PropId_, ptr %185, i64 0, i32 2
  %186 = load i64, ptr %memberidx20, align 4
  %187 = alloca ptr, i64 %186, align 8
  %188 = call ptr @malloc(i32 25)
  %189 = load ptr, ptr %185, align 8
  %memberidx1.i143 = getelementptr inbounds %Map_string_PropId_, ptr %185, i64 0, i32 1
  %190 = load i64, ptr %memberidx1.i143, align 4
  %191 = load i64, ptr %memberidx20, align 4
  store i1 false, ptr %188, align 1
  %memberidx1.i.i145 = getelementptr inbounds %MapIterator_string_PropId_, ptr %188, i64 0, i32 1
  store ptr %189, ptr %memberidx1.i.i145, align 8
  %memberidx2.i.i146 = getelementptr inbounds %MapIterator_string_PropId_, ptr %188, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %188, i64 0, i32 3
  store i64 %191, ptr %memberidx3.i.i, align 4
  %192 = add nsw i64 %190, -1
  store i64 %192, ptr %memberidx2.i.i146, align 4
  %193 = icmp sgt i64 %190, 0
  br i1 %193, label %while.entry.i138, label %MapIterator_string_PropId__next.exit142

while.entry.i138:                                 ; preds = %ifend16, %ifend.i141
  %194 = phi i64 [ %197, %ifend.i141 ], [ %192, %ifend16 ]
  %195 = phi ptr [ %incdec.ptr.i136, %ifend.i141 ], [ %189, %ifend16 ]
  %incdec.ptr.i136 = getelementptr inbounds ptr, ptr %195, i64 1
  %196 = load ptr, ptr %195, align 8
  %.not.i137 = icmp eq ptr %196, null
  br i1 %.not.i137, label %ifend.i141, label %MapIterator_string_PropId__next.exit142.loopexit

ifend.i141:                                       ; preds = %while.entry.i138
  %197 = add nsw i64 %194, -1
  store i64 %197, ptr %memberidx2.i.i146, align 4
  %198 = icmp sgt i64 %194, 0
  br i1 %198, label %while.entry.i138, label %MapIterator_string_PropId__next.exit142.loopexit

MapIterator_string_PropId__next.exit142.loopexit: ; preds = %ifend.i141, %while.entry.i138
  %199 = phi i64 [ %197, %ifend.i141 ], [ %194, %while.entry.i138 ]
  store ptr %incdec.ptr.i136, ptr %memberidx1.i.i145, align 8
  br label %MapIterator_string_PropId__next.exit142

MapIterator_string_PropId__next.exit142:          ; preds = %MapIterator_string_PropId__next.exit142.loopexit, %ifend16
  %200 = phi i64 [ %199, %MapIterator_string_PropId__next.exit142.loopexit ], [ %192, %ifend16 ]
  %memberidx1.i.i145.promoted341 = phi ptr [ %incdec.ptr.i136, %MapIterator_string_PropId__next.exit142.loopexit ], [ %189, %ifend16 ]
  %storemerge345 = icmp slt i64 %191, 1
  br i1 %storemerge345, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit142
  %201 = add nuw i64 %5, 1
  %memberidx.i109 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %memberidx1.i110 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %memberidx2.i.i113 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit
  %202 = phi i64 [ %200, %for.body.lr.ph ], [ %293, %MapIterator_string_PropId__next.exit ]
  %storemerge336350.in = phi i64 [ %191, %for.body.lr.ph ], [ %storemerge336350, %MapIterator_string_PropId__next.exit ]
  %idx.0349 = phi i64 [ 0, %for.body.lr.ph ], [ %271, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i.lcssa343348 = phi ptr [ %memberidx1.i.i145.promoted341, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa342, %MapIterator_string_PropId__next.exit ]
  %storemerge336350 = add nsw i64 %storemerge336350.in, -1
  %field_entry.0351.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa343348, i64 -1
  %field_entry.0351 = load ptr, ptr %field_entry.0351.in, align 8
  %203 = load ptr, ptr %memberidx, align 8
  %memberidx24 = getelementptr inbounds %MapEntry_string_PropId_, ptr %field_entry.0351, i64 0, i32 1
  %204 = load ptr, ptr %memberidx24, align 8
  %memberidx.i.i128 = getelementptr inbounds %PropId, ptr %204, i64 0, i32 1
  %205 = load ptr, ptr %memberidx.i.i128, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %203, i64 0, i32 1
  %206 = load ptr, ptr %memberidx.i.i.i, align 8
  %207 = load i64, ptr %205, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %206, i64 0, i32 1
  %208 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %209 = getelementptr inbounds ptr, ptr %208, i64 %207
  %210 = load ptr, ptr %209, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %210, i64 0, i32 3
  %211 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %205, i64 0, i32 2
  %212 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %211, i64 0, i32 1
  %213 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  %215 = load ptr, ptr %214, align 8
  %216 = load i64, ptr %204, align 4
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %if.entry.i131, label %ifend.i133

if.entry.i131:                                    ; preds = %for.body
  %memberidx1.i129 = getelementptr inbounds %Class, ptr %215, i64 0, i32 5
  %218 = load ptr, ptr %memberidx1.i129, align 8
  %memberidx2.i130 = getelementptr inbounds %PropId, ptr %204, i64 0, i32 2
  %219 = load i64, ptr %memberidx2.i130, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %218, i64 0, i32 1
  %220 = load ptr, ptr %memberidx.i12.i, align 8
  %221 = getelementptr inbounds ptr, ptr %220, i64 %219
  %222 = load ptr, ptr %221, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %222, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i133:                                       ; preds = %for.body
  %memberidx4.i132 = getelementptr inbounds %Class, ptr %215, i64 0, i32 4
  %223 = load ptr, ptr %memberidx4.i132, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %204, i64 0, i32 2
  %224 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %223, i64 0, i32 1
  %225 = load ptr, ptr %memberidx.i11.i, align 8
  %226 = getelementptr inbounds ptr, ptr %225, i64 %224
  %227 = load ptr, ptr %226, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %227, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i131, %ifend.i133
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i131 ], [ %memberidx6.i, %ifend.i133 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %228 = load ptr, ptr %field_entry.0351, align 8
  %229 = call fastcc ptr @CodeGen_get_member_with_name(ptr nonnull %0, ptr %1, ptr %2, ptr nonnull %3, ptr %228, ptr null)
  %230 = call fastcc ptr @CodeGen_get_string_val(ptr nonnull %0, ptr %1, ptr %229, ptr %common.ret.op.i, ptr %4, i64 %201)
  %231 = load i64, ptr %common.ret.op.i, align 4
  %232 = icmp eq i64 %231, 20
  br i1 %232, label %if.entry.i295, label %is_object.exit

if.entry.i295:                                    ; preds = %get_class_prop_type.exit, %if.entry.i295
  %.tr5.i = phi ptr [ %233, %if.entry.i295 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i294 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %233 = load ptr, ptr %memberidx1.i294, align 8
  %234 = load i64, ptr %233, align 4
  %235 = icmp eq i64 %234, 20
  br i1 %235, label %if.entry.i295, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i295, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %231, %get_class_prop_type.exit ], [ %234, %if.entry.i295 ]
  %236 = icmp eq i64 %.lcssa.i, 11
  %237 = call ptr @LLVMTypeOf(ptr %230)
  %238 = call i64 @LLVMGetTypeKind(ptr %237)
  %239 = icmp ne i64 %238, 12
  %240 = call i1 @LLVMIsGlobalConstant(ptr %230)
  %241 = or i1 %236, %240
  %242 = or i1 %239, %241
  br i1 %242, label %ifend28, label %if.entry26

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit142
  tail call void @free(ptr nonnull %188)
  %243 = load ptr, ptr %132, align 8
  %memberidx33 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %243, i64 0, i32 1
  %244 = load ptr, ptr %memberidx33, align 8
  %245 = call ptr @malloc(i32 1)
  store i8 125, ptr %245, align 8
  %246 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %246, align 8
  %memberidx.i.i125 = getelementptr inbounds %string, ptr %246, i64 0, i32 1
  store ptr %245, ptr %memberidx.i.i125, align 8
  %memberidx1.i.i126 = getelementptr inbounds %string, ptr %246, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i126, align 4
  %memberidx2.i.i127 = getelementptr inbounds %string, ptr %246, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i127, align 4
  call void %244(ptr nonnull %132, ptr nonnull %246)
  %247 = load ptr, ptr %132, align 8
  %memberidx34 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %247, i64 0, i32 3
  %248 = load ptr, ptr %memberidx34, align 8
  %249 = call ptr %248(ptr nonnull %132)
  %250 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr %249, ptr nonnull %187, i64 %186, ptr null)
  %memberidx.i116 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %251 = load i64, ptr %memberidx.i116, align 4
  %memberidx1.i117 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %252 = load i64, ptr %memberidx1.i117, align 4
  %.not.i118 = icmp slt i64 %251, %252
  br i1 %.not.i118, label %for.end.Array_LLVMValueRef____sl__.exit124_crit_edge, label %if.entry.i121

for.end.Array_LLVMValueRef____sl__.exit124_crit_edge: ; preds = %for.end
  %memberidx4.i122.phi.trans.insert = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %.pre380 = load ptr, ptr %memberidx4.i122.phi.trans.insert, align 8
  br label %Array_LLVMValueRef____sl__.exit124

if.entry.i121:                                    ; preds = %for.end
  %253 = shl nuw i64 %252, 1
  store i64 %253, ptr %memberidx1.i117, align 4
  %memberidx2.i.i120 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %254 = load ptr, ptr %memberidx2.i.i120, align 8
  %255 = shl i64 %252, 4
  %256 = call ptr @realloc(ptr %254, i64 %255)
  store ptr %256, ptr %memberidx2.i.i120, align 8
  %.pre379 = load i64, ptr %memberidx.i116, align 4
  br label %Array_LLVMValueRef____sl__.exit124

Array_LLVMValueRef____sl__.exit124:               ; preds = %for.end.Array_LLVMValueRef____sl__.exit124_crit_edge, %if.entry.i121
  %257 = phi ptr [ %.pre380, %for.end.Array_LLVMValueRef____sl__.exit124_crit_edge ], [ %256, %if.entry.i121 ]
  %258 = phi i64 [ %251, %for.end.Array_LLVMValueRef____sl__.exit124_crit_edge ], [ %.pre379, %if.entry.i121 ]
  %259 = add nsw i64 %258, 1
  store i64 %259, ptr %memberidx.i116, align 4
  %260 = getelementptr inbounds ptr, ptr %257, i64 %258
  store ptr %250, ptr %260, align 8
  br label %common.ret

if.entry26:                                       ; preds = %is_object.exit
  %261 = load i64, ptr %memberidx.i109, align 4
  %262 = load i64, ptr %memberidx1.i110, align 4
  %.not.i111 = icmp slt i64 %261, %262
  br i1 %.not.i111, label %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge, label %if.entry.i114

if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge: ; preds = %if.entry26
  %.pre378 = load ptr, ptr %memberidx2.i.i113, align 8
  br label %Array_LLVMValueRef____sl__.exit

if.entry.i114:                                    ; preds = %if.entry26
  %263 = shl nuw i64 %262, 1
  store i64 %263, ptr %memberidx1.i110, align 4
  %264 = load ptr, ptr %memberidx2.i.i113, align 8
  %265 = shl i64 %262, 4
  %266 = call ptr @realloc(ptr %264, i64 %265)
  store ptr %266, ptr %memberidx2.i.i113, align 8
  %.pre377 = load i64, ptr %memberidx.i109, align 4
  br label %Array_LLVMValueRef____sl__.exit

Array_LLVMValueRef____sl__.exit:                  ; preds = %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge, %if.entry.i114
  %267 = phi ptr [ %.pre378, %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %266, %if.entry.i114 ]
  %268 = phi i64 [ %261, %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %.pre377, %if.entry.i114 ]
  %269 = add nsw i64 %268, 1
  store i64 %269, ptr %memberidx.i109, align 4
  %270 = getelementptr inbounds ptr, ptr %267, i64 %268
  store ptr %230, ptr %270, align 8
  br label %ifend28

ifend28:                                          ; preds = %is_object.exit, %Array_LLVMValueRef____sl__.exit
  %271 = add nuw nsw i64 %idx.0349, 1
  %272 = getelementptr inbounds ptr, ptr %187, i64 %idx.0349
  store ptr %230, ptr %272, align 8
  %273 = load ptr, ptr %132, align 8
  %memberidx29 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %273, i64 0, i32 1
  %274 = load ptr, ptr %memberidx29, align 8
  %275 = load ptr, ptr %field_entry.0351, align 8
  %276 = load ptr, ptr %275, align 8
  %memberidx31 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %276, i64 0, i32 5
  %277 = load ptr, ptr %memberidx31, align 8
  %278 = call ptr %277(ptr nonnull %275)
  %279 = call fastcc ptr @get_format_from_type(ptr nonnull %common.ret.op.i)
  %280 = load ptr, ptr %279, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %280, i64 0, i32 5
  %281 = load ptr, ptr %memberidx32, align 8
  %282 = call ptr %281(ptr nonnull %279)
  %283 = alloca ptr, align 8
  %284 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %283, ptr nonnull @252, ptr %278, ptr %282)
  %285 = load ptr, ptr %283, align 8
  %286 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %286, align 8
  %memberidx.i106 = getelementptr inbounds %string, ptr %286, i64 0, i32 1
  store ptr %285, ptr %memberidx.i106, align 8
  %memberidx1.i107 = getelementptr inbounds %string, ptr %286, i64 0, i32 2
  store i64 %284, ptr %memberidx1.i107, align 4
  %memberidx2.i108 = getelementptr inbounds %string, ptr %286, i64 0, i32 3
  store i64 %284, ptr %memberidx2.i108, align 4
  tail call void @free(ptr %278)
  tail call void @free(ptr %282)
  call void %274(ptr nonnull %132, ptr nonnull %286)
  %287 = add nsw i64 %202, -1
  store i64 %287, ptr %memberidx2.i.i146, align 4
  %288 = icmp sgt i64 %202, 0
  br i1 %288, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %ifend28, %ifend.i
  %289 = phi i64 [ %292, %ifend.i ], [ %287, %ifend28 ]
  %290 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa343348, %ifend28 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %290, i64 1
  %291 = load ptr, ptr %290, align 8
  %.not.i = icmp eq ptr %291, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %292 = add nsw i64 %289, -1
  store i64 %292, ptr %memberidx2.i.i146, align 4
  %.not = icmp eq i64 %289, 0
  br i1 %.not, label %MapIterator_string_PropId__next.exit, label %while.entry.i

MapIterator_string_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend28
  %293 = phi i64 [ %287, %ifend28 ], [ %289, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa342 = phi ptr [ %incdec.ptr.i.lcssa343348, %ifend28 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge336350.in, 2
  br i1 %storemerge, label %for.end, label %for.body

if.entry35:                                       ; preds = %ifend4
  %294 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %294, ptr noundef nonnull align 8 dereferenceable(10) @253, i64 10, i1 false)
  %295 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %295, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %295, i64 0, i32 1
  store ptr %294, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %295, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %295, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %296 = load ptr, ptr %memberidx.i, align 8
  %297 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %295)
  %memberidx.i209 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %296, i64 0, i32 1
  %298 = load i64, ptr %memberidx.i209, align 4
  %299 = urem i64 %297, %298
  %300 = load ptr, ptr %296, align 8
  %301 = getelementptr inbounds ptr, ptr %300, i64 %299
  %302 = load ptr, ptr %301, align 8
  %.not.i210 = icmp eq ptr %302, null
  br i1 %.not.i210, label %if.entry.i, label %while.entry.i214

while.entry.i214:                                 ; preds = %if.entry35, %else.i
  %303 = phi ptr [ %313, %else.i ], [ %300, %if.entry35 ]
  %304 = phi i64 [ %314, %else.i ], [ %298, %if.entry35 ]
  %305 = phi ptr [ %318, %else.i ], [ %302, %if.entry35 ]
  %hash.0.i = phi i64 [ %316, %else.i ], [ %299, %if.entry35 ]
  %306 = load ptr, ptr %305, align 8
  %memberidx.i.i211 = getelementptr inbounds %string, ptr %306, i64 0, i32 2
  %307 = load i64, ptr %memberidx.i.i211, align 4
  %308 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i213 = icmp eq i64 %307, %308
  br i1 %.not.i.i213, label %ifend.i.i217, label %else.i

ifend.i.i217:                                     ; preds = %while.entry.i214
  %memberidx2.i.i215 = getelementptr inbounds %string, ptr %306, i64 0, i32 1
  %309 = load ptr, ptr %memberidx2.i.i215, align 8
  %310 = load ptr, ptr %memberidx.i.i, align 8
  %311 = tail call i64 @memcmp(ptr %309, ptr %310, i64 %307)
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %while.end.i, label %ifend.i.i217.else.i_crit_edge

ifend.i.i217.else.i_crit_edge:                    ; preds = %ifend.i.i217
  %.pre371 = load i64, ptr %memberidx.i209, align 4
  %.pre372 = load ptr, ptr %296, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i217
  %.pre373.pre = load ptr, ptr %296, align 8
  %.phi.trans.insert374.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre373.pre, i64 %hash.0.i
  %.pre375.pre = load ptr, ptr %.phi.trans.insert374.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre375.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i217.else.i_crit_edge, %while.entry.i214
  %313 = phi ptr [ %.pre372, %ifend.i.i217.else.i_crit_edge ], [ %303, %while.entry.i214 ]
  %314 = phi i64 [ %.pre371, %ifend.i.i217.else.i_crit_edge ], [ %304, %while.entry.i214 ]
  %315 = add nuw i64 %hash.0.i, 1
  %316 = urem i64 %315, %314
  %317 = getelementptr inbounds ptr, ptr %313, i64 %316
  %318 = load ptr, ptr %317, align 8
  %.not26.i = icmp eq ptr %318, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i214

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre375.pre, i64 0, i32 1
  %319 = load ptr, ptr %memberidx11.i, align 8
  %320 = icmp eq ptr %319, null
  br i1 %320, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %else.i, %if.entry35, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %321 = load ptr, ptr %295, align 8
  %memberidx1.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %321, i64 0, i32 5
  %322 = load ptr, ptr %memberidx1.i, align 8
  %323 = tail call ptr %322(ptr nonnull %295)
  %324 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %323, ptr nonnull @80)
  %325 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %325, ptr nonnull %295, ptr %324)
  br label %common.ret

if.entry39:                                       ; preds = %ifend4
  %memberidx42 = getelementptr inbounds %EnumType, ptr %3, i64 0, i32 1
  %326 = load ptr, ptr %memberidx42, align 8
  %327 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %326)
  %.not.i200 = icmp eq ptr %327, null
  br i1 %.not.i200, label %ifend.i208, label %CodeGen_get_or_codegen_enum_from_typeid.exit

ifend.i208:                                       ; preds = %if.entry39
  %memberidx.i203 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %328 = load ptr, ptr %memberidx.i203, align 8
  %memberidx.i.i204 = getelementptr inbounds %Program, ptr %328, i64 0, i32 1
  %329 = load ptr, ptr %memberidx.i.i204, align 8
  %330 = load i64, ptr %326, align 4
  %memberidx.i.i.i205 = getelementptr inbounds %Array_Module_, ptr %329, i64 0, i32 1
  %331 = load ptr, ptr %memberidx.i.i.i205, align 8
  %332 = getelementptr inbounds ptr, ptr %331, i64 %330
  %333 = load ptr, ptr %332, align 8
  %memberidx2.i.i206 = getelementptr inbounds %Module, ptr %333, i64 0, i32 6
  %334 = load ptr, ptr %memberidx2.i.i206, align 8
  %memberidx3.i.i207 = getelementptr inbounds %TypeId, ptr %326, i64 0, i32 2
  %335 = load i64, ptr %memberidx3.i.i207, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Enum_, ptr %334, i64 0, i32 1
  %336 = load ptr, ptr %memberidx.i5.i.i, align 8
  %337 = getelementptr inbounds ptr, ptr %336, i64 %335
  %338 = load ptr, ptr %337, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %338)
  %339 = load ptr, ptr %338, align 8
  %340 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %339)
  br label %CodeGen_get_or_codegen_enum_from_typeid.exit

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry39, %ifend.i208
  %common.ret.op.i201 = phi ptr [ %340, %ifend.i208 ], [ %327, %if.entry39 ]
  %memberidx43 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i201, i64 0, i32 2
  %341 = load ptr, ptr %memberidx43, align 8
  store ptr %2, ptr %indices, align 8
  %342 = tail call ptr @LLVMTypeOf(ptr %341)
  %343 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %342, ptr %341, ptr nonnull %indices, i64 1, ptr nonnull @80)
  %344 = call ptr @LLVMTypeOf(ptr %343)
  %345 = call ptr @LLVMBuildLoad2(ptr %1, ptr %344, ptr %343, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_expr_mem(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %3)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %6, ptr noundef nonnull align 8 dereferenceable(45) @258, i64 45, i1 false)
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 45, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 45, ptr %memberidx2.i.i, align 4
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %10 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %11 = tail call ptr %10(ptr nonnull %9)
  %12 = load i64, ptr %memberidx1.i.i.i, align 4
  %13 = tail call i64 @write(i64 1, ptr %11, i64 %12)
  %14 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %14)
  tail call void @free(ptr %9)
  %15 = load ptr, ptr %7, align 8
  %memberidx.i.i.i2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx.i.i.i2, align 8
  %17 = tail call ptr %16(ptr nonnull %7)
  %18 = load i64, ptr %memberidx1.i.i, align 4
  %19 = tail call i64 @write(i64 1, ptr %17, i64 %18)
  %20 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %21 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %21)
  tail call void @free(ptr %7)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  ret ptr %4
}

define internal fastcc ptr @CodeGen_get_index_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %indices_1 = alloca [1 x ptr], align 8
  %indices = alloca [2 x ptr], align 8
  %indices1 = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx2 = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 4
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 13
  br i1 %9, label %true_block, label %false_block

true_block:                                       ; preds = %3
  %memberidx4 = getelementptr inbounds %PointerType, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  br label %end

false_block:                                      ; preds = %3
  %12 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %7, i1 true)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %11, %true_block ], [ %12, %false_block ]
  %13 = load i64, ptr %7, align 4
  switch i64 %13, label %ifend10 [
    i64 14, label %if.entry
    i64 15, label %if.entry8
  ]

common.ret:                                       ; preds = %ifend10, %CodeGen_get_expr_mem.exit, %CodeGen_get_expr_mem.exit48
  %common.ret.op = phi ptr [ %23, %CodeGen_get_expr_mem.exit48 ], [ %34, %CodeGen_get_expr_mem.exit ], [ %37, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %end
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %indices, align 8
  %16 = getelementptr inbounds ptr, ptr %indices, i64 1
  store ptr %5, ptr %16, align 8
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx.i40 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i40, align 4
  switch i64 %18, label %ifend8.i47 [
    i64 8, label %if.entry.i42
    i64 14, label %if.entry2.i44
    i64 13, label %if.entry6.i46
  ]

if.entry.i42:                                     ; preds = %if.entry
  %19 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry2.i44:                                    ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry6.i46:                                    ; preds = %if.entry
  %21 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %17, ptr null)
  br label %CodeGen_get_expr_mem.exit48

ifend8.i47:                                       ; preds = %if.entry
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

CodeGen_get_expr_mem.exit48:                      ; preds = %if.entry.i42, %if.entry2.i44, %if.entry6.i46, %ifend8.i47
  %common.ret.op.i41 = phi ptr [ %19, %if.entry.i42 ], [ %20, %if.entry2.i44 ], [ %21, %if.entry6.i46 ], [ %22, %ifend8.i47 ]
  %23 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i41, ptr nonnull %indices, i64 2, ptr nonnull @80)
  br label %common.ret

if.entry8:                                        ; preds = %end
  %24 = tail call ptr @LLVMInt32Type()
  %25 = tail call ptr @LLVMConstInt(ptr %24, i64 0, i1 false)
  store ptr %25, ptr %indices1, align 8
  %26 = getelementptr inbounds ptr, ptr %indices1, i64 1
  %27 = tail call ptr @LLVMConstIntCast(ptr %5, ptr %24, i1 false)
  store ptr %27, ptr %26, align 8
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i, align 4
  switch i64 %29, label %ifend8.i [
    i64 8, label %if.entry.i
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry8
  %30 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry8
  %31 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry8
  %32 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %28, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry8
  %33 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %30, %if.entry.i ], [ %31, %if.entry2.i ], [ %32, %if.entry6.i ], [ %33, %ifend8.i ]
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i, ptr nonnull %indices1, i64 2, ptr nonnull @80)
  br label %common.ret

ifend10:                                          ; preds = %end
  store ptr %5, ptr %indices_1, align 8
  %35 = load ptr, ptr %memberidx2, align 8
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %35)
  %37 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %36, ptr nonnull %indices_1, i64 1, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %indices_buffer = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %PropId, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %.not.i83 = icmp eq ptr %9, null
  br i1 %.not.i83, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %4
  %memberidx.i85 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx.i85, align 8
  %memberidx.i.i86 = getelementptr inbounds %Program, ptr %10, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i86, align 8
  %12 = load i64, ptr %8, align 4
  %memberidx.i.i.i87 = getelementptr inbounds %Array_Module_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i87, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i88 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i88, align 8
  %memberidx3.i.i89 = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i89, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i5.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %20)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %20)
  %21 = load ptr, ptr %20, align 8
  %22 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %21)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %4, %ifend.i
  %common.ret.op.i84 = phi ptr [ %22, %ifend.i ], [ %9, %4 ]
  %23 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %25 = load i64, ptr %24, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %25, i64 %26, i64 %27)
  %29 = load ptr, ptr %5, align 8
  %30 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %31 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %32 = call ptr %31(ptr nonnull %30)
  %33 = load i64, ptr %23, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 2
  %34 = load i64, ptr %memberidx3.i, align 4
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %32, i64 %33, i64 %34)
  %36 = load ptr, ptr %6, align 8
  %37 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %32)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %38 = load ptr, ptr %common.ret.op.i84, align 8
  %memberidx4 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i84, i64 0, i32 3
  %39 = load ptr, ptr %memberidx4, align 8
  %40 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %37)
  %memberidx.i38 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %39, i64 0, i32 1
  %41 = load i64, ptr %memberidx.i38, align 4
  %42 = urem i64 %40, %41
  %43 = load ptr, ptr %39, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  %.not.i = icmp eq ptr %45, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i
  %46 = phi ptr [ %56, %else.i ], [ %43, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %47 = phi i64 [ %57, %else.i ], [ %41, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %48 = phi ptr [ %61, %else.i ], [ %45, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %42, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i39 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i39, align 4
  %51 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %50, %51
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i41 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i41, align 8
  %53 = load ptr, ptr %memberidx.i.i, align 8
  %54 = call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i38, align 4
  %.pre99 = load ptr, ptr %39, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre100.pre = load ptr, ptr %39, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre100.pre, i64 %hash.0.i
  %.pre101.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre101.pre, null
  br i1 %.not25.i, label %ifend, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre99, %ifend.i.i.else.i_crit_edge ], [ %46, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %47, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre101.pre, i64 0, i32 1
  %62 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %62, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit, %ifend12
  %common.ret.op = phi ptr [ %134, %ifend12 ], [ %62, %Map_string_LLVMValueRef____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %63 = icmp eq ptr %3, null
  br i1 %63, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend
  %memberidx8 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %64 = load ptr, ptr %memberidx8, align 8
  %65 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %64)
  br label %ifend7

ifend7:                                           ; preds = %ifend, %if.entry5
  %ptr.0 = phi ptr [ %65, %if.entry5 ], [ %3, %ifend ]
  %66 = call ptr @LLVMInt32Type()
  %67 = call ptr @LLVMConstInt(ptr %66, i64 0, i1 false)
  store ptr %67, ptr %indices_buffer, align 8
  %68 = getelementptr inbounds ptr, ptr %indices_buffer, i64 1
  store ptr null, ptr %68, align 8
  %memberidx9 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %69 = load ptr, ptr %memberidx9, align 8
  %70 = load i64, ptr %69, align 4
  %71 = icmp eq i64 %70, 16
  br i1 %71, label %else11, label %if.entry10

if.entry10:                                       ; preds = %ifend7
  %memberidx13 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i84, i64 0, i32 5
  %72 = load ptr, ptr %memberidx13, align 8
  %73 = icmp ne ptr %72, null
  %. = zext i1 %73 to i64
  %74 = call ptr @LLVMInt32Type()
  %memberidx14 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i84, i64 0, i32 2
  %75 = load ptr, ptr %memberidx14, align 8
  %76 = call fastcc i64 @Map_string_uint__hash_fnc(ptr nonnull %37)
  %memberidx.i42 = getelementptr inbounds %Map_string_uint_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i42, align 4
  %78 = urem i64 %76, %77
  %79 = load ptr, ptr %75, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %.not.i43 = icmp eq ptr %81, null
  br i1 %.not.i43, label %Map_string_uint____getitem__.exit, label %while.entry.i48

while.entry.i48:                                  ; preds = %if.entry10, %else.i58
  %82 = phi ptr [ %92, %else.i58 ], [ %79, %if.entry10 ]
  %83 = phi i64 [ %93, %else.i58 ], [ %77, %if.entry10 ]
  %84 = phi ptr [ %97, %else.i58 ], [ %81, %if.entry10 ]
  %hash.0.i44 = phi i64 [ %95, %else.i58 ], [ %78, %if.entry10 ]
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i45 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i45, align 4
  %87 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i47 = icmp eq i64 %86, %87
  br i1 %.not.i.i47, label %ifend.i.i51, label %else.i58

ifend.i.i51:                                      ; preds = %while.entry.i48
  %memberidx2.i.i49 = getelementptr inbounds %string, ptr %85, i64 0, i32 1
  %88 = load ptr, ptr %memberidx2.i.i49, align 8
  %89 = load ptr, ptr %memberidx.i.i, align 8
  %90 = call i64 @memcmp(ptr %88, ptr %89, i64 %86)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %while.end.i56, label %ifend.i.i51.else.i58_crit_edge

ifend.i.i51.else.i58_crit_edge:                   ; preds = %ifend.i.i51
  %.pre102 = load i64, ptr %memberidx.i42, align 4
  %.pre103 = load ptr, ptr %75, align 8
  br label %else.i58

while.end.i56:                                    ; preds = %ifend.i.i51
  %.pre104.pre = load ptr, ptr %75, align 8
  %.phi.trans.insert105.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre104.pre, i64 %hash.0.i44
  %.pre106.pre = load ptr, ptr %.phi.trans.insert105.phi.trans.insert, align 8
  %.not25.i55 = icmp eq ptr %.pre106.pre, null
  br i1 %.not25.i55, label %Map_string_uint____getitem__.exit, label %if.entry7.i61

else.i58:                                         ; preds = %ifend.i.i51.else.i58_crit_edge, %while.entry.i48
  %92 = phi ptr [ %.pre103, %ifend.i.i51.else.i58_crit_edge ], [ %82, %while.entry.i48 ]
  %93 = phi i64 [ %.pre102, %ifend.i.i51.else.i58_crit_edge ], [ %83, %while.entry.i48 ]
  %94 = add nuw i64 %hash.0.i44, 1
  %95 = urem i64 %94, %93
  %96 = getelementptr inbounds ptr, ptr %92, i64 %95
  %97 = load ptr, ptr %96, align 8
  %.not26.i57 = icmp eq ptr %97, null
  br i1 %.not26.i57, label %Map_string_uint____getitem__.exit, label %while.entry.i48

if.entry7.i61:                                    ; preds = %while.end.i56
  %memberidx11.i60 = getelementptr inbounds %MapEntry_string_uint_, ptr %.pre106.pre, i64 0, i32 1
  %98 = load i64, ptr %memberidx11.i60, align 4
  br label %Map_string_uint____getitem__.exit

Map_string_uint____getitem__.exit:                ; preds = %else.i58, %if.entry10, %while.end.i56, %if.entry7.i61
  %common.ret.op.i59 = phi i64 [ %98, %if.entry7.i61 ], [ 0, %while.end.i56 ], [ 0, %if.entry10 ], [ 0, %else.i58 ]
  %99 = add nuw i64 %common.ret.op.i59, %.
  %100 = call ptr @LLVMConstInt(ptr %74, i64 %99, i1 false)
  store ptr %100, ptr %68, align 8
  br label %ifend12

else11:                                           ; preds = %ifend7
  %101 = call ptr @LLVMInt32Type()
  %102 = call ptr @LLVMConstInt(ptr %101, i64 0, i1 false)
  store ptr %102, ptr %68, align 8
  %103 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %38, ptr %ptr.0, ptr nonnull %indices_buffer, i64 2, ptr nonnull @80)
  %memberidx15 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i84, i64 0, i32 5
  %104 = load ptr, ptr %memberidx15, align 8
  %105 = call ptr @LLVMPointerType(ptr %104, i64 0)
  %106 = call ptr @LLVMBuildLoad2(ptr %1, ptr %105, ptr %103, ptr nonnull @80)
  %107 = call ptr @LLVMInt32Type()
  %memberidx16 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i84, i64 0, i32 1
  %108 = load ptr, ptr %memberidx16, align 8
  %109 = call fastcc i64 @Map_string_uint__hash_fnc(ptr nonnull %37)
  %memberidx.i62 = getelementptr inbounds %Map_string_uint_, ptr %108, i64 0, i32 1
  %110 = load i64, ptr %memberidx.i62, align 4
  %111 = urem i64 %109, %110
  %112 = load ptr, ptr %108, align 8
  %113 = getelementptr inbounds ptr, ptr %112, i64 %111
  %114 = load ptr, ptr %113, align 8
  %.not.i63 = icmp eq ptr %114, null
  br i1 %.not.i63, label %Map_string_uint____getitem__.exit82, label %while.entry.i68

while.entry.i68:                                  ; preds = %else11, %else.i78
  %115 = phi ptr [ %125, %else.i78 ], [ %112, %else11 ]
  %116 = phi i64 [ %126, %else.i78 ], [ %110, %else11 ]
  %117 = phi ptr [ %130, %else.i78 ], [ %114, %else11 ]
  %hash.0.i64 = phi i64 [ %128, %else.i78 ], [ %111, %else11 ]
  %118 = load ptr, ptr %117, align 8
  %memberidx.i.i65 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  %119 = load i64, ptr %memberidx.i.i65, align 4
  %120 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i67 = icmp eq i64 %119, %120
  br i1 %.not.i.i67, label %ifend.i.i71, label %else.i78

ifend.i.i71:                                      ; preds = %while.entry.i68
  %memberidx2.i.i69 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %121 = load ptr, ptr %memberidx2.i.i69, align 8
  %122 = load ptr, ptr %memberidx.i.i, align 8
  %123 = call i64 @memcmp(ptr %121, ptr %122, i64 %119)
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %while.end.i76, label %ifend.i.i71.else.i78_crit_edge

ifend.i.i71.else.i78_crit_edge:                   ; preds = %ifend.i.i71
  %.pre107 = load i64, ptr %memberidx.i62, align 4
  %.pre108 = load ptr, ptr %108, align 8
  br label %else.i78

while.end.i76:                                    ; preds = %ifend.i.i71
  %.pre109.pre = load ptr, ptr %108, align 8
  %.phi.trans.insert110.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre109.pre, i64 %hash.0.i64
  %.pre111.pre = load ptr, ptr %.phi.trans.insert110.phi.trans.insert, align 8
  %.not25.i75 = icmp eq ptr %.pre111.pre, null
  br i1 %.not25.i75, label %Map_string_uint____getitem__.exit82, label %if.entry7.i81

else.i78:                                         ; preds = %ifend.i.i71.else.i78_crit_edge, %while.entry.i68
  %125 = phi ptr [ %.pre108, %ifend.i.i71.else.i78_crit_edge ], [ %115, %while.entry.i68 ]
  %126 = phi i64 [ %.pre107, %ifend.i.i71.else.i78_crit_edge ], [ %116, %while.entry.i68 ]
  %127 = add nuw i64 %hash.0.i64, 1
  %128 = urem i64 %127, %126
  %129 = getelementptr inbounds ptr, ptr %125, i64 %128
  %130 = load ptr, ptr %129, align 8
  %.not26.i77 = icmp eq ptr %130, null
  br i1 %.not26.i77, label %Map_string_uint____getitem__.exit82, label %while.entry.i68

if.entry7.i81:                                    ; preds = %while.end.i76
  %memberidx11.i80 = getelementptr inbounds %MapEntry_string_uint_, ptr %.pre111.pre, i64 0, i32 1
  %131 = load i64, ptr %memberidx11.i80, align 4
  br label %Map_string_uint____getitem__.exit82

Map_string_uint____getitem__.exit82:              ; preds = %else.i78, %else11, %while.end.i76, %if.entry7.i81
  %common.ret.op.i79 = phi i64 [ %131, %if.entry7.i81 ], [ 0, %while.end.i76 ], [ 0, %else11 ], [ 0, %else.i78 ]
  %132 = call ptr @LLVMConstInt(ptr %107, i64 %common.ret.op.i79, i1 false)
  store ptr %132, ptr %68, align 8
  %133 = load ptr, ptr %memberidx15, align 8
  br label %ifend12

ifend12:                                          ; preds = %Map_string_uint____getitem__.exit82, %Map_string_uint____getitem__.exit
  %struct_type.0 = phi ptr [ %38, %Map_string_uint____getitem__.exit ], [ %133, %Map_string_uint____getitem__.exit82 ]
  %ptr.1 = phi ptr [ %ptr.0, %Map_string_uint____getitem__.exit ], [ %106, %Map_string_uint____getitem__.exit82 ]
  %134 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %struct_type.0, ptr %ptr.1, ptr nonnull %indices_buffer, i64 2, ptr nonnull @260)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_builtin_array(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
end:
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 false)
  %memberidx1 = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %8, i1 true)
  %10 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %5, ptr nonnull @80)
  %memberidx2 = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Expression_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx3, align 4
  %13 = tail call i64 @llvm.smax.i64(i64 %12, i64 1)
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 %13, i1 false)
  %16 = tail call ptr @LLVMIntType(i64 64)
  %17 = tail call ptr @LLVMConstInt(ptr %16, i64 %12, i1 false)
  store ptr %10, ptr %args, align 8
  %18 = getelementptr inbounds ptr, ptr %args, i64 1
  %19 = tail call ptr @LLVMSizeOf(ptr %9)
  %20 = tail call ptr @LLVMConstMul(ptr %15, ptr %19)
  store ptr %20, ptr %18, align 8
  %memberidx.i31 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %21 = load i64, ptr %4, align 4
  %cond53 = icmp eq i64 %21, 20
  br i1 %cond53, label %if.entry.i47, label %get_class_from_type.exit

if.entry.i47:                                     ; preds = %end, %if.entry.i47
  %.tr11.i54 = phi ptr [ %22, %if.entry.i47 ], [ %4, %end ]
  %memberidx1.i46 = getelementptr inbounds %GenericType, ptr %.tr11.i54, i64 0, i32 3
  %22 = load ptr, ptr %memberidx1.i46, align 8
  %23 = load i64, ptr %22, align 4
  %cond = icmp eq i64 %23, 20
  br i1 %cond, label %if.entry.i47, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i47, %end
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %24 = load ptr, ptr %memberidx1.i, align 8
  %25 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %24)
  %.not.i32 = icmp eq ptr %25, null
  br i1 %.not.i32, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %26 = load ptr, ptr %memberidx.i31, align 8
  %memberidx.i.i35 = getelementptr inbounds %Program, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i.i35, align 8
  %28 = load i64, ptr %24, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i.i, align 8
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8
  %memberidx2.i.i36 = getelementptr inbounds %Module, ptr %31, i64 0, i32 3
  %32 = load ptr, ptr %memberidx2.i.i36, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %33 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i5.i.i, align 8
  %35 = getelementptr inbounds ptr, ptr %34, i64 %33
  %36 = load ptr, ptr %35, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %36)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %36)
  %37 = load ptr, ptr %36, align 8
  %38 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %37)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %38, %ifend.i ], [ %25, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 6
  %39 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %40 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %39)
  %41 = call ptr @LLVMBuildCall2(ptr %1, ptr %40, ptr nonnull %39, ptr nonnull %args, i64 2, ptr nonnull @80)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %42 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %42, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i37 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i37, align 8
  %memberidx1.i.i38 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i38, align 4
  %memberidx2.i.i39 = getelementptr inbounds %string, ptr %43, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i39, align 4
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i.i40 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i.i40, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %46 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %47 = tail call ptr %46(ptr nonnull %45)
  %48 = load i64, ptr %memberidx1.i.i.i, align 4
  %49 = tail call i64 @write(i64 1, ptr %47, i64 %48)
  %50 = load ptr, ptr %memberidx.i.i.i40, align 8
  tail call void @free(ptr %50)
  tail call void @free(ptr %45)
  %51 = load ptr, ptr %43, align 8
  %memberidx.i.i.i41 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx.i.i.i41, align 8
  %53 = tail call ptr %52(ptr nonnull %43)
  %54 = load i64, ptr %memberidx1.i.i38, align 4
  %55 = tail call i64 @write(i64 1, ptr %53, i64 %54)
  %56 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %57 = load ptr, ptr %memberidx.i.i37, align 8
  tail call void @free(ptr %57)
  tail call void @free(ptr %43)
  tail call void @exit(i64 -1)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i, %else.i
  %58 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %58, ptr noundef nonnull align 8 dereferenceable(6) @261, i64 6, i1 false)
  %59 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %60 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %59)
  %61 = call ptr @LLVMPointerType(ptr %9, i64 0)
  %62 = call ptr @LLVMBuildLoad2(ptr %1, ptr %61, ptr %60, ptr nonnull @80)
  %63 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %62, ptr %3)
  %64 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %64, ptr noundef nonnull align 8 dereferenceable(6) @262, i64 6, i1 false)
  %65 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i.i28 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i.i28, align 8
  %memberidx1.i.i29 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i29, align 4
  %memberidx2.i.i30 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i30, align 4
  %66 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %65)
  %67 = call ptr @LLVMBuildStore(ptr %1, ptr %17, ptr %66)
  ret ptr %10
}

define internal fastcc void @CodeGen_declare_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = tail call ptr @malloc(i32 56)
  %5 = tail call ptr @malloc(i32 24)
  %6 = tail call ptr @malloc(i32 2048)
  store ptr %6, ptr %5, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i77 = phi i64 [ 0, %2 ], [ %9, %for.body.i.i ]
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %i.0.i.i77
  store ptr null, ptr %8, align 8
  %9 = add nuw nsw i64 %i.0.i.i77, 1
  %10 = icmp ult i64 %i.0.i.i77, 255
  br i1 %10, label %for.body.i.i, label %Map_string_uint__constructor.exit.i

Map_string_uint__constructor.exit.i:              ; preds = %for.body.i.i
  %memberidx.i69 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 1
  %memberidx2.i.i70 = getelementptr inbounds %Map_string_uint_, ptr %5, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i70, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %5, ptr %memberidx.i69, align 8
  %11 = tail call ptr @malloc(i32 24)
  %12 = tail call ptr @malloc(i32 2048)
  store ptr %12, ptr %11, align 8
  br label %for.body.i11.i

for.body.i11.i:                                   ; preds = %Map_string_uint__constructor.exit.i, %for.body.i11.i
  %i.0.i9.i76 = phi i64 [ 0, %Map_string_uint__constructor.exit.i ], [ %15, %for.body.i11.i ]
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %i.0.i9.i76
  store ptr null, ptr %14, align 8
  %15 = add nuw nsw i64 %i.0.i9.i76, 1
  %16 = icmp ult i64 %i.0.i9.i76, 255
  br i1 %16, label %for.body.i11.i, label %Map_string_uint__constructor.exit14.i

Map_string_uint__constructor.exit14.i:            ; preds = %for.body.i11.i
  %memberidx1.i71 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 2
  %memberidx2.i12.i = getelementptr inbounds %Map_string_uint_, ptr %11, i64 0, i32 1
  store i64 256, ptr %memberidx2.i12.i, align 4
  %memberidx3.i13.i = getelementptr inbounds %Map_string_uint_, ptr %11, i64 0, i32 2
  store i64 0, ptr %memberidx3.i13.i, align 4
  store ptr %11, ptr %memberidx1.i71, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = tail call ptr @malloc(i32 2048)
  store ptr %18, ptr %17, align 8
  br label %for.body.i17.i

for.body.i17.i:                                   ; preds = %Map_string_uint__constructor.exit14.i, %for.body.i17.i
  %i.0.i15.i75 = phi i64 [ 0, %Map_string_uint__constructor.exit14.i ], [ %21, %for.body.i17.i ]
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %i.0.i15.i75
  store ptr null, ptr %20, align 8
  %21 = add nuw nsw i64 %i.0.i15.i75, 1
  %22 = icmp ult i64 %i.0.i15.i75, 255
  br i1 %22, label %for.body.i17.i, label %CGClassType_constructor.exit

CGClassType_constructor.exit:                     ; preds = %for.body.i17.i
  %memberidx2.i72 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 3
  %memberidx2.i18.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %17, i64 0, i32 1
  store i64 256, ptr %memberidx2.i18.i, align 4
  %memberidx3.i19.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %17, i64 0, i32 2
  store i64 0, ptr %memberidx3.i19.i, align 4
  store ptr %17, ptr %memberidx2.i72, align 8
  %memberidx3.i73 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx3.i73, i8 0, i64 16, i1 false)
  %23 = load ptr, ptr %0, align 8
  %24 = tail call ptr @LLVMGetModuleContext(ptr %23)
  %memberidx2 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2, align 8
  %26 = load ptr, ptr %25, align 8
  %memberidx3 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %26, i64 0, i32 5
  %27 = load ptr, ptr %memberidx3, align 8
  %28 = tail call ptr %27(ptr nonnull %25)
  %29 = tail call ptr @LLVMStructCreateNamed(ptr %24, ptr %28)
  store ptr %29, ptr %4, align 8
  %30 = load ptr, ptr %1, align 8
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %31 = load ptr, ptr %memberidx.i66, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %32 = load i64, ptr %30, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %30, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %30, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i.i, align 4
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %32, i64 %33, i64 %34)
  %36 = load ptr, ptr %3, align 8
  %37 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i.i67 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i.i67, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i68 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i.i.i68, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_CGClassType____setitem__(ptr %31, ptr nonnull %37, ptr nonnull %4)
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %38, align 8
  %memberidx.i63 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %38, i64 0, i32 2
  store i64 0, ptr %memberidx.i63, align 4
  %memberidx1.i64 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %38, i64 0, i32 3
  store i64 8, ptr %memberidx1.i64, align 4
  %memberidx2.i65 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %38, i64 0, i32 1
  %39 = call ptr @malloc(i32 64)
  store ptr %39, ptr %memberidx2.i65, align 8
  store i64 0, ptr %memberidx.i63, align 4
  call fastcc void @CodeGen_declare_static_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1)
  call fastcc void @CodeGen_declare_class_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1, ptr nonnull %38)
  %40 = load ptr, ptr %4, align 8
  %41 = load ptr, ptr %memberidx2.i65, align 8
  %42 = load i64, ptr %memberidx.i63, align 4
  call void @LLVMStructSetBody(ptr %40, ptr %41, i64 %42, i1 true)
  %43 = load ptr, ptr %memberidx2.i65, align 8
  call void @free(ptr %43)
  tail call void @free(ptr %38)
  %memberidx10 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %44 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %44, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %CGClassType_constructor.exit
  %memberidx11 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %45 = load ptr, ptr %memberidx11, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i.i, align 8
  %48 = load i64, ptr %46, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %57 = load i64, ptr %44, align 4
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i58 = getelementptr inbounds %Class, ptr %56, i64 0, i32 5
  %59 = load ptr, ptr %memberidx1.i58, align 8
  %memberidx2.i59 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %60 = load i64, ptr %memberidx2.i59, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i12.i, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  %memberidx3.i60 = getelementptr inbounds %ClassMethod, ptr %63, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %56, i64 0, i32 4
  %64 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i61 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %65 = load i64, ptr %memberidx5.i61, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i11.i, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %68, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i60, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %69, align 8
  %memberidx.i55 = getelementptr inbounds %Array_Type_, ptr %69, i64 0, i32 2
  store i64 0, ptr %memberidx.i55, align 4
  %memberidx1.i56 = getelementptr inbounds %Array_Type_, ptr %69, i64 0, i32 3
  store i64 8, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %Array_Type_, ptr %69, i64 0, i32 1
  %70 = call ptr @malloc(i32 64)
  store ptr %70, ptr %memberidx2.i57, align 8
  %71 = tail call ptr @malloc(i32 16)
  %72 = load ptr, ptr %1, align 8
  store i64 11, ptr %71, align 4
  %memberidx.i54 = getelementptr inbounds %ObjectType, ptr %71, i64 0, i32 1
  store ptr %72, ptr %memberidx.i54, align 8
  store ptr %71, ptr %70, align 8
  store i64 1, ptr %memberidx.i55, align 4
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 1
  %73 = load ptr, ptr %memberidx16, align 8
  %74 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr }, ptr @VTableArray_Type_, i64 0, i32 1), align 8
  %memberidx2.i53 = getelementptr inbounds %Array_Type_, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i53, align 4
  %76 = add nuw i64 %75, 1
  call void %74(ptr nonnull %69, i64 %76)
  %77 = load ptr, ptr %memberidx2.i57, align 8
  %78 = load i64, ptr %memberidx.i55, align 4
  %79 = getelementptr inbounds ptr, ptr %77, i64 %78
  %memberidx5.i = getelementptr inbounds %Array_Type_, ptr %73, i64 0, i32 1
  %80 = load ptr, ptr %memberidx5.i, align 8
  %81 = load i64, ptr %memberidx2.i53, align 4
  %82 = shl i64 %81, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %79, ptr align 8 %80, i64 %82, i1 false)
  %83 = load i64, ptr %memberidx.i55, align 4
  %84 = load i64, ptr %memberidx2.i53, align 4
  %85 = add nuw i64 %84, %83
  store i64 %85, ptr %memberidx.i55, align 4
  %86 = load ptr, ptr %memberidx16, align 8
  %memberidx.i50 = getelementptr inbounds %Array_Type_, ptr %86, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i50, align 8
  call void @free(ptr %87)
  tail call void @free(ptr %86)
  store ptr %69, ptr %memberidx16, align 8
  %88 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 false)
  %memberidx19 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 6
  %89 = load ptr, ptr %memberidx2, align 8
  %90 = load ptr, ptr %89, align 8
  %memberidx21 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx21, align 8
  %92 = call ptr %91(ptr nonnull %89)
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @293, ptr %92)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i, align 8
  %memberidx1.i49 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i49, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i, align 4
  tail call void @free(ptr %92)
  %97 = load ptr, ptr %0, align 8
  %98 = load ptr, ptr %96, align 8
  %memberidx1.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx1.i, align 8
  %100 = call ptr %99(ptr nonnull %96)
  %101 = call ptr @LLVMAddFunction(ptr %97, ptr %100, ptr %88)
  store ptr %101, ptr %memberidx19, align 8
  br label %ifend

else:                                             ; preds = %CGClassType_constructor.exit
  %memberidx22 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 6
  store ptr null, ptr %memberidx22, align 8
  br label %ifend

ifend:                                            ; preds = %else, %get_class_prop_type.exit
  ret void
}

define internal fastcc void @CodeGen_codegen_match_case(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr %4) unnamed_addr {
  %memberidx23 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx23, align 4
  %7 = icmp eq i64 %6, 9
  br i1 %7, label %if.entry, label %ifend

if.entry:                                         ; preds = %5, %if.entry2
  %.tr2124 = phi ptr [ %12, %if.entry2 ], [ %3, %5 ]
  %memberidx1 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 5
  %8 = load i64, ptr %memberidx1, align 4
  %9 = icmp eq i64 %8, 15
  br i1 %9, label %if.entry2, label %ifend

ifend:                                            ; preds = %if.entry2, %if.entry, %5
  %.tr21.lcssa = phi ptr [ %3, %5 ], [ %.tr2124, %if.entry ], [ %12, %if.entry2 ]
  %10 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %.tr21.lcssa)
  tail call void @LLVMAddCase(ptr %2, ptr %10, ptr %4)
  ret void

if.entry2:                                        ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 4
  %11 = load ptr, ptr %memberidx5, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr %0, ptr %1, ptr %2, ptr %11, ptr %4)
  %memberidx6 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 6
  %12 = load ptr, ptr %memberidx6, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp eq i64 %13, 9
  br i1 %14, label %if.entry, label %ifend
}

define internal fastcc ptr @CodeGen_get_class_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_string_CGClassType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_string_CGClassType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i = icmp eq ptr %16, null
  br i1 %.not.i, label %Map_string_CGClassType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %17 = phi ptr [ %27, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %28, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %32, %else.i ], [ %16, %2 ]
  %hash.0.i = phi i64 [ %30, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i1 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i1, align 4
  %22 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %22
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i3 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i3, align 8
  %24 = load ptr, ptr %memberidx.i.i, align 8
  %25 = call i64 @memcmp(ptr %23, ptr %24, i64 %21)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre5 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre6.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre6.pre, i64 %hash.0.i
  %.pre7.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre7.pre, null
  br i1 %.not25.i, label %Map_string_CGClassType____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %27 = phi ptr [ %.pre5, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %28 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %29 = add nuw i64 %hash.0.i, 1
  %30 = urem i64 %29, %28
  %31 = getelementptr inbounds ptr, ptr %27, i64 %30
  %32 = load ptr, ptr %31, align 8
  %.not26.i = icmp eq ptr %32, null
  br i1 %.not26.i, label %Map_string_CGClassType____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %.pre7.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_string_CGClassType____getitem__.exit

Map_string_CGClassType____getitem__.exit:         ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %33, %if.entry7.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_enum_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i = icmp eq ptr %16, null
  br i1 %.not.i, label %Map_string_CGEnumType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %17 = phi ptr [ %27, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %28, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %32, %else.i ], [ %16, %2 ]
  %hash.0.i = phi i64 [ %30, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i1 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i1, align 4
  %22 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %22
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i3 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i3, align 8
  %24 = load ptr, ptr %memberidx.i.i, align 8
  %25 = call i64 @memcmp(ptr %23, ptr %24, i64 %21)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre5 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre6.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre6.pre, i64 %hash.0.i
  %.pre7.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre7.pre, null
  br i1 %.not25.i, label %Map_string_CGEnumType____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %27 = phi ptr [ %.pre5, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %28 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %29 = add nuw i64 %hash.0.i, 1
  %30 = urem i64 %29, %28
  %31 = getelementptr inbounds ptr, ptr %27, i64 %30
  %32 = load ptr, ptr %31, align 8
  %.not26.i = icmp eq ptr %32, null
  br i1 %.not26.i, label %Map_string_CGEnumType____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %.pre7.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_string_CGEnumType____getitem__.exit

Map_string_CGEnumType____getitem__.exit:          ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %33, %if.entry7.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_member_mem_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr %4) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %3, align 4
  %switch10 = icmp eq i64 %7, 20
  br i1 %switch10, label %if.entry.i3, label %if.entry3.i

if.entry.i3:                                      ; preds = %5, %if.entry.i3
  %.tr11.i11 = phi ptr [ %8, %if.entry.i3 ], [ %3, %5 ]
  %memberidx1.i2 = getelementptr inbounds %GenericType, ptr %.tr11.i11, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1.i2, align 8
  %9 = load i64, ptr %8, align 4
  %switch = icmp eq i64 %9, 20
  br i1 %switch, label %if.entry.i3, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i3, %5
  %.tr11.i.lcssa = phi ptr [ %3, %5 ], [ %8, %if.entry.i3 ]
  %memberidx6.i4 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %10 = load ptr, ptr %memberidx6.i4, align 8
  %memberidx.i.i5 = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i5, align 8
  %12 = load i64, ptr %10, align 4
  %memberidx.i.i.i6 = getelementptr inbounds %Array_Module_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i6, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i7 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i7, align 8
  %memberidx3.i.i8 = getelementptr inbounds %TypeId, ptr %10, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i8, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i5.i.i, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1, align 8
  %22 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = urem i64 %22, %23
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %.not.i = icmp eq ptr %27, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %28 = phi ptr [ %38, %else.i ], [ %25, %while.entry.i.preheader ]
  %29 = phi i64 [ %39, %else.i ], [ %23, %while.entry.i.preheader ]
  %30 = phi ptr [ %43, %else.i ], [ %27, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %41, %else.i ], [ %24, %while.entry.i.preheader ]
  %31 = load ptr, ptr %30, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %31, i64 0, i32 2
  %32 = load i64, ptr %memberidx.i.i, align 4
  %33 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %32, %33
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %31, i64 0, i32 1
  %34 = load ptr, ptr %memberidx2.i.i, align 8
  %35 = load ptr, ptr %memberidx3.i.i, align 8
  %36 = tail call i64 @memcmp(ptr %34, ptr %35, i64 %32)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre12 = load ptr, ptr %21, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre13.pre = load ptr, ptr %21, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre13.pre, i64 %hash.0.i
  %.pre14.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre14.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %38 = phi ptr [ %.pre12, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %29, %while.entry.i ]
  %40 = add nuw i64 %hash.0.i, 1
  %41 = urem i64 %40, %39
  %42 = getelementptr inbounds ptr, ptr %38, i64 %41
  %43 = load ptr, ptr %42, align 8
  %.not26.i = icmp eq ptr %43, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre14.pre, i64 0, i32 1
  %44 = load ptr, ptr %memberidx11.i, align 8
  %45 = icmp eq ptr %44, null
  br i1 %45, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %71, %ifend5 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %46 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i12 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i12, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i.i, align 8
  %49 = load i64, ptr %47, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %52, i64 0, i32 3
  %53 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %58 = load i64, ptr %44, align 4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 5
  %60 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i12.i, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %64, i64 0, i32 4
  br label %ifend5

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 4
  %65 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %66 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i11.i, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %69, i64 0, i32 4
  br label %ifend5

ifend5:                                           ; preds = %ifend.i, %if.entry.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i13 = load ptr, ptr %common.ret.op.in.i, align 8
  %70 = alloca %MemberExpression, align 8
  store i64 8, ptr %70, align 8
  %memberidx.i.i14 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i14, align 4
  %memberidx1.i.i15 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i15, align 8
  %memberidx.i16 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 4
  store ptr null, ptr %memberidx.i16, align 8
  %memberidx1.i17 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 5
  store ptr %44, ptr %memberidx1.i17, align 8
  %memberidx2.i18 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  store ptr %common.ret.op.i13, ptr %memberidx2.i18, align 8
  %71 = call fastcc ptr @CodeGen_get_member_expr_mem(ptr nonnull %0, ptr %1, ptr nonnull %70, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr %4, ptr writeonly %5) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %3, align 4
  %switch35 = icmp eq i64 %8, 20
  br i1 %switch35, label %if.entry.i28, label %if.entry3.i

if.entry.i28:                                     ; preds = %6, %if.entry.i28
  %.tr11.i36 = phi ptr [ %9, %if.entry.i28 ], [ %3, %6 ]
  %memberidx1.i27 = getelementptr inbounds %GenericType, ptr %.tr11.i36, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i27, align 8
  %10 = load i64, ptr %9, align 4
  %switch = icmp eq i64 %10, 20
  br i1 %switch, label %if.entry.i28, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i28, %6
  %.tr11.i.lcssa = phi ptr [ %3, %6 ], [ %9, %if.entry.i28 ]
  %memberidx6.i29 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i29, align 8
  %memberidx.i.i30 = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i30, align 8
  %13 = load i64, ptr %11, align 4
  %memberidx.i.i.i31 = getelementptr inbounds %Array_Module_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i31, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i32 = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i32, align 8
  %memberidx3.i.i33 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i33, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i5.i.i, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1, align 8
  %23 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %4)
  %memberidx.i20 = getelementptr inbounds %Map_string_PropId_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i20, align 4
  %25 = urem i64 %23, %24
  %26 = load ptr, ptr %22, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %.not.i = icmp eq ptr %28, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i22 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %29 = phi ptr [ %39, %else.i ], [ %26, %while.entry.i.preheader ]
  %30 = phi i64 [ %40, %else.i ], [ %24, %while.entry.i.preheader ]
  %31 = phi ptr [ %44, %else.i ], [ %28, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %42, %else.i ], [ %25, %while.entry.i.preheader ]
  %32 = load ptr, ptr %31, align 8
  %memberidx.i.i21 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i.i21, align 4
  %34 = load i64, ptr %memberidx1.i.i22, align 4
  %.not.i.i = icmp eq i64 %33, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i.i, align 8
  %36 = load ptr, ptr %memberidx3.i.i, align 8
  %37 = tail call i64 @memcmp(ptr %35, ptr %36, i64 %33)
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i20, align 4
  %.pre37 = load ptr, ptr %22, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre38.pre = load ptr, ptr %22, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre38.pre, i64 %hash.0.i
  %.pre39.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre39.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %39 = phi ptr [ %.pre37, %ifend.i.i.else.i_crit_edge ], [ %29, %while.entry.i ]
  %40 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %30, %while.entry.i ]
  %41 = add nuw i64 %hash.0.i, 1
  %42 = urem i64 %41, %40
  %43 = getelementptr inbounds ptr, ptr %39, i64 %42
  %44 = load ptr, ptr %43, align 8
  %.not26.i = icmp eq ptr %44, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre39.pre, i64 0, i32 1
  %45 = load ptr, ptr %memberidx11.i, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %73, %ifend5 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %47 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i17 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i17, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i.i.i, align 8
  %50 = load i64, ptr %48, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  %53 = load ptr, ptr %52, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %53, i64 0, i32 3
  %54 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 2
  %55 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8
  %59 = load i64, ptr %45, align 4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i18 = getelementptr inbounds %Class, ptr %58, i64 0, i32 5
  %61 = load ptr, ptr %memberidx1.i18, align 8
  %memberidx2.i19 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i19, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i12.i, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %65, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %58, i64 0, i32 4
  %66 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %67 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i11.i, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %70, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend5, label %if.entry3

if.entry3:                                        ; preds = %get_class_prop_type.exit
  store ptr %common.ret.op.i, ptr %5, align 8
  br label %ifend5

ifend5:                                           ; preds = %get_class_prop_type.exit, %if.entry3
  %71 = alloca %Expression, align 8
  store i64 8, ptr %71, align 8
  %memberidx.i15 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 2
  store i64 8, ptr %memberidx.i15, align 4
  %memberidx1.i16 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 1
  store i1 false, ptr %memberidx1.i16, align 8
  %memberidx6 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  store ptr %3, ptr %memberidx6, align 8
  %72 = alloca %MemberExpression, align 8
  store i64 8, ptr %72, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 8
  %memberidx.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 4
  store ptr %71, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 5
  store ptr %45, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx2.i, align 8
  %73 = call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %72, ptr %2)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_for_stmt(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @283)
  %6 = tail call ptr @LLVMBuildBr(ptr %1, ptr %5)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %memberidx1 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %.not = icmp eq ptr %7, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %7)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx3 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %memberidx3, align 8
  %.not95 = icmp eq ptr %8, null
  br i1 %.not95, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %8)
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %9 = load ptr, ptr %memberidx, align 8
  %10 = tail call ptr @LLVMAppendBasicBlock(ptr %9, ptr nonnull @284)
  %11 = load ptr, ptr %memberidx, align 8
  %12 = tail call ptr @LLVMAppendBasicBlock(ptr %11, ptr nonnull @285)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = tail call ptr @LLVMAppendBasicBlock(ptr %13, ptr nonnull @286)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = tail call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @287)
  %memberidx12 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx13, align 8
  store ptr %16, ptr %memberidx12, align 8
  store ptr %14, ptr %memberidx13, align 8
  %19 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %10)
  %20 = tail call ptr @LLVMInt1Type()
  %21 = tail call ptr @LLVMConstInt(ptr %20, i64 1, i1 false)
  %memberidx16 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %memberidx16, align 8
  %.not96 = icmp eq ptr %22, null
  br i1 %.not96, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend6
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %22)
  br label %ifend19

ifend19:                                          ; preds = %ifend6, %if.entry17
  %condition.0 = phi ptr [ %23, %if.entry17 ], [ %21, %ifend6 ]
  %24 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %condition.0, ptr %12, ptr %16)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %12)
  %memberidx21 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx21, align 8
  %memberidx.i110 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %26 = load i1, ptr %memberidx.i110, align 1
  store i1 false, ptr %memberidx.i110, align 1
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 25)
  %memberidx.i.i111 = getelementptr inbounds %Array_Statement_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i111, align 8
  %memberidx1.i.i112 = getelementptr inbounds %Array_Statement_, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %memberidx1.i.i112, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %ifend19, %for.body.i
  %32 = phi i64 [ %33, %for.body.i ], [ 1, %ifend19 ]
  %statement.0.i114.in = phi ptr [ %34, %for.body.i ], [ %29, %ifend19 ]
  %statement.0.i114 = load ptr, ptr %statement.0.i114.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i114)
  %33 = add nuw nsw i64 %32, 1
  store i64 %33, ptr %memberidx1.i.i.i, align 4
  %34 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not115 = icmp slt i64 %32, %30
  br i1 %.not115, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ifend19
  tail call void @free(ptr nonnull %28)
  %memberidx4.i = getelementptr inbounds %Block, ptr %25, i64 0, i32 4
  %35 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %35, null
  br i1 %.not.i, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %35)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %26, ptr %memberidx.i110, align 1
  %37 = load ptr, ptr %memberidx21, align 8
  %memberidx.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 1
  %38 = load i1, ptr %memberidx.i, align 1
  %memberidx1.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 2
  %39 = load i1, ptr %memberidx1.i, align 1
  %40 = or i1 %38, %39
  %memberidx2.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 3
  %41 = load i1, ptr %memberidx2.i, align 1
  %42 = or i1 %40, %41
  br i1 %42, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %CodeGen_codegen_block.exit
  %43 = tail call ptr @LLVMBuildBr(ptr %1, ptr %14)
  br label %ifend25

ifend25:                                          ; preds = %CodeGen_codegen_block.exit, %if.entry23
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %14)
  %memberidx26 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 4
  %44 = load ptr, ptr %memberidx26, align 8
  %.not97 = icmp eq ptr %44, null
  br i1 %.not97, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend25
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %44)
  br label %ifend29

ifend29:                                          ; preds = %ifend25, %if.entry27
  %45 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  store ptr %17, ptr %memberidx12, align 8
  store ptr %18, ptr %memberidx13, align 8
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %16)
  %46 = load ptr, ptr %memberidx1, align 8
  %.not98 = icmp eq ptr %46, null
  br i1 %.not98, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %VarDeclaration, ptr %46, i64 0, i32 2
  %47 = load ptr, ptr %memberidx38, align 8
  %48 = alloca %VarAccessExpression, align 8
  %memberidx39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %49 = load ptr, ptr %memberidx39, align 8
  %memberidx.i99 = getelementptr inbounds %Program, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %VarId, ptr %47, i64 0, i32 1
  %51 = load i64, ptr %memberidx1.i100, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %memberidx.i.i, align 8
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  %54 = load ptr, ptr %53, align 8
  %memberidx2.i101 = getelementptr inbounds %Module, ptr %54, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i101, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %47, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Var_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i5.i, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %60 = load ptr, ptr %59, align 8
  store i64 8, ptr %48, align 8
  %memberidx.i.i102 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i102, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %48, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %VarAccessExpression, ptr %48, i64 0, i32 4
  store ptr %47, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 3
  store ptr %60, ptr %memberidx1.i104, align 8
  %61 = load i64, ptr %47, align 4
  %62 = icmp eq i64 %61, 2
  store i1 %62, ptr %memberidx1.i.i, align 8
  %63 = call fastcc ptr @CodeGen_codegen_var_access_exp(ptr nonnull %0, ptr %1, ptr nonnull %48)
  %64 = tail call ptr @LLVMBuildFree(ptr %1, ptr %63)
  br label %ifend36

ifend36:                                          ; preds = %ifend29, %if.entry34
  ret void
}

define internal fastcc ptr @CodeGen_codegen_member_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry.i158, label %is_object.exit

if.entry.i158:                                    ; preds = %4, %if.entry.i158
  %.tr5.i = phi ptr [ %11, %if.entry.i158 ], [ %8, %4 ]
  %memberidx1.i157 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %11 = load ptr, ptr %memberidx1.i157, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 20
  br i1 %13, label %if.entry.i158, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i158, %4
  %.lcssa.i = phi i64 [ %9, %4 ], [ %12, %if.entry.i158 ]
  %14 = icmp eq i64 %.lcssa.i, 11
  br i1 %14, label %if.entry, label %ifend

if.entry:                                         ; preds = %is_object.exit
  %15 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr %2, ptr %3)
  %memberidx2 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %17 = load ptr, ptr %memberidx3, align 8
  %memberidx.i.i66 = getelementptr inbounds %PropId, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i66, align 8
  %memberidx.i.i.i67 = getelementptr inbounds %Program, ptr %16, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i.i.i67, align 8
  %20 = load i64, ptr %18, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx2.i.i.i68 = getelementptr inbounds %Module, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx2.i.i.i68, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %18, i64 0, i32 2
  %25 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %29 = load i64, ptr %17, align 4
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i70 = getelementptr inbounds %Class, ptr %28, i64 0, i32 5
  %31 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %17, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i12.i, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %32
  %35 = load ptr, ptr %34, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %35, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %28, i64 0, i32 4
  %36 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %17, i64 0, i32 2
  %37 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i11.i, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %40, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i69 = load i64, ptr %common.ret.op.in.i, align 4
  %41 = icmp eq i64 %common.ret.op.i69, 1
  %memberidx4 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %42 = load ptr, ptr %memberidx4, align 8
  %43 = load i64, ptr %42, align 4
  %44 = icmp eq i64 %43, 16
  %45 = and i1 %41, %44
  br i1 %45, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %VarAccessExpression, ptr %7, i64 0, i32 4
  %46 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %47 = load ptr, ptr %memberidx11, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i71 = getelementptr inbounds %PropId, ptr %47, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i71, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %49 = load i64, ptr %48, align 4
  %memberidx1.i.i72 = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 1
  %50 = load i64, ptr %memberidx1.i.i72, align 4
  %memberidx2.i.i73 = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 2
  %51 = load i64, ptr %memberidx2.i.i73, align 4
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %49, i64 %50, i64 %51)
  %53 = load ptr, ptr %5, align 8
  %54 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i.i74 = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i.i74, align 8
  %memberidx1.i.i.i75 = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx1.i.i.i75, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 %52, ptr %memberidx2.i.i.i76, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %55 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %56 = call ptr %55(ptr nonnull %54)
  %57 = load i64, ptr %47, align 4
  %memberidx3.i78 = getelementptr inbounds %PropId, ptr %47, i64 0, i32 2
  %58 = load i64, ptr %memberidx3.i78, align 4
  %59 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %56, i64 %57, i64 %58)
  %60 = load ptr, ptr %6, align 8
  %61 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i79 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i79, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 %59, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 %59, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %56)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %62 = load i64, ptr %46, align 4
  switch i64 %62, label %common.ret [
    i64 3, label %if.entry13
    i64 4, label %if.entry29
  ]

common.ret:                                       ; preds = %else.i, %ifend34, %if.entry7.i, %while.end.i, %ifend22, %ifend, %get_class_prop_visibility.exit, %ifend26, %ifend7
  %common.ret.op = phi ptr [ %64, %ifend7 ], [ %142, %ifend26 ], [ %15, %get_class_prop_visibility.exit ], [ null, %ifend ], [ %common.ret.op.i116163, %ifend22 ], [ %198, %if.entry7.i ], [ null, %while.end.i ], [ null, %ifend34 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %get_class_prop_visibility.exit
  %63 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr nonnull %42, i1 true)
  %64 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %63, ptr %15, ptr nonnull @80)
  br label %common.ret

if.entry13:                                       ; preds = %ifend
  %65 = call ptr @malloc(i32 24)
  %memberidx.i80 = getelementptr inbounds %VarId, ptr %46, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i80, align 4
  %memberidx1.i81 = getelementptr inbounds %VarId, ptr %46, i64 0, i32 2
  %67 = load i64, ptr %memberidx1.i81, align 4
  store i64 %66, ptr %65, align 4
  %memberidx1.i.i.i82 = getelementptr inbounds %TypeId, ptr %65, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i82, align 4
  %memberidx2.i.i.i83 = getelementptr inbounds %TypeId, ptr %65, i64 0, i32 2
  store i64 %67, ptr %memberidx2.i.i.i83, align 4
  %68 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr nonnull %65)
  %.not.i123 = icmp eq ptr %68, null
  br i1 %.not.i123, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %ifend18

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry13
  %memberidx.i126 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %69 = load ptr, ptr %memberidx.i126, align 8
  %memberidx.i.i127 = getelementptr inbounds %Program, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i127, align 8
  %memberidx.i.i.i128 = getelementptr inbounds %Array_Module_, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i.i128, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %66
  %73 = load ptr, ptr %72, align 8
  %memberidx2.i.i129 = getelementptr inbounds %Module, ptr %73, i64 0, i32 3
  %74 = load ptr, ptr %memberidx2.i.i129, align 8
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i5.i.i, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %67
  %77 = load ptr, ptr %76, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %77)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %77)
  %78 = load ptr, ptr %77, align 8
  %79 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %78)
  %80 = icmp eq ptr %79, null
  br i1 %80, label %if.entry16, label %ifend18

if.entry16:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %81 = call ptr @malloc(i32 51)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %81, ptr noundef nonnull align 8 dereferenceable(51) @276, i64 51, i1 false)
  %82 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %82, align 8
  %memberidx.i.i90 = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  store ptr %81, ptr %memberidx.i.i90, align 8
  %memberidx1.i.i91 = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  store i64 51, ptr %memberidx1.i.i91, align 4
  %memberidx2.i.i92 = getelementptr inbounds %string, ptr %82, i64 0, i32 3
  store i64 51, ptr %memberidx2.i.i92, align 4
  %83 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %83, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %84 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i.i.i93 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i.i.i93, align 8
  %memberidx1.i.i.i94 = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i94, align 4
  %memberidx2.i.i.i95 = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i95, align 4
  %85 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %86 = call ptr %85(ptr nonnull %84)
  %87 = load i64, ptr %memberidx1.i.i.i94, align 4
  %88 = call i64 @write(i64 1, ptr %86, i64 %87)
  %89 = load ptr, ptr %memberidx.i.i.i93, align 8
  call void @free(ptr %89)
  call void @free(ptr %84)
  %90 = load ptr, ptr %82, align 8
  %memberidx.i.i.i148 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %90, i64 0, i32 3
  %91 = load ptr, ptr %memberidx.i.i.i148, align 8
  %92 = call ptr %91(ptr nonnull %82)
  %93 = load i64, ptr %memberidx1.i.i91, align 4
  %94 = call i64 @write(i64 1, ptr %92, i64 %93)
  %95 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %96 = load ptr, ptr %memberidx.i.i90, align 8
  call void @free(ptr %96)
  call void @free(ptr %82)
  call void @exit(i64 -1)
  unreachable

ifend18:                                          ; preds = %if.entry13, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i124161 = phi ptr [ %79, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %68, %if.entry13 ]
  %memberidx19 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i124161, i64 0, i32 3
  %97 = load ptr, ptr %memberidx19, align 8
  %98 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %61)
  %memberidx.i99 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %97, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i99, align 4
  %100 = urem i64 %98, %99
  %101 = load ptr, ptr %97, align 8
  %102 = getelementptr inbounds ptr, ptr %101, i64 %100
  %103 = load ptr, ptr %102, align 8
  %.not.i100 = icmp eq ptr %103, null
  br i1 %.not.i100, label %if.entry20, label %while.entry.i105

while.entry.i105:                                 ; preds = %ifend18, %else.i115
  %104 = phi ptr [ %114, %else.i115 ], [ %101, %ifend18 ]
  %105 = phi i64 [ %115, %else.i115 ], [ %99, %ifend18 ]
  %106 = phi ptr [ %119, %else.i115 ], [ %103, %ifend18 ]
  %hash.0.i101 = phi i64 [ %117, %else.i115 ], [ %100, %ifend18 ]
  %107 = load ptr, ptr %106, align 8
  %memberidx.i.i102 = getelementptr inbounds %string, ptr %107, i64 0, i32 2
  %108 = load i64, ptr %memberidx.i.i102, align 4
  %109 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i104 = icmp eq i64 %108, %109
  br i1 %.not.i.i104, label %ifend.i.i108, label %else.i115

ifend.i.i108:                                     ; preds = %while.entry.i105
  %memberidx2.i.i106 = getelementptr inbounds %string, ptr %107, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i.i106, align 8
  %111 = load ptr, ptr %memberidx.i.i79, align 8
  %112 = call i64 @memcmp(ptr %110, ptr %111, i64 %108)
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %while.end.i113, label %ifend.i.i108.else.i115_crit_edge

ifend.i.i108.else.i115_crit_edge:                 ; preds = %ifend.i.i108
  %.pre170 = load i64, ptr %memberidx.i99, align 4
  %.pre171 = load ptr, ptr %97, align 8
  br label %else.i115

while.end.i113:                                   ; preds = %ifend.i.i108
  %.pre172.pre = load ptr, ptr %97, align 8
  %.phi.trans.insert173.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre172.pre, i64 %hash.0.i101
  %.pre174.pre = load ptr, ptr %.phi.trans.insert173.phi.trans.insert, align 8
  %.not25.i112 = icmp eq ptr %.pre174.pre, null
  br i1 %.not25.i112, label %if.entry20, label %Map_string_LLVMValueRef____getitem__.exit119

else.i115:                                        ; preds = %ifend.i.i108.else.i115_crit_edge, %while.entry.i105
  %114 = phi ptr [ %.pre171, %ifend.i.i108.else.i115_crit_edge ], [ %104, %while.entry.i105 ]
  %115 = phi i64 [ %.pre170, %ifend.i.i108.else.i115_crit_edge ], [ %105, %while.entry.i105 ]
  %116 = add nuw i64 %hash.0.i101, 1
  %117 = urem i64 %116, %115
  %118 = getelementptr inbounds ptr, ptr %114, i64 %117
  %119 = load ptr, ptr %118, align 8
  %.not26.i114 = icmp eq ptr %119, null
  br i1 %.not26.i114, label %if.entry20, label %while.entry.i105

Map_string_LLVMValueRef____getitem__.exit119:     ; preds = %while.end.i113
  %memberidx11.i117 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre174.pre, i64 0, i32 1
  %120 = load ptr, ptr %memberidx11.i117, align 8
  %121 = icmp eq ptr %120, null
  br i1 %121, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %else.i115, %ifend18, %while.end.i113, %Map_string_LLVMValueRef____getitem__.exit119
  %122 = call ptr @malloc(i32 59)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(59) %122, ptr noundef nonnull align 8 dereferenceable(59) @277, i64 59, i1 false)
  %123 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %123, align 8
  %memberidx.i.i120 = getelementptr inbounds %string, ptr %123, i64 0, i32 1
  store ptr %122, ptr %memberidx.i.i120, align 8
  %memberidx1.i.i121 = getelementptr inbounds %string, ptr %123, i64 0, i32 2
  store i64 59, ptr %memberidx1.i.i121, align 4
  %memberidx2.i.i122 = getelementptr inbounds %string, ptr %123, i64 0, i32 3
  store i64 59, ptr %memberidx2.i.i122, align 4
  %124 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %124, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %125 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %125, align 8
  %memberidx.i.i.i84 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  store ptr %124, ptr %memberidx.i.i.i84, align 8
  %memberidx1.i.i.i85 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i85, align 4
  %memberidx2.i.i.i86 = getelementptr inbounds %string, ptr %125, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i86, align 4
  %126 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %127 = call ptr %126(ptr nonnull %125)
  %128 = load i64, ptr %memberidx1.i.i.i85, align 4
  %129 = call i64 @write(i64 1, ptr %127, i64 %128)
  %130 = load ptr, ptr %memberidx.i.i.i84, align 8
  call void @free(ptr %130)
  call void @free(ptr %125)
  %131 = load ptr, ptr %123, align 8
  %memberidx.i.i.i145 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %131, i64 0, i32 3
  %132 = load ptr, ptr %memberidx.i.i.i145, align 8
  %133 = call ptr %132(ptr nonnull %123)
  %134 = load i64, ptr %memberidx1.i.i121, align 4
  %135 = call i64 @write(i64 1, ptr %133, i64 %134)
  %136 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %137 = load ptr, ptr %memberidx.i.i120, align 8
  call void @free(ptr %137)
  call void @free(ptr %123)
  call void @exit(i64 -1)
  br label %ifend22

ifend22:                                          ; preds = %Map_string_LLVMValueRef____getitem__.exit119, %if.entry20
  %common.ret.op.i116163 = phi ptr [ %120, %Map_string_LLVMValueRef____getitem__.exit119 ], [ null, %if.entry20 ]
  %memberidx23 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %138 = load ptr, ptr %memberidx23, align 8
  %139 = load i64, ptr %138, align 4
  %140 = icmp eq i64 %139, 16
  br i1 %140, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend22
  %141 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %138, i1 true)
  %142 = call ptr @LLVMBuildLoad2(ptr %1, ptr %141, ptr %common.ret.op.i116163, ptr nonnull @80)
  br label %common.ret

if.entry29:                                       ; preds = %ifend
  %143 = call ptr @malloc(i32 24)
  %memberidx.i63 = getelementptr inbounds %VarId, ptr %46, i64 0, i32 1
  %144 = load i64, ptr %memberidx.i63, align 4
  %memberidx1.i = getelementptr inbounds %VarId, ptr %46, i64 0, i32 2
  %145 = load i64, ptr %memberidx1.i, align 4
  store i64 %144, ptr %143, align 4
  %memberidx1.i.i.i64 = getelementptr inbounds %TypeId, ptr %143, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i64, align 4
  %memberidx2.i.i.i65 = getelementptr inbounds %TypeId, ptr %143, i64 0, i32 2
  store i64 %145, ptr %memberidx2.i.i.i65, align 4
  %146 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr nonnull %143)
  %.not.i132 = icmp eq ptr %146, null
  br i1 %.not.i132, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %ifend34

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry29
  %memberidx.i135 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %147 = load ptr, ptr %memberidx.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Program, ptr %147, i64 0, i32 1
  %148 = load ptr, ptr %memberidx.i.i136, align 8
  %memberidx.i.i.i137 = getelementptr inbounds %Array_Module_, ptr %148, i64 0, i32 1
  %149 = load ptr, ptr %memberidx.i.i.i137, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 %144
  %151 = load ptr, ptr %150, align 8
  %memberidx2.i.i138 = getelementptr inbounds %Module, ptr %151, i64 0, i32 6
  %152 = load ptr, ptr %memberidx2.i.i138, align 8
  %memberidx.i5.i.i140 = getelementptr inbounds %Array_Enum_, ptr %152, i64 0, i32 1
  %153 = load ptr, ptr %memberidx.i5.i.i140, align 8
  %154 = getelementptr inbounds ptr, ptr %153, i64 %145
  %155 = load ptr, ptr %154, align 8
  call fastcc void @CodeGen_declare_enum(ptr %0, ptr %155)
  %156 = load ptr, ptr %155, align 8
  %157 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %156)
  %158 = icmp eq ptr %157, null
  br i1 %158, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit
  %159 = call ptr @malloc(i32 50)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %159, ptr noundef nonnull align 8 dereferenceable(50) @278, i64 50, i1 false)
  %160 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %160, align 8
  %memberidx.i.i60 = getelementptr inbounds %string, ptr %160, i64 0, i32 1
  store ptr %159, ptr %memberidx.i.i60, align 8
  %memberidx1.i.i61 = getelementptr inbounds %string, ptr %160, i64 0, i32 2
  store i64 50, ptr %memberidx1.i.i61, align 4
  %memberidx2.i.i62 = getelementptr inbounds %string, ptr %160, i64 0, i32 3
  store i64 50, ptr %memberidx2.i.i62, align 4
  %161 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %161, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %162 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %162, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 1
  store ptr %161, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %163 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %164 = call ptr %163(ptr nonnull %162)
  %165 = load i64, ptr %memberidx1.i.i.i, align 4
  %166 = call i64 @write(i64 1, ptr %164, i64 %165)
  %167 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %167)
  call void @free(ptr %162)
  %168 = load ptr, ptr %160, align 8
  %memberidx.i.i.i142 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %168, i64 0, i32 3
  %169 = load ptr, ptr %memberidx.i.i.i142, align 8
  %170 = call ptr %169(ptr nonnull %160)
  %171 = load i64, ptr %memberidx1.i.i61, align 4
  %172 = call i64 @write(i64 1, ptr %170, i64 %171)
  %173 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %174 = load ptr, ptr %memberidx.i.i60, align 8
  call void @free(ptr %174)
  call void @free(ptr %160)
  call void @exit(i64 -1)
  unreachable

ifend34:                                          ; preds = %if.entry29, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i133166 = phi ptr [ %157, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %146, %if.entry29 ]
  %memberidx35 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i133166, i64 0, i32 1
  %175 = load ptr, ptr %memberidx35, align 8
  %176 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %61)
  %memberidx.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %175, i64 0, i32 1
  %177 = load i64, ptr %memberidx.i, align 4
  %178 = urem i64 %176, %177
  %179 = load ptr, ptr %175, align 8
  %180 = getelementptr inbounds ptr, ptr %179, i64 %178
  %181 = load ptr, ptr %180, align 8
  %.not.i = icmp eq ptr %181, null
  br i1 %.not.i, label %common.ret, label %while.entry.i

while.entry.i:                                    ; preds = %ifend34, %else.i
  %182 = phi ptr [ %192, %else.i ], [ %179, %ifend34 ]
  %183 = phi i64 [ %193, %else.i ], [ %177, %ifend34 ]
  %184 = phi ptr [ %197, %else.i ], [ %181, %ifend34 ]
  %hash.0.i = phi i64 [ %195, %else.i ], [ %178, %ifend34 ]
  %185 = load ptr, ptr %184, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %185, i64 0, i32 2
  %186 = load i64, ptr %memberidx.i.i, align 4
  %187 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %186, %187
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %185, i64 0, i32 1
  %188 = load ptr, ptr %memberidx2.i.i, align 8
  %189 = load ptr, ptr %memberidx.i.i79, align 8
  %190 = call i64 @memcmp(ptr %188, ptr %189, i64 %186)
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre167 = load ptr, ptr %175, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre168.pre = load ptr, ptr %175, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre168.pre, i64 %hash.0.i
  %.pre169.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre169.pre, null
  br i1 %.not25.i, label %common.ret, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %192 = phi ptr [ %.pre167, %ifend.i.i.else.i_crit_edge ], [ %182, %while.entry.i ]
  %193 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %183, %while.entry.i ]
  %194 = add nuw i64 %hash.0.i, 1
  %195 = urem i64 %194, %193
  %196 = getelementptr inbounds ptr, ptr %192, i64 %195
  %197 = load ptr, ptr %196, align 8
  %.not26.i = icmp eq ptr %197, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre169.pre, i64 0, i32 1
  %198 = load ptr, ptr %memberidx11.i, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_static_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Class, ptr %2, i64 0, i32 7
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %5, align 8
  %memberidx1.i54 = getelementptr inbounds %Map_string_PropId_, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i54, align 4
  %memberidx2.i55 = getelementptr inbounds %Map_string_PropId_, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i55, align 4
  store i1 false, ptr %6, align 1
  %memberidx1.i.i56 = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 1
  store ptr %7, ptr %memberidx1.i.i56, align 8
  %memberidx2.i.i57 = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 3
  store i64 %9, ptr %memberidx3.i.i, align 4
  %10 = add nsw i64 %8, -1
  store i64 %10, ptr %memberidx2.i.i57, align 4
  %11 = icmp sgt i64 %8, 0
  br i1 %11, label %while.entry.i49, label %MapIterator_string_PropId__next.exit53

while.entry.i49:                                  ; preds = %for.entry, %ifend.i52
  %12 = phi i64 [ %15, %ifend.i52 ], [ %10, %for.entry ]
  %13 = phi ptr [ %incdec.ptr.i47, %ifend.i52 ], [ %7, %for.entry ]
  %incdec.ptr.i47 = getelementptr inbounds ptr, ptr %13, i64 1
  %14 = load ptr, ptr %13, align 8
  %.not.i48 = icmp eq ptr %14, null
  br i1 %.not.i48, label %ifend.i52, label %MapIterator_string_PropId__next.exit53.loopexit

ifend.i52:                                        ; preds = %while.entry.i49
  %15 = add nsw i64 %12, -1
  store i64 %15, ptr %memberidx2.i.i57, align 4
  %16 = icmp sgt i64 %12, 0
  br i1 %16, label %while.entry.i49, label %MapIterator_string_PropId__next.exit53.loopexit

MapIterator_string_PropId__next.exit53.loopexit:  ; preds = %ifend.i52, %while.entry.i49
  %17 = phi i64 [ %15, %ifend.i52 ], [ %12, %while.entry.i49 ]
  store ptr %incdec.ptr.i47, ptr %memberidx1.i.i56, align 8
  br label %MapIterator_string_PropId__next.exit53

MapIterator_string_PropId__next.exit53:           ; preds = %MapIterator_string_PropId__next.exit53.loopexit, %for.entry
  %18 = phi i64 [ %17, %MapIterator_string_PropId__next.exit53.loopexit ], [ %10, %for.entry ]
  %memberidx1.i.i56.promoted66 = phi ptr [ %incdec.ptr.i47, %MapIterator_string_PropId__next.exit53.loopexit ], [ %7, %for.entry ]
  %storemerge63 = icmp slt i64 %9, 1
  br i1 %storemerge63, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit53
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx5 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx11 = getelementptr inbounds %Class, ptr %2, i64 0, i32 4
  %memberidx14 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit
  %19 = phi i64 [ %18, %for.body.lr.ph ], [ %100, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i.lcssa68 = phi ptr [ %memberidx1.i.i56.promoted66, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa67, %MapIterator_string_PropId__next.exit ]
  %storemerge6164.in = phi i64 [ %9, %for.body.lr.ph ], [ %storemerge6164, %MapIterator_string_PropId__next.exit ]
  %storemerge6164 = add nsw i64 %storemerge6164.in, -1
  %entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa68, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx2 = getelementptr inbounds %MapEntry_string_PropId_, ptr %entry.0, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i39 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i39, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %3, align 8
  %28 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i.i.i40 = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i.i.i40, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i41 = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i.i.i41, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %29 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = call ptr %29(ptr nonnull %28)
  %31 = load i64, ptr %20, align 4
  %memberidx3.i43 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %32 = load i64, ptr %memberidx3.i43, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %4, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i44 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i44, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %36 = load ptr, ptr %memberidx4, align 8
  %37 = load ptr, ptr %memberidx.i39, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i.i, align 8
  %39 = load i64, ptr %37, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %42, i64 0, i32 3
  %43 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %44 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  %48 = load i64, ptr %20, align 4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %if.entry.i, label %ifend.i38

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i36 = getelementptr inbounds %Class, ptr %47, i64 0, i32 5
  %50 = load ptr, ptr %memberidx1.i36, align 8
  %51 = load i64, ptr %memberidx3.i43, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %memberidx.i12.i, align 8
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  %54 = load ptr, ptr %53, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %54, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i38:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %47, i64 0, i32 4
  %55 = load ptr, ptr %memberidx4.i, align 8
  %56 = load i64, ptr %memberidx3.i43, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i11.i, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %59, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i38
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i38 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %60 = load i64, ptr %common.ret.op.i, align 4
  %61 = icmp eq i64 %60, 20
  br i1 %61, label %if.entry.i59, label %is_object.exit

if.entry.i59:                                     ; preds = %get_class_prop_type.exit, %if.entry.i59
  %.tr5.i = phi ptr [ %62, %if.entry.i59 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i58 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %62 = load ptr, ptr %memberidx1.i58, align 8
  %63 = load i64, ptr %62, align 4
  %64 = icmp eq i64 %63, 20
  br i1 %64, label %if.entry.i59, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i59, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %60, %get_class_prop_type.exit ], [ %63, %if.entry.i59 ]
  %65 = icmp eq i64 %.lcssa.i, 11
  %66 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %common.ret.op.i, i1 %65)
  %67 = load ptr, ptr %memberidx5, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx6 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %68, i64 0, i32 5
  %69 = load ptr, ptr %memberidx6, align 8
  %70 = call ptr %69(ptr nonnull %67)
  %71 = load ptr, ptr %21, align 8
  %memberidx7 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx7, align 8
  %73 = call ptr %72(ptr nonnull %21)
  %74 = alloca ptr, align 8
  %75 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %74, ptr nonnull @104, ptr %70, ptr %73)
  %76 = load ptr, ptr %74, align 8
  %77 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i33 = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i33, align 8
  %memberidx1.i34 = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 %75, ptr %memberidx1.i34, align 4
  %memberidx2.i35 = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 %75, ptr %memberidx2.i35, align 4
  tail call void @free(ptr %70)
  tail call void @free(ptr %73)
  %78 = load i64, ptr %20, align 4
  %79 = icmp eq i64 %78, 0
  %80 = load ptr, ptr %0, align 8
  %81 = load ptr, ptr %77, align 8
  %memberidx1.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %81, i64 0, i32 5
  %82 = load ptr, ptr %memberidx1.i, align 8
  %83 = call ptr %82(ptr nonnull %77)
  br i1 %79, label %if.entry, label %else

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit53
  tail call void @free(ptr nonnull %6)
  ret void

if.entry:                                         ; preds = %is_object.exit
  %84 = call ptr @LLVMAddFunction(ptr %80, ptr %83, ptr %66)
  br label %ifend

else:                                             ; preds = %is_object.exit
  %85 = call ptr @LLVMAddGlobal(ptr %80, ptr %66, ptr %83)
  %86 = load ptr, ptr %memberidx11, align 8
  %87 = load i64, ptr %memberidx3.i43, align 4
  %memberidx.i32 = getelementptr inbounds %Array_ClassField_, ptr %86, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i32, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %memberidx13 = getelementptr inbounds %ClassField, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx13, align 8
  %92 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr null, ptr %91)
  call void @LLVMSetInitializer(ptr %85, ptr %92)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %static_prop_value.0 = phi ptr [ %84, %if.entry ], [ %85, %else ]
  %93 = load ptr, ptr %memberidx14, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %93, ptr nonnull %35, ptr %static_prop_value.0)
  %94 = add nsw i64 %19, -1
  store i64 %94, ptr %memberidx2.i.i57, align 4
  %95 = icmp sgt i64 %19, 0
  br i1 %95, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %ifend, %ifend.i
  %96 = phi i64 [ %99, %ifend.i ], [ %94, %ifend ]
  %97 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa68, %ifend ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %97, i64 1
  %98 = load ptr, ptr %97, align 8
  %.not.i = icmp eq ptr %98, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %99 = add nsw i64 %96, -1
  store i64 %99, ptr %memberidx2.i.i57, align 4
  %.not = icmp eq i64 %96, 0
  br i1 %.not, label %MapIterator_string_PropId__next.exit, label %while.entry.i

MapIterator_string_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend
  %100 = phi i64 [ %94, %ifend ], [ %96, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa67 = phi ptr [ %incdec.ptr.i.lcssa68, %ifend ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge6164.in, 2
  br i1 %storemerge, label %for.end, label %for.body
}

define internal fastcc void @CodeGen_codegen_function(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Function, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load ptr, ptr %5, align 8
  %memberidx1 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = tail call ptr %7(ptr nonnull %5)
  %9 = load ptr, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %Function, ptr %1, i64 0, i32 4
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %10, i1 false)
  %12 = tail call ptr @LLVMAddFunction(ptr %9, ptr %8, ptr %11)
  %13 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %13, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %13, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %13, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i.i, align 4
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %15, i64 %16, i64 %17)
  %19 = load ptr, ptr %4, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %14, ptr nonnull %20, ptr %12)
  %memberidx5 = getelementptr inbounds %Function, ptr %1, i64 0, i32 6
  %21 = load i1, ptr %memberidx5, align 1
  br i1 %21, label %if.entry, label %ifend

common.ret:                                       ; preds = %CodeGen_codegen_block.exit, %if.entry
  ret void

if.entry:                                         ; preds = %2
  call void @LLVMSetLinkage(ptr %12, i64 0)
  br label %common.ret

ifend:                                            ; preds = %2
  %22 = call ptr @LLVMCreateBuilder()
  %23 = call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @80)
  call void @LLVMPositionBuilderAtEnd(ptr %22, ptr %23)
  %memberidx6 = getelementptr inbounds %Function, ptr %1, i64 0, i32 5
  %24 = load ptr, ptr %memberidx6, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %22, ptr %24)
  %memberidx7 = getelementptr inbounds %Function, ptr %1, i64 0, i32 2
  %25 = load ptr, ptr %memberidx7, align 8
  %memberidx860 = getelementptr inbounds %Array_FunctionArg_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx860, align 4
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %for.body, label %for.end

for.body:                                         ; preds = %ifend, %Map_string_LLVMValueRef____getitem__.exit
  %28 = phi ptr [ %66, %Map_string_LLVMValueRef____getitem__.exit ], [ %25, %ifend ]
  %i.061 = phi i64 [ %65, %Map_string_LLVMValueRef____getitem__.exit ], [ 0, %ifend ]
  %memberidx.i41 = getelementptr inbounds %Array_FunctionArg_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i41, align 8
  %30 = getelementptr inbounds ptr, ptr %29, i64 %i.061
  %31 = load ptr, ptr %30, align 8
  %memberidx10 = getelementptr inbounds %FunctionArg, ptr %31, i64 0, i32 4
  %32 = load ptr, ptr %memberidx10, align 8
  %33 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i43 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i.i43, align 4
  %35 = load i64, ptr %32, align 4
  %memberidx2.i.i44 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %36 = load i64, ptr %memberidx2.i.i44, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %34, i64 %35, i64 %36)
  %38 = load ptr, ptr %3, align 8
  %39 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i.i45 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i.i45, align 8
  %memberidx1.i.i.i46 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx1.i.i.i46, align 4
  %memberidx2.i.i.i47 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 %37, ptr %memberidx2.i.i.i47, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %40 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i48 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %33, i64 0, i32 1
  %41 = load i64, ptr %memberidx.i48, align 4
  %42 = urem i64 %40, %41
  %43 = load ptr, ptr %33, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  %.not.i = icmp eq ptr %45, null
  br i1 %.not.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %for.body, %else.i
  %46 = phi ptr [ %56, %else.i ], [ %43, %for.body ]
  %47 = phi i64 [ %57, %else.i ], [ %41, %for.body ]
  %48 = phi ptr [ %61, %else.i ], [ %45, %for.body ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %42, %for.body ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i49 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i49, align 4
  %51 = load i64, ptr %memberidx1.i.i.i46, align 4
  %.not.i.i = icmp eq i64 %50, %51
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i50 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i50, align 8
  %53 = load ptr, ptr %memberidx.i.i.i45, align 8
  %54 = call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i48, align 4
  %.pre62 = load ptr, ptr %33, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre63.pre = load ptr, ptr %33, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre63.pre, i64 %hash.0.i
  %.pre64.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre64.pre, null
  br i1 %.not25.i, label %Map_string_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre62, %ifend.i.i.else.i_crit_edge ], [ %46, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %47, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre64.pre, i64 0, i32 1
  %62 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %for.body, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %62, %if.entry7.i ], [ null, %while.end.i ], [ null, %for.body ], [ null, %else.i ]
  %63 = call ptr @LLVMGetParam(ptr %12, i64 %i.061)
  %64 = call ptr @LLVMBuildStore(ptr %22, ptr %63, ptr %common.ret.op.i)
  %65 = add nuw nsw i64 %i.061, 1
  %66 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_FunctionArg_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx8, align 4
  %68 = icmp slt i64 %65, %67
  br i1 %68, label %for.body, label %for.end

for.end:                                          ; preds = %Map_string_LLVMValueRef____getitem__.exit, %ifend
  %memberidx11 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %69 = load ptr, ptr %memberidx11, align 8
  store ptr %12, ptr %memberidx11, align 8
  %memberidx13 = getelementptr inbounds %Function, ptr %1, i64 0, i32 3
  %70 = load ptr, ptr %memberidx13, align 8
  %memberidx.i52 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %71 = load i1, ptr %memberidx.i52, align 1
  store i1 false, ptr %memberidx.i52, align 1
  %72 = load ptr, ptr %70, align 8
  %73 = call ptr @malloc(i32 25)
  %memberidx.i.i53 = getelementptr inbounds %Array_Statement_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i53, align 8
  %memberidx1.i.i54 = getelementptr inbounds %Array_Statement_, ptr %72, i64 0, i32 2
  %75 = load i64, ptr %memberidx1.i.i54, align 4
  store i1 false, ptr %73, align 1
  %memberidx1.i.i.i55 = getelementptr inbounds %ArrayIterator_Statement_, ptr %73, i64 0, i32 1
  %memberidx2.i.i.i56 = getelementptr inbounds %ArrayIterator_Statement_, ptr %73, i64 0, i32 3
  store ptr %74, ptr %memberidx2.i.i.i56, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %73, i64 0, i32 2
  store i64 %75, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i55, align 4
  %76 = icmp slt i64 %75, 1
  br i1 %76, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %77 = phi i64 [ %78, %for.body.i ], [ 1, %for.end ]
  %statement.0.i59.in = phi ptr [ %79, %for.body.i ], [ %74, %for.end ]
  %statement.0.i59 = load ptr, ptr %statement.0.i59.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %22, ptr %statement.0.i59)
  %78 = add nuw nsw i64 %77, 1
  store i64 %78, ptr %memberidx1.i.i.i55, align 4
  %79 = getelementptr inbounds ptr, ptr %74, i64 %77
  %.not = icmp slt i64 %77, %75
  br i1 %.not, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.end
  call void @free(ptr nonnull %73)
  %memberidx4.i = getelementptr inbounds %Block, ptr %70, i64 0, i32 4
  %80 = load ptr, ptr %memberidx4.i, align 8
  %.not.i57 = icmp eq ptr %80, null
  br i1 %.not.i57, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %81 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %22, ptr nonnull %80)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %71, ptr %memberidx.i52, align 1
  call void @LLVMDisposeBuilder(ptr %22)
  store ptr %69, ptr %memberidx11, align 8
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_LLVMTypeRef__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = getelementptr inbounds ptr, ptr %4, i64 %2
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_LLVMTypeRef__find(ptr nocapture readonly %0, ptr readnone %1) #8 {
for.entry:
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %8, %ifend ]
  %5 = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %8 = add nuw nsw i64 %i.06, 1
  %9 = icmp slt i64 %8, %2
  br i1 %9, label %for.body, label %common.ret
}

; Function Attrs: nounwind
define internal void @Array_LLVMTypeRef__ensure_capacity(ptr nocapture %0, i64 %1) #9 {
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp slt i64 %3, %1
  br i1 %4, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %2
  %memberidx2.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %.pre = load ptr, ptr %memberidx2.i, align 8
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %5 = phi ptr [ %.pre, %while.entry.preheader ], [ %9, %while.entry ]
  %6 = phi i64 [ %3, %while.entry.preheader ], [ %10, %while.entry ]
  %7 = shl nuw i64 %6, 1
  store i64 %7, ptr %memberidx, align 4
  %8 = shl i64 %6, 4
  %9 = tail call ptr @realloc(ptr %5, i64 %8)
  store ptr %9, ptr %memberidx2.i, align 8
  %10 = load i64, ptr %memberidx, align 4
  %11 = icmp slt i64 %10, %1
  br i1 %11, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %2
  ret void
}

define internal fastcc void @CodeGen_declare_class_props(ptr nocapture %0, ptr nocapture %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
for.entry:
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %6, align 8
  %memberidx.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %6, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %8, align 8
  %memberidx.i147 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %8, i64 0, i32 2
  %memberidx1.i148 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i148, align 4
  %memberidx2.i149 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i149, align 8
  store i64 0, ptr %memberidx.i147, align 4
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %10, align 8
  %memberidx.i150 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %10, i64 0, i32 2
  %memberidx1.i151 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i151, align 4
  %memberidx2.i152 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i152, align 8
  store i64 0, ptr %memberidx.i150, align 4
  %memberidx6 = getelementptr inbounds %Class, ptr %2, i64 0, i32 6
  %12 = load ptr, ptr %memberidx6, align 8
  %13 = tail call ptr @malloc(i32 25)
  %14 = load ptr, ptr %12, align 8
  %memberidx1.i153 = getelementptr inbounds %Map_string_PropId_, ptr %12, i64 0, i32 1
  %15 = load i64, ptr %memberidx1.i153, align 4
  %memberidx2.i154 = getelementptr inbounds %Map_string_PropId_, ptr %12, i64 0, i32 2
  %16 = load i64, ptr %memberidx2.i154, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %13, i64 0, i32 1
  store ptr %14, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %13, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %13, i64 0, i32 3
  %17 = add nsw i64 %15, -1
  store i64 %17, ptr %memberidx2.i.i, align 4
  %18 = icmp sgt i64 %15, 0
  br i1 %18, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %19 = phi i64 [ %22, %ifend.i ], [ %17, %for.entry ]
  %20 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %14, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %20, i64 1
  %21 = load ptr, ptr %20, align 8
  %.not.i = icmp eq ptr %21, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %22 = add nsw i64 %19, -1
  store i64 %22, ptr %memberidx2.i.i, align 4
  %23 = icmp sgt i64 %19, 0
  br i1 %23, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %for.entry
  %storemerge310325 = add nsw i64 %16, -1
  store i64 %storemerge310325, ptr %memberidx3.i.i, align 4
  %storemerge326 = icmp slt i64 %16, 1
  store i1 %storemerge326, ptr %13, align 1
  br i1 %storemerge326, label %for.end.thread, label %for.body.lr.ph

for.end.thread:                                   ; preds = %MapIterator_string_PropId__next.exit
  tail call void @free(ptr nonnull %13)
  br label %ifend61

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx13 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 2
  %memberidx25 = getelementptr inbounds %Class, ptr %2, i64 0, i32 5
  %memberidx31 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx51 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 1
  %memberidx38 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit194
  %.pn = load ptr, ptr %memberidx1.i.i, align 8
  %entry.0.in = getelementptr inbounds ptr, ptr %.pn, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx8 = getelementptr inbounds %MapEntry_string_PropId_, ptr %entry.0, i64 0, i32 1
  %24 = load ptr, ptr %memberidx8, align 8
  %25 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i157 = getelementptr inbounds %PropId, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i157, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %27 = load i64, ptr %26, align 4
  %memberidx1.i.i158 = getelementptr inbounds %TypeId, ptr %26, i64 0, i32 1
  %28 = load i64, ptr %memberidx1.i.i158, align 4
  %memberidx2.i.i159 = getelementptr inbounds %TypeId, ptr %26, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i.i159, align 4
  %30 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %27, i64 %28, i64 %29)
  %31 = load ptr, ptr %4, align 8
  %32 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 %30, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 %30, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %33 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %34 = call ptr %33(ptr nonnull %32)
  %35 = load i64, ptr %24, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %24, i64 0, i32 2
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @259, ptr %34, i64 %35, i64 %36)
  %38 = load ptr, ptr %5, align 8
  %39 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 %37, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %34)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %40 = load ptr, ptr %memberidx10, align 8
  %41 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i.i.i162 = getelementptr inbounds %Program, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i.i162, align 8
  %43 = load i64, ptr %41, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %memberidx2.i.i.i163 = getelementptr inbounds %Module, ptr %46, i64 0, i32 3
  %47 = load ptr, ptr %memberidx2.i.i.i163, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %41, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %52 = load i64, ptr %24, align 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %get_vtable_index.exit.thread, label %get_vtable_index.exit

get_vtable_index.exit.thread:                     ; preds = %for.body
  %memberidx1.i164 = getelementptr inbounds %Class, ptr %51, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i164, align 8
  %55 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i12.i, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8
  %memberidx3.i166 = getelementptr inbounds %ClassMethod, ptr %58, i64 0, i32 4
  %common.ret.op.i302 = load ptr, ptr %memberidx3.i166, align 8
  %memberidx3.i179 = getelementptr inbounds %ClassMethod, ptr %58, i64 0, i32 9
  %common.ret.op.i175307 = load i64, ptr %memberidx3.i179, align 4
  br label %else

get_vtable_index.exit:                            ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 4
  %59 = load ptr, ptr %memberidx4.i, align 8
  %60 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i11.i, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %63, i64 0, i32 4
  %common.ret.op.i = load ptr, ptr %memberidx6.i, align 8
  %memberidx6.i184 = getelementptr inbounds %ClassField, ptr %63, i64 0, i32 6
  %common.ret.op.i175 = load i64, ptr %memberidx6.i184, align 4
  %64 = icmp eq i64 %52, 1
  br i1 %64, label %if.entry, label %else

for.incr:                                         ; preds = %resize_type_array.exit, %resize_type_array.exit276, %if.entry35
  %65 = load i64, ptr %memberidx2.i.i, align 4
  %66 = add nsw i64 %65, -1
  store i64 %66, ptr %memberidx2.i.i, align 4
  %67 = icmp sgt i64 %65, 0
  br i1 %67, label %while.entry.i190.preheader, label %MapIterator_string_PropId__next.exit194

while.entry.i190.preheader:                       ; preds = %for.incr
  %memberidx1.i.i.promoted = load ptr, ptr %memberidx1.i.i, align 8
  br label %while.entry.i190

while.entry.i190:                                 ; preds = %while.entry.i190.preheader, %ifend.i193
  %68 = phi i64 [ %66, %while.entry.i190.preheader ], [ %71, %ifend.i193 ]
  %69 = phi ptr [ %memberidx1.i.i.promoted, %while.entry.i190.preheader ], [ %incdec.ptr.i188, %ifend.i193 ]
  %incdec.ptr.i188 = getelementptr inbounds ptr, ptr %69, i64 1
  %70 = load ptr, ptr %69, align 8
  %.not.i189 = icmp eq ptr %70, null
  br i1 %.not.i189, label %ifend.i193, label %MapIterator_string_PropId__next.exit194.loopexit

ifend.i193:                                       ; preds = %while.entry.i190
  %71 = add nsw i64 %68, -1
  store i64 %71, ptr %memberidx2.i.i, align 4
  %72 = icmp sgt i64 %68, 0
  br i1 %72, label %while.entry.i190, label %MapIterator_string_PropId__next.exit194.loopexit

MapIterator_string_PropId__next.exit194.loopexit: ; preds = %ifend.i193, %while.entry.i190
  store ptr %incdec.ptr.i188, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit194

MapIterator_string_PropId__next.exit194:          ; preds = %MapIterator_string_PropId__next.exit194.loopexit, %for.incr
  %73 = load i64, ptr %memberidx3.i.i, align 4
  %storemerge310 = add nsw i64 %73, -1
  store i64 %storemerge310, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %73, 1
  store i1 %storemerge, ptr %13, align 1
  br i1 %storemerge, label %for.end, label %for.body

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit194
  %.pre337 = load i64, ptr %memberidx.i147, align 4
  tail call void @free(ptr nonnull %13)
  %74 = icmp sgt i64 %.pre337, 0
  br i1 %74, label %if.entry59, label %ifend61

if.entry:                                         ; preds = %get_vtable_index.exit
  %75 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 true)
  %76 = load ptr, ptr %memberidx13, align 8
  call fastcc void @Map_string_uint____setitem__(ptr %76, ptr nonnull %39, i64 %common.ret.op.i175)
  %77 = load i64, ptr %memberidx.i150, align 4
  %.not.i196311 = icmp sgt i64 %77, %common.ret.op.i175
  br i1 %.not.i196311, label %if.entry.resize_type_array.exit_crit_edge, label %for.body.i.lr.ph

if.entry.resize_type_array.exit_crit_edge:        ; preds = %if.entry
  %.pre = load ptr, ptr %memberidx2.i152, align 8
  br label %resize_type_array.exit

for.body.i.lr.ph:                                 ; preds = %if.entry
  %memberidx1.i151.promoted = load i64, ptr %memberidx1.i151, align 4
  %memberidx2.i152.promoted = load ptr, ptr %memberidx2.i152, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_LLVMTypeRef____sl__.exit.i
  %78 = phi ptr [ %memberidx2.i152.promoted, %for.body.i.lr.ph ], [ %84, %Array_LLVMTypeRef____sl__.exit.i ]
  %79 = phi i64 [ %memberidx1.i151.promoted, %for.body.i.lr.ph ], [ %85, %Array_LLVMTypeRef____sl__.exit.i ]
  %80 = phi i64 [ %77, %for.body.i.lr.ph ], [ %86, %Array_LLVMTypeRef____sl__.exit.i ]
  %i.0.i312 = phi i64 [ %77, %for.body.i.lr.ph ], [ %88, %Array_LLVMTypeRef____sl__.exit.i ]
  %.not.i.i = icmp slt i64 %80, %79
  br i1 %.not.i.i, label %Array_LLVMTypeRef____sl__.exit.i, label %if.entry.i.i

if.entry.i.i:                                     ; preds = %for.body.i
  %81 = shl nuw i64 %79, 1
  %82 = shl i64 %79, 4
  %83 = call ptr @realloc(ptr %78, i64 %82)
  br label %Array_LLVMTypeRef____sl__.exit.i

Array_LLVMTypeRef____sl__.exit.i:                 ; preds = %if.entry.i.i, %for.body.i
  %84 = phi ptr [ %83, %if.entry.i.i ], [ %78, %for.body.i ]
  %85 = phi i64 [ %81, %if.entry.i.i ], [ %79, %for.body.i ]
  %86 = add nsw i64 %80, 1
  %87 = getelementptr inbounds ptr, ptr %84, i64 %80
  store ptr null, ptr %87, align 8
  %88 = add nsw i64 %i.0.i312, 1
  %.not.i196.not = icmp slt i64 %i.0.i312, %common.ret.op.i175
  br i1 %.not.i196.not, label %for.body.i, label %for.cond.i.resize_type_array.exit_crit_edge

for.cond.i.resize_type_array.exit_crit_edge:      ; preds = %Array_LLVMTypeRef____sl__.exit.i
  store i64 %86, ptr %memberidx.i150, align 4
  store i64 %85, ptr %memberidx1.i151, align 4
  store ptr %84, ptr %memberidx2.i152, align 8
  br label %resize_type_array.exit

resize_type_array.exit:                           ; preds = %if.entry.resize_type_array.exit_crit_edge, %for.cond.i.resize_type_array.exit_crit_edge
  %89 = phi ptr [ %.pre, %if.entry.resize_type_array.exit_crit_edge ], [ %84, %for.cond.i.resize_type_array.exit_crit_edge ]
  %90 = getelementptr inbounds ptr, ptr %89, i64 %common.ret.op.i175
  store ptr %75, ptr %90, align 8
  br label %for.incr

else:                                             ; preds = %get_vtable_index.exit.thread, %get_vtable_index.exit
  %common.ret.op.i175309 = phi i64 [ %common.ret.op.i175307, %get_vtable_index.exit.thread ], [ %common.ret.op.i175, %get_vtable_index.exit ]
  %common.ret.op.i303308 = phi ptr [ %common.ret.op.i302, %get_vtable_index.exit.thread ], [ %common.ret.op.i, %get_vtable_index.exit ]
  %91 = load ptr, ptr %2, align 8
  %92 = icmp eq ptr %41, %91
  br i1 %92, label %if.entry16, label %else17

if.entry16:                                       ; preds = %else
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %93, align 8
  %memberidx.i202 = getelementptr inbounds %Array_Type_, ptr %93, i64 0, i32 2
  store i64 0, ptr %memberidx.i202, align 4
  %memberidx1.i203 = getelementptr inbounds %Array_Type_, ptr %93, i64 0, i32 3
  store i64 8, ptr %memberidx1.i203, align 4
  %memberidx2.i204 = getelementptr inbounds %Array_Type_, ptr %93, i64 0, i32 1
  %94 = call ptr @malloc(i32 64)
  store ptr %94, ptr %memberidx2.i204, align 8
  %95 = tail call ptr @malloc(i32 16)
  %96 = load ptr, ptr %2, align 8
  store i64 11, ptr %95, align 4
  %memberidx.i205 = getelementptr inbounds %ObjectType, ptr %95, i64 0, i32 1
  store ptr %96, ptr %memberidx.i205, align 8
  store ptr %95, ptr %94, align 8
  store i64 1, ptr %memberidx.i202, align 4
  %memberidx22 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i303308, i64 0, i32 1
  %97 = load ptr, ptr %memberidx22, align 8
  %98 = load ptr, ptr %93, align 8
  %memberidx.i206 = getelementptr inbounds { ptr, ptr, ptr }, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i206, align 8
  %memberidx2.i208 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 2
  %100 = load i64, ptr %memberidx2.i208, align 4
  %101 = add nuw i64 %100, 1
  call void %99(ptr nonnull %93, i64 %101)
  %102 = load ptr, ptr %memberidx2.i204, align 8
  %103 = load i64, ptr %memberidx.i202, align 4
  %104 = getelementptr inbounds ptr, ptr %102, i64 %103
  %memberidx5.i210 = getelementptr inbounds %Array_Type_, ptr %97, i64 0, i32 1
  %105 = load ptr, ptr %memberidx5.i210, align 8
  %106 = load i64, ptr %memberidx2.i208, align 4
  %107 = shl i64 %106, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %104, ptr align 8 %105, i64 %107, i1 false)
  %108 = load i64, ptr %memberidx.i202, align 4
  %109 = load i64, ptr %memberidx2.i208, align 4
  %110 = add nuw i64 %109, %108
  store i64 %110, ptr %memberidx.i202, align 4
  %111 = load ptr, ptr %memberidx22, align 8
  %memberidx.i211 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 1
  %112 = load ptr, ptr %memberidx.i211, align 8
  call void @free(ptr %112)
  tail call void @free(ptr %111)
  store ptr %93, ptr %memberidx22, align 8
  %113 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i303308, i1 false)
  %114 = load ptr, ptr %memberidx25, align 8
  %115 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i212 = getelementptr inbounds %Array_ClassMethod_, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i212, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx27 = getelementptr inbounds %ClassMethod, ptr %118, i64 0, i32 7
  %119 = load i1, ptr %memberidx27, align 1
  br i1 %119, label %ifend30, label %if.entry28

else17:                                           ; preds = %else
  %120 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i303308, i1 false)
  %121 = load ptr, ptr %memberidx10, align 8
  %122 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i.i214 = getelementptr inbounds %Program, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i.i214, align 8
  %124 = load i64, ptr %122, align 4
  %memberidx.i.i.i215 = getelementptr inbounds %Array_Module_, ptr %123, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i.i.i215, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %memberidx2.i.i216 = getelementptr inbounds %Module, ptr %127, i64 0, i32 3
  %128 = load ptr, ptr %memberidx2.i.i216, align 8
  %memberidx3.i.i217 = getelementptr inbounds %TypeId, ptr %122, i64 0, i32 2
  %129 = load i64, ptr %memberidx3.i.i217, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i5.i.i, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  %133 = load ptr, ptr %0, align 8
  %memberidx41 = getelementptr inbounds %Class, ptr %132, i64 0, i32 1
  %134 = load ptr, ptr %memberidx41, align 8
  %135 = load ptr, ptr %134, align 8
  %memberidx42 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %135, i64 0, i32 5
  %136 = load ptr, ptr %memberidx42, align 8
  %137 = call ptr %136(ptr nonnull %134)
  %138 = load ptr, ptr %25, align 8
  %memberidx43 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %138, i64 0, i32 5
  %139 = load ptr, ptr %memberidx43, align 8
  %140 = call ptr %139(ptr nonnull %25)
  %141 = alloca ptr, align 8
  %142 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %141, ptr nonnull @104, ptr %137, ptr %140)
  %143 = load ptr, ptr %141, align 8
  %144 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %144, align 8
  %memberidx.i218 = getelementptr inbounds %string, ptr %144, i64 0, i32 1
  store ptr %143, ptr %memberidx.i218, align 8
  %memberidx1.i219 = getelementptr inbounds %string, ptr %144, i64 0, i32 2
  store i64 %142, ptr %memberidx1.i219, align 4
  %memberidx2.i220 = getelementptr inbounds %string, ptr %144, i64 0, i32 3
  store i64 %142, ptr %memberidx2.i220, align 4
  tail call void @free(ptr %137)
  tail call void @free(ptr %140)
  %145 = load ptr, ptr %144, align 8
  %memberidx44 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %145, i64 0, i32 5
  %146 = load ptr, ptr %memberidx44, align 8
  %147 = call ptr %146(ptr nonnull %144)
  %148 = call ptr @LLVMGetNamedFunction(ptr %133, ptr %147)
  %149 = icmp eq ptr %148, null
  br i1 %149, label %if.entry45, label %ifend18

ifend18:                                          ; preds = %if.entry45, %else17, %get_class_prop_visibility.exit
  %llvm_method_type.0 = phi ptr [ %113, %get_class_prop_visibility.exit ], [ %120, %if.entry45 ], [ %120, %else17 ]
  %llvm_method_val.0 = phi ptr [ %llvm_method_val.1, %get_class_prop_visibility.exit ], [ null, %if.entry45 ], [ %148, %else17 ]
  %prop_owner.0 = phi ptr [ %2, %get_class_prop_visibility.exit ], [ %132, %if.entry45 ], [ %132, %else17 ]
  %150 = load ptr, ptr %memberidx51, align 8
  call fastcc void @Map_string_uint____setitem__(ptr %150, ptr nonnull %39, i64 %common.ret.op.i175309)
  %memberidx52 = getelementptr inbounds %Class, ptr %prop_owner.0, i64 0, i32 5
  %151 = load ptr, ptr %memberidx52, align 8
  %152 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i221 = getelementptr inbounds %Array_ClassMethod_, ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %memberidx.i221, align 8
  %154 = getelementptr inbounds ptr, ptr %153, i64 %152
  %155 = load ptr, ptr %154, align 8
  %memberidx54 = getelementptr inbounds %ClassMethod, ptr %155, i64 0, i32 7
  %156 = load i1, ptr %memberidx54, align 1
  br i1 %156, label %ifend57, label %if.entry55

if.entry28:                                       ; preds = %if.entry16
  %157 = load ptr, ptr %memberidx31, align 8
  %158 = load ptr, ptr %157, align 8
  %memberidx32 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %158, i64 0, i32 5
  %159 = load ptr, ptr %memberidx32, align 8
  %160 = call ptr %159(ptr nonnull %157)
  %161 = load ptr, ptr %25, align 8
  %memberidx33 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %161, i64 0, i32 5
  %162 = load ptr, ptr %memberidx33, align 8
  %163 = call ptr %162(ptr nonnull %25)
  %164 = alloca ptr, align 8
  %165 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %164, ptr nonnull @104, ptr %160, ptr %163)
  %166 = load ptr, ptr %164, align 8
  %167 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %167, align 8
  %memberidx.i222 = getelementptr inbounds %string, ptr %167, i64 0, i32 1
  store ptr %166, ptr %memberidx.i222, align 8
  %memberidx1.i223 = getelementptr inbounds %string, ptr %167, i64 0, i32 2
  store i64 %165, ptr %memberidx1.i223, align 4
  %memberidx2.i224 = getelementptr inbounds %string, ptr %167, i64 0, i32 3
  store i64 %165, ptr %memberidx2.i224, align 4
  tail call void @free(ptr %160)
  tail call void @free(ptr %163)
  %168 = load ptr, ptr %0, align 8
  %169 = load ptr, ptr %167, align 8
  %memberidx1.i225 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %169, i64 0, i32 5
  %170 = load ptr, ptr %memberidx1.i225, align 8
  %171 = call ptr %170(ptr nonnull %167)
  %172 = call ptr @LLVMAddFunction(ptr %168, ptr %171, ptr %113)
  br label %ifend30

ifend30:                                          ; preds = %if.entry16, %if.entry28
  %llvm_method_val.1 = phi ptr [ %172, %if.entry28 ], [ null, %if.entry16 ]
  %173 = load ptr, ptr %memberidx10, align 8
  %174 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i.i.i227 = getelementptr inbounds %Program, ptr %173, i64 0, i32 1
  %175 = load ptr, ptr %memberidx.i.i.i227, align 8
  %176 = load i64, ptr %174, align 4
  %memberidx.i.i.i.i228 = getelementptr inbounds %Array_Module_, ptr %175, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i.i.i.i228, align 8
  %178 = getelementptr inbounds ptr, ptr %177, i64 %176
  %179 = load ptr, ptr %178, align 8
  %memberidx2.i.i.i229 = getelementptr inbounds %Module, ptr %179, i64 0, i32 3
  %180 = load ptr, ptr %memberidx2.i.i.i229, align 8
  %memberidx3.i.i.i230 = getelementptr inbounds %TypeId, ptr %174, i64 0, i32 2
  %181 = load i64, ptr %memberidx3.i.i.i230, align 4
  %memberidx.i5.i.i.i231 = getelementptr inbounds %Array_Class_, ptr %180, i64 0, i32 1
  %182 = load ptr, ptr %memberidx.i5.i.i.i231, align 8
  %183 = getelementptr inbounds ptr, ptr %182, i64 %181
  %184 = load ptr, ptr %183, align 8
  %185 = load i64, ptr %24, align 4
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %if.entry.i238, label %ifend.i243

if.entry.i238:                                    ; preds = %ifend30
  %memberidx1.i234 = getelementptr inbounds %Class, ptr %184, i64 0, i32 5
  %187 = load ptr, ptr %memberidx1.i234, align 8
  %188 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i12.i236 = getelementptr inbounds %Array_ClassMethod_, ptr %187, i64 0, i32 1
  %189 = load ptr, ptr %memberidx.i12.i236, align 8
  %190 = getelementptr inbounds ptr, ptr %189, i64 %188
  %191 = load ptr, ptr %190, align 8
  %memberidx3.i237 = getelementptr inbounds %ClassMethod, ptr %191, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i243:                                       ; preds = %ifend30
  %memberidx4.i239 = getelementptr inbounds %Class, ptr %184, i64 0, i32 4
  %192 = load ptr, ptr %memberidx4.i239, align 8
  %193 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i11.i241 = getelementptr inbounds %Array_ClassField_, ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %memberidx.i11.i241, align 8
  %195 = getelementptr inbounds ptr, ptr %194, i64 %193
  %196 = load ptr, ptr %195, align 8
  %memberidx6.i242 = getelementptr inbounds %ClassField, ptr %196, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i238, %ifend.i243
  %common.ret.op.in.i232 = phi ptr [ %memberidx3.i237, %if.entry.i238 ], [ %memberidx6.i242, %ifend.i243 ]
  %common.ret.op.i233 = load i64, ptr %common.ret.op.in.i232, align 4
  %197 = icmp eq i64 %common.ret.op.i233, 1
  br i1 %197, label %if.entry35, label %ifend18

if.entry35:                                       ; preds = %get_class_prop_visibility.exit
  %198 = load ptr, ptr %memberidx38, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %198, ptr nonnull %39, ptr %llvm_method_val.1)
  br label %for.incr

if.entry45:                                       ; preds = %else17
  %199 = load ptr, ptr %memberidx41, align 8
  %200 = load ptr, ptr %199, align 8
  %memberidx49 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %200, i64 0, i32 5
  %201 = load ptr, ptr %memberidx49, align 8
  %202 = call ptr %201(ptr nonnull %199)
  %203 = load ptr, ptr %25, align 8
  %memberidx50 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %203, i64 0, i32 5
  %204 = load ptr, ptr %memberidx50, align 8
  %205 = call ptr %204(ptr nonnull %25)
  %206 = alloca ptr, align 8
  %207 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %206, ptr nonnull @291, ptr %202, ptr %205)
  %208 = load ptr, ptr %206, align 8
  %209 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %209, align 8
  %memberidx.i244 = getelementptr inbounds %string, ptr %209, i64 0, i32 1
  store ptr %208, ptr %memberidx.i244, align 8
  %memberidx1.i245 = getelementptr inbounds %string, ptr %209, i64 0, i32 2
  store i64 %207, ptr %memberidx1.i245, align 4
  %memberidx2.i246 = getelementptr inbounds %string, ptr %209, i64 0, i32 3
  store i64 %207, ptr %memberidx2.i246, align 4
  tail call void @free(ptr %202)
  tail call void @free(ptr %205)
  %210 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %210, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %211 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %211, align 8
  %memberidx.i.i.i247 = getelementptr inbounds %string, ptr %211, i64 0, i32 1
  store ptr %210, ptr %memberidx.i.i.i247, align 8
  %memberidx1.i.i.i248 = getelementptr inbounds %string, ptr %211, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i248, align 4
  %memberidx2.i.i.i249 = getelementptr inbounds %string, ptr %211, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i249, align 4
  %212 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %213 = call ptr %212(ptr nonnull %211)
  %214 = load i64, ptr %memberidx1.i.i.i248, align 4
  %215 = call i64 @write(i64 1, ptr %213, i64 %214)
  %216 = load ptr, ptr %memberidx.i.i.i247, align 8
  call void @free(ptr %216)
  call void @free(ptr %211)
  %217 = load ptr, ptr %209, align 8
  %memberidx.i.i.i297 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %217, i64 0, i32 3
  %218 = load ptr, ptr %memberidx.i.i.i297, align 8
  %219 = call ptr %218(ptr nonnull %209)
  %220 = load i64, ptr %memberidx1.i245, align 4
  %221 = call i64 @write(i64 1, ptr %219, i64 %220)
  %222 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %223 = load ptr, ptr %memberidx.i244, align 8
  call void @free(ptr %223)
  call void @free(ptr %209)
  call void @exit(i64 -1)
  br label %ifend18

if.entry55:                                       ; preds = %ifend18
  %224 = load i64, ptr %memberidx.i, align 4
  %.not.i252315 = icmp sgt i64 %224, %common.ret.op.i175309
  br i1 %.not.i252315, label %if.entry55.resize_value_array.exit_crit_edge, label %for.body.i257.lr.ph

if.entry55.resize_value_array.exit_crit_edge:     ; preds = %if.entry55
  %.pre336 = load ptr, ptr %memberidx2.i, align 8
  br label %resize_value_array.exit

for.body.i257.lr.ph:                              ; preds = %if.entry55
  %memberidx1.i.promoted = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i.promoted = load ptr, ptr %memberidx2.i, align 8
  br label %for.body.i257

for.body.i257:                                    ; preds = %for.body.i257.lr.ph, %Array_LLVMValueRef____sl__.exit.i
  %225 = phi ptr [ %memberidx2.i.promoted, %for.body.i257.lr.ph ], [ %231, %Array_LLVMValueRef____sl__.exit.i ]
  %226 = phi i64 [ %memberidx1.i.promoted, %for.body.i257.lr.ph ], [ %232, %Array_LLVMValueRef____sl__.exit.i ]
  %227 = phi i64 [ %224, %for.body.i257.lr.ph ], [ %233, %Array_LLVMValueRef____sl__.exit.i ]
  %i.0.i251316 = phi i64 [ %224, %for.body.i257.lr.ph ], [ %235, %Array_LLVMValueRef____sl__.exit.i ]
  %.not.i.i256 = icmp slt i64 %227, %226
  br i1 %.not.i.i256, label %Array_LLVMValueRef____sl__.exit.i, label %if.entry.i.i260

if.entry.i.i260:                                  ; preds = %for.body.i257
  %228 = shl nuw i64 %226, 1
  %229 = shl i64 %226, 4
  %230 = call ptr @realloc(ptr %225, i64 %229)
  br label %Array_LLVMValueRef____sl__.exit.i

Array_LLVMValueRef____sl__.exit.i:                ; preds = %if.entry.i.i260, %for.body.i257
  %231 = phi ptr [ %230, %if.entry.i.i260 ], [ %225, %for.body.i257 ]
  %232 = phi i64 [ %228, %if.entry.i.i260 ], [ %226, %for.body.i257 ]
  %233 = add nsw i64 %227, 1
  %234 = getelementptr inbounds ptr, ptr %231, i64 %227
  store ptr null, ptr %234, align 8
  %235 = add nsw i64 %i.0.i251316, 1
  %.not.i252.not = icmp slt i64 %i.0.i251316, %common.ret.op.i175309
  br i1 %.not.i252.not, label %for.body.i257, label %for.cond.i253.resize_value_array.exit_crit_edge

for.cond.i253.resize_value_array.exit_crit_edge:  ; preds = %Array_LLVMValueRef____sl__.exit.i
  store i64 %233, ptr %memberidx.i, align 4
  store i64 %232, ptr %memberidx1.i, align 4
  store ptr %231, ptr %memberidx2.i, align 8
  br label %resize_value_array.exit

resize_value_array.exit:                          ; preds = %if.entry55.resize_value_array.exit_crit_edge, %for.cond.i253.resize_value_array.exit_crit_edge
  %236 = phi ptr [ %.pre336, %if.entry55.resize_value_array.exit_crit_edge ], [ %231, %for.cond.i253.resize_value_array.exit_crit_edge ]
  %237 = getelementptr inbounds ptr, ptr %236, i64 %common.ret.op.i175309
  store ptr %llvm_method_val.0, ptr %237, align 8
  br label %ifend57

ifend57:                                          ; preds = %ifend18, %resize_value_array.exit
  %238 = load i64, ptr %memberidx.i147, align 4
  %.not.i265320 = icmp sgt i64 %238, %common.ret.op.i175309
  br i1 %.not.i265320, label %resize_type_array.exit276, label %for.body.i270.lr.ph

for.body.i270.lr.ph:                              ; preds = %ifend57
  %memberidx1.i148.promoted = load i64, ptr %memberidx1.i148, align 4
  %memberidx2.i149.promoted = load ptr, ptr %memberidx2.i149, align 8
  br label %for.body.i270

for.body.i270:                                    ; preds = %for.body.i270.lr.ph, %Array_LLVMTypeRef____sl__.exit.i275
  %239 = phi ptr [ %memberidx2.i149.promoted, %for.body.i270.lr.ph ], [ %245, %Array_LLVMTypeRef____sl__.exit.i275 ]
  %240 = phi i64 [ %memberidx1.i148.promoted, %for.body.i270.lr.ph ], [ %246, %Array_LLVMTypeRef____sl__.exit.i275 ]
  %241 = phi i64 [ %238, %for.body.i270.lr.ph ], [ %247, %Array_LLVMTypeRef____sl__.exit.i275 ]
  %i.0.i264321 = phi i64 [ %238, %for.body.i270.lr.ph ], [ %249, %Array_LLVMTypeRef____sl__.exit.i275 ]
  %.not.i.i269 = icmp slt i64 %241, %240
  br i1 %.not.i.i269, label %Array_LLVMTypeRef____sl__.exit.i275, label %if.entry.i.i273

if.entry.i.i273:                                  ; preds = %for.body.i270
  %242 = shl nuw i64 %240, 1
  %243 = shl i64 %240, 4
  %244 = call ptr @realloc(ptr %239, i64 %243)
  br label %Array_LLVMTypeRef____sl__.exit.i275

Array_LLVMTypeRef____sl__.exit.i275:              ; preds = %if.entry.i.i273, %for.body.i270
  %245 = phi ptr [ %244, %if.entry.i.i273 ], [ %239, %for.body.i270 ]
  %246 = phi i64 [ %242, %if.entry.i.i273 ], [ %240, %for.body.i270 ]
  %247 = add nsw i64 %241, 1
  %248 = getelementptr inbounds ptr, ptr %245, i64 %241
  store ptr null, ptr %248, align 8
  %249 = add nsw i64 %i.0.i264321, 1
  %.not.i265.not = icmp slt i64 %i.0.i264321, %common.ret.op.i175309
  br i1 %.not.i265.not, label %for.body.i270, label %for.cond.i266.resize_type_array.exit276_crit_edge

for.cond.i266.resize_type_array.exit276_crit_edge: ; preds = %Array_LLVMTypeRef____sl__.exit.i275
  store i64 %247, ptr %memberidx.i147, align 4
  store i64 %246, ptr %memberidx1.i148, align 4
  store ptr %245, ptr %memberidx2.i149, align 8
  br label %resize_type_array.exit276

resize_type_array.exit276:                        ; preds = %for.cond.i266.resize_type_array.exit276_crit_edge, %ifend57
  %250 = call ptr @LLVMPointerType(ptr %llvm_method_type.0, i64 0)
  %251 = load ptr, ptr %memberidx2.i149, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %common.ret.op.i175309
  store ptr %250, ptr %252, align 8
  br label %for.incr

if.entry59:                                       ; preds = %for.end
  %253 = load ptr, ptr %memberidx2.i149, align 8
  %254 = call ptr @LLVMStructType(ptr %253, i64 %.pre337, i1 false)
  %memberidx64 = getelementptr inbounds %Class, ptr %2, i64 0, i32 10
  %255 = load i1, ptr %memberidx64, align 1
  br i1 %255, label %ifend67, label %if.entry65

ifend61:                                          ; preds = %for.end.thread, %for.end, %Array_LLVMTypeRef____sl__.exit
  %256 = load ptr, ptr %3, align 8
  %memberidx.i278 = getelementptr inbounds { ptr, ptr, ptr }, ptr %256, i64 0, i32 1
  %257 = load ptr, ptr %memberidx.i278, align 8
  %memberidx1.i279 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %258 = load i64, ptr %memberidx1.i279, align 4
  %259 = load i64, ptr %memberidx.i150, align 4
  %260 = add nuw i64 %259, %258
  call void %257(ptr nonnull %3, i64 %260)
  %memberidx3.i281 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %261 = load ptr, ptr %memberidx3.i281, align 8
  %262 = load i64, ptr %memberidx1.i279, align 4
  %263 = getelementptr inbounds ptr, ptr %261, i64 %262
  %264 = load ptr, ptr %memberidx2.i152, align 8
  %265 = shl i64 %259, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 536870912 %263, ptr align 8 %264, i64 %265, i1 false)
  %266 = load i64, ptr %memberidx1.i279, align 4
  %267 = add nuw i64 %266, %259
  store i64 %267, ptr %memberidx1.i279, align 4
  call void @free(ptr %264)
  tail call void @free(ptr %10)
  %268 = load ptr, ptr %memberidx2.i149, align 8
  call void @free(ptr %268)
  tail call void @free(ptr nonnull %8)
  %269 = load ptr, ptr %memberidx2.i, align 8
  call void @free(ptr %269)
  tail call void @free(ptr %6)
  ret void

if.entry65:                                       ; preds = %if.entry59
  %memberidx68 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 4
  %270 = load ptr, ptr %0, align 8
  %memberidx70 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %271 = load ptr, ptr %memberidx70, align 8
  %272 = load ptr, ptr %271, align 8
  %memberidx71 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %272, i64 0, i32 5
  %273 = load ptr, ptr %memberidx71, align 8
  %274 = call ptr %273(ptr nonnull %271)
  %275 = alloca ptr, align 8
  %276 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %275, ptr nonnull @292, ptr %274)
  %277 = load ptr, ptr %275, align 8
  %278 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %278, align 8
  %memberidx.i286 = getelementptr inbounds %string, ptr %278, i64 0, i32 1
  store ptr %277, ptr %memberidx.i286, align 8
  %memberidx1.i287 = getelementptr inbounds %string, ptr %278, i64 0, i32 2
  store i64 %276, ptr %memberidx1.i287, align 4
  %memberidx2.i288 = getelementptr inbounds %string, ptr %278, i64 0, i32 3
  store i64 %276, ptr %memberidx2.i288, align 4
  tail call void @free(ptr %274)
  %279 = load ptr, ptr %278, align 8
  %memberidx72 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %279, i64 0, i32 5
  %280 = load ptr, ptr %memberidx72, align 8
  %281 = call ptr %280(ptr nonnull %278)
  %282 = call ptr @LLVMAddGlobal(ptr %270, ptr %254, ptr %281)
  store ptr %282, ptr %memberidx68, align 8
  %283 = load ptr, ptr %memberidx2.i, align 8
  %284 = load i64, ptr %memberidx.i, align 4
  %285 = call ptr @LLVMConstStruct(ptr %283, i64 %284, i1 false)
  %286 = load ptr, ptr %memberidx68, align 8
  call void @LLVMSetInitializer(ptr %286, ptr %285)
  br label %ifend67

ifend67:                                          ; preds = %if.entry59, %if.entry65
  %memberidx76 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 5
  store ptr %254, ptr %memberidx76, align 8
  %287 = call ptr @LLVMPointerType(ptr %254, i64 0)
  %memberidx.i289 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %288 = load i64, ptr %memberidx.i289, align 4
  %memberidx1.i290 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 3
  %289 = load i64, ptr %memberidx1.i290, align 4
  %.not.i291 = icmp slt i64 %288, %289
  br i1 %.not.i291, label %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge, label %if.entry.i294

ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge: ; preds = %ifend67
  %memberidx4.i295.phi.trans.insert = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %.pre339 = load ptr, ptr %memberidx4.i295.phi.trans.insert, align 8
  br label %Array_LLVMTypeRef____sl__.exit

if.entry.i294:                                    ; preds = %ifend67
  %290 = shl nuw i64 %289, 1
  store i64 %290, ptr %memberidx1.i290, align 4
  %memberidx2.i.i293 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %291 = load ptr, ptr %memberidx2.i.i293, align 8
  %292 = shl i64 %289, 4
  %293 = call ptr @realloc(ptr %291, i64 %292)
  store ptr %293, ptr %memberidx2.i.i293, align 8
  %.pre338 = load i64, ptr %memberidx.i289, align 4
  br label %Array_LLVMTypeRef____sl__.exit

Array_LLVMTypeRef____sl__.exit:                   ; preds = %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge, %if.entry.i294
  %294 = phi ptr [ %.pre339, %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge ], [ %293, %if.entry.i294 ]
  %295 = phi i64 [ %288, %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge ], [ %.pre338, %if.entry.i294 ]
  %296 = add nsw i64 %295, 1
  store i64 %296, ptr %memberidx.i289, align 4
  %297 = getelementptr inbounds ptr, ptr %294, i64 %295
  store ptr %287, ptr %297, align 8
  br label %ifend61
}

define internal fastcc ptr @CodeGen_get_or_codegen_var(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i.i, align 4
  %9 = load i64, ptr %1, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i, align 4
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @243, i64 %8, i64 %9, i64 %10)
  %12 = load ptr, ptr %6, align 8
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %14 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %13)
  %memberidx.i130 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i130, align 4
  %16 = urem i64 %14, %15
  %17 = load ptr, ptr %7, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  %.not.i = icmp eq ptr %19, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %20 = phi ptr [ %30, %else.i ], [ %17, %2 ]
  %21 = phi i64 [ %31, %else.i ], [ %15, %2 ]
  %22 = phi ptr [ %35, %else.i ], [ %19, %2 ]
  %hash.0.i = phi i64 [ %33, %else.i ], [ %16, %2 ]
  %23 = load ptr, ptr %22, align 8
  %memberidx.i.i131 = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx.i.i131, align 4
  %25 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i = icmp eq i64 %24, %25
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i133 = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i133, align 8
  %27 = load ptr, ptr %memberidx.i.i.i, align 8
  %28 = call i64 @memcmp(ptr %26, ptr %27, i64 %24)
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i130, align 4
  %.pre234 = load ptr, ptr %7, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre235.pre = load ptr, ptr %7, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre235.pre, i64 %hash.0.i
  %.pre236.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre236.pre, null
  br i1 %.not25.i, label %ifend, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %30 = phi ptr [ %.pre234, %ifend.i.i.else.i_crit_edge ], [ %20, %while.entry.i ]
  %31 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = add nuw i64 %hash.0.i, 1
  %33 = urem i64 %32, %31
  %34 = getelementptr inbounds ptr, ptr %30, i64 %33
  %35 = load ptr, ptr %34, align 8
  %.not26.i = icmp eq ptr %35, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre236.pre, i64 0, i32 1
  %36 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %36, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %else.i151, %else.i172, %else.i193, %if.entry48, %if.entry31, %if.entry14, %if.entry7.i196, %while.end.i191, %if.entry7.i175, %while.end.i170, %if.entry7.i154, %while.end.i149, %Map_string_LLVMValueRef____getitem__.exit, %for.end43, %ifend20
  %common.ret.op = phi ptr [ null, %ifend20 ], [ null, %for.end43 ], [ %36, %Map_string_LLVMValueRef____getitem__.exit ], [ %86, %if.entry7.i154 ], [ null, %while.end.i149 ], [ %130, %if.entry7.i175 ], [ null, %while.end.i170 ], [ %172, %if.entry7.i196 ], [ null, %while.end.i191 ], [ null, %if.entry14 ], [ null, %if.entry31 ], [ null, %if.entry48 ], [ null, %else.i193 ], [ null, %else.i172 ], [ null, %else.i151 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %2, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %37 = load ptr, ptr %memberidx, align 8
  %memberidx3 = getelementptr inbounds %Program, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx3, align 8
  %39 = load i64, ptr %memberidx.i.i, align 4
  %memberidx.i83 = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i83, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  %43 = load i64, ptr %1, align 4
  %44 = icmp eq i64 %43, 2
  br i1 %44, label %for.entry, label %ifend8

ifend8:                                           ; preds = %ifend, %for.end
  %45 = phi i64 [ %43, %ifend ], [ %.pr, %for.end ]
  %46 = icmp eq i64 %45, 1
  br i1 %46, label %for.entry21, label %ifend20

for.entry:                                        ; preds = %ifend
  %memberidx9 = getelementptr inbounds %Module, ptr %42, i64 0, i32 8
  %47 = load ptr, ptr %memberidx9, align 8
  %48 = call ptr @malloc(i32 25)
  %memberidx.i84 = getelementptr inbounds %Array_ConstDeclaration_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %47, i64 0, i32 2
  %50 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %48, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %48, i64 0, i32 1
  %memberidx2.i.i85 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %48, i64 0, i32 3
  store ptr %49, ptr %memberidx2.i.i85, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %48, i64 0, i32 2
  store i64 %50, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %51 = icmp slt i64 %50, 1
  br i1 %51, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %52 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend16
  %53 = phi i64 [ 1, %for.body.lr.ph ], [ %87, %ifend16 ]
  %global_const.0224.in = phi ptr [ %49, %for.body.lr.ph ], [ %88, %ifend16 ]
  %global_const.0224 = load ptr, ptr %global_const.0224.in, align 8
  %memberidx11 = getelementptr inbounds %ConstDeclaration, ptr %global_const.0224, i64 0, i32 2
  %54 = load ptr, ptr %memberidx11, align 8
  %memberidx12 = getelementptr inbounds %VarId, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx12, align 4
  %56 = icmp eq i64 %55, %52
  br i1 %56, label %if.entry14, label %ifend16

for.end:                                          ; preds = %ifend16, %for.entry
  tail call void @free(ptr nonnull %48)
  %.pr = load i64, ptr %1, align 4
  br label %ifend8

if.entry14:                                       ; preds = %for.body
  store i1 false, ptr %48, align 1
  call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr null, ptr nonnull %global_const.0224)
  %57 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %58 = load i64, ptr %memberidx.i.i, align 4
  %59 = load i64, ptr %1, align 4
  %60 = load i64, ptr %memberidx2.i.i, align 4
  %61 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %58, i64 %59, i64 %60)
  %62 = load ptr, ptr %5, align 8
  %63 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i.i90 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i.i90, align 8
  %memberidx1.i.i.i91 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 %61, ptr %memberidx1.i.i.i91, align 4
  %memberidx2.i.i.i92 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 %61, ptr %memberidx2.i.i.i92, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %64 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %63)
  %memberidx.i135 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %57, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i135, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %57, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i136 = icmp eq ptr %69, null
  br i1 %.not.i136, label %common.ret, label %while.entry.i141

while.entry.i141:                                 ; preds = %if.entry14, %else.i151
  %70 = phi ptr [ %80, %else.i151 ], [ %67, %if.entry14 ]
  %71 = phi i64 [ %81, %else.i151 ], [ %65, %if.entry14 ]
  %72 = phi ptr [ %85, %else.i151 ], [ %69, %if.entry14 ]
  %hash.0.i137 = phi i64 [ %83, %else.i151 ], [ %66, %if.entry14 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i138 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i138, align 4
  %75 = load i64, ptr %memberidx1.i.i.i91, align 4
  %.not.i.i140 = icmp eq i64 %74, %75
  br i1 %.not.i.i140, label %ifend.i.i144, label %else.i151

ifend.i.i144:                                     ; preds = %while.entry.i141
  %memberidx2.i.i142 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  %76 = load ptr, ptr %memberidx2.i.i142, align 8
  %77 = load ptr, ptr %memberidx.i.i.i90, align 8
  %78 = call i64 @memcmp(ptr %76, ptr %77, i64 %74)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %while.end.i149, label %ifend.i.i144.else.i151_crit_edge

ifend.i.i144.else.i151_crit_edge:                 ; preds = %ifend.i.i144
  %.pre237 = load i64, ptr %memberidx.i135, align 4
  %.pre238 = load ptr, ptr %57, align 8
  br label %else.i151

while.end.i149:                                   ; preds = %ifend.i.i144
  %.pre239.pre = load ptr, ptr %57, align 8
  %.phi.trans.insert240.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre239.pre, i64 %hash.0.i137
  %.pre241.pre = load ptr, ptr %.phi.trans.insert240.phi.trans.insert, align 8
  %.not25.i148 = icmp eq ptr %.pre241.pre, null
  br i1 %.not25.i148, label %common.ret, label %if.entry7.i154

else.i151:                                        ; preds = %ifend.i.i144.else.i151_crit_edge, %while.entry.i141
  %80 = phi ptr [ %.pre238, %ifend.i.i144.else.i151_crit_edge ], [ %70, %while.entry.i141 ]
  %81 = phi i64 [ %.pre237, %ifend.i.i144.else.i151_crit_edge ], [ %71, %while.entry.i141 ]
  %82 = add nuw i64 %hash.0.i137, 1
  %83 = urem i64 %82, %81
  %84 = getelementptr inbounds ptr, ptr %80, i64 %83
  %85 = load ptr, ptr %84, align 8
  %.not26.i150 = icmp eq ptr %85, null
  br i1 %.not26.i150, label %common.ret, label %while.entry.i141

if.entry7.i154:                                   ; preds = %while.end.i149
  %memberidx11.i153 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre241.pre, i64 0, i32 1
  %86 = load ptr, ptr %memberidx11.i153, align 8
  br label %common.ret

ifend16:                                          ; preds = %for.body
  %87 = add nuw nsw i64 %53, 1
  store i64 %87, ptr %memberidx1.i.i, align 4
  %88 = getelementptr inbounds ptr, ptr %49, i64 %53
  %.not263 = icmp slt i64 %53, %50
  br i1 %.not263, label %for.body, label %for.end

ifend20:                                          ; preds = %ifend8, %for.end26
  %89 = phi i64 [ %45, %ifend8 ], [ %.pre247, %for.end26 ]
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %for.entry38, label %common.ret

for.entry21:                                      ; preds = %ifend8
  %memberidx22 = getelementptr inbounds %Module, ptr %42, i64 0, i32 9
  %91 = load ptr, ptr %memberidx22, align 8
  %92 = call ptr @malloc(i32 25)
  %memberidx.i96 = getelementptr inbounds %Array_VarDeclaration_, ptr %91, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %Array_VarDeclaration_, ptr %91, i64 0, i32 2
  %94 = load i64, ptr %memberidx1.i97, align 4
  store i1 false, ptr %92, align 1
  %memberidx1.i.i98 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %92, i64 0, i32 1
  %memberidx2.i.i99 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %92, i64 0, i32 3
  store ptr %93, ptr %memberidx2.i.i99, align 8
  %memberidx3.i.i100 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %92, i64 0, i32 2
  store i64 %94, ptr %memberidx3.i.i100, align 4
  store i64 1, ptr %memberidx1.i.i98, align 4
  %95 = icmp slt i64 %94, 1
  br i1 %95, label %for.end26, label %for.body24.lr.ph

for.body24.lr.ph:                                 ; preds = %for.entry21
  %96 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %ifend33
  %97 = phi i64 [ 1, %for.body24.lr.ph ], [ %131, %ifend33 ]
  %global_var.0219.in = phi ptr [ %93, %for.body24.lr.ph ], [ %132, %ifend33 ]
  %global_var.0219 = load ptr, ptr %global_var.0219.in, align 8
  %memberidx28 = getelementptr inbounds %VarDeclaration, ptr %global_var.0219, i64 0, i32 2
  %98 = load ptr, ptr %memberidx28, align 8
  %memberidx29 = getelementptr inbounds %VarId, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx29, align 4
  %100 = icmp eq i64 %99, %96
  br i1 %100, label %if.entry31, label %ifend33

for.end26:                                        ; preds = %ifend33, %for.entry21
  tail call void @free(ptr nonnull %92)
  %.pre247 = load i64, ptr %1, align 4
  br label %ifend20

if.entry31:                                       ; preds = %for.body24
  store i1 false, ptr %92, align 1
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr null, ptr nonnull %global_var.0219)
  %101 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %102 = load i64, ptr %memberidx.i.i, align 4
  %103 = load i64, ptr %1, align 4
  %104 = load i64, ptr %memberidx2.i.i, align 4
  %105 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %102, i64 %103, i64 %104)
  %106 = load ptr, ptr %4, align 8
  %107 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %107, align 8
  %memberidx.i.i.i107 = getelementptr inbounds %string, ptr %107, i64 0, i32 1
  store ptr %106, ptr %memberidx.i.i.i107, align 8
  %memberidx1.i.i.i108 = getelementptr inbounds %string, ptr %107, i64 0, i32 2
  store i64 %105, ptr %memberidx1.i.i.i108, align 4
  %memberidx2.i.i.i109 = getelementptr inbounds %string, ptr %107, i64 0, i32 3
  store i64 %105, ptr %memberidx2.i.i.i109, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %108 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %107)
  %memberidx.i156 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %101, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i156, align 4
  %110 = urem i64 %108, %109
  %111 = load ptr, ptr %101, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %110
  %113 = load ptr, ptr %112, align 8
  %.not.i157 = icmp eq ptr %113, null
  br i1 %.not.i157, label %common.ret, label %while.entry.i162

while.entry.i162:                                 ; preds = %if.entry31, %else.i172
  %114 = phi ptr [ %124, %else.i172 ], [ %111, %if.entry31 ]
  %115 = phi i64 [ %125, %else.i172 ], [ %109, %if.entry31 ]
  %116 = phi ptr [ %129, %else.i172 ], [ %113, %if.entry31 ]
  %hash.0.i158 = phi i64 [ %127, %else.i172 ], [ %110, %if.entry31 ]
  %117 = load ptr, ptr %116, align 8
  %memberidx.i.i159 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  %118 = load i64, ptr %memberidx.i.i159, align 4
  %119 = load i64, ptr %memberidx1.i.i.i108, align 4
  %.not.i.i161 = icmp eq i64 %118, %119
  br i1 %.not.i.i161, label %ifend.i.i165, label %else.i172

ifend.i.i165:                                     ; preds = %while.entry.i162
  %memberidx2.i.i163 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  %120 = load ptr, ptr %memberidx2.i.i163, align 8
  %121 = load ptr, ptr %memberidx.i.i.i107, align 8
  %122 = call i64 @memcmp(ptr %120, ptr %121, i64 %118)
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %while.end.i170, label %ifend.i.i165.else.i172_crit_edge

ifend.i.i165.else.i172_crit_edge:                 ; preds = %ifend.i.i165
  %.pre242 = load i64, ptr %memberidx.i156, align 4
  %.pre243 = load ptr, ptr %101, align 8
  br label %else.i172

while.end.i170:                                   ; preds = %ifend.i.i165
  %.pre244.pre = load ptr, ptr %101, align 8
  %.phi.trans.insert245.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre244.pre, i64 %hash.0.i158
  %.pre246.pre = load ptr, ptr %.phi.trans.insert245.phi.trans.insert, align 8
  %.not25.i169 = icmp eq ptr %.pre246.pre, null
  br i1 %.not25.i169, label %common.ret, label %if.entry7.i175

else.i172:                                        ; preds = %ifend.i.i165.else.i172_crit_edge, %while.entry.i162
  %124 = phi ptr [ %.pre243, %ifend.i.i165.else.i172_crit_edge ], [ %114, %while.entry.i162 ]
  %125 = phi i64 [ %.pre242, %ifend.i.i165.else.i172_crit_edge ], [ %115, %while.entry.i162 ]
  %126 = add nuw i64 %hash.0.i158, 1
  %127 = urem i64 %126, %125
  %128 = getelementptr inbounds ptr, ptr %124, i64 %127
  %129 = load ptr, ptr %128, align 8
  %.not26.i171 = icmp eq ptr %129, null
  br i1 %.not26.i171, label %common.ret, label %while.entry.i162

if.entry7.i175:                                   ; preds = %while.end.i170
  %memberidx11.i174 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre246.pre, i64 0, i32 1
  %130 = load ptr, ptr %memberidx11.i174, align 8
  br label %common.ret

ifend33:                                          ; preds = %for.body24
  %131 = add nuw nsw i64 %97, 1
  store i64 %131, ptr %memberidx1.i.i98, align 4
  %132 = getelementptr inbounds ptr, ptr %93, i64 %97
  %.not262 = icmp slt i64 %97, %94
  br i1 %.not262, label %for.body24, label %for.end26

for.entry38:                                      ; preds = %ifend20
  %memberidx39 = getelementptr inbounds %Module, ptr %42, i64 0, i32 4
  %133 = load ptr, ptr %memberidx39, align 8
  %134 = call ptr @malloc(i32 25)
  %memberidx.i113 = getelementptr inbounds %Array_Function_, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i113, align 8
  %memberidx1.i114 = getelementptr inbounds %Array_Function_, ptr %133, i64 0, i32 2
  %136 = load i64, ptr %memberidx1.i114, align 4
  store i1 false, ptr %134, align 1
  %memberidx1.i.i115 = getelementptr inbounds %ArrayIterator_Function_, ptr %134, i64 0, i32 1
  %memberidx2.i.i116 = getelementptr inbounds %ArrayIterator_Function_, ptr %134, i64 0, i32 3
  store ptr %135, ptr %memberidx2.i.i116, align 8
  %memberidx3.i.i117 = getelementptr inbounds %ArrayIterator_Function_, ptr %134, i64 0, i32 2
  store i64 %136, ptr %memberidx3.i.i117, align 4
  store i64 1, ptr %memberidx1.i.i115, align 4
  %137 = icmp slt i64 %136, 1
  br i1 %137, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.entry38
  %138 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %ifend50
  %139 = phi i64 [ 1, %for.body41.lr.ph ], [ %173, %ifend50 ]
  %function.0215.in = phi ptr [ %135, %for.body41.lr.ph ], [ %174, %ifend50 ]
  %function.0215 = load ptr, ptr %function.0215.in, align 8
  %140 = load ptr, ptr %function.0215, align 8
  %memberidx46 = getelementptr inbounds %VarId, ptr %140, i64 0, i32 2
  %141 = load i64, ptr %memberidx46, align 4
  %142 = icmp eq i64 %141, %138
  br i1 %142, label %if.entry48, label %ifend50

for.end43:                                        ; preds = %ifend50, %for.entry38
  tail call void @free(ptr nonnull %134)
  br label %common.ret

if.entry48:                                       ; preds = %for.body41
  store i1 false, ptr %134, align 1
  call fastcc void @CodeGen_codegen_function(ptr %0, ptr nonnull %function.0215)
  %143 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %144 = load i64, ptr %memberidx.i.i, align 4
  %145 = load i64, ptr %1, align 4
  %146 = load i64, ptr %memberidx2.i.i, align 4
  %147 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %144, i64 %145, i64 %146)
  %148 = load ptr, ptr %3, align 8
  %149 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %149, align 8
  %memberidx.i.i.i124 = getelementptr inbounds %string, ptr %149, i64 0, i32 1
  store ptr %148, ptr %memberidx.i.i.i124, align 8
  %memberidx1.i.i.i125 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  store i64 %147, ptr %memberidx1.i.i.i125, align 4
  %memberidx2.i.i.i126 = getelementptr inbounds %string, ptr %149, i64 0, i32 3
  store i64 %147, ptr %memberidx2.i.i.i126, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %150 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %149)
  %memberidx.i177 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %143, i64 0, i32 1
  %151 = load i64, ptr %memberidx.i177, align 4
  %152 = urem i64 %150, %151
  %153 = load ptr, ptr %143, align 8
  %154 = getelementptr inbounds ptr, ptr %153, i64 %152
  %155 = load ptr, ptr %154, align 8
  %.not.i178 = icmp eq ptr %155, null
  br i1 %.not.i178, label %common.ret, label %while.entry.i183

while.entry.i183:                                 ; preds = %if.entry48, %else.i193
  %156 = phi ptr [ %166, %else.i193 ], [ %153, %if.entry48 ]
  %157 = phi i64 [ %167, %else.i193 ], [ %151, %if.entry48 ]
  %158 = phi ptr [ %171, %else.i193 ], [ %155, %if.entry48 ]
  %hash.0.i179 = phi i64 [ %169, %else.i193 ], [ %152, %if.entry48 ]
  %159 = load ptr, ptr %158, align 8
  %memberidx.i.i180 = getelementptr inbounds %string, ptr %159, i64 0, i32 2
  %160 = load i64, ptr %memberidx.i.i180, align 4
  %161 = load i64, ptr %memberidx1.i.i.i125, align 4
  %.not.i.i182 = icmp eq i64 %160, %161
  br i1 %.not.i.i182, label %ifend.i.i186, label %else.i193

ifend.i.i186:                                     ; preds = %while.entry.i183
  %memberidx2.i.i184 = getelementptr inbounds %string, ptr %159, i64 0, i32 1
  %162 = load ptr, ptr %memberidx2.i.i184, align 8
  %163 = load ptr, ptr %memberidx.i.i.i124, align 8
  %164 = call i64 @memcmp(ptr %162, ptr %163, i64 %160)
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %while.end.i191, label %ifend.i.i186.else.i193_crit_edge

ifend.i.i186.else.i193_crit_edge:                 ; preds = %ifend.i.i186
  %.pre248 = load i64, ptr %memberidx.i177, align 4
  %.pre249 = load ptr, ptr %143, align 8
  br label %else.i193

while.end.i191:                                   ; preds = %ifend.i.i186
  %.pre250.pre = load ptr, ptr %143, align 8
  %.phi.trans.insert251.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre250.pre, i64 %hash.0.i179
  %.pre252.pre = load ptr, ptr %.phi.trans.insert251.phi.trans.insert, align 8
  %.not25.i190 = icmp eq ptr %.pre252.pre, null
  br i1 %.not25.i190, label %common.ret, label %if.entry7.i196

else.i193:                                        ; preds = %ifend.i.i186.else.i193_crit_edge, %while.entry.i183
  %166 = phi ptr [ %.pre249, %ifend.i.i186.else.i193_crit_edge ], [ %156, %while.entry.i183 ]
  %167 = phi i64 [ %.pre248, %ifend.i.i186.else.i193_crit_edge ], [ %157, %while.entry.i183 ]
  %168 = add nuw i64 %hash.0.i179, 1
  %169 = urem i64 %168, %167
  %170 = getelementptr inbounds ptr, ptr %166, i64 %169
  %171 = load ptr, ptr %170, align 8
  %.not26.i192 = icmp eq ptr %171, null
  br i1 %.not26.i192, label %common.ret, label %while.entry.i183

if.entry7.i196:                                   ; preds = %while.end.i191
  %memberidx11.i195 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre252.pre, i64 0, i32 1
  %172 = load ptr, ptr %memberidx11.i195, align 8
  br label %common.ret

ifend50:                                          ; preds = %for.body41
  %173 = add nuw nsw i64 %139, 1
  store i64 %173, ptr %memberidx1.i.i115, align 4
  %174 = getelementptr inbounds ptr, ptr %135, i64 %139
  %.not261 = icmp slt i64 %139, %136
  br i1 %.not261, label %for.body41, label %for.end43
}

define internal fastcc void @CodeGen_declare_enum(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 2048)
  store ptr %8, ptr %7, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i82 = phi i64 [ 0, %2 ], [ %11, %for.body.i.i ]
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %i.0.i.i82
  store ptr null, ptr %10, align 8
  %11 = add nuw nsw i64 %i.0.i.i82, 1
  %12 = icmp ult i64 %i.0.i.i82, 255
  br i1 %12, label %for.body.i.i, label %CGEnumType_constructor.exit

CGEnumType_constructor.exit:                      ; preds = %for.body.i.i
  %memberidx.i74 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 1
  %memberidx2.i.i75 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i75, align 4
  %memberidx3.i.i76 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i76, align 4
  store ptr %7, ptr %memberidx.i74, align 8
  %memberidx = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx1, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %if.entry, label %else

if.entry:                                         ; preds = %CGEnumType_constructor.exit
  %memberidx.i73 = getelementptr inbounds %Array_EnumField_, ptr %13, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i73, align 8
  %17 = load ptr, ptr %16, align 8
  %memberidx4 = getelementptr inbounds %EnumField, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  br label %ifend

else:                                             ; preds = %CGEnumType_constructor.exit
  %21 = tail call ptr @LLVMIntType(i64 64)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %storemerge = phi ptr [ %21, %else ], [ %20, %if.entry ]
  store ptr %storemerge, ptr %6, align 8
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumField_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx8, align 4
  %24 = alloca ptr, i64 %23, align 8
  %25 = tail call ptr @malloc(i32 25)
  %memberidx.i69 = getelementptr inbounds %Array_EnumField_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i69, align 8
  %27 = load i64, ptr %memberidx8, align 4
  store i1 false, ptr %25, align 1
  %memberidx1.i.i71 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 1
  %memberidx2.i.i72 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 3
  store ptr %26, ptr %memberidx2.i.i72, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 2
  store i64 %27, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i71, align 4
  %28 = icmp slt i64 %27, 1
  br i1 %28, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx14 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %29 = phi i64 [ 1, %for.body.lr.ph ], [ %70, %for.body ]
  %enum_field.080.in = phi ptr [ %26, %for.body.lr.ph ], [ %71, %for.body ]
  %idx.079 = phi i64 [ 0, %for.body.lr.ph ], [ %68, %for.body ]
  %enum_field.080 = load ptr, ptr %enum_field.080.in, align 8
  %30 = load ptr, ptr %enum_field.080, align 8
  %31 = load ptr, ptr %memberidx.i74, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i59 = getelementptr inbounds %PropId, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i59, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %33 = load i64, ptr %32, align 4
  %memberidx1.i.i60 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx1.i.i60, align 4
  %memberidx2.i.i61 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i.i61, align 4
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %33, i64 %34, i64 %35)
  %37 = load ptr, ptr %3, align 8
  %38 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i.i.i62 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i.i.i62, align 8
  %memberidx1.i.i.i63 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i.i.i63, align 4
  %memberidx2.i.i.i64 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i.i.i64, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %39 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %40 = call ptr %39(ptr nonnull %38)
  %41 = load i64, ptr %30, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %30, i64 0, i32 2
  %42 = load i64, ptr %memberidx3.i, align 4
  %43 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %40, i64 %41, i64 %42)
  %44 = load ptr, ptr %4, align 8
  %45 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 %43, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 %43, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %40)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %memberidx13 = getelementptr inbounds %EnumField, ptr %enum_field.080, i64 0, i32 2
  %46 = load ptr, ptr %memberidx13, align 8
  %47 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr null, ptr %46)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %31, ptr nonnull %45, ptr %47)
  %48 = load ptr, ptr %memberidx14, align 8
  %49 = load ptr, ptr %48, align 8
  %memberidx15 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %49, i64 0, i32 5
  %50 = load ptr, ptr %memberidx15, align 8
  %51 = call ptr %50(ptr nonnull %48)
  %memberidx16 = getelementptr inbounds %EnumField, ptr %enum_field.080, i64 0, i32 1
  %52 = load ptr, ptr %memberidx16, align 8
  %53 = load ptr, ptr %52, align 8
  %memberidx17 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx17, align 8
  %55 = call ptr %54(ptr nonnull %52)
  %56 = alloca ptr, align 8
  %57 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %56, ptr nonnull @294, ptr %51, ptr %55)
  %58 = load ptr, ptr %56, align 8
  %59 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i56 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %57, ptr %memberidx1.i57, align 4
  %memberidx2.i58 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %57, ptr %memberidx2.i58, align 4
  tail call void @free(ptr %51)
  tail call void @free(ptr %55)
  %60 = load ptr, ptr %59, align 8
  %memberidx18 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %60, i64 0, i32 5
  %61 = load ptr, ptr %memberidx18, align 8
  %62 = call ptr %61(ptr nonnull %59)
  %63 = load i64, ptr %memberidx1.i57, align 4
  %64 = call ptr @LLVMConstString(ptr %62, i64 %63, i1 false)
  %65 = load ptr, ptr %0, align 8
  %66 = call ptr @LLVMTypeOf(ptr %64)
  %67 = call ptr @LLVMAddGlobal(ptr %65, ptr %66, ptr nonnull @80)
  call void @LLVMSetInitializer(ptr %67, ptr %64)
  %68 = add nuw nsw i64 %idx.079, 1
  %69 = getelementptr inbounds ptr, ptr %24, i64 %idx.079
  store ptr %67, ptr %69, align 8
  %70 = add nuw nsw i64 %29, 1
  store i64 %70, ptr %memberidx1.i.i71, align 4
  %71 = getelementptr inbounds ptr, ptr %26, i64 %29
  %.not = icmp slt i64 %29, %27
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %68, %for.body ]
  tail call void @free(ptr nonnull %25)
  %72 = call ptr @LLVMInt8Type()
  %73 = call ptr @LLVMPointerType(ptr %72, i64 0)
  %74 = call ptr @LLVMConstArray(ptr %73, ptr nonnull %24, i64 %idx.0.lcssa)
  %75 = load ptr, ptr %0, align 8
  %76 = call ptr @LLVMTypeOf(ptr %74)
  %memberidx22 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  %77 = load ptr, ptr %memberidx22, align 8
  %78 = load ptr, ptr %77, align 8
  %memberidx23 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %78, i64 0, i32 5
  %79 = load ptr, ptr %memberidx23, align 8
  %80 = call ptr %79(ptr nonnull %77)
  %81 = alloca ptr, align 8
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %81, ptr nonnull @295, ptr %80)
  %83 = load ptr, ptr %81, align 8
  %84 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i53 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i53, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 %82, ptr %memberidx2.i, align 4
  tail call void @free(ptr %80)
  %85 = load ptr, ptr %84, align 8
  %memberidx24 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx24, align 8
  %87 = call ptr %86(ptr nonnull %84)
  %88 = call ptr @LLVMAddGlobal(ptr %75, ptr %76, ptr %87)
  call void @LLVMSetInitializer(ptr %88, ptr %74)
  %memberidx25 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 2
  store ptr %88, ptr %memberidx25, align 8
  %89 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %90 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %91 = load i64, ptr %89, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %89, i64 0, i32 1
  %92 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %89, i64 0, i32 2
  %93 = load i64, ptr %memberidx2.i.i, align 4
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %91, i64 %92, i64 %93)
  %95 = load ptr, ptr %5, align 8
  %96 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_string_CGEnumType____setitem__(ptr %90, ptr nonnull %96, ptr nonnull %6)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr nocapture readonly %0, ptr %1, ptr %2, ptr nocapture readonly %3, i64 %4, ptr writeonly %5) unnamed_addr {
  %arg_types = alloca [2 x ptr], align 8
  %7 = tail call ptr @LLVMInt8Type()
  %8 = tail call ptr @LLVMPointerType(ptr %7, i64 0)
  %9 = tail call ptr @LLVMIntType(i64 64)
  %10 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %8, ptr nonnull @80)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %memberidx.i, align 8
  %12 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %2)
  %memberidx.i22 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %11, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i22, align 4
  %14 = urem i64 %12, %13
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %.not.i23 = icmp eq ptr %17, null
  br i1 %.not.i23, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %6
  %memberidx1.i.i25 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i27
  %18 = phi ptr [ %28, %else.i27 ], [ %15, %while.entry.i.preheader ]
  %19 = phi i64 [ %29, %else.i27 ], [ %13, %while.entry.i.preheader ]
  %20 = phi ptr [ %33, %else.i27 ], [ %17, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %31, %else.i27 ], [ %14, %while.entry.i.preheader ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i24 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i24, align 4
  %23 = load i64, ptr %memberidx1.i.i25, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i27

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i26 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i.i26, align 8
  %25 = load ptr, ptr %memberidx3.i.i, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i27_crit_edge

ifend.i.i.else.i27_crit_edge:                     ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i22, align 4
  %.pre32 = load ptr, ptr %11, align 8
  br label %else.i27

while.end.i:                                      ; preds = %ifend.i.i
  %.pre33.pre = load ptr, ptr %11, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre33.pre, i64 %hash.0.i
  %.pre34.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre34.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i27:                                         ; preds = %ifend.i.i.else.i27_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre32, %ifend.i.i.else.i27_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i27_crit_edge ], [ %19, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %32, align 8
  %.not26.i = icmp eq ptr %33, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre34.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx11.i, align 8
  %35 = icmp eq ptr %34, null
  br i1 %35, label %if.entry.i, label %CodeGen_createGlobalLLVMString.exit

if.entry.i:                                       ; preds = %else.i27, %6, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %36 = load ptr, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i, align 8
  %38 = tail call ptr %37(ptr nonnull %2)
  %39 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %38, ptr nonnull @80)
  %40 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %40, ptr nonnull %2, ptr %39)
  br label %CodeGen_createGlobalLLVMString.exit

CodeGen_createGlobalLLVMString.exit:              ; preds = %Map_string_LLVMValueRef____getitem__.exit, %if.entry.i
  %str.0.i = phi ptr [ %39, %if.entry.i ], [ %34, %Map_string_LLVMValueRef____getitem__.exit ]
  %41 = add nuw i64 %4, 2
  %42 = alloca ptr, i64 %41, align 8
  store ptr %10, ptr %42, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 1
  store ptr %str.0.i, ptr %43, align 8
  %44 = getelementptr inbounds ptr, ptr %42, i64 2
  %45 = shl i64 %4, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 536870912 %44, ptr align 8 %3, i64 %45, i1 false)
  store ptr %8, ptr %arg_types, align 8
  %46 = getelementptr inbounds ptr, ptr %arg_types, i64 1
  store ptr %8, ptr %46, align 8
  %47 = load ptr, ptr %0, align 8
  %48 = tail call ptr @malloc(i32 8)
  store i64 7382647088337679201, ptr %48, align 8
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i, align 4
  %50 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i18 = getelementptr inbounds %IntrinsicResult, ptr %50, i64 0, i32 1
  store i64 0, ptr %50, align 8
  %51 = call ptr @LLVMFunctionType(ptr %9, ptr nonnull %arg_types, i64 2, i1 true)
  store ptr %51, ptr %memberidx1.i.i18, align 8
  %52 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %53 = call ptr %52(ptr nonnull %49)
  %54 = call ptr @LLVMGetNamedFunction(ptr %47, ptr %53)
  %.not.i = icmp eq ptr %54, null
  br i1 %.not.i, label %else.i, label %get_intrinsic.exit

else.i:                                           ; preds = %CodeGen_createGlobalLLVMString.exit
  %55 = call ptr @LLVMAddFunction(ptr %47, ptr %53, ptr %51)
  br label %get_intrinsic.exit

get_intrinsic.exit:                               ; preds = %CodeGen_createGlobalLLVMString.exit, %else.i
  %storemerge.i = phi ptr [ %55, %else.i ], [ %54, %CodeGen_createGlobalLLVMString.exit ]
  store ptr %storemerge.i, ptr %50, align 8
  %56 = call ptr @LLVMBuildCall2(ptr %1, ptr %51, ptr %storemerge.i, ptr nonnull %42, i64 %41, ptr nonnull @80)
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %get_intrinsic.exit
  store ptr %56, ptr %5, align 8
  br label %ifend

ifend:                                            ; preds = %get_intrinsic.exit, %if.entry
  %57 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %10, ptr nonnull @80)
  ret ptr %57
}

define internal fastcc ptr @CodeGen_codegen_string(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %str_len = alloca ptr, align 8
  %args = alloca [2 x ptr], align 8
  %args1 = alloca [3 x ptr], align 8
  %memberidx = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = alloca %StringBuilder, align 8
  %memberidx2 = getelementptr inbounds %string, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx2, align 4
  %memberidx3 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_uint_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx4, align 4
  %8 = shl nuw i64 %7, 1
  %9 = add nuw i64 %8, %5
  store ptr @VTableStringBuilder, ptr %4, align 8
  %memberidx.i105 = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 2
  %10 = icmp eq i64 %9, 0
  %ternary.i = select i1 %10, i64 1, i64 %9
  store i64 %ternary.i, ptr %memberidx.i105, align 8
  %memberidx1.i106 = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 1
  %11 = trunc i64 %ternary.i to i32
  %12 = tail call ptr @malloc(i32 %11)
  store ptr %12, ptr %memberidx1.i106, align 8
  %memberidx3.i = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 3
  store ptr %12, ptr %memberidx3.i, align 8
  %memberidx5.i107 = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 4
  store i64 0, ptr %memberidx5.i107, align 8
  %13 = load ptr, ptr %3, align 8
  %memberidx5 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx5, align 8
  %15 = tail call ptr %14(ptr nonnull %3)
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %16, align 8
  %memberidx.i102 = getelementptr inbounds %Array_LLVMValueRef_, ptr %16, i64 0, i32 2
  %memberidx1.i103 = getelementptr inbounds %Array_LLVMValueRef_, ptr %16, i64 0, i32 3
  store i64 8, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %Array_LLVMValueRef_, ptr %16, i64 0, i32 1
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %memberidx2.i104, align 8
  store i64 0, ptr %memberidx.i102, align 4
  %memberidx8 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 6
  %18 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_Expression_, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx9, align 4
  %20 = alloca ptr, i64 %19, align 8
  %21 = icmp sgt i64 %19, 0
  br i1 %21, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %chars.0164 = phi ptr [ %37, %for.body ], [ %15, %for.entry ]
  %curr_ind.0163 = phi i64 [ %31, %for.body ], [ 0, %for.entry ]
  %i.0162 = phi i64 [ %41, %for.body ], [ 0, %for.entry ]
  %22 = load ptr, ptr %memberidx8, align 8
  %memberidx.i101 = getelementptr inbounds %Array_Expression_, ptr %22, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i101, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %i.0162
  %25 = load ptr, ptr %24, align 8
  %memberidx11 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx11, align 8
  %27 = call fastcc ptr @get_format_from_type(ptr %26)
  %28 = load ptr, ptr %memberidx3, align 8
  %memberidx.i100 = getelementptr inbounds %Array_uint_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i100, align 8
  %30 = getelementptr inbounds i64, ptr %29, i64 %i.0162
  %31 = load i64, ptr %30, align 4
  %32 = sub nuw i64 %31, %curr_ind.0163
  %33 = load ptr, ptr %4, align 8
  %34 = load ptr, ptr %33, align 8
  call void %34(ptr nonnull %4, ptr %chars.0164, i64 %32)
  %35 = load ptr, ptr %4, align 8
  %memberidx14 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %35, i64 0, i32 1
  %36 = load ptr, ptr %memberidx14, align 8
  call void %36(ptr nonnull %4, ptr %27)
  %37 = getelementptr inbounds i8, ptr %chars.0164, i64 %32
  %38 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %25)
  %39 = getelementptr inbounds ptr, ptr %20, i64 %i.0162
  %40 = call fastcc ptr @CodeGen_get_string_val(ptr %0, ptr %1, ptr %38, ptr %26, ptr nonnull %16, i64 0)
  store ptr %40, ptr %39, align 8
  %41 = add nuw nsw i64 %i.0162, 1
  %42 = icmp slt i64 %41, %19
  br i1 %42, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.body
  %.pre = load ptr, ptr %4, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.entry
  %43 = phi ptr [ @VTableStringBuilder, %for.entry ], [ %.pre, %for.end.loopexit ]
  %curr_ind.0.lcssa = phi i64 [ 0, %for.entry ], [ %31, %for.end.loopexit ]
  %chars.0.lcssa = phi ptr [ %15, %for.entry ], [ %37, %for.end.loopexit ]
  %44 = load ptr, ptr %43, align 8
  %45 = load i64, ptr %memberidx2, align 4
  %46 = sub nuw i64 %45, %curr_ind.0.lcssa
  call void %44(ptr nonnull %4, ptr %chars.0.lcssa, i64 %46)
  %47 = load ptr, ptr %4, align 8
  %memberidx17 = getelementptr inbounds { ptr, ptr, ptr, ptr }, ptr %47, i64 0, i32 3
  %48 = load ptr, ptr %memberidx17, align 8
  %49 = call ptr %48(ptr nonnull %4)
  %memberidx18 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx18, align 4
  %51 = call ptr @LLVMIntType(i64 64)
  %52 = call ptr @LLVMConstInt(ptr %51, i64 %50, i1 false)
  store ptr %52, ptr %str_len, align 8
  br i1 %21, label %true_block, label %false_block

true_block:                                       ; preds = %for.end
  %53 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %49, ptr nonnull %20, i64 %19, ptr nonnull %str_len)
  br label %end

false_block:                                      ; preds = %for.end
  %memberidx.i98 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %54 = load ptr, ptr %memberidx.i98, align 8
  %55 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %49)
  %memberidx.i115 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %54, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i115, align 4
  %57 = urem i64 %55, %56
  %58 = load ptr, ptr %54, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  %60 = load ptr, ptr %59, align 8
  %.not.i116 = icmp eq ptr %60, null
  br i1 %.not.i116, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %false_block
  %memberidx3.i.i120 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i121
  %61 = phi ptr [ %71, %else.i121 ], [ %58, %while.entry.i.preheader ]
  %62 = phi i64 [ %72, %else.i121 ], [ %56, %while.entry.i.preheader ]
  %63 = phi ptr [ %76, %else.i121 ], [ %60, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %74, %else.i121 ], [ %57, %while.entry.i.preheader ]
  %64 = load ptr, ptr %63, align 8
  %memberidx.i.i117 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  %65 = load i64, ptr %memberidx.i.i117, align 4
  %66 = load i64, ptr %memberidx18, align 4
  %.not.i.i = icmp eq i64 %65, %66
  br i1 %.not.i.i, label %ifend.i.i, label %else.i121

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i119 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  %67 = load ptr, ptr %memberidx2.i.i119, align 8
  %68 = load ptr, ptr %memberidx3.i.i120, align 8
  %69 = call i64 @memcmp(ptr %67, ptr %68, i64 %65)
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %while.end.i, label %ifend.i.i.else.i121_crit_edge

ifend.i.i.else.i121_crit_edge:                    ; preds = %ifend.i.i
  %.pre170 = load i64, ptr %memberidx.i115, align 4
  %.pre171 = load ptr, ptr %54, align 8
  br label %else.i121

while.end.i:                                      ; preds = %ifend.i.i
  %.pre172.pre = load ptr, ptr %54, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre172.pre, i64 %hash.0.i
  %.pre173.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre173.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i121:                                        ; preds = %ifend.i.i.else.i121_crit_edge, %while.entry.i
  %71 = phi ptr [ %.pre171, %ifend.i.i.else.i121_crit_edge ], [ %61, %while.entry.i ]
  %72 = phi i64 [ %.pre170, %ifend.i.i.else.i121_crit_edge ], [ %62, %while.entry.i ]
  %73 = add nuw i64 %hash.0.i, 1
  %74 = urem i64 %73, %72
  %75 = getelementptr inbounds ptr, ptr %71, i64 %74
  %76 = load ptr, ptr %75, align 8
  %.not26.i = icmp eq ptr %76, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre173.pre, i64 0, i32 1
  %77 = load ptr, ptr %memberidx11.i, align 8
  %78 = icmp eq ptr %77, null
  br i1 %78, label %if.entry.i, label %end

if.entry.i:                                       ; preds = %else.i121, %false_block, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %79 = load ptr, ptr %49, align 8
  %memberidx1.i99 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i99, align 8
  %81 = call ptr %80(ptr nonnull %49)
  %82 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %81, ptr nonnull @80)
  %83 = load ptr, ptr %memberidx.i98, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %83, ptr nonnull %49, ptr %82)
  br label %end

end:                                              ; preds = %if.entry.i, %Map_string_LLVMValueRef____getitem__.exit, %true_block
  %ternary = phi ptr [ %53, %true_block ], [ %82, %if.entry.i ], [ %77, %Map_string_LLVMValueRef____getitem__.exit ]
  %memberidx19 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %84 = load ptr, ptr %memberidx19, align 8
  %85 = load i64, ptr %84, align 4
  %86 = icmp eq i64 %85, 20
  br i1 %86, label %if.entry.i155, label %is_object.exit

if.entry.i155:                                    ; preds = %end, %if.entry.i155
  %.tr5.i = phi ptr [ %87, %if.entry.i155 ], [ %84, %end ]
  %memberidx1.i154 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %87 = load ptr, ptr %memberidx1.i154, align 8
  %88 = load i64, ptr %87, align 4
  %89 = icmp eq i64 %88, 20
  br i1 %89, label %if.entry.i155, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i155, %end
  %.lcssa.i = phi i64 [ %85, %end ], [ %88, %if.entry.i155 ]
  %90 = icmp eq i64 %.lcssa.i, 11
  br i1 %90, label %if.entry, label %for.entry29

if.entry:                                         ; preds = %is_object.exit
  %91 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %84, i1 false)
  %92 = call i1 @LLVMIsConstant(ptr %ternary)
  %93 = call i1 @LLVMIsGlobalConstant(ptr %ternary)
  %94 = and i1 %92, %93
  br i1 %94, label %if.entry21, label %else22

if.entry21:                                       ; preds = %if.entry
  %95 = load ptr, ptr %0, align 8
  %96 = call ptr @LLVMGetNamedFunction(ptr %95, ptr nonnull @254)
  %97 = icmp eq ptr %96, null
  br i1 %97, label %if.entry25, label %ifend27

else22:                                           ; preds = %if.entry
  %98 = call ptr @LLVMBuildMalloc(ptr %1, ptr %91, ptr nonnull @80)
  store ptr %98, ptr %args1, align 8
  %99 = getelementptr inbounds ptr, ptr %args1, i64 1
  store ptr %ternary, ptr %99, align 8
  %100 = getelementptr inbounds ptr, ptr %args1, i64 2
  %101 = load ptr, ptr %str_len, align 8
  store ptr %101, ptr %100, align 8
  %102 = load ptr, ptr %memberidx19, align 8
  %memberidx.i108 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %103 = load i64, ptr %102, align 4
  %cond160 = icmp eq i64 %103, 20
  br i1 %cond160, label %if.entry.i148, label %get_class_from_type.exit

if.entry.i148:                                    ; preds = %else22, %if.entry.i148
  %.tr11.i161 = phi ptr [ %104, %if.entry.i148 ], [ %102, %else22 ]
  %memberidx1.i147 = getelementptr inbounds %GenericType, ptr %.tr11.i161, i64 0, i32 3
  %104 = load ptr, ptr %memberidx1.i147, align 8
  %105 = load i64, ptr %104, align 4
  %cond = icmp eq i64 %105, 20
  br i1 %cond, label %if.entry.i148, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i148, %else22
  %memberidx1.i109 = getelementptr inbounds %ObjectType, ptr %102, i64 0, i32 1
  %106 = load ptr, ptr %memberidx1.i109, align 8
  %107 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %106)
  %.not.i122 = icmp eq ptr %107, null
  br i1 %.not.i122, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %108 = load ptr, ptr %memberidx.i108, align 8
  %memberidx.i.i126 = getelementptr inbounds %Program, ptr %108, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i.i126, align 8
  %110 = load i64, ptr %106, align 4
  %memberidx.i.i.i127 = getelementptr inbounds %Array_Module_, ptr %109, i64 0, i32 1
  %111 = load ptr, ptr %memberidx.i.i.i127, align 8
  %112 = getelementptr inbounds ptr, ptr %111, i64 %110
  %113 = load ptr, ptr %112, align 8
  %memberidx2.i.i128 = getelementptr inbounds %Module, ptr %113, i64 0, i32 3
  %114 = load ptr, ptr %memberidx2.i.i128, align 8
  %memberidx3.i.i129 = getelementptr inbounds %TypeId, ptr %106, i64 0, i32 2
  %115 = load i64, ptr %memberidx3.i.i129, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i5.i.i, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %118)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %118)
  %119 = load ptr, ptr %118, align 8
  %120 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %119)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i123 = phi ptr [ %120, %ifend.i ], [ %107, %get_class_from_type.exit ]
  %memberidx2.i110 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i123, i64 0, i32 6
  %121 = load ptr, ptr %memberidx2.i110, align 8
  %.not.i = icmp eq ptr %121, null
  br i1 %.not.i, label %else.i, label %if.entry.i111

if.entry.i111:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %122 = call ptr @LLVM_GetFunctionType(ptr nonnull %121)
  %123 = call ptr @LLVMBuildCall2(ptr %1, ptr %122, ptr nonnull %121, ptr nonnull %args1, i64 3, ptr nonnull @80)
  br label %for.entry29

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %124 = call ptr @malloc(i32 47)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %124, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %125 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %125, align 8
  %memberidx.i.i130 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  store ptr %124, ptr %memberidx.i.i130, align 8
  %memberidx1.i.i131 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i131, align 4
  %memberidx2.i.i132 = getelementptr inbounds %string, ptr %125, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i132, align 4
  %126 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %126, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %127 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i.i.i133 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i.i.i133, align 8
  %memberidx1.i.i.i134 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i134, align 4
  %memberidx2.i.i.i135 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i135, align 4
  %128 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %129 = call ptr %128(ptr nonnull %127)
  %130 = load i64, ptr %memberidx1.i.i.i134, align 4
  %131 = call i64 @write(i64 1, ptr %129, i64 %130)
  %132 = load ptr, ptr %memberidx.i.i.i133, align 8
  call void @free(ptr %132)
  call void @free(ptr %127)
  %133 = load ptr, ptr %125, align 8
  %memberidx.i.i.i139 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %133, i64 0, i32 3
  %134 = load ptr, ptr %memberidx.i.i.i139, align 8
  %135 = call ptr %134(ptr nonnull %125)
  %136 = load i64, ptr %memberidx1.i.i131, align 4
  %137 = call i64 @write(i64 1, ptr %135, i64 %136)
  %138 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %139 = load ptr, ptr %memberidx.i.i130, align 8
  call void @free(ptr %139)
  call void @free(ptr %125)
  call void @exit(i64 -1)
  br label %for.entry29

if.entry25:                                       ; preds = %if.entry21
  %140 = call ptr @malloc(i32 54)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %140, ptr noundef nonnull align 8 dereferenceable(54) @255, i64 54, i1 false)
  %141 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %141, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %141, i64 0, i32 1
  store ptr %140, ptr %memberidx.i.i, align 8
  %memberidx1.i.i96 = getelementptr inbounds %string, ptr %141, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i96, align 4
  %memberidx2.i.i97 = getelementptr inbounds %string, ptr %141, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i97, align 4
  %142 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %142, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %143 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %143, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %143, i64 0, i32 1
  store ptr %142, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %143, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %143, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %144 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %145 = call ptr %144(ptr nonnull %143)
  %146 = load i64, ptr %memberidx1.i.i.i, align 4
  %147 = call i64 @write(i64 1, ptr %145, i64 %146)
  %148 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %148)
  call void @free(ptr %143)
  %149 = load ptr, ptr %141, align 8
  %memberidx.i.i.i112 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %149, i64 0, i32 3
  %150 = load ptr, ptr %memberidx.i.i.i112, align 8
  %151 = call ptr %150(ptr nonnull %141)
  %152 = load i64, ptr %memberidx1.i.i96, align 4
  %153 = call i64 @write(i64 1, ptr %151, i64 %152)
  %154 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %155 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %155)
  call void @free(ptr %141)
  call void @exit(i64 -1)
  br label %ifend27

ifend27:                                          ; preds = %if.entry21, %if.entry25
  store ptr %ternary, ptr %args, align 8
  %156 = getelementptr inbounds ptr, ptr %args, i64 1
  %157 = load ptr, ptr %str_len, align 8
  store ptr %157, ptr %156, align 8
  %158 = call ptr @LLVM_GetFunctionType(ptr %96)
  %159 = call ptr @LLVMBuildCall2(ptr %1, ptr %158, ptr %96, ptr nonnull %args, i64 2, ptr nonnull @80)
  br label %for.entry29

for.entry29:                                      ; preds = %else.i, %if.entry.i111, %ifend27, %is_object.exit
  %str.0 = phi ptr [ %159, %ifend27 ], [ %ternary, %is_object.exit ], [ %98, %if.entry.i111 ], [ %98, %else.i ]
  %160 = call ptr @malloc(i32 25)
  %161 = load ptr, ptr %memberidx2.i104, align 8
  %162 = load i64, ptr %memberidx.i102, align 4
  store i1 false, ptr %160, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %160, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %160, i64 0, i32 3
  store ptr %161, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %160, i64 0, i32 2
  store i64 %162, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %163 = icmp slt i64 %162, 1
  br i1 %163, label %for.end33, label %for.body31

for.body31:                                       ; preds = %for.entry29, %for.body31
  %164 = phi i64 [ %166, %for.body31 ], [ 1, %for.entry29 ]
  %mem.0159.in = phi ptr [ %167, %for.body31 ], [ %161, %for.entry29 ]
  %mem.0159 = load ptr, ptr %mem.0159.in, align 8
  %165 = call ptr @LLVMBuildFree(ptr %1, ptr %mem.0159)
  %166 = add nuw nsw i64 %164, 1
  store i64 %166, ptr %memberidx1.i.i, align 4
  %167 = getelementptr inbounds ptr, ptr %161, i64 %164
  %.not = icmp slt i64 %164, %162
  br i1 %.not, label %for.body31, label %for.end33

for.end33:                                        ; preds = %for.body31, %for.entry29
  tail call void @free(ptr nonnull %160)
  call void @free(ptr %161)
  tail call void @free(ptr %16)
  ret ptr %str.0
}

define internal fastcc ptr @CodeGen_codegen_expression(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args.i = alloca [1 x ptr], align 8
  %func_ty.i = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %args.i.i = alloca [2 x ptr], align 8
  %arg_types.i.i = alloca [2 x ptr], align 8
  %5 = alloca ptr, align 8
  %indices.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 2
  %6 = load i64, ptr %memberidx, align 4
  switch i64 %6, label %common.ret253 [
    i64 4, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 5, label %if.entry10
    i64 2, label %if.entry14
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 10, label %if.entry26
    i64 15, label %if.entry30
    i64 14, label %CodeGen_get_expr_mem.exit221
    i64 13, label %if.entry38
    i64 12, label %if.entry42
    i64 16, label %if.entry46
    i64 11, label %if.entry50
    i64 6, label %if.entry54
    i64 7, label %if.entry58
    i64 17, label %if.entry62
    i64 18, label %if.entry66
  ]

common.ret253:                                    ; preds = %if.entry, %if.entry2, %if.entry6, %if.entry10, %if.entry14, %if.entry18, %CodeGen_codegen_bin_exp.exit, %CodeGen_codegen_unary_exp.exit, %CodeGen_codegen_call_exp.exit, %CodeGen_get_expr_mem.exit221, %if.entry38, %if.entry42, %if.entry54, %if.entry58, %if.entry62, %if.entry66, %true_block.i182, %false_block.i183, %true_block6.i, %false_block7.i, %true_block14.i, %false_block15.i, %true_block22.i, %false_block23.i, %true_block32.i, %false_block33.i, %true_block36.i, %false_block37.i, %3, %if.entry46
  %common.ret253.op = phi ptr [ %390, %if.entry46 ], [ %9, %if.entry ], [ %13, %if.entry2 ], [ %17, %if.entry6 ], [ %20, %if.entry10 ], [ %21, %if.entry14 ], [ %22, %if.entry18 ], [ %common.ret.op.i, %CodeGen_codegen_bin_exp.exit ], [ %common.ret.op.i147, %CodeGen_codegen_unary_exp.exit ], [ %365, %CodeGen_codegen_call_exp.exit ], [ %369, %CodeGen_get_expr_mem.exit221 ], [ %370, %if.entry38 ], [ %371, %if.entry42 ], [ %430, %if.entry54 ], [ %431, %if.entry58 ], [ %432, %if.entry62 ], [ %433, %if.entry66 ], [ %410, %true_block.i182 ], [ %411, %false_block.i183 ], [ %417, %true_block6.i ], [ %418, %false_block7.i ], [ %420, %true_block14.i ], [ %421, %false_block15.i ], [ %424, %true_block22.i ], [ %425, %false_block23.i ], [ %426, %true_block32.i ], [ %427, %false_block33.i ], [ %428, %true_block36.i ], [ %429, %false_block37.i ], [ null, %3 ]
  ret ptr %common.ret253.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %BooleanExpression, ptr %2, i64 0, i32 4
  %7 = load i1, ptr %memberidx.i, align 1
  %8 = tail call ptr @LLVMInt1Type()
  %..i.i = zext i1 %7 to i64
  %9 = tail call ptr @LLVMConstInt(ptr %8, i64 %..i.i, i1 false)
  br label %common.ret253

if.entry2:                                        ; preds = %3
  %memberidx.i134 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %memberidx.i134, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  %memberidx1.i = getelementptr inbounds %IntExpression, ptr %2, i64 0, i32 4
  %12 = load i64, ptr %memberidx1.i, align 4
  %13 = tail call ptr @LLVMConstInt(ptr %11, i64 %12, i1 true)
  br label %common.ret253

if.entry6:                                        ; preds = %3
  %memberidx.i135 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %14 = load ptr, ptr %memberidx.i135, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %14, i1 true)
  %memberidx1.i136 = getelementptr inbounds %FloatExpression, ptr %2, i64 0, i32 4
  %16 = load double, ptr %memberidx1.i136, align 8
  %17 = tail call ptr @LLVMConstReal(ptr %15, double %16)
  br label %common.ret253

if.entry10:                                       ; preds = %3
  %memberidx.i137 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i137, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  %20 = tail call ptr @LLVMConstNull(ptr %19)
  br label %common.ret253

if.entry14:                                       ; preds = %3
  %21 = tail call fastcc ptr @CodeGen_codegen_string(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253

if.entry18:                                       ; preds = %3
  %22 = tail call fastcc ptr @CodeGen_codegen_var_access_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253

if.entry22:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i138 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 5
  %23 = load i64, ptr %memberidx.i138, align 4
  %memberidx1.i139 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 4
  %24 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %25 = load ptr, ptr %memberidx2.i, align 8
  %26 = load i64, ptr %25, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 6
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx5.i, align 8
  %29 = load i64, ptr %28, align 4
  %.not.i = icmp eq i64 %26, %29
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry22
  switch i64 %23, label %ifend15.i [
    i64 11, label %if.entry7.i
    i64 12, label %if.entry10.i
    i64 19, label %if.entry13.i
  ]

ifend.i:                                          ; preds = %if.entry22
  %30 = icmp eq i64 %23, 19
  br i1 %30, label %if.entry13.i, label %ifend15.i

if.entry7.i:                                      ; preds = %if.entry.i
  %31 = tail call ptr @LLVMInt1Type()
  %32 = tail call ptr @LLVMConstInt(ptr %31, i64 0, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry10.i:                                     ; preds = %if.entry.i
  %33 = tail call ptr @LLVMInt1Type()
  %34 = tail call ptr @LLVMConstInt(ptr %33, i64 1, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry13.i:                                     ; preds = %if.entry.i, %ifend.i
  %memberidx.i192 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i192, align 4
  switch i64 %35, label %ifend8.i [
    i64 8, label %if.entry.i194
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i194:                                    ; preds = %if.entry13.i
  %36 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry13.i
  %37 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry13.i
  %38 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %24, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry13.i
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i194, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i193 = phi ptr [ %36, %if.entry.i194 ], [ %37, %if.entry2.i ], [ %38, %if.entry6.i ], [ %39, %ifend8.i ]
  %40 = load ptr, ptr %memberidx4.i, align 8
  %41 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i193, ptr %40)
  br label %CodeGen_codegen_bin_exp.exit

ifend15.i:                                        ; preds = %if.entry.i, %ifend.i
  %42 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  %43 = load ptr, ptr %memberidx4.i, align 8
  %44 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %43)
  %45 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i, align 4
  %47 = icmp eq i64 %46, 5
  %48 = icmp eq i64 %23, 11
  %49 = icmp eq i64 %23, 12
  %50 = add i64 %23, -11
  %51 = icmp ult i64 %50, 2
  %52 = and i1 %51, %47
  br i1 %52, label %if.entry19.i, label %ifend21.i

if.entry19.i:                                     ; preds = %ifend15.i
  %53 = tail call i1 @LLVMIsConstant(ptr %42)
  br i1 %53, label %if.entry22.i, label %ifend24.i

ifend21.i:                                        ; preds = %ifend15.i
  %54 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx30.i = getelementptr inbounds %Expression, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx30.i, align 8
  %memberidx32.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %56 = load ptr, ptr %memberidx32.i, align 8
  %57 = load i64, ptr %56, align 4
  %58 = add i64 %57, -1
  %59 = icmp ult i64 %58, 9
  %60 = icmp eq i64 %23, 6
  %61 = and i1 %60, %59
  br i1 %61, label %if.entry33.i, label %ifend35.i

if.entry22.i:                                     ; preds = %if.entry19.i
  %62 = tail call i1 @LLVMIsNull(ptr %42)
  %63 = tail call ptr @LLVMInt1Type()
  %..i.i140 = zext i1 %62 to i64
  %64 = tail call ptr @LLVMConstInt(ptr %63, i64 %..i.i140, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

ifend24.i:                                        ; preds = %if.entry19.i
  br i1 %48, label %true_block25.i, label %false_block26.i

true_block25.i:                                   ; preds = %ifend24.i
  %65 = tail call ptr @LLVMBuildIsNull(ptr %1, ptr %42, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

false_block26.i:                                  ; preds = %ifend24.i
  %66 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %42, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry33.i:                                     ; preds = %ifend21.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %42, ptr %args.i.i, align 8
  %67 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %44, ptr %67, align 8
  %68 = tail call fastcc ptr @dump_type(ptr nonnull %56, i1 true)
  %69 = load ptr, ptr %68, align 8
  %memberidx.i454.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx.i454.i, align 8
  %71 = tail call ptr %70(ptr nonnull %68)
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @263, ptr %71)
  %73 = load ptr, ptr %5, align 8
  %74 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %74, align 8
  %memberidx.i.i455.i = getelementptr inbounds %string, ptr %74, i64 0, i32 1
  store ptr %73, ptr %memberidx.i.i455.i, align 8
  %memberidx1.i.i456.i = getelementptr inbounds %string, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i.i456.i, align 4
  %memberidx2.i.i457.i = getelementptr inbounds %string, ptr %74, i64 0, i32 3
  store i64 %72, ptr %memberidx2.i.i457.i, align 4
  call void @free(ptr %71)
  %75 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %56, i1 true)
  store ptr %75, ptr %arg_types.i.i, align 8
  %76 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %75, ptr %76, align 8
  %77 = load ptr, ptr %0, align 8
  %78 = call ptr @malloc(i32 16)
  %memberidx1.i.i.i458.i = getelementptr inbounds %IntrinsicResult, ptr %78, i64 0, i32 1
  store i64 0, ptr %78, align 8
  %79 = call ptr @LLVMFunctionType(ptr %75, ptr nonnull %arg_types.i.i, i64 2, i1 false)
  store ptr %79, ptr %memberidx1.i.i.i458.i, align 8
  %80 = load ptr, ptr %74, align 8
  %memberidx1.i10.i.i = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx1.i10.i.i, align 8
  %82 = call ptr %81(ptr nonnull %74)
  %83 = call ptr @LLVMGetNamedFunction(ptr %77, ptr %82)
  %.not.i.i.i = icmp eq ptr %83, null
  br i1 %.not.i.i.i, label %else.i.i.i, label %CodeGen_codegen_pow_expr.exit.i

else.i.i.i:                                       ; preds = %if.entry33.i
  %84 = call ptr @LLVMAddFunction(ptr %77, ptr %82, ptr %79)
  br label %CodeGen_codegen_pow_expr.exit.i

CodeGen_codegen_pow_expr.exit.i:                  ; preds = %if.entry33.i, %else.i.i.i
  %storemerge.i.i.i = phi ptr [ %84, %else.i.i.i ], [ %83, %if.entry33.i ]
  store ptr %storemerge.i.i.i, ptr %78, align 8
  %85 = call ptr @LLVMBuildCall2(ptr %1, ptr %79, ptr %storemerge.i.i.i, ptr nonnull %args.i.i, i64 2, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %CodeGen_codegen_bin_exp.exit

ifend35.i:                                        ; preds = %ifend21.i
  %86 = load i64, ptr %55, align 4
  %87 = icmp eq i64 %86, 13
  br i1 %87, label %if.entry36.i, label %ifend38.i

if.entry36.i:                                     ; preds = %ifend35.i
  %88 = icmp eq i64 %23, 1
  br i1 %88, label %end41.i, label %false_block40.i

ifend38.i:                                        ; preds = %ifend35.i
  %89 = tail call i1 @LLVMIsConstant(ptr %42)
  %90 = tail call i1 @LLVMIsConstant(ptr %44)
  %91 = and i1 %89, %90
  %92 = load i64, ptr %56, align 4
  %93 = load i64, ptr %55, align 4
  %94 = icmp eq i64 %93, 20
  br i1 %94, label %if.entry.i242, label %is_object.exit245

if.entry.i242:                                    ; preds = %ifend38.i, %if.entry.i242
  %.tr5.i240 = phi ptr [ %95, %if.entry.i242 ], [ %55, %ifend38.i ]
  %memberidx1.i241 = getelementptr inbounds %GenericType, ptr %.tr5.i240, i64 0, i32 3
  %95 = load ptr, ptr %memberidx1.i241, align 8
  %96 = load i64, ptr %95, align 4
  %97 = icmp eq i64 %96, 20
  br i1 %97, label %if.entry.i242, label %is_object.exit245

is_object.exit245:                                ; preds = %if.entry.i242, %ifend38.i
  %.lcssa.i243 = phi i64 [ %93, %ifend38.i ], [ %96, %if.entry.i242 ]
  %98 = icmp eq i64 %.lcssa.i243, 11
  %99 = icmp eq i64 %92, 20
  br i1 %99, label %if.entry.i236, label %is_object.exit239

if.entry.i236:                                    ; preds = %is_object.exit245, %if.entry.i236
  %.tr5.i234 = phi ptr [ %100, %if.entry.i236 ], [ %56, %is_object.exit245 ]
  %memberidx1.i235 = getelementptr inbounds %GenericType, ptr %.tr5.i234, i64 0, i32 3
  %100 = load ptr, ptr %memberidx1.i235, align 8
  %101 = load i64, ptr %100, align 4
  %102 = icmp eq i64 %101, 20
  br i1 %102, label %if.entry.i236, label %is_object.exit239

is_object.exit239:                                ; preds = %if.entry.i236, %is_object.exit245
  %.lcssa.i237 = phi i64 [ %92, %is_object.exit245 ], [ %101, %if.entry.i236 ]
  %103 = icmp eq i64 %.lcssa.i237, 11
  %104 = and i1 %98, %103
  %105 = and i1 %51, %104
  %106 = freeze i1 %105
  br i1 %106, label %if.entry45.i, label %switch.early.test

switch.early.test:                                ; preds = %is_object.exit239
  switch i64 %92, label %else46.i [
    i64 12, label %if.entry45.i
    i64 7, label %if.entry45.i
    i64 6, label %if.entry45.i
    i64 5, label %if.entry45.i
    i64 4, label %if.entry45.i
    i64 3, label %if.entry45.i
    i64 2, label %if.entry45.i
    i64 1, label %if.entry45.i
  ]

false_block40.i:                                  ; preds = %if.entry36.i
  %107 = tail call i1 @LLVMIsConstant(ptr %44)
  br i1 %107, label %true_block.i.i, label %false_block.i.i

true_block.i.i:                                   ; preds = %false_block40.i
  %108 = tail call ptr @LLVMConstNeg(ptr %44)
  br label %end41.i

false_block.i.i:                                  ; preds = %false_block40.i
  %109 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %44, ptr nonnull @80)
  br label %end41.i

end41.i:                                          ; preds = %true_block.i.i, %false_block.i.i, %if.entry36.i
  %ternary42.i = phi ptr [ %44, %if.entry36.i ], [ %108, %true_block.i.i ], [ %109, %false_block.i.i ]
  store ptr %ternary42.i, ptr %indices.i, align 8
  %memberidx43.i = getelementptr inbounds %PointerType, ptr %55, i64 0, i32 1
  %110 = load ptr, ptr %memberidx43.i, align 8
  %111 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %110, i1 true)
  %112 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %111, ptr %42, ptr nonnull %indices.i, i64 1, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry45.i:                                     ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %is_object.exit239
  switch i64 %23, label %else105.i [
    i64 1, label %if.entry48.i
    i64 2, label %if.entry64.i
    i64 3, label %if.entry80.i
    i64 4, label %if.entry96.i
    i64 5, label %if.entry104.i
  ]

else46.i:                                         ; preds = %switch.early.test
  %113 = and i64 %92, -2
  %114 = icmp eq i64 %113, 8
  br i1 %114, label %if.entry166.i, label %else167.i

ifend47.i:                                        ; preds = %else125.i, %else213.i, %else185.i, %else167.i
  %115 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %115, ptr noundef nonnull align 8 dereferenceable(33) @264, i64 33, i1 false)
  %116 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %116, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 1
  store ptr %115, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i.i, align 4
  %117 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %117, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %118 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i, align 4
  %119 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %120 = tail call ptr %119(ptr nonnull %118)
  %121 = load i64, ptr %memberidx1.i.i.i.i, align 4
  %122 = tail call i64 @write(i64 1, ptr %120, i64 %121)
  %123 = load ptr, ptr %memberidx.i.i.i.i, align 8
  tail call void @free(ptr %123)
  tail call void @free(ptr %118)
  %124 = load ptr, ptr %116, align 8
  %memberidx.i.i.i189 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %124, i64 0, i32 3
  %125 = load ptr, ptr %memberidx.i.i.i189, align 8
  %126 = tail call ptr %125(ptr nonnull %116)
  %127 = load i64, ptr %memberidx1.i.i.i, align 4
  %128 = tail call i64 @write(i64 1, ptr %126, i64 %127)
  %129 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %130 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %130)
  tail call void @free(ptr %116)
  tail call void @exit(i64 -1)
  br label %CodeGen_codegen_bin_exp.exit

if.entry48.i:                                     ; preds = %if.entry45.i
  %memberidx51.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %131 = load ptr, ptr %memberidx51.i, align 8
  %memberidx52.i = getelementptr inbounds %IntType, ptr %131, i64 0, i32 1
  %132 = load i1, ptr %memberidx52.i, align 1
  br i1 %132, label %if.entry53.i, label %ifend55.i

if.entry53.i:                                     ; preds = %if.entry48.i
  br i1 %91, label %true_block56.i, label %false_block57.i

ifend55.i:                                        ; preds = %if.entry48.i
  br i1 %91, label %true_block60.i, label %false_block61.i

true_block56.i:                                   ; preds = %if.entry53.i
  %133 = tail call ptr @LLVMConstNSWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block57.i:                                  ; preds = %if.entry53.i
  %134 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block60.i:                                   ; preds = %ifend55.i
  %135 = tail call ptr @LLVMConstNUWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block61.i:                                  ; preds = %ifend55.i
  %136 = tail call ptr @LLVMBuildNUWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry64.i:                                     ; preds = %if.entry45.i
  %memberidx67.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %137 = load ptr, ptr %memberidx67.i, align 8
  %memberidx68.i = getelementptr inbounds %IntType, ptr %137, i64 0, i32 1
  %138 = load i1, ptr %memberidx68.i, align 1
  br i1 %138, label %if.entry69.i, label %ifend71.i

if.entry69.i:                                     ; preds = %if.entry64.i
  br i1 %91, label %true_block72.i, label %false_block73.i

ifend71.i:                                        ; preds = %if.entry64.i
  br i1 %91, label %true_block76.i, label %false_block77.i

true_block72.i:                                   ; preds = %if.entry69.i
  %139 = tail call ptr @LLVMConstNSWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block73.i:                                  ; preds = %if.entry69.i
  %140 = tail call ptr @LLVMBuildNSWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block76.i:                                   ; preds = %ifend71.i
  %141 = tail call ptr @LLVMConstNUWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block77.i:                                  ; preds = %ifend71.i
  %142 = tail call ptr @LLVMBuildNUWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry80.i:                                     ; preds = %if.entry45.i
  %memberidx83.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %143 = load ptr, ptr %memberidx83.i, align 8
  %memberidx84.i = getelementptr inbounds %IntType, ptr %143, i64 0, i32 1
  %144 = load i1, ptr %memberidx84.i, align 1
  br i1 %144, label %if.entry85.i, label %ifend87.i

if.entry85.i:                                     ; preds = %if.entry80.i
  br i1 %91, label %true_block88.i, label %false_block89.i

ifend87.i:                                        ; preds = %if.entry80.i
  br i1 %91, label %true_block92.i, label %false_block93.i

true_block88.i:                                   ; preds = %if.entry85.i
  %145 = tail call ptr @LLVMConstNSWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block89.i:                                  ; preds = %if.entry85.i
  %146 = tail call ptr @LLVMBuildNSWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block92.i:                                   ; preds = %ifend87.i
  %147 = tail call ptr @LLVMConstNUWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block93.i:                                  ; preds = %ifend87.i
  %148 = tail call ptr @LLVMBuildNUWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry96.i:                                     ; preds = %if.entry45.i
  %memberidx99.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %149 = load ptr, ptr %memberidx99.i, align 8
  %memberidx100.i = getelementptr inbounds %IntType, ptr %149, i64 0, i32 1
  %150 = load i1, ptr %memberidx100.i, align 1
  br i1 %150, label %if.entry101.i, label %ifend103.i

if.entry101.i:                                    ; preds = %if.entry96.i
  %151 = tail call ptr @LLVMBuildSDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

ifend103.i:                                       ; preds = %if.entry96.i
  %152 = tail call ptr @LLVMBuildUDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry104.i:                                    ; preds = %if.entry45.i
  %memberidx107.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %153 = load ptr, ptr %memberidx107.i, align 8
  %memberidx108.i = getelementptr inbounds %IntType, ptr %153, i64 0, i32 1
  %154 = load i1, ptr %memberidx108.i, align 1
  br i1 %154, label %if.entry109.i, label %ifend111.i

else105.i:                                        ; preds = %if.entry45.i
  %155 = add i64 %23, -7
  %156 = icmp ult i64 %155, 4
  br i1 %156, label %if.entry112.i, label %else113.i

if.entry109.i:                                    ; preds = %if.entry104.i
  %157 = tail call ptr @LLVMBuildSRem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

ifend111.i:                                       ; preds = %if.entry104.i
  %158 = tail call ptr @LLVMBuildURem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry112.i:                                    ; preds = %else105.i
  %159 = add nuw nsw i64 %23, 31
  br i1 %91, label %true_block120.i, label %false_block121.i

else113.i:                                        ; preds = %else105.i
  br i1 %51, label %if.entry124.i, label %else125.i

true_block120.i:                                  ; preds = %if.entry112.i
  %160 = tail call ptr @LLVMConstICmp(i64 %159, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block121.i:                                 ; preds = %if.entry112.i
  %161 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %159, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry124.i:                                    ; preds = %else113.i
  %162 = add nuw nsw i64 %23, 21
  br i1 %91, label %true_block127.i, label %false_block128.i

else125.i:                                        ; preds = %else113.i
  switch i64 %23, label %ifend47.i [
    i64 13, label %if.entry131.i
    i64 14, label %if.entry138.i
    i64 15, label %if.entry145.i
    i64 16, label %if.entry152.i
    i64 17, label %if.entry159.i
  ]

true_block127.i:                                  ; preds = %if.entry124.i
  %163 = tail call ptr @LLVMConstICmp(i64 %162, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block128.i:                                 ; preds = %if.entry124.i
  %164 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %162, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry131.i:                                    ; preds = %else125.i
  br i1 %91, label %true_block134.i, label %false_block135.i

true_block134.i:                                  ; preds = %if.entry131.i
  %165 = tail call ptr @LLVMConstShl(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block135.i:                                 ; preds = %if.entry131.i
  %166 = tail call ptr @LLVMBuildShl(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry138.i:                                    ; preds = %else125.i
  br i1 %91, label %true_block141.i, label %false_block142.i

true_block141.i:                                  ; preds = %if.entry138.i
  %167 = tail call ptr @LLVMConstLShr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block142.i:                                 ; preds = %if.entry138.i
  %168 = tail call ptr @LLVMBuildLShr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry145.i:                                    ; preds = %else125.i
  br i1 %91, label %true_block148.i, label %false_block149.i

true_block148.i:                                  ; preds = %if.entry145.i
  %169 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block149.i:                                 ; preds = %if.entry145.i
  %170 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry152.i:                                    ; preds = %else125.i
  br i1 %91, label %true_block155.i, label %false_block156.i

true_block155.i:                                  ; preds = %if.entry152.i
  %171 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block156.i:                                 ; preds = %if.entry152.i
  %172 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry159.i:                                    ; preds = %else125.i
  br i1 %91, label %true_block162.i, label %false_block163.i

true_block162.i:                                  ; preds = %if.entry159.i
  %173 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block163.i:                                 ; preds = %if.entry159.i
  %174 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry166.i:                                    ; preds = %else46.i
  switch i64 %23, label %else182.i [
    i64 1, label %if.entry169.i
    i64 2, label %if.entry172.i
    i64 3, label %if.entry175.i
    i64 4, label %if.entry178.i
    i64 5, label %if.entry181.i
  ]

else167.i:                                        ; preds = %else46.i
  %175 = icmp eq i64 %92, 0
  br i1 %175, label %if.entry202.i, label %ifend47.i

if.entry169.i:                                    ; preds = %if.entry166.i
  %176 = tail call ptr @LLVMBuildFAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry172.i:                                    ; preds = %if.entry166.i
  %177 = tail call ptr @LLVMBuildFSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry175.i:                                    ; preds = %if.entry166.i
  %178 = tail call ptr @LLVMBuildFMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry178.i:                                    ; preds = %if.entry166.i
  %179 = tail call ptr @LLVMBuildFDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry181.i:                                    ; preds = %if.entry166.i
  %180 = tail call ptr @LLVMBuildFRem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

else182.i:                                        ; preds = %if.entry166.i
  %181 = add i64 %23, -7
  %182 = icmp ult i64 %181, 4
  br i1 %182, label %if.entry184.i, label %else185.i

if.entry184.i:                                    ; preds = %else182.i
  %183 = add nsw i64 %23, -5
  br i1 %91, label %true_block187.i, label %false_block188.i

else185.i:                                        ; preds = %else182.i
  br i1 %51, label %if.entry191.i, label %ifend47.i

true_block187.i:                                  ; preds = %if.entry184.i
  %184 = tail call ptr @LLVMConstFCmp(i64 %183, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block188.i:                                 ; preds = %if.entry184.i
  %185 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %183, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry191.i:                                    ; preds = %else185.i
  %.226.i = select i1 %49, i64 6, i64 1
  br i1 %91, label %true_block198.i, label %false_block199.i

true_block198.i:                                  ; preds = %if.entry191.i
  %186 = tail call ptr @LLVMConstFCmp(i64 %.226.i, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block199.i:                                 ; preds = %if.entry191.i
  %187 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %.226.i, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry202.i:                                    ; preds = %else167.i
  switch i64 %23, label %else213.i [
    i64 16, label %if.entry205.i
    i64 11, label %if.entry205.i
    i64 15, label %if.entry212.i
  ]

if.entry205.i:                                    ; preds = %if.entry202.i, %if.entry202.i
  br i1 %91, label %true_block208.i, label %false_block209.i

true_block208.i:                                  ; preds = %if.entry205.i
  %188 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block209.i:                                 ; preds = %if.entry205.i
  %189 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry212.i:                                    ; preds = %if.entry202.i
  br i1 %91, label %true_block215.i, label %false_block216.i

else213.i:                                        ; preds = %if.entry202.i
  br i1 %49, label %if.entry219.i, label %ifend47.i

true_block215.i:                                  ; preds = %if.entry212.i
  %190 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block216.i:                                 ; preds = %if.entry212.i
  %191 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry219.i:                                    ; preds = %else213.i
  br i1 %91, label %true_block222.i, label %false_block223.i

true_block222.i:                                  ; preds = %if.entry219.i
  %192 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block223.i:                                 ; preds = %if.entry219.i
  %193 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

CodeGen_codegen_bin_exp.exit:                     ; preds = %if.entry7.i, %if.entry10.i, %CodeGen_get_expr_mem.exit, %if.entry22.i, %true_block25.i, %false_block26.i, %CodeGen_codegen_pow_expr.exit.i, %end41.i, %ifend47.i, %true_block56.i, %false_block57.i, %true_block60.i, %false_block61.i, %true_block72.i, %false_block73.i, %true_block76.i, %false_block77.i, %true_block88.i, %false_block89.i, %true_block92.i, %false_block93.i, %if.entry101.i, %ifend103.i, %if.entry109.i, %ifend111.i, %true_block120.i, %false_block121.i, %true_block127.i, %false_block128.i, %true_block134.i, %false_block135.i, %true_block141.i, %false_block142.i, %true_block148.i, %false_block149.i, %true_block155.i, %false_block156.i, %true_block162.i, %false_block163.i, %if.entry169.i, %if.entry172.i, %if.entry175.i, %if.entry178.i, %if.entry181.i, %true_block187.i, %false_block188.i, %true_block198.i, %false_block199.i, %true_block208.i, %false_block209.i, %true_block215.i, %false_block216.i, %true_block222.i, %false_block223.i
  %common.ret.op.i = phi ptr [ %32, %if.entry7.i ], [ %34, %if.entry10.i ], [ %41, %CodeGen_get_expr_mem.exit ], [ %64, %if.entry22.i ], [ %85, %CodeGen_codegen_pow_expr.exit.i ], [ %112, %end41.i ], [ null, %ifend47.i ], [ %151, %if.entry101.i ], [ %152, %ifend103.i ], [ %157, %if.entry109.i ], [ %158, %ifend111.i ], [ %176, %if.entry169.i ], [ %177, %if.entry172.i ], [ %178, %if.entry175.i ], [ %179, %if.entry178.i ], [ %180, %if.entry181.i ], [ %65, %true_block25.i ], [ %66, %false_block26.i ], [ %133, %true_block56.i ], [ %134, %false_block57.i ], [ %135, %true_block60.i ], [ %136, %false_block61.i ], [ %139, %true_block72.i ], [ %140, %false_block73.i ], [ %141, %true_block76.i ], [ %142, %false_block77.i ], [ %145, %true_block88.i ], [ %146, %false_block89.i ], [ %147, %true_block92.i ], [ %148, %false_block93.i ], [ %160, %true_block120.i ], [ %161, %false_block121.i ], [ %163, %true_block127.i ], [ %164, %false_block128.i ], [ %165, %true_block134.i ], [ %166, %false_block135.i ], [ %167, %true_block141.i ], [ %168, %false_block142.i ], [ %169, %true_block148.i ], [ %170, %false_block149.i ], [ %171, %true_block155.i ], [ %172, %false_block156.i ], [ %173, %true_block162.i ], [ %174, %false_block163.i ], [ %184, %true_block187.i ], [ %185, %false_block188.i ], [ %186, %true_block198.i ], [ %187, %false_block199.i ], [ %188, %true_block208.i ], [ %189, %false_block209.i ], [ %190, %true_block215.i ], [ %191, %false_block216.i ], [ %192, %true_block222.i ], [ %193, %false_block223.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret253

if.entry26:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i142 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 4
  %194 = load i64, ptr %memberidx.i142, align 4
  %memberidx1.i143 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 5
  %195 = load ptr, ptr %memberidx1.i143, align 8
  %196 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %195)
  switch i64 %194, label %ifend29.i [
    i64 1, label %if.entry.i145
    i64 6, label %if.entry7.i148
    i64 7, label %if.entry27.i
  ]

if.entry.i145:                                    ; preds = %if.entry26
  %memberidx2.i144 = getelementptr inbounds %Expression, ptr %195, i64 0, i32 3
  %197 = load ptr, ptr %memberidx2.i144, align 8
  %198 = load i64, ptr %197, align 4
  %199 = icmp eq i64 %198, 20
  br i1 %199, label %if.entry.i232, label %is_object.exit

if.entry.i232:                                    ; preds = %if.entry.i145, %if.entry.i232
  %.tr5.i = phi ptr [ %200, %if.entry.i232 ], [ %197, %if.entry.i145 ]
  %memberidx1.i231 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %200 = load ptr, ptr %memberidx1.i231, align 8
  %201 = load i64, ptr %200, align 4
  %202 = icmp eq i64 %201, 20
  br i1 %202, label %if.entry.i232, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i232, %if.entry.i145
  %.lcssa.i = phi i64 [ %198, %if.entry.i145 ], [ %201, %if.entry.i232 ]
  %203 = icmp eq i64 %.lcssa.i, 11
  br i1 %203, label %if.entry3.i, label %ifend5.i

if.entry3.i:                                      ; preds = %is_object.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %func_ty.i)
  %204 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %204, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %205 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %205, align 8
  %memberidx.i.i.i246 = getelementptr inbounds %string, ptr %205, i64 0, i32 1
  store ptr %204, ptr %memberidx.i.i.i246, align 8
  %memberidx1.i.i.i247 = getelementptr inbounds %string, ptr %205, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i247, align 4
  %memberidx2.i.i.i248 = getelementptr inbounds %string, ptr %205, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i248, align 4
  %206 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %196, ptr nonnull %197, ptr nonnull %205, ptr nonnull %func_ty.i)
  %207 = icmp eq ptr %206, null
  br i1 %207, label %CodeGen_codegen_del_call.exit, label %ifend.i249

ifend.i249:                                       ; preds = %if.entry3.i
  store ptr %196, ptr %args.i, align 8
  %208 = load ptr, ptr %func_ty.i, align 8
  %209 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %208, i1 false)
  %210 = call ptr @LLVMBuildCall2(ptr %1, ptr %209, ptr nonnull %206, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  br label %CodeGen_codegen_del_call.exit

CodeGen_codegen_del_call.exit:                    ; preds = %if.entry3.i, %ifend.i249
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %func_ty.i)
  br label %ifend5.i

ifend5.i:                                         ; preds = %CodeGen_codegen_del_call.exit, %is_object.exit
  %211 = call ptr @LLVMBuildFree(ptr %1, ptr %196)
  br label %CodeGen_codegen_unary_exp.exit

if.entry7.i148:                                   ; preds = %if.entry26
  %memberidx10.i = getelementptr inbounds %Expression, ptr %195, i64 0, i32 3
  %212 = load ptr, ptr %memberidx10.i, align 8
  %213 = load i64, ptr %212, align 4
  %214 = add i64 %213, -1
  %215 = icmp ult i64 %214, 7
  br i1 %215, label %if.entry11.i, label %else12.i

if.entry11.i:                                     ; preds = %if.entry7.i148
  %memberidx15.i = getelementptr inbounds %IntType, ptr %212, i64 0, i32 1
  %216 = load i1, ptr %memberidx15.i, align 1
  %217 = tail call i1 @LLVMIsConstant(ptr %196)
  br i1 %216, label %if.entry16.i, label %ifend18.i

else12.i:                                         ; preds = %if.entry7.i148
  %218 = and i64 %213, -2
  %219 = icmp eq i64 %218, 8
  br i1 %219, label %if.entry24.i, label %CodeGen_codegen_unary_exp.exit

if.entry16.i:                                     ; preds = %if.entry11.i
  br i1 %217, label %true_block.i149, label %false_block.i150

ifend18.i:                                        ; preds = %if.entry11.i
  br i1 %217, label %true_block19.i, label %false_block20.i

true_block.i149:                                  ; preds = %if.entry16.i
  %220 = tail call ptr @LLVMConstNSWNeg(ptr %196)
  br label %CodeGen_codegen_unary_exp.exit

false_block.i150:                                 ; preds = %if.entry16.i
  %221 = tail call ptr @LLVMBuildNSWNeg(ptr %1, ptr %196, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

true_block19.i:                                   ; preds = %ifend18.i
  %222 = tail call ptr @LLVMConstNUWNeg(ptr %196)
  br label %CodeGen_codegen_unary_exp.exit

false_block20.i:                                  ; preds = %ifend18.i
  %223 = tail call ptr @LLVMBuildNUWNeg(ptr %1, ptr %196, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry24.i:                                     ; preds = %else12.i
  %224 = tail call ptr @LLVMBuildFNeg(ptr %1, ptr %196, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry27.i:                                     ; preds = %if.entry26
  %225 = tail call i1 @LLVMIsConstant(ptr %196)
  br i1 %225, label %true_block30.i, label %false_block31.i

ifend29.i:                                        ; preds = %if.entry26
  %226 = icmp eq i64 %194, 8
  switch i64 %194, label %CodeGen_codegen_unary_exp.exit [
    i64 8, label %if.entry34.i
    i64 5, label %if.entry34.i
    i64 4, label %if.entry34.i
    i64 3, label %if.entry34.i
    i64 2, label %if.entry34.i
  ]

true_block30.i:                                   ; preds = %if.entry27.i
  %227 = tail call ptr @LLVMConstNot(ptr %196)
  br label %CodeGen_codegen_unary_exp.exit

false_block31.i:                                  ; preds = %if.entry27.i
  %228 = tail call ptr @LLVMBuildNot(ptr %1, ptr %196, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry34.i:                                     ; preds = %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i
  %memberidx.i196 = getelementptr inbounds %Expression, ptr %195, i64 0, i32 2
  %229 = load i64, ptr %memberidx.i196, align 4
  switch i64 %229, label %ifend8.i203 [
    i64 8, label %if.entry.i198
    i64 14, label %if.entry2.i200
    i64 13, label %if.entry6.i202
  ]

if.entry.i198:                                    ; preds = %if.entry34.i
  %230 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %195)
  br label %CodeGen_get_expr_mem.exit204

if.entry2.i200:                                   ; preds = %if.entry34.i
  %231 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %195)
  br label %CodeGen_get_expr_mem.exit204

if.entry6.i202:                                   ; preds = %if.entry34.i
  %232 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %195, ptr null)
  br label %CodeGen_get_expr_mem.exit204

ifend8.i203:                                      ; preds = %if.entry34.i
  %233 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %195)
  br label %CodeGen_get_expr_mem.exit204

CodeGen_get_expr_mem.exit204:                     ; preds = %if.entry.i198, %if.entry2.i200, %if.entry6.i202, %ifend8.i203
  %common.ret.op.i197 = phi ptr [ %230, %if.entry.i198 ], [ %231, %if.entry2.i200 ], [ %232, %if.entry6.i202 ], [ %233, %ifend8.i203 ]
  br i1 %226, label %CodeGen_codegen_unary_exp.exit, label %ifend39.i

ifend39.i:                                        ; preds = %CodeGen_get_expr_mem.exit204
  %memberidx40.i = getelementptr inbounds %Expression, ptr %195, i64 0, i32 3
  %234 = load ptr, ptr %memberidx40.i, align 8
  %235 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %234, i1 true)
  %236 = icmp eq i64 %194, 2
  %237 = icmp eq i64 %194, 4
  %238 = or i1 %236, %237
  %..i = select i1 %238, i64 1, i64 -1
  %239 = load ptr, ptr %memberidx40.i, align 8
  %240 = load i64, ptr %239, align 4
  %241 = icmp eq i64 %240, 13
  br i1 %241, label %if.entry46.i, label %else47.i

if.entry46.i:                                     ; preds = %ifend39.i
  %memberidx50.i = getelementptr inbounds %PointerType, ptr %239, i64 0, i32 1
  %242 = load ptr, ptr %memberidx50.i, align 8
  %243 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %242, i1 true)
  %244 = tail call ptr @LLVMInt32Type()
  %245 = tail call ptr @LLVMConstInt(ptr %244, i64 %..i, i1 true)
  store ptr %245, ptr %indices.i, align 8
  %246 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %243, ptr %196, ptr nonnull %indices.i, i64 1, ptr nonnull @265)
  br label %ifend48.i

else47.i:                                         ; preds = %ifend39.i
  %247 = add i64 %240, -1
  %248 = icmp ult i64 %247, 9
  br i1 %248, label %if.entry52.i, label %ifend48.i

ifend48.i:                                        ; preds = %end57.i, %else47.i, %if.entry46.i
  %new_value.0.i = phi ptr [ %246, %if.entry46.i ], [ %255, %end57.i ], [ null, %else47.i ]
  %249 = call ptr @LLVMBuildStore(ptr %1, ptr %new_value.0.i, ptr %common.ret.op.i197)
  %250 = icmp ugt i64 %194, 2
  %ternary63.i = select i1 %250, ptr %196, ptr %new_value.0.i
  br label %CodeGen_codegen_unary_exp.exit

if.entry52.i:                                     ; preds = %else47.i
  %251 = icmp ult i64 %247, 7
  br i1 %251, label %true_block55.i, label %false_block56.i

true_block55.i:                                   ; preds = %if.entry52.i
  %252 = tail call ptr @LLVMConstInt(ptr %235, i64 %..i, i1 false)
  br label %end57.i

false_block56.i:                                  ; preds = %if.entry52.i
  %253 = sitofp i64 %..i to double
  %254 = tail call ptr @LLVMConstReal(ptr %235, double %253)
  br label %end57.i

end57.i:                                          ; preds = %false_block56.i, %true_block55.i
  %ternary59.i = phi ptr [ %252, %true_block55.i ], [ %254, %false_block56.i ]
  %255 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %196, ptr %ternary59.i, ptr nonnull @80)
  br label %ifend48.i

CodeGen_codegen_unary_exp.exit:                   ; preds = %else12.i, %CodeGen_get_expr_mem.exit204, %ifend29.i, %ifend5.i, %true_block.i149, %false_block.i150, %true_block19.i, %false_block20.i, %if.entry24.i, %true_block30.i, %false_block31.i, %ifend48.i
  %common.ret.op.i147 = phi ptr [ null, %ifend5.i ], [ %224, %if.entry24.i ], [ %ternary63.i, %ifend48.i ], [ %220, %true_block.i149 ], [ %221, %false_block.i150 ], [ %222, %true_block19.i ], [ %223, %false_block20.i ], [ %227, %true_block30.i ], [ %228, %false_block31.i ], [ %196, %ifend29.i ], [ %common.ret.op.i197, %CodeGen_get_expr_mem.exit204 ], [ %196, %else12.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret253

if.entry30:                                       ; preds = %3
  %256 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %256, align 8
  %memberidx.i.i151 = getelementptr inbounds %Array_LLVMValueRef_, ptr %256, i64 0, i32 2
  %memberidx1.i.i152 = getelementptr inbounds %Array_LLVMValueRef_, ptr %256, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %Array_LLVMValueRef_, ptr %256, i64 0, i32 1
  %257 = tail call ptr @malloc(i32 64)
  store ptr %257, ptr %memberidx2.i.i153, align 8
  store i64 0, ptr %memberidx.i.i151, align 4
  %memberidx2.i155 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 4
  %258 = load ptr, ptr %memberidx2.i155, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %258, i64 0, i32 2
  %259 = load i64, ptr %memberidx3.i, align 4
  %260 = icmp eq i64 %259, 13
  br i1 %260, label %if.entry.i160, label %if.entry14.i

if.entry.i160:                                    ; preds = %if.entry30
  %memberidx5.i156 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %261 = load ptr, ptr %memberidx5.i156, align 8
  %memberidx6.i = getelementptr inbounds %MemberExpression, ptr %258, i64 0, i32 5
  %262 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i.i157 = getelementptr inbounds %PropId, ptr %262, i64 0, i32 1
  %263 = load ptr, ptr %memberidx.i.i.i157, align 8
  %memberidx.i.i.i.i158 = getelementptr inbounds %Program, ptr %261, i64 0, i32 1
  %264 = load ptr, ptr %memberidx.i.i.i.i158, align 8
  %265 = load i64, ptr %263, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %264, i64 0, i32 1
  %266 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %267 = getelementptr inbounds ptr, ptr %266, i64 %265
  %268 = load ptr, ptr %267, align 8
  %memberidx2.i.i.i.i159 = getelementptr inbounds %Module, ptr %268, i64 0, i32 3
  %269 = load ptr, ptr %memberidx2.i.i.i.i159, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %263, i64 0, i32 2
  %270 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %269, i64 0, i32 1
  %271 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %272 = getelementptr inbounds ptr, ptr %271, i64 %270
  %273 = load ptr, ptr %272, align 8
  %memberidx.i65.i = getelementptr inbounds %Class, ptr %273, i64 0, i32 5
  %274 = load ptr, ptr %memberidx.i65.i, align 8
  %memberidx1.i66.i = getelementptr inbounds %PropId, ptr %262, i64 0, i32 2
  %275 = load i64, ptr %memberidx1.i66.i, align 4
  %memberidx.i3.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %274, i64 0, i32 1
  %276 = load ptr, ptr %memberidx.i3.i.i, align 8
  %277 = getelementptr inbounds ptr, ptr %276, i64 %275
  %278 = load ptr, ptr %277, align 8
  %memberidx7.i = getelementptr inbounds %ClassMethod, ptr %278, i64 0, i32 1
  %279 = load i1, ptr %memberidx7.i, align 1
  br i1 %279, label %ifend21.i167, label %if.entry8.i

ifend.i161:                                       ; preds = %ifend.i212, %if.entry8.i
  %memberidx13.i = getelementptr inbounds %MemberExpression, ptr %258, i64 0, i32 4
  %280 = load ptr, ptr %memberidx13.i, align 8
  %281 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %280)
  %282 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %258, ptr %281)
  store i64 1, ptr %memberidx.i.i151, align 4
  store ptr %281, ptr %257, align 8
  %283 = icmp eq ptr %282, null
  br i1 %283, label %ifend.i161.if.entry14.i_crit_edge, label %for.entry.i

ifend.i161.if.entry14.i_crit_edge:                ; preds = %ifend.i161
  %.pre = load ptr, ptr %memberidx2.i155, align 8
  %memberidx18.i.phi.trans.insert = getelementptr inbounds %Expression, ptr %.pre, i64 0, i32 2
  %.pre261 = load i64, ptr %memberidx18.i.phi.trans.insert, align 4
  br label %if.entry14.i

if.entry8.i:                                      ; preds = %if.entry.i160
  %284 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr nonnull %263)
  %.not.i205 = icmp eq ptr %284, null
  br i1 %.not.i205, label %ifend.i212, label %ifend.i161

ifend.i212:                                       ; preds = %if.entry8.i
  %285 = load ptr, ptr %memberidx5.i156, align 8
  %memberidx.i.i209 = getelementptr inbounds %Program, ptr %285, i64 0, i32 1
  %286 = load ptr, ptr %memberidx.i.i209, align 8
  %287 = load i64, ptr %263, align 4
  %memberidx.i.i.i210 = getelementptr inbounds %Array_Module_, ptr %286, i64 0, i32 1
  %288 = load ptr, ptr %memberidx.i.i.i210, align 8
  %289 = getelementptr inbounds ptr, ptr %288, i64 %287
  %290 = load ptr, ptr %289, align 8
  %memberidx2.i.i211 = getelementptr inbounds %Module, ptr %290, i64 0, i32 3
  %291 = load ptr, ptr %memberidx2.i.i211, align 8
  %292 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %291, i64 0, i32 1
  %293 = load ptr, ptr %memberidx.i5.i.i, align 8
  %294 = getelementptr inbounds ptr, ptr %293, i64 %292
  %295 = load ptr, ptr %294, align 8
  tail call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %295)
  tail call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %295)
  %296 = load ptr, ptr %295, align 8
  %297 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %296)
  br label %ifend.i161

if.entry14.i:                                     ; preds = %ifend.i161.if.entry14.i_crit_edge, %if.entry30
  %298 = phi i64 [ 1, %ifend.i161.if.entry14.i_crit_edge ], [ 0, %if.entry30 ]
  %299 = phi i64 [ %.pre261, %ifend.i161.if.entry14.i_crit_edge ], [ %259, %if.entry30 ]
  %300 = phi ptr [ %.pre, %ifend.i161.if.entry14.i_crit_edge ], [ %258, %if.entry30 ]
  %301 = icmp eq i64 %299, 8
  br i1 %301, label %if.entry19.i164, label %ifend21.i167

if.entry19.i164:                                  ; preds = %if.entry14.i
  %memberidx23.i = getelementptr inbounds %VarAccessExpression, ptr %300, i64 0, i32 4
  %302 = load ptr, ptr %memberidx23.i, align 8
  %memberidx24.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %303 = load ptr, ptr %memberidx24.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i70.i = getelementptr inbounds %VarId, ptr %302, i64 0, i32 1
  %304 = load i64, ptr %memberidx.i70.i, align 4
  %305 = load i64, ptr %302, align 4
  %memberidx2.i71.i = getelementptr inbounds %VarId, ptr %302, i64 0, i32 2
  %306 = load i64, ptr %memberidx2.i71.i, align 4
  %307 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %304, i64 %305, i64 %306)
  %308 = load ptr, ptr %4, align 8
  %309 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %309, align 8
  %memberidx.i.i72.i = getelementptr inbounds %string, ptr %309, i64 0, i32 1
  store ptr %308, ptr %memberidx.i.i72.i, align 8
  %memberidx1.i.i.i163 = getelementptr inbounds %string, ptr %309, i64 0, i32 2
  store i64 %307, ptr %memberidx1.i.i.i163, align 4
  %memberidx2.i.i73.i = getelementptr inbounds %string, ptr %309, i64 0, i32 3
  store i64 %307, ptr %memberidx2.i.i73.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %310 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %309)
  %memberidx.i74.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %303, i64 0, i32 1
  %311 = load i64, ptr %memberidx.i74.i, align 4
  %312 = urem i64 %310, %311
  %313 = load ptr, ptr %303, align 8
  %314 = getelementptr inbounds ptr, ptr %313, i64 %312
  %315 = load ptr, ptr %314, align 8
  %.not.i75.i = icmp eq ptr %315, null
  br i1 %.not.i75.i, label %ifend21.i167, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry19.i164, %else.i.i
  %316 = phi ptr [ %326, %else.i.i ], [ %313, %if.entry19.i164 ]
  %317 = phi i64 [ %327, %else.i.i ], [ %311, %if.entry19.i164 ]
  %318 = phi ptr [ %331, %else.i.i ], [ %315, %if.entry19.i164 ]
  %hash.0.i.i = phi i64 [ %329, %else.i.i ], [ %312, %if.entry19.i164 ]
  %319 = load ptr, ptr %318, align 8
  %memberidx.i.i76.i = getelementptr inbounds %string, ptr %319, i64 0, i32 2
  %320 = load i64, ptr %memberidx.i.i76.i, align 4
  %321 = load i64, ptr %memberidx1.i.i.i163, align 4
  %.not.i.i.i165 = icmp eq i64 %320, %321
  br i1 %.not.i.i.i165, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i78.i = getelementptr inbounds %string, ptr %319, i64 0, i32 1
  %322 = load ptr, ptr %memberidx2.i.i78.i, align 8
  %323 = load ptr, ptr %memberidx.i.i72.i, align 8
  %324 = call i64 @memcmp(ptr %322, ptr %323, i64 %320)
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre262 = load i64, ptr %memberidx.i74.i, align 4
  %.pre263 = load ptr, ptr %303, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre264.pre = load ptr, ptr %303, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre264.pre, i64 %hash.0.i.i
  %.pre265.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre265.pre, null
  br i1 %.not25.i.i, label %ifend21.i167, label %Map_string_LLVMValueRef____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %326 = phi ptr [ %.pre263, %ifend.i.i.i.else.i.i_crit_edge ], [ %316, %while.entry.i.i ]
  %327 = phi i64 [ %.pre262, %ifend.i.i.i.else.i.i_crit_edge ], [ %317, %while.entry.i.i ]
  %328 = add nuw i64 %hash.0.i.i, 1
  %329 = urem i64 %328, %327
  %330 = getelementptr inbounds ptr, ptr %326, i64 %329
  %331 = load ptr, ptr %330, align 8
  %.not26.i.i = icmp eq ptr %331, null
  br i1 %.not26.i.i, label %ifend21.i167, label %while.entry.i.i

Map_string_LLVMValueRef____getitem__.exit.i:      ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre265.pre, i64 0, i32 1
  %332 = load ptr, ptr %memberidx11.i.i, align 8
  %.not.i166 = icmp eq ptr %332, null
  br i1 %.not.i166, label %ifend21.i167, label %Array_LLVMValueRef____sl__.exit86.i

ifend21.i167:                                     ; preds = %else.i.i, %if.entry19.i164, %if.entry.i160, %while.end.i.i, %Array_LLVMValueRef____sl__.exit86.i, %Map_string_LLVMValueRef____getitem__.exit.i, %if.entry14.i
  %333 = phi i64 [ %298, %while.end.i.i ], [ %336, %Array_LLVMValueRef____sl__.exit86.i ], [ %298, %Map_string_LLVMValueRef____getitem__.exit.i ], [ %298, %if.entry14.i ], [ 0, %if.entry.i160 ], [ %298, %if.entry19.i164 ], [ %298, %else.i.i ]
  %334 = load ptr, ptr %memberidx2.i155, align 8
  %335 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %334)
  br label %for.entry.i

Array_LLVMValueRef____sl__.exit86.i:              ; preds = %Map_string_LLVMValueRef____getitem__.exit.i
  %336 = add nuw nsw i64 %298, 1
  store i64 %336, ptr %memberidx.i.i151, align 4
  %337 = getelementptr inbounds ptr, ptr %257, i64 %298
  store ptr %332, ptr %337, align 8
  br label %ifend21.i167

for.entry.i:                                      ; preds = %ifend21.i167, %ifend.i161
  %338 = phi i64 [ %333, %ifend21.i167 ], [ 1, %ifend.i161 ]
  %func.1.i = phi ptr [ %335, %ifend21.i167 ], [ %282, %ifend.i161 ]
  %memberidx29.i = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 5
  %339 = load ptr, ptr %memberidx29.i, align 8
  %340 = call ptr @malloc(i32 25)
  %memberidx.i87.i = getelementptr inbounds %Array_Expression_, ptr %339, i64 0, i32 1
  %341 = load ptr, ptr %memberidx.i87.i, align 8
  %memberidx1.i88.i = getelementptr inbounds %Array_Expression_, ptr %339, i64 0, i32 2
  %342 = load i64, ptr %memberidx1.i88.i, align 4
  store i1 false, ptr %340, align 1
  %memberidx1.i.i89.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %340, i64 0, i32 1
  %memberidx2.i.i90.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %340, i64 0, i32 3
  store ptr %341, ptr %memberidx2.i.i90.i, align 8
  %memberidx3.i.i91.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %340, i64 0, i32 2
  store i64 %342, ptr %memberidx3.i.i91.i, align 4
  store i64 1, ptr %memberidx1.i.i89.i, align 4
  %343 = icmp slt i64 %342, 1
  br i1 %343, label %CodeGen_codegen_call_exp.exit, label %for.body.i

for.body.i:                                       ; preds = %for.entry.i, %Array_LLVMValueRef____sl__.exit101.i
  %344 = phi ptr [ %351, %Array_LLVMValueRef____sl__.exit101.i ], [ %257, %for.entry.i ]
  %345 = phi i64 [ %352, %Array_LLVMValueRef____sl__.exit101.i ], [ 8, %for.entry.i ]
  %346 = phi i64 [ %353, %Array_LLVMValueRef____sl__.exit101.i ], [ %338, %for.entry.i ]
  %call_arg.0.i257.in = phi ptr [ %358, %Array_LLVMValueRef____sl__.exit101.i ], [ %341, %for.entry.i ]
  %call_arg.0.i257 = load ptr, ptr %call_arg.0.i257.in, align 8
  %347 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %call_arg.0.i257)
  %.not.i96.i = icmp slt i64 %346, %345
  br i1 %.not.i96.i, label %Array_LLVMValueRef____sl__.exit101.i, label %if.entry.i99.i

if.entry.i99.i:                                   ; preds = %for.body.i
  %348 = shl nuw i64 %345, 1
  store i64 %348, ptr %memberidx1.i.i152, align 4
  %349 = shl i64 %345, 4
  %350 = call ptr @realloc(ptr %344, i64 %349)
  store ptr %350, ptr %memberidx2.i.i153, align 8
  br label %Array_LLVMValueRef____sl__.exit101.i

Array_LLVMValueRef____sl__.exit101.i:             ; preds = %if.entry.i99.i, %for.body.i
  %351 = phi ptr [ %350, %if.entry.i99.i ], [ %344, %for.body.i ]
  %352 = phi i64 [ %348, %if.entry.i99.i ], [ %345, %for.body.i ]
  %353 = add nsw i64 %346, 1
  store i64 %353, ptr %memberidx.i.i151, align 4
  %354 = getelementptr inbounds ptr, ptr %351, i64 %346
  store ptr %347, ptr %354, align 8
  %355 = load i64, ptr %memberidx1.i.i89.i, align 4
  %356 = add nsw i64 %355, 1
  store i64 %356, ptr %memberidx1.i.i89.i, align 4
  %357 = load ptr, ptr %memberidx2.i.i90.i, align 8
  %358 = getelementptr inbounds ptr, ptr %357, i64 %355
  %359 = load i64, ptr %memberidx3.i.i91.i, align 4
  %.not = icmp slt i64 %355, %359
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_call_exp.exit

CodeGen_codegen_call_exp.exit:                    ; preds = %Array_LLVMValueRef____sl__.exit101.i, %for.entry.i
  %360 = phi i64 [ %338, %for.entry.i ], [ %353, %Array_LLVMValueRef____sl__.exit101.i ]
  %361 = phi ptr [ %257, %for.entry.i ], [ %351, %Array_LLVMValueRef____sl__.exit101.i ]
  call void @free(ptr nonnull %340)
  %362 = load ptr, ptr %memberidx2.i155, align 8
  %memberidx32.i169 = getelementptr inbounds %Expression, ptr %362, i64 0, i32 3
  %363 = load ptr, ptr %memberidx32.i169, align 8
  %364 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %363, i1 false)
  %365 = call ptr @LLVMBuildCall2(ptr %1, ptr %364, ptr %func.1.i, ptr %361, i64 %360, ptr nonnull @80)
  br label %common.ret253

CodeGen_get_expr_mem.exit221:                     ; preds = %3
  %366 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %2)
  %memberidx.i170 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %367 = load ptr, ptr %memberidx.i170, align 8
  %368 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %367, i1 true)
  %369 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %368, ptr %366, ptr nonnull @80)
  br label %common.ret253

if.entry38:                                       ; preds = %3
  %370 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr %0, ptr %1, ptr nonnull %2, ptr null)
  br label %common.ret253

if.entry42:                                       ; preds = %3
  %371 = tail call fastcc ptr @CodeGen_codegen_new_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253

if.entry46:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  %memberidx.i171 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %372 = load ptr, ptr %memberidx.i171, align 8
  %373 = tail call ptr @LLVMAppendBasicBlock(ptr %372, ptr nonnull @267)
  %374 = load ptr, ptr %memberidx.i171, align 8
  %375 = tail call ptr @LLVMAppendBasicBlock(ptr %374, ptr nonnull @268)
  %376 = load ptr, ptr %memberidx.i171, align 8
  %377 = tail call ptr @LLVMAppendBasicBlock(ptr %376, ptr nonnull @269)
  %memberidx3.i172 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 4
  %378 = load ptr, ptr %memberidx3.i172, align 8
  %379 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %378)
  %380 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %379, ptr %373, ptr %375)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %373)
  %memberidx4.i173 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 5
  %381 = load ptr, ptr %memberidx4.i173, align 8
  %382 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %381)
  %383 = tail call ptr @LLVMBuildBr(ptr %1, ptr %377)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %375)
  %memberidx5.i174 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 6
  %384 = load ptr, ptr %memberidx5.i174, align 8
  %385 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %384)
  %386 = tail call ptr @LLVMBuildBr(ptr %1, ptr %377)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %377)
  %387 = load ptr, ptr %memberidx4.i173, align 8
  %memberidx7.i175 = getelementptr inbounds %Expression, ptr %387, i64 0, i32 3
  %388 = load ptr, ptr %memberidx7.i175, align 8
  %389 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %388, i1 true)
  %390 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %389, ptr nonnull @270)
  store ptr %382, ptr %arg_types.i.i, align 8
  %391 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %385, ptr %391, align 8
  store ptr %373, ptr %args.i.i, align 8
  %392 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %375, ptr %392, align 8
  call void @LLVMAddIncoming(ptr %390, ptr nonnull %arg_types.i.i, ptr nonnull %args.i.i, i64 2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  br label %common.ret253

if.entry50:                                       ; preds = %3
  %memberidx.i176 = getelementptr inbounds %TypeCastExpression, ptr %2, i64 0, i32 4
  %393 = load ptr, ptr %memberidx.i176, align 8
  %memberidx1.i177 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %394 = load ptr, ptr %memberidx1.i177, align 8
  %395 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %393)
  %396 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %394, i1 true)
  %397 = tail call i1 @LLVMIsConstant(ptr %395)
  %398 = load i64, ptr %394, align 4
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %if.entry.i178, label %ifend.i180

if.entry.i178:                                    ; preds = %if.entry50
  br i1 %397, label %true_block.i182, label %false_block.i183

ifend.i180:                                       ; preds = %if.entry50
  %memberidx2.i179 = getelementptr inbounds %Expression, ptr %393, i64 0, i32 3
  %400 = load ptr, ptr %memberidx2.i179, align 8
  %401 = load i64, ptr %400, align 4
  %402 = add i64 %401, -1
  %403 = icmp ult i64 %402, 7
  %404 = and i64 %398, -2
  %405 = icmp eq i64 %404, 8
  %406 = and i1 %405, %403
  br i1 %406, label %if.entry3.i185, label %else4.i

true_block.i182:                                  ; preds = %if.entry.i178
  %407 = tail call i1 @LLVMIsNull(ptr %395)
  %408 = xor i1 %407, true
  %409 = tail call ptr @LLVMInt1Type()
  %..i.i181 = zext i1 %408 to i64
  %410 = tail call ptr @LLVMConstInt(ptr %409, i64 %..i.i181, i1 false)
  br label %common.ret253

false_block.i183:                                 ; preds = %if.entry.i178
  %411 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %395, ptr nonnull @80)
  br label %common.ret253

if.entry3.i185:                                   ; preds = %ifend.i180
  br i1 %397, label %true_block6.i, label %false_block7.i

else4.i:                                          ; preds = %ifend.i180
  %412 = and i64 %401, -2
  %413 = icmp eq i64 %412, 8
  %414 = add i64 %398, -1
  %415 = icmp ult i64 %414, 7
  %416 = and i1 %415, %413
  br i1 %416, label %if.entry11.i186, label %else12.i187

true_block6.i:                                    ; preds = %if.entry3.i185
  %417 = tail call ptr @LLVMConstSIToFP(ptr %395, ptr %396)
  br label %common.ret253

false_block7.i:                                   ; preds = %if.entry3.i185
  %418 = tail call ptr @LLVMBuildSIToFP(ptr %1, ptr %395, ptr %396, ptr nonnull @80)
  br label %common.ret253

if.entry11.i186:                                  ; preds = %else4.i
  br i1 %397, label %true_block14.i, label %false_block15.i

else12.i187:                                      ; preds = %else4.i
  %419 = and i1 %415, %403
  br i1 %419, label %if.entry19.i188, label %else20.i

true_block14.i:                                   ; preds = %if.entry11.i186
  %420 = tail call ptr @LLVMConstFPToSI(ptr %395, ptr %396)
  br label %common.ret253

false_block15.i:                                  ; preds = %if.entry11.i186
  %421 = tail call ptr @LLVMBuildFPToSI(ptr %1, ptr %395, ptr %396, ptr nonnull @80)
  br label %common.ret253

if.entry19.i188:                                  ; preds = %else12.i187
  %memberidx25.i = getelementptr inbounds %IntType, ptr %394, i64 0, i32 1
  %422 = load i1, ptr %memberidx25.i, align 1
  br i1 %397, label %true_block22.i, label %false_block23.i

else20.i:                                         ; preds = %else12.i187
  %423 = and i1 %405, %413
  br i1 %423, label %if.entry29.i, label %ifend31.i

true_block22.i:                                   ; preds = %if.entry19.i188
  %424 = tail call ptr @LLVMConstIntCast(ptr %395, ptr %396, i1 %422)
  br label %common.ret253

false_block23.i:                                  ; preds = %if.entry19.i188
  %425 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %395, ptr %396, i1 %422, ptr nonnull @80)
  br label %common.ret253

if.entry29.i:                                     ; preds = %else20.i
  br i1 %397, label %true_block32.i, label %false_block33.i

ifend31.i:                                        ; preds = %else20.i
  br i1 %397, label %true_block36.i, label %false_block37.i

true_block32.i:                                   ; preds = %if.entry29.i
  %426 = tail call ptr @LLVMConstFPCast(ptr %395, ptr %396)
  br label %common.ret253

false_block33.i:                                  ; preds = %if.entry29.i
  %427 = tail call ptr @LLVMBuildFPCast(ptr %1, ptr %395, ptr %396, ptr nonnull @80)
  br label %common.ret253

true_block36.i:                                   ; preds = %ifend31.i
  %428 = tail call ptr @LLVMConstBitCast(ptr %395, ptr %396)
  br label %common.ret253

false_block37.i:                                  ; preds = %ifend31.i
  %429 = tail call ptr @LLVMBuildBitCast(ptr %1, ptr %395, ptr %396, ptr nonnull @80)
  br label %common.ret253

if.entry54:                                       ; preds = %3
  %430 = tail call fastcc ptr @CodeGen_codegen_array_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253

if.entry58:                                       ; preds = %3
  %431 = tail call fastcc ptr @CodeGen_codegen_tuple_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253

if.entry62:                                       ; preds = %3
  %432 = tail call fastcc ptr @CodeGen_codegen_match_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253

if.entry66:                                       ; preds = %3
  %433 = tail call fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret253
}

define internal fastcc void @Map_string_CGEnumType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_string_CGEnumType____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_CGEnumType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_CGEnumType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @6, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_new_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 6
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 13
  br i1 %7, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %8 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 true)
  %memberidx2 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %9 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %11)
  %memberidx3 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %13 = load i1, ptr %memberidx3, align 1
  br i1 %13, label %if.entry4, label %else5

else:                                             ; preds = %3
  %14 = load i64, ptr %4, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i61, label %is_object.exit

if.entry.i61:                                     ; preds = %else, %if.entry.i61
  %.tr5.i = phi ptr [ %16, %if.entry.i61 ], [ %4, %else ]
  %memberidx1.i60 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i60, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i61, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i61, %else
  %.lcssa.i = phi i64 [ %14, %else ], [ %17, %if.entry.i61 ]
  %19 = icmp eq i64 %.lcssa.i, 11
  br i1 %19, label %if.entry7, label %ifend

ifend:                                            ; preds = %else.i, %if.entry.i, %is_object.exit, %if.entry4, %else5
  %ptr.0 = phi ptr [ %20, %if.entry4 ], [ %21, %else5 ], [ null, %is_object.exit ], [ %ptr.1, %if.entry.i ], [ %ptr.1, %else.i ]
  ret ptr %ptr.0

if.entry4:                                        ; preds = %if.entry
  %20 = tail call ptr @LLVMBuildArrayMalloc(ptr %1, ptr %8, ptr %12, ptr nonnull @80)
  br label %ifend

else5:                                            ; preds = %if.entry
  %21 = tail call ptr @LLVMBuildArrayAlloca(ptr %1, ptr %8, ptr %12, ptr nonnull @80)
  br label %ifend

if.entry7:                                        ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %22 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Expression_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx11, align 4
  %24 = add nuw i64 %23, 1
  %25 = alloca ptr, i64 %24, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %4, i1 false)
  %memberidx12 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %27 = load i1, ptr %memberidx12, align 1
  br i1 %27, label %if.entry13, label %else14

if.entry13:                                       ; preds = %if.entry7
  %28 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %26, ptr nonnull @80)
  br label %ifend15

else14:                                           ; preds = %if.entry7
  %29 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %26, ptr nonnull @80)
  br label %ifend15

ifend15:                                          ; preds = %else14, %if.entry13
  %ptr.1 = phi ptr [ %28, %if.entry13 ], [ %29, %else14 ]
  store ptr %ptr.1, ptr %25, align 8
  %30 = load ptr, ptr %memberidx10, align 8
  %31 = tail call ptr @malloc(i32 25)
  %memberidx.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 2
  %33 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend15, %for.body.i
  %35 = phi i64 [ %39, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i74.in = phi ptr [ %40, %for.body.i ], [ %32, %ifend15 ]
  %start.0.i73 = phi i64 [ %36, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i74 = load ptr, ptr %item.0.i74.in, align 8
  %36 = add nuw nsw i64 %start.0.i73, 1
  %37 = getelementptr inbounds ptr, ptr %25, i64 %start.0.i73
  %38 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i74)
  store ptr %38, ptr %37, align 8
  %39 = add nuw nsw i64 %35, 1
  store i64 %39, ptr %memberidx1.i.i.i, align 4
  %40 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not = icmp slt i64 %35, %33
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend15
  tail call void @free(ptr nonnull %31)
  %memberidx.i44 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %41 = load i64, ptr %4, align 4
  %cond70 = icmp eq i64 %41, 20
  br i1 %cond70, label %if.entry.i65, label %get_class_from_type.exit

if.entry.i65:                                     ; preds = %CodeGen_evaluate_expression_list.exit, %if.entry.i65
  %.tr11.i71 = phi ptr [ %42, %if.entry.i65 ], [ %4, %CodeGen_evaluate_expression_list.exit ]
  %memberidx1.i64 = getelementptr inbounds %GenericType, ptr %.tr11.i71, i64 0, i32 3
  %42 = load ptr, ptr %memberidx1.i64, align 8
  %43 = load i64, ptr %42, align 4
  %cond = icmp eq i64 %43, 20
  br i1 %cond, label %if.entry.i65, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i65, %CodeGen_evaluate_expression_list.exit
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %44 = load ptr, ptr %memberidx1.i, align 8
  %45 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %44)
  %.not.i45 = icmp eq ptr %45, null
  br i1 %.not.i45, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %46 = load ptr, ptr %memberidx.i44, align 8
  %memberidx.i.i48 = getelementptr inbounds %Program, ptr %46, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i48, align 8
  %48 = load i64, ptr %44, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i.i.i, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i49 = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i49, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i5.i.i, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %56)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %56)
  %57 = load ptr, ptr %56, align 8
  %58 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %57)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %58, %ifend.i ], [ %45, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 6
  %59 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %60 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %59)
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %60, ptr nonnull %59, ptr nonnull %25, i64 %24, ptr nonnull @80)
  br label %ifend

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %62 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %62, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i50 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i50, align 8
  %memberidx1.i.i51 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i51, align 4
  %memberidx2.i.i52 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i52, align 4
  %64 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %64, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i.i.i53 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i.i.i53, align 8
  %memberidx1.i.i.i54 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i54, align 4
  %memberidx2.i.i.i55 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i55, align 4
  %66 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %67 = tail call ptr %66(ptr nonnull %65)
  %68 = load i64, ptr %memberidx1.i.i.i54, align 4
  %69 = tail call i64 @write(i64 1, ptr %67, i64 %68)
  %70 = load ptr, ptr %memberidx.i.i.i53, align 8
  tail call void @free(ptr %70)
  tail call void @free(ptr %65)
  %71 = load ptr, ptr %63, align 8
  %memberidx.i.i.i56 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %71, i64 0, i32 3
  %72 = load ptr, ptr %memberidx.i.i.i56, align 8
  %73 = tail call ptr %72(ptr nonnull %63)
  %74 = load i64, ptr %memberidx1.i.i51, align 4
  %75 = tail call i64 @write(i64 1, ptr %73, i64 %74)
  %76 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %77 = load ptr, ptr %memberidx.i.i50, align 8
  tail call void @free(ptr %77)
  tail call void @free(ptr %63)
  tail call void @exit(i64 -1)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %arg_types.i128 = alloca [3 x ptr], align 8
  %arg_types.i117 = alloca [2 x ptr], align 8
  %args.i = alloca [1 x ptr], align 8
  %arg_types.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = icmp slt i64 %4, 3
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1, align 8
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %8)
  %10 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %9)
  switch i64 %4, label %ifend10 [
    i64 0, label %if.entry2
    i64 1, label %if.entry5
    i64 2, label %if.entry8
  ]

ifend:                                            ; preds = %3
  %memberidx12 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 2
  %11 = load i64, ptr %memberidx12, align 4
  %12 = alloca ptr, i64 %11, align 8
  %13 = tail call ptr @malloc(i32 25)
  %memberidx.i.i144 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i144, align 8
  %15 = load i64, ptr %memberidx12, align 4
  store i1 false, ptr %13, align 1
  %memberidx1.i.i.i146 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 1
  %memberidx2.i.i.i147 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 3
  store ptr %14, ptr %memberidx2.i.i.i147, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 2
  store i64 %15, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i146, align 4
  %16 = icmp slt i64 %15, 1
  br i1 %16, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %17 = phi i64 [ %21, %for.body.i ], [ 1, %ifend ]
  %item.0.i161.in = phi ptr [ %22, %for.body.i ], [ %14, %ifend ]
  %start.0.i160 = phi i64 [ %18, %for.body.i ], [ 0, %ifend ]
  %item.0.i161 = load ptr, ptr %item.0.i161.in, align 8
  %18 = add nuw nsw i64 %start.0.i160, 1
  %19 = getelementptr inbounds ptr, ptr %12, i64 %start.0.i160
  %20 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i161)
  store ptr %20, ptr %19, align 8
  %21 = add nuw nsw i64 %17, 1
  store i64 %21, ptr %memberidx1.i.i.i146, align 4
  %22 = getelementptr inbounds ptr, ptr %14, i64 %17
  %.not = icmp slt i64 %17, %15
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend
  tail call void @free(ptr nonnull %13)
  %23 = load ptr, ptr %memberidx1, align 8
  %memberidx.i90 = getelementptr inbounds %Array_Expression_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i90, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx15 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %PointerType, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx16, align 8
  %28 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %27, i1 true)
  %29 = tail call ptr @LLVMSizeOf(ptr %28)
  %30 = icmp eq i64 %4, 6
  br i1 %30, label %if.entry17, label %ifend19

if.entry2:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %31 = tail call ptr @LLVMInt8Type()
  %32 = tail call ptr @LLVMPointerType(ptr %31, i64 0)
  store ptr %32, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %33 = tail call ptr @LLVMDoubleType()
  %34 = load ptr, ptr %0, align 8
  %35 = tail call ptr @malloc(i32 4)
  store i32 1718580321, ptr %35, align 8
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %36, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %37 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i = getelementptr inbounds %IntrinsicResult, ptr %37, i64 0, i32 1
  store i64 0, ptr %37, align 8
  %38 = call ptr @LLVMFunctionType(ptr %33, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %38, ptr %memberidx1.i.i4.i, align 8
  %39 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %40 = call ptr %39(ptr nonnull %36)
  %41 = call ptr @LLVMGetNamedFunction(ptr %34, ptr %40)
  %.not.i.i = icmp eq ptr %41, null
  br i1 %.not.i.i, label %else.i.i, label %ifend4.thread

else.i.i:                                         ; preds = %if.entry2
  %42 = call ptr @LLVMAddFunction(ptr %34, ptr %40, ptr %38)
  br label %ifend4.thread

ifend4.thread:                                    ; preds = %else.i.i, %if.entry2
  %storemerge.i.i = phi ptr [ %42, %else.i.i ], [ %41, %if.entry2 ]
  store ptr %storemerge.i.i, ptr %37, align 8
  %43 = call ptr @LLVMBuildCall2(ptr %1, ptr %38, ptr %storemerge.i.i, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry5:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %44 = tail call ptr @LLVMInt8Type()
  %45 = tail call ptr @LLVMPointerType(ptr %44, i64 0)
  store ptr %45, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %46 = tail call ptr @LLVMInt32Type()
  %47 = load ptr, ptr %0, align 8
  %48 = tail call ptr @malloc(i32 4)
  store i32 1768911969, ptr %48, align 8
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i.i93 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i.i93, align 8
  %memberidx1.i.i.i94 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i94, align 4
  %memberidx2.i.i.i95 = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i95, align 4
  %50 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i96 = getelementptr inbounds %IntrinsicResult, ptr %50, i64 0, i32 1
  store i64 0, ptr %50, align 8
  %51 = call ptr @LLVMFunctionType(ptr %46, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %51, ptr %memberidx1.i.i4.i96, align 8
  %52 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %53 = call ptr %52(ptr nonnull %49)
  %54 = call ptr @LLVMGetNamedFunction(ptr %47, ptr %53)
  %.not.i.i99 = icmp eq ptr %54, null
  br i1 %.not.i.i99, label %else.i.i101, label %CodeGen_codegen_atoi_call.exit

else.i.i101:                                      ; preds = %if.entry5
  %55 = call ptr @LLVMAddFunction(ptr %47, ptr %53, ptr %51)
  br label %CodeGen_codegen_atoi_call.exit

CodeGen_codegen_atoi_call.exit:                   ; preds = %if.entry5, %else.i.i101
  %storemerge.i.i102 = phi ptr [ %55, %else.i.i101 ], [ %54, %if.entry5 ]
  store ptr %storemerge.i.i102, ptr %50, align 8
  %56 = call ptr @LLVMBuildCall2(ptr %1, ptr %51, ptr %storemerge.i.i102, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry8:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %57 = tail call ptr @LLVMInt8Type()
  %58 = tail call ptr @LLVMPointerType(ptr %57, i64 0)
  store ptr %58, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %59 = tail call ptr @LLVMInt64Type()
  %60 = load ptr, ptr %0, align 8
  %61 = tail call ptr @malloc(i32 4)
  store i32 1819243617, ptr %61, align 8
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i.i.i106 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i.i.i106, align 8
  %memberidx1.i.i.i107 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i107, align 4
  %memberidx2.i.i.i108 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i108, align 4
  %63 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i109 = getelementptr inbounds %IntrinsicResult, ptr %63, i64 0, i32 1
  store i64 0, ptr %63, align 8
  %64 = call ptr @LLVMFunctionType(ptr %59, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %64, ptr %memberidx1.i.i4.i109, align 8
  %65 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %66 = call ptr %65(ptr nonnull %62)
  %67 = call ptr @LLVMGetNamedFunction(ptr %60, ptr %66)
  %.not.i.i112 = icmp eq ptr %67, null
  br i1 %.not.i.i112, label %else.i.i114, label %CodeGen_codegen_atol_call.exit

else.i.i114:                                      ; preds = %if.entry8
  %68 = call ptr @LLVMAddFunction(ptr %60, ptr %66, ptr %64)
  br label %CodeGen_codegen_atol_call.exit

CodeGen_codegen_atol_call.exit:                   ; preds = %if.entry8, %else.i.i114
  %storemerge.i.i115 = phi ptr [ %68, %else.i.i114 ], [ %67, %if.entry8 ]
  store ptr %storemerge.i.i115, ptr %63, align 8
  %69 = call ptr @LLVMBuildCall2(ptr %1, ptr %64, ptr %storemerge.i.i115, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

common.ret:                                       ; preds = %ifend31, %if.entry29, %if.entry26, %if.entry23, %CodeGen_codegen_memcmp_call.exit, %CodeGen_codegen_realloc_call.exit, %ifend10
  %common.ret.op = phi ptr [ %value.2, %ifend10 ], [ %87, %CodeGen_codegen_realloc_call.exit ], [ %106, %CodeGen_codegen_memcmp_call.exit ], [ %114, %if.entry23 ], [ %116, %if.entry26 ], [ %117, %if.entry29 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

ifend10:                                          ; preds = %if.entry, %CodeGen_codegen_atoi_call.exit, %ifend4.thread, %CodeGen_codegen_atol_call.exit
  %value.2 = phi ptr [ %69, %CodeGen_codegen_atol_call.exit ], [ %43, %ifend4.thread ], [ %56, %CodeGen_codegen_atoi_call.exit ], [ null, %if.entry ]
  %70 = call ptr @LLVMBuildFree(ptr %1, ptr %10)
  br label %common.ret

if.entry17:                                       ; preds = %CodeGen_evaluate_expression_list.exit
  %71 = getelementptr inbounds ptr, ptr %12, i64 1
  %72 = load ptr, ptr %71, align 8
  %73 = tail call ptr @LLVMBuildMul(ptr %1, ptr %72, ptr %29, ptr nonnull @80)
  store ptr %73, ptr %71, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i117)
  %74 = tail call ptr @LLVMInt8Type()
  %75 = tail call ptr @LLVMPointerType(ptr %74, i64 0)
  store ptr %75, ptr %arg_types.i117, align 8
  %76 = getelementptr inbounds ptr, ptr %arg_types.i117, i64 1
  %77 = tail call ptr @LLVMIntType(i64 64)
  store ptr %77, ptr %76, align 8
  %78 = load ptr, ptr %0, align 8
  %79 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %79, ptr noundef nonnull align 8 dereferenceable(7) @245, i64 7, i1 false)
  %80 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %80, align 8
  %memberidx.i.i.i118 = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  store ptr %79, ptr %memberidx.i.i.i118, align 8
  %memberidx1.i.i.i119 = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i119, align 4
  %memberidx2.i.i.i120 = getelementptr inbounds %string, ptr %80, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i120, align 4
  %81 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i5.i = getelementptr inbounds %IntrinsicResult, ptr %81, i64 0, i32 1
  store i64 0, ptr %81, align 8
  %82 = call ptr @LLVMFunctionType(ptr %75, ptr nonnull %arg_types.i117, i64 2, i1 false)
  store ptr %82, ptr %memberidx1.i.i5.i, align 8
  %83 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %84 = call ptr %83(ptr nonnull %80)
  %85 = call ptr @LLVMGetNamedFunction(ptr %78, ptr %84)
  %.not.i.i123 = icmp eq ptr %85, null
  br i1 %.not.i.i123, label %else.i.i125, label %CodeGen_codegen_realloc_call.exit

else.i.i125:                                      ; preds = %if.entry17
  %86 = call ptr @LLVMAddFunction(ptr %78, ptr %84, ptr %82)
  br label %CodeGen_codegen_realloc_call.exit

CodeGen_codegen_realloc_call.exit:                ; preds = %if.entry17, %else.i.i125
  %storemerge.i.i126 = phi ptr [ %86, %else.i.i125 ], [ %85, %if.entry17 ]
  store ptr %storemerge.i.i126, ptr %81, align 8
  %87 = call ptr @LLVMBuildCall2(ptr %1, ptr %82, ptr %storemerge.i.i126, ptr nonnull %12, i64 2, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i117)
  br label %common.ret

ifend19:                                          ; preds = %CodeGen_evaluate_expression_list.exit
  %88 = getelementptr inbounds ptr, ptr %12, i64 2
  %89 = load ptr, ptr %88, align 8
  %90 = tail call ptr @LLVMBuildMul(ptr %1, ptr %89, ptr %29, ptr nonnull @80)
  store ptr %90, ptr %88, align 8
  %91 = icmp eq i64 %4, 7
  br i1 %91, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg_types.i128)
  %92 = tail call ptr @LLVMInt8Type()
  %93 = tail call ptr @LLVMPointerType(ptr %92, i64 0)
  %94 = tail call ptr @LLVMIntType(i64 64)
  store ptr %93, ptr %arg_types.i128, align 8
  %95 = getelementptr inbounds ptr, ptr %arg_types.i128, i64 1
  store ptr %93, ptr %95, align 8
  %96 = getelementptr inbounds ptr, ptr %arg_types.i128, i64 2
  store ptr %94, ptr %96, align 8
  %97 = load ptr, ptr %0, align 8
  %98 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @246, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %99, align 8
  %memberidx.i.i.i129 = getelementptr inbounds %string, ptr %99, i64 0, i32 1
  store ptr %98, ptr %memberidx.i.i.i129, align 8
  %memberidx1.i.i.i130 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i.i130, align 4
  %memberidx2.i.i.i131 = getelementptr inbounds %string, ptr %99, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i.i131, align 4
  %100 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i6.i = getelementptr inbounds %IntrinsicResult, ptr %100, i64 0, i32 1
  store i64 0, ptr %100, align 8
  %101 = call ptr @LLVMFunctionType(ptr %94, ptr nonnull %arg_types.i128, i64 3, i1 false)
  store ptr %101, ptr %memberidx1.i.i6.i, align 8
  %102 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 5), align 8
  %103 = call ptr %102(ptr nonnull %99)
  %104 = call ptr @LLVMGetNamedFunction(ptr %97, ptr %103)
  %.not.i.i134 = icmp eq ptr %104, null
  br i1 %.not.i.i134, label %else.i.i136, label %CodeGen_codegen_memcmp_call.exit

else.i.i136:                                      ; preds = %if.entry20
  %105 = call ptr @LLVMAddFunction(ptr %97, ptr %103, ptr %101)
  br label %CodeGen_codegen_memcmp_call.exit

CodeGen_codegen_memcmp_call.exit:                 ; preds = %if.entry20, %else.i.i136
  %storemerge.i.i137 = phi ptr [ %105, %else.i.i136 ], [ %104, %if.entry20 ]
  store ptr %storemerge.i.i137, ptr %100, align 8
  %106 = call ptr @LLVMBuildCall2(ptr %1, ptr %101, ptr %storemerge.i.i137, ptr nonnull %12, i64 3, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg_types.i128)
  br label %common.ret

ifend22:                                          ; preds = %ifend19
  %107 = load ptr, ptr %12, align 8
  %108 = tail call i64 @LLVMGetAlignment(ptr %107)
  %109 = icmp eq i64 %4, 5
  %110 = getelementptr inbounds ptr, ptr %12, i64 1
  %111 = load ptr, ptr %110, align 8
  br i1 %109, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend22
  %112 = tail call ptr @LLVMInt8Type()
  %113 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %111, ptr %112, i1 false, ptr nonnull @80)
  %114 = tail call ptr @LLVMBuildMemSet(ptr %1, ptr %107, ptr %113, ptr %90, i64 %108)
  br label %common.ret

ifend25:                                          ; preds = %ifend22
  %115 = tail call i64 @LLVMGetAlignment(ptr %111)
  switch i64 %4, label %ifend31 [
    i64 3, label %if.entry26
    i64 4, label %if.entry29
  ]

if.entry26:                                       ; preds = %ifend25
  %116 = tail call ptr @LLVMBuildMemCpy(ptr %1, ptr %107, i64 %108, ptr %111, i64 %115, ptr %90)
  br label %common.ret

if.entry29:                                       ; preds = %ifend25
  %117 = tail call ptr @LLVMBuildMemMove(ptr %1, ptr %107, i64 %108, ptr %111, i64 %115, ptr %90)
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %118 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %118, ptr noundef nonnull align 8 dereferenceable(21) @280, i64 21, i1 false)
  %119 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %119, align 8
  %memberidx.i.i139 = getelementptr inbounds %string, ptr %119, i64 0, i32 1
  store ptr %118, ptr %memberidx.i.i139, align 8
  %memberidx1.i.i140 = getelementptr inbounds %string, ptr %119, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i140, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %119, i64 0, i32 3
  store i64 21, ptr %memberidx2.i.i, align 4
  %120 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %120, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %121, align 8
  %memberidx.i.i.i141 = getelementptr inbounds %string, ptr %121, i64 0, i32 1
  store ptr %120, ptr %memberidx.i.i.i141, align 8
  %memberidx1.i.i.i142 = getelementptr inbounds %string, ptr %121, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i142, align 4
  %memberidx2.i.i.i143 = getelementptr inbounds %string, ptr %121, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i143, align 4
  %122 = load ptr, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @VTablestring, i64 0, i32 3), align 8
  %123 = tail call ptr %122(ptr nonnull %121)
  %124 = load i64, ptr %memberidx1.i.i.i142, align 4
  %125 = tail call i64 @write(i64 1, ptr %123, i64 %124)
  %126 = load ptr, ptr %memberidx.i.i.i141, align 8
  tail call void @free(ptr %126)
  tail call void @free(ptr %121)
  %127 = load ptr, ptr %119, align 8
  %memberidx.i.i.i149 = getelementptr inbounds { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }, ptr %127, i64 0, i32 3
  %128 = load ptr, ptr %memberidx.i.i.i149, align 8
  %129 = tail call ptr %128(ptr nonnull %119)
  %130 = load i64, ptr %memberidx1.i.i140, align 4
  %131 = tail call i64 @write(i64 1, ptr %129, i64 %130)
  %132 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %133 = load ptr, ptr %memberidx.i.i139, align 8
  tail call void @free(ptr %133)
  tail call void @free(ptr %119)
  tail call void @exit(i64 -1)
  br label %common.ret
}

declare ptr @LLVMModuleCreateWithName(ptr) local_unnamed_addr

declare i1 @LLVMIsConstant(ptr) local_unnamed_addr

declare ptr @LLVMConstNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstInt(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMInt1Type() local_unnamed_addr

declare ptr @LLVMIntType(i64) local_unnamed_addr

declare ptr @LLVMVoidType() local_unnamed_addr

declare ptr @LLVMInt8Type() local_unnamed_addr

declare ptr @LLVMInt16Type() local_unnamed_addr

declare ptr @LLVMInt32Type() local_unnamed_addr

declare ptr @LLVMInt64Type() local_unnamed_addr

declare ptr @LLVMInt128Type() local_unnamed_addr

declare ptr @LLVMFloatType() local_unnamed_addr

declare ptr @LLVMDoubleType() local_unnamed_addr

declare ptr @LLVMPointerType(ptr, i64) local_unnamed_addr

declare ptr @LLVMArrayType(ptr, i64) local_unnamed_addr

declare ptr @LLVMFunctionType(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMStructType(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMBuildRet(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildRetVoid(ptr) local_unnamed_addr

declare ptr @LLVMConstReal(ptr, double) local_unnamed_addr

declare ptr @LLVMAddFunction(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCall2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildGlobalString(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAlloca(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLoad2(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSelect(ptr, ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetTypeKind(ptr) local_unnamed_addr

declare ptr @LLVMTypeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(ptr) local_unnamed_addr

define internal fastcc noalias ptr @get_format_from_type(ptr nocapture readonly %0) unnamed_addr {
  %2 = load i64, ptr %0, align 4
  %3 = add i64 %2, -1
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %5 = load i1, ptr %memberidx, align 1
  switch i64 %2, label %ifend8 [
    i64 7, label %if.entry2
    i64 5, label %if.entry6
  ]

ifend:                                            ; preds = %1
  switch i64 %2, label %ifend27 [
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 13, label %if.entry25
  ]

if.entry2:                                        ; preds = %if.entry
  %6 = tail call ptr @malloc(i32 4)
  br i1 %5, label %true_block, label %false_block

true_block:                                       ; preds = %if.entry2
  store i32 1684827173, ptr %6, align 8
  br label %common.ret

false_block:                                      ; preds = %if.entry2
  store i32 1970039845, ptr %6, align 8
  br label %common.ret

common.ret:                                       ; preds = %true_block13, %false_block14, %true_block9, %false_block10, %true_block, %false_block, %ifend27, %if.entry25, %if.entry22, %if.entry18
  %.sink67 = phi ptr [ %9, %true_block13 ], [ %9, %false_block14 ], [ %8, %true_block9 ], [ %8, %false_block10 ], [ %6, %true_block ], [ %6, %false_block ], [ %13, %ifend27 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry18 ]
  %.sink65 = phi i64 [ 2, %true_block13 ], [ 2, %false_block14 ], [ 3, %true_block9 ], [ 3, %false_block10 ], [ 4, %true_block ], [ 4, %false_block ], [ 2, %ifend27 ], [ 4, %if.entry25 ], [ 3, %if.entry22 ], [ 2, %if.entry18 ]
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i48 = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %.sink67, ptr %memberidx.i.i48, align 8
  %memberidx1.i.i49 = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %.sink65, ptr %memberidx1.i.i49, align 4
  %memberidx2.i.i50 = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %.sink65, ptr %memberidx2.i.i50, align 4
  ret ptr %7

if.entry6:                                        ; preds = %if.entry
  %8 = tail call ptr @malloc(i32 3)
  br i1 %5, label %true_block9, label %false_block10

ifend8:                                           ; preds = %if.entry
  %9 = tail call ptr @malloc(i32 2)
  br i1 %5, label %true_block13, label %false_block14

true_block9:                                      ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %8, ptr noundef nonnull align 8 dereferenceable(3) @249, i64 3, i1 false)
  br label %common.ret

false_block10:                                    ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %8, ptr noundef nonnull align 8 dereferenceable(3) @250, i64 3, i1 false)
  br label %common.ret

true_block13:                                     ; preds = %ifend8
  store i16 25637, ptr %9, align 8
  br label %common.ret

false_block14:                                    ; preds = %ifend8
  store i16 29989, ptr %9, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend
  %10 = tail call ptr @malloc(i32 2)
  store i16 26149, ptr %10, align 8
  br label %common.ret

if.entry22:                                       ; preds = %ifend
  %11 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %11, ptr noundef nonnull align 8 dereferenceable(3) @251, i64 3, i1 false)
  br label %common.ret

if.entry25:                                       ; preds = %ifend
  %12 = tail call ptr @malloc(i32 4)
  store i32 1478850608, ptr %12, align 8
  br label %common.ret

ifend27:                                          ; preds = %ifend
  %13 = tail call ptr @malloc(i32 2)
  store i16 29477, ptr %13, align 8
  br label %common.ret
}

declare ptr @LLVMBuildInBoundsGEP2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVM_GetFunctionType(ptr) local_unnamed_addr

declare ptr @LLVMBuildMalloc(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFree(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildStore(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstArray(ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMConstStruct(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstIntCast(ptr, ptr, i1) local_unnamed_addr

declare ptr @LLVMConstMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMSizeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsNull(ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNotNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildUDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildURem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstICmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildICmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstShl(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildShl(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstLShr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLShr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstOr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildOr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAnd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstXor(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildXor(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFCmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFCmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSIToFP(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSIToFP(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFPToSI(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPToSI(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIntCast2(ptr, ptr, ptr, i1, ptr) local_unnamed_addr

declare ptr @LLVMConstFPCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstBitCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBitCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNot(ptr) local_unnamed_addr

declare ptr @LLVMBuildNot(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetInitializer(ptr) local_unnamed_addr

declare ptr @LLVMConstNull(ptr) local_unnamed_addr

declare ptr @LLVMAppendBasicBlock(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCondBr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildPhi(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMAddIncoming(ptr, ptr, ptr, i64) local_unnamed_addr

declare void @LLVMAddCase(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSwitch(ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildArrayMalloc(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildArrayAlloca(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetAlignment(ptr) local_unnamed_addr

declare ptr @LLVMBuildMemSet(ptr, ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildMemCpy(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildMemMove(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(ptr) local_unnamed_addr

declare ptr @LLVMAddGlobal(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMSetInitializer(ptr, ptr) local_unnamed_addr

declare void @LLVMSetGlobalConstant(ptr, i1) local_unnamed_addr

declare void @LLVMSetLinkage(ptr, i64) local_unnamed_addr

declare ptr @LLVMCreateBuilder() local_unnamed_addr

declare ptr @LLVMGetParam(ptr, i64) local_unnamed_addr

declare void @LLVMDisposeBuilder(ptr) local_unnamed_addr

declare ptr @LLVMStructCreateNamed(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetModuleContext(ptr) local_unnamed_addr

declare void @LLVMStructSetBody(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstString(ptr, i64, i1) local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #14

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #15

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #15

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #16

attributes #0 = { nofree }
attributes #1 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn }
attributes #2 = { mustprogress nofree norecurse nosync nounwind readonly willreturn }
attributes #3 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1) "alloc-family"="malloc" }
attributes #5 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free") "alloc-family"="malloc" }
attributes #6 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn }
attributes #8 = { nofree norecurse nosync nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { mustprogress nounwind willreturn }
attributes #11 = { nofree nounwind }
attributes #12 = { mustprogress nofree nounwind readonly willreturn }
attributes #13 = { nofree nosync nounwind readonly }
attributes #14 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #16 = { argmemonly nocallback nofree nounwind willreturn writeonly }

!0 = !{}
