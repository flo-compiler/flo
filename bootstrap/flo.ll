; ModuleID = 'main.flo'
source_filename = "main.flo"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%string_vtable_ty.676379 = type { %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)*, void (%string.676378*, i8)*, %string.676378* (%string.676378*, i64)*, i1 (%string.676378*, %string.676378*)*, i64 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, i64, i64)*, i8 (%string.676378*, i64)*, i8* (%string.676378*)*, %string.676378* (%string.676378*, %string.676378*, %string.676378*)*, i8* (%string.676378*)*, i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)* }
%string.676378 = type { %string_vtable_ty.676379*, i8*, i64, i64 }
%Range_vtable_ty.676381 = type { i1 (%Range.676380*, i64)* }
%Range.676380 = type { %Range_vtable_ty.676381*, i64, i64 }
%FloRange_vtable_ty.676383 = type {}
%FloError_vtable_ty.676385 = type {}
%File_vtable_ty.676387 = type { %string.676378* (%File.676386*)*, void (%File.676386*)* }
%File.676386 = type { %File_vtable_ty.676387*, i64 }
%Path_vtable_ty.676389 = type {}
%FileId_vtable_ty.676391 = type {}
%FloFile_vtable_ty.676393 = type {}
%"Array<FloFile>_vtable_ty.676399" = type { void (%"Array<FloFile>.676396"*)*, void (%"Array<FloFile>.676396"*, i64, i64)*, void (%"Array<FloFile>.676396"*, %FloFile.676392*)*, void (%"Array<FloFile>.676396"*, i64, %FloFile.676392*)*, void (%"Array<FloFile>.676396"*, %FloFile.676392*)*, %FloFile.676392* (%"Array<FloFile>.676396"*, i64)*, i1 (%"Array<FloFile>.676396"*, %"Array<FloFile>.676396"*)*, i1 (%"Array<FloFile>.676396"*, %FloFile.676392*)*, i64 (%"Array<FloFile>.676396"*, %FloFile.676392*)*, %string.676378* (%"Array<FloFile>.676396"*, %string.676378*)*, %string.676378* (%"Array<FloFile>.676396"*)* }
%"Array<FloFile>.676396" = type { %"Array<FloFile>_vtable_ty.676399"*, %FloFile.676392**, i64, i64 }
%FloFile.676392 = type { %FloFile_vtable_ty.676393*, %string.676378*, %string.676378* }
%"Array<FloError>_vtable_ty.676400" = type { void (%"Array<FloError>.676397"*)*, void (%"Array<FloError>.676397"*, i64, i64)*, void (%"Array<FloError>.676397"*, %FloError.676384*)*, void (%"Array<FloError>.676397"*, i64, %FloError.676384*)*, void (%"Array<FloError>.676397"*, %FloError.676384*)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)*, i1 (%"Array<FloError>.676397"*, %"Array<FloError>.676397"*)*, i1 (%"Array<FloError>.676397"*, %FloError.676384*)*, i64 (%"Array<FloError>.676397"*, %FloError.676384*)*, %string.676378* (%"Array<FloError>.676397"*, %string.676378*)*, %string.676378* (%"Array<FloError>.676397"*)* }
%"Array<FloError>.676397" = type { %"Array<FloError>_vtable_ty.676400"*, %FloError.676384**, i64, i64 }
%FloError.676384 = type { %FloError_vtable_ty.676385*, i64, %string.676378*, %FloRange.676382* }
%FloRange.676382 = type { %FloRange_vtable_ty.676383*, i64, i64, i64, i64 }
%"Bucket<string, FileId>_vtable_ty.676403" = type { void (%"Bucket<string, FileId>.676402"*, %string.676378*, %FileId.676390*)* }
%"Bucket<string, FileId>.676402" = type { %"Bucket<string, FileId>_vtable_ty.676403"*, %string.676378*, %FileId.676390*, i1 }
%FileId.676390 = type { %FileId_vtable_ty.676391*, i64 }
%"Array<Bucket<string, FileId>>_vtable_ty.676405" = type { void (%"Array<Bucket<string, FileId>>.676404"*)*, void (%"Array<Bucket<string, FileId>>.676404"*, i64, i64)*, void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)*, void (%"Array<Bucket<string, FileId>>.676404"*, i64, %"Bucket<string, FileId>.676402"*)*, void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)*, %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)*, i1 (%"Array<Bucket<string, FileId>>.676404"*, %"Array<Bucket<string, FileId>>.676404"*)*, i1 (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)*, i64 (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)*, %string.676378* (%"Array<Bucket<string, FileId>>.676404"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, FileId>>.676404"*)* }
%"Array<Bucket<string, FileId>>.676404" = type { %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Bucket<string, FileId>.676402"**, i64, i64 }
%"Map<string, FileId>_vtable_ty.676401" = type { i64 (%"Map<string, FileId>.676398"*, %string.676378*)*, void (%"Map<string, FileId>.676398"*)*, void (%"Map<string, FileId>.676398"*, %string.676378*, %FileId.676390*)*, %FileId.676390* (%"Map<string, FileId>.676398"*, %string.676378*)*, %"Array<Bucket<string, FileId>>.676404"* (%"Map<string, FileId>.676398"*)* }
%"Map<string, FileId>.676398" = type { %"Map<string, FileId>_vtable_ty.676401"*, %"Bucket<string, FileId>.676402"**, i64, i64 }
%Compiler_vtable_ty.676395 = type { %string.676378* (%Compiler.676394*, %string.676378*)*, %FileId.676390* (%Compiler.676394*, %string.676378*)*, i1 (%Compiler.676394*, %FileId.676390*)*, i1 (%Compiler.676394*)*, %FileId.676390* (%Compiler.676394*)* }
%Compiler.676394 = type { %Compiler_vtable_ty.676395*, %FileId.676390*, %string.676378*, %string.676378*, %string.676378*, %"Array<FloFile>.676396"*, %"Array<FloError>.676397"*, %"Map<string, FileId>.676398"* }
%Token_vtable_ty.676407 = type {}
%IntToken_vtable_ty.676409 = type {}
%FloatToken_vtable_ty.676411 = type {}
%CharToken_vtable_ty.676413 = type {}
%"Array<Token>_vtable_ty.676418" = type { void (%"Array<Token>.676417"*)*, void (%"Array<Token>.676417"*, i64, i64)*, void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, i64, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)*, %Token.676406* (%"Array<Token>.676417"*, i64)*, i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)*, i1 (%"Array<Token>.676417"*, %Token.676406*)*, i64 (%"Array<Token>.676417"*, %Token.676406*)*, %string.676378* (%"Array<Token>.676417"*, %string.676378*)*, %string.676378* (%"Array<Token>.676417"*)* }
%"Array<Token>.676417" = type { %"Array<Token>_vtable_ty.676418"*, %Token.676406**, i64, i64 }
%Token.676406 = type { %Token_vtable_ty.676407*, i64, %FloRange.676382* }
%"Array<Array<Token>>_vtable_ty.676419" = type { void (%"Array<Array<Token>>.676416"*)*, void (%"Array<Array<Token>>.676416"*, i64, i64)*, void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)*, void (%"Array<Array<Token>>.676416"*, i64, %"Array<Token>.676417"*)*, void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)*, %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)*, i1 (%"Array<Array<Token>>.676416"*, %"Array<Array<Token>>.676416"*)*, i1 (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)*, i64 (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)*, %string.676378* (%"Array<Array<Token>>.676416"*, %string.676378*)*, %string.676378* (%"Array<Array<Token>>.676416"*)* }
%"Array<Array<Token>>.676416" = type { %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Token>.676417"**, i64, i64 }
%StrToken_vtable_ty.676415 = type {}
%IdentifierToken_vtable_ty.676421 = type {}
%Lexer_vtable_ty.676423 = type { i1 (%Lexer.676422*)*, i8 (%Lexer.676422*, i64)*, void (%Lexer.676422*)*, %FloRange.676382* (%Lexer.676422*, i64)*, %Token.676406* (%Lexer.676422*)*, i1 (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %IntToken.676408* (%Lexer.676422*, i64)*, %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %StrToken.676414* (%Lexer.676422*)*, %CharToken.676412* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)*, %"Array<Token>.676417"* (%Lexer.676422*, %string.676378*, %"Array<FloError>.676397"*)* }
%Lexer.676422 = type { %Lexer_vtable_ty.676423*, i8, %string.676378*, %"Array<FloError>.676397"*, i64, i64, i64 }
%IntToken.676408 = type { %IntToken_vtable_ty.676409*, i64, %FloRange.676382*, i64 }
%StrToken.676414 = type { %StrToken_vtable_ty.676415*, i64, %FloRange.676382*, %string.676378*, %"Array<Array<Token>>.676416"* }
%CharToken.676412 = type { %CharToken_vtable_ty.676413*, i64, %FloRange.676382*, i8 }
%Node_vtable_ty.676425 = type {}
%TypeNode_vtable_ty.676427 = type {}
%"Array<TypeNode>_vtable_ty.676431" = type { void (%"Array<TypeNode>.676430"*)*, void (%"Array<TypeNode>.676430"*, i64, i64)*, void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, void (%"Array<TypeNode>.676430"*, i64, %TypeNode.676426*)*, void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)*, i1 (%"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"*)*, i1 (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, i64 (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, %string.676378* (%"Array<TypeNode>.676430"*, %string.676378*)*, %string.676378* (%"Array<TypeNode>.676430"*)* }
%"Array<TypeNode>.676430" = type { %"Array<TypeNode>_vtable_ty.676431"*, %TypeNode.676426**, i64, i64 }
%TypeNode.676426 = type { %TypeNode_vtable_ty.676427*, %FloRange.676382*, i64 }
%RecordTypeNode_vtable_ty.676429 = type {}
%FunctionTypeNode_vtable_ty.676433 = type {}
%PointerTypeNode_vtable_ty.676435 = type {}
%StatementNode_vtable_ty.676437 = type {}
%"Array<StatementNode>_vtable_ty.676441" = type { void (%"Array<StatementNode>.676440"*)*, void (%"Array<StatementNode>.676440"*, i64, i64)*, void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, void (%"Array<StatementNode>.676440"*, i64, %StatementNode.676436*)*, void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)*, i1 (%"Array<StatementNode>.676440"*, %"Array<StatementNode>.676440"*)*, i1 (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, i64 (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, %string.676378* (%"Array<StatementNode>.676440"*, %string.676378*)*, %string.676378* (%"Array<StatementNode>.676440"*)* }
%"Array<StatementNode>.676440" = type { %"Array<StatementNode>_vtable_ty.676441"*, %StatementNode.676436**, i64, i64 }
%StatementNode.676436 = type { %StatementNode_vtable_ty.676437*, %FloRange.676382*, i64 }
%BlockNode_vtable_ty.676439 = type {}
%ExpressionNode_vtable_ty.676443 = type {}
%ArrayTypeNode_vtable_ty.676445 = type {}
%IntExpressionNode_vtable_ty.676447 = type {}
%FloatExpressionNode_vtable_ty.676449 = type {}
%CharExpressionNode_vtable_ty.676451 = type {}
%"Array<ExpressionNode>_vtable_ty.676455" = type { void (%"Array<ExpressionNode>.676454"*)*, void (%"Array<ExpressionNode>.676454"*, i64, i64)*, void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, void (%"Array<ExpressionNode>.676454"*, i64, %ExpressionNode.676442*)*, void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, i1 (%"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"*)*, i1 (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, i64 (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, %string.676378* (%"Array<ExpressionNode>.676454"*, %string.676378*)*, %string.676378* (%"Array<ExpressionNode>.676454"*)* }
%"Array<ExpressionNode>.676454" = type { %"Array<ExpressionNode>_vtable_ty.676455"*, %ExpressionNode.676442**, i64, i64 }
%ExpressionNode.676442 = type { %ExpressionNode_vtable_ty.676443*, %FloRange.676382*, i64, i64 }
%StringExpressionNode_vtable_ty.676453 = type {}
%VarAccessExpressionNode_vtable_ty.676457 = type {}
%ArrayExpressionNode_vtable_ty.676459 = type {}
%NewExpressionNode_vtable_ty.676461 = type {}
%ExpressionIndexNode_vtable_ty.676463 = type {}
%MemberExpressionNode_vtable_ty.676465 = type {}
%CallExpressionNode_vtable_ty.676467 = type {}
%TypeCastExpressionNode_vtable_ty.676469 = type {}
%BinaryExpressionNode_vtable_ty.676471 = type {}
%TernaryExpressionNode_vtable_ty.676473 = type {}
%UnaryExpressionNode_vtable_ty.676475 = type {}
%IfStatementNode_vtable_ty.676477 = type {}
%WhileStatementNode_vtable_ty.676479 = type {}
%ForStatementNode_vtable_ty.676481 = type {}
%ReturnStatementNode_vtable_ty.676483 = type {}
%VarDeclarationStatement_vtable_ty.676485 = type {}
%ConstDeclarationStatement_vtable_ty.676487 = type {}
%ArgNode_vtable_ty.676489 = type {}
%"Array<ArgNode>_vtable_ty.676493" = type { void (%"Array<ArgNode>.676492"*)*, void (%"Array<ArgNode>.676492"*, i64, i64)*, void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, void (%"Array<ArgNode>.676492"*, i64, %ArgNode.676488*)*, void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)*, i1 (%"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"*)*, i1 (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, i64 (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, %string.676378* (%"Array<ArgNode>.676492"*, %string.676378*)*, %string.676378* (%"Array<ArgNode>.676492"*)* }
%"Array<ArgNode>.676492" = type { %"Array<ArgNode>_vtable_ty.676493"*, %ArgNode.676488**, i64, i64 }
%ArgNode.676488 = type { %ArgNode_vtable_ty.676489*, %IdentifierToken.676420*, %TypeNode.676426*, %ExpressionNode.676442* }
%IdentifierToken.676420 = type { %IdentifierToken_vtable_ty.676421*, i64, %FloRange.676382*, %string.676378* }
%FunctionDeclarationNode_vtable_ty.676491 = type {}
%MethodNode_vtable_ty.676495 = type {}
%FieldNode_vtable_ty.676497 = type {}
%GenericParameterNode_vtable_ty.676499 = type {}
%"Array<GenericParameterNode>_vtable_ty.676505" = type { void (%"Array<GenericParameterNode>.676502"*)*, void (%"Array<GenericParameterNode>.676502"*, i64, i64)*, void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, void (%"Array<GenericParameterNode>.676502"*, i64, %GenericParameterNode.676498*)*, void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)*, i1 (%"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"*)*, i1 (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, i64 (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, %string.676378* (%"Array<GenericParameterNode>.676502"*, %string.676378*)*, %string.676378* (%"Array<GenericParameterNode>.676502"*)* }
%"Array<GenericParameterNode>.676502" = type { %"Array<GenericParameterNode>_vtable_ty.676505"*, %GenericParameterNode.676498**, i64, i64 }
%GenericParameterNode.676498 = type { %GenericParameterNode_vtable_ty.676499*, %IdentifierToken.676420* }
%"Array<FieldNode>_vtable_ty.676506" = type { void (%"Array<FieldNode>.676503"*)*, void (%"Array<FieldNode>.676503"*, i64, i64)*, void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)*, void (%"Array<FieldNode>.676503"*, i64, %FieldNode.676496*)*, void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)*, %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)*, i1 (%"Array<FieldNode>.676503"*, %"Array<FieldNode>.676503"*)*, i1 (%"Array<FieldNode>.676503"*, %FieldNode.676496*)*, i64 (%"Array<FieldNode>.676503"*, %FieldNode.676496*)*, %string.676378* (%"Array<FieldNode>.676503"*, %string.676378*)*, %string.676378* (%"Array<FieldNode>.676503"*)* }
%"Array<FieldNode>.676503" = type { %"Array<FieldNode>_vtable_ty.676506"*, %FieldNode.676496**, i64, i64 }
%FieldNode.676496 = type { %FieldNode_vtable_ty.676497*, %IdentifierToken.676420*, i64, %ExpressionNode.676442*, %TypeNode.676426* }
%"Array<MethodNode>_vtable_ty.676507" = type { void (%"Array<MethodNode>.676504"*)*, void (%"Array<MethodNode>.676504"*, i64, i64)*, void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)*, void (%"Array<MethodNode>.676504"*, i64, %MethodNode.676494*)*, void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)*, %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)*, i1 (%"Array<MethodNode>.676504"*, %"Array<MethodNode>.676504"*)*, i1 (%"Array<MethodNode>.676504"*, %MethodNode.676494*)*, i64 (%"Array<MethodNode>.676504"*, %MethodNode.676494*)*, %string.676378* (%"Array<MethodNode>.676504"*, %string.676378*)*, %string.676378* (%"Array<MethodNode>.676504"*)* }
%"Array<MethodNode>.676504" = type { %"Array<MethodNode>_vtable_ty.676507"*, %MethodNode.676494**, i64, i64 }
%MethodNode.676494 = type { %MethodNode_vtable_ty.676495*, %IdentifierToken.676420*, %"Array<ArgNode>.676492"*, %BlockNode.676438*, i64, %TypeNode.676426*, i1, i1 }
%BlockNode.676438 = type { %BlockNode_vtable_ty.676439*, %FloRange.676382*, %"Array<StatementNode>.676440"* }
%ClassDeclarationNode_vtable_ty.676501 = type {}
%EnumNodeField_vtable_ty.676509 = type {}
%"Array<EnumNodeField>_vtable_ty.676513" = type { void (%"Array<EnumNodeField>.676512"*)*, void (%"Array<EnumNodeField>.676512"*, i64, i64)*, void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)*, void (%"Array<EnumNodeField>.676512"*, i64, %EnumNodeField.676508*)*, void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)*, %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)*, i1 (%"Array<EnumNodeField>.676512"*, %"Array<EnumNodeField>.676512"*)*, i1 (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)*, i64 (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)*, %string.676378* (%"Array<EnumNodeField>.676512"*, %string.676378*)*, %string.676378* (%"Array<EnumNodeField>.676512"*)* }
%"Array<EnumNodeField>.676512" = type { %"Array<EnumNodeField>_vtable_ty.676513"*, %EnumNodeField.676508**, i64, i64 }
%EnumNodeField.676508 = type { %EnumNodeField_vtable_ty.676509*, %IdentifierToken.676420*, %ExpressionNode.676442* }
%EnumNode_vtable_ty.676511 = type {}
%"Array<IdentifierToken>_vtable_ty.676517" = type { void (%"Array<IdentifierToken>.676516"*)*, void (%"Array<IdentifierToken>.676516"*, i64, i64)*, void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, void (%"Array<IdentifierToken>.676516"*, i64, %IdentifierToken.676420*)*, void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)*, i1 (%"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"*)*, i1 (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, i64 (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, %string.676378* (%"Array<IdentifierToken>.676516"*, %string.676378*)*, %string.676378* (%"Array<IdentifierToken>.676516"*)* }
%"Array<IdentifierToken>.676516" = type { %"Array<IdentifierToken>_vtable_ty.676517"*, %IdentifierToken.676420**, i64, i64 }
%ImportNode_vtable_ty.676515 = type {}
%TypeAliasNode_vtable_ty.676519 = type {}
%"Array<FunctionDeclarationNode>_vtable_ty.676529" = type { void (%"Array<FunctionDeclarationNode>.676522"*)*, void (%"Array<FunctionDeclarationNode>.676522"*, i64, i64)*, void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)*, void (%"Array<FunctionDeclarationNode>.676522"*, i64, %FunctionDeclarationNode.676490*)*, void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)*, %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)*, i1 (%"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"*)*, i1 (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)*, i64 (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)*, %string.676378* (%"Array<FunctionDeclarationNode>.676522"*, %string.676378*)*, %string.676378* (%"Array<FunctionDeclarationNode>.676522"*)* }
%"Array<FunctionDeclarationNode>.676522" = type { %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %FunctionDeclarationNode.676490**, i64, i64 }
%FunctionDeclarationNode.676490 = type { %FunctionDeclarationNode_vtable_ty.676491*, %IdentifierToken.676420*, %"Array<ArgNode>.676492"*, %BlockNode.676438*, %TypeNode.676426*, i1 }
%"Array<ClassDeclarationNode>_vtable_ty.676530" = type { void (%"Array<ClassDeclarationNode>.676523"*)*, void (%"Array<ClassDeclarationNode>.676523"*, i64, i64)*, void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)*, void (%"Array<ClassDeclarationNode>.676523"*, i64, %ClassDeclarationNode.676500*)*, void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)*, %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)*, i1 (%"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"*)*, i1 (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)*, i64 (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)*, %string.676378* (%"Array<ClassDeclarationNode>.676523"*, %string.676378*)*, %string.676378* (%"Array<ClassDeclarationNode>.676523"*)* }
%"Array<ClassDeclarationNode>.676523" = type { %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %ClassDeclarationNode.676500**, i64, i64 }
%ClassDeclarationNode.676500 = type { %ClassDeclarationNode_vtable_ty.676501*, %IdentifierToken.676420*, %"Array<GenericParameterNode>.676502"*, %RecordTypeNode.676428*, %"Array<FieldNode>.676503"*, %"Array<MethodNode>.676504"* }
%RecordTypeNode.676428 = type { %RecordTypeNode_vtable_ty.676429*, %FloRange.676382*, i64, %IdentifierToken.676420*, %"Array<TypeNode>.676430"* }
%"Array<EnumNode>_vtable_ty.676531" = type { void (%"Array<EnumNode>.676524"*)*, void (%"Array<EnumNode>.676524"*, i64, i64)*, void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)*, void (%"Array<EnumNode>.676524"*, i64, %EnumNode.676510*)*, void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)*, %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)*, i1 (%"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"*)*, i1 (%"Array<EnumNode>.676524"*, %EnumNode.676510*)*, i64 (%"Array<EnumNode>.676524"*, %EnumNode.676510*)*, %string.676378* (%"Array<EnumNode>.676524"*, %string.676378*)*, %string.676378* (%"Array<EnumNode>.676524"*)* }
%"Array<EnumNode>.676524" = type { %"Array<EnumNode>_vtable_ty.676531"*, %EnumNode.676510**, i64, i64 }
%EnumNode.676510 = type { %EnumNode_vtable_ty.676511*, %IdentifierToken.676420*, %"Array<EnumNodeField>.676512"*, %TypeNode.676426* }
%"Array<ImportNode>_vtable_ty.676532" = type { void (%"Array<ImportNode>.676525"*)*, void (%"Array<ImportNode>.676525"*, i64, i64)*, void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)*, void (%"Array<ImportNode>.676525"*, i64, %ImportNode.676514*)*, void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)*, %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)*, i1 (%"Array<ImportNode>.676525"*, %"Array<ImportNode>.676525"*)*, i1 (%"Array<ImportNode>.676525"*, %ImportNode.676514*)*, i64 (%"Array<ImportNode>.676525"*, %ImportNode.676514*)*, %string.676378* (%"Array<ImportNode>.676525"*, %string.676378*)*, %string.676378* (%"Array<ImportNode>.676525"*)* }
%"Array<ImportNode>.676525" = type { %"Array<ImportNode>_vtable_ty.676532"*, %ImportNode.676514**, i64, i64 }
%ImportNode.676514 = type { %ImportNode_vtable_ty.676515*, %"Array<IdentifierToken>.676516"*, %StrToken.676414* }
%"Array<ConstDeclarationStatement>_vtable_ty.676533" = type { void (%"Array<ConstDeclarationStatement>.676526"*)*, void (%"Array<ConstDeclarationStatement>.676526"*, i64, i64)*, void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)*, void (%"Array<ConstDeclarationStatement>.676526"*, i64, %ConstDeclarationStatement.676486*)*, void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)*, %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)*, i1 (%"Array<ConstDeclarationStatement>.676526"*, %"Array<ConstDeclarationStatement>.676526"*)*, i1 (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)*, i64 (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)*, %string.676378* (%"Array<ConstDeclarationStatement>.676526"*, %string.676378*)*, %string.676378* (%"Array<ConstDeclarationStatement>.676526"*)* }
%"Array<ConstDeclarationStatement>.676526" = type { %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %ConstDeclarationStatement.676486**, i64, i64 }
%ConstDeclarationStatement.676486 = type { %ConstDeclarationStatement_vtable_ty.676487*, %FloRange.676382*, i64, %IdentifierToken.676420*, %TypeNode.676426*, %ExpressionNode.676442* }
%"Array<VarDeclarationStatement>_vtable_ty.676534" = type { void (%"Array<VarDeclarationStatement>.676527"*)*, void (%"Array<VarDeclarationStatement>.676527"*, i64, i64)*, void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)*, void (%"Array<VarDeclarationStatement>.676527"*, i64, %VarDeclarationStatement.676484*)*, void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)*, %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)*, i1 (%"Array<VarDeclarationStatement>.676527"*, %"Array<VarDeclarationStatement>.676527"*)*, i1 (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)*, i64 (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)*, %string.676378* (%"Array<VarDeclarationStatement>.676527"*, %string.676378*)*, %string.676378* (%"Array<VarDeclarationStatement>.676527"*)* }
%"Array<VarDeclarationStatement>.676527" = type { %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %VarDeclarationStatement.676484**, i64, i64 }
%VarDeclarationStatement.676484 = type { %VarDeclarationStatement_vtable_ty.676485*, %FloRange.676382*, i64, %IdentifierToken.676420*, %TypeNode.676426*, %ExpressionNode.676442* }
%"Array<TypeAliasNode>_vtable_ty.676535" = type { void (%"Array<TypeAliasNode>.676528"*)*, void (%"Array<TypeAliasNode>.676528"*, i64, i64)*, void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)*, void (%"Array<TypeAliasNode>.676528"*, i64, %TypeAliasNode.676518*)*, void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)*, %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)*, i1 (%"Array<TypeAliasNode>.676528"*, %"Array<TypeAliasNode>.676528"*)*, i1 (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)*, i64 (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)*, %string.676378* (%"Array<TypeAliasNode>.676528"*, %string.676378*)*, %string.676378* (%"Array<TypeAliasNode>.676528"*)* }
%"Array<TypeAliasNode>.676528" = type { %"Array<TypeAliasNode>_vtable_ty.676535"*, %TypeAliasNode.676518**, i64, i64 }
%TypeAliasNode.676518 = type { %TypeAliasNode_vtable_ty.676519*, %IdentifierToken.676420*, %TypeNode.676426* }
%ModuleAST_vtable_ty.676521 = type {}
%Parser_vtable_ty.676537 = type { i1 (%Parser.676536*)*, void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*)*, %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)*, void (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)*, void (%Parser.676536*, %"Array<TypeNode>.676430"*)*, %RecordTypeNode.676428* (%Parser.676536*)*, %FunctionTypeNode.676432* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)*, void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)*, %ArrayExpressionNode.676458* (%Parser.676536*)*, %NewExpressionNode.676460* (%Parser.676536*)*, %StringExpressionNode.676452* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionIndexNode.676462* (%Parser.676536*, %ExpressionNode.676442*)*, %CallExpressionNode.676466* (%Parser.676536*, %ExpressionNode.676442*)*, %MemberExpressionNode.676464* (%Parser.676536*, %ExpressionNode.676442*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, i64 (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)*, %IfStatementNode.676476* (%Parser.676536*)*, %WhileStatementNode.676478* (%Parser.676536*)*, %ForStatementNode.676480* (%Parser.676536*)*, %VarDeclarationStatement.676484* (%Parser.676536*)*, %ReturnStatementNode.676482* (%Parser.676536*)*, %StatementNode.676436* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)*, %TypeAliasNode.676518* (%Parser.676536*)*, %ArgNode.676488* (%Parser.676536*)*, void (%Parser.676536*, %"Array<ArgNode>.676492"*)*, %FunctionDeclarationNode.676490* (%Parser.676536*)*, %MethodNode.676494* (%Parser.676536*)*, i64 (%Parser.676536*)*, void (%Parser.676536*, %ClassDeclarationNode.676500*)*, void (%Parser.676536*, %"Array<GenericParameterNode>.676502"*)*, %ClassDeclarationNode.676500* (%Parser.676536*)*, %ConstDeclarationStatement.676486* (%Parser.676536*)*, %ImportNode.676514* (%Parser.676536*)*, %EnumNode.676510* (%Parser.676536*)*, %ModuleAST.676520* (%Parser.676536*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*)* }
%Parser.676536 = type { %Parser_vtable_ty.676537*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*, %Token.676406*, i64 }
%FunctionTypeNode.676432 = type { %FunctionTypeNode_vtable_ty.676433*, %FloRange.676382*, i64, %"Array<TypeNode>.676430"*, %TypeNode.676426* }
%ArrayExpressionNode.676458 = type { %ArrayExpressionNode_vtable_ty.676459*, %FloRange.676382*, i64, i64, %"Array<ExpressionNode>.676454"* }
%NewExpressionNode.676460 = type { %NewExpressionNode_vtable_ty.676461*, %FloRange.676382*, i64, i64, %TypeNode.676426*, i1, %"Array<ExpressionNode>.676454"* }
%StringExpressionNode.676452 = type { %StringExpressionNode_vtable_ty.676453*, %FloRange.676382*, i64, i64, %StrToken.676414*, %"Array<ExpressionNode>.676454"* }
%ExpressionIndexNode.676462 = type { %ExpressionIndexNode_vtable_ty.676463*, %FloRange.676382*, i64, i64, %ExpressionNode.676442*, %ExpressionNode.676442* }
%CallExpressionNode.676466 = type { %CallExpressionNode_vtable_ty.676467*, %FloRange.676382*, i64, i64, %ExpressionNode.676442*, %"Array<ExpressionNode>.676454"* }
%MemberExpressionNode.676464 = type { %MemberExpressionNode_vtable_ty.676465*, %FloRange.676382*, i64, i64, %ExpressionNode.676442*, %IdentifierToken.676420* }
%IfStatementNode.676476 = type { %IfStatementNode_vtable_ty.676477*, %FloRange.676382*, i64, %ExpressionNode.676442*, %BlockNode.676438*, %BlockNode.676438* }
%WhileStatementNode.676478 = type { %WhileStatementNode_vtable_ty.676479*, %FloRange.676382*, i64, %ExpressionNode.676442*, %BlockNode.676438* }
%ForStatementNode.676480 = type { %ForStatementNode_vtable_ty.676481*, %FloRange.676382*, i64, %StatementNode.676436*, %ExpressionNode.676442*, %ExpressionNode.676442*, %ExpressionNode.676442*, i64, %IdentifierToken.676420*, %BlockNode.676438* }
%ReturnStatementNode.676482 = type { %ReturnStatementNode_vtable_ty.676483*, %FloRange.676382*, i64, %ExpressionNode.676442* }
%ModuleAST.676520 = type { %ModuleAST_vtable_ty.676521*, %"Array<FunctionDeclarationNode>.676522"*, %"Array<ClassDeclarationNode>.676523"*, %"Array<EnumNode>.676524"*, %"Array<ImportNode>.676525"*, %"Array<ConstDeclarationStatement>.676526"*, %"Array<VarDeclarationStatement>.676527"*, %"Array<TypeAliasNode>.676528"* }
%Type_vtable_ty.676539 = type {}
%BooleanType_vtable_ty.676541 = type {}
%PointerType_vtable_ty.676543 = type {}
%"Array<Type>_vtable_ty.676547" = type { void (%"Array<Type>.676546"*)*, void (%"Array<Type>.676546"*, i64, i64)*, void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, i64, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)*, %Type.676538* (%"Array<Type>.676546"*, i64)*, i1 (%"Array<Type>.676546"*, %"Array<Type>.676546"*)*, i1 (%"Array<Type>.676546"*, %Type.676538*)*, i64 (%"Array<Type>.676546"*, %Type.676538*)*, %string.676378* (%"Array<Type>.676546"*, %string.676378*)*, %string.676378* (%"Array<Type>.676546"*)* }
%"Array<Type>.676546" = type { %"Array<Type>_vtable_ty.676547"*, %Type.676538**, i64, i64 }
%Type.676538 = type { %Type_vtable_ty.676539*, i64 }
%FunctionType_vtable_ty.676545 = type {}
%Value_vtable_ty.676549 = type {}
%Statement_vtable_ty.676551 = type {}
%TypeId_vtable_ty.676553 = type {}
%ClassId_vtable_ty.676555 = type {}
%EnumId_vtable_ty.676557 = type {}
%Expression_vtable_ty.676559 = type {}
%ArrayType_vtable_ty.676561 = type {}
%ObjectType_vtable_ty.676563 = type {}
%EnumType_vtable_ty.676565 = type {}
%IntExpression_vtable_ty.676567 = type {}
%BooleanExpression_vtable_ty.676569 = type {}
%FloatExpression_vtable_ty.676571 = type {}
%"Array<Expression>_vtable_ty.676575" = type { void (%"Array<Expression>.676574"*)*, void (%"Array<Expression>.676574"*, i64, i64)*, void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, i64, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)*, i1 (%"Array<Expression>.676574"*, %"Array<Expression>.676574"*)*, i1 (%"Array<Expression>.676574"*, %Expression.676558*)*, i64 (%"Array<Expression>.676574"*, %Expression.676558*)*, %string.676378* (%"Array<Expression>.676574"*, %string.676378*)*, %string.676378* (%"Array<Expression>.676574"*)* }
%"Array<Expression>.676574" = type { %"Array<Expression>_vtable_ty.676575"*, %Expression.676558**, i64, i64 }
%Expression.676558 = type { %Expression_vtable_ty.676559*, i64, i1, i64, %Type.676538* }
%StringExpression_vtable_ty.676573 = type {}
%NullExpression_vtable_ty.676577 = type {}
%ArrayExpression_vtable_ty.676579 = type {}
%BinaryExpression_vtable_ty.676581 = type {}
%UnaryExpression_vtable_ty.676583 = type {}
%TernaryExpression_vtable_ty.676585 = type {}
%TypeCastExpression_vtable_ty.676587 = type {}
%NewExpression_vtable_ty.676589 = type {}
%IndexExpression_vtable_ty.676591 = type {}
%CallExpression_vtable_ty.676593 = type {}
%IntrinsicCall_vtable_ty.676595 = type {}
%VarId_vtable_ty.676597 = type {}
%ClassVarId_vtable_ty.676599 = type {}
%EnumVarId_vtable_ty.676601 = type {}
%ConstId_vtable_ty.676603 = type {}
%PropId_vtable_ty.676605 = type {}
%MemberExpression_vtable_ty.676607 = type {}
%VarAccessExpression_vtable_ty.676609 = type {}
%"Array<Statement>_vtable_ty.676613" = type { void (%"Array<Statement>.676612"*)*, void (%"Array<Statement>.676612"*, i64, i64)*, void (%"Array<Statement>.676612"*, %Statement.676550*)*, void (%"Array<Statement>.676612"*, i64, %Statement.676550*)*, void (%"Array<Statement>.676612"*, %Statement.676550*)*, %Statement.676550* (%"Array<Statement>.676612"*, i64)*, i1 (%"Array<Statement>.676612"*, %"Array<Statement>.676612"*)*, i1 (%"Array<Statement>.676612"*, %Statement.676550*)*, i64 (%"Array<Statement>.676612"*, %Statement.676550*)*, %string.676378* (%"Array<Statement>.676612"*, %string.676378*)*, %string.676378* (%"Array<Statement>.676612"*)* }
%"Array<Statement>.676612" = type { %"Array<Statement>_vtable_ty.676613"*, %Statement.676550**, i64, i64 }
%Statement.676550 = type { %Statement_vtable_ty.676551*, i64 }
%Block_vtable_ty.676611 = type {}
%IfStatement_vtable_ty.676615 = type {}
%VarDeclaration_vtable_ty.676617 = type {}
%ConstDeclaration_vtable_ty.676619 = type {}
%ForStatement_vtable_ty.676621 = type {}
%WhileStatement_vtable_ty.676623 = type {}
%ReturnStatement_vtable_ty.676625 = type {}
%ScopeId_vtable_ty.676627 = type {}
%"Bucket<string, VarId>_vtable_ty.676636" = type { void (%"Bucket<string, VarId>.676635"*, %string.676378*, %VarId.676596*)* }
%"Bucket<string, VarId>.676635" = type { %"Bucket<string, VarId>_vtable_ty.676636"*, %string.676378*, %VarId.676596*, i1 }
%VarId.676596 = type { %VarId_vtable_ty.676597*, i64, i64, i64 }
%"Array<Bucket<string, VarId>>_vtable_ty.676638" = type { void (%"Array<Bucket<string, VarId>>.676637"*)*, void (%"Array<Bucket<string, VarId>>.676637"*, i64, i64)*, void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)*, void (%"Array<Bucket<string, VarId>>.676637"*, i64, %"Bucket<string, VarId>.676635"*)*, void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)*, %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)*, i1 (%"Array<Bucket<string, VarId>>.676637"*, %"Array<Bucket<string, VarId>>.676637"*)*, i1 (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)*, i64 (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)*, %string.676378* (%"Array<Bucket<string, VarId>>.676637"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, VarId>>.676637"*)* }
%"Array<Bucket<string, VarId>>.676637" = type { %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Bucket<string, VarId>.676635"**, i64, i64 }
%"Map<string, VarId>_vtable_ty.676634" = type { i64 (%"Map<string, VarId>.676630"*, %string.676378*)*, void (%"Map<string, VarId>.676630"*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %"Array<Bucket<string, VarId>>.676637"* (%"Map<string, VarId>.676630"*)* }
%"Map<string, VarId>.676630" = type { %"Map<string, VarId>_vtable_ty.676634"*, %"Bucket<string, VarId>.676635"**, i64, i64 }
%"Bucket<string, ClassId>_vtable_ty.676641" = type { void (%"Bucket<string, ClassId>.676640"*, %string.676378*, %ClassId.676554*)* }
%"Bucket<string, ClassId>.676640" = type { %"Bucket<string, ClassId>_vtable_ty.676641"*, %string.676378*, %ClassId.676554*, i1 }
%ClassId.676554 = type { %ClassId_vtable_ty.676555*, i64, i64, i64 }
%"Array<Bucket<string, ClassId>>_vtable_ty.676643" = type { void (%"Array<Bucket<string, ClassId>>.676642"*)*, void (%"Array<Bucket<string, ClassId>>.676642"*, i64, i64)*, void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)*, void (%"Array<Bucket<string, ClassId>>.676642"*, i64, %"Bucket<string, ClassId>.676640"*)*, void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)*, %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)*, i1 (%"Array<Bucket<string, ClassId>>.676642"*, %"Array<Bucket<string, ClassId>>.676642"*)*, i1 (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)*, i64 (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)*, %string.676378* (%"Array<Bucket<string, ClassId>>.676642"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, ClassId>>.676642"*)* }
%"Array<Bucket<string, ClassId>>.676642" = type { %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Bucket<string, ClassId>.676640"**, i64, i64 }
%"Map<string, ClassId>_vtable_ty.676639" = type { i64 (%"Map<string, ClassId>.676631"*, %string.676378*)*, void (%"Map<string, ClassId>.676631"*)*, void (%"Map<string, ClassId>.676631"*, %string.676378*, %ClassId.676554*)*, %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)*, %"Array<Bucket<string, ClassId>>.676642"* (%"Map<string, ClassId>.676631"*)* }
%"Map<string, ClassId>.676631" = type { %"Map<string, ClassId>_vtable_ty.676639"*, %"Bucket<string, ClassId>.676640"**, i64, i64 }
%"Bucket<string, EnumId>_vtable_ty.676646" = type { void (%"Bucket<string, EnumId>.676645"*, %string.676378*, %EnumId.676556*)* }
%"Bucket<string, EnumId>.676645" = type { %"Bucket<string, EnumId>_vtable_ty.676646"*, %string.676378*, %EnumId.676556*, i1 }
%EnumId.676556 = type { %EnumId_vtable_ty.676557*, i64, i64, i64 }
%"Array<Bucket<string, EnumId>>_vtable_ty.676648" = type { void (%"Array<Bucket<string, EnumId>>.676647"*)*, void (%"Array<Bucket<string, EnumId>>.676647"*, i64, i64)*, void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)*, void (%"Array<Bucket<string, EnumId>>.676647"*, i64, %"Bucket<string, EnumId>.676645"*)*, void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)*, %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)*, i1 (%"Array<Bucket<string, EnumId>>.676647"*, %"Array<Bucket<string, EnumId>>.676647"*)*, i1 (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)*, i64 (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)*, %string.676378* (%"Array<Bucket<string, EnumId>>.676647"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, EnumId>>.676647"*)* }
%"Array<Bucket<string, EnumId>>.676647" = type { %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Bucket<string, EnumId>.676645"**, i64, i64 }
%"Map<string, EnumId>_vtable_ty.676644" = type { i64 (%"Map<string, EnumId>.676632"*, %string.676378*)*, void (%"Map<string, EnumId>.676632"*)*, void (%"Map<string, EnumId>.676632"*, %string.676378*, %EnumId.676556*)*, %EnumId.676556* (%"Map<string, EnumId>.676632"*, %string.676378*)*, %"Array<Bucket<string, EnumId>>.676647"* (%"Map<string, EnumId>.676632"*)* }
%"Map<string, EnumId>.676632" = type { %"Map<string, EnumId>_vtable_ty.676644"*, %"Bucket<string, EnumId>.676645"**, i64, i64 }
%"Bucket<string, Type>_vtable_ty.676651" = type { void (%"Bucket<string, Type>.676650"*, %string.676378*, %Type.676538*)* }
%"Bucket<string, Type>.676650" = type { %"Bucket<string, Type>_vtable_ty.676651"*, %string.676378*, %Type.676538*, i1 }
%"Array<Bucket<string, Type>>_vtable_ty.676653" = type { void (%"Array<Bucket<string, Type>>.676652"*)*, void (%"Array<Bucket<string, Type>>.676652"*, i64, i64)*, void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)*, void (%"Array<Bucket<string, Type>>.676652"*, i64, %"Bucket<string, Type>.676650"*)*, void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)*, %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)*, i1 (%"Array<Bucket<string, Type>>.676652"*, %"Array<Bucket<string, Type>>.676652"*)*, i1 (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)*, i64 (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)*, %string.676378* (%"Array<Bucket<string, Type>>.676652"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, Type>>.676652"*)* }
%"Array<Bucket<string, Type>>.676652" = type { %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Bucket<string, Type>.676650"**, i64, i64 }
%"Map<string, Type>_vtable_ty.676649" = type { i64 (%"Map<string, Type>.676633"*, %string.676378*)*, void (%"Map<string, Type>.676633"*)*, void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)*, %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)*, %"Array<Bucket<string, Type>>.676652"* (%"Map<string, Type>.676633"*)* }
%"Map<string, Type>.676633" = type { %"Map<string, Type>_vtable_ty.676649"*, %"Bucket<string, Type>.676650"**, i64, i64 }
%Scope_vtable_ty.676629 = type {}
%FunctionArg_vtable_ty.676655 = type {}
%"Array<FunctionArg>_vtable_ty.676659" = type { void (%"Array<FunctionArg>.676658"*)*, void (%"Array<FunctionArg>.676658"*, i64, i64)*, void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)*, void (%"Array<FunctionArg>.676658"*, i64, %FunctionArg.676654*)*, void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, i1 (%"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"*)*, i1 (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)*, i64 (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)*, %string.676378* (%"Array<FunctionArg>.676658"*, %string.676378*)*, %string.676378* (%"Array<FunctionArg>.676658"*)* }
%"Array<FunctionArg>.676658" = type { %"Array<FunctionArg>_vtable_ty.676659"*, %FunctionArg.676654**, i64, i64 }
%FunctionArg.676654 = type { %FunctionArg_vtable_ty.676655*, i64, i1, i64, %Type.676538*, %VarId.676596*, %string.676378*, %Expression.676558* }
%Function_vtable_ty.676657 = type {}
%Var_vtable_ty.676661 = type {}
%Const_vtable_ty.676663 = type {}
%ClassField_vtable_ty.676665 = type {}
%ClassMethod_vtable_ty.676667 = type {}
%"Array<ClassField>_vtable_ty.676673" = type { void (%"Array<ClassField>.676670"*)*, void (%"Array<ClassField>.676670"*, i64, i64)*, void (%"Array<ClassField>.676670"*, %ClassField.676664*)*, void (%"Array<ClassField>.676670"*, i64, %ClassField.676664*)*, void (%"Array<ClassField>.676670"*, %ClassField.676664*)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, i1 (%"Array<ClassField>.676670"*, %"Array<ClassField>.676670"*)*, i1 (%"Array<ClassField>.676670"*, %ClassField.676664*)*, i64 (%"Array<ClassField>.676670"*, %ClassField.676664*)*, %string.676378* (%"Array<ClassField>.676670"*, %string.676378*)*, %string.676378* (%"Array<ClassField>.676670"*)* }
%"Array<ClassField>.676670" = type { %"Array<ClassField>_vtable_ty.676673"*, %ClassField.676664**, i64, i64 }
%ClassField.676664 = type { %ClassField_vtable_ty.676665*, %PropId.676604*, i1, i64, %string.676378*, %Type.676538*, %Expression.676558*, i64 }
%PropId.676604 = type { %PropId_vtable_ty.676605*, i64, %TypeId.676552*, i64 }
%TypeId.676552 = type { %TypeId_vtable_ty.676553*, i64, i64, i64 }
%"Array<ClassMethod>_vtable_ty.676674" = type { void (%"Array<ClassMethod>.676671"*)*, void (%"Array<ClassMethod>.676671"*, i64, i64)*, void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)*, void (%"Array<ClassMethod>.676671"*, i64, %ClassMethod.676666*)*, void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, i1 (%"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"*)*, i1 (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)*, i64 (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)*, %string.676378* (%"Array<ClassMethod>.676671"*, %string.676378*)*, %string.676378* (%"Array<ClassMethod>.676671"*)* }
%"Array<ClassMethod>.676671" = type { %"Array<ClassMethod>_vtable_ty.676674"*, %ClassMethod.676666**, i64, i64 }
%ClassMethod.676666 = type { %ClassMethod_vtable_ty.676667*, %PropId.676604*, i1, i64, %string.676378*, %FunctionType.676544*, %Block.676610*, %"Array<FunctionArg>.676658"*, i1, %ScopeId.676626*, i64 }
%FunctionType.676544 = type { %FunctionType_vtable_ty.676545*, i64, %"Array<Type>.676546"*, %Type.676538*, i1 }
%Block.676610 = type { %Block_vtable_ty.676611*, %"Array<Statement>.676612"*, i1, i1, i1 }
%ScopeId.676626 = type { %ScopeId_vtable_ty.676627*, i64, i64 }
%"Bucket<string, PropId>_vtable_ty.676677" = type { void (%"Bucket<string, PropId>.676676"*, %string.676378*, %PropId.676604*)* }
%"Bucket<string, PropId>.676676" = type { %"Bucket<string, PropId>_vtable_ty.676677"*, %string.676378*, %PropId.676604*, i1 }
%"Array<Bucket<string, PropId>>_vtable_ty.676679" = type { void (%"Array<Bucket<string, PropId>>.676678"*)*, void (%"Array<Bucket<string, PropId>>.676678"*, i64, i64)*, void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)*, void (%"Array<Bucket<string, PropId>>.676678"*, i64, %"Bucket<string, PropId>.676676"*)*, void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, i1 (%"Array<Bucket<string, PropId>>.676678"*, %"Array<Bucket<string, PropId>>.676678"*)*, i1 (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)*, i64 (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)*, %string.676378* (%"Array<Bucket<string, PropId>>.676678"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, PropId>>.676678"*)* }
%"Array<Bucket<string, PropId>>.676678" = type { %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Bucket<string, PropId>.676676"**, i64, i64 }
%"Map<string, PropId>_vtable_ty.676675" = type { i64 (%"Map<string, PropId>.676672"*, %string.676378*)*, void (%"Map<string, PropId>.676672"*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)* }
%"Map<string, PropId>.676672" = type { %"Map<string, PropId>_vtable_ty.676675"*, %"Bucket<string, PropId>.676676"**, i64, i64 }
%Class_vtable_ty.676669 = type {}
%EnumField_vtable_ty.676681 = type {}
%"Array<EnumField>_vtable_ty.676685" = type { void (%"Array<EnumField>.676684"*)*, void (%"Array<EnumField>.676684"*, i64, i64)*, void (%"Array<EnumField>.676684"*, %EnumField.676680*)*, void (%"Array<EnumField>.676684"*, i64, %EnumField.676680*)*, void (%"Array<EnumField>.676684"*, %EnumField.676680*)*, %EnumField.676680* (%"Array<EnumField>.676684"*, i64)*, i1 (%"Array<EnumField>.676684"*, %"Array<EnumField>.676684"*)*, i1 (%"Array<EnumField>.676684"*, %EnumField.676680*)*, i64 (%"Array<EnumField>.676684"*, %EnumField.676680*)*, %string.676378* (%"Array<EnumField>.676684"*, %string.676378*)*, %string.676378* (%"Array<EnumField>.676684"*)* }
%"Array<EnumField>.676684" = type { %"Array<EnumField>_vtable_ty.676685"*, %EnumField.676680**, i64, i64 }
%EnumField.676680 = type { %EnumField_vtable_ty.676681*, %PropId.676604*, %string.676378*, %Expression.676558* }
%Enum_vtable_ty.676683 = type {}
%"Array<VarDeclaration>_vtable_ty.676692" = type { void (%"Array<VarDeclaration>.676688"*)*, void (%"Array<VarDeclaration>.676688"*, i64, i64)*, void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, void (%"Array<VarDeclaration>.676688"*, i64, %VarDeclaration.676616*)*, void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, i1 (%"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"*)*, i1 (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, i64 (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, %string.676378* (%"Array<VarDeclaration>.676688"*, %string.676378*)*, %string.676378* (%"Array<VarDeclaration>.676688"*)* }
%"Array<VarDeclaration>.676688" = type { %"Array<VarDeclaration>_vtable_ty.676692"*, %VarDeclaration.676616**, i64, i64 }
%VarDeclaration.676616 = type { %VarDeclaration_vtable_ty.676617*, i64, %string.676378*, %VarId.676596*, i1 }
%"Array<VarId>_vtable_ty.676693" = type { void (%"Array<VarId>.676689"*)*, void (%"Array<VarId>.676689"*, i64, i64)*, void (%"Array<VarId>.676689"*, %VarId.676596*)*, void (%"Array<VarId>.676689"*, i64, %VarId.676596*)*, void (%"Array<VarId>.676689"*, %VarId.676596*)*, %VarId.676596* (%"Array<VarId>.676689"*, i64)*, i1 (%"Array<VarId>.676689"*, %"Array<VarId>.676689"*)*, i1 (%"Array<VarId>.676689"*, %VarId.676596*)*, i64 (%"Array<VarId>.676689"*, %VarId.676596*)*, %string.676378* (%"Array<VarId>.676689"*, %string.676378*)*, %string.676378* (%"Array<VarId>.676689"*)* }
%"Array<VarId>.676689" = type { %"Array<VarId>_vtable_ty.676693"*, %VarId.676596**, i64, i64 }
%"Array<EnumId>_vtable_ty.676694" = type { void (%"Array<EnumId>.676690"*)*, void (%"Array<EnumId>.676690"*, i64, i64)*, void (%"Array<EnumId>.676690"*, %EnumId.676556*)*, void (%"Array<EnumId>.676690"*, i64, %EnumId.676556*)*, void (%"Array<EnumId>.676690"*, %EnumId.676556*)*, %EnumId.676556* (%"Array<EnumId>.676690"*, i64)*, i1 (%"Array<EnumId>.676690"*, %"Array<EnumId>.676690"*)*, i1 (%"Array<EnumId>.676690"*, %EnumId.676556*)*, i64 (%"Array<EnumId>.676690"*, %EnumId.676556*)*, %string.676378* (%"Array<EnumId>.676690"*, %string.676378*)*, %string.676378* (%"Array<EnumId>.676690"*)* }
%"Array<EnumId>.676690" = type { %"Array<EnumId>_vtable_ty.676694"*, %EnumId.676556**, i64, i64 }
%"Array<ClassId>_vtable_ty.676695" = type { void (%"Array<ClassId>.676691"*)*, void (%"Array<ClassId>.676691"*, i64, i64)*, void (%"Array<ClassId>.676691"*, %ClassId.676554*)*, void (%"Array<ClassId>.676691"*, i64, %ClassId.676554*)*, void (%"Array<ClassId>.676691"*, %ClassId.676554*)*, %ClassId.676554* (%"Array<ClassId>.676691"*, i64)*, i1 (%"Array<ClassId>.676691"*, %"Array<ClassId>.676691"*)*, i1 (%"Array<ClassId>.676691"*, %ClassId.676554*)*, i64 (%"Array<ClassId>.676691"*, %ClassId.676554*)*, %string.676378* (%"Array<ClassId>.676691"*, %string.676378*)*, %string.676378* (%"Array<ClassId>.676691"*)* }
%"Array<ClassId>.676691" = type { %"Array<ClassId>_vtable_ty.676695"*, %ClassId.676554**, i64, i64 }
%ImportedSymbols_vtable_ty.676687 = type {}
%"Array<Var>_vtable_ty.676705" = type { void (%"Array<Var>.676698"*)*, void (%"Array<Var>.676698"*, i64, i64)*, void (%"Array<Var>.676698"*, %Var.676660*)*, void (%"Array<Var>.676698"*, i64, %Var.676660*)*, void (%"Array<Var>.676698"*, %Var.676660*)*, %Var.676660* (%"Array<Var>.676698"*, i64)*, i1 (%"Array<Var>.676698"*, %"Array<Var>.676698"*)*, i1 (%"Array<Var>.676698"*, %Var.676660*)*, i64 (%"Array<Var>.676698"*, %Var.676660*)*, %string.676378* (%"Array<Var>.676698"*, %string.676378*)*, %string.676378* (%"Array<Var>.676698"*)* }
%"Array<Var>.676698" = type { %"Array<Var>_vtable_ty.676705"*, %Var.676660**, i64, i64 }
%Var.676660 = type { %Var_vtable_ty.676661*, %Type.676538*, %VarId.676596*, %Expression.676558* }
%"Array<Const>_vtable_ty.676706" = type { void (%"Array<Const>.676699"*)*, void (%"Array<Const>.676699"*, i64, i64)*, void (%"Array<Const>.676699"*, %Const.676662*)*, void (%"Array<Const>.676699"*, i64, %Const.676662*)*, void (%"Array<Const>.676699"*, %Const.676662*)*, %Const.676662* (%"Array<Const>.676699"*, i64)*, i1 (%"Array<Const>.676699"*, %"Array<Const>.676699"*)*, i1 (%"Array<Const>.676699"*, %Const.676662*)*, i64 (%"Array<Const>.676699"*, %Const.676662*)*, %string.676378* (%"Array<Const>.676699"*, %string.676378*)*, %string.676378* (%"Array<Const>.676699"*)* }
%"Array<Const>.676699" = type { %"Array<Const>_vtable_ty.676706"*, %Const.676662**, i64, i64 }
%Const.676662 = type { %Const_vtable_ty.676663*, %Type.676538*, %ConstId.676602*, %Expression.676558* }
%ConstId.676602 = type { %ConstId_vtable_ty.676603*, i64, i64, i64 }
%"Array<Class>_vtable_ty.676707" = type { void (%"Array<Class>.676700"*)*, void (%"Array<Class>.676700"*, i64, i64)*, void (%"Array<Class>.676700"*, %Class.676668*)*, void (%"Array<Class>.676700"*, i64, %Class.676668*)*, void (%"Array<Class>.676700"*, %Class.676668*)*, %Class.676668* (%"Array<Class>.676700"*, i64)*, i1 (%"Array<Class>.676700"*, %"Array<Class>.676700"*)*, i1 (%"Array<Class>.676700"*, %Class.676668*)*, i64 (%"Array<Class>.676700"*, %Class.676668*)*, %string.676378* (%"Array<Class>.676700"*, %string.676378*)*, %string.676378* (%"Array<Class>.676700"*)* }
%"Array<Class>.676700" = type { %"Array<Class>_vtable_ty.676707"*, %Class.676668**, i64, i64 }
%Class.676668 = type { %Class_vtable_ty.676669*, %ClassId.676554*, %string.676378*, %Type.676538*, %PropId.676604*, %"Array<ClassField>.676670"*, %"Array<ClassMethod>.676671"*, %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"*, i64, i64, i1 }
%"Array<Function>_vtable_ty.676708" = type { void (%"Array<Function>.676701"*)*, void (%"Array<Function>.676701"*, i64, i64)*, void (%"Array<Function>.676701"*, %Function.676656*)*, void (%"Array<Function>.676701"*, i64, %Function.676656*)*, void (%"Array<Function>.676701"*, %Function.676656*)*, %Function.676656* (%"Array<Function>.676701"*, i64)*, i1 (%"Array<Function>.676701"*, %"Array<Function>.676701"*)*, i1 (%"Array<Function>.676701"*, %Function.676656*)*, i64 (%"Array<Function>.676701"*, %Function.676656*)*, %string.676378* (%"Array<Function>.676701"*, %string.676378*)*, %string.676378* (%"Array<Function>.676701"*)* }
%"Array<Function>.676701" = type { %"Array<Function>_vtable_ty.676708"*, %Function.676656**, i64, i64 }
%Function.676656 = type { %Function_vtable_ty.676657*, %VarId.676596*, %string.676378*, %"Array<FunctionArg>.676658"*, %Block.676610*, %FunctionType.676544*, %ScopeId.676626*, i1 }
%"Array<Enum>_vtable_ty.676709" = type { void (%"Array<Enum>.676702"*)*, void (%"Array<Enum>.676702"*, i64, i64)*, void (%"Array<Enum>.676702"*, %Enum.676682*)*, void (%"Array<Enum>.676702"*, i64, %Enum.676682*)*, void (%"Array<Enum>.676702"*, %Enum.676682*)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)*, i1 (%"Array<Enum>.676702"*, %"Array<Enum>.676702"*)*, i1 (%"Array<Enum>.676702"*, %Enum.676682*)*, i64 (%"Array<Enum>.676702"*, %Enum.676682*)*, %string.676378* (%"Array<Enum>.676702"*, %string.676378*)*, %string.676378* (%"Array<Enum>.676702"*)* }
%"Array<Enum>.676702" = type { %"Array<Enum>_vtable_ty.676709"*, %Enum.676682**, i64, i64 }
%Enum.676682 = type { %Enum_vtable_ty.676683*, %EnumId.676556*, %string.676378*, %"Array<EnumField>.676684"*, %"Map<string, PropId>.676672"* }
%"Array<Scope>_vtable_ty.676710" = type { void (%"Array<Scope>.676703"*)*, void (%"Array<Scope>.676703"*, i64, i64)*, void (%"Array<Scope>.676703"*, %Scope.676628*)*, void (%"Array<Scope>.676703"*, i64, %Scope.676628*)*, void (%"Array<Scope>.676703"*, %Scope.676628*)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)*, i1 (%"Array<Scope>.676703"*, %"Array<Scope>.676703"*)*, i1 (%"Array<Scope>.676703"*, %Scope.676628*)*, i64 (%"Array<Scope>.676703"*, %Scope.676628*)*, %string.676378* (%"Array<Scope>.676703"*, %string.676378*)*, %string.676378* (%"Array<Scope>.676703"*)* }
%"Array<Scope>.676703" = type { %"Array<Scope>_vtable_ty.676710"*, %Scope.676628**, i64, i64 }
%Scope.676628 = type { %Scope_vtable_ty.676629*, %ScopeId.676626*, %"Map<string, VarId>.676630"*, %"Map<string, ClassId>.676631"*, %"Map<string, VarId>.676630"*, %"Map<string, EnumId>.676632"*, %ScopeId.676626*, %"Map<string, Type>.676633"* }
%"Array<ConstDeclaration>_vtable_ty.676711" = type { void (%"Array<ConstDeclaration>.676704"*)*, void (%"Array<ConstDeclaration>.676704"*, i64, i64)*, void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)*, void (%"Array<ConstDeclaration>.676704"*, i64, %ConstDeclaration.676618*)*, void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)*, %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)*, i1 (%"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"*)*, i1 (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)*, i64 (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)*, %string.676378* (%"Array<ConstDeclaration>.676704"*, %string.676378*)*, %string.676378* (%"Array<ConstDeclaration>.676704"*)* }
%"Array<ConstDeclaration>.676704" = type { %"Array<ConstDeclaration>_vtable_ty.676711"*, %ConstDeclaration.676618**, i64, i64 }
%ConstDeclaration.676618 = type { %ConstDeclaration_vtable_ty.676619*, i64, %string.676378*, %ConstId.676602*, i1 }
%Module_vtable_ty.676697 = type {}
%"Array<Module>_vtable_ty.676715" = type { void (%"Array<Module>.676714"*)*, void (%"Array<Module>.676714"*, i64, i64)*, void (%"Array<Module>.676714"*, %Module.676696*)*, void (%"Array<Module>.676714"*, i64, %Module.676696*)*, void (%"Array<Module>.676714"*, %Module.676696*)*, %Module.676696* (%"Array<Module>.676714"*, i64)*, i1 (%"Array<Module>.676714"*, %"Array<Module>.676714"*)*, i1 (%"Array<Module>.676714"*, %Module.676696*)*, i64 (%"Array<Module>.676714"*, %Module.676696*)*, %string.676378* (%"Array<Module>.676714"*, %string.676378*)*, %string.676378* (%"Array<Module>.676714"*)* }
%"Array<Module>.676714" = type { %"Array<Module>_vtable_ty.676715"*, %Module.676696**, i64, i64 }
%Module.676696 = type { %Module_vtable_ty.676697*, i64, %string.676378*, %"Array<Var>.676698"*, %"Array<Const>.676699"*, %"Array<Class>.676700"*, %"Array<Function>.676701"*, %"Array<Enum>.676702"*, %"Array<Scope>.676703"*, %"Array<ConstDeclaration>.676704"*, %"Array<VarDeclaration>.676688"*, %ImportedSymbols.676686* }
%ImportedSymbols.676686 = type { %ImportedSymbols_vtable_ty.676687*, %"Array<VarDeclaration>.676688"*, %"Array<VarId>.676689"*, %"Array<EnumId>.676690"*, %"Array<ClassId>.676691"* }
%Program_vtable_ty.676713 = type {}
%"Bucket<string, ClassDeclarationNode>_vtable_ty.676721" = type { void (%"Bucket<string, ClassDeclarationNode>.676720"*, %string.676378*, %ClassDeclarationNode.676500*)* }
%"Bucket<string, ClassDeclarationNode>.676720" = type { %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"*, %string.676378*, %ClassDeclarationNode.676500*, i1 }
%"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723" = type { void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64, i64)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64, %"Bucket<string, ClassDeclarationNode>.676720"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)*, %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)*, i1 (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Array<Bucket<string, ClassDeclarationNode>>.676722"*)*, i1 (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)*, i64 (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)*, %string.676378* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*)* }
%"Array<Bucket<string, ClassDeclarationNode>>.676722" = type { %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Bucket<string, ClassDeclarationNode>.676720"**, i64, i64 }
%"Map<string, ClassDeclarationNode>_vtable_ty.676719" = type { i64 (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, void (%"Map<string, ClassDeclarationNode>.676718"*)*, void (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*, %ClassDeclarationNode.676500*)*, %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, %"Array<Bucket<string, ClassDeclarationNode>>.676722"* (%"Map<string, ClassDeclarationNode>.676718"*)* }
%"Map<string, ClassDeclarationNode>.676718" = type { %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Bucket<string, ClassDeclarationNode>.676720"**, i64, i64 }
%TypeChecker_vtable_ty.676717 = type { %Module.676696* (%TypeChecker.676716*, i64)*, %Module.676696* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)*, %Function.676656* (%TypeChecker.676716*)*, %FunctionType.676544* (%TypeChecker.676716*)*, %Class.676668* (%TypeChecker.676716*)*, %Class.676668* (%TypeChecker.676716*, %VarId.676596*)*, %Enum.676682* (%TypeChecker.676716*, %VarId.676596*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %Scope.676628* (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*, %string.676378*)*, %VarId.676596* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Scope.676628* (%TypeChecker.676716*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, i1 (%TypeChecker.676716*)*, %Program.676712* (%TypeChecker.676716*, %ModuleAST.676520*, %Compiler.676394*, %string.676378*)*, %Module.676696* (%TypeChecker.676716*, %ModuleAST.676520*, %string.676378*)*, void (%TypeChecker.676716*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*, %"Array<Type>.676546"*)*, %Var.676660* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)*, %Const.676662* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)*, void (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)*, void (%TypeChecker.676716*, %VarDeclarationStatement.676484*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %ClassId.676554*)*, void (%TypeChecker.676716*, %string.676378*, %EnumId.676556*)*, void (%TypeChecker.676716*, %string.676378*, %Type.676538*)*, %FunctionType.676544* (%TypeChecker.676716*, %"Array<ArgNode>.676492"*, %TypeNode.676426*, %"Array<FunctionArg>.676658"*)*, void (%TypeChecker.676716*, %Module.676696*)*, void (%TypeChecker.676716*, %ImportNode.676514*)*, %Module.676696* (%TypeChecker.676716*, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, %EnumNode.676510*)*, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %FunctionDeclarationNode.676490*)*, void (%TypeChecker.676716*, %Enum.676682*, %EnumNode.676510*)*, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %Function.676656*, %FunctionDeclarationNode.676490*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %ArrayExpression.676578* (%TypeChecker.676716*, %Type.676538*, %ArrayExpressionNode.676458*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %VarAccessExpressionNode.676456*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %Expression.676558*, %BinaryExpressionNode.676470*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*, %Expression.676558*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)*, %BinaryExpression.676580* (%TypeChecker.676716*, %Type.676538*, %BinaryExpressionNode.676470*)*, %UnaryExpression.676582* (%TypeChecker.676716*, %Type.676538*, %UnaryExpressionNode.676474*)*, %TypeCastExpression.676586* (%TypeChecker.676716*, %TypeCastExpressionNode.676468*)*, %string.676378* (%TypeChecker.676716*, %ClassId.676554*, %"Array<ExpressionNode>.676454"*, %"Array<Expression>.676574"**)*, %NewExpression.676588* (%TypeChecker.676716*, %NewExpressionNode.676460*)*, %string.676378* (%TypeChecker.676716*, %PropId.676604*)*, %MemberExpression.676606* (%TypeChecker.676716*, %Type.676538*, %MemberExpressionNode.676464*)*, %TernaryExpression.676584* (%TypeChecker.676716*, %Type.676538*, %TernaryExpressionNode.676472*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %ExpressionIndexNode.676462*)*, %IndexExpression.676590* (%TypeChecker.676716*, %Type.676538*, %ExpressionIndexNode.676462*)*, %"Array<FunctionArg>.676658"* (%TypeChecker.676716*, %Expression.676558*)*, %"Array<Expression>.676574"* (%TypeChecker.676716*, %FunctionType.676544*, %"Array<FunctionArg>.676658"*, %"Array<ExpressionNode>.676454"*)*, i64 (%TypeChecker.676716*, %FunctionType.676544*, %"Array<Expression>.676574"*)*, %CallExpression.676592* (%TypeChecker.676716*, %Type.676538*, %CallExpressionNode.676466*)*, %IntrinsicCall.676594* (%TypeChecker.676716*, %IntrinsicCall.676594*, %CallExpressionNode.676466*)*, %IntExpression.676566* (%TypeChecker.676716*, %Type.676538*, %IntExpressionNode.676446*)*, %FloatExpression.676570* (%TypeChecker.676716*, %Type.676538*, %FloatExpressionNode.676448*)*, %IntExpression.676566* (%TypeChecker.676716*, %CharExpressionNode.676450*)*, %StringExpression.676572* (%TypeChecker.676716*, %Type.676538*, %StringExpressionNode.676452*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)*, %IfStatement.676614* (%TypeChecker.676716*, %IfStatementNode.676476*)*, %VarDeclaration.676616* (%TypeChecker.676716*, %VarDeclarationStatement.676484*)*, %ConstDeclaration.676618* (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)*, %ForStatement.676620* (%TypeChecker.676716*, %ForStatementNode.676480*)*, %WhileStatement.676622* (%TypeChecker.676716*, %WhileStatementNode.676478*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %ReturnStatement.676624* (%TypeChecker.676716*, %ReturnStatementNode.676482*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)* }
%TypeChecker.676716 = type { %TypeChecker_vtable_ty.676717*, %Program.676712*, i64, %ClassId.676554*, %VarId.676596*, %PropId.676604*, %ScopeId.676626*, %Compiler.676394*, i1, %"Map<string, ClassDeclarationNode>.676718"* }
%Program.676712 = type { %Program_vtable_ty.676713*, %"Array<Module>.676714"* }
%ArrayExpression.676578 = type { %ArrayExpression_vtable_ty.676579*, i64, i1, i64, %Type.676538*, %"Array<Expression>.676574"* }
%VarAccessExpressionNode.676456 = type { %VarAccessExpressionNode_vtable_ty.676457*, %FloRange.676382*, i64, i64, %IdentifierToken.676420* }
%BinaryExpressionNode.676470 = type { %BinaryExpressionNode_vtable_ty.676471*, %FloRange.676382*, i64, i64, %ExpressionNode.676442*, i64, %ExpressionNode.676442* }
%BinaryExpression.676580 = type { %BinaryExpression_vtable_ty.676581*, i64, i1, i64, %Type.676538*, %Expression.676558*, i64, %Expression.676558* }
%UnaryExpression.676582 = type { %UnaryExpression_vtable_ty.676583*, i64, i1, i64, %Type.676538*, i64, %Expression.676558* }
%UnaryExpressionNode.676474 = type { %UnaryExpressionNode_vtable_ty.676475*, %FloRange.676382*, i64, i64, i64, %ExpressionNode.676442* }
%TypeCastExpression.676586 = type { %TypeCastExpression_vtable_ty.676587*, i64, i1, i64, %Type.676538*, %Expression.676558* }
%TypeCastExpressionNode.676468 = type { %TypeCastExpressionNode_vtable_ty.676469*, %FloRange.676382*, i64, i64, %ExpressionNode.676442*, %TypeNode.676426* }
%NewExpression.676588 = type { %NewExpression_vtable_ty.676589*, i64, i1, i64, %Type.676538*, %"Array<Expression>.676574"*, i1, %Type.676538* }
%MemberExpression.676606 = type { %MemberExpression_vtable_ty.676607*, i64, i1, i64, %Type.676538*, %Expression.676558*, %PropId.676604* }
%TernaryExpression.676584 = type { %TernaryExpression_vtable_ty.676585*, i64, i1, i64, %Type.676538*, %Expression.676558*, %Expression.676558*, %Expression.676558* }
%TernaryExpressionNode.676472 = type { %TernaryExpressionNode_vtable_ty.676473*, %FloRange.676382*, i64, i64, %ExpressionNode.676442*, %ExpressionNode.676442*, %ExpressionNode.676442* }
%IndexExpression.676590 = type { %IndexExpression_vtable_ty.676591*, i64, i1, i64, %Type.676538*, %Expression.676558*, %Expression.676558* }
%CallExpression.676592 = type { %CallExpression_vtable_ty.676593*, i64, i1, i64, %Type.676538*, %Expression.676558*, %"Array<Expression>.676574"* }
%IntrinsicCall.676594 = type { %IntrinsicCall_vtable_ty.676595*, i64, i1, i64, %Type.676538*, i64, %"Array<Expression>.676574"* }
%IntExpression.676566 = type { %IntExpression_vtable_ty.676567*, i64, i1, i64, %Type.676538*, i64 }
%IntExpressionNode.676446 = type { %IntExpressionNode_vtable_ty.676447*, %FloRange.676382*, i64, i64, %IntToken.676408* }
%FloatExpression.676570 = type { %FloatExpression_vtable_ty.676571*, i64, i1, i64, %Type.676538*, double }
%FloatExpressionNode.676448 = type { %FloatExpressionNode_vtable_ty.676449*, %FloRange.676382*, i64, i64, %FloatToken.676410* }
%FloatToken.676410 = type { %FloatToken_vtable_ty.676411*, i64, %FloRange.676382*, double }
%CharExpressionNode.676450 = type { %CharExpressionNode_vtable_ty.676451*, %FloRange.676382*, i64, i64, %CharToken.676412* }
%StringExpression.676572 = type { %StringExpression_vtable_ty.676573*, i64, i1, i64, %Type.676538*, %string.676378*, %"Array<Expression>.676574"* }
%IfStatement.676614 = type { %IfStatement_vtable_ty.676615*, i64, %Expression.676558*, %Block.676610*, %Block.676610* }
%ForStatement.676620 = type { %ForStatement_vtable_ty.676621*, i64, %Statement.676550*, %Expression.676558*, %Expression.676558*, %Block.676610* }
%WhileStatement.676622 = type { %WhileStatement_vtable_ty.676623*, i64, %Expression.676558*, %Block.676610* }
%ReturnStatement.676624 = type { %ReturnStatement_vtable_ty.676625*, i64, %Expression.676558* }
%"Array<LLVMMetadataRef>_vtable_ty.676755" = type { void (%"Array<LLVMMetadataRef>.676754"*)*, void (%"Array<LLVMMetadataRef>.676754"*, i64, i64)*, void (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)*, void (%"Array<LLVMMetadataRef>.676754"*, i64, %LLVMMetadataRef.676730*)*, void (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)*, %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)*, i1 (%"Array<LLVMMetadataRef>.676754"*, %"Array<LLVMMetadataRef>.676754"*)*, i1 (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)*, i64 (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)*, %string.676378* (%"Array<LLVMMetadataRef>.676754"*, %string.676378*)*, %string.676378* (%"Array<LLVMMetadataRef>.676754"*)* }
%"Array<LLVMMetadataRef>.676754" = type { %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %LLVMMetadataRef.676730**, i64, i64 }
%LLVMMetadataRef.676730 = type opaque
%DebugInfo_vtable_ty.676753 = type { void (%DebugInfo.676752*)* }
%DebugInfo.676752 = type { %DebugInfo_vtable_ty.676753*, %LLVMDIBuilderRef.676734*, %LLVMMetadataRef.676730*, %"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730* }
%LLVMDIBuilderRef.676734 = type opaque
%GeneratedModule_vtable_ty.676757 = type { void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*, i64)*, void (%GeneratedModule.676756*)*, %LLVMTargetMachineRef.676746* (%GeneratedModule.676756*, %string.676378*)*, void (%GeneratedModule.676756*, %string.676378*, %string.676378*)*, void (%GeneratedModule.676756*)*, %LLVMModuleRef.676726* (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)* }
%GeneratedModule.676756 = type { %GeneratedModule_vtable_ty.676757*, %LLVMModuleRef.676726*, i8* }
%LLVMModuleRef.676726 = type opaque
%LLVMTargetMachineRef.676746 = type opaque
%IntrinsicResult_vtable_ty.676759 = type {}
%"Bucket<string, int>_vtable_ty.676766" = type { void (%"Bucket<string, int>.676765"*, %string.676378*, i64)* }
%"Bucket<string, int>.676765" = type { %"Bucket<string, int>_vtable_ty.676766"*, %string.676378*, i64, i1 }
%"Array<Bucket<string, int>>_vtable_ty.676768" = type { void (%"Array<Bucket<string, int>>.676767"*)*, void (%"Array<Bucket<string, int>>.676767"*, i64, i64)*, void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)*, void (%"Array<Bucket<string, int>>.676767"*, i64, %"Bucket<string, int>.676765"*)*, void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)*, %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)*, i1 (%"Array<Bucket<string, int>>.676767"*, %"Array<Bucket<string, int>>.676767"*)*, i1 (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)*, i64 (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)*, %string.676378* (%"Array<Bucket<string, int>>.676767"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, int>>.676767"*)* }
%"Array<Bucket<string, int>>.676767" = type { %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Bucket<string, int>.676765"**, i64, i64 }
%"Map<string, int>_vtable_ty.676764" = type { i64 (%"Map<string, int>.676762"*, %string.676378*)*, void (%"Map<string, int>.676762"*)*, void (%"Map<string, int>.676762"*, %string.676378*, i64)*, i64 (%"Map<string, int>.676762"*, %string.676378*)*, %"Array<Bucket<string, int>>.676767"* (%"Map<string, int>.676762"*)* }
%"Map<string, int>.676762" = type { %"Map<string, int>_vtable_ty.676764"*, %"Bucket<string, int>.676765"**, i64, i64 }
%"Bucket<string, LLVMValueRef>_vtable_ty.676771" = type { void (%"Bucket<string, LLVMValueRef>.676770"*, %string.676378*, %LLVMValueRef.676728*)* }
%"Bucket<string, LLVMValueRef>.676770" = type { %"Bucket<string, LLVMValueRef>_vtable_ty.676771"*, %string.676378*, %LLVMValueRef.676728*, i1 }
%LLVMValueRef.676728 = type opaque
%"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773" = type { void (%"Array<Bucket<string, LLVMValueRef>>.676772"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64, i64)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64, %"Bucket<string, LLVMValueRef>.676770"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)*, %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)*, i1 (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Array<Bucket<string, LLVMValueRef>>.676772"*)*, i1 (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)*, i64 (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)*, %string.676378* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, LLVMValueRef>>.676772"*)* }
%"Array<Bucket<string, LLVMValueRef>>.676772" = type { %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Bucket<string, LLVMValueRef>.676770"**, i64, i64 }
%"Map<string, LLVMValueRef>_vtable_ty.676769" = type { i64 (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, void (%"Map<string, LLVMValueRef>.676763"*)*, void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %"Array<Bucket<string, LLVMValueRef>>.676772"* (%"Map<string, LLVMValueRef>.676763"*)* }
%"Map<string, LLVMValueRef>.676763" = type { %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Bucket<string, LLVMValueRef>.676770"**, i64, i64 }
%CGClassType_vtable_ty.676761 = type {}
%CGEnumType_vtable_ty.676775 = type {}
%"Array<LLVMTypeRef>_vtable_ty.676777" = type { void (%"Array<LLVMTypeRef>.676776"*)*, void (%"Array<LLVMTypeRef>.676776"*, i64, i64)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, i64, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)*, i1 (%"Array<LLVMTypeRef>.676776"*, %"Array<LLVMTypeRef>.676776"*)*, i1 (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, i64 (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, %string.676378* (%"Array<LLVMTypeRef>.676776"*, %string.676378*)*, %string.676378* (%"Array<LLVMTypeRef>.676776"*)* }
%"Array<LLVMTypeRef>.676776" = type { %"Array<LLVMTypeRef>_vtable_ty.676777"*, %LLVMTypeRef.676727**, i64, i64 }
%LLVMTypeRef.676727 = type opaque
%"Array<LLVMValueRef>_vtable_ty.676779" = type { void (%"Array<LLVMValueRef>.676778"*)*, void (%"Array<LLVMValueRef>.676778"*, i64, i64)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, i1 (%"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"*)*, i1 (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, i64 (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, %string.676378* (%"Array<LLVMValueRef>.676778"*, %string.676378*)*, %string.676378* (%"Array<LLVMValueRef>.676778"*)* }
%"Array<LLVMValueRef>.676778" = type { %"Array<LLVMValueRef>_vtable_ty.676779"*, %LLVMValueRef.676728**, i64, i64 }
%"Array<LLVMModuleRef>_vtable_ty.676786" = type { void (%"Array<LLVMModuleRef>.676782"*)*, void (%"Array<LLVMModuleRef>.676782"*, i64, i64)*, void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)*, void (%"Array<LLVMModuleRef>.676782"*, i64, %LLVMModuleRef.676726*)*, void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, i1 (%"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"*)*, i1 (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)*, i64 (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)*, %string.676378* (%"Array<LLVMModuleRef>.676782"*, %string.676378*)*, %string.676378* (%"Array<LLVMModuleRef>.676782"*)* }
%"Array<LLVMModuleRef>.676782" = type { %"Array<LLVMModuleRef>_vtable_ty.676786"*, %LLVMModuleRef.676726**, i64, i64 }
%"Bucket<string, IntrinsicResult>_vtable_ty.676789" = type { void (%"Bucket<string, IntrinsicResult>.676788"*, %string.676378*, %IntrinsicResult.676758*)* }
%"Bucket<string, IntrinsicResult>.676788" = type { %"Bucket<string, IntrinsicResult>_vtable_ty.676789"*, %string.676378*, %IntrinsicResult.676758*, i1 }
%IntrinsicResult.676758 = type { %IntrinsicResult_vtable_ty.676759*, %LLVMValueRef.676728*, %LLVMTypeRef.676727* }
%"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791" = type { void (%"Array<Bucket<string, IntrinsicResult>>.676790"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64, i64)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64, %"Bucket<string, IntrinsicResult>.676788"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)*, %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)*, i1 (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Array<Bucket<string, IntrinsicResult>>.676790"*)*, i1 (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)*, i64 (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)*, %string.676378* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, IntrinsicResult>>.676790"*)* }
%"Array<Bucket<string, IntrinsicResult>>.676790" = type { %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Bucket<string, IntrinsicResult>.676788"**, i64, i64 }
%"Map<string, IntrinsicResult>_vtable_ty.676787" = type { i64 (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)*, void (%"Map<string, IntrinsicResult>.676783"*)*, void (%"Map<string, IntrinsicResult>.676783"*, %string.676378*, %IntrinsicResult.676758*)*, %IntrinsicResult.676758* (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)*, %"Array<Bucket<string, IntrinsicResult>>.676790"* (%"Map<string, IntrinsicResult>.676783"*)* }
%"Map<string, IntrinsicResult>.676783" = type { %"Map<string, IntrinsicResult>_vtable_ty.676787"*, %"Bucket<string, IntrinsicResult>.676788"**, i64, i64 }
%"Bucket<string, CGClassType>_vtable_ty.676794" = type { void (%"Bucket<string, CGClassType>.676793"*, %string.676378*, %CGClassType.676760*)* }
%"Bucket<string, CGClassType>.676793" = type { %"Bucket<string, CGClassType>_vtable_ty.676794"*, %string.676378*, %CGClassType.676760*, i1 }
%CGClassType.676760 = type { %CGClassType_vtable_ty.676761*, %LLVMTypeRef.676727*, %"Map<string, int>.676762"*, %"Map<string, int>.676762"*, %"Map<string, LLVMValueRef>.676763"*, %LLVMValueRef.676728*, %LLVMTypeRef.676727*, %LLVMValueRef.676728* }
%"Array<Bucket<string, CGClassType>>_vtable_ty.676796" = type { void (%"Array<Bucket<string, CGClassType>>.676795"*)*, void (%"Array<Bucket<string, CGClassType>>.676795"*, i64, i64)*, void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)*, void (%"Array<Bucket<string, CGClassType>>.676795"*, i64, %"Bucket<string, CGClassType>.676793"*)*, void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)*, %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)*, i1 (%"Array<Bucket<string, CGClassType>>.676795"*, %"Array<Bucket<string, CGClassType>>.676795"*)*, i1 (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)*, i64 (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)*, %string.676378* (%"Array<Bucket<string, CGClassType>>.676795"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, CGClassType>>.676795"*)* }
%"Array<Bucket<string, CGClassType>>.676795" = type { %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Bucket<string, CGClassType>.676793"**, i64, i64 }
%"Map<string, CGClassType>_vtable_ty.676792" = type { i64 (%"Map<string, CGClassType>.676784"*, %string.676378*)*, void (%"Map<string, CGClassType>.676784"*)*, void (%"Map<string, CGClassType>.676784"*, %string.676378*, %CGClassType.676760*)*, %CGClassType.676760* (%"Map<string, CGClassType>.676784"*, %string.676378*)*, %"Array<Bucket<string, CGClassType>>.676795"* (%"Map<string, CGClassType>.676784"*)* }
%"Map<string, CGClassType>.676784" = type { %"Map<string, CGClassType>_vtable_ty.676792"*, %"Bucket<string, CGClassType>.676793"**, i64, i64 }
%"Bucket<string, CGEnumType>_vtable_ty.676799" = type { void (%"Bucket<string, CGEnumType>.676798"*, %string.676378*, %CGEnumType.676774*)* }
%"Bucket<string, CGEnumType>.676798" = type { %"Bucket<string, CGEnumType>_vtable_ty.676799"*, %string.676378*, %CGEnumType.676774*, i1 }
%CGEnumType.676774 = type { %CGEnumType_vtable_ty.676775*, %LLVMTypeRef.676727*, %"Map<string, LLVMValueRef>.676763"* }
%"Array<Bucket<string, CGEnumType>>_vtable_ty.676801" = type { void (%"Array<Bucket<string, CGEnumType>>.676800"*)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*, i64, i64)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*, i64, %"Bucket<string, CGEnumType>.676798"*)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)*, %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)*, i1 (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Array<Bucket<string, CGEnumType>>.676800"*)*, i1 (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)*, i64 (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)*, %string.676378* (%"Array<Bucket<string, CGEnumType>>.676800"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, CGEnumType>>.676800"*)* }
%"Array<Bucket<string, CGEnumType>>.676800" = type { %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Bucket<string, CGEnumType>.676798"**, i64, i64 }
%"Map<string, CGEnumType>_vtable_ty.676797" = type { i64 (%"Map<string, CGEnumType>.676785"*, %string.676378*)*, void (%"Map<string, CGEnumType>.676785"*)*, void (%"Map<string, CGEnumType>.676785"*, %string.676378*, %CGEnumType.676774*)*, %CGEnumType.676774* (%"Map<string, CGEnumType>.676785"*, %string.676378*)*, %"Array<Bucket<string, CGEnumType>>.676800"* (%"Map<string, CGEnumType>.676785"*)* }
%"Map<string, CGEnumType>.676785" = type { %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Bucket<string, CGEnumType>.676798"**, i64, i64 }
%CodeGen_vtable_ty.676781 = type { %GeneratedModule.676756* (%CodeGen.676780*, %Program.676712*)*, void (%CodeGen.676780*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGEnumType.676774* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %VarId.676596*)*, %CGEnumType.676774* (%CodeGen.676780*, %VarId.676596*)*, void (%CodeGen.676780*, %TypeId.676552*, %CGClassType.676760*)*, void (%CodeGen.676780*, %TypeId.676552*, %CGEnumType.676774*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMModuleRef.676726* (%CodeGen.676780*, %Module.676696*)*, void (%CodeGen.676780*, %ImportedSymbols.676686*)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ReturnStatement.676624*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %IntExpression.676566*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %FloatExpression.676570*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %BooleanExpression.676568*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %StringExpression.676572*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %ArrayExpression.676578*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ArrayExpression.676578*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Type.676538*, %LLVMValueRef.676728*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TypeCastExpression.676586*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %UnaryExpression.676582*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %NullExpression.676576*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TernaryExpression.676584*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %CallExpression.676592*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %NewExpression.676588*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IntrinsicCall.676594*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IfStatement.676614*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ForStatement.676620*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %WhileStatement.676622*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ObjectType.676562*, %"Array<LLVMValueRef>.676778"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarDeclaration.676616*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ConstDeclaration.676618*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Statement.676550*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %Function.676656*)*, void (%CodeGen.676780*, %Class.676668*)*, void (%CodeGen.676780*, %Function.676656*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)*, void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, i1)*, void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, %"Array<LLVMTypeRef>.676776"*, i1)*, void (%CodeGen.676780*, %Class.676668*)*, void (%CodeGen.676780*, %Class.676668*, i1)*, void (%CodeGen.676780*, %Enum.676682*)* }
%CodeGen.676780 = type { %CodeGen_vtable_ty.676781*, %"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*, %"Map<string, LLVMValueRef>.676763"*, %"Map<string, IntrinsicResult>.676783"*, %"Map<string, LLVMValueRef>.676763"*, %"Map<string, CGClassType>.676784"*, %"Map<string, CGEnumType>.676785"*, %LLVMValueRef.676728*, %LLVMBasicBlockRef.676729*, %LLVMBasicBlockRef.676729*, %Program.676712*, i1, %LLVMContextRef.676725*, %DebugInfo.676752* }
%LLVMBasicBlockRef.676729 = type opaque
%LLVMContextRef.676725 = type opaque
%LLVMBuilderRef.676733 = type opaque
%BooleanExpression.676568 = type { %BooleanExpression_vtable_ty.676569*, i64, i1, i64, %Type.676538*, i64 }
%VarAccessExpression.676608 = type { %VarAccessExpression_vtable_ty.676609*, i64, i1, i64, %Type.676538*, %VarId.676596* }
%NullExpression.676576 = type { %NullExpression_vtable_ty.676577*, i64, i1, i64, %Type.676538* }
%ObjectType.676562 = type { %ObjectType_vtable_ty.676563*, i64, %ClassId.676554* }
%"Arraymain.flo_vtable_ty.676803" = type { void (%"Arraymain.flo.676802"*)*, void (%"Arraymain.flo.676802"*, i64, i64)*, void (%"Arraymain.flo.676802"*, %string.676378*)*, void (%"Arraymain.flo.676802"*, i64, %string.676378*)*, void (%"Arraymain.flo.676802"*, %string.676378*)*, %string.676378* (%"Arraymain.flo.676802"*, i64)*, i1 (%"Arraymain.flo.676802"*, %"Arraymain.flo.676802"*)*, i1 (%"Arraymain.flo.676802"*, %string.676378*)*, i64 (%"Arraymain.flo.676802"*, %string.676378*)*, %string.676378* (%"Arraymain.flo.676802"*, %string.676378*)*, %string.676378* (%"Arraymain.flo.676802"*)* }
%"Arraymain.flo.676802" = type { %"Arraymain.flo_vtable_ty.676803"*, %string.676378**, i64, i64 }
%Node.676424 = type { %Node_vtable_ty.676425*, %FloRange.676382* }
%PointerTypeNode.676434 = type { %PointerTypeNode_vtable_ty.676435*, %FloRange.676382*, i64, %TypeNode.676426* }
%ArrayTypeNode.676444 = type { %ArrayTypeNode_vtable_ty.676445*, %FloRange.676382*, i64, %TypeNode.676426*, %ExpressionNode.676442* }
%BooleanType.676540 = type { %BooleanType_vtable_ty.676541*, i64 }
%PointerType.676542 = type { %PointerType_vtable_ty.676543*, i64, %Type.676538* }
%ArrayType.676560 = type { %ArrayType_vtable_ty.676561*, i64, %Type.676538*, i64 }
%EnumType.676564 = type { %EnumType_vtable_ty.676565*, i64, %EnumId.676556* }
%ClassVarId.676598 = type { %ClassVarId_vtable_ty.676599*, i64, i64, i64 }
%EnumVarId.676600 = type { %EnumVarId_vtable_ty.676601*, i64, i64, i64 }
%LLVMPassManagerRef.676736 = type opaque
%LLVMExecutionEngineRef.676749 = type opaque
%LLVMPassManagerBuilderRef.676747 = type opaque
%LLVMTargetRef.676745 = type opaque

@string_vtable_data = global %string_vtable_ty.676379 { %string.676378* (%string.676378*, %string.676378*)* @string___add__, %string.676378* (%string.676378*, %string.676378*)* @string___adda__, void (%string.676378*, i8)* @string_add_byte, %string.676378* (%string.676378*, i64)* @string___getitem__, i1 (%string.676378*, %string.676378*)* @string___eq__, i64 (%string.676378*, %string.676378*)* @string_find, i1 (%string.676378*, %string.676378*)* @string___in__, %string.676378* (%string.676378*, i64, i64)* @string_substring, i8 (%string.676378*, i64)* @string_get_byte, i8* (%string.676378*)* @string_get_bytes, %string.676378* (%string.676378*, %string.676378*, %string.676378*)* @string_replace, i8* (%string.676378*)* @string_to_cstring, i1 (%string.676378*, %string.676378*)* @string_ends_with, i1 (%string.676378*, %string.676378*)* @string_starts_with }
@Range_vtable_data = global %Range_vtable_ty.676381 { i1 (%Range.676380*, i64)* @Range___in__ }
@str.0 = private unnamed_addr constant [2 x i8] c"\0A\00"
@FloRange_vtable_data = global %FloRange_vtable_ty.676383 zeroinitializer
@str.1 = private unnamed_addr constant [4 x i8] c"red\00"
@str.2 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00"
@str.3 = private unnamed_addr constant [5 x i8] c"\1B[0m\00"
@FloError_vtable_data = global %FloError_vtable_ty.676385 zeroinitializer
@str.4 = private unnamed_addr constant [2 x i8] c" \00"
@str.5 = private unnamed_addr constant [2 x i8] c"^\00"
@str.6 = private unnamed_addr constant [1 x i8] zeroinitializer
@str.7 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00"
@str.8 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00"
@str.9 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00"
@str.10 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00"
@str.11 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00"
@str.12 = private unnamed_addr constant [10 x i8] c"[Error]: \00"
@str.13 = private unnamed_addr constant [19 x i8] c"File \22%s\22, line %d\00"
@File_vtable_data = global %File_vtable_ty.676387 { %string.676378* (%File.676386*)* @File_read_all, void (%File.676386*)* @File_close }
@str.14 = private unnamed_addr constant [2 x i8] c"r\00"
@Path_vtable_data = local_unnamed_addr global %Path_vtable_ty.676389 zeroinitializer
@str.15 = private unnamed_addr constant [6 x i8] c"%s/%s\00"
@FileId_vtable_data = global %FileId_vtable_ty.676391 zeroinitializer
@FloFile_vtable_data = global %FloFile_vtable_ty.676393 zeroinitializer
@"Array<FloFile>_vtable_data" = global %"Array<FloFile>_vtable_ty.676399" { void (%"Array<FloFile>.676396"*)* @"Array<FloFile>_resize", void (%"Array<FloFile>.676396"*, i64, i64)* @"Array<FloFile>_swap", void (%"Array<FloFile>.676396"*, %FloFile.676392*)* @"Array<FloFile>___sl__", void (%"Array<FloFile>.676396"*, i64, %FloFile.676392*)* @"Array<FloFile>___setitem__", void (%"Array<FloFile>.676396"*, %FloFile.676392*)* @"Array<FloFile>_append", %FloFile.676392* (%"Array<FloFile>.676396"*, i64)* @"Array<FloFile>___getitem__", i1 (%"Array<FloFile>.676396"*, %"Array<FloFile>.676396"*)* @"Array<FloFile>___eq__", i1 (%"Array<FloFile>.676396"*, %FloFile.676392*)* @"Array<FloFile>___in__", i64 (%"Array<FloFile>.676396"*, %FloFile.676392*)* @"Array<FloFile>_find", %string.676378* (%"Array<FloFile>.676396"*, %string.676378*)* @"Array<FloFile>_join", %string.676378* (%"Array<FloFile>.676396"*)* @"Array<FloFile>___as_string__" }
@str.16 = private unnamed_addr constant [9 x i8] c"@FloFile\00"
@str.17 = private unnamed_addr constant [3 x i8] c", \00"
@str.18 = private unnamed_addr constant [5 x i8] c"[%s]\00"
@"Array<FloError>_vtable_data" = global %"Array<FloError>_vtable_ty.676400" { void (%"Array<FloError>.676397"*)* @"Array<FloError>_resize", void (%"Array<FloError>.676397"*, i64, i64)* @"Array<FloError>_swap", void (%"Array<FloError>.676397"*, %FloError.676384*)* @"Array<FloError>___sl__", void (%"Array<FloError>.676397"*, i64, %FloError.676384*)* @"Array<FloError>___setitem__", void (%"Array<FloError>.676397"*, %FloError.676384*)* @"Array<FloError>_append", %FloError.676384* (%"Array<FloError>.676397"*, i64)* @"Array<FloError>___getitem__", i1 (%"Array<FloError>.676397"*, %"Array<FloError>.676397"*)* @"Array<FloError>___eq__", i1 (%"Array<FloError>.676397"*, %FloError.676384*)* @"Array<FloError>___in__", i64 (%"Array<FloError>.676397"*, %FloError.676384*)* @"Array<FloError>_find", %string.676378* (%"Array<FloError>.676397"*, %string.676378*)* @"Array<FloError>_join", %string.676378* (%"Array<FloError>.676397"*)* @"Array<FloError>___as_string__" }
@str.19 = private unnamed_addr constant [10 x i8] c"@FloError\00"
@"Bucket<string, FileId>_vtable_data" = global %"Bucket<string, FileId>_vtable_ty.676403" { void (%"Bucket<string, FileId>.676402"*, %string.676378*, %FileId.676390*)* @"Bucket<string, FileId>_set" }
@"Array<Bucket<string, FileId>>_vtable_data" = global %"Array<Bucket<string, FileId>>_vtable_ty.676405" { void (%"Array<Bucket<string, FileId>>.676404"*)* @"Array<Bucket<string, FileId>>_resize", void (%"Array<Bucket<string, FileId>>.676404"*, i64, i64)* @"Array<Bucket<string, FileId>>_swap", void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)* @"Array<Bucket<string, FileId>>___sl__", void (%"Array<Bucket<string, FileId>>.676404"*, i64, %"Bucket<string, FileId>.676402"*)* @"Array<Bucket<string, FileId>>___setitem__", void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)* @"Array<Bucket<string, FileId>>_append", %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)* @"Array<Bucket<string, FileId>>___getitem__", i1 (%"Array<Bucket<string, FileId>>.676404"*, %"Array<Bucket<string, FileId>>.676404"*)* @"Array<Bucket<string, FileId>>___eq__", i1 (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)* @"Array<Bucket<string, FileId>>___in__", i64 (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)* @"Array<Bucket<string, FileId>>_find", %string.676378* (%"Array<Bucket<string, FileId>>.676404"*, %string.676378*)* @"Array<Bucket<string, FileId>>_join", %string.676378* (%"Array<Bucket<string, FileId>>.676404"*)* @"Array<Bucket<string, FileId>>___as_string__" }
@str.20 = private unnamed_addr constant [24 x i8] c"@Bucket<string, FileId>\00"
@"Map<string, FileId>_vtable_data" = global %"Map<string, FileId>_vtable_ty.676401" { i64 (%"Map<string, FileId>.676398"*, %string.676378*)* @"Map<string, FileId>_hash_fnc", void (%"Map<string, FileId>.676398"*)* @"Map<string, FileId>_resize", void (%"Map<string, FileId>.676398"*, %string.676378*, %FileId.676390*)* @"Map<string, FileId>_set", %FileId.676390* (%"Map<string, FileId>.676398"*, %string.676378*)* @"Map<string, FileId>_get", %"Array<Bucket<string, FileId>>.676404"* (%"Map<string, FileId>.676398"*)* @"Map<string, FileId>_get_buckets" }
@Compiler_vtable_data = global %Compiler_vtable_ty.676395 { %string.676378* (%Compiler.676394*, %string.676378*)* @Compiler_find_module_path, %FileId.676390* (%Compiler.676394*, %string.676378*)* @Compiler_register_file, i1 (%Compiler.676394*, %FileId.676390*)* @Compiler_set_current_file, i1 (%Compiler.676394*)* @Compiler_print_errors, %FileId.676390* (%Compiler.676394*)* @Compiler_add_builtins }
@str.21 = private unnamed_addr constant [9 x i8] c"./flolib\00"
@str.22 = private unnamed_addr constant [13 x i8] c"builtins.flo\00"
@str.23 = private unnamed_addr constant [5 x i8] c"@flo\00"
@str.24 = private unnamed_addr constant [9 x i8] c"packages\00"
@str.25 = private unnamed_addr constant [5 x i8] c".flo\00"
@str.26 = private unnamed_addr constant [4 x i8] c"and\00"
@str.27 = private unnamed_addr constant [3 x i8] c"or\00"
@str.28 = private unnamed_addr constant [4 x i8] c"xor\00"
@str.29 = private unnamed_addr constant [6 x i8] c"const\00"
@str.30 = private unnamed_addr constant [4 x i8] c"let\00"
@str.31 = private unnamed_addr constant [3 x i8] c"if\00"
@str.32 = private unnamed_addr constant [5 x i8] c"else\00"
@str.33 = private unnamed_addr constant [5 x i8] c"bool\00"
@str.34 = private unnamed_addr constant [3 x i8] c"i4\00"
@str.35 = private unnamed_addr constant [3 x i8] c"i8\00"
@str.36 = private unnamed_addr constant [4 x i8] c"i16\00"
@str.37 = private unnamed_addr constant [4 x i8] c"i32\00"
@str.38 = private unnamed_addr constant [4 x i8] c"i64\00"
@str.39 = private unnamed_addr constant [5 x i8] c"i128\00"
@str.40 = private unnamed_addr constant [4 x i8] c"int\00"
@str.41 = private unnamed_addr constant [4 x i8] c"f16\00"
@str.42 = private unnamed_addr constant [4 x i8] c"f32\00"
@str.43 = private unnamed_addr constant [4 x i8] c"f64\00"
@str.44 = private unnamed_addr constant [6 x i8] c"float\00"
@str.45 = private unnamed_addr constant [5 x i8] c"void\00"
@str.46 = private unnamed_addr constant [4 x i8] c"for\00"
@str.47 = private unnamed_addr constant [6 x i8] c"while\00"
@str.48 = private unnamed_addr constant [4 x i8] c"fnc\00"
@str.49 = private unnamed_addr constant [6 x i8] c"break\00"
@str.50 = private unnamed_addr constant [9 x i8] c"continue\00"
@str.51 = private unnamed_addr constant [7 x i8] c"return\00"
@str.52 = private unnamed_addr constant [7 x i8] c"import\00"
@str.53 = private unnamed_addr constant [8 x i8] c"private\00"
@str.54 = private unnamed_addr constant [7 x i8] c"public\00"
@str.55 = private unnamed_addr constant [10 x i8] c"protected\00"
@str.56 = private unnamed_addr constant [3 x i8] c"in\00"
@str.57 = private unnamed_addr constant [6 x i8] c"class\00"
@str.58 = private unnamed_addr constant [5 x i8] c"enum\00"
@str.59 = private unnamed_addr constant [4 x i8] c"new\00"
@str.60 = private unnamed_addr constant [3 x i8] c"as\00"
@str.61 = private unnamed_addr constant [4 x i8] c"033\00"
@str.62 = private unnamed_addr constant [4 x i8] c"x1b\00"
@str.63 = private unnamed_addr constant [2 x i8] c"\1B\00"
@str.64 = private unnamed_addr constant [6 x i8] c"u001b\00"
@Token_vtable_data = global %Token_vtable_ty.676407 zeroinitializer
@IntToken_vtable_data = global %IntToken_vtable_ty.676409 zeroinitializer
@FloatToken_vtable_data = global %FloatToken_vtable_ty.676411 zeroinitializer
@CharToken_vtable_data = global %CharToken_vtable_ty.676413 zeroinitializer
@"Array<Token>_vtable_data" = global %"Array<Token>_vtable_ty.676418" { void (%"Array<Token>.676417"*)* @"Array<Token>_resize", void (%"Array<Token>.676417"*, i64, i64)* @"Array<Token>_swap", void (%"Array<Token>.676417"*, %Token.676406*)* @"Array<Token>___sl__", void (%"Array<Token>.676417"*, i64, %Token.676406*)* @"Array<Token>___setitem__", void (%"Array<Token>.676417"*, %Token.676406*)* @"Array<Token>_append", %Token.676406* (%"Array<Token>.676417"*, i64)* @"Array<Token>___getitem__", i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)* @"Array<Token>___eq__", i1 (%"Array<Token>.676417"*, %Token.676406*)* @"Array<Token>___in__", i64 (%"Array<Token>.676417"*, %Token.676406*)* @"Array<Token>_find", %string.676378* (%"Array<Token>.676417"*, %string.676378*)* @"Array<Token>_join", %string.676378* (%"Array<Token>.676417"*)* @"Array<Token>___as_string__" }
@str.65 = private unnamed_addr constant [7 x i8] c"@Token\00"
@"Array<Array<Token>>_vtable_data" = global %"Array<Array<Token>>_vtable_ty.676419" { void (%"Array<Array<Token>>.676416"*)* @"Array<Array<Token>>_resize", void (%"Array<Array<Token>>.676416"*, i64, i64)* @"Array<Array<Token>>_swap", void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)* @"Array<Array<Token>>___sl__", void (%"Array<Array<Token>>.676416"*, i64, %"Array<Token>.676417"*)* @"Array<Array<Token>>___setitem__", void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)* @"Array<Array<Token>>_append", %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)* @"Array<Array<Token>>___getitem__", i1 (%"Array<Array<Token>>.676416"*, %"Array<Array<Token>>.676416"*)* @"Array<Array<Token>>___eq__", i1 (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)* @"Array<Array<Token>>___in__", i64 (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)* @"Array<Array<Token>>_find", %string.676378* (%"Array<Array<Token>>.676416"*, %string.676378*)* @"Array<Array<Token>>_join", %string.676378* (%"Array<Array<Token>>.676416"*)* @"Array<Array<Token>>___as_string__" }
@StrToken_vtable_data = global %StrToken_vtable_ty.676415 zeroinitializer
@IdentifierToken_vtable_data = global %IdentifierToken_vtable_ty.676421 zeroinitializer
@Lexer_vtable_data = global %Lexer_vtable_ty.676423 { i1 (%Lexer.676422*)* @Lexer_eof, i8 (%Lexer.676422*, i64)* @Lexer_peek, void (%Lexer.676422*)* @Lexer_advance, %FloRange.676382* (%Lexer.676422*, i64)* @Lexer_get_range, %Token.676406* (%Lexer.676422*)* @Lexer_plus_token, i1 (%Lexer.676422*)* @Lexer_skip_comment, %Token.676406* (%Lexer.676422*)* @Lexer_minus_token, %Token.676406* (%Lexer.676422*)* @Lexer_mult_token, %Token.676406* (%Lexer.676422*)* @Lexer_mod_token, %Token.676406* (%Lexer.676422*)* @Lexer_pow_token, %Token.676406* (%Lexer.676422*)* @Lexer_div_token, %Token.676406* (%Lexer.676422*)* @Lexer_eq_token, %Token.676406* (%Lexer.676422*)* @Lexer_neq_token, %Token.676406* (%Lexer.676422*)* @Lexer_gt_token, %Token.676406* (%Lexer.676422*)* @Lexer_lt_token, %Token.676406* (%Lexer.676422*)* @Lexer_dot_token, %IntToken.676408* (%Lexer.676422*, i64)* @Lexer_base_int_token, %Token.676406* (%Lexer.676422*)* @Lexer_numeric_token, %Token.676406* (%Lexer.676422*)* @Lexer_identifier_token, %StrToken.676414* (%Lexer.676422*)* @Lexer_string_token, %CharToken.676412* (%Lexer.676422*)* @Lexer_char_token, %Token.676406* (%Lexer.676422*)* @Lexer_lex_token, %"Array<Token>.676417"* (%Lexer.676422*, %string.676378*, %"Array<FloError>.676397"*)* @Lexer_tokenize }
@str.66 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00"
@str.67 = private unnamed_addr constant [4 x i8] c"COL\00"
@str.68 = private unnamed_addr constant [8 x i8] c"SEMICOL\00"
@str.69 = private unnamed_addr constant [6 x i8] c"COMMA\00"
@str.70 = private unnamed_addr constant [5 x i8] c"PLUS\00"
@str.71 = private unnamed_addr constant [10 x i8] c"PLUS_PLUS\00"
@str.72 = private unnamed_addr constant [6 x i8] c"MINUS\00"
@str.73 = private unnamed_addr constant [12 x i8] c"MINUS_MINUS\00"
@str.74 = private unnamed_addr constant [5 x i8] c"MULT\00"
@str.75 = private unnamed_addr constant [4 x i8] c"DIV\00"
@str.76 = private unnamed_addr constant [5 x i8] c"LPAR\00"
@str.77 = private unnamed_addr constant [5 x i8] c"RPAR\00"
@str.78 = private unnamed_addr constant [4 x i8] c"MOD\00"
@str.79 = private unnamed_addr constant [7 x i8] c"LBRACE\00"
@str.80 = private unnamed_addr constant [7 x i8] c"RBRACE\00"
@str.81 = private unnamed_addr constant [9 x i8] c"LBRACKET\00"
@str.82 = private unnamed_addr constant [9 x i8] c"RBRACKET\00"
@str.83 = private unnamed_addr constant [4 x i8] c"INT\00"
@str.84 = private unnamed_addr constant [6 x i8] c"FLOAT\00"
@str.85 = private unnamed_addr constant [3 x i8] c"LN\00"
@str.86 = private unnamed_addr constant [4 x i8] c"STR\00"
@str.87 = private unnamed_addr constant [5 x i8] c"CHAR\00"
@str.88 = private unnamed_addr constant [4 x i8] c"POW\00"
@str.89 = private unnamed_addr constant [5 x i8] c"QUES\00"
@str.90 = private unnamed_addr constant [4 x i8] c"AMP\00"
@str.91 = private unnamed_addr constant [3 x i8] c"EQ\00"
@str.92 = private unnamed_addr constant [4 x i8] c"EEQ\00"
@str.93 = private unnamed_addr constant [4 x i8] c"NEQ\00"
@str.94 = private unnamed_addr constant [3 x i8] c"GT\00"
@str.95 = private unnamed_addr constant [3 x i8] c"LT\00"
@str.96 = private unnamed_addr constant [4 x i8] c"LTE\00"
@str.97 = private unnamed_addr constant [4 x i8] c"GTE\00"
@str.98 = private unnamed_addr constant [6 x i8] c"ARROW\00"
@str.99 = private unnamed_addr constant [4 x i8] c"EOF\00"
@str.100 = private unnamed_addr constant [4 x i8] c"NOT\00"
@str.101 = private unnamed_addr constant [3 x i8] c"SL\00"
@str.102 = private unnamed_addr constant [3 x i8] c"SR\00"
@str.103 = private unnamed_addr constant [4 x i8] c"DOT\00"
@str.104 = private unnamed_addr constant [8 x i8] c"DOT_DOT\00"
@str.105 = private unnamed_addr constant [12 x i8] c"DOT_DOT_DOT\00"
@str.106 = private unnamed_addr constant [10 x i8] c"IDENTIFER\00"
@str.107 = private unnamed_addr constant [7 x i8] c"AND_KW\00"
@str.108 = private unnamed_addr constant [6 x i8] c"OR_KW\00"
@str.109 = private unnamed_addr constant [7 x i8] c"XOR_KW\00"
@str.110 = private unnamed_addr constant [9 x i8] c"CONST_KW\00"
@str.111 = private unnamed_addr constant [6 x i8] c"IF_KW\00"
@str.112 = private unnamed_addr constant [8 x i8] c"ELSE_KW\00"
@str.113 = private unnamed_addr constant [8 x i8] c"BOOL_KW\00"
@str.114 = private unnamed_addr constant [6 x i8] c"I4_KW\00"
@str.115 = private unnamed_addr constant [6 x i8] c"I8_KW\00"
@str.116 = private unnamed_addr constant [7 x i8] c"I16_KW\00"
@str.117 = private unnamed_addr constant [7 x i8] c"I32_KW\00"
@str.118 = private unnamed_addr constant [7 x i8] c"I64_KW\00"
@str.119 = private unnamed_addr constant [8 x i8] c"I128_KW\00"
@str.120 = private unnamed_addr constant [7 x i8] c"INT_KW\00"
@str.121 = private unnamed_addr constant [7 x i8] c"F16_KW\00"
@str.122 = private unnamed_addr constant [7 x i8] c"F32_KW\00"
@str.123 = private unnamed_addr constant [7 x i8] c"F64_KW\00"
@str.124 = private unnamed_addr constant [9 x i8] c"FLOAT_KW\00"
@str.125 = private unnamed_addr constant [8 x i8] c"VOID_KW\00"
@str.126 = private unnamed_addr constant [7 x i8] c"FOR_KW\00"
@str.127 = private unnamed_addr constant [9 x i8] c"WHILE_KW\00"
@str.128 = private unnamed_addr constant [7 x i8] c"FNC_KW\00"
@str.129 = private unnamed_addr constant [9 x i8] c"BREAK_KW\00"
@str.130 = private unnamed_addr constant [12 x i8] c"CONTINUE_KW\00"
@str.131 = private unnamed_addr constant [10 x i8] c"RETURN_KW\00"
@str.132 = private unnamed_addr constant [10 x i8] c"IMPORT_KW\00"
@str.133 = private unnamed_addr constant [11 x i8] c"PRIVATE_KW\00"
@str.134 = private unnamed_addr constant [10 x i8] c"PUBLIC_KW\00"
@str.135 = private unnamed_addr constant [13 x i8] c"PROTECTED_KW\00"
@str.136 = private unnamed_addr constant [6 x i8] c"IN_KW\00"
@str.137 = private unnamed_addr constant [9 x i8] c"CLASS_KW\00"
@str.138 = private unnamed_addr constant [8 x i8] c"ENUM_KW\00"
@str.139 = private unnamed_addr constant [7 x i8] c"NEW_KW\00"
@str.140 = private unnamed_addr constant [6 x i8] c"AS_KW\00"
@str.141 = private unnamed_addr constant [7 x i8] c"LET_KW\00"
@str.142 = private unnamed_addr constant [2 x i8] c"[\00"
@str.143 = private unnamed_addr constant [3 x i8] c" {\00"
@str.144 = private unnamed_addr constant [12 x i8] c"  type: %s,\00"
@str.145 = private unnamed_addr constant [32 x i8] c"  range: (token.range.start)-%d\00"
@str.146 = private unnamed_addr constant [12 x i8] c"  value: %s\00"
@str.147 = private unnamed_addr constant [12 x i8] c"  value: \\n\00"
@str.148 = private unnamed_addr constant [4 x i8] c" },\00"
@str.149 = private unnamed_addr constant [2 x i8] c"]\00"
@Node_vtable_data = local_unnamed_addr global %Node_vtable_ty.676425 zeroinitializer
@TypeNode_vtable_data = global %TypeNode_vtable_ty.676427 zeroinitializer
@"Array<TypeNode>_vtable_data" = global %"Array<TypeNode>_vtable_ty.676431" { void (%"Array<TypeNode>.676430"*)* @"Array<TypeNode>_resize", void (%"Array<TypeNode>.676430"*, i64, i64)* @"Array<TypeNode>_swap", void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)* @"Array<TypeNode>___sl__", void (%"Array<TypeNode>.676430"*, i64, %TypeNode.676426*)* @"Array<TypeNode>___setitem__", void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)* @"Array<TypeNode>_append", %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)* @"Array<TypeNode>___getitem__", i1 (%"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"*)* @"Array<TypeNode>___eq__", i1 (%"Array<TypeNode>.676430"*, %TypeNode.676426*)* @"Array<TypeNode>___in__", i64 (%"Array<TypeNode>.676430"*, %TypeNode.676426*)* @"Array<TypeNode>_find", %string.676378* (%"Array<TypeNode>.676430"*, %string.676378*)* @"Array<TypeNode>_join", %string.676378* (%"Array<TypeNode>.676430"*)* @"Array<TypeNode>___as_string__" }
@str.150 = private unnamed_addr constant [10 x i8] c"@TypeNode\00"
@RecordTypeNode_vtable_data = global %RecordTypeNode_vtable_ty.676429 zeroinitializer
@FunctionTypeNode_vtable_data = global %FunctionTypeNode_vtable_ty.676433 zeroinitializer
@PointerTypeNode_vtable_data = global %PointerTypeNode_vtable_ty.676435 zeroinitializer
@StatementNode_vtable_data = global %StatementNode_vtable_ty.676437 zeroinitializer
@"Array<StatementNode>_vtable_data" = global %"Array<StatementNode>_vtable_ty.676441" { void (%"Array<StatementNode>.676440"*)* @"Array<StatementNode>_resize", void (%"Array<StatementNode>.676440"*, i64, i64)* @"Array<StatementNode>_swap", void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)* @"Array<StatementNode>___sl__", void (%"Array<StatementNode>.676440"*, i64, %StatementNode.676436*)* @"Array<StatementNode>___setitem__", void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)* @"Array<StatementNode>_append", %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)* @"Array<StatementNode>___getitem__", i1 (%"Array<StatementNode>.676440"*, %"Array<StatementNode>.676440"*)* @"Array<StatementNode>___eq__", i1 (%"Array<StatementNode>.676440"*, %StatementNode.676436*)* @"Array<StatementNode>___in__", i64 (%"Array<StatementNode>.676440"*, %StatementNode.676436*)* @"Array<StatementNode>_find", %string.676378* (%"Array<StatementNode>.676440"*, %string.676378*)* @"Array<StatementNode>_join", %string.676378* (%"Array<StatementNode>.676440"*)* @"Array<StatementNode>___as_string__" }
@str.151 = private unnamed_addr constant [15 x i8] c"@StatementNode\00"
@BlockNode_vtable_data = global %BlockNode_vtable_ty.676439 zeroinitializer
@ExpressionNode_vtable_data = global %ExpressionNode_vtable_ty.676443 zeroinitializer
@ArrayTypeNode_vtable_data = global %ArrayTypeNode_vtable_ty.676445 zeroinitializer
@IntExpressionNode_vtable_data = global %IntExpressionNode_vtable_ty.676447 zeroinitializer
@FloatExpressionNode_vtable_data = global %FloatExpressionNode_vtable_ty.676449 zeroinitializer
@CharExpressionNode_vtable_data = global %CharExpressionNode_vtable_ty.676451 zeroinitializer
@"Array<ExpressionNode>_vtable_data" = global %"Array<ExpressionNode>_vtable_ty.676455" { void (%"Array<ExpressionNode>.676454"*)* @"Array<ExpressionNode>_resize", void (%"Array<ExpressionNode>.676454"*, i64, i64)* @"Array<ExpressionNode>_swap", void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)* @"Array<ExpressionNode>___sl__", void (%"Array<ExpressionNode>.676454"*, i64, %ExpressionNode.676442*)* @"Array<ExpressionNode>___setitem__", void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)* @"Array<ExpressionNode>_append", %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)* @"Array<ExpressionNode>___getitem__", i1 (%"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"*)* @"Array<ExpressionNode>___eq__", i1 (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)* @"Array<ExpressionNode>___in__", i64 (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)* @"Array<ExpressionNode>_find", %string.676378* (%"Array<ExpressionNode>.676454"*, %string.676378*)* @"Array<ExpressionNode>_join", %string.676378* (%"Array<ExpressionNode>.676454"*)* @"Array<ExpressionNode>___as_string__" }
@str.152 = private unnamed_addr constant [16 x i8] c"@ExpressionNode\00"
@StringExpressionNode_vtable_data = global %StringExpressionNode_vtable_ty.676453 zeroinitializer
@VarAccessExpressionNode_vtable_data = global %VarAccessExpressionNode_vtable_ty.676457 zeroinitializer
@ArrayExpressionNode_vtable_data = global %ArrayExpressionNode_vtable_ty.676459 zeroinitializer
@NewExpressionNode_vtable_data = global %NewExpressionNode_vtable_ty.676461 zeroinitializer
@ExpressionIndexNode_vtable_data = global %ExpressionIndexNode_vtable_ty.676463 zeroinitializer
@MemberExpressionNode_vtable_data = global %MemberExpressionNode_vtable_ty.676465 zeroinitializer
@CallExpressionNode_vtable_data = global %CallExpressionNode_vtable_ty.676467 zeroinitializer
@TypeCastExpressionNode_vtable_data = global %TypeCastExpressionNode_vtable_ty.676469 zeroinitializer
@BinaryExpressionNode_vtable_data = global %BinaryExpressionNode_vtable_ty.676471 zeroinitializer
@TernaryExpressionNode_vtable_data = global %TernaryExpressionNode_vtable_ty.676473 zeroinitializer
@UnaryExpressionNode_vtable_data = global %UnaryExpressionNode_vtable_ty.676475 zeroinitializer
@IfStatementNode_vtable_data = global %IfStatementNode_vtable_ty.676477 zeroinitializer
@WhileStatementNode_vtable_data = global %WhileStatementNode_vtable_ty.676479 zeroinitializer
@ForStatementNode_vtable_data = global %ForStatementNode_vtable_ty.676481 zeroinitializer
@ReturnStatementNode_vtable_data = global %ReturnStatementNode_vtable_ty.676483 zeroinitializer
@VarDeclarationStatement_vtable_data = global %VarDeclarationStatement_vtable_ty.676485 zeroinitializer
@ConstDeclarationStatement_vtable_data = global %ConstDeclarationStatement_vtable_ty.676487 zeroinitializer
@ArgNode_vtable_data = global %ArgNode_vtable_ty.676489 zeroinitializer
@"Array<ArgNode>_vtable_data" = global %"Array<ArgNode>_vtable_ty.676493" { void (%"Array<ArgNode>.676492"*)* @"Array<ArgNode>_resize", void (%"Array<ArgNode>.676492"*, i64, i64)* @"Array<ArgNode>_swap", void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)* @"Array<ArgNode>___sl__", void (%"Array<ArgNode>.676492"*, i64, %ArgNode.676488*)* @"Array<ArgNode>___setitem__", void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)* @"Array<ArgNode>_append", %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)* @"Array<ArgNode>___getitem__", i1 (%"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"*)* @"Array<ArgNode>___eq__", i1 (%"Array<ArgNode>.676492"*, %ArgNode.676488*)* @"Array<ArgNode>___in__", i64 (%"Array<ArgNode>.676492"*, %ArgNode.676488*)* @"Array<ArgNode>_find", %string.676378* (%"Array<ArgNode>.676492"*, %string.676378*)* @"Array<ArgNode>_join", %string.676378* (%"Array<ArgNode>.676492"*)* @"Array<ArgNode>___as_string__" }
@str.153 = private unnamed_addr constant [9 x i8] c"@ArgNode\00"
@FunctionDeclarationNode_vtable_data = global %FunctionDeclarationNode_vtable_ty.676491 zeroinitializer
@MethodNode_vtable_data = global %MethodNode_vtable_ty.676495 zeroinitializer
@FieldNode_vtable_data = global %FieldNode_vtable_ty.676497 zeroinitializer
@GenericParameterNode_vtable_data = global %GenericParameterNode_vtable_ty.676499 zeroinitializer
@"Array<GenericParameterNode>_vtable_data" = global %"Array<GenericParameterNode>_vtable_ty.676505" { void (%"Array<GenericParameterNode>.676502"*)* @"Array<GenericParameterNode>_resize", void (%"Array<GenericParameterNode>.676502"*, i64, i64)* @"Array<GenericParameterNode>_swap", void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)* @"Array<GenericParameterNode>___sl__", void (%"Array<GenericParameterNode>.676502"*, i64, %GenericParameterNode.676498*)* @"Array<GenericParameterNode>___setitem__", void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)* @"Array<GenericParameterNode>_append", %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)* @"Array<GenericParameterNode>___getitem__", i1 (%"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"*)* @"Array<GenericParameterNode>___eq__", i1 (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)* @"Array<GenericParameterNode>___in__", i64 (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)* @"Array<GenericParameterNode>_find", %string.676378* (%"Array<GenericParameterNode>.676502"*, %string.676378*)* @"Array<GenericParameterNode>_join", %string.676378* (%"Array<GenericParameterNode>.676502"*)* @"Array<GenericParameterNode>___as_string__" }
@str.154 = private unnamed_addr constant [22 x i8] c"@GenericParameterNode\00"
@"Array<FieldNode>_vtable_data" = global %"Array<FieldNode>_vtable_ty.676506" { void (%"Array<FieldNode>.676503"*)* @"Array<FieldNode>_resize", void (%"Array<FieldNode>.676503"*, i64, i64)* @"Array<FieldNode>_swap", void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)* @"Array<FieldNode>___sl__", void (%"Array<FieldNode>.676503"*, i64, %FieldNode.676496*)* @"Array<FieldNode>___setitem__", void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)* @"Array<FieldNode>_append", %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)* @"Array<FieldNode>___getitem__", i1 (%"Array<FieldNode>.676503"*, %"Array<FieldNode>.676503"*)* @"Array<FieldNode>___eq__", i1 (%"Array<FieldNode>.676503"*, %FieldNode.676496*)* @"Array<FieldNode>___in__", i64 (%"Array<FieldNode>.676503"*, %FieldNode.676496*)* @"Array<FieldNode>_find", %string.676378* (%"Array<FieldNode>.676503"*, %string.676378*)* @"Array<FieldNode>_join", %string.676378* (%"Array<FieldNode>.676503"*)* @"Array<FieldNode>___as_string__" }
@str.155 = private unnamed_addr constant [11 x i8] c"@FieldNode\00"
@"Array<MethodNode>_vtable_data" = global %"Array<MethodNode>_vtable_ty.676507" { void (%"Array<MethodNode>.676504"*)* @"Array<MethodNode>_resize", void (%"Array<MethodNode>.676504"*, i64, i64)* @"Array<MethodNode>_swap", void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)* @"Array<MethodNode>___sl__", void (%"Array<MethodNode>.676504"*, i64, %MethodNode.676494*)* @"Array<MethodNode>___setitem__", void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)* @"Array<MethodNode>_append", %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)* @"Array<MethodNode>___getitem__", i1 (%"Array<MethodNode>.676504"*, %"Array<MethodNode>.676504"*)* @"Array<MethodNode>___eq__", i1 (%"Array<MethodNode>.676504"*, %MethodNode.676494*)* @"Array<MethodNode>___in__", i64 (%"Array<MethodNode>.676504"*, %MethodNode.676494*)* @"Array<MethodNode>_find", %string.676378* (%"Array<MethodNode>.676504"*, %string.676378*)* @"Array<MethodNode>_join", %string.676378* (%"Array<MethodNode>.676504"*)* @"Array<MethodNode>___as_string__" }
@str.156 = private unnamed_addr constant [12 x i8] c"@MethodNode\00"
@ClassDeclarationNode_vtable_data = global %ClassDeclarationNode_vtable_ty.676501 zeroinitializer
@EnumNodeField_vtable_data = global %EnumNodeField_vtable_ty.676509 zeroinitializer
@"Array<EnumNodeField>_vtable_data" = global %"Array<EnumNodeField>_vtable_ty.676513" { void (%"Array<EnumNodeField>.676512"*)* @"Array<EnumNodeField>_resize", void (%"Array<EnumNodeField>.676512"*, i64, i64)* @"Array<EnumNodeField>_swap", void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)* @"Array<EnumNodeField>___sl__", void (%"Array<EnumNodeField>.676512"*, i64, %EnumNodeField.676508*)* @"Array<EnumNodeField>___setitem__", void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)* @"Array<EnumNodeField>_append", %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)* @"Array<EnumNodeField>___getitem__", i1 (%"Array<EnumNodeField>.676512"*, %"Array<EnumNodeField>.676512"*)* @"Array<EnumNodeField>___eq__", i1 (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)* @"Array<EnumNodeField>___in__", i64 (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)* @"Array<EnumNodeField>_find", %string.676378* (%"Array<EnumNodeField>.676512"*, %string.676378*)* @"Array<EnumNodeField>_join", %string.676378* (%"Array<EnumNodeField>.676512"*)* @"Array<EnumNodeField>___as_string__" }
@str.157 = private unnamed_addr constant [15 x i8] c"@EnumNodeField\00"
@EnumNode_vtable_data = global %EnumNode_vtable_ty.676511 zeroinitializer
@"Array<IdentifierToken>_vtable_data" = global %"Array<IdentifierToken>_vtable_ty.676517" { void (%"Array<IdentifierToken>.676516"*)* @"Array<IdentifierToken>_resize", void (%"Array<IdentifierToken>.676516"*, i64, i64)* @"Array<IdentifierToken>_swap", void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)* @"Array<IdentifierToken>___sl__", void (%"Array<IdentifierToken>.676516"*, i64, %IdentifierToken.676420*)* @"Array<IdentifierToken>___setitem__", void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)* @"Array<IdentifierToken>_append", %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)* @"Array<IdentifierToken>___getitem__", i1 (%"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"*)* @"Array<IdentifierToken>___eq__", i1 (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)* @"Array<IdentifierToken>___in__", i64 (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)* @"Array<IdentifierToken>_find", %string.676378* (%"Array<IdentifierToken>.676516"*, %string.676378*)* @"Array<IdentifierToken>_join", %string.676378* (%"Array<IdentifierToken>.676516"*)* @"Array<IdentifierToken>___as_string__" }
@str.158 = private unnamed_addr constant [17 x i8] c"@IdentifierToken\00"
@ImportNode_vtable_data = global %ImportNode_vtable_ty.676515 zeroinitializer
@TypeAliasNode_vtable_data = global %TypeAliasNode_vtable_ty.676519 zeroinitializer
@"Array<FunctionDeclarationNode>_vtable_data" = global %"Array<FunctionDeclarationNode>_vtable_ty.676529" { void (%"Array<FunctionDeclarationNode>.676522"*)* @"Array<FunctionDeclarationNode>_resize", void (%"Array<FunctionDeclarationNode>.676522"*, i64, i64)* @"Array<FunctionDeclarationNode>_swap", void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)* @"Array<FunctionDeclarationNode>___sl__", void (%"Array<FunctionDeclarationNode>.676522"*, i64, %FunctionDeclarationNode.676490*)* @"Array<FunctionDeclarationNode>___setitem__", void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)* @"Array<FunctionDeclarationNode>_append", %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)* @"Array<FunctionDeclarationNode>___getitem__", i1 (%"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"*)* @"Array<FunctionDeclarationNode>___eq__", i1 (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)* @"Array<FunctionDeclarationNode>___in__", i64 (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)* @"Array<FunctionDeclarationNode>_find", %string.676378* (%"Array<FunctionDeclarationNode>.676522"*, %string.676378*)* @"Array<FunctionDeclarationNode>_join", %string.676378* (%"Array<FunctionDeclarationNode>.676522"*)* @"Array<FunctionDeclarationNode>___as_string__" }
@str.159 = private unnamed_addr constant [25 x i8] c"@FunctionDeclarationNode\00"
@"Array<ClassDeclarationNode>_vtable_data" = global %"Array<ClassDeclarationNode>_vtable_ty.676530" { void (%"Array<ClassDeclarationNode>.676523"*)* @"Array<ClassDeclarationNode>_resize", void (%"Array<ClassDeclarationNode>.676523"*, i64, i64)* @"Array<ClassDeclarationNode>_swap", void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)* @"Array<ClassDeclarationNode>___sl__", void (%"Array<ClassDeclarationNode>.676523"*, i64, %ClassDeclarationNode.676500*)* @"Array<ClassDeclarationNode>___setitem__", void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)* @"Array<ClassDeclarationNode>_append", %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)* @"Array<ClassDeclarationNode>___getitem__", i1 (%"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"*)* @"Array<ClassDeclarationNode>___eq__", i1 (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)* @"Array<ClassDeclarationNode>___in__", i64 (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)* @"Array<ClassDeclarationNode>_find", %string.676378* (%"Array<ClassDeclarationNode>.676523"*, %string.676378*)* @"Array<ClassDeclarationNode>_join", %string.676378* (%"Array<ClassDeclarationNode>.676523"*)* @"Array<ClassDeclarationNode>___as_string__" }
@str.160 = private unnamed_addr constant [22 x i8] c"@ClassDeclarationNode\00"
@"Array<EnumNode>_vtable_data" = global %"Array<EnumNode>_vtable_ty.676531" { void (%"Array<EnumNode>.676524"*)* @"Array<EnumNode>_resize", void (%"Array<EnumNode>.676524"*, i64, i64)* @"Array<EnumNode>_swap", void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)* @"Array<EnumNode>___sl__", void (%"Array<EnumNode>.676524"*, i64, %EnumNode.676510*)* @"Array<EnumNode>___setitem__", void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)* @"Array<EnumNode>_append", %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)* @"Array<EnumNode>___getitem__", i1 (%"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"*)* @"Array<EnumNode>___eq__", i1 (%"Array<EnumNode>.676524"*, %EnumNode.676510*)* @"Array<EnumNode>___in__", i64 (%"Array<EnumNode>.676524"*, %EnumNode.676510*)* @"Array<EnumNode>_find", %string.676378* (%"Array<EnumNode>.676524"*, %string.676378*)* @"Array<EnumNode>_join", %string.676378* (%"Array<EnumNode>.676524"*)* @"Array<EnumNode>___as_string__" }
@str.161 = private unnamed_addr constant [10 x i8] c"@EnumNode\00"
@"Array<ImportNode>_vtable_data" = global %"Array<ImportNode>_vtable_ty.676532" { void (%"Array<ImportNode>.676525"*)* @"Array<ImportNode>_resize", void (%"Array<ImportNode>.676525"*, i64, i64)* @"Array<ImportNode>_swap", void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)* @"Array<ImportNode>___sl__", void (%"Array<ImportNode>.676525"*, i64, %ImportNode.676514*)* @"Array<ImportNode>___setitem__", void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)* @"Array<ImportNode>_append", %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)* @"Array<ImportNode>___getitem__", i1 (%"Array<ImportNode>.676525"*, %"Array<ImportNode>.676525"*)* @"Array<ImportNode>___eq__", i1 (%"Array<ImportNode>.676525"*, %ImportNode.676514*)* @"Array<ImportNode>___in__", i64 (%"Array<ImportNode>.676525"*, %ImportNode.676514*)* @"Array<ImportNode>_find", %string.676378* (%"Array<ImportNode>.676525"*, %string.676378*)* @"Array<ImportNode>_join", %string.676378* (%"Array<ImportNode>.676525"*)* @"Array<ImportNode>___as_string__" }
@str.162 = private unnamed_addr constant [12 x i8] c"@ImportNode\00"
@"Array<ConstDeclarationStatement>_vtable_data" = global %"Array<ConstDeclarationStatement>_vtable_ty.676533" { void (%"Array<ConstDeclarationStatement>.676526"*)* @"Array<ConstDeclarationStatement>_resize", void (%"Array<ConstDeclarationStatement>.676526"*, i64, i64)* @"Array<ConstDeclarationStatement>_swap", void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)* @"Array<ConstDeclarationStatement>___sl__", void (%"Array<ConstDeclarationStatement>.676526"*, i64, %ConstDeclarationStatement.676486*)* @"Array<ConstDeclarationStatement>___setitem__", void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)* @"Array<ConstDeclarationStatement>_append", %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)* @"Array<ConstDeclarationStatement>___getitem__", i1 (%"Array<ConstDeclarationStatement>.676526"*, %"Array<ConstDeclarationStatement>.676526"*)* @"Array<ConstDeclarationStatement>___eq__", i1 (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)* @"Array<ConstDeclarationStatement>___in__", i64 (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)* @"Array<ConstDeclarationStatement>_find", %string.676378* (%"Array<ConstDeclarationStatement>.676526"*, %string.676378*)* @"Array<ConstDeclarationStatement>_join", %string.676378* (%"Array<ConstDeclarationStatement>.676526"*)* @"Array<ConstDeclarationStatement>___as_string__" }
@str.163 = private unnamed_addr constant [27 x i8] c"@ConstDeclarationStatement\00"
@"Array<VarDeclarationStatement>_vtable_data" = global %"Array<VarDeclarationStatement>_vtable_ty.676534" { void (%"Array<VarDeclarationStatement>.676527"*)* @"Array<VarDeclarationStatement>_resize", void (%"Array<VarDeclarationStatement>.676527"*, i64, i64)* @"Array<VarDeclarationStatement>_swap", void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)* @"Array<VarDeclarationStatement>___sl__", void (%"Array<VarDeclarationStatement>.676527"*, i64, %VarDeclarationStatement.676484*)* @"Array<VarDeclarationStatement>___setitem__", void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)* @"Array<VarDeclarationStatement>_append", %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)* @"Array<VarDeclarationStatement>___getitem__", i1 (%"Array<VarDeclarationStatement>.676527"*, %"Array<VarDeclarationStatement>.676527"*)* @"Array<VarDeclarationStatement>___eq__", i1 (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)* @"Array<VarDeclarationStatement>___in__", i64 (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)* @"Array<VarDeclarationStatement>_find", %string.676378* (%"Array<VarDeclarationStatement>.676527"*, %string.676378*)* @"Array<VarDeclarationStatement>_join", %string.676378* (%"Array<VarDeclarationStatement>.676527"*)* @"Array<VarDeclarationStatement>___as_string__" }
@str.164 = private unnamed_addr constant [25 x i8] c"@VarDeclarationStatement\00"
@"Array<TypeAliasNode>_vtable_data" = global %"Array<TypeAliasNode>_vtable_ty.676535" { void (%"Array<TypeAliasNode>.676528"*)* @"Array<TypeAliasNode>_resize", void (%"Array<TypeAliasNode>.676528"*, i64, i64)* @"Array<TypeAliasNode>_swap", void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)* @"Array<TypeAliasNode>___sl__", void (%"Array<TypeAliasNode>.676528"*, i64, %TypeAliasNode.676518*)* @"Array<TypeAliasNode>___setitem__", void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)* @"Array<TypeAliasNode>_append", %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)* @"Array<TypeAliasNode>___getitem__", i1 (%"Array<TypeAliasNode>.676528"*, %"Array<TypeAliasNode>.676528"*)* @"Array<TypeAliasNode>___eq__", i1 (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)* @"Array<TypeAliasNode>___in__", i64 (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)* @"Array<TypeAliasNode>_find", %string.676378* (%"Array<TypeAliasNode>.676528"*, %string.676378*)* @"Array<TypeAliasNode>_join", %string.676378* (%"Array<TypeAliasNode>.676528"*)* @"Array<TypeAliasNode>___as_string__" }
@str.165 = private unnamed_addr constant [15 x i8] c"@TypeAliasNode\00"
@ModuleAST_vtable_data = global %ModuleAST_vtable_ty.676521 zeroinitializer
@Parser_vtable_data = global %Parser_vtable_ty.676537 { i1 (%Parser.676536*)* @Parser_can_parse, void (%Parser.676536*, %string.676378*)* @Parser_error, void (%Parser.676536*)* @Parser_advance, %Token.676406* (%Parser.676536*, i64)* @Parser_peek, %Token.676406* (%Parser.676536*, i64)* @Parser_eat, void (%Parser.676536*)* @Parser_new_lines, %TypeNode.676426* (%Parser.676536*)* @Parser_parse_primitive_type, void (%Parser.676536*, %"Array<TypeNode>.676430"*)* @Parser_parse_type_list, %RecordTypeNode.676428* (%Parser.676536*)* @Parser_parse_object_type, %FunctionTypeNode.676432* (%Parser.676536*)* @Parser_parse_function_type, %TypeNode.676426* (%Parser.676536*)* @Parser_parse_type, void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)* @Parser_parse_expression_list, %ArrayExpressionNode.676458* (%Parser.676536*)* @Parser_parse_array_expression, %NewExpressionNode.676460* (%Parser.676536*)* @Parser_parse_new_expression, %StringExpressionNode.676452* (%Parser.676536*)* @Parser_parse_string, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_atom, %ExpressionIndexNode.676462* (%Parser.676536*, %ExpressionNode.676442*)* @Parser_parse_index_expression, %CallExpressionNode.676466* (%Parser.676536*, %ExpressionNode.676442*)* @Parser_parse_call_expression, %MemberExpressionNode.676464* (%Parser.676536*, %ExpressionNode.676442*)* @Parser_parse_member_expression, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_lhs_expression_allow_call, i64 (%Parser.676536*)* @Parser_is_unary_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_unary_expression, i64 (%Parser.676536*)* @Parser_is_term_expr_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_term_expression, i64 (%Parser.676536*)* @Parser_is_arith_expr_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_arithmetic_expression, i64 (%Parser.676536*)* @Parser_is_bitshift_expr_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_bitshift_expression, i64 (%Parser.676536*)* @Parser_is_comp_expr_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_comparasion_expression, i64 (%Parser.676536*)* @Parser_is_bit_expr_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_bit_expression, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_range_expression, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_typecast_expression, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_ternary_expression, i64 (%Parser.676536*)* @Parser_is_assign_op, %ExpressionNode.676442* (%Parser.676536*)* @Parser_parse_expression, %IfStatementNode.676476* (%Parser.676536*)* @Parser_parse_if_statement, %WhileStatementNode.676478* (%Parser.676536*)* @Parser_parse_while_statement, %ForStatementNode.676480* (%Parser.676536*)* @Parser_parse_for_statement, %VarDeclarationStatement.676484* (%Parser.676536*)* @Parser_parse_variable_declaration_statement, %ReturnStatementNode.676482* (%Parser.676536*)* @Parser_parse_return_statement, %StatementNode.676436* (%Parser.676536*)* @Parser_parse_statement, %BlockNode.676438* (%Parser.676536*)* @Parser_parse_block, %TypeAliasNode.676518* (%Parser.676536*)* @Parser_parse_type_alias, %ArgNode.676488* (%Parser.676536*)* @Parser_parse_arg, void (%Parser.676536*, %"Array<ArgNode>.676492"*)* @Parser_parse_args, %FunctionDeclarationNode.676490* (%Parser.676536*)* @Parser_parse_function, %MethodNode.676494* (%Parser.676536*)* @Parser_parse_method, i64 (%Parser.676536*)* @Parser_parse_access_modifier, void (%Parser.676536*, %ClassDeclarationNode.676500*)* @Parser_parse_class_block, void (%Parser.676536*, %"Array<GenericParameterNode>.676502"*)* @Parser_parse_generic_parameters, %ClassDeclarationNode.676500* (%Parser.676536*)* @Parser_parse_class, %ConstDeclarationStatement.676486* (%Parser.676536*)* @Parser_parse_const_declaration_statement, %ImportNode.676514* (%Parser.676536*)* @Parser_parse_import, %EnumNode.676510* (%Parser.676536*)* @Parser_parse_enum, %ModuleAST.676520* (%Parser.676536*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*)* @Parser_parse }
@str.166 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00"
@str.167 = private unnamed_addr constant [13 x i8] c"Expected '='\00"
@str.168 = private unnamed_addr constant [13 x i8] c"Expected ':'\00"
@str.169 = private unnamed_addr constant [13 x i8] c"Expected '('\00"
@str.170 = private unnamed_addr constant [13 x i8] c"Expected ')'\00"
@str.171 = private unnamed_addr constant [13 x i8] c"Expected '{'\00"
@str.172 = private unnamed_addr constant [13 x i8] c"Expected '}'\00"
@str.173 = private unnamed_addr constant [13 x i8] c"Expected ','\00"
@str.174 = private unnamed_addr constant [13 x i8] c"Expected '<'\00"
@str.177 = private unnamed_addr constant [27 x i8] c"Expected a type definition\00"
@str.178 = private unnamed_addr constant [6 x i8] c"Array\00"
@str.179 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00"
@str.180 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00"
@str.181 = private unnamed_addr constant [5 x i8] c"this\00"
@str.182 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00"
@str.183 = private unnamed_addr constant [5 x i8] c"type\00"
@str.184 = private unnamed_addr constant [80 x i8] c"Illegal expression expected: 'fnc', 'class', 'enum', 'import', 'const' or 'let'\00"
@Type_vtable_data = global %Type_vtable_ty.676539 zeroinitializer
@BooleanType_vtable_data = global %BooleanType_vtable_ty.676541 zeroinitializer
@PointerType_vtable_data = global %PointerType_vtable_ty.676543 zeroinitializer
@"Array<Type>_vtable_data" = global %"Array<Type>_vtable_ty.676547" { void (%"Array<Type>.676546"*)* @"Array<Type>_resize", void (%"Array<Type>.676546"*, i64, i64)* @"Array<Type>_swap", void (%"Array<Type>.676546"*, %Type.676538*)* @"Array<Type>___sl__", void (%"Array<Type>.676546"*, i64, %Type.676538*)* @"Array<Type>___setitem__", void (%"Array<Type>.676546"*, %Type.676538*)* @"Array<Type>_append", %Type.676538* (%"Array<Type>.676546"*, i64)* @"Array<Type>___getitem__", i1 (%"Array<Type>.676546"*, %"Array<Type>.676546"*)* @"Array<Type>___eq__", i1 (%"Array<Type>.676546"*, %Type.676538*)* @"Array<Type>___in__", i64 (%"Array<Type>.676546"*, %Type.676538*)* @"Array<Type>_find", %string.676378* (%"Array<Type>.676546"*, %string.676378*)* @"Array<Type>_join", %string.676378* (%"Array<Type>.676546"*)* @"Array<Type>___as_string__" }
@str.185 = private unnamed_addr constant [6 x i8] c"@Type\00"
@FunctionType_vtable_data = global %FunctionType_vtable_ty.676545 zeroinitializer
@Value_vtable_data = local_unnamed_addr global %Value_vtable_ty.676549 zeroinitializer
@Statement_vtable_data = global %Statement_vtable_ty.676551 zeroinitializer
@TypeId_vtable_data = local_unnamed_addr global %TypeId_vtable_ty.676553 zeroinitializer
@ClassId_vtable_data = global %ClassId_vtable_ty.676555 zeroinitializer
@EnumId_vtable_data = global %EnumId_vtable_ty.676557 zeroinitializer
@Expression_vtable_data = local_unnamed_addr global %Expression_vtable_ty.676559 zeroinitializer
@ArrayType_vtable_data = global %ArrayType_vtable_ty.676561 zeroinitializer
@ObjectType_vtable_data = global %ObjectType_vtable_ty.676563 zeroinitializer
@EnumType_vtable_data = global %EnumType_vtable_ty.676565 zeroinitializer
@IntExpression_vtable_data = global %IntExpression_vtable_ty.676567 zeroinitializer
@BooleanExpression_vtable_data = global %BooleanExpression_vtable_ty.676569 zeroinitializer
@FloatExpression_vtable_data = global %FloatExpression_vtable_ty.676571 zeroinitializer
@"Array<Expression>_vtable_data" = global %"Array<Expression>_vtable_ty.676575" { void (%"Array<Expression>.676574"*)* @"Array<Expression>_resize", void (%"Array<Expression>.676574"*, i64, i64)* @"Array<Expression>_swap", void (%"Array<Expression>.676574"*, %Expression.676558*)* @"Array<Expression>___sl__", void (%"Array<Expression>.676574"*, i64, %Expression.676558*)* @"Array<Expression>___setitem__", void (%"Array<Expression>.676574"*, %Expression.676558*)* @"Array<Expression>_append", %Expression.676558* (%"Array<Expression>.676574"*, i64)* @"Array<Expression>___getitem__", i1 (%"Array<Expression>.676574"*, %"Array<Expression>.676574"*)* @"Array<Expression>___eq__", i1 (%"Array<Expression>.676574"*, %Expression.676558*)* @"Array<Expression>___in__", i64 (%"Array<Expression>.676574"*, %Expression.676558*)* @"Array<Expression>_find", %string.676378* (%"Array<Expression>.676574"*, %string.676378*)* @"Array<Expression>_join", %string.676378* (%"Array<Expression>.676574"*)* @"Array<Expression>___as_string__" }
@str.186 = private unnamed_addr constant [12 x i8] c"@Expression\00"
@StringExpression_vtable_data = global %StringExpression_vtable_ty.676573 zeroinitializer
@NullExpression_vtable_data = global %NullExpression_vtable_ty.676577 zeroinitializer
@ArrayExpression_vtable_data = global %ArrayExpression_vtable_ty.676579 zeroinitializer
@BinaryExpression_vtable_data = global %BinaryExpression_vtable_ty.676581 zeroinitializer
@UnaryExpression_vtable_data = global %UnaryExpression_vtable_ty.676583 zeroinitializer
@TernaryExpression_vtable_data = global %TernaryExpression_vtable_ty.676585 zeroinitializer
@TypeCastExpression_vtable_data = global %TypeCastExpression_vtable_ty.676587 zeroinitializer
@NewExpression_vtable_data = global %NewExpression_vtable_ty.676589 zeroinitializer
@IndexExpression_vtable_data = global %IndexExpression_vtable_ty.676591 zeroinitializer
@CallExpression_vtable_data = global %CallExpression_vtable_ty.676593 zeroinitializer
@IntrinsicCall_vtable_data = global %IntrinsicCall_vtable_ty.676595 zeroinitializer
@VarId_vtable_data = global %VarId_vtable_ty.676597 zeroinitializer
@ClassVarId_vtable_data = global %ClassVarId_vtable_ty.676599 zeroinitializer
@EnumVarId_vtable_data = global %EnumVarId_vtable_ty.676601 zeroinitializer
@ConstId_vtable_data = global %ConstId_vtable_ty.676603 zeroinitializer
@PropId_vtable_data = global %PropId_vtable_ty.676605 zeroinitializer
@MemberExpression_vtable_data = global %MemberExpression_vtable_ty.676607 zeroinitializer
@VarAccessExpression_vtable_data = global %VarAccessExpression_vtable_ty.676609 zeroinitializer
@"Array<Statement>_vtable_data" = global %"Array<Statement>_vtable_ty.676613" { void (%"Array<Statement>.676612"*)* @"Array<Statement>_resize", void (%"Array<Statement>.676612"*, i64, i64)* @"Array<Statement>_swap", void (%"Array<Statement>.676612"*, %Statement.676550*)* @"Array<Statement>___sl__", void (%"Array<Statement>.676612"*, i64, %Statement.676550*)* @"Array<Statement>___setitem__", void (%"Array<Statement>.676612"*, %Statement.676550*)* @"Array<Statement>_append", %Statement.676550* (%"Array<Statement>.676612"*, i64)* @"Array<Statement>___getitem__", i1 (%"Array<Statement>.676612"*, %"Array<Statement>.676612"*)* @"Array<Statement>___eq__", i1 (%"Array<Statement>.676612"*, %Statement.676550*)* @"Array<Statement>___in__", i64 (%"Array<Statement>.676612"*, %Statement.676550*)* @"Array<Statement>_find", %string.676378* (%"Array<Statement>.676612"*, %string.676378*)* @"Array<Statement>_join", %string.676378* (%"Array<Statement>.676612"*)* @"Array<Statement>___as_string__" }
@str.187 = private unnamed_addr constant [11 x i8] c"@Statement\00"
@Block_vtable_data = global %Block_vtable_ty.676611 zeroinitializer
@IfStatement_vtable_data = global %IfStatement_vtable_ty.676615 zeroinitializer
@VarDeclaration_vtable_data = global %VarDeclaration_vtable_ty.676617 zeroinitializer
@ConstDeclaration_vtable_data = global %ConstDeclaration_vtable_ty.676619 zeroinitializer
@ForStatement_vtable_data = global %ForStatement_vtable_ty.676621 zeroinitializer
@WhileStatement_vtable_data = global %WhileStatement_vtable_ty.676623 zeroinitializer
@ReturnStatement_vtable_data = global %ReturnStatement_vtable_ty.676625 zeroinitializer
@str.188 = private unnamed_addr constant [4 x i8] c"i%d\00"
@str.189 = private unnamed_addr constant [4 x i8] c"f%d\00"
@str.190 = private unnamed_addr constant [7 x i8] c"record\00"
@str.191 = private unnamed_addr constant [8 x i8] c"unknown\00"
@str.192 = private unnamed_addr constant [2 x i8] c"+\00"
@str.193 = private unnamed_addr constant [2 x i8] c"-\00"
@str.194 = private unnamed_addr constant [2 x i8] c"*\00"
@str.195 = private unnamed_addr constant [2 x i8] c"/\00"
@str.196 = private unnamed_addr constant [2 x i8] c"%\00"
@str.197 = private unnamed_addr constant [2 x i8] c">\00"
@str.198 = private unnamed_addr constant [3 x i8] c">=\00"
@str.199 = private unnamed_addr constant [2 x i8] c"<\00"
@str.200 = private unnamed_addr constant [3 x i8] c"<=\00"
@str.201 = private unnamed_addr constant [3 x i8] c"==\00"
@str.202 = private unnamed_addr constant [3 x i8] c"!=\00"
@str.203 = private unnamed_addr constant [3 x i8] c"<<\00"
@str.204 = private unnamed_addr constant [3 x i8] c">>\00"
@str.205 = private unnamed_addr constant [2 x i8] c"=\00"
@str.206 = private unnamed_addr constant [3 x i8] c"..\00"
@str.207 = private unnamed_addr constant [8 x i8] c"++(pre)\00"
@str.208 = private unnamed_addr constant [8 x i8] c"--(pre)\00"
@str.209 = private unnamed_addr constant [9 x i8] c"(post)++\00"
@str.210 = private unnamed_addr constant [9 x i8] c"(post)--\00"
@str.211 = private unnamed_addr constant [2 x i8] c"!\00"
@str.212 = private unnamed_addr constant [2 x i8] c"&\00"
@ScopeId_vtable_data = global %ScopeId_vtable_ty.676627 zeroinitializer
@"Bucket<string, VarId>_vtable_data" = global %"Bucket<string, VarId>_vtable_ty.676636" { void (%"Bucket<string, VarId>.676635"*, %string.676378*, %VarId.676596*)* @"Bucket<string, VarId>_set" }
@"Array<Bucket<string, VarId>>_vtable_data" = global %"Array<Bucket<string, VarId>>_vtable_ty.676638" { void (%"Array<Bucket<string, VarId>>.676637"*)* @"Array<Bucket<string, VarId>>_resize", void (%"Array<Bucket<string, VarId>>.676637"*, i64, i64)* @"Array<Bucket<string, VarId>>_swap", void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)* @"Array<Bucket<string, VarId>>___sl__", void (%"Array<Bucket<string, VarId>>.676637"*, i64, %"Bucket<string, VarId>.676635"*)* @"Array<Bucket<string, VarId>>___setitem__", void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)* @"Array<Bucket<string, VarId>>_append", %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)* @"Array<Bucket<string, VarId>>___getitem__", i1 (%"Array<Bucket<string, VarId>>.676637"*, %"Array<Bucket<string, VarId>>.676637"*)* @"Array<Bucket<string, VarId>>___eq__", i1 (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)* @"Array<Bucket<string, VarId>>___in__", i64 (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)* @"Array<Bucket<string, VarId>>_find", %string.676378* (%"Array<Bucket<string, VarId>>.676637"*, %string.676378*)* @"Array<Bucket<string, VarId>>_join", %string.676378* (%"Array<Bucket<string, VarId>>.676637"*)* @"Array<Bucket<string, VarId>>___as_string__" }
@str.213 = private unnamed_addr constant [23 x i8] c"@Bucket<string, VarId>\00"
@"Map<string, VarId>_vtable_data" = global %"Map<string, VarId>_vtable_ty.676634" { i64 (%"Map<string, VarId>.676630"*, %string.676378*)* @"Map<string, VarId>_hash_fnc", void (%"Map<string, VarId>.676630"*)* @"Map<string, VarId>_resize", void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)* @"Map<string, VarId>_set", %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)* @"Map<string, VarId>_get", %"Array<Bucket<string, VarId>>.676637"* (%"Map<string, VarId>.676630"*)* @"Map<string, VarId>_get_buckets" }
@"Bucket<string, ClassId>_vtable_data" = global %"Bucket<string, ClassId>_vtable_ty.676641" { void (%"Bucket<string, ClassId>.676640"*, %string.676378*, %ClassId.676554*)* @"Bucket<string, ClassId>_set" }
@"Array<Bucket<string, ClassId>>_vtable_data" = global %"Array<Bucket<string, ClassId>>_vtable_ty.676643" { void (%"Array<Bucket<string, ClassId>>.676642"*)* @"Array<Bucket<string, ClassId>>_resize", void (%"Array<Bucket<string, ClassId>>.676642"*, i64, i64)* @"Array<Bucket<string, ClassId>>_swap", void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)* @"Array<Bucket<string, ClassId>>___sl__", void (%"Array<Bucket<string, ClassId>>.676642"*, i64, %"Bucket<string, ClassId>.676640"*)* @"Array<Bucket<string, ClassId>>___setitem__", void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)* @"Array<Bucket<string, ClassId>>_append", %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)* @"Array<Bucket<string, ClassId>>___getitem__", i1 (%"Array<Bucket<string, ClassId>>.676642"*, %"Array<Bucket<string, ClassId>>.676642"*)* @"Array<Bucket<string, ClassId>>___eq__", i1 (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)* @"Array<Bucket<string, ClassId>>___in__", i64 (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)* @"Array<Bucket<string, ClassId>>_find", %string.676378* (%"Array<Bucket<string, ClassId>>.676642"*, %string.676378*)* @"Array<Bucket<string, ClassId>>_join", %string.676378* (%"Array<Bucket<string, ClassId>>.676642"*)* @"Array<Bucket<string, ClassId>>___as_string__" }
@str.214 = private unnamed_addr constant [25 x i8] c"@Bucket<string, ClassId>\00"
@"Map<string, ClassId>_vtable_data" = global %"Map<string, ClassId>_vtable_ty.676639" { i64 (%"Map<string, ClassId>.676631"*, %string.676378*)* @"Map<string, ClassId>_hash_fnc", void (%"Map<string, ClassId>.676631"*)* @"Map<string, ClassId>_resize", void (%"Map<string, ClassId>.676631"*, %string.676378*, %ClassId.676554*)* @"Map<string, ClassId>_set", %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)* @"Map<string, ClassId>_get", %"Array<Bucket<string, ClassId>>.676642"* (%"Map<string, ClassId>.676631"*)* @"Map<string, ClassId>_get_buckets" }
@"Bucket<string, EnumId>_vtable_data" = global %"Bucket<string, EnumId>_vtable_ty.676646" { void (%"Bucket<string, EnumId>.676645"*, %string.676378*, %EnumId.676556*)* @"Bucket<string, EnumId>_set" }
@"Array<Bucket<string, EnumId>>_vtable_data" = global %"Array<Bucket<string, EnumId>>_vtable_ty.676648" { void (%"Array<Bucket<string, EnumId>>.676647"*)* @"Array<Bucket<string, EnumId>>_resize", void (%"Array<Bucket<string, EnumId>>.676647"*, i64, i64)* @"Array<Bucket<string, EnumId>>_swap", void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)* @"Array<Bucket<string, EnumId>>___sl__", void (%"Array<Bucket<string, EnumId>>.676647"*, i64, %"Bucket<string, EnumId>.676645"*)* @"Array<Bucket<string, EnumId>>___setitem__", void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)* @"Array<Bucket<string, EnumId>>_append", %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)* @"Array<Bucket<string, EnumId>>___getitem__", i1 (%"Array<Bucket<string, EnumId>>.676647"*, %"Array<Bucket<string, EnumId>>.676647"*)* @"Array<Bucket<string, EnumId>>___eq__", i1 (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)* @"Array<Bucket<string, EnumId>>___in__", i64 (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)* @"Array<Bucket<string, EnumId>>_find", %string.676378* (%"Array<Bucket<string, EnumId>>.676647"*, %string.676378*)* @"Array<Bucket<string, EnumId>>_join", %string.676378* (%"Array<Bucket<string, EnumId>>.676647"*)* @"Array<Bucket<string, EnumId>>___as_string__" }
@str.215 = private unnamed_addr constant [24 x i8] c"@Bucket<string, EnumId>\00"
@"Map<string, EnumId>_vtable_data" = global %"Map<string, EnumId>_vtable_ty.676644" { i64 (%"Map<string, EnumId>.676632"*, %string.676378*)* @"Map<string, EnumId>_hash_fnc", void (%"Map<string, EnumId>.676632"*)* @"Map<string, EnumId>_resize", void (%"Map<string, EnumId>.676632"*, %string.676378*, %EnumId.676556*)* @"Map<string, EnumId>_set", %EnumId.676556* (%"Map<string, EnumId>.676632"*, %string.676378*)* @"Map<string, EnumId>_get", %"Array<Bucket<string, EnumId>>.676647"* (%"Map<string, EnumId>.676632"*)* @"Map<string, EnumId>_get_buckets" }
@"Bucket<string, Type>_vtable_data" = global %"Bucket<string, Type>_vtable_ty.676651" { void (%"Bucket<string, Type>.676650"*, %string.676378*, %Type.676538*)* @"Bucket<string, Type>_set" }
@"Array<Bucket<string, Type>>_vtable_data" = global %"Array<Bucket<string, Type>>_vtable_ty.676653" { void (%"Array<Bucket<string, Type>>.676652"*)* @"Array<Bucket<string, Type>>_resize", void (%"Array<Bucket<string, Type>>.676652"*, i64, i64)* @"Array<Bucket<string, Type>>_swap", void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)* @"Array<Bucket<string, Type>>___sl__", void (%"Array<Bucket<string, Type>>.676652"*, i64, %"Bucket<string, Type>.676650"*)* @"Array<Bucket<string, Type>>___setitem__", void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)* @"Array<Bucket<string, Type>>_append", %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)* @"Array<Bucket<string, Type>>___getitem__", i1 (%"Array<Bucket<string, Type>>.676652"*, %"Array<Bucket<string, Type>>.676652"*)* @"Array<Bucket<string, Type>>___eq__", i1 (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)* @"Array<Bucket<string, Type>>___in__", i64 (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)* @"Array<Bucket<string, Type>>_find", %string.676378* (%"Array<Bucket<string, Type>>.676652"*, %string.676378*)* @"Array<Bucket<string, Type>>_join", %string.676378* (%"Array<Bucket<string, Type>>.676652"*)* @"Array<Bucket<string, Type>>___as_string__" }
@str.216 = private unnamed_addr constant [22 x i8] c"@Bucket<string, Type>\00"
@"Map<string, Type>_vtable_data" = global %"Map<string, Type>_vtable_ty.676649" { i64 (%"Map<string, Type>.676633"*, %string.676378*)* @"Map<string, Type>_hash_fnc", void (%"Map<string, Type>.676633"*)* @"Map<string, Type>_resize", void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)* @"Map<string, Type>_set", %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)* @"Map<string, Type>_get", %"Array<Bucket<string, Type>>.676652"* (%"Map<string, Type>.676633"*)* @"Map<string, Type>_get_buckets" }
@Scope_vtable_data = global %Scope_vtable_ty.676629 zeroinitializer
@FunctionArg_vtable_data = global %FunctionArg_vtable_ty.676655 zeroinitializer
@"Array<FunctionArg>_vtable_data" = global %"Array<FunctionArg>_vtable_ty.676659" { void (%"Array<FunctionArg>.676658"*)* @"Array<FunctionArg>_resize", void (%"Array<FunctionArg>.676658"*, i64, i64)* @"Array<FunctionArg>_swap", void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)* @"Array<FunctionArg>___sl__", void (%"Array<FunctionArg>.676658"*, i64, %FunctionArg.676654*)* @"Array<FunctionArg>___setitem__", void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)* @"Array<FunctionArg>_append", %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)* @"Array<FunctionArg>___getitem__", i1 (%"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"*)* @"Array<FunctionArg>___eq__", i1 (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)* @"Array<FunctionArg>___in__", i64 (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)* @"Array<FunctionArg>_find", %string.676378* (%"Array<FunctionArg>.676658"*, %string.676378*)* @"Array<FunctionArg>_join", %string.676378* (%"Array<FunctionArg>.676658"*)* @"Array<FunctionArg>___as_string__" }
@str.217 = private unnamed_addr constant [13 x i8] c"@FunctionArg\00"
@Function_vtable_data = global %Function_vtable_ty.676657 zeroinitializer
@Var_vtable_data = global %Var_vtable_ty.676661 zeroinitializer
@Const_vtable_data = global %Const_vtable_ty.676663 zeroinitializer
@ClassField_vtable_data = global %ClassField_vtable_ty.676665 zeroinitializer
@ClassMethod_vtable_data = global %ClassMethod_vtable_ty.676667 zeroinitializer
@"Array<ClassField>_vtable_data" = global %"Array<ClassField>_vtable_ty.676673" { void (%"Array<ClassField>.676670"*)* @"Array<ClassField>_resize", void (%"Array<ClassField>.676670"*, i64, i64)* @"Array<ClassField>_swap", void (%"Array<ClassField>.676670"*, %ClassField.676664*)* @"Array<ClassField>___sl__", void (%"Array<ClassField>.676670"*, i64, %ClassField.676664*)* @"Array<ClassField>___setitem__", void (%"Array<ClassField>.676670"*, %ClassField.676664*)* @"Array<ClassField>_append", %ClassField.676664* (%"Array<ClassField>.676670"*, i64)* @"Array<ClassField>___getitem__", i1 (%"Array<ClassField>.676670"*, %"Array<ClassField>.676670"*)* @"Array<ClassField>___eq__", i1 (%"Array<ClassField>.676670"*, %ClassField.676664*)* @"Array<ClassField>___in__", i64 (%"Array<ClassField>.676670"*, %ClassField.676664*)* @"Array<ClassField>_find", %string.676378* (%"Array<ClassField>.676670"*, %string.676378*)* @"Array<ClassField>_join", %string.676378* (%"Array<ClassField>.676670"*)* @"Array<ClassField>___as_string__" }
@str.218 = private unnamed_addr constant [12 x i8] c"@ClassField\00"
@"Array<ClassMethod>_vtable_data" = global %"Array<ClassMethod>_vtable_ty.676674" { void (%"Array<ClassMethod>.676671"*)* @"Array<ClassMethod>_resize", void (%"Array<ClassMethod>.676671"*, i64, i64)* @"Array<ClassMethod>_swap", void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)* @"Array<ClassMethod>___sl__", void (%"Array<ClassMethod>.676671"*, i64, %ClassMethod.676666*)* @"Array<ClassMethod>___setitem__", void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)* @"Array<ClassMethod>_append", %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)* @"Array<ClassMethod>___getitem__", i1 (%"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"*)* @"Array<ClassMethod>___eq__", i1 (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)* @"Array<ClassMethod>___in__", i64 (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)* @"Array<ClassMethod>_find", %string.676378* (%"Array<ClassMethod>.676671"*, %string.676378*)* @"Array<ClassMethod>_join", %string.676378* (%"Array<ClassMethod>.676671"*)* @"Array<ClassMethod>___as_string__" }
@str.219 = private unnamed_addr constant [13 x i8] c"@ClassMethod\00"
@"Bucket<string, PropId>_vtable_data" = global %"Bucket<string, PropId>_vtable_ty.676677" { void (%"Bucket<string, PropId>.676676"*, %string.676378*, %PropId.676604*)* @"Bucket<string, PropId>_set" }
@"Array<Bucket<string, PropId>>_vtable_data" = global %"Array<Bucket<string, PropId>>_vtable_ty.676679" { void (%"Array<Bucket<string, PropId>>.676678"*)* @"Array<Bucket<string, PropId>>_resize", void (%"Array<Bucket<string, PropId>>.676678"*, i64, i64)* @"Array<Bucket<string, PropId>>_swap", void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)* @"Array<Bucket<string, PropId>>___sl__", void (%"Array<Bucket<string, PropId>>.676678"*, i64, %"Bucket<string, PropId>.676676"*)* @"Array<Bucket<string, PropId>>___setitem__", void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)* @"Array<Bucket<string, PropId>>_append", %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)* @"Array<Bucket<string, PropId>>___getitem__", i1 (%"Array<Bucket<string, PropId>>.676678"*, %"Array<Bucket<string, PropId>>.676678"*)* @"Array<Bucket<string, PropId>>___eq__", i1 (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)* @"Array<Bucket<string, PropId>>___in__", i64 (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)* @"Array<Bucket<string, PropId>>_find", %string.676378* (%"Array<Bucket<string, PropId>>.676678"*, %string.676378*)* @"Array<Bucket<string, PropId>>_join", %string.676378* (%"Array<Bucket<string, PropId>>.676678"*)* @"Array<Bucket<string, PropId>>___as_string__" }
@str.220 = private unnamed_addr constant [24 x i8] c"@Bucket<string, PropId>\00"
@"Map<string, PropId>_vtable_data" = global %"Map<string, PropId>_vtable_ty.676675" { i64 (%"Map<string, PropId>.676672"*, %string.676378*)* @"Map<string, PropId>_hash_fnc", void (%"Map<string, PropId>.676672"*)* @"Map<string, PropId>_resize", void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)* @"Map<string, PropId>_set", %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)* @"Map<string, PropId>_get", %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)* @"Map<string, PropId>_get_buckets" }
@Class_vtable_data = global %Class_vtable_ty.676669 zeroinitializer
@EnumField_vtable_data = global %EnumField_vtable_ty.676681 zeroinitializer
@"Array<EnumField>_vtable_data" = global %"Array<EnumField>_vtable_ty.676685" { void (%"Array<EnumField>.676684"*)* @"Array<EnumField>_resize", void (%"Array<EnumField>.676684"*, i64, i64)* @"Array<EnumField>_swap", void (%"Array<EnumField>.676684"*, %EnumField.676680*)* @"Array<EnumField>___sl__", void (%"Array<EnumField>.676684"*, i64, %EnumField.676680*)* @"Array<EnumField>___setitem__", void (%"Array<EnumField>.676684"*, %EnumField.676680*)* @"Array<EnumField>_append", %EnumField.676680* (%"Array<EnumField>.676684"*, i64)* @"Array<EnumField>___getitem__", i1 (%"Array<EnumField>.676684"*, %"Array<EnumField>.676684"*)* @"Array<EnumField>___eq__", i1 (%"Array<EnumField>.676684"*, %EnumField.676680*)* @"Array<EnumField>___in__", i64 (%"Array<EnumField>.676684"*, %EnumField.676680*)* @"Array<EnumField>_find", %string.676378* (%"Array<EnumField>.676684"*, %string.676378*)* @"Array<EnumField>_join", %string.676378* (%"Array<EnumField>.676684"*)* @"Array<EnumField>___as_string__" }
@str.221 = private unnamed_addr constant [11 x i8] c"@EnumField\00"
@Enum_vtable_data = global %Enum_vtable_ty.676683 zeroinitializer
@"Array<VarDeclaration>_vtable_data" = global %"Array<VarDeclaration>_vtable_ty.676692" { void (%"Array<VarDeclaration>.676688"*)* @"Array<VarDeclaration>_resize", void (%"Array<VarDeclaration>.676688"*, i64, i64)* @"Array<VarDeclaration>_swap", void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)* @"Array<VarDeclaration>___sl__", void (%"Array<VarDeclaration>.676688"*, i64, %VarDeclaration.676616*)* @"Array<VarDeclaration>___setitem__", void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)* @"Array<VarDeclaration>_append", %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)* @"Array<VarDeclaration>___getitem__", i1 (%"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"*)* @"Array<VarDeclaration>___eq__", i1 (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)* @"Array<VarDeclaration>___in__", i64 (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)* @"Array<VarDeclaration>_find", %string.676378* (%"Array<VarDeclaration>.676688"*, %string.676378*)* @"Array<VarDeclaration>_join", %string.676378* (%"Array<VarDeclaration>.676688"*)* @"Array<VarDeclaration>___as_string__" }
@str.222 = private unnamed_addr constant [16 x i8] c"@VarDeclaration\00"
@"Array<VarId>_vtable_data" = global %"Array<VarId>_vtable_ty.676693" { void (%"Array<VarId>.676689"*)* @"Array<VarId>_resize", void (%"Array<VarId>.676689"*, i64, i64)* @"Array<VarId>_swap", void (%"Array<VarId>.676689"*, %VarId.676596*)* @"Array<VarId>___sl__", void (%"Array<VarId>.676689"*, i64, %VarId.676596*)* @"Array<VarId>___setitem__", void (%"Array<VarId>.676689"*, %VarId.676596*)* @"Array<VarId>_append", %VarId.676596* (%"Array<VarId>.676689"*, i64)* @"Array<VarId>___getitem__", i1 (%"Array<VarId>.676689"*, %"Array<VarId>.676689"*)* @"Array<VarId>___eq__", i1 (%"Array<VarId>.676689"*, %VarId.676596*)* @"Array<VarId>___in__", i64 (%"Array<VarId>.676689"*, %VarId.676596*)* @"Array<VarId>_find", %string.676378* (%"Array<VarId>.676689"*, %string.676378*)* @"Array<VarId>_join", %string.676378* (%"Array<VarId>.676689"*)* @"Array<VarId>___as_string__" }
@str.223 = private unnamed_addr constant [7 x i8] c"@VarId\00"
@"Array<EnumId>_vtable_data" = global %"Array<EnumId>_vtable_ty.676694" { void (%"Array<EnumId>.676690"*)* @"Array<EnumId>_resize", void (%"Array<EnumId>.676690"*, i64, i64)* @"Array<EnumId>_swap", void (%"Array<EnumId>.676690"*, %EnumId.676556*)* @"Array<EnumId>___sl__", void (%"Array<EnumId>.676690"*, i64, %EnumId.676556*)* @"Array<EnumId>___setitem__", void (%"Array<EnumId>.676690"*, %EnumId.676556*)* @"Array<EnumId>_append", %EnumId.676556* (%"Array<EnumId>.676690"*, i64)* @"Array<EnumId>___getitem__", i1 (%"Array<EnumId>.676690"*, %"Array<EnumId>.676690"*)* @"Array<EnumId>___eq__", i1 (%"Array<EnumId>.676690"*, %EnumId.676556*)* @"Array<EnumId>___in__", i64 (%"Array<EnumId>.676690"*, %EnumId.676556*)* @"Array<EnumId>_find", %string.676378* (%"Array<EnumId>.676690"*, %string.676378*)* @"Array<EnumId>_join", %string.676378* (%"Array<EnumId>.676690"*)* @"Array<EnumId>___as_string__" }
@str.224 = private unnamed_addr constant [8 x i8] c"@EnumId\00"
@"Array<ClassId>_vtable_data" = global %"Array<ClassId>_vtable_ty.676695" { void (%"Array<ClassId>.676691"*)* @"Array<ClassId>_resize", void (%"Array<ClassId>.676691"*, i64, i64)* @"Array<ClassId>_swap", void (%"Array<ClassId>.676691"*, %ClassId.676554*)* @"Array<ClassId>___sl__", void (%"Array<ClassId>.676691"*, i64, %ClassId.676554*)* @"Array<ClassId>___setitem__", void (%"Array<ClassId>.676691"*, %ClassId.676554*)* @"Array<ClassId>_append", %ClassId.676554* (%"Array<ClassId>.676691"*, i64)* @"Array<ClassId>___getitem__", i1 (%"Array<ClassId>.676691"*, %"Array<ClassId>.676691"*)* @"Array<ClassId>___eq__", i1 (%"Array<ClassId>.676691"*, %ClassId.676554*)* @"Array<ClassId>___in__", i64 (%"Array<ClassId>.676691"*, %ClassId.676554*)* @"Array<ClassId>_find", %string.676378* (%"Array<ClassId>.676691"*, %string.676378*)* @"Array<ClassId>_join", %string.676378* (%"Array<ClassId>.676691"*)* @"Array<ClassId>___as_string__" }
@str.225 = private unnamed_addr constant [9 x i8] c"@ClassId\00"
@ImportedSymbols_vtable_data = global %ImportedSymbols_vtable_ty.676687 zeroinitializer
@"Array<Var>_vtable_data" = global %"Array<Var>_vtable_ty.676705" { void (%"Array<Var>.676698"*)* @"Array<Var>_resize", void (%"Array<Var>.676698"*, i64, i64)* @"Array<Var>_swap", void (%"Array<Var>.676698"*, %Var.676660*)* @"Array<Var>___sl__", void (%"Array<Var>.676698"*, i64, %Var.676660*)* @"Array<Var>___setitem__", void (%"Array<Var>.676698"*, %Var.676660*)* @"Array<Var>_append", %Var.676660* (%"Array<Var>.676698"*, i64)* @"Array<Var>___getitem__", i1 (%"Array<Var>.676698"*, %"Array<Var>.676698"*)* @"Array<Var>___eq__", i1 (%"Array<Var>.676698"*, %Var.676660*)* @"Array<Var>___in__", i64 (%"Array<Var>.676698"*, %Var.676660*)* @"Array<Var>_find", %string.676378* (%"Array<Var>.676698"*, %string.676378*)* @"Array<Var>_join", %string.676378* (%"Array<Var>.676698"*)* @"Array<Var>___as_string__" }
@str.226 = private unnamed_addr constant [5 x i8] c"@Var\00"
@"Array<Const>_vtable_data" = global %"Array<Const>_vtable_ty.676706" { void (%"Array<Const>.676699"*)* @"Array<Const>_resize", void (%"Array<Const>.676699"*, i64, i64)* @"Array<Const>_swap", void (%"Array<Const>.676699"*, %Const.676662*)* @"Array<Const>___sl__", void (%"Array<Const>.676699"*, i64, %Const.676662*)* @"Array<Const>___setitem__", void (%"Array<Const>.676699"*, %Const.676662*)* @"Array<Const>_append", %Const.676662* (%"Array<Const>.676699"*, i64)* @"Array<Const>___getitem__", i1 (%"Array<Const>.676699"*, %"Array<Const>.676699"*)* @"Array<Const>___eq__", i1 (%"Array<Const>.676699"*, %Const.676662*)* @"Array<Const>___in__", i64 (%"Array<Const>.676699"*, %Const.676662*)* @"Array<Const>_find", %string.676378* (%"Array<Const>.676699"*, %string.676378*)* @"Array<Const>_join", %string.676378* (%"Array<Const>.676699"*)* @"Array<Const>___as_string__" }
@str.227 = private unnamed_addr constant [7 x i8] c"@Const\00"
@"Array<Class>_vtable_data" = global %"Array<Class>_vtable_ty.676707" { void (%"Array<Class>.676700"*)* @"Array<Class>_resize", void (%"Array<Class>.676700"*, i64, i64)* @"Array<Class>_swap", void (%"Array<Class>.676700"*, %Class.676668*)* @"Array<Class>___sl__", void (%"Array<Class>.676700"*, i64, %Class.676668*)* @"Array<Class>___setitem__", void (%"Array<Class>.676700"*, %Class.676668*)* @"Array<Class>_append", %Class.676668* (%"Array<Class>.676700"*, i64)* @"Array<Class>___getitem__", i1 (%"Array<Class>.676700"*, %"Array<Class>.676700"*)* @"Array<Class>___eq__", i1 (%"Array<Class>.676700"*, %Class.676668*)* @"Array<Class>___in__", i64 (%"Array<Class>.676700"*, %Class.676668*)* @"Array<Class>_find", %string.676378* (%"Array<Class>.676700"*, %string.676378*)* @"Array<Class>_join", %string.676378* (%"Array<Class>.676700"*)* @"Array<Class>___as_string__" }
@str.228 = private unnamed_addr constant [7 x i8] c"@Class\00"
@"Array<Function>_vtable_data" = global %"Array<Function>_vtable_ty.676708" { void (%"Array<Function>.676701"*)* @"Array<Function>_resize", void (%"Array<Function>.676701"*, i64, i64)* @"Array<Function>_swap", void (%"Array<Function>.676701"*, %Function.676656*)* @"Array<Function>___sl__", void (%"Array<Function>.676701"*, i64, %Function.676656*)* @"Array<Function>___setitem__", void (%"Array<Function>.676701"*, %Function.676656*)* @"Array<Function>_append", %Function.676656* (%"Array<Function>.676701"*, i64)* @"Array<Function>___getitem__", i1 (%"Array<Function>.676701"*, %"Array<Function>.676701"*)* @"Array<Function>___eq__", i1 (%"Array<Function>.676701"*, %Function.676656*)* @"Array<Function>___in__", i64 (%"Array<Function>.676701"*, %Function.676656*)* @"Array<Function>_find", %string.676378* (%"Array<Function>.676701"*, %string.676378*)* @"Array<Function>_join", %string.676378* (%"Array<Function>.676701"*)* @"Array<Function>___as_string__" }
@str.229 = private unnamed_addr constant [10 x i8] c"@Function\00"
@"Array<Enum>_vtable_data" = global %"Array<Enum>_vtable_ty.676709" { void (%"Array<Enum>.676702"*)* @"Array<Enum>_resize", void (%"Array<Enum>.676702"*, i64, i64)* @"Array<Enum>_swap", void (%"Array<Enum>.676702"*, %Enum.676682*)* @"Array<Enum>___sl__", void (%"Array<Enum>.676702"*, i64, %Enum.676682*)* @"Array<Enum>___setitem__", void (%"Array<Enum>.676702"*, %Enum.676682*)* @"Array<Enum>_append", %Enum.676682* (%"Array<Enum>.676702"*, i64)* @"Array<Enum>___getitem__", i1 (%"Array<Enum>.676702"*, %"Array<Enum>.676702"*)* @"Array<Enum>___eq__", i1 (%"Array<Enum>.676702"*, %Enum.676682*)* @"Array<Enum>___in__", i64 (%"Array<Enum>.676702"*, %Enum.676682*)* @"Array<Enum>_find", %string.676378* (%"Array<Enum>.676702"*, %string.676378*)* @"Array<Enum>_join", %string.676378* (%"Array<Enum>.676702"*)* @"Array<Enum>___as_string__" }
@str.230 = private unnamed_addr constant [6 x i8] c"@Enum\00"
@"Array<Scope>_vtable_data" = global %"Array<Scope>_vtable_ty.676710" { void (%"Array<Scope>.676703"*)* @"Array<Scope>_resize", void (%"Array<Scope>.676703"*, i64, i64)* @"Array<Scope>_swap", void (%"Array<Scope>.676703"*, %Scope.676628*)* @"Array<Scope>___sl__", void (%"Array<Scope>.676703"*, i64, %Scope.676628*)* @"Array<Scope>___setitem__", void (%"Array<Scope>.676703"*, %Scope.676628*)* @"Array<Scope>_append", %Scope.676628* (%"Array<Scope>.676703"*, i64)* @"Array<Scope>___getitem__", i1 (%"Array<Scope>.676703"*, %"Array<Scope>.676703"*)* @"Array<Scope>___eq__", i1 (%"Array<Scope>.676703"*, %Scope.676628*)* @"Array<Scope>___in__", i64 (%"Array<Scope>.676703"*, %Scope.676628*)* @"Array<Scope>_find", %string.676378* (%"Array<Scope>.676703"*, %string.676378*)* @"Array<Scope>_join", %string.676378* (%"Array<Scope>.676703"*)* @"Array<Scope>___as_string__" }
@str.231 = private unnamed_addr constant [7 x i8] c"@Scope\00"
@"Array<ConstDeclaration>_vtable_data" = global %"Array<ConstDeclaration>_vtable_ty.676711" { void (%"Array<ConstDeclaration>.676704"*)* @"Array<ConstDeclaration>_resize", void (%"Array<ConstDeclaration>.676704"*, i64, i64)* @"Array<ConstDeclaration>_swap", void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)* @"Array<ConstDeclaration>___sl__", void (%"Array<ConstDeclaration>.676704"*, i64, %ConstDeclaration.676618*)* @"Array<ConstDeclaration>___setitem__", void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)* @"Array<ConstDeclaration>_append", %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)* @"Array<ConstDeclaration>___getitem__", i1 (%"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"*)* @"Array<ConstDeclaration>___eq__", i1 (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)* @"Array<ConstDeclaration>___in__", i64 (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)* @"Array<ConstDeclaration>_find", %string.676378* (%"Array<ConstDeclaration>.676704"*, %string.676378*)* @"Array<ConstDeclaration>_join", %string.676378* (%"Array<ConstDeclaration>.676704"*)* @"Array<ConstDeclaration>___as_string__" }
@str.232 = private unnamed_addr constant [18 x i8] c"@ConstDeclaration\00"
@Module_vtable_data = global %Module_vtable_ty.676697 zeroinitializer
@"Array<Module>_vtable_data" = global %"Array<Module>_vtable_ty.676715" { void (%"Array<Module>.676714"*)* @"Array<Module>_resize", void (%"Array<Module>.676714"*, i64, i64)* @"Array<Module>_swap", void (%"Array<Module>.676714"*, %Module.676696*)* @"Array<Module>___sl__", void (%"Array<Module>.676714"*, i64, %Module.676696*)* @"Array<Module>___setitem__", void (%"Array<Module>.676714"*, %Module.676696*)* @"Array<Module>_append", %Module.676696* (%"Array<Module>.676714"*, i64)* @"Array<Module>___getitem__", i1 (%"Array<Module>.676714"*, %"Array<Module>.676714"*)* @"Array<Module>___eq__", i1 (%"Array<Module>.676714"*, %Module.676696*)* @"Array<Module>___in__", i64 (%"Array<Module>.676714"*, %Module.676696*)* @"Array<Module>_find", %string.676378* (%"Array<Module>.676714"*, %string.676378*)* @"Array<Module>_join", %string.676378* (%"Array<Module>.676714"*)* @"Array<Module>___as_string__" }
@str.233 = private unnamed_addr constant [8 x i8] c"@Module\00"
@Program_vtable_data = global %Program_vtable_ty.676713 zeroinitializer
@str.234 = private unnamed_addr constant [7 x i8] c"__eq__\00"
@str.235 = private unnamed_addr constant [8 x i8] c"__add__\00"
@str.236 = private unnamed_addr constant [8 x i8] c"__sub__\00"
@str.237 = private unnamed_addr constant [8 x i8] c"__mul__\00"
@str.238 = private unnamed_addr constant [8 x i8] c"__div__\00"
@str.239 = private unnamed_addr constant [7 x i8] c"__or__\00"
@str.240 = private unnamed_addr constant [9 x i8] c"__adda__\00"
@str.241 = private unnamed_addr constant [9 x i8] c"__suba__\00"
@str.242 = private unnamed_addr constant [9 x i8] c"__mula__\00"
@str.243 = private unnamed_addr constant [9 x i8] c"__diva__\00"
@str.244 = private unnamed_addr constant [8 x i8] c"__ora__\00"
@str.245 = private unnamed_addr constant [9 x i8] c"__anda__\00"
@str.246 = private unnamed_addr constant [9 x i8] c"__xora__\00"
@str.247 = private unnamed_addr constant [12 x i8] c"__getitem__\00"
@str.248 = private unnamed_addr constant [12 x i8] c"__setitem__\00"
@str.249 = private unnamed_addr constant [7 x i8] c"__sl__\00"
@str.250 = private unnamed_addr constant [7 x i8] c"__sr__\00"
@str.251 = private unnamed_addr constant [8 x i8] c"__sla__\00"
@str.252 = private unnamed_addr constant [8 x i8] c"__sra__\00"
@str.253 = private unnamed_addr constant [7 x i8] c"__in__\00"
@str.254 = private unnamed_addr constant [7 x i8] c"__lt__\00"
@str.255 = private unnamed_addr constant [7 x i8] c"__lg__\00"
@str.256 = private unnamed_addr constant [7 x i8] c"__ne__\00"
@str.257 = private unnamed_addr constant [7 x i8] c"__le__\00"
@str.258 = private unnamed_addr constant [7 x i8] c"__ge__\00"
@str.259 = private unnamed_addr constant [8 x i8] c"__pow__\00"
@str.260 = private unnamed_addr constant [8 x i8] c"__mod__\00"
@str.261 = private unnamed_addr constant [9 x i8] c"__powa__\00"
@str.262 = private unnamed_addr constant [9 x i8] c"__moda__\00"
@str.263 = private unnamed_addr constant [7 x i8] c"__gt__\00"
@str.264 = private unnamed_addr constant [8 x i8] c"__and__\00"
@str.265 = private unnamed_addr constant [8 x i8] c"__xor__\00"
@"Bucket<string, ClassDeclarationNode>_vtable_data" = global %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721" { void (%"Bucket<string, ClassDeclarationNode>.676720"*, %string.676378*, %ClassDeclarationNode.676500*)* @"Bucket<string, ClassDeclarationNode>_set" }
@"Array<Bucket<string, ClassDeclarationNode>>_vtable_data" = global %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723" { void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*)* @"Array<Bucket<string, ClassDeclarationNode>>_resize", void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64, i64)* @"Array<Bucket<string, ClassDeclarationNode>>_swap", void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)* @"Array<Bucket<string, ClassDeclarationNode>>___sl__", void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64, %"Bucket<string, ClassDeclarationNode>.676720"*)* @"Array<Bucket<string, ClassDeclarationNode>>___setitem__", void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)* @"Array<Bucket<string, ClassDeclarationNode>>_append", %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)* @"Array<Bucket<string, ClassDeclarationNode>>___getitem__", i1 (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Array<Bucket<string, ClassDeclarationNode>>.676722"*)* @"Array<Bucket<string, ClassDeclarationNode>>___eq__", i1 (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)* @"Array<Bucket<string, ClassDeclarationNode>>___in__", i64 (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)* @"Array<Bucket<string, ClassDeclarationNode>>_find", %string.676378* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %string.676378*)* @"Array<Bucket<string, ClassDeclarationNode>>_join", %string.676378* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*)* @"Array<Bucket<string, ClassDeclarationNode>>___as_string__" }
@str.266 = private unnamed_addr constant [38 x i8] c"@Bucket<string, ClassDeclarationNode>\00"
@"Map<string, ClassDeclarationNode>_vtable_data" = global %"Map<string, ClassDeclarationNode>_vtable_ty.676719" { i64 (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)* @"Map<string, ClassDeclarationNode>_hash_fnc", void (%"Map<string, ClassDeclarationNode>.676718"*)* @"Map<string, ClassDeclarationNode>_resize", void (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*, %ClassDeclarationNode.676500*)* @"Map<string, ClassDeclarationNode>_set", %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)* @"Map<string, ClassDeclarationNode>_get", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* (%"Map<string, ClassDeclarationNode>.676718"*)* @"Map<string, ClassDeclarationNode>_get_buckets" }
@TypeChecker_vtable_data = global %TypeChecker_vtable_ty.676717 { %Module.676696* (%TypeChecker.676716*, i64)* @TypeChecker_get_module, %Module.676696* (%TypeChecker.676716*)* @TypeChecker_get_current_module, %Scope.676628* (%TypeChecker.676716*)* @TypeChecker_get_current_scope, %Scope.676628* (%TypeChecker.676716*)* @TypeChecker_get_current_module_global_scope, %Function.676656* (%TypeChecker.676716*)* @TypeChecker_get_current_function, %FunctionType.676544* (%TypeChecker.676716*)* @TypeChecker_get_current_function_type, %Class.676668* (%TypeChecker.676716*)* @TypeChecker_get_current_class, %Class.676668* (%TypeChecker.676716*, %VarId.676596*)* @TypeChecker_get_class_from_var_id, %Enum.676682* (%TypeChecker.676716*, %VarId.676596*)* @TypeChecker_get_enum_from_var_id, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)* @TypeChecker_types_are_eq, %string.676378* (%TypeChecker.676716*, %Type.676538*)* @TypeChecker_dump_type, %Scope.676628* (%TypeChecker.676716*)* @TypeChecker_create_scope, i1 (%TypeChecker.676716*, %string.676378*)* @TypeChecker_is_constant_in_scope, %VarId.676596* (%TypeChecker.676716*, %string.676378*)* @TypeChecker_get_var_from_current_scope, %Type.676538* (%TypeChecker.676716*, %string.676378*)* @TypeChecker_get_type_from_current_scope, %Scope.676628* (%TypeChecker.676716*)* @TypeChecker_create_child_scope_within_current_scope, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)* @TypeChecker_error, i1 (%TypeChecker.676716*)* @TypeChecker_has_errored, %Program.676712* (%TypeChecker.676716*, %ModuleAST.676520*, %Compiler.676394*, %string.676378*)* @TypeChecker_check, %Module.676696* (%TypeChecker.676716*, %ModuleAST.676520*, %string.676378*)* @TypeChecker_check_module, void (%TypeChecker.676716*)* @TypeChecker_include_builtins, %Type.676538* (%TypeChecker.676716*, %string.676378*, %"Array<Type>.676546"*)* @TypeChecker_create_generic_instance_in_module, %Var.676660* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)* @TypeChecker_declare_var_within_current_scope, %Const.676662* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)* @TypeChecker_declare_const_within_current_scope, void (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)* @TypeChecker_declare_global_const, void (%TypeChecker.676716*, %VarDeclarationStatement.676484*)* @TypeChecker_declare_global_var, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)* @TypeChecker_add_imported_var_to_module, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)* @TypeChecker_add_imported_fnc_to_module, void (%TypeChecker.676716*, %string.676378*, %ClassId.676554*)* @TypeChecker_add_imported_class_to_module, void (%TypeChecker.676716*, %string.676378*, %EnumId.676556*)* @TypeChecker_add_imported_enum_to_module, void (%TypeChecker.676716*, %string.676378*, %Type.676538*)* @TypeChecker_add_imported_typealias_to_module, %FunctionType.676544* (%TypeChecker.676716*, %"Array<ArgNode>.676492"*, %TypeNode.676426*, %"Array<FunctionArg>.676658"*)* @TypeChecker_init_function_signature, void (%TypeChecker.676716*, %Module.676696*)* @TypeChecker_import_all_from_module, void (%TypeChecker.676716*, %ImportNode.676514*)* @TypeChecker_check_module_import, %Module.676696* (%TypeChecker.676716*, %string.676378*, %FloRange.676382*)* @TypeChecker_lex_and_parse_typecheck_file, void (%TypeChecker.676716*, %EnumNode.676510*)* @TypeChecker_declare_enum_within_current_scope, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)* @TypeChecker_declare_class_within_module, void (%TypeChecker.676716*, %FunctionDeclarationNode.676490*)* @TypeChecker_declare_function_within_current_scope, void (%TypeChecker.676716*, %Enum.676682*, %EnumNode.676510*)* @TypeChecker_check_enum_body, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)* @TypeChecker_declare_class_fields, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)* @TypeChecker_declare_class_methods, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)* @TypeChecker_add_inherited_props_to_class, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)* @TypeChecker_check_class_body, void (%TypeChecker.676716*, %Function.676656*, %FunctionDeclarationNode.676490*)* @TypeChecker_check_function_body, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)* @TypeChecker_check_type, %ArrayExpression.676578* (%TypeChecker.676716*, %Type.676538*, %ArrayExpressionNode.676458*)* @TypeChecker_check_array_expression, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %VarAccessExpressionNode.676456*)* @TypeChecker_check_var_access_expr, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %Expression.676558*, %BinaryExpressionNode.676470*)* @TypeChecker_check_assignment, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)* @TypeChecker_check_object_bin_assign, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*, %Expression.676558*)* @TypeChecker_check_object_binary_expr, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)* @TypeChecker_check_object_setitem_expr, %BinaryExpression.676580* (%TypeChecker.676716*, %Type.676538*, %BinaryExpressionNode.676470*)* @TypeChecker_check_bin_expr, %UnaryExpression.676582* (%TypeChecker.676716*, %Type.676538*, %UnaryExpressionNode.676474*)* @TypeChecker_check_unary_expr, %TypeCastExpression.676586* (%TypeChecker.676716*, %TypeCastExpressionNode.676468*)* @TypeChecker_check_typecast_expr, %string.676378* (%TypeChecker.676716*, %ClassId.676554*, %"Array<ExpressionNode>.676454"*, %"Array<Expression>.676574"**)* @TypeChecker_check_constructor_call, %NewExpression.676588* (%TypeChecker.676716*, %NewExpressionNode.676460*)* @TypeChecker_check_new_expr, %string.676378* (%TypeChecker.676716*, %PropId.676604*)* @TypeChecker_check_member_access, %MemberExpression.676606* (%TypeChecker.676716*, %Type.676538*, %MemberExpressionNode.676464*)* @TypeChecker_check_member_expr, %TernaryExpression.676584* (%TypeChecker.676716*, %Type.676538*, %TernaryExpressionNode.676472*)* @TypeChecker_check_ternary_expr, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %ExpressionIndexNode.676462*)* @TypeChecker_check_object_index_expr, %IndexExpression.676590* (%TypeChecker.676716*, %Type.676538*, %ExpressionIndexNode.676462*)* @TypeChecker_check_index_expr, %"Array<FunctionArg>.676658"* (%TypeChecker.676716*, %Expression.676558*)* @TypeChecker_get_func_args_from_expression, %"Array<Expression>.676574"* (%TypeChecker.676716*, %FunctionType.676544*, %"Array<FunctionArg>.676658"*, %"Array<ExpressionNode>.676454"*)* @TypeChecker_fill_in_call_args, i64 (%TypeChecker.676716*, %FunctionType.676544*, %"Array<Expression>.676574"*)* @TypeChecker_check_function_call_args_match, %CallExpression.676592* (%TypeChecker.676716*, %Type.676538*, %CallExpressionNode.676466*)* @TypeChecker_check_call_expr, %IntrinsicCall.676594* (%TypeChecker.676716*, %IntrinsicCall.676594*, %CallExpressionNode.676466*)* @TypeChecker_check_intrinsic_call, %IntExpression.676566* (%TypeChecker.676716*, %Type.676538*, %IntExpressionNode.676446*)* @TypeChecker_check_int_expression, %FloatExpression.676570* (%TypeChecker.676716*, %Type.676538*, %FloatExpressionNode.676448*)* @TypeChecker_check_float_expression, %IntExpression.676566* (%TypeChecker.676716*, %CharExpressionNode.676450*)* @TypeChecker_check_char_expression, %StringExpression.676572* (%TypeChecker.676716*, %Type.676538*, %StringExpressionNode.676452*)* @TypeChecker_check_string_expression, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)* @TypeChecker_check_expression, %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)* @TypeChecker_check_condition, %IfStatement.676614* (%TypeChecker.676716*, %IfStatementNode.676476*)* @TypeChecker_check_if_stamement, %VarDeclaration.676616* (%TypeChecker.676716*, %VarDeclarationStatement.676484*)* @TypeChecker_check_var_declaration, %ConstDeclaration.676618* (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)* @TypeChecker_check_const_declaration, %ForStatement.676620* (%TypeChecker.676716*, %ForStatementNode.676480*)* @TypeChecker_check_for_statement, %WhileStatement.676622* (%TypeChecker.676716*, %WhileStatementNode.676478*)* @TypeChecker_check_while_statment, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)* @TypeChecker_check_can_break, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)* @TypeChecker_check_can_continue, %ReturnStatement.676624* (%TypeChecker.676716*, %ReturnStatementNode.676482*)* @TypeChecker_check_can_return, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)* @TypeChecker_check_statement, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)* @TypeChecker_check_block }
@str.267 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00"
@str.268 = private unnamed_addr constant [4 x i8] c"%s*\00"
@str.269 = private unnamed_addr constant [7 x i8] c"%s[%d]\00"
@str.270 = private unnamed_addr constant [5 x i8] c"true\00"
@str.271 = private unnamed_addr constant [6 x i8] c"false\00"
@str.272 = private unnamed_addr constant [5 x i8] c"null\00"
@str.273 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00"
@str.274 = private unnamed_addr constant [41 x i8] c"Generic expects %d parameters but got %d\00"
@str.275 = private unnamed_addr constant [3 x i8] c"%s\00"
@str.276 = private unnamed_addr constant [7 x i8] c"%s<%s>\00"
@str.277 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00"
@str.278 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00"
@str.279 = private unnamed_addr constant [52 x i8] c"Import statement path can't be a a formatted string\00"
@str.280 = private unnamed_addr constant [28 x i8] c"%s not found in module \22%s\22\00"
@str.281 = private unnamed_addr constant [2 x i8] c"@\00"
@str.282 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00"
@str.283 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s+\00"
@str.284 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00"
@str.285 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00"
@str.286 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00"
@str.287 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00"
@str.288 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00"
@str.289 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00"
@str.290 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00"
@str.291 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00"
@str.292 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00"
@str.293 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00"
@str.294 = private unnamed_addr constant [65 x i8] c"Expected %d arguments for binary operator overload %s but got %d\00"
@str.295 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00"
@str.296 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00"
@str.297 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00"
@str.298 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00"
@str.299 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00"
@str.300 = private unnamed_addr constant [12 x i8] c"constructor\00"
@str.301 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00"
@str.302 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00"
@str.303 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00"
@str.304 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00"
@str.305 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00"
@str.306 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00"
@str.307 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00"
@str.308 = private unnamed_addr constant [17 x i8] c"length is an int\00"
@str.309 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00"
@str.310 = private unnamed_addr constant [32 x i8] c"length should be greater than 0\00"
@str.311 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00"
@str.312 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00"
@str.313 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00"
@str.314 = private unnamed_addr constant [34 x i8] c"Cannot assign a value to a record\00"
@str.315 = private unnamed_addr constant [36 x i8] c"Cannot assign a value to a constant\00"
@str.316 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00"
@str.317 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00"
@str.318 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00"
@str.319 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00"
@str.320 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00"
@str.321 = private unnamed_addr constant [6 x i8] c"Range\00"
@str.322 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00"
@str.323 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00"
@str.324 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00"
@str.325 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00"
@str.326 = private unnamed_addr constant [55 x i8] c"Expected %d argument(s) on constructor call but got %d\00"
@str.327 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00"
@str.328 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %d argument(s)\00"
@str.329 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00"
@str.330 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00"
@str.331 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00"
@str.332 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00"
@str.333 = private unnamed_addr constant [50 x i8] c"Property '%s' is not a static member in class '%s\00"
@str.334 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00"
@str.335 = private unnamed_addr constant [10 x i8] c"copy_from\00"
@str.336 = private unnamed_addr constant [10 x i8] c"move_from\00"
@str.337 = private unnamed_addr constant [10 x i8] c"fill_with\00"
@str.338 = private unnamed_addr constant [7 x i8] c"resize\00"
@str.339 = private unnamed_addr constant [8 x i8] c"compare\00"
@str.340 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00"
@str.341 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00"
@str.342 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00"
@str.343 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00"
@str.344 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00"
@str.345 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00"
@str.346 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00"
@str.347 = private unnamed_addr constant [52 x i8] c"Expected %d argument(s) on function call but got %d\00"
@str.348 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00"
@str.349 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00"
@str.350 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %d\00"
@str.351 = private unnamed_addr constant [63 x i8] c"Expected an int of but got type '%s' as function call argument\00"
@str.352 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %d\00"
@str.353 = private unnamed_addr constant [66 x i8] c"Expected type '%s' of but got type '%s' as function call argument\00"
@str.354 = private unnamed_addr constant [7 x i8] c"string\00"
@str.355 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00"
@str.356 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00"
@str.357 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00"
@str.358 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00"
@str.359 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00"
@str.360 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00"
@str.361 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00"
@str.362 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00"
@str.363 = private unnamed_addr constant [55 x i8] c"Function with void return type cannot return any value\00"
@str.364 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00"
@str.365 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00"
@"Array<LLVMMetadataRef>_vtable_data" = local_unnamed_addr global %"Array<LLVMMetadataRef>_vtable_ty.676755" { void (%"Array<LLVMMetadataRef>.676754"*)* @"Array<LLVMMetadataRef>_resize", void (%"Array<LLVMMetadataRef>.676754"*, i64, i64)* @"Array<LLVMMetadataRef>_swap", void (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)* @"Array<LLVMMetadataRef>___sl__", void (%"Array<LLVMMetadataRef>.676754"*, i64, %LLVMMetadataRef.676730*)* @"Array<LLVMMetadataRef>___setitem__", void (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)* @"Array<LLVMMetadataRef>_append", %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)* @"Array<LLVMMetadataRef>___getitem__", i1 (%"Array<LLVMMetadataRef>.676754"*, %"Array<LLVMMetadataRef>.676754"*)* @"Array<LLVMMetadataRef>___eq__", i1 (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)* @"Array<LLVMMetadataRef>___in__", i64 (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)* @"Array<LLVMMetadataRef>_find", %string.676378* (%"Array<LLVMMetadataRef>.676754"*, %string.676378*)* @"Array<LLVMMetadataRef>_join", %string.676378* (%"Array<LLVMMetadataRef>.676754"*)* @"Array<LLVMMetadataRef>___as_string__" }
@str.366 = private unnamed_addr constant [17 x i8] c"@LLVMMetadataRef\00"
@DebugInfo_vtable_data = global %DebugInfo_vtable_ty.676753 { void (%DebugInfo.676752*)* @DebugInfo_finalize }
@str.367 = private unnamed_addr constant [2 x i8] c".\00"
@str.368 = private unnamed_addr constant [13 x i8] c"Flo Compiler\00"
@GeneratedModule_vtable_data = global %GeneratedModule_vtable_ty.676757 { void (%GeneratedModule.676756*)* @GeneratedModule_check_errors, void (%GeneratedModule.676756*, i64)* @GeneratedModule_run_passes, void (%GeneratedModule.676756*)* @GeneratedModule_exec, %LLVMTargetMachineRef.676746* (%GeneratedModule.676756*, %string.676378*)* @GeneratedModule_create_target_machine, void (%GeneratedModule.676756*, %string.676378*, %string.676378*)* @GeneratedModule_write_object, void (%GeneratedModule.676756*)* @GeneratedModule_print, %LLVMModuleRef.676726* (%GeneratedModule.676756*)* @GeneratedModule_copy_llvm_module, void (%GeneratedModule.676756*)* @GeneratedModule_destroy }
@str.369 = private unnamed_addr constant [10 x i8] c"error: %s\00"
@str.370 = private unnamed_addr constant [34 x i8] c"failed to create execution engine\00"
@str.371 = private unnamed_addr constant [5 x i8] c"main\00"
@str.372 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00"
@str.373 = private unnamed_addr constant [21 x i8] c"Exited with code: %d\00"
@str.374 = private unnamed_addr constant [32 x i8] c"failed to get target triple: %s\00"
@str.375 = private unnamed_addr constant [8 x i8] c"generic\00"
@str.376 = private unnamed_addr constant [42 x i8] c"target machine failed to emit object code\00"
@IntrinsicResult_vtable_data = global %IntrinsicResult_vtable_ty.676759 zeroinitializer
@"Bucket<string, int>_vtable_data" = global %"Bucket<string, int>_vtable_ty.676766" { void (%"Bucket<string, int>.676765"*, %string.676378*, i64)* @"Bucket<string, int>_set" }
@"Array<Bucket<string, int>>_vtable_data" = global %"Array<Bucket<string, int>>_vtable_ty.676768" { void (%"Array<Bucket<string, int>>.676767"*)* @"Array<Bucket<string, int>>_resize", void (%"Array<Bucket<string, int>>.676767"*, i64, i64)* @"Array<Bucket<string, int>>_swap", void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)* @"Array<Bucket<string, int>>___sl__", void (%"Array<Bucket<string, int>>.676767"*, i64, %"Bucket<string, int>.676765"*)* @"Array<Bucket<string, int>>___setitem__", void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)* @"Array<Bucket<string, int>>_append", %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)* @"Array<Bucket<string, int>>___getitem__", i1 (%"Array<Bucket<string, int>>.676767"*, %"Array<Bucket<string, int>>.676767"*)* @"Array<Bucket<string, int>>___eq__", i1 (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)* @"Array<Bucket<string, int>>___in__", i64 (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)* @"Array<Bucket<string, int>>_find", %string.676378* (%"Array<Bucket<string, int>>.676767"*, %string.676378*)* @"Array<Bucket<string, int>>_join", %string.676378* (%"Array<Bucket<string, int>>.676767"*)* @"Array<Bucket<string, int>>___as_string__" }
@str.377 = private unnamed_addr constant [21 x i8] c"@Bucket<string, int>\00"
@"Map<string, int>_vtable_data" = global %"Map<string, int>_vtable_ty.676764" { i64 (%"Map<string, int>.676762"*, %string.676378*)* @"Map<string, int>_hash_fnc", void (%"Map<string, int>.676762"*)* @"Map<string, int>_resize", void (%"Map<string, int>.676762"*, %string.676378*, i64)* @"Map<string, int>_set", i64 (%"Map<string, int>.676762"*, %string.676378*)* @"Map<string, int>_get", %"Array<Bucket<string, int>>.676767"* (%"Map<string, int>.676762"*)* @"Map<string, int>_get_buckets" }
@"Bucket<string, LLVMValueRef>_vtable_data" = global %"Bucket<string, LLVMValueRef>_vtable_ty.676771" { void (%"Bucket<string, LLVMValueRef>.676770"*, %string.676378*, %LLVMValueRef.676728*)* @"Bucket<string, LLVMValueRef>_set" }
@"Array<Bucket<string, LLVMValueRef>>_vtable_data" = global %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773" { void (%"Array<Bucket<string, LLVMValueRef>>.676772"*)* @"Array<Bucket<string, LLVMValueRef>>_resize", void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64, i64)* @"Array<Bucket<string, LLVMValueRef>>_swap", void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)* @"Array<Bucket<string, LLVMValueRef>>___sl__", void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64, %"Bucket<string, LLVMValueRef>.676770"*)* @"Array<Bucket<string, LLVMValueRef>>___setitem__", void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)* @"Array<Bucket<string, LLVMValueRef>>_append", %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)* @"Array<Bucket<string, LLVMValueRef>>___getitem__", i1 (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Array<Bucket<string, LLVMValueRef>>.676772"*)* @"Array<Bucket<string, LLVMValueRef>>___eq__", i1 (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)* @"Array<Bucket<string, LLVMValueRef>>___in__", i64 (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)* @"Array<Bucket<string, LLVMValueRef>>_find", %string.676378* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %string.676378*)* @"Array<Bucket<string, LLVMValueRef>>_join", %string.676378* (%"Array<Bucket<string, LLVMValueRef>>.676772"*)* @"Array<Bucket<string, LLVMValueRef>>___as_string__" }
@str.378 = private unnamed_addr constant [30 x i8] c"@Bucket<string, LLVMValueRef>\00"
@"Map<string, LLVMValueRef>_vtable_data" = global %"Map<string, LLVMValueRef>_vtable_ty.676769" { i64 (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)* @"Map<string, LLVMValueRef>_hash_fnc", void (%"Map<string, LLVMValueRef>.676763"*)* @"Map<string, LLVMValueRef>_resize", void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)* @"Map<string, LLVMValueRef>_set", %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)* @"Map<string, LLVMValueRef>_get", %"Array<Bucket<string, LLVMValueRef>>.676772"* (%"Map<string, LLVMValueRef>.676763"*)* @"Map<string, LLVMValueRef>_get_buckets" }
@CGClassType_vtable_data = global %CGClassType_vtable_ty.676761 zeroinitializer
@CGEnumType_vtable_data = global %CGEnumType_vtable_ty.676775 zeroinitializer
@"Array<LLVMTypeRef>_vtable_data" = global %"Array<LLVMTypeRef>_vtable_ty.676777" { void (%"Array<LLVMTypeRef>.676776"*)* @"Array<LLVMTypeRef>_resize", void (%"Array<LLVMTypeRef>.676776"*, i64, i64)* @"Array<LLVMTypeRef>_swap", void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)* @"Array<LLVMTypeRef>___sl__", void (%"Array<LLVMTypeRef>.676776"*, i64, %LLVMTypeRef.676727*)* @"Array<LLVMTypeRef>___setitem__", void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)* @"Array<LLVMTypeRef>_append", %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)* @"Array<LLVMTypeRef>___getitem__", i1 (%"Array<LLVMTypeRef>.676776"*, %"Array<LLVMTypeRef>.676776"*)* @"Array<LLVMTypeRef>___eq__", i1 (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)* @"Array<LLVMTypeRef>___in__", i64 (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)* @"Array<LLVMTypeRef>_find", %string.676378* (%"Array<LLVMTypeRef>.676776"*, %string.676378*)* @"Array<LLVMTypeRef>_join", %string.676378* (%"Array<LLVMTypeRef>.676776"*)* @"Array<LLVMTypeRef>___as_string__" }
@str.379 = private unnamed_addr constant [13 x i8] c"@LLVMTypeRef\00"
@str.380 = private unnamed_addr constant [9 x i8] c"%d;%d;%d\00"
@str.381 = private unnamed_addr constant [9 x i8] c"%s;%d;%d\00"
@"Array<LLVMValueRef>_vtable_data" = global %"Array<LLVMValueRef>_vtable_ty.676779" { void (%"Array<LLVMValueRef>.676778"*)* @"Array<LLVMValueRef>_resize", void (%"Array<LLVMValueRef>.676778"*, i64, i64)* @"Array<LLVMValueRef>_swap", void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)* @"Array<LLVMValueRef>___sl__", void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)* @"Array<LLVMValueRef>___setitem__", void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)* @"Array<LLVMValueRef>_append", %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)* @"Array<LLVMValueRef>___getitem__", i1 (%"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"*)* @"Array<LLVMValueRef>___eq__", i1 (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)* @"Array<LLVMValueRef>___in__", i64 (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)* @"Array<LLVMValueRef>_find", %string.676378* (%"Array<LLVMValueRef>.676778"*, %string.676378*)* @"Array<LLVMValueRef>_join", %string.676378* (%"Array<LLVMValueRef>.676778"*)* @"Array<LLVMValueRef>___as_string__" }
@str.382 = private unnamed_addr constant [14 x i8] c"@LLVMValueRef\00"
@str.383 = private unnamed_addr constant [4 x i8] c"lld\00"
@str.384 = private unnamed_addr constant [3 x i8] c"ld\00"
@str.385 = private unnamed_addr constant [3 x i8] c"%d\00"
@str.386 = private unnamed_addr constant [3 x i8] c"%f\00"
@str.387 = private unnamed_addr constant [4 x i8] c"%lf\00"
@str.388 = private unnamed_addr constant [3 x i8] c"%p\00"
@"Array<LLVMModuleRef>_vtable_data" = global %"Array<LLVMModuleRef>_vtable_ty.676786" { void (%"Array<LLVMModuleRef>.676782"*)* @"Array<LLVMModuleRef>_resize", void (%"Array<LLVMModuleRef>.676782"*, i64, i64)* @"Array<LLVMModuleRef>_swap", void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)* @"Array<LLVMModuleRef>___sl__", void (%"Array<LLVMModuleRef>.676782"*, i64, %LLVMModuleRef.676726*)* @"Array<LLVMModuleRef>___setitem__", void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)* @"Array<LLVMModuleRef>_append", %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)* @"Array<LLVMModuleRef>___getitem__", i1 (%"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"*)* @"Array<LLVMModuleRef>___eq__", i1 (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)* @"Array<LLVMModuleRef>___in__", i64 (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)* @"Array<LLVMModuleRef>_find", %string.676378* (%"Array<LLVMModuleRef>.676782"*, %string.676378*)* @"Array<LLVMModuleRef>_join", %string.676378* (%"Array<LLVMModuleRef>.676782"*)* @"Array<LLVMModuleRef>___as_string__" }
@str.389 = private unnamed_addr constant [15 x i8] c"@LLVMModuleRef\00"
@"Bucket<string, IntrinsicResult>_vtable_data" = global %"Bucket<string, IntrinsicResult>_vtable_ty.676789" { void (%"Bucket<string, IntrinsicResult>.676788"*, %string.676378*, %IntrinsicResult.676758*)* @"Bucket<string, IntrinsicResult>_set" }
@"Array<Bucket<string, IntrinsicResult>>_vtable_data" = global %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791" { void (%"Array<Bucket<string, IntrinsicResult>>.676790"*)* @"Array<Bucket<string, IntrinsicResult>>_resize", void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64, i64)* @"Array<Bucket<string, IntrinsicResult>>_swap", void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)* @"Array<Bucket<string, IntrinsicResult>>___sl__", void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64, %"Bucket<string, IntrinsicResult>.676788"*)* @"Array<Bucket<string, IntrinsicResult>>___setitem__", void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)* @"Array<Bucket<string, IntrinsicResult>>_append", %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)* @"Array<Bucket<string, IntrinsicResult>>___getitem__", i1 (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Array<Bucket<string, IntrinsicResult>>.676790"*)* @"Array<Bucket<string, IntrinsicResult>>___eq__", i1 (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)* @"Array<Bucket<string, IntrinsicResult>>___in__", i64 (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)* @"Array<Bucket<string, IntrinsicResult>>_find", %string.676378* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %string.676378*)* @"Array<Bucket<string, IntrinsicResult>>_join", %string.676378* (%"Array<Bucket<string, IntrinsicResult>>.676790"*)* @"Array<Bucket<string, IntrinsicResult>>___as_string__" }
@str.390 = private unnamed_addr constant [33 x i8] c"@Bucket<string, IntrinsicResult>\00"
@"Map<string, IntrinsicResult>_vtable_data" = global %"Map<string, IntrinsicResult>_vtable_ty.676787" { i64 (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)* @"Map<string, IntrinsicResult>_hash_fnc", void (%"Map<string, IntrinsicResult>.676783"*)* @"Map<string, IntrinsicResult>_resize", void (%"Map<string, IntrinsicResult>.676783"*, %string.676378*, %IntrinsicResult.676758*)* @"Map<string, IntrinsicResult>_set", %IntrinsicResult.676758* (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)* @"Map<string, IntrinsicResult>_get", %"Array<Bucket<string, IntrinsicResult>>.676790"* (%"Map<string, IntrinsicResult>.676783"*)* @"Map<string, IntrinsicResult>_get_buckets" }
@"Bucket<string, CGClassType>_vtable_data" = global %"Bucket<string, CGClassType>_vtable_ty.676794" { void (%"Bucket<string, CGClassType>.676793"*, %string.676378*, %CGClassType.676760*)* @"Bucket<string, CGClassType>_set" }
@"Array<Bucket<string, CGClassType>>_vtable_data" = global %"Array<Bucket<string, CGClassType>>_vtable_ty.676796" { void (%"Array<Bucket<string, CGClassType>>.676795"*)* @"Array<Bucket<string, CGClassType>>_resize", void (%"Array<Bucket<string, CGClassType>>.676795"*, i64, i64)* @"Array<Bucket<string, CGClassType>>_swap", void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)* @"Array<Bucket<string, CGClassType>>___sl__", void (%"Array<Bucket<string, CGClassType>>.676795"*, i64, %"Bucket<string, CGClassType>.676793"*)* @"Array<Bucket<string, CGClassType>>___setitem__", void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)* @"Array<Bucket<string, CGClassType>>_append", %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)* @"Array<Bucket<string, CGClassType>>___getitem__", i1 (%"Array<Bucket<string, CGClassType>>.676795"*, %"Array<Bucket<string, CGClassType>>.676795"*)* @"Array<Bucket<string, CGClassType>>___eq__", i1 (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)* @"Array<Bucket<string, CGClassType>>___in__", i64 (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)* @"Array<Bucket<string, CGClassType>>_find", %string.676378* (%"Array<Bucket<string, CGClassType>>.676795"*, %string.676378*)* @"Array<Bucket<string, CGClassType>>_join", %string.676378* (%"Array<Bucket<string, CGClassType>>.676795"*)* @"Array<Bucket<string, CGClassType>>___as_string__" }
@str.391 = private unnamed_addr constant [29 x i8] c"@Bucket<string, CGClassType>\00"
@"Map<string, CGClassType>_vtable_data" = global %"Map<string, CGClassType>_vtable_ty.676792" { i64 (%"Map<string, CGClassType>.676784"*, %string.676378*)* @"Map<string, CGClassType>_hash_fnc", void (%"Map<string, CGClassType>.676784"*)* @"Map<string, CGClassType>_resize", void (%"Map<string, CGClassType>.676784"*, %string.676378*, %CGClassType.676760*)* @"Map<string, CGClassType>_set", %CGClassType.676760* (%"Map<string, CGClassType>.676784"*, %string.676378*)* @"Map<string, CGClassType>_get", %"Array<Bucket<string, CGClassType>>.676795"* (%"Map<string, CGClassType>.676784"*)* @"Map<string, CGClassType>_get_buckets" }
@"Bucket<string, CGEnumType>_vtable_data" = global %"Bucket<string, CGEnumType>_vtable_ty.676799" { void (%"Bucket<string, CGEnumType>.676798"*, %string.676378*, %CGEnumType.676774*)* @"Bucket<string, CGEnumType>_set" }
@"Array<Bucket<string, CGEnumType>>_vtable_data" = global %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801" { void (%"Array<Bucket<string, CGEnumType>>.676800"*)* @"Array<Bucket<string, CGEnumType>>_resize", void (%"Array<Bucket<string, CGEnumType>>.676800"*, i64, i64)* @"Array<Bucket<string, CGEnumType>>_swap", void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)* @"Array<Bucket<string, CGEnumType>>___sl__", void (%"Array<Bucket<string, CGEnumType>>.676800"*, i64, %"Bucket<string, CGEnumType>.676798"*)* @"Array<Bucket<string, CGEnumType>>___setitem__", void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)* @"Array<Bucket<string, CGEnumType>>_append", %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)* @"Array<Bucket<string, CGEnumType>>___getitem__", i1 (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Array<Bucket<string, CGEnumType>>.676800"*)* @"Array<Bucket<string, CGEnumType>>___eq__", i1 (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)* @"Array<Bucket<string, CGEnumType>>___in__", i64 (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)* @"Array<Bucket<string, CGEnumType>>_find", %string.676378* (%"Array<Bucket<string, CGEnumType>>.676800"*, %string.676378*)* @"Array<Bucket<string, CGEnumType>>_join", %string.676378* (%"Array<Bucket<string, CGEnumType>>.676800"*)* @"Array<Bucket<string, CGEnumType>>___as_string__" }
@str.392 = private unnamed_addr constant [28 x i8] c"@Bucket<string, CGEnumType>\00"
@"Map<string, CGEnumType>_vtable_data" = global %"Map<string, CGEnumType>_vtable_ty.676797" { i64 (%"Map<string, CGEnumType>.676785"*, %string.676378*)* @"Map<string, CGEnumType>_hash_fnc", void (%"Map<string, CGEnumType>.676785"*)* @"Map<string, CGEnumType>_resize", void (%"Map<string, CGEnumType>.676785"*, %string.676378*, %CGEnumType.676774*)* @"Map<string, CGEnumType>_set", %CGEnumType.676774* (%"Map<string, CGEnumType>.676785"*, %string.676378*)* @"Map<string, CGEnumType>_get", %"Array<Bucket<string, CGEnumType>>.676800"* (%"Map<string, CGEnumType>.676785"*)* @"Map<string, CGEnumType>_get_buckets" }
@CodeGen_vtable_data = global %CodeGen_vtable_ty.676781 { %GeneratedModule.676756* (%CodeGen.676780*, %Program.676712*)* @CodeGen_codegen, void (%CodeGen.676780*)* @CodeGen_link_modules, %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)* @CodeGen_get_var_from_varid, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)* @CodeGen_get_class_from_typeid, %CGEnumType.676774* (%CodeGen.676780*, %TypeId.676552*)* @CodeGen_get_enum_from_typeid, %CGClassType.676760* (%CodeGen.676780*, %VarId.676596*)* @CodeGen_get_class_from_varid, %CGEnumType.676774* (%CodeGen.676780*, %VarId.676596*)* @CodeGen_get_enum_from_varid, void (%CodeGen.676780*, %TypeId.676552*, %CGClassType.676760*)* @CodeGen_add_class, void (%CodeGen.676780*, %TypeId.676552*, %CGEnumType.676774*)* @CodeGen_add_enum, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)* @CodeGen_add_var, %LLVMValueRef.676728* (%CodeGen.676780*, i1)* @CodeGen_createLLVMBool, %LLVMValueRef.676728* (%CodeGen.676780*, i64)* @CodeGen_createLLVMInt, %LLVMModuleRef.676726* (%CodeGen.676780*, %Module.676696*)* @CodeGen_codegen_module, void (%CodeGen.676780*, %ImportedSymbols.676686*)* @CodeGen_codegen_imported_symbols, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)* @CodeGen_codegen_type, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ReturnStatement.676624*)* @CodeGen_codegen_return_stmt, %LLVMValueRef.676728* (%CodeGen.676780*, %IntExpression.676566*)* @CodeGen_codegen_int, %LLVMValueRef.676728* (%CodeGen.676780*, %FloatExpression.676570*)* @CodeGen_codegen_float, %LLVMValueRef.676728* (%CodeGen.676780*, %BooleanExpression.676568*)* @CodeGen_codegen_bool, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)* @CodeGen_codegen_snprintf_call, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)* @CodeGen_codegen_realloc_call, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)* @CodeGen_codegen_memcmp_call, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*, i1)* @CodeGen_codegen_sprintf_call, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %StringExpression.676572*)* @CodeGen_codegen_string, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %ArrayExpression.676578*)* @CodeGen_store_array_elements, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ArrayExpression.676578*)* @CodeGen_codegen_array_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)* @CodeGen_get_var_expr_mem, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)* @CodeGen_get_index_expr_mem, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)* @CodeGen_get_member_expr_mem, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)* @CodeGen_get_expr_mem, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)* @CodeGen_store_expr_to_mem, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)* @CodeGen_codegen_assignment, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Type.676538*, %LLVMValueRef.676728*, %LLVMValueRef.676728*)* @CodeGen_codegen_pow_expr, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)* @CodeGen_codegen_bin_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TypeCastExpression.676586*)* @CodeGen_codegen_typecast_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %UnaryExpression.676582*)* @CodeGen_codegen_unary_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)* @CodeGen_codegen_var_access_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %NullExpression.676576*)* @CodeGen_codegen_null, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TernaryExpression.676584*)* @CodeGen_codegen_ternary_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %CallExpression.676592*)* @CodeGen_codegen_call_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)* @CodeGen_codegen_index_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %NewExpression.676588*)* @CodeGen_codegen_new_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)* @CodeGen_codegen_member_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IntrinsicCall.676594*)* @CodeGen_codegen_intrinsic_exp, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)* @CodeGen_codegen_expression, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IfStatement.676614*)* @CodeGen_codegen_if_stmt, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ForStatement.676620*)* @CodeGen_codegen_for_stmt, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %WhileStatement.676622*)* @CodeGen_codegen_while_stmt, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)* @CodeGen_evaluate_expression_list, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ObjectType.676562*, %"Array<LLVMValueRef>.676778"*)* @CodeGen_build_constructor_call, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarDeclaration.676616*)* @CodeGen_codegen_var_declaration, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ConstDeclaration.676618*)* @CodeGen_codegen_const_declaration, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Statement.676550*)* @CodeGen_codegen_statement, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)* @CodeGen_codegen_block, void (%CodeGen.676780*, %Function.676656*)* @CodeGen_codegen_function, void (%CodeGen.676780*, %Class.676668*)* @CodeGen_codegen_class, void (%CodeGen.676780*, %Function.676656*)* @CodeGen_declare_function, %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)* @CodeGen_declare_method, void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, i1)* @CodeGen_declare_static_props, void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, %"Array<LLVMTypeRef>.676776"*, i1)* @CodeGen_declare_class_props, void (%CodeGen.676780*, %Class.676668*)* @CodeGen_declare_class, void (%CodeGen.676780*, %Class.676668*, i1)* @CodeGen_declare_class_struct, void (%CodeGen.676780*, %Enum.676682*)* @CodeGen_declare_enum }
@str.393 = private unnamed_addr constant [9 x i8] c"snprintf\00"
@str.394 = private unnamed_addr constant [8 x i8] c"realloc\00"
@str.395 = private unnamed_addr constant [7 x i8] c"memcmp\00"
@str.396 = private unnamed_addr constant [8 x i8] c"sprintf\00"
@str.397 = private unnamed_addr constant [2 x i8] c"$\00"
@str.398 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00"
@str.399 = private unnamed_addr constant [9 x i8] c"arrayidx\00"
@str.400 = private unnamed_addr constant [7 x i8] c"ptridx\00"
@str.401 = private unnamed_addr constant [10 x i8] c"memberidx\00"
@str.402 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00"
@str.403 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00"
@str.404 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00"
@str.405 = private unnamed_addr constant [11 x i8] c"true_block\00"
@str.406 = private unnamed_addr constant [12 x i8] c"false_block\00"
@str.407 = private unnamed_addr constant [4 x i8] c"end\00"
@str.408 = private unnamed_addr constant [8 x i8] c"ternary\00"
@str.409 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00"
@str.410 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00"
@str.411 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00"
@str.412 = private unnamed_addr constant [9 x i8] c"if.entry\00"
@str.413 = private unnamed_addr constant [6 x i8] c"ifend\00"
@str.414 = private unnamed_addr constant [10 x i8] c"for.entry\00"
@str.415 = private unnamed_addr constant [9 x i8] c"for.cond\00"
@str.416 = private unnamed_addr constant [9 x i8] c"for.body\00"
@str.417 = private unnamed_addr constant [9 x i8] c"for.incr\00"
@str.418 = private unnamed_addr constant [8 x i8] c"for.end\00"
@str.419 = private unnamed_addr constant [12 x i8] c"while.entry\00"
@str.420 = private unnamed_addr constant [10 x i8] c"while.end\00"
@str.421 = private unnamed_addr constant [45 x i8] c"This should never happen; (codegen_function)\00"
@str.422 = private unnamed_addr constant [6 x i8] c"%s_%s\00"
@str.423 = private unnamed_addr constant [9 x i8] c"VTable%s\00"
@str.424 = private unnamed_addr constant [15 x i8] c"%s_constructor\00"
@"Arraymain.flo_vtable_data" = global %"Arraymain.flo_vtable_ty.676803" { void (%"Arraymain.flo.676802"*)* @"Arraymain.flo_resize", void (%"Arraymain.flo.676802"*, i64, i64)* @"Arraymain.flo_swap", void (%"Arraymain.flo.676802"*, %string.676378*)* @"Arraymain.flo___sl__", void (%"Arraymain.flo.676802"*, i64, %string.676378*)* @"Arraymain.flo___setitem__", void (%"Arraymain.flo.676802"*, %string.676378*)* @"Arraymain.flo_append", %string.676378* (%"Arraymain.flo.676802"*, i64)* @"Arraymain.flo___getitem__", i1 (%"Arraymain.flo.676802"*, %"Arraymain.flo.676802"*)* @"Arraymain.flo___eq__", i1 (%"Arraymain.flo.676802"*, %string.676378*)* @"Arraymain.flo___in__", i64 (%"Arraymain.flo.676802"*, %string.676378*)* @"Arraymain.flo_find", %string.676378* (%"Arraymain.flo.676802"*, %string.676378*)* @"Arraymain.flo_join", %string.676378* (%"Arraymain.flo.676802"*)* @"Arraymain.flo___as_string__" }
@str.425 = private unnamed_addr constant [28 x i8] c"Usage: %s <path> [OPTIONS]\0A\00"
@str.426 = private unnamed_addr constant [9 x i8] c"OPTIONS:\00"
@str.427 = private unnamed_addr constant [38 x i8] c" -h, --help\09\09\09Show this help message.\00"
@str.428 = private unnamed_addr constant [41 x i8] c" --print-tokens\09\09\09Print generated Tokens\00"
@str.429 = private unnamed_addr constant [36 x i8] c" --print-ast\09\09\09Print generated AST.\00"
@str.430 = private unnamed_addr constant [41 x i8] c" --print-llvm\09\09\09Print generated LLVM-IR.\00"
@str.431 = private unnamed_addr constant [43 x i8] c" -o <file>\09\09\09Place the output into <file>.\00"
@str.432 = private unnamed_addr constant [39 x i8] c" --no-output\09\09\09Compile with no output.\00"
@str.433 = private unnamed_addr constant [47 x i8] c" --target\09\09\09Compile to specific target triple.\00"
@str.434 = private unnamed_addr constant [93 x i8] c" -O OPT_LEVEL\0A \09\09\09\09Specify the compiler's optimization level which is a\0A \09\09\09\09value from 0-3.\00"
@str.435 = private unnamed_addr constant [47 x i8] c" -e, --execute\09\09\09Execute file after compiling.\00"
@str.436 = private unnamed_addr constant [31 x i8] c" -v, --version\09\09\09Show version.\00"
@str.437 = private unnamed_addr constant [35 x i8] c"Missing value after '%s' argument.\00"
@str.438 = private unnamed_addr constant [3 x i8] c"-v\00"
@str.439 = private unnamed_addr constant [10 x i8] c"--version\00"
@str.440 = private unnamed_addr constant [20 x i8] c"v0.01@test.selfhost\00"
@str.441 = private unnamed_addr constant [3 x i8] c"-h\00"
@str.442 = private unnamed_addr constant [7 x i8] c"--help\00"
@str.443 = private unnamed_addr constant [15 x i8] c"--print-tokens\00"
@str.444 = private unnamed_addr constant [3 x i8] c"-O\00"
@str.445 = private unnamed_addr constant [2 x i8] c"1\00"
@str.446 = private unnamed_addr constant [13 x i8] c"--print-llvm\00"
@str.447 = private unnamed_addr constant [12 x i8] c"--no-output\00"
@str.448 = private unnamed_addr constant [3 x i8] c"-o\00"
@str.449 = private unnamed_addr constant [4 x i8] c"a.o\00"
@str.450 = private unnamed_addr constant [9 x i8] c"--target\00"
@str.451 = private unnamed_addr constant [3 x i8] c"-e\00"
@str.452 = private unnamed_addr constant [10 x i8] c"--execute\00"
@str.453 = private unnamed_addr constant [25 x i8] c"No input file specified.\00"

declare i64 @memcmp(i8*, i8*, i64) local_unnamed_addr

declare i64 @memcpy(i8*, i8*, i64) local_unnamed_addr

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #0

; Function Attrs: nofree norecurse nounwind writeonly
define void @string_constructor(%string.676378* nocapture %.1, i8* %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  store i8* %.2, i8** %.11, align 8
  %.15 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  %.19 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 3
  store i64 %.3, i64* %.19, align 8
  ret void
}

define noalias %string.676378* @string___add__(%string.676378* nocapture readonly %.1, %string.676378* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = add i64 %.12, %.9
  %.17 = call i8* @malloc(i64 %.13)
  %.21 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.22 = load i8*, i8** %.21, align 8
  %.26 = call i64 @memcpy(i8* %.17, i8* %.22, i64 %.9)
  %.30 = load i64, i64* %.8, align 8
  %.31 = getelementptr inbounds i8, i8* %.17, i64 %.30
  %.35 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 1
  %.36 = load i8*, i8** %.35, align 8
  %.39 = load i64, i64* %.11, align 8
  %.40 = add i64 %.39, 1
  %.41 = call i64 @memcpy(i8* %.31, i8* %.36, i64 %.40)
  %.44 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %string.676378*
  %.46 = bitcast i8* %.44 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.46, align 8
  call void @string_constructor(%string.676378* %.45, i8* %.17, i64 %.13)
  ret %string.676378* %.45
}

define %string.676378* @string___adda__(%string.676378* returned %.1, %string.676378* nocapture readonly %.2) {
.4:
  %.9 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.10 = load i8*, i8** %.9, align 8
  %.12 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.15 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = add i64 %.16, %.13
  %.18 = shl i64 %.17, 3
  %.19 = call i8* @realloc(i8* %.10, i64 %.18)
  store i8* %.19, i8** %.9, align 8
  %.27 = load i64, i64* %.12, align 8
  %.28 = getelementptr inbounds i8, i8* %.19, i64 %.27
  %.30 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 1
  %.31 = load i8*, i8** %.30, align 8
  %.34 = load i64, i64* %.15, align 8
  %.35 = add i64 %.34, 1
  %.36 = call i64 @memcpy(i8* %.28, i8* %.31, i64 %.35)
  ret %string.676378* %.1
}

; Function Attrs: nounwind
define void @string_add_byte(%string.676378* nocapture %.1, i8 %.2) #2 {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = add i64 %.9, 1
  %.12 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14.not = icmp slt i64 %.10, %.13
  br i1 %.14.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.20 = shl i64 %.13, 1
  store i64 %.20, i64* %.12, align 8
  %.25 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.26 = load i8*, i8** %.25, align 8
  %.30 = shl i64 %.13, 4
  %.31 = call i8* @realloc(i8* %.26, i64 %.30)
  store i8* %.31, i8** %.25, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.37 = load i64, i64* %.8, align 8
  %.39 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.40 = load i8*, i8** %.39, align 8
  %.42 = getelementptr inbounds i8, i8* %.40, i64 %.37
  store i8 %.2, i8* %.42, align 1
  %.46 = load i64, i64* %.8, align 8
  %.47 = add i64 %.46, 1
  store i64 %.47, i64* %.8, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @string___getitem__(%string.676378* nocapture readonly %.1, i64 %.2) #3 {
.4:
  %.8 = call dereferenceable_or_null(2) i8* @malloc(i64 2)
  %.13 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.14 = load i8*, i8** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.14, i64 %.2
  %.16 = load i8, i8* %.15, align 1
  store i8 %.16, i8* %.8, align 1
  %.20 = getelementptr inbounds i8, i8* %.8, i64 1
  store i8 0, i8* %.20, align 1
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.676378*
  %.25 = bitcast i8* %.23 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.25, align 8
  call void @string_constructor(%string.676378* %.24, i8* nonnull %.8, i64 2)
  ret %string.676378* %.24
}

define i1 @string___eq__(%string.676378* nocapture readonly %.1, %string.676378* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 1
  %.21 = load i8*, i8** %.20, align 8
  %.25 = call i64 @memcmp(i8* %.18, i8* %.21, i64 %.9)
  %.26 = icmp eq i64 %.25, 0
  ret i1 %.26
}

; Function Attrs: norecurse nounwind readonly
define i64 @string_find(%string.676378* nocapture readonly %.1, %string.676378* nocapture readonly %.2) #4 {
.4:
  %.12 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.136 = load i64, i64* %.12, align 8
  %.147 = icmp sgt i64 %.136, 0
  br i1 %.147, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.17 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = load i8, i8* %.18, align 1
  %.23 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.24 = load i8*, i8** %.23, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge8 = phi i64 [ 0, %for.body.lr.ph ], [ %.73, %for.body.endif ]
  %.25 = getelementptr inbounds i8, i8* %.24, i64 %storemerge8
  %.26 = load i8, i8* %.25, align 1
  %.27 = icmp eq i8 %.20, %.26
  br i1 %.27, label %for.body.if, label %for.body.endif

for.end.loopexit:                                 ; preds = %while.entry, %while.entry.endif
  %.5910 = phi i64 [ %smin, %while.entry.endif ], [ %.599, %while.entry ]
  %merge.ph = phi i64 [ %storemerge8, %while.entry.endif ], [ -1, %while.entry ]
  store i64 %.5910, i64* %x, align 8
  br label %for.end

for.end:                                          ; preds = %for.body.endif, %.4, %for.end.loopexit, %for.body.if
  %merge = phi i64 [ %storemerge8, %for.body.if ], [ %merge.ph, %for.end.loopexit ], [ -1, %.4 ], [ -1, %for.body.endif ]
  ret i64 %merge

for.body.if:                                      ; preds = %for.body
  %.30 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.31 = load i64, i64* %.30, align 8
  %.32 = add i64 %.31, -1
  %x = alloca i64, align 8
  store i64 %.32, i64* %x, align 8
  %.36 = icmp sgt i64 %.32, 0
  br i1 %.36, label %while.entry.preheader, label %for.end

while.entry.preheader:                            ; preds = %for.body.if
  %x.promoted = load i64, i64* %x, align 8
  %0 = add i64 %x.promoted, -1
  %1 = icmp slt i64 %0, 0
  %smin = select i1 %1, i64 %0, i64 0
  br label %while.entry

for.body.endif:                                   ; preds = %for.body
  %.73 = add nuw nsw i64 %storemerge8, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.73, %.13
  br i1 %.14, label %for.body, label %for.end

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.599 = phi i64 [ %x.promoted, %while.entry.preheader ], [ %.59, %while.entry.endif ]
  %.42 = getelementptr inbounds i8, i8* %.18, i64 %.599
  %.43 = load i8, i8* %.42, align 1
  %.46 = add i64 %.599, %storemerge8
  %.50 = getelementptr inbounds i8, i8* %.24, i64 %.46
  %.51 = load i8, i8* %.50, align 1
  %.52.not = icmp eq i8 %.43, %.51
  br i1 %.52.not, label %while.entry.endif, label %for.end.loopexit

while.entry.endif:                                ; preds = %while.entry
  %.59 = add i64 %.599, -1
  %.62 = icmp sgt i64 %.59, 0
  br i1 %.62, label %while.entry, label %for.end.loopexit
}

define i1 @string___in__(%string.676378* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.9, i64 0, i32 5
  %.11 = load i64 (%string.676378*, %string.676378*)*, i64 (%string.676378*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%string.676378* %.1, %string.676378* %.2)
  %.15 = icmp ne i64 %.13, -1
  ret i1 %.15
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @string_substring(%string.676378* nocapture readonly %.1, i64 %.2, i64 %.3) #3 {
.5:
  %.10 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.11 = load i8*, i8** %.10, align 8
  %.13 = getelementptr inbounds i8, i8* %.11, i64 %.2
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.17 = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.17, align 8
  call void @string_constructor(%string.676378* %.16, i8* %.13, i64 %.3)
  ret %string.676378* %.16
}

; Function Attrs: norecurse nounwind readonly
define i8 @string_get_byte(%string.676378* nocapture readonly %.1, i64 %.2) #4 {
.4:
  %.9 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.10 = load i8*, i8** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.10, i64 %.2
  %.12 = load i8, i8* %.11, align 1
  ret i8 %.12
}

; Function Attrs: norecurse nounwind readonly
define i8* @string_get_bytes(%string.676378* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.7 = load i8*, i8** %.6, align 8
  ret i8* %.7
}

define %string.676378* @string_replace(%string.676378* %.1, %string.676378* %.2, %string.676378* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.11 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.10, align 8
  %.12 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.11, i64 0, i32 5
  %.13 = load i64 (%string.676378*, %string.676378*)*, i64 (%string.676378*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%string.676378* %.1, %string.676378* %.2)
  %.18 = icmp sgt i64 %.15, -1
  br i1 %.18, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.21 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.22 = load i64, i64* %.21, align 8
  %.24 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.25 = load i64, i64* %.24, align 8
  %.26 = sub i64 %.22, %.25
  %.28 = getelementptr inbounds %string.676378, %string.676378* %.3, i64 0, i32 2
  %.29 = load i64, i64* %.28, align 8
  %.30 = add i64 %.26, %.29
  %.34 = call i8* @malloc(i64 %.30)
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.39 = load i8*, i8** %.38, align 8
  %.41 = call i64 @memcpy(i8* %.34, i8* %.39, i64 %.15)
  %.44 = getelementptr inbounds i8, i8* %.34, i64 %.15
  %.46 = getelementptr inbounds %string.676378, %string.676378* %.3, i64 0, i32 1
  %.47 = load i8*, i8** %.46, align 8
  %.50 = load i64, i64* %.28, align 8
  %.51 = call i64 @memcpy(i8* %.44, i8* %.47, i64 %.50)
  %.57 = load i64, i64* %.28, align 8
  %.58 = getelementptr inbounds i8, i8* %.44, i64 %.57
  %.61 = load i8*, i8** %.38, align 8
  %.63 = getelementptr inbounds i8, i8* %.61, i64 %.15
  %.66 = load i64, i64* %.24, align 8
  %.67 = getelementptr inbounds i8, i8* %.63, i64 %.66
  %.70 = load i64, i64* %.21, align 8
  %.74 = sub i64 %.70, %.66
  %.75 = call i64 @memcpy(i8* %.58, i8* %.67, i64 %.74)
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.676378*
  %.80 = bitcast i8* %.78 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.80, align 8
  call void @string_constructor(%string.676378* %.79, i8* %.34, i64 %.30)
  ret %string.676378* %.79

.5.endif:                                         ; preds = %.5
  ret %string.676378* %.1
}

define i8* @string_to_cstring(%string.676378* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.8 = add i64 %.7, 1
  %.10 = call i8* @malloc(i64 %.8)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.15 = load i8*, i8** %.14, align 8
  %.19 = call i64 @memcpy(i8* %.10, i8* %.15, i64 %.7)
  %.22 = load i64, i64* %.6, align 8
  %.24 = getelementptr inbounds i8, i8* %.10, i64 %.22
  store i8 0, i8* %.24, align 1
  ret i8* %.10
}

define i1 @string_ends_with(%string.676378* nocapture readonly %.1, %string.676378* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.9, %.12
  br i1 %.13, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.22 = getelementptr inbounds i8, i8* %.18, i64 %.9
  %.26 = sub i64 0, %.12
  %.27 = getelementptr inbounds i8, i8* %.22, i64 %.26
  %.31 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 1
  %.32 = load i8*, i8** %.31, align 8
  %.36 = call i64 @memcmp(i8* %.27, i8* %.32, i64 %.12)
  %.37 = icmp eq i64 %.36, 0
  ret i1 %.37
}

define i1 @string_starts_with(%string.676378* nocapture readonly %.1, %string.676378* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.9, %.12
  br i1 %.13, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.17 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 1
  %.18 = load i8*, i8** %.17, align 8
  %.20 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 1
  %.21 = load i8*, i8** %.20, align 8
  %.25 = call i64 @memcmp(i8* %.18, i8* %.21, i64 %.12)
  %.26 = icmp eq i64 %.25, 0
  ret i1 %.26
}

define noalias %string.676378* @string_from_cstring(i8* %.1) local_unnamed_addr {
.3:
  %.6 = call i64 @strlen(i8* nonnull dereferenceable(1) %.1)
  %.10 = call i8* @malloc(i64 %.6)
  %.15 = call i64 @memcpy(i8* %.10, i8* %.1, i64 %.6)
  %.18 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.19 = bitcast i8* %.18 to %string.676378*
  %.20 = bitcast i8* %.18 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.20, align 8
  call void @string_constructor(%string.676378* %.19, i8* %.10, i64 %.6)
  ret %string.676378* %.19
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind writeonly
define void @Range_constructor(%Range.676380* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Range.676380, %Range.676380* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Range.676380, %Range.676380* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Range___in__(%Range.676380* nocapture readonly %.1, i64 %.2) #4 {
.4:
  %.9 = getelementptr inbounds %Range.676380, %Range.676380* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.11 = icmp sle i64 %.10, %.2
  %.14 = getelementptr inbounds %Range.676380, %Range.676380* %.1, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp sgt i64 %.15, %.2
  %.17 = and i1 %.11, %.16
  ret i1 %.17
}

; Function Attrs: nofree
declare void @write(i64, i8* nocapture readonly, i64) local_unnamed_addr #5

define void @print(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.7, i64 0, i32 9
  %.9 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.8, align 8
  %.10 = call i8* %.9(%string.676378* %.1)
  %.12 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  call void @write(i64 0, i8* %.10, i64 %.13)
  ret void
}

define void @println(%string.676378* %.1) local_unnamed_addr {
.3:
  call void @print(%string.676378* %.1)
  call void @write(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.0, i64 0, i64 0), i64 1)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloRange_constructor(%FloRange.676382* nocapture %.1, i64 %.2, i64 %.3, i64 %.4, i64 %.5) local_unnamed_addr #1 {
.7:
  %.15 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.1, i64 0, i32 1
  store i64 %.2, i64* %.15, align 8
  %.19 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.1, i64 0, i32 2
  store i64 %.3, i64* %.19, align 8
  %.23 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.1, i64 0, i32 3
  store i64 %.4, i64* %.23, align 8
  %.27 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.1, i64 0, i32 4
  store i64 %.5, i64* %.27, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %FloRange.676382* @FloRange_merge(%FloRange.676382* nocapture readonly %.1, %FloRange.676382* nocapture readonly %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.1, i64 0, i32 3
  %.15 = load i64, i64* %.14, align 8
  %.17 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.2, i64 0, i32 4
  %.18 = load i64, i64* %.17, align 8
  %.19 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.20 = bitcast i8* %.19 to %FloRange.676382*
  %.21 = bitcast i8* %.19 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.21, align 8
  call void @FloRange_constructor(%FloRange.676382* %.20, i64 %.9, i64 %.12, i64 %.15, i64 %.18)
  ret %FloRange.676382* %.20
}

define noalias %string.676378* @color(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.676378*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.9 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.10, i64 0, i32 4
  %.12 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.11, align 8
  %.13 = call i1 %.12(%string.676378* %.1, %string.676378* %.7)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.16.repack, align 8
  %.16.repack7 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack7 to i8**
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.2, i64 0, i64 0), i8** %3, align 8
  %.16.repack8 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack8 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack9 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack9 to i64*
  store i64 7, i64* %5, align 8
  ret %string.676378* %.16

.3.endif:                                         ; preds = %.3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.3, i64 0, i64 0), i8** %3, align 8
  %.20.repack5 = getelementptr inbounds i8, i8* %.15, i64 16
  %6 = bitcast i8* %.20.repack5 to i64*
  store i64 4, i64* %6, align 8
  %.20.repack6 = getelementptr inbounds i8, i8* %.15, i64 24
  %7 = bitcast i8* %.20.repack6 to i64*
  store i64 4, i64* %7, align 8
  ret %string.676378* %.16
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloError_constructor(%FloError.676384* nocapture %.1, i64 %.2, %string.676378* %.3, %FloRange.676382* %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %FloError.676384, %FloError.676384* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %FloError.676384, %FloError.676384* %.1, i64 0, i32 3
  store %FloRange.676382* %.4, %FloRange.676382** %.17, align 8
  %.21 = getelementptr inbounds %FloError.676384, %FloError.676384* %.1, i64 0, i32 2
  store %string.676378* %.3, %string.676378** %.21, align 8
  ret void
}

define i64 @get_next_line_index(%string.676378* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.9 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.9, i64 0, i32 8
  %.11 = load i8 (%string.676378*, i64)*, i8 (%string.676378*, i64)** %.10, align 8
  %.13 = call i8 %.11(%string.676378* %.1, i64 %.2)
  %.14 = icmp ne i8 %.13, 10
  %.17 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.18 = load i64, i64* %.17, align 8
  %.19 = icmp sgt i64 %.18, %.2
  %.20 = and i1 %.14, %.19
  br i1 %.20, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %start.0 = phi i64 [ %.25, %while.entry ], [ %.2, %.4 ]
  %.25 = add nsw i64 %start.0, 1
  %.29 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.8, align 8
  %.30 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.29, i64 0, i32 8
  %.31 = load i8 (%string.676378*, i64)*, i8 (%string.676378*, i64)** %.30, align 8
  %.33 = call i8 %.31(%string.676378* %.1, i64 %.25)
  %.34 = icmp ne i8 %.33, 10
  %.38 = load i64, i64* %.17, align 8
  %.39 = icmp slt i64 %.25, %.38
  %.40 = and i1 %.34, %.39
  br i1 %.40, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %start.1 = phi i64 [ %.2, %.4 ], [ %.25, %while.entry ]
  ret i64 %start.1
}

define void @print_error_line(%string.676378* %.1, %FloRange.676382* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.2, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call i64 @get_next_line_index(%string.676378* %.1, i64 %.10)
  %.14 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.2, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.17 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.2, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = sub i64 %.15, %.18
  %.22 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.23 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.23, i64 0, i32 7
  %.25 = load %string.676378* (%string.676378*, i64, i64)*, %string.676378* (%string.676378*, i64, i64)** %.24, align 8
  %.29 = sub i64 %.11, %.19
  %.30 = call %string.676378* %.25(%string.676378* %.1, i64 %.19, i64 %.29)
  call void @print(%string.676378* %.30)
  %.32 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %string.676378*
  %.33.repack = bitcast i8* %.32 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.33.repack, align 8
  %.33.repack1 = getelementptr inbounds i8, i8* %.32, i64 8
  %0 = bitcast i8* %.33.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.0, i64 0, i64 0), i8** %0, align 8
  %.33.repack2 = getelementptr inbounds i8, i8* %.32, i64 16
  %1 = bitcast i8* %.33.repack2 to i64*
  store i64 1, i64* %1, align 8
  %.33.repack3 = getelementptr inbounds i8, i8* %.32, i64 24
  %2 = bitcast i8* %.33.repack3 to i64*
  store i64 1, i64* %2, align 8
  call void @print(%string.676378* %.33)
  %.38 = load i64, i64* %.17, align 8
  %.42 = load i64, i64* %.9, align 8
  %.45 = load i64, i64* %.14, align 8
  %.46 = sub i64 %.42, %.45
  %.5326 = icmp sgt i64 %.38, 0
  %.5527 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.5628 = bitcast i8* %.5527 to %string.676378*
  %.56.repack29 = bitcast i8* %.5527 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.56.repack29, align 8
  %.56.repack1130 = getelementptr inbounds i8, i8* %.5527, i64 8
  %3 = bitcast i8* %.56.repack1130 to i8**
  br i1 %.5326, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %4 = phi i8** [ %7, %for.body ], [ %3, %.4 ]
  %.5633 = phi %string.676378* [ %.56, %for.body ], [ %.5628, %.4 ]
  %.5532 = phi i8* [ %.55, %for.body ], [ %.5527, %.4 ]
  %storemerge31 = phi i64 [ %.63, %for.body ], [ 0, %.4 ]
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.4, i64 0, i64 0), i8** %4, align 8
  %.56.repack12 = getelementptr inbounds i8, i8* %.5532, i64 16
  %5 = bitcast i8* %.56.repack12 to i64*
  store i64 1, i64* %5, align 8
  %.56.repack13 = getelementptr inbounds i8, i8* %.5532, i64 24
  %6 = bitcast i8* %.56.repack13 to i64*
  store i64 1, i64* %6, align 8
  call void @print(%string.676378* %.5633)
  %.63 = add nuw nsw i64 %storemerge31, 1
  %.55 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.56 = bitcast i8* %.55 to %string.676378*
  %.56.repack = bitcast i8* %.55 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.56.repack, align 8
  %.56.repack11 = getelementptr inbounds i8, i8* %.55, i64 8
  %7 = bitcast i8* %.56.repack11 to i8**
  %exitcond41.not = icmp eq i64 %.63, %.38
  br i1 %exitcond41.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.56.le = bitcast i8* %.55 to %string.676378*
  %8 = bitcast i8* %.56.repack11 to i8**
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %.55.lcssa = phi i8* [ %.55, %for.cond.for.end_crit_edge ], [ %.5527, %.4 ]
  %.56.lcssa = phi %string.676378* [ %.56.le, %for.cond.for.end_crit_edge ], [ %.5628, %.4 ]
  %.lcssa15 = phi i8** [ %8, %for.cond.for.end_crit_edge ], [ %3, %.4 ]
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i8** %.lcssa15, align 8
  %.67.repack5 = getelementptr inbounds i8, i8* %.55.lcssa, i64 16
  %9 = bitcast i8* %.67.repack5 to i64*
  store i64 3, i64* %9, align 8
  %.67.repack6 = getelementptr inbounds i8, i8* %.55.lcssa, i64 24
  %10 = bitcast i8* %.67.repack6 to i64*
  store i64 3, i64* %10, align 8
  %.69 = call %string.676378* @color(%string.676378* %.56.lcssa)
  call void @print(%string.676378* %.69)
  %.7616 = icmp sgt i64 %.46, 0
  %.7817 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7918 = bitcast i8* %.7817 to %string.676378*
  %.79.repack19 = bitcast i8* %.7817 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.79.repack19, align 8
  %.79.repack820 = getelementptr inbounds i8, i8* %.7817, i64 8
  %11 = bitcast i8* %.79.repack820 to i8**
  br i1 %.7616, label %for.body.1, label %for.end.1

for.body.1:                                       ; preds = %for.end, %for.body.1
  %12 = phi i8** [ %15, %for.body.1 ], [ %11, %for.end ]
  %.7923 = phi %string.676378* [ %.79, %for.body.1 ], [ %.7918, %for.end ]
  %.7822 = phi i8* [ %.78, %for.body.1 ], [ %.7817, %for.end ]
  %storemerge721 = phi i64 [ %.86, %for.body.1 ], [ 0, %for.end ]
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0), i8** %12, align 8
  %.79.repack9 = getelementptr inbounds i8, i8* %.7822, i64 16
  %13 = bitcast i8* %.79.repack9 to i64*
  store i64 1, i64* %13, align 8
  %.79.repack10 = getelementptr inbounds i8, i8* %.7822, i64 24
  %14 = bitcast i8* %.79.repack10 to i64*
  store i64 1, i64* %14, align 8
  call void @print(%string.676378* %.7923)
  %.86 = add nuw nsw i64 %storemerge721, 1
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.676378*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.79.repack, align 8
  %.79.repack8 = getelementptr inbounds i8, i8* %.78, i64 8
  %15 = bitcast i8* %.79.repack8 to i8**
  %exitcond.not = icmp eq i64 %.86, %.46
  br i1 %exitcond.not, label %for.cond.1.for.end.1_crit_edge, label %for.body.1

for.cond.1.for.end.1_crit_edge:                   ; preds = %for.body.1
  %.79.le = bitcast i8* %.78 to %string.676378*
  %16 = bitcast i8* %.79.repack8 to i8**
  br label %for.end.1

for.end.1:                                        ; preds = %for.cond.1.for.end.1_crit_edge, %for.end
  %.78.lcssa = phi i8* [ %.78, %for.cond.1.for.end.1_crit_edge ], [ %.7817, %for.end ]
  %.79.lcssa = phi %string.676378* [ %.79.le, %for.cond.1.for.end.1_crit_edge ], [ %.7918, %for.end ]
  %.lcssa = phi i8** [ %16, %for.cond.1.for.end.1_crit_edge ], [ %11, %for.end ]
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %.lcssa, align 8
  %.95 = getelementptr inbounds i8, i8* %.78.lcssa, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.95, i8 0, i64 16, i1 false)
  %.99 = call %string.676378* @color(%string.676378* %.79.lcssa)
  call void @println(%string.676378* %.99)
  ret void
}

define void @print_message_error(i64 %.1, %string.676378* %.2) local_unnamed_addr {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.7 to %string.676378*
  %.8.repack = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.8.repack, align 8
  %.8.repack1 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.8.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.1, i64 0, i64 0), i8** %0, align 8
  %.8.repack2 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.8.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.8.repack3 = getelementptr inbounds i8, i8* %.7, i64 24
  %2 = bitcast i8* %.8.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.10 = call %string.676378* @color(%string.676378* %.8)
  call void @print(%string.676378* %.10)
  switch i64 %.1, label %.4.else.else.else.else.else [
    i64 0, label %.4.if
    i64 2, label %.4.endif
    i64 3, label %.4.else.else.if
    i64 5, label %.4.else.else.else.if
    i64 1, label %.4.else.else.else.else.if
  ]

.4.if:                                            ; preds = %.4
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.else.else.else.else.if, %.4.else.else.else.else.else, %.4.else.else.else.if, %.4.else.else.if, %.4.if
  %.sink26 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @str.11, i64 0, i64 0), %.4.else.else.else.else.if ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @str.12, i64 0, i64 0), %.4.else.else.else.else.else ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @str.10, i64 0, i64 0), %.4.else.else.else.if ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @str.9, i64 0, i64 0), %.4.else.else.if ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @str.7, i64 0, i64 0), %.4.if ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @str.8, i64 0, i64 0), %.4 ]
  %.sink23 = phi i64 [ 14, %.4.else.else.else.else.if ], [ 9, %.4.else.else.else.else.else ], [ 14, %.4.else.else.else.if ], [ 12, %.4.else.else.if ], [ 21, %.4.if ], [ 16, %.4 ]
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.676378*
  %.48.repack = bitcast i8* %.47 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.48.repack, align 8
  %.48.repack7 = getelementptr inbounds i8, i8* %.47, i64 8
  %3 = bitcast i8* %.48.repack7 to i8**
  store i8* %.sink26, i8** %3, align 8
  %.48.repack8 = getelementptr inbounds i8, i8* %.47, i64 16
  %4 = bitcast i8* %.48.repack8 to i64*
  store i64 %.sink23, i64* %4, align 8
  %.48.repack9 = getelementptr inbounds i8, i8* %.47, i64 24
  %5 = bitcast i8* %.48.repack9 to i64*
  store i64 %.sink23, i64* %5, align 8
  call void @print(%string.676378* %.48)
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.676378*
  %.63 = bitcast i8* %.61 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.63, align 8
  %.65 = getelementptr inbounds i8, i8* %.61, i64 8
  %6 = bitcast i8* %.65 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %6, align 8
  %.67 = getelementptr inbounds i8, i8* %.61, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.67, i8 0, i64 16, i1 false)
  %.71 = call %string.676378* @color(%string.676378* %.62)
  call void @print(%string.676378* %.71)
  call void @println(%string.676378* %.2)
  ret void

.4.else.else.if:                                  ; preds = %.4
  br label %.4.endif

.4.else.else.else.if:                             ; preds = %.4
  br label %.4.endif

.4.else.else.else.else.if:                        ; preds = %.4
  br label %.4.endif

.4.else.else.else.else.else:                      ; preds = %.4
  br label %.4.endif
}

define void @print_error(%FloError.676384* nocapture readonly %.1, %string.676378* %.2, %string.676378* %.3) local_unnamed_addr {
.5:
  %.10 = getelementptr inbounds %FloError.676384, %FloError.676384* %.1, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %FloError.676384, %FloError.676384* %.1, i64 0, i32 2
  %.14 = load %string.676378*, %string.676378** %.13, align 8
  call void @print_message_error(i64 %.11, %string.676378* %.14)
  %.18 = getelementptr inbounds %FloError.676384, %FloError.676384* %.1, i64 0, i32 3
  %.19 = load %FloRange.676382*, %FloRange.676382** %.18, align 8
  %.20 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.19, i64 0, i32 4
  %.21 = load i64, i64* %.20, align 8
  %.22 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.23 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.23, i64 0, i32 11
  %.25 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.24, align 8
  %.26 = call i8* %.25(%string.676378* %.2)
  %.28 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.13, i64 0, i64 0), i8* %.26, i64 %.21)
  %.30 = call i8* @malloc(i64 %.28)
  %.31 = call i64 (i8*, i8*, ...) @sprintf(i8* %.30, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.13, i64 0, i64 0), i8* %.26, i64 %.21)
  %.32 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %string.676378*
  %.34 = bitcast i8* %.32 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.34, align 8
  %.36 = getelementptr inbounds i8, i8* %.32, i64 8
  %0 = bitcast i8* %.36 to i8**
  store i8* %.30, i8** %0, align 8
  %.38 = getelementptr inbounds i8, i8* %.32, i64 16
  %1 = bitcast i8* %.38 to i64*
  store i64 %.28, i64* %1, align 8
  %.40 = getelementptr inbounds i8, i8* %.32, i64 24
  %2 = bitcast i8* %.40 to i64*
  store i64 %.28, i64* %2, align 8
  call void @println(%string.676378* %.33)
  %.46 = load %FloRange.676382*, %FloRange.676382** %.18, align 8
  call void @print_error_line(%string.676378* %.3, %FloRange.676382* %.46)
  ret void
}

declare i64 @sprintf(i8*, i8*, ...) local_unnamed_addr

declare i64 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr

declare i64 @fopen(i8*, i8*) local_unnamed_addr

declare void @fclose(i64) local_unnamed_addr

declare i64 @fread(i8*, i64, i64, i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare i64 @access(i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind writeonly
define void @File_constructor(%File.676386* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %File.676386, %File.676386* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

define noalias %File.676386* @File_open_for_reading(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.7, i64 0, i32 11
  %.9 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.8, align 8
  %.10 = call i8* %.9(%string.676378* %.1)
  %.11 = call i64 @fopen(i8* %.10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.14, i64 0, i64 0))
  %.17 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.18 = bitcast i8* %.17 to %File.676386*
  %.19 = bitcast i8* %.17 to %File_vtable_ty.676387**
  store %File_vtable_ty.676387* @File_vtable_data, %File_vtable_ty.676387** %.19, align 8
  call void @File_constructor(%File.676386* %.18, i64 %.11)
  ret %File.676386* %.18
}

define noalias %string.676378* @File_read_all(%File.676386* nocapture readonly %.1) {
.3:
  %.8 = call i8* @malloc(i64 0)
  %buffer1 = alloca [1024 x i8], align 1
  %.112 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer1, i64 0, i64 0
  %.14 = getelementptr inbounds %File.676386, %File.676386* %.1, i64 0, i32 1
  %.153 = load i64, i64* %.14, align 8
  %.164 = call i64 @fread(i8* nonnull %.112, i64 1, i64 1024, i64 %.153)
  %.195 = icmp eq i64 %.164, 0
  br i1 %.195, label %while.entry.if, label %while.entry.endif

while.entry.if:                                   ; preds = %while.entry.endif, %.3
  %size.0.lcssa = phi i64 [ 0, %.3 ], [ %.33, %while.entry.endif ]
  %allocated_mem.0.lcssa = phi i8* [ %.8, %.3 ], [ %.38, %while.entry.endif ]
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.676378*
  %.25 = bitcast i8* %.23 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.25, align 8
  call void @string_constructor(%string.676378* %.24, i8* %allocated_mem.0.lcssa, i64 %size.0.lcssa)
  ret %string.676378* %.24

while.entry.endif:                                ; preds = %.3, %while.entry.endif
  %.169 = phi i64 [ %.16, %while.entry.endif ], [ %.164, %.3 ]
  %.118 = phi i8* [ %.11, %while.entry.endif ], [ %.112, %.3 ]
  %allocated_mem.07 = phi i8* [ %.38, %while.entry.endif ], [ %.8, %.3 ]
  %size.06 = phi i64 [ %.33, %while.entry.endif ], [ 0, %.3 ]
  %.33 = add i64 %.169, %size.06
  %.37 = shl i64 %.33, 3
  %.38 = call i8* @realloc(i8* %allocated_mem.07, i64 %.37)
  %.42 = getelementptr inbounds i8, i8* %.38, i64 %size.06
  %.46 = call i64 @memcpy(i8* %.42, i8* nonnull %.118, i64 %.169)
  %buffer = alloca [1024 x i8], align 1
  %.11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i64 0, i64 0
  %.15 = load i64, i64* %.14, align 8
  %.16 = call i64 @fread(i8* nonnull %.11, i64 1, i64 1024, i64 %.15)
  %.19 = icmp eq i64 %.16, 0
  br i1 %.19, label %while.entry.if, label %while.entry.endif
}

define i1 @File_exists(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.7, i64 0, i32 11
  %.9 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.8, align 8
  %.10 = call i8* %.9(%string.676378* %.1)
  %.11 = call i64 @access(i8* %.10, i64 0)
  %.12 = icmp eq i64 %.11, 0
  ret i1 %.12
}

define void @File_close(%File.676386* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %File.676386, %File.676386* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  call void @fclose(i64 %.7)
  ret void
}

; Function Attrs: nofree nounwind
declare i8* @realpath(i8* nocapture readonly, i8*) local_unnamed_addr #3

declare i8* @dirname(i8*) local_unnamed_addr

define noalias %string.676378* @Path_join(%string.676378* %.1, %string.676378* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.10, i64 0, i32 11
  %.12 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.11, align 8
  %.13 = call i8* %.12(%string.676378* %.1)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.2)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.15, i64 0, i64 0), i8* %.13, i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.15, i64 0, i64 0), i8* %.13, i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %0 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %0, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %1 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %1, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %2 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %2, align 8
  ret %string.676378* %.25
}

define noalias %string.676378* @Path_abspath(%string.676378* %.1) local_unnamed_addr {
.3:
  %buf = alloca [400 x i8], align 1
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.7, i64 0, i32 11
  %.9 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.8, align 8
  %.10 = call i8* %.9(%string.676378* %.1)
  %.11 = getelementptr inbounds [400 x i8], [400 x i8]* %buf, i64 0, i64 0
  %.13 = call i8* @realpath(i8* %.10, i8* nonnull %.11)
  %.16 = call %string.676378* @string_from_cstring(i8* nonnull %.11)
  ret %string.676378* %.16
}

define noalias %string.676378* @Path_dirname(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.7, i64 0, i32 11
  %.9 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.8, align 8
  %.10 = call i8* %.9(%string.676378* %.1)
  %.11 = call i8* @dirname(i8* %.10)
  %.12 = call %string.676378* @string_from_cstring(i8* %.11)
  ret %string.676378* %.12
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FileId_constructor(%FileId.676390* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %FileId.676390, %FileId.676390* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloFile_constructor(%FloFile.676392* nocapture %.1, %string.676378* %.2, %string.676378* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %FloFile.676392, %FloFile.676392* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.11, align 8
  %.15 = getelementptr inbounds %FloFile.676392, %FloFile.676392* %.1, i64 0, i32 2
  store %string.676378* %.3, %string.676378** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FloFile>_constructor"(%"Array<FloFile>.676396"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %0 = bitcast %FloFile.676392*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FloFile>_resize"(%"Array<FloFile>.676396"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %0 = bitcast %FloFile.676392*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FloFile>_swap"(%"Array<FloFile>.676396"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %.48 = load %FloFile.676392**, %FloFile.676392*** %.47, align 8
  %.49 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.48, i64 %.2
  %4 = bitcast %FloFile.676392** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.48, i64 %.3
  %5 = bitcast %FloFile.676392** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FloFile.676392**, %FloFile.676392*** %.47, align 8
  %.69 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.67, i64 %.3
  %6 = bitcast %FloFile.676392** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloFile>___sl__"(%"Array<FloFile>.676396"* %.1, %FloFile.676392* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 0
  %.17 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FloFile>.676396"*)*, void (%"Array<FloFile>.676396"*)** %.18, align 8
  call void %.19(%"Array<FloFile>.676396"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %.31 = load %FloFile.676392**, %FloFile.676392*** %.30, align 8
  %.33 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.31, i64 %.24
  store %FloFile.676392* %.2, %FloFile.676392** %.33, align 8
  ret void
}

define void @"Array<FloFile>___setitem__"(%"Array<FloFile>.676396"* nocapture readonly %.1, i64 %.2, %FloFile.676392* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %.30 = load %FloFile.676392**, %FloFile.676392*** %.29, align 8
  %.32 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.30, i64 %.2
  store %FloFile.676392* %.3, %FloFile.676392** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloFile>_append"(%"Array<FloFile>.676396"* %.1, %FloFile.676392* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 0
  %.9 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FloFile>.676396"*, %FloFile.676392*)*, void (%"Array<FloFile>.676396"*, %FloFile.676392*)** %.10, align 8
  call void %.11(%"Array<FloFile>.676396"* %.1, %FloFile.676392* %.2)
  ret void
}

define %FloFile.676392* @"Array<FloFile>___getitem__"(%"Array<FloFile>.676396"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %.28 = load %FloFile.676392**, %FloFile.676392*** %.27, align 8
  %.29 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.28, i64 %.2
  %.30 = load %FloFile.676392*, %FloFile.676392** %.29, align 8
  ret %FloFile.676392* %.30

.4.endif:                                         ; preds = %.4
  ret %FloFile.676392* null
}

define i1 @"Array<FloFile>___eq__"(%"Array<FloFile>.676396"* %.1, %"Array<FloFile>.676396"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.28, i64 0, i32 5
  %.30 = load %FloFile.676392* (%"Array<FloFile>.676396"*, i64)*, %FloFile.676392* (%"Array<FloFile>.676396"*, i64)** %.29, align 8
  %.31 = call %FloFile.676392* %.30(%"Array<FloFile>.676396"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.35, i64 0, i32 5
  %.37 = load %FloFile.676392* (%"Array<FloFile>.676396"*, i64)*, %FloFile.676392* (%"Array<FloFile>.676396"*, i64)** %.36, align 8
  %.38 = call %FloFile.676392* %.37(%"Array<FloFile>.676396"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FloFile.676392* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FloFile.676392* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FloFile>___in__"(%"Array<FloFile>.676396"* %.1, %FloFile.676392* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FloFile.676392* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.19, i64 0, i32 5
  %.21 = load %FloFile.676392* (%"Array<FloFile>.676396"*, i64)*, %FloFile.676392* (%"Array<FloFile>.676396"*, i64)** %.20, align 8
  %.22 = call %FloFile.676392* %.21(%"Array<FloFile>.676396"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FloFile.676392* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FloFile>_find"(%"Array<FloFile>.676396"* nocapture readonly %.1, %FloFile.676392* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 1
  %.19 = load %FloFile.676392**, %FloFile.676392*** %.18, align 8
  %0 = ptrtoint %FloFile.676392* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FloFile.676392*, %FloFile.676392** %.19, i64 %storemerge5
  %1 = bitcast %FloFile.676392** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<FloFile>_join"(%"Array<FloFile>.676396"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.16, i64 0, i64 0), i64 8)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.16, i64 0, i64 0), i64 8)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<FloFile>___as_string__"(%"Array<FloFile>.676396"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.1, i64 0, i32 0
  %.7 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<FloFile>.676396"*, %string.676378*)*, %string.676378* (%"Array<FloFile>.676396"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<FloFile>.676396"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<FloError>_constructor"(%"Array<FloError>.676397"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %0 = bitcast %FloError.676384*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FloError>_resize"(%"Array<FloError>.676397"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %0 = bitcast %FloError.676384*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FloError>_swap"(%"Array<FloError>.676397"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %.48 = load %FloError.676384**, %FloError.676384*** %.47, align 8
  %.49 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.48, i64 %.2
  %4 = bitcast %FloError.676384** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.48, i64 %.3
  %5 = bitcast %FloError.676384** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FloError.676384**, %FloError.676384*** %.47, align 8
  %.69 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.67, i64 %.3
  %6 = bitcast %FloError.676384** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloError>___sl__"(%"Array<FloError>.676397"* %.1, %FloError.676384* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 0
  %.17 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FloError>.676397"*)*, void (%"Array<FloError>.676397"*)** %.18, align 8
  call void %.19(%"Array<FloError>.676397"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %.31 = load %FloError.676384**, %FloError.676384*** %.30, align 8
  %.33 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.31, i64 %.24
  store %FloError.676384* %.2, %FloError.676384** %.33, align 8
  ret void
}

define void @"Array<FloError>___setitem__"(%"Array<FloError>.676397"* nocapture readonly %.1, i64 %.2, %FloError.676384* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %.30 = load %FloError.676384**, %FloError.676384*** %.29, align 8
  %.32 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.30, i64 %.2
  store %FloError.676384* %.3, %FloError.676384** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FloError>_append"(%"Array<FloError>.676397"* %.1, %FloError.676384* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 0
  %.9 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FloError>.676397"*, %FloError.676384*)*, void (%"Array<FloError>.676397"*, %FloError.676384*)** %.10, align 8
  call void %.11(%"Array<FloError>.676397"* %.1, %FloError.676384* %.2)
  ret void
}

define %FloError.676384* @"Array<FloError>___getitem__"(%"Array<FloError>.676397"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %.28 = load %FloError.676384**, %FloError.676384*** %.27, align 8
  %.29 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.28, i64 %.2
  %.30 = load %FloError.676384*, %FloError.676384** %.29, align 8
  ret %FloError.676384* %.30

.4.endif:                                         ; preds = %.4
  ret %FloError.676384* null
}

define i1 @"Array<FloError>___eq__"(%"Array<FloError>.676397"* %.1, %"Array<FloError>.676397"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.28, i64 0, i32 5
  %.30 = load %FloError.676384* (%"Array<FloError>.676397"*, i64)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)** %.29, align 8
  %.31 = call %FloError.676384* %.30(%"Array<FloError>.676397"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.35, i64 0, i32 5
  %.37 = load %FloError.676384* (%"Array<FloError>.676397"*, i64)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)** %.36, align 8
  %.38 = call %FloError.676384* %.37(%"Array<FloError>.676397"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FloError.676384* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FloError.676384* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FloError>___in__"(%"Array<FloError>.676397"* %.1, %FloError.676384* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FloError.676384* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.19, i64 0, i32 5
  %.21 = load %FloError.676384* (%"Array<FloError>.676397"*, i64)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)** %.20, align 8
  %.22 = call %FloError.676384* %.21(%"Array<FloError>.676397"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FloError.676384* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FloError>_find"(%"Array<FloError>.676397"* nocapture readonly %.1, %FloError.676384* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 1
  %.19 = load %FloError.676384**, %FloError.676384*** %.18, align 8
  %0 = ptrtoint %FloError.676384* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FloError.676384*, %FloError.676384** %.19, i64 %storemerge5
  %1 = bitcast %FloError.676384** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<FloError>_join"(%"Array<FloError>.676397"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.19, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.19, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<FloError>___as_string__"(%"Array<FloError>.676397"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.1, i64 0, i32 0
  %.7 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<FloError>.676397"*, %string.676378*)*, %string.676378* (%"Array<FloError>.676397"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<FloError>.676397"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.676402"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, FileId>_set"(%"Bucket<string, FileId>.676402"* nocapture %.1, %string.676378* %.2, %FileId.676390* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.1, i64 0, i32 2
  store %FileId.676390* %.3, %FileId.676390** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, FileId>_constructor"(%"Map<string, FileId>.676398"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.676402"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, FileId>.676402"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, FileId>_vtable_ty.676403"**
  store %"Bucket<string, FileId>_vtable_ty.676403"* @"Bucket<string, FileId>_vtable_data", %"Bucket<string, FileId>_vtable_ty.676403"** %.26, align 8
  call void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.676402"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, FileId>.676402"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, FileId>_hash_fnc"(%"Map<string, FileId>.676398"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, FileId>_resize"(%"Map<string, FileId>.676398"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.676402"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, FileId>.676402"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, FileId>_vtable_ty.676403"**
  store %"Bucket<string, FileId>_vtable_ty.676403"* @"Bucket<string, FileId>_vtable_data", %"Bucket<string, FileId>_vtable_ty.676403"** %.45, align 8
  call void @"Bucket<string, FileId>_constructor"(%"Bucket<string, FileId>.676402"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, FileId>.676402"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, FileId>_set"(%"Map<string, FileId>.676398"* %.1, %string.676378* %.2, %FileId.676390* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, FileId>_vtable_ty.676401"*, %"Map<string, FileId>_vtable_ty.676401"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.676401", %"Map<string, FileId>_vtable_ty.676401"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, FileId>.676398"*, %string.676378*)*, i64 (%"Map<string, FileId>.676398"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, FileId>.676398"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, FileId>_vtable_ty.676401"*, %"Map<string, FileId>_vtable_ty.676401"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.676401", %"Map<string, FileId>_vtable_ty.676401"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, FileId>.676398"*)*, void (%"Map<string, FileId>.676398"*)** %.32, align 8
  call void %.33(%"Map<string, FileId>.676398"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.39, i64 %.19
  %.41 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, FileId>_vtable_ty.676403"*, %"Bucket<string, FileId>_vtable_ty.676403"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, FileId>_vtable_ty.676403", %"Bucket<string, FileId>_vtable_ty.676403"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, FileId>.676402"*, %string.676378*, %FileId.676390*)*, void (%"Bucket<string, FileId>.676402"*, %string.676378*, %FileId.676390*)** %.92, align 8
  call void %.93(%"Bucket<string, FileId>.676402"* %.89, %string.676378* %.2, %FileId.676390* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.70, i64 %.65
  %.72 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %FileId.676390* @"Map<string, FileId>_get"(%"Map<string, FileId>.676398"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, FileId>_vtable_ty.676401"*, %"Map<string, FileId>_vtable_ty.676401"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.676401", %"Map<string, FileId>_vtable_ty.676401"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, FileId>.676398"*, %string.676378*)*, i64 (%"Map<string, FileId>.676398"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, FileId>.676398"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.22, i64 %.17
  %.24 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.54, i64 %.48
  %.56 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %FileId.676390* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.91, i64 0, i32 2
  %.93 = load %FileId.676390*, %FileId.676390** %.92, align 8
  ret %FileId.676390* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, FileId>>_constructor"(%"Array<Bucket<string, FileId>>.676404"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.676402"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, FileId>>_resize"(%"Array<Bucket<string, FileId>>.676404"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, FileId>.676402"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, FileId>>_swap"(%"Array<Bucket<string, FileId>>.676404"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, FileId>.676402"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, FileId>.676402"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, FileId>.676402"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, FileId>>___sl__"(%"Array<Bucket<string, FileId>>.676404"* %.1, %"Bucket<string, FileId>.676402"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, FileId>>.676404"*)*, void (%"Array<Bucket<string, FileId>>.676404"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, FileId>>.676404"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.31, i64 %.24
  store %"Bucket<string, FileId>.676402"* %.2, %"Bucket<string, FileId>.676402"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, FileId>>___setitem__"(%"Array<Bucket<string, FileId>>.676404"* nocapture readonly %.1, i64 %.2, %"Bucket<string, FileId>.676402"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.30, i64 %.2
  store %"Bucket<string, FileId>.676402"* %.3, %"Bucket<string, FileId>.676402"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, FileId>>_append"(%"Array<Bucket<string, FileId>>.676404"* %.1, %"Bucket<string, FileId>.676402"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)*, void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, FileId>>.676404"* %.1, %"Bucket<string, FileId>.676402"* %.2)
  ret void
}

define %"Bucket<string, FileId>.676402"* @"Array<Bucket<string, FileId>>___getitem__"(%"Array<Bucket<string, FileId>>.676404"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.28, i64 %.2
  %.30 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.29, align 8
  ret %"Bucket<string, FileId>.676402"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, FileId>.676402"* null
}

define i1 @"Array<Bucket<string, FileId>>___eq__"(%"Array<Bucket<string, FileId>>.676404"* %.1, %"Array<Bucket<string, FileId>>.676404"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)*, %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, FileId>.676402"* %.30(%"Array<Bucket<string, FileId>>.676404"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)*, %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, FileId>.676402"* %.37(%"Array<Bucket<string, FileId>>.676404"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, FileId>.676402"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, FileId>.676402"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, FileId>>___in__"(%"Array<Bucket<string, FileId>>.676404"* %.1, %"Bucket<string, FileId>.676402"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, FileId>.676402"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)*, %"Bucket<string, FileId>.676402"* (%"Array<Bucket<string, FileId>>.676404"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, FileId>.676402"* %.21(%"Array<Bucket<string, FileId>>.676404"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, FileId>.676402"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, FileId>>_find"(%"Array<Bucket<string, FileId>>.676404"* nocapture readonly %.1, %"Bucket<string, FileId>.676402"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, FileId>.676402"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, FileId>.676402"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, FileId>>_join"(%"Array<Bucket<string, FileId>>.676404"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.20, i64 0, i64 0), i64 23)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.20, i64 0, i64 0), i64 23)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, FileId>>___as_string__"(%"Array<Bucket<string, FileId>>.676404"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, FileId>>.676404", %"Array<Bucket<string, FileId>>.676404"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, FileId>>.676404"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, FileId>>.676404"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, FileId>>.676404"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, FileId>>.676404"* @"Map<string, FileId>_get_buckets"(%"Map<string, FileId>.676398"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, FileId>>.676404"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, FileId>>_vtable_ty.676405"**
  store %"Array<Bucket<string, FileId>>_vtable_ty.676405"* @"Array<Bucket<string, FileId>>_vtable_data", %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, FileId>.676402"**, %"Bucket<string, FileId>.676402"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, FileId>.676402"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, FileId>.676402"*, align 8
  %4 = bitcast %"Bucket<string, FileId>.676402"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, FileId>.676402"*
  %.36 = getelementptr inbounds %"Bucket<string, FileId>.676402", %"Bucket<string, FileId>.676402"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, FileId>>.676404"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, FileId>.676402"*, %"Bucket<string, FileId>.676402"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, FileId>>_vtable_ty.676405"*, %"Array<Bucket<string, FileId>>_vtable_ty.676405"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, FileId>>_vtable_ty.676405", %"Array<Bucket<string, FileId>>_vtable_ty.676405"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)*, void (%"Array<Bucket<string, FileId>>.676404"*, %"Bucket<string, FileId>.676402"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, FileId>>.676404"* %.9, %"Bucket<string, FileId>.676402"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

define void @Compiler_constructor(%Compiler.676394* nocapture %.1) local_unnamed_addr {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<FloFile>_vtable_ty.676399"**
  store %"Array<FloFile>_vtable_ty.676399"* @"Array<FloFile>_vtable_data", %"Array<FloFile>_vtable_ty.676399"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 5
  %3 = bitcast %"Array<FloFile>.676396"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 1
  store %FileId.676390* null, %FileId.676390** %.22, align 8
  %.25 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 3
  store %string.676378* null, %string.676378** %.25, align 8
  %.29 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.31 to %"Array<FloError>_vtable_ty.676400"**
  store %"Array<FloError>_vtable_ty.676400"* @"Array<FloError>_vtable_data", %"Array<FloError>_vtable_ty.676400"** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %4 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %4, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %5 = bitcast i8* %.37 to i64*
  store i64 0, i64* %5, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %6 = bitcast i8* %.39 to i64*
  store i64 8, i64* %6, align 8
  %.41 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 6
  %7 = bitcast %"Array<FloError>.676397"** %.41 to i8**
  store i8* %.31, i8** %7, align 8
  %.44 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %"Map<string, FileId>.676398"*
  %.46 = bitcast i8* %.44 to %"Map<string, FileId>_vtable_ty.676401"**
  store %"Map<string, FileId>_vtable_ty.676401"* @"Map<string, FileId>_vtable_data", %"Map<string, FileId>_vtable_ty.676401"** %.46, align 8
  call void @"Map<string, FileId>_constructor"(%"Map<string, FileId>.676398"* %.45)
  %.49 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 7
  %8 = bitcast %"Map<string, FileId>.676398"** %.49 to i8**
  store i8* %.44, i8** %8, align 8
  %.52 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.53.repack = bitcast i8* %.52 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.53.repack, align 8
  %.53.repack1 = getelementptr inbounds i8, i8* %.52, i64 8
  %9 = bitcast i8* %.53.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.21, i64 0, i64 0), i8** %9, align 8
  %.53.repack2 = getelementptr inbounds i8, i8* %.52, i64 16
  %10 = bitcast i8* %.53.repack2 to i64*
  store i64 8, i64* %10, align 8
  %.53.repack3 = getelementptr inbounds i8, i8* %.52, i64 24
  %11 = bitcast i8* %.53.repack3 to i64*
  store i64 8, i64* %11, align 8
  %.55 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 2
  %12 = bitcast %string.676378** %.55 to i8**
  store i8* %.52, i8** %12, align 8
  %.60.cast = bitcast i8* %.52 to %string.676378*
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.676378*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.62.repack, align 8
  %.62.repack4 = getelementptr inbounds i8, i8* %.61, i64 8
  %13 = bitcast i8* %.62.repack4 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.22, i64 0, i64 0), i8** %13, align 8
  %.62.repack5 = getelementptr inbounds i8, i8* %.61, i64 16
  %14 = bitcast i8* %.62.repack5 to i64*
  store i64 12, i64* %14, align 8
  %.62.repack6 = getelementptr inbounds i8, i8* %.61, i64 24
  %15 = bitcast i8* %.62.repack6 to i64*
  store i64 12, i64* %15, align 8
  %.64 = call %string.676378* @Path_join(%string.676378* %.60.cast, %string.676378* %.62)
  %.65 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 4
  store %string.676378* %.64, %string.676378** %.65, align 8
  ret void
}

define noalias %string.676378* @Compiler_find_module_path(%Compiler.676394* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.9 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.9, i64 0, i32 10
  %.11 = load %string.676378* (%string.676378*, %string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*, %string.676378*)** %.10, align 8
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %string.676378*
  %.13.repack = bitcast i8* %.12 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.13.repack, align 8
  %.13.repack1 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.13.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.23, i64 0, i64 0), i8** %0, align 8
  %.13.repack2 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.13.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.13.repack3 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.13.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.16 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 2
  %.17 = load %string.676378*, %string.676378** %.16, align 8
  %.18 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.19 = bitcast i8* %.18 to %string.676378*
  %.19.repack = bitcast i8* %.18 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.19.repack, align 8
  %.19.repack4 = getelementptr inbounds i8, i8* %.18, i64 8
  %3 = bitcast i8* %.19.repack4 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.24, i64 0, i64 0), i8** %3, align 8
  %.19.repack5 = getelementptr inbounds i8, i8* %.18, i64 16
  %4 = bitcast i8* %.19.repack5 to i64*
  store i64 8, i64* %4, align 8
  %.19.repack6 = getelementptr inbounds i8, i8* %.18, i64 24
  %5 = bitcast i8* %.19.repack6 to i64*
  store i64 8, i64* %5, align 8
  %.21 = call %string.676378* @Path_join(%string.676378* %.17, %string.676378* %.19)
  %.22 = call %string.676378* %.11(%string.676378* %.2, %string.676378* %.13, %string.676378* %.21)
  %.25 = getelementptr inbounds %string.676378, %string.676378* %.22, i64 0, i32 0
  %.26 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.25, align 8
  %.27 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.26, i64 0, i32 12
  %.28 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.27, align 8
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack7 = getelementptr inbounds i8, i8* %.29, i64 8
  %6 = bitcast i8* %.30.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.25, i64 0, i64 0), i8** %6, align 8
  %.30.repack8 = getelementptr inbounds i8, i8* %.29, i64 16
  %7 = bitcast i8* %.30.repack8 to i64*
  store i64 4, i64* %7, align 8
  %.30.repack9 = getelementptr inbounds i8, i8* %.29, i64 24
  %8 = bitcast i8* %.30.repack9 to i64*
  store i64 4, i64* %8, align 8
  %.32 = call i1 %.28(%string.676378* %.22, %string.676378* %.30)
  br i1 %.32, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.676378*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.37.repack, align 8
  %.37.repack10 = getelementptr inbounds i8, i8* %.36, i64 8
  %9 = bitcast i8* %.37.repack10 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.25, i64 0, i64 0), i8** %9, align 8
  %.37.repack11 = getelementptr inbounds i8, i8* %.36, i64 16
  %10 = bitcast i8* %.37.repack11 to i64*
  store i64 4, i64* %10, align 8
  %.37.repack12 = getelementptr inbounds i8, i8* %.36, i64 24
  %11 = bitcast i8* %.37.repack12 to i64*
  store i64 4, i64* %11, align 8
  %.40 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.25, align 8
  %.41 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.40, i64 0, i32 0
  %.42 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.41, align 8
  %.43 = call %string.676378* %.42(%string.676378* %.22, %string.676378* %.37)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %path.0 = phi %string.676378* [ %.43, %.4.if ], [ %.22, %.4 ]
  %.47 = call %string.676378* @Path_abspath(%string.676378* %path.0)
  ret %string.676378* %.47
}

define %FileId.676390* @Compiler_register_file(%Compiler.676394* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 0
  %.9 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.8, align 8
  %.10 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.9, i64 0, i32 0
  %.11 = load %string.676378* (%Compiler.676394*, %string.676378*)*, %string.676378* (%Compiler.676394*, %string.676378*)** %.10, align 8
  %.13 = call %string.676378* %.11(%Compiler.676394* %.1, %string.676378* %.2)
  %.16 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 7
  %.17 = load %"Map<string, FileId>.676398"*, %"Map<string, FileId>.676398"** %.16, align 8
  %.18 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.17, i64 0, i32 0
  %.19 = load %"Map<string, FileId>_vtable_ty.676401"*, %"Map<string, FileId>_vtable_ty.676401"** %.18, align 8
  %.20 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.676401", %"Map<string, FileId>_vtable_ty.676401"* %.19, i64 0, i32 3
  %.21 = load %FileId.676390* (%"Map<string, FileId>.676398"*, %string.676378*)*, %FileId.676390* (%"Map<string, FileId>.676398"*, %string.676378*)** %.20, align 8
  %.23 = call %FileId.676390* %.21(%"Map<string, FileId>.676398"* %.17, %string.676378* %.13)
  %0 = ptrtoint %FileId.676390* %.23 to i64
  %.26 = trunc i64 %0 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret %FileId.676390* %.23

.4.endif:                                         ; preds = %.4
  %.33 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 5
  %.34 = load %"Array<FloFile>.676396"*, %"Array<FloFile>.676396"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.34, i64 0, i32 2
  %.36 = load i64, i64* %.35, align 8
  %.37 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.38 = bitcast i8* %.37 to %FileId.676390*
  %.39 = bitcast i8* %.37 to %FileId_vtable_ty.676391**
  store %FileId_vtable_ty.676391* @FileId_vtable_data, %FileId_vtable_ty.676391** %.39, align 8
  call void @FileId_constructor(%FileId.676390* %.38, i64 %.36)
  %.45 = load %"Map<string, FileId>.676398"*, %"Map<string, FileId>.676398"** %.16, align 8
  %.46 = getelementptr inbounds %"Map<string, FileId>.676398", %"Map<string, FileId>.676398"* %.45, i64 0, i32 0
  %.47 = load %"Map<string, FileId>_vtable_ty.676401"*, %"Map<string, FileId>_vtable_ty.676401"** %.46, align 8
  %.48 = getelementptr inbounds %"Map<string, FileId>_vtable_ty.676401", %"Map<string, FileId>_vtable_ty.676401"* %.47, i64 0, i32 2
  %.49 = load void (%"Map<string, FileId>.676398"*, %string.676378*, %FileId.676390*)*, void (%"Map<string, FileId>.676398"*, %string.676378*, %FileId.676390*)** %.48, align 8
  call void %.49(%"Map<string, FileId>.676398"* %.45, %string.676378* %.13, %FileId.676390* %.38)
  %.55 = load %"Array<FloFile>.676396"*, %"Array<FloFile>.676396"** %.33, align 8
  %.58 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.59 = bitcast i8* %.58 to %FloFile.676392*
  %.60 = bitcast i8* %.58 to %FloFile_vtable_ty.676393**
  store %FloFile_vtable_ty.676393* @FloFile_vtable_data, %FloFile_vtable_ty.676393** %.60, align 8
  call void @FloFile_constructor(%FloFile.676392* %.59, %string.676378* %.13, %string.676378* %.2)
  %.63 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.55, i64 0, i32 0
  %.64 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.64, i64 0, i32 2
  %.66 = load void (%"Array<FloFile>.676396"*, %FloFile.676392*)*, void (%"Array<FloFile>.676396"*, %FloFile.676392*)** %.65, align 8
  call void %.66(%"Array<FloFile>.676396"* %.55, %FloFile.676392* %.59)
  ret %FileId.676390* %.38
}

define i1 @Compiler_set_current_file(%Compiler.676394* nocapture %.1, %FileId.676390* %.2) {
.4:
  %.8 = getelementptr inbounds %FileId.676390, %FileId.676390* %.2, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 5
  %.12 = load %"Array<FloFile>.676396"*, %"Array<FloFile>.676396"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.12, i64 0, i32 0
  %.14 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.14, i64 0, i32 5
  %.16 = load %FloFile.676392* (%"Array<FloFile>.676396"*, i64)*, %FloFile.676392* (%"Array<FloFile>.676396"*, i64)** %.15, align 8
  %.17 = call %FloFile.676392* %.16(%"Array<FloFile>.676396"* %.12, i64 %.9)
  %.20 = getelementptr inbounds %FloFile.676392, %FloFile.676392* %.17, i64 0, i32 1
  %.21 = load %string.676378*, %string.676378** %.20, align 8
  %.22 = call i1 @File_exists(%string.676378* %.21)
  br i1 %.22, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  ret i1 false

.4.endif:                                         ; preds = %.4
  %.28 = load %string.676378*, %string.676378** %.20, align 8
  %.29 = call %File.676386* @File_open_for_reading(%string.676378* %.28)
  %.33 = getelementptr inbounds %File.676386, %File.676386* %.29, i64 0, i32 0
  %.34 = load %File_vtable_ty.676387*, %File_vtable_ty.676387** %.33, align 8
  %.35 = getelementptr inbounds %File_vtable_ty.676387, %File_vtable_ty.676387* %.34, i64 0, i32 0
  %.36 = load %string.676378* (%File.676386*)*, %string.676378* (%File.676386*)** %.35, align 8
  %.37 = call %string.676378* %.36(%File.676386* %.29)
  %.38 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 3
  store %string.676378* %.37, %string.676378** %.38, align 8
  %.42 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 1
  store %FileId.676390* %.2, %FileId.676390** %.42, align 8
  %.46 = load %File_vtable_ty.676387*, %File_vtable_ty.676387** %.33, align 8
  %.47 = getelementptr inbounds %File_vtable_ty.676387, %File_vtable_ty.676387* %.46, i64 0, i32 1
  %.48 = load void (%File.676386*)*, void (%File.676386*)** %.47, align 8
  call void %.48(%File.676386* %.29)
  ret i1 true
}

define i1 @Compiler_print_errors(%Compiler.676394* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 6
  %.7 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.7, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp sgt i64 %.9, 0
  br i1 %.10, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.15 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.7, i64 0, i32 0
  %.16 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.15, align 8
  %.17 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.16, i64 0, i32 5
  %.18 = load %FloError.676384* (%"Array<FloError>.676397"*, i64)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)** %.17, align 8
  %.19 = call %FloError.676384* %.18(%"Array<FloError>.676397"* %.7, i64 0)
  %.21 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 1
  %.22 = load %FileId.676390*, %FileId.676390** %.21, align 8
  %.23 = getelementptr inbounds %FileId.676390, %FileId.676390* %.22, i64 0, i32 1
  %.24 = load i64, i64* %.23, align 8
  %.26 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 5
  %.27 = load %"Array<FloFile>.676396"*, %"Array<FloFile>.676396"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<FloFile>.676396", %"Array<FloFile>.676396"* %.27, i64 0, i32 0
  %.29 = load %"Array<FloFile>_vtable_ty.676399"*, %"Array<FloFile>_vtable_ty.676399"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<FloFile>_vtable_ty.676399", %"Array<FloFile>_vtable_ty.676399"* %.29, i64 0, i32 5
  %.31 = load %FloFile.676392* (%"Array<FloFile>.676396"*, i64)*, %FloFile.676392* (%"Array<FloFile>.676396"*, i64)** %.30, align 8
  %.32 = call %FloFile.676392* %.31(%"Array<FloFile>.676396"* %.27, i64 %.24)
  %.33 = getelementptr inbounds %FloFile.676392, %FloFile.676392* %.32, i64 0, i32 2
  %.34 = load %string.676378*, %string.676378** %.33, align 8
  %.36 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 3
  %.37 = load %string.676378*, %string.676378** %.36, align 8
  call void @print_error(%FloError.676384* %.19, %string.676378* %.34, %string.676378* %.37)
  ret i1 true

.3.endif:                                         ; preds = %.3
  ret i1 false
}

define %FileId.676390* @Compiler_add_builtins(%Compiler.676394* %.1) {
.3:
  %.6 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 0
  %.7 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.6, align 8
  %.8 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.7, i64 0, i32 1
  %.9 = load %FileId.676390* (%Compiler.676394*, %string.676378*)*, %FileId.676390* (%Compiler.676394*, %string.676378*)** %.8, align 8
  %.11 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.1, i64 0, i32 4
  %.12 = load %string.676378*, %string.676378** %.11, align 8
  %.13 = call %FileId.676390* %.9(%Compiler.676394* %.1, %string.676378* %.12)
  ret %FileId.676390* %.13
}

define i64 @string_to_kw_token(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.676378*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.26, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 3, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 3, i64* %2, align 8
  %.9 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.10, i64 0, i32 4
  %.12 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.11, align 8
  %.13 = call i1 %.12(%string.676378* %.1, %string.676378* %.7)
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3.endif.endif.endif.endi...endif.6, %.3.endif.endif.endif.endi...endif.5.endif.endif.endif, %.3.endif.endif.endif.endi...endif.5.endif.endif, %.3.endif.endif.endif.endi...endif.5.endif, %.3.endif.endif.endif.endi...endif.5, %.3.endif.endif.endif.endi...endif.4.endif.endif.endif, %.3.endif.endif.endif.endi...endif.4.endif.endif, %.3.endif.endif.endif.endi...endif.4.endif, %.3.endif.endif.endif.endi...endif.4, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif, %.3.endif.endif.endif.endi...endif.3, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif, %.3.endif.endif.endif.endi...endif.2, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif, %.3.endif.endif.endif.endi...endif.1, %.3.endif.endif.endif.endi...endif.endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif, %.3.endif.endif.endif, %.3.endif.endif, %.3.endif, %.3
  %merge = phi i64 [ 51, %.3 ], [ 52, %.3.endif ], [ 53, %.3.endif.endif ], [ 54, %.3.endif.endif.endif ], [ 55, %.3.endif.endif.endif.endif ], [ 56, %.3.endif.endif.endif.endif.endif ], [ 57, %.3.endif.endif.endif.endif.endif.endif ], [ 58, %.3.endif.endif.endif.endif.endif.endif.endif ], [ 59, %.3.endif.endif.endif.endif.endif.endif.endif.endif ], [ 60, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif ], [ 61, %.3.endif.endif.endif.endi...endif ], [ 62, %.3.endif.endif.endif.endi...endif.endif ], [ 63, %.3.endif.endif.endif.endi...endif.endif.endif ], [ 64, %.3.endif.endif.endif.endi...endif.endif.endif.endif ], [ 65, %.3.endif.endif.endif.endi...endif.1 ], [ 66, %.3.endif.endif.endif.endi...endif.1.endif ], [ 67, %.3.endif.endif.endif.endi...endif.1.endif.endif ], [ 68, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif ], [ 69, %.3.endif.endif.endif.endi...endif.2 ], [ 70, %.3.endif.endif.endif.endi...endif.2.endif ], [ 71, %.3.endif.endif.endif.endi...endif.2.endif.endif ], [ 72, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif ], [ 73, %.3.endif.endif.endif.endi...endif.3 ], [ 74, %.3.endif.endif.endif.endi...endif.3.endif ], [ 75, %.3.endif.endif.endif.endi...endif.3.endif.endif ], [ 76, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif ], [ 77, %.3.endif.endif.endif.endi...endif.4 ], [ 78, %.3.endif.endif.endif.endi...endif.4.endif ], [ 79, %.3.endif.endif.endif.endi...endif.4.endif.endif ], [ 80, %.3.endif.endif.endif.endi...endif.4.endif.endif.endif ], [ 81, %.3.endif.endif.endif.endi...endif.5 ], [ 82, %.3.endif.endif.endif.endi...endif.5.endif ], [ 83, %.3.endif.endif.endif.endi...endif.5.endif.endif ], [ 84, %.3.endif.endif.endif.endi...endif.5.endif.endif.endif ], [ %., %.3.endif.endif.endif.endi...endif.6 ]
  ret i64 %merge

.3.endif:                                         ; preds = %.3
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.676378*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %3 = bitcast i8* %.18.repack4 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.27, i64 0, i64 0), i8** %3, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %4 = bitcast i8* %.18.repack5 to i64*
  store i64 2, i64* %4, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %5 = bitcast i8* %.18.repack6 to i64*
  store i64 2, i64* %5, align 8
  %.21 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.21, i64 0, i32 4
  %.23 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.22, align 8
  %.24 = call i1 %.23(%string.676378* %.1, %string.676378* %.18)
  br i1 %.24, label %.3.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.676378*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.28, i64 0, i64 0), i8** %6, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %7 = bitcast i8* %.29.repack8 to i64*
  store i64 3, i64* %7, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %8 = bitcast i8* %.29.repack9 to i64*
  store i64 3, i64* %8, align 8
  %.32 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.32, i64 0, i32 4
  %.34 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.33, align 8
  %.35 = call i1 %.34(%string.676378* %.1, %string.676378* %.29)
  br i1 %.35, label %.3.if, label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.676378*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.29, i64 0, i64 0), i8** %9, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack11 to i64*
  store i64 5, i64* %10, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack12 to i64*
  store i64 5, i64* %11, align 8
  %.43 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.43, i64 0, i32 4
  %.45 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.44, align 8
  %.46 = call i1 %.45(%string.676378* %.1, %string.676378* %.40)
  br i1 %.46, label %.3.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.51.repack, align 8
  %.51.repack13 = getelementptr inbounds i8, i8* %.50, i64 8
  %12 = bitcast i8* %.51.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.30, i64 0, i64 0), i8** %12, align 8
  %.51.repack14 = getelementptr inbounds i8, i8* %.50, i64 16
  %13 = bitcast i8* %.51.repack14 to i64*
  store i64 3, i64* %13, align 8
  %.51.repack15 = getelementptr inbounds i8, i8* %.50, i64 24
  %14 = bitcast i8* %.51.repack15 to i64*
  store i64 3, i64* %14, align 8
  %.54 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.54, i64 0, i32 4
  %.56 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.55, align 8
  %.57 = call i1 %.56(%string.676378* %.1, %string.676378* %.51)
  br i1 %.57, label %.3.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.676378*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.62.repack, align 8
  %.62.repack16 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.31, i64 0, i64 0), i8** %15, align 8
  %.62.repack17 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack17 to i64*
  store i64 2, i64* %16, align 8
  %.62.repack18 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack18 to i64*
  store i64 2, i64* %17, align 8
  %.65 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.65, i64 0, i32 4
  %.67 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.66, align 8
  %.68 = call i1 %.67(%string.676378* %.1, %string.676378* %.62)
  br i1 %.68, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.676378*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.73.repack, align 8
  %.73.repack19 = getelementptr inbounds i8, i8* %.72, i64 8
  %18 = bitcast i8* %.73.repack19 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.32, i64 0, i64 0), i8** %18, align 8
  %.73.repack20 = getelementptr inbounds i8, i8* %.72, i64 16
  %19 = bitcast i8* %.73.repack20 to i64*
  store i64 4, i64* %19, align 8
  %.73.repack21 = getelementptr inbounds i8, i8* %.72, i64 24
  %20 = bitcast i8* %.73.repack21 to i64*
  store i64 4, i64* %20, align 8
  %.76 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.76, i64 0, i32 4
  %.78 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.77, align 8
  %.79 = call i1 %.78(%string.676378* %.1, %string.676378* %.73)
  br i1 %.79, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.3.endif.endif.endif.endif.endif.endif
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.676378*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.84.repack, align 8
  %.84.repack22 = getelementptr inbounds i8, i8* %.83, i64 8
  %21 = bitcast i8* %.84.repack22 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.33, i64 0, i64 0), i8** %21, align 8
  %.84.repack23 = getelementptr inbounds i8, i8* %.83, i64 16
  %22 = bitcast i8* %.84.repack23 to i64*
  store i64 4, i64* %22, align 8
  %.84.repack24 = getelementptr inbounds i8, i8* %.83, i64 24
  %23 = bitcast i8* %.84.repack24 to i64*
  store i64 4, i64* %23, align 8
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 4
  %.89 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.88, align 8
  %.90 = call i1 %.89(%string.676378* %.1, %string.676378* %.84)
  br i1 %.90, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.676378*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.95.repack, align 8
  %.95.repack25 = getelementptr inbounds i8, i8* %.94, i64 8
  %24 = bitcast i8* %.95.repack25 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.34, i64 0, i64 0), i8** %24, align 8
  %.95.repack26 = getelementptr inbounds i8, i8* %.94, i64 16
  %25 = bitcast i8* %.95.repack26 to i64*
  store i64 2, i64* %25, align 8
  %.95.repack27 = getelementptr inbounds i8, i8* %.94, i64 24
  %26 = bitcast i8* %.95.repack27 to i64*
  store i64 2, i64* %26, align 8
  %.98 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.98, i64 0, i32 4
  %.100 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.99, align 8
  %.101 = call i1 %.100(%string.676378* %.1, %string.676378* %.95)
  br i1 %.101, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.676378*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.106.repack, align 8
  %.106.repack28 = getelementptr inbounds i8, i8* %.105, i64 8
  %27 = bitcast i8* %.106.repack28 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.35, i64 0, i64 0), i8** %27, align 8
  %.106.repack29 = getelementptr inbounds i8, i8* %.105, i64 16
  %28 = bitcast i8* %.106.repack29 to i64*
  store i64 2, i64* %28, align 8
  %.106.repack30 = getelementptr inbounds i8, i8* %.105, i64 24
  %29 = bitcast i8* %.106.repack30 to i64*
  store i64 2, i64* %29, align 8
  %.109 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.109, i64 0, i32 4
  %.111 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.110, align 8
  %.112 = call i1 %.111(%string.676378* %.1, %string.676378* %.106)
  br i1 %.112, label %.3.if, label %.3.endif.endif.endif.endi...endif

.3.endif.endif.endif.endi...endif:                ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.116 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.676378*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.117.repack, align 8
  %.117.repack31 = getelementptr inbounds i8, i8* %.116, i64 8
  %30 = bitcast i8* %.117.repack31 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i64 0, i64 0), i8** %30, align 8
  %.117.repack32 = getelementptr inbounds i8, i8* %.116, i64 16
  %31 = bitcast i8* %.117.repack32 to i64*
  store i64 3, i64* %31, align 8
  %.117.repack33 = getelementptr inbounds i8, i8* %.116, i64 24
  %32 = bitcast i8* %.117.repack33 to i64*
  store i64 3, i64* %32, align 8
  %.120 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.120, i64 0, i32 4
  %.122 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.121, align 8
  %.123 = call i1 %.122(%string.676378* %.1, %string.676378* %.117)
  br i1 %.123, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3.endif.endif.endif.endi...endif
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.128.repack, align 8
  %.128.repack34 = getelementptr inbounds i8, i8* %.127, i64 8
  %33 = bitcast i8* %.128.repack34 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.37, i64 0, i64 0), i8** %33, align 8
  %.128.repack35 = getelementptr inbounds i8, i8* %.127, i64 16
  %34 = bitcast i8* %.128.repack35 to i64*
  store i64 3, i64* %34, align 8
  %.128.repack36 = getelementptr inbounds i8, i8* %.127, i64 24
  %35 = bitcast i8* %.128.repack36 to i64*
  store i64 3, i64* %35, align 8
  %.131 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.132 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.131, i64 0, i32 4
  %.133 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.132, align 8
  %.134 = call i1 %.133(%string.676378* %.1, %string.676378* %.128)
  br i1 %.134, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.3.endif.endif.endif.endi...endif.endif
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.676378*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.139.repack, align 8
  %.139.repack37 = getelementptr inbounds i8, i8* %.138, i64 8
  %36 = bitcast i8* %.139.repack37 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.38, i64 0, i64 0), i8** %36, align 8
  %.139.repack38 = getelementptr inbounds i8, i8* %.138, i64 16
  %37 = bitcast i8* %.139.repack38 to i64*
  store i64 3, i64* %37, align 8
  %.139.repack39 = getelementptr inbounds i8, i8* %.138, i64 24
  %38 = bitcast i8* %.139.repack39 to i64*
  store i64 3, i64* %38, align 8
  %.142 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.142, i64 0, i32 4
  %.144 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.143, align 8
  %.145 = call i1 %.144(%string.676378* %.1, %string.676378* %.139)
  br i1 %.145, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif
  %.149 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.676378*
  %.150.repack = bitcast i8* %.149 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.150.repack, align 8
  %.150.repack40 = getelementptr inbounds i8, i8* %.149, i64 8
  %39 = bitcast i8* %.150.repack40 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.39, i64 0, i64 0), i8** %39, align 8
  %.150.repack41 = getelementptr inbounds i8, i8* %.149, i64 16
  %40 = bitcast i8* %.150.repack41 to i64*
  store i64 4, i64* %40, align 8
  %.150.repack42 = getelementptr inbounds i8, i8* %.149, i64 24
  %41 = bitcast i8* %.150.repack42 to i64*
  store i64 4, i64* %41, align 8
  %.153 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.153, i64 0, i32 4
  %.155 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.154, align 8
  %.156 = call i1 %.155(%string.676378* %.1, %string.676378* %.150)
  br i1 %.156, label %.3.if, label %.3.endif.endif.endif.endi...endif.1

.3.endif.endif.endif.endi...endif.1:              ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.endif
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.676378*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.161.repack, align 8
  %.161.repack43 = getelementptr inbounds i8, i8* %.160, i64 8
  %42 = bitcast i8* %.161.repack43 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.40, i64 0, i64 0), i8** %42, align 8
  %.161.repack44 = getelementptr inbounds i8, i8* %.160, i64 16
  %43 = bitcast i8* %.161.repack44 to i64*
  store i64 3, i64* %43, align 8
  %.161.repack45 = getelementptr inbounds i8, i8* %.160, i64 24
  %44 = bitcast i8* %.161.repack45 to i64*
  store i64 3, i64* %44, align 8
  %.164 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.165 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.164, i64 0, i32 4
  %.166 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.165, align 8
  %.167 = call i1 %.166(%string.676378* %.1, %string.676378* %.161)
  br i1 %.167, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif

.3.endif.endif.endif.endi...endif.1.endif:        ; preds = %.3.endif.endif.endif.endi...endif.1
  %.171 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.676378*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.172.repack, align 8
  %.172.repack46 = getelementptr inbounds i8, i8* %.171, i64 8
  %45 = bitcast i8* %.172.repack46 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.41, i64 0, i64 0), i8** %45, align 8
  %.172.repack47 = getelementptr inbounds i8, i8* %.171, i64 16
  %46 = bitcast i8* %.172.repack47 to i64*
  store i64 3, i64* %46, align 8
  %.172.repack48 = getelementptr inbounds i8, i8* %.171, i64 24
  %47 = bitcast i8* %.172.repack48 to i64*
  store i64 3, i64* %47, align 8
  %.175 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.176 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.175, i64 0, i32 4
  %.177 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.176, align 8
  %.178 = call i1 %.177(%string.676378* %.1, %string.676378* %.172)
  br i1 %.178, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.1.endif
  %.182 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %string.676378*
  %.183.repack = bitcast i8* %.182 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.183.repack, align 8
  %.183.repack49 = getelementptr inbounds i8, i8* %.182, i64 8
  %48 = bitcast i8* %.183.repack49 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.42, i64 0, i64 0), i8** %48, align 8
  %.183.repack50 = getelementptr inbounds i8, i8* %.182, i64 16
  %49 = bitcast i8* %.183.repack50 to i64*
  store i64 3, i64* %49, align 8
  %.183.repack51 = getelementptr inbounds i8, i8* %.182, i64 24
  %50 = bitcast i8* %.183.repack51 to i64*
  store i64 3, i64* %50, align 8
  %.186 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.187 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.186, i64 0, i32 4
  %.188 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.187, align 8
  %.189 = call i1 %.188(%string.676378* %.1, %string.676378* %.183)
  br i1 %.189, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif
  %.193 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.676378*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.194.repack, align 8
  %.194.repack52 = getelementptr inbounds i8, i8* %.193, i64 8
  %51 = bitcast i8* %.194.repack52 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.43, i64 0, i64 0), i8** %51, align 8
  %.194.repack53 = getelementptr inbounds i8, i8* %.193, i64 16
  %52 = bitcast i8* %.194.repack53 to i64*
  store i64 3, i64* %52, align 8
  %.194.repack54 = getelementptr inbounds i8, i8* %.193, i64 24
  %53 = bitcast i8* %.194.repack54 to i64*
  store i64 3, i64* %53, align 8
  %.197 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.197, i64 0, i32 4
  %.199 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.198, align 8
  %.200 = call i1 %.199(%string.676378* %.1, %string.676378* %.194)
  br i1 %.200, label %.3.if, label %.3.endif.endif.endif.endi...endif.2

.3.endif.endif.endif.endi...endif.2:              ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.676378*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.205.repack, align 8
  %.205.repack55 = getelementptr inbounds i8, i8* %.204, i64 8
  %54 = bitcast i8* %.205.repack55 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.44, i64 0, i64 0), i8** %54, align 8
  %.205.repack56 = getelementptr inbounds i8, i8* %.204, i64 16
  %55 = bitcast i8* %.205.repack56 to i64*
  store i64 5, i64* %55, align 8
  %.205.repack57 = getelementptr inbounds i8, i8* %.204, i64 24
  %56 = bitcast i8* %.205.repack57 to i64*
  store i64 5, i64* %56, align 8
  %.208 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.209 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.208, i64 0, i32 4
  %.210 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.209, align 8
  %.211 = call i1 %.210(%string.676378* %.1, %string.676378* %.205)
  br i1 %.211, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3.endif.endif.endif.endi...endif.2
  %.215 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %string.676378*
  %.216.repack = bitcast i8* %.215 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.216.repack, align 8
  %.216.repack58 = getelementptr inbounds i8, i8* %.215, i64 8
  %57 = bitcast i8* %.216.repack58 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.45, i64 0, i64 0), i8** %57, align 8
  %.216.repack59 = getelementptr inbounds i8, i8* %.215, i64 16
  %58 = bitcast i8* %.216.repack59 to i64*
  store i64 4, i64* %58, align 8
  %.216.repack60 = getelementptr inbounds i8, i8* %.215, i64 24
  %59 = bitcast i8* %.216.repack60 to i64*
  store i64 4, i64* %59, align 8
  %.219 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.220 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.219, i64 0, i32 4
  %.221 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.220, align 8
  %.222 = call i1 %.221(%string.676378* %.1, %string.676378* %.216)
  br i1 %.222, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.2.endif
  %.226 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.227 = bitcast i8* %.226 to %string.676378*
  %.227.repack = bitcast i8* %.226 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.227.repack, align 8
  %.227.repack61 = getelementptr inbounds i8, i8* %.226, i64 8
  %60 = bitcast i8* %.227.repack61 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.46, i64 0, i64 0), i8** %60, align 8
  %.227.repack62 = getelementptr inbounds i8, i8* %.226, i64 16
  %61 = bitcast i8* %.227.repack62 to i64*
  store i64 3, i64* %61, align 8
  %.227.repack63 = getelementptr inbounds i8, i8* %.226, i64 24
  %62 = bitcast i8* %.227.repack63 to i64*
  store i64 3, i64* %62, align 8
  %.230 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.230, i64 0, i32 4
  %.232 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.231, align 8
  %.233 = call i1 %.232(%string.676378* %.1, %string.676378* %.227)
  br i1 %.233, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif
  %.237 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.676378*
  %.238.repack = bitcast i8* %.237 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.238.repack, align 8
  %.238.repack64 = getelementptr inbounds i8, i8* %.237, i64 8
  %63 = bitcast i8* %.238.repack64 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.47, i64 0, i64 0), i8** %63, align 8
  %.238.repack65 = getelementptr inbounds i8, i8* %.237, i64 16
  %64 = bitcast i8* %.238.repack65 to i64*
  store i64 5, i64* %64, align 8
  %.238.repack66 = getelementptr inbounds i8, i8* %.237, i64 24
  %65 = bitcast i8* %.238.repack66 to i64*
  store i64 5, i64* %65, align 8
  %.241 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.241, i64 0, i32 4
  %.243 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.242, align 8
  %.244 = call i1 %.243(%string.676378* %.1, %string.676378* %.238)
  br i1 %.244, label %.3.if, label %.3.endif.endif.endif.endi...endif.3

.3.endif.endif.endif.endi...endif.3:              ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif.endif
  %.248 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.676378*
  %.249.repack = bitcast i8* %.248 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.249.repack, align 8
  %.249.repack67 = getelementptr inbounds i8, i8* %.248, i64 8
  %66 = bitcast i8* %.249.repack67 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.48, i64 0, i64 0), i8** %66, align 8
  %.249.repack68 = getelementptr inbounds i8, i8* %.248, i64 16
  %67 = bitcast i8* %.249.repack68 to i64*
  store i64 3, i64* %67, align 8
  %.249.repack69 = getelementptr inbounds i8, i8* %.248, i64 24
  %68 = bitcast i8* %.249.repack69 to i64*
  store i64 3, i64* %68, align 8
  %.252 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.253 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.252, i64 0, i32 4
  %.254 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.253, align 8
  %.255 = call i1 %.254(%string.676378* %.1, %string.676378* %.249)
  br i1 %.255, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif

.3.endif.endif.endif.endi...endif.3.endif:        ; preds = %.3.endif.endif.endif.endi...endif.3
  %.259 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %string.676378*
  %.260.repack = bitcast i8* %.259 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.260.repack, align 8
  %.260.repack70 = getelementptr inbounds i8, i8* %.259, i64 8
  %69 = bitcast i8* %.260.repack70 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.49, i64 0, i64 0), i8** %69, align 8
  %.260.repack71 = getelementptr inbounds i8, i8* %.259, i64 16
  %70 = bitcast i8* %.260.repack71 to i64*
  store i64 5, i64* %70, align 8
  %.260.repack72 = getelementptr inbounds i8, i8* %.259, i64 24
  %71 = bitcast i8* %.260.repack72 to i64*
  store i64 5, i64* %71, align 8
  %.263 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.263, i64 0, i32 4
  %.265 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.264, align 8
  %.266 = call i1 %.265(%string.676378* %.1, %string.676378* %.260)
  br i1 %.266, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.3.endif
  %.270 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.676378*
  %.271.repack = bitcast i8* %.270 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.271.repack, align 8
  %.271.repack73 = getelementptr inbounds i8, i8* %.270, i64 8
  %72 = bitcast i8* %.271.repack73 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.50, i64 0, i64 0), i8** %72, align 8
  %.271.repack74 = getelementptr inbounds i8, i8* %.270, i64 16
  %73 = bitcast i8* %.271.repack74 to i64*
  store i64 8, i64* %73, align 8
  %.271.repack75 = getelementptr inbounds i8, i8* %.270, i64 24
  %74 = bitcast i8* %.271.repack75 to i64*
  store i64 8, i64* %74, align 8
  %.274 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.275 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.274, i64 0, i32 4
  %.276 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.275, align 8
  %.277 = call i1 %.276(%string.676378* %.1, %string.676378* %.271)
  br i1 %.277, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif
  %.281 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.676378*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.282.repack, align 8
  %.282.repack76 = getelementptr inbounds i8, i8* %.281, i64 8
  %75 = bitcast i8* %.282.repack76 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.51, i64 0, i64 0), i8** %75, align 8
  %.282.repack77 = getelementptr inbounds i8, i8* %.281, i64 16
  %76 = bitcast i8* %.282.repack77 to i64*
  store i64 6, i64* %76, align 8
  %.282.repack78 = getelementptr inbounds i8, i8* %.281, i64 24
  %77 = bitcast i8* %.282.repack78 to i64*
  store i64 6, i64* %77, align 8
  %.285 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.286 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.285, i64 0, i32 4
  %.287 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.286, align 8
  %.288 = call i1 %.287(%string.676378* %.1, %string.676378* %.282)
  br i1 %.288, label %.3.if, label %.3.endif.endif.endif.endi...endif.4

.3.endif.endif.endif.endi...endif.4:              ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif.endif
  %.292 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.676378*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.293.repack, align 8
  %.293.repack79 = getelementptr inbounds i8, i8* %.292, i64 8
  %78 = bitcast i8* %.293.repack79 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.52, i64 0, i64 0), i8** %78, align 8
  %.293.repack80 = getelementptr inbounds i8, i8* %.292, i64 16
  %79 = bitcast i8* %.293.repack80 to i64*
  store i64 6, i64* %79, align 8
  %.293.repack81 = getelementptr inbounds i8, i8* %.292, i64 24
  %80 = bitcast i8* %.293.repack81 to i64*
  store i64 6, i64* %80, align 8
  %.296 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.296, i64 0, i32 4
  %.298 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.297, align 8
  %.299 = call i1 %.298(%string.676378* %.1, %string.676378* %.293)
  br i1 %.299, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif

.3.endif.endif.endif.endi...endif.4.endif:        ; preds = %.3.endif.endif.endif.endi...endif.4
  %.303 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.676378*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.304.repack, align 8
  %.304.repack82 = getelementptr inbounds i8, i8* %.303, i64 8
  %81 = bitcast i8* %.304.repack82 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.53, i64 0, i64 0), i8** %81, align 8
  %.304.repack83 = getelementptr inbounds i8, i8* %.303, i64 16
  %82 = bitcast i8* %.304.repack83 to i64*
  store i64 7, i64* %82, align 8
  %.304.repack84 = getelementptr inbounds i8, i8* %.303, i64 24
  %83 = bitcast i8* %.304.repack84 to i64*
  store i64 7, i64* %83, align 8
  %.307 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.308 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.307, i64 0, i32 4
  %.309 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.308, align 8
  %.310 = call i1 %.309(%string.676378* %.1, %string.676378* %.304)
  br i1 %.310, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.4.endif
  %.314 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.676378*
  %.315.repack = bitcast i8* %.314 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.315.repack, align 8
  %.315.repack85 = getelementptr inbounds i8, i8* %.314, i64 8
  %84 = bitcast i8* %.315.repack85 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.54, i64 0, i64 0), i8** %84, align 8
  %.315.repack86 = getelementptr inbounds i8, i8* %.314, i64 16
  %85 = bitcast i8* %.315.repack86 to i64*
  store i64 6, i64* %85, align 8
  %.315.repack87 = getelementptr inbounds i8, i8* %.314, i64 24
  %86 = bitcast i8* %.315.repack87 to i64*
  store i64 6, i64* %86, align 8
  %.318 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.319 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.318, i64 0, i32 4
  %.320 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.319, align 8
  %.321 = call i1 %.320(%string.676378* %.1, %string.676378* %.315)
  br i1 %.321, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.4.endif.endif
  %.325 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.326 = bitcast i8* %.325 to %string.676378*
  %.326.repack = bitcast i8* %.325 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.326.repack, align 8
  %.326.repack88 = getelementptr inbounds i8, i8* %.325, i64 8
  %87 = bitcast i8* %.326.repack88 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.55, i64 0, i64 0), i8** %87, align 8
  %.326.repack89 = getelementptr inbounds i8, i8* %.325, i64 16
  %88 = bitcast i8* %.326.repack89 to i64*
  store i64 9, i64* %88, align 8
  %.326.repack90 = getelementptr inbounds i8, i8* %.325, i64 24
  %89 = bitcast i8* %.326.repack90 to i64*
  store i64 9, i64* %89, align 8
  %.329 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.330 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.329, i64 0, i32 4
  %.331 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.330, align 8
  %.332 = call i1 %.331(%string.676378* %.1, %string.676378* %.326)
  br i1 %.332, label %.3.if, label %.3.endif.endif.endif.endi...endif.5

.3.endif.endif.endif.endi...endif.5:              ; preds = %.3.endif.endif.endif.endi...endif.4.endif.endif.endif
  %.336 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.337 = bitcast i8* %.336 to %string.676378*
  %.337.repack = bitcast i8* %.336 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.337.repack, align 8
  %.337.repack91 = getelementptr inbounds i8, i8* %.336, i64 8
  %90 = bitcast i8* %.337.repack91 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.56, i64 0, i64 0), i8** %90, align 8
  %.337.repack92 = getelementptr inbounds i8, i8* %.336, i64 16
  %91 = bitcast i8* %.337.repack92 to i64*
  store i64 2, i64* %91, align 8
  %.337.repack93 = getelementptr inbounds i8, i8* %.336, i64 24
  %92 = bitcast i8* %.337.repack93 to i64*
  store i64 2, i64* %92, align 8
  %.340 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.341 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.340, i64 0, i32 4
  %.342 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.341, align 8
  %.343 = call i1 %.342(%string.676378* %.1, %string.676378* %.337)
  br i1 %.343, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif

.3.endif.endif.endif.endi...endif.5.endif:        ; preds = %.3.endif.endif.endif.endi...endif.5
  %.347 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.348 = bitcast i8* %.347 to %string.676378*
  %.348.repack = bitcast i8* %.347 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.348.repack, align 8
  %.348.repack94 = getelementptr inbounds i8, i8* %.347, i64 8
  %93 = bitcast i8* %.348.repack94 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.57, i64 0, i64 0), i8** %93, align 8
  %.348.repack95 = getelementptr inbounds i8, i8* %.347, i64 16
  %94 = bitcast i8* %.348.repack95 to i64*
  store i64 5, i64* %94, align 8
  %.348.repack96 = getelementptr inbounds i8, i8* %.347, i64 24
  %95 = bitcast i8* %.348.repack96 to i64*
  store i64 5, i64* %95, align 8
  %.351 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.352 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.351, i64 0, i32 4
  %.353 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.352, align 8
  %.354 = call i1 %.353(%string.676378* %.1, %string.676378* %.348)
  br i1 %.354, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif.endif

.3.endif.endif.endif.endi...endif.5.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.5.endif
  %.358 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.359 = bitcast i8* %.358 to %string.676378*
  %.359.repack = bitcast i8* %.358 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.359.repack, align 8
  %.359.repack97 = getelementptr inbounds i8, i8* %.358, i64 8
  %96 = bitcast i8* %.359.repack97 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.58, i64 0, i64 0), i8** %96, align 8
  %.359.repack98 = getelementptr inbounds i8, i8* %.358, i64 16
  %97 = bitcast i8* %.359.repack98 to i64*
  store i64 4, i64* %97, align 8
  %.359.repack99 = getelementptr inbounds i8, i8* %.358, i64 24
  %98 = bitcast i8* %.359.repack99 to i64*
  store i64 4, i64* %98, align 8
  %.362 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.363 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.362, i64 0, i32 4
  %.364 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.363, align 8
  %.365 = call i1 %.364(%string.676378* %.1, %string.676378* %.359)
  br i1 %.365, label %.3.if, label %.3.endif.endif.endif.endi...endif.5.endif.endif.endif

.3.endif.endif.endif.endi...endif.5.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.5.endif.endif
  %.369 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.370 = bitcast i8* %.369 to %string.676378*
  %.370.repack = bitcast i8* %.369 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.370.repack, align 8
  %.370.repack100 = getelementptr inbounds i8, i8* %.369, i64 8
  %99 = bitcast i8* %.370.repack100 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.59, i64 0, i64 0), i8** %99, align 8
  %.370.repack101 = getelementptr inbounds i8, i8* %.369, i64 16
  %100 = bitcast i8* %.370.repack101 to i64*
  store i64 3, i64* %100, align 8
  %.370.repack102 = getelementptr inbounds i8, i8* %.369, i64 24
  %101 = bitcast i8* %.370.repack102 to i64*
  store i64 3, i64* %101, align 8
  %.373 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.374 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.373, i64 0, i32 4
  %.375 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.374, align 8
  %.376 = call i1 %.375(%string.676378* %.1, %string.676378* %.370)
  br i1 %.376, label %.3.if, label %.3.endif.endif.endif.endi...endif.6

.3.endif.endif.endif.endi...endif.6:              ; preds = %.3.endif.endif.endif.endi...endif.5.endif.endif.endif
  %.380 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.381 = bitcast i8* %.380 to %string.676378*
  %.381.repack = bitcast i8* %.380 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.381.repack, align 8
  %.381.repack103 = getelementptr inbounds i8, i8* %.380, i64 8
  %102 = bitcast i8* %.381.repack103 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.60, i64 0, i64 0), i8** %102, align 8
  %.381.repack104 = getelementptr inbounds i8, i8* %.380, i64 16
  %103 = bitcast i8* %.381.repack104 to i64*
  store i64 2, i64* %103, align 8
  %.381.repack105 = getelementptr inbounds i8, i8* %.380, i64 24
  %104 = bitcast i8* %.381.repack105 to i64*
  store i64 2, i64* %104, align 8
  %.384 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.385 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.384, i64 0, i32 4
  %.386 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.385, align 8
  %.387 = call i1 %.386(%string.676378* %.1, %string.676378* %.381)
  %. = select i1 %.387, i64 85, i64 -1
  br label %.3.if
}

; Function Attrs: norecurse nounwind readnone
define i1 @is_identifier_char(i8 %.1) local_unnamed_addr #6 {
.3:
  %0 = and i8 %.1, -33
  %1 = add i8 %0, -65
  %2 = icmp ult i8 %1, 26
  %.17 = icmp eq i8 %.1, 95
  %.18 = or i1 %.17, %2
  ret i1 %.18
}

; Function Attrs: norecurse nounwind readnone
define i1 @is_number_char(i8 %.1) local_unnamed_addr #6 {
.3:
  %.1.off = add i8 %.1, -48
  %0 = icmp ult i8 %.1.off, 10
  ret i1 %0
}

; Function Attrs: norecurse nounwind readnone
define i8 @capitalize(i8 %.1) local_unnamed_addr #6 {
.3:
  %.1.off = add i8 %.1, -97
  %0 = icmp ult i8 %.1.off, 26
  br i1 %0, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.12 = add i8 %.1, -32
  ret i8 %.12

.3.endif:                                         ; preds = %.3
  ret i8 %.1
}

; Function Attrs: norecurse nounwind readnone
define i1 @in_base_range(i8 %.1, i64 %.2) local_unnamed_addr #6 {
.4:
  %.8 = icmp slt i64 %.2, 10
  %.11 = icmp sgt i8 %.1, 47
  %.13 = zext i8 %.1 to i64
  %.15 = add i64 %.2, 48
  %.16 = icmp sge i64 %.15, %.13
  %.17 = and i1 %.11, %.16
  br i1 %.8, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret i1 %.17

.4.endif:                                         ; preds = %.4
  %.28 = icmp sgt i8 %.1, 64
  %.32 = add i64 %.2, 65
  %.33 = icmp sge i64 %.32, %.13
  %.34 = and i1 %.28, %.33
  %.35 = or i1 %.17, %.34
  ret i1 %.35
}

; Function Attrs: norecurse nounwind readnone
define i8 @get_escape_char(i8 %.1) local_unnamed_addr #6 {
.3:
  switch i8 %.1, label %.3.endif.endif.endif.endi...endif.endif [
    i8 97, label %.3.if
    i8 98, label %.3.endif.if
    i8 116, label %.3.endif.endif.if
    i8 102, label %.3.endif.endif.endif.if
    i8 110, label %.3.endif.endif.endif.endif.if
    i8 114, label %.3.endif.endif.endif.endif.endif.if
    i8 118, label %.3.endif.endif.endif.endif.endif.endif.if
    i8 48, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i8 39, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i8 34, label %.3.endif.endif.endif.endi...if
    i8 92, label %.3.endif.endif.endif.endi...endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif.if, %.3.endif.endif.endif.endi...if, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i8 [ 7, %.3 ], [ 8, %.3.endif.if ], [ 9, %.3.endif.endif.if ], [ 12, %.3.endif.endif.endif.if ], [ 10, %.3.endif.endif.endif.endif.if ], [ 13, %.3.endif.endif.endif.endif.endif.if ], [ 11, %.3.endif.endif.endif.endif.endif.endif.if ], [ 0, %.3.endif.endif.endif.endif.endif.endif.endif.if ], [ %.1, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ %.1, %.3.endif.endif.endif.endi...if ], [ %.1, %.3.endif.endif.endif.endi...endif.if ], [ %.1, %.3.endif.endif.endif.endi...endif.endif ]
  ret i8 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3
  br label %.3.if
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @heap_string(i64 %.1) local_unnamed_addr #3 {
.3:
  %.7 = call i8* @malloc(i64 %.1)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.12 = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.12, align 8
  call void @string_constructor(%string.676378* %.11, i8* %.7, i64 0)
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.18 to i64*
  store i64 %.1, i64* %0, align 8
  ret %string.676378* %.11
}

define %string.676378* @unescape(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.8 = call %string.676378* @heap_string(i64 %.7)
  %.1814 = load i64, i64* %.6, align 8
  %.1915 = icmp sgt i64 %.1814, 0
  br i1 %.1915, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.22 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %new_string.017 = phi %string.676378* [ %.8, %for.body.lr.ph ], [ %new_string.1, %for.incr ]
  %storemerge16 = phi i64 [ 0, %for.body.lr.ph ], [ %.123, %for.incr ]
  %.23 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.23, i64 0, i32 8
  %.25 = load i8 (%string.676378*, i64)*, i8 (%string.676378*, i64)** %.24, align 8
  %.27 = call i8 %.25(%string.676378* %.1, i64 %storemerge16)
  %.30 = icmp eq i8 %.27, 92
  br i1 %.30, label %for.body.if, label %for.body.endif

for.incr:                                         ; preds = %for.body.if.if.endif.if.if, %for.body.if.if.if, %for.body.endif
  %i.0 = phi i64 [ %.33, %for.body.if.if.if ], [ %.93, %for.body.if.if.endif.if.if ], [ %i.1, %for.body.endif ]
  %new_string.1 = phi %string.676378* [ %.65, %for.body.if.if.if ], [ %.90, %for.body.if.if.endif.if.if ], [ %new_string.017, %for.body.endif ]
  %.123 = add i64 %i.0, 1
  %.18 = load i64, i64* %.6, align 8
  %.19 = icmp slt i64 %.123, %.18
  br i1 %.19, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.3
  %new_string.0.lcssa = phi %string.676378* [ %.8, %.3 ], [ %new_string.1, %for.incr ]
  ret %string.676378* %new_string.0.lcssa

for.body.if:                                      ; preds = %for.body
  %.33 = add i64 %storemerge16, 3
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.33, %.36
  br i1 %.37, label %for.body.if.if, label %for.body.if.endif

for.body.endif:                                   ; preds = %for.body.if.endif, %for.body
  %i.1 = phi i64 [ %.104, %for.body.if.endif ], [ %storemerge16, %for.body ]
  %char.0 = phi i8 [ %.109, %for.body.if.endif ], [ %.27, %for.body ]
  %.113 = getelementptr inbounds %string.676378, %string.676378* %new_string.017, i64 0, i32 0
  %.114 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.113, align 8
  %.115 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.114, i64 0, i32 2
  %.116 = load void (%string.676378*, i8)*, void (%string.676378*, i8)** %.115, align 8
  call void %.116(%string.676378* %new_string.017, i8 %char.0)
  br label %for.incr

for.body.if.if:                                   ; preds = %for.body.if
  %.41 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.42 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.41, i64 0, i32 9
  %.43 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.42, align 8
  %.44 = call i8* %.43(%string.676378* %.1)
  %.46 = getelementptr inbounds i8, i8* %.44, i64 1
  %.47 = getelementptr inbounds i8, i8* %.46, i64 %storemerge16
  %.50 = call i64 @memcmp(i8* nonnull %.47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.61, i64 0, i64 0), i64 3)
  %.51 = icmp eq i64 %.50, 0
  %.53 = call i64 @memcmp(i8* nonnull %.47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.62, i64 0, i64 0), i64 3)
  %.54 = icmp eq i64 %.53, 0
  %.55 = or i1 %.51, %.54
  br i1 %.55, label %for.body.if.if.if, label %for.body.if.if.endif

for.body.if.endif:                                ; preds = %for.body.if.if.endif.if, %for.body.if.if.endif, %for.body.if
  %.100 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.101 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.100, i64 0, i32 8
  %.102 = load i8 (%string.676378*, i64)*, i8 (%string.676378*, i64)** %.101, align 8
  %.104 = add i64 %storemerge16, 1
  %.108 = call i8 %.102(%string.676378* %.1, i64 %.104)
  %.109 = call i8 @get_escape_char(i8 %.108)
  br label %for.body.endif

for.body.if.if.if:                                ; preds = %for.body.if.if
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %string.676378*
  %.59.repack = bitcast i8* %.58 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.59.repack, align 8
  %.59.repack4 = getelementptr inbounds i8, i8* %.58, i64 8
  %0 = bitcast i8* %.59.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.63, i64 0, i64 0), i8** %0, align 8
  %.59.repack5 = getelementptr inbounds i8, i8* %.58, i64 16
  %1 = bitcast i8* %.59.repack5 to i64*
  store i64 1, i64* %1, align 8
  %.59.repack6 = getelementptr inbounds i8, i8* %.58, i64 24
  %2 = bitcast i8* %.59.repack6 to i64*
  store i64 1, i64* %2, align 8
  %.61 = getelementptr inbounds %string.676378, %string.676378* %new_string.017, i64 0, i32 0
  %.62 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.61, align 8
  %.63 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.62, i64 0, i32 0
  %.64 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.63, align 8
  %.65 = call %string.676378* %.64(%string.676378* %new_string.017, %string.676378* %.59)
  br label %for.incr

for.body.if.if.endif:                             ; preds = %for.body.if.if
  %.72 = add i64 %storemerge16, 6
  %.75 = load i64, i64* %.6, align 8
  %.76 = icmp slt i64 %.72, %.75
  br i1 %.76, label %for.body.if.if.endif.if, label %for.body.if.endif

for.body.if.if.endif.if:                          ; preds = %for.body.if.if.endif
  %.79 = call i64 @memcmp(i8* nonnull %.47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.64, i64 0, i64 0), i64 5)
  %.80 = icmp eq i64 %.79, 0
  br i1 %.80, label %for.body.if.if.endif.if.if, label %for.body.if.endif

for.body.if.if.endif.if.if:                       ; preds = %for.body.if.if.endif.if
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.676378*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.84.repack, align 8
  %.84.repack1 = getelementptr inbounds i8, i8* %.83, i64 8
  %3 = bitcast i8* %.84.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.63, i64 0, i64 0), i8** %3, align 8
  %.84.repack2 = getelementptr inbounds i8, i8* %.83, i64 16
  %4 = bitcast i8* %.84.repack2 to i64*
  store i64 1, i64* %4, align 8
  %.84.repack3 = getelementptr inbounds i8, i8* %.83, i64 24
  %5 = bitcast i8* %.84.repack3 to i64*
  store i64 1, i64* %5, align 8
  %.86 = getelementptr inbounds %string.676378, %string.676378* %new_string.017, i64 0, i32 0
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 0
  %.89 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.88, align 8
  %.90 = call %string.676378* %.89(%string.676378* %new_string.017, %string.676378* %.84)
  %.93 = add i64 %storemerge16, 5
  br label %for.incr
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Token_constructor(%Token.676406* nocapture %.1, i64 %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Token.676406, %Token.676406* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %Token.676406, %Token.676406* %.1, i64 0, i32 2
  store %FloRange.676382* %.3, %FloRange.676382** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IntToken_constructor(%IntToken.676408* nocapture %.1, i64 %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %IntToken.676408* %.1 to %Token.676406*
  call void @Token_constructor(%Token.676406* %.10, i64 28, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %IntToken.676408, %IntToken.676408* %.1, i64 0, i32 3
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FloatToken_constructor(%FloatToken.676410* nocapture %.1, double %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %FloatToken.676410* %.1 to %Token.676406*
  call void @Token_constructor(%Token.676406* %.10, i64 29, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %FloatToken.676410, %FloatToken.676410* %.1, i64 0, i32 3
  store double %.2, double* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @CharToken_constructor(%CharToken.676412* nocapture %.1, i8 %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %CharToken.676412* %.1 to %Token.676406*
  call void @Token_constructor(%Token.676406* %.10, i64 32, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %CharToken.676412, %CharToken.676412* %.1, i64 0, i32 3
  store i8 %.2, i8* %.15, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Token>_constructor"(%"Array<Token>.676417"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %0 = bitcast %Token.676406*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Token>_resize"(%"Array<Token>.676417"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %0 = bitcast %Token.676406*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Token>_swap"(%"Array<Token>.676417"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %.48 = load %Token.676406**, %Token.676406*** %.47, align 8
  %.49 = getelementptr inbounds %Token.676406*, %Token.676406** %.48, i64 %.2
  %4 = bitcast %Token.676406** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Token.676406*, %Token.676406** %.48, i64 %.3
  %5 = bitcast %Token.676406** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Token.676406**, %Token.676406*** %.47, align 8
  %.69 = getelementptr inbounds %Token.676406*, %Token.676406** %.67, i64 %.3
  %6 = bitcast %Token.676406** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Token>___sl__"(%"Array<Token>.676417"* %.1, %Token.676406* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 0
  %.17 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Token>.676417"*)*, void (%"Array<Token>.676417"*)** %.18, align 8
  call void %.19(%"Array<Token>.676417"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %.31 = load %Token.676406**, %Token.676406*** %.30, align 8
  %.33 = getelementptr inbounds %Token.676406*, %Token.676406** %.31, i64 %.24
  store %Token.676406* %.2, %Token.676406** %.33, align 8
  ret void
}

define void @"Array<Token>___setitem__"(%"Array<Token>.676417"* nocapture readonly %.1, i64 %.2, %Token.676406* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %.30 = load %Token.676406**, %Token.676406*** %.29, align 8
  %.32 = getelementptr inbounds %Token.676406*, %Token.676406** %.30, i64 %.2
  store %Token.676406* %.3, %Token.676406** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Token>_append"(%"Array<Token>.676417"* %.1, %Token.676406* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 0
  %.9 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)** %.10, align 8
  call void %.11(%"Array<Token>.676417"* %.1, %Token.676406* %.2)
  ret void
}

define %Token.676406* @"Array<Token>___getitem__"(%"Array<Token>.676417"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %.28 = load %Token.676406**, %Token.676406*** %.27, align 8
  %.29 = getelementptr inbounds %Token.676406*, %Token.676406** %.28, i64 %.2
  %.30 = load %Token.676406*, %Token.676406** %.29, align 8
  ret %Token.676406* %.30

.4.endif:                                         ; preds = %.4
  ret %Token.676406* null
}

define i1 @"Array<Token>___eq__"(%"Array<Token>.676417"* %.1, %"Array<Token>.676417"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.28, i64 0, i32 5
  %.30 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.29, align 8
  %.31 = call %Token.676406* %.30(%"Array<Token>.676417"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.35, i64 0, i32 5
  %.37 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.36, align 8
  %.38 = call %Token.676406* %.37(%"Array<Token>.676417"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Token.676406* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Token.676406* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Token>___in__"(%"Array<Token>.676417"* %.1, %Token.676406* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Token.676406* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.19, i64 0, i32 5
  %.21 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.20, align 8
  %.22 = call %Token.676406* %.21(%"Array<Token>.676417"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Token.676406* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Token>_find"(%"Array<Token>.676417"* nocapture readonly %.1, %Token.676406* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 1
  %.19 = load %Token.676406**, %Token.676406*** %.18, align 8
  %0 = ptrtoint %Token.676406* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Token.676406*, %Token.676406** %.19, i64 %storemerge5
  %1 = bitcast %Token.676406** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Token>_join"(%"Array<Token>.676417"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.65, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.65, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Token>___as_string__"(%"Array<Token>.676417"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 0
  %.7 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Token>.676417"*, %string.676378*)*, %string.676378* (%"Array<Token>.676417"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Token>.676417"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Array<Token>>_constructor"(%"Array<Array<Token>>.676416"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %0 = bitcast %"Array<Token>.676417"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Array<Token>>_resize"(%"Array<Array<Token>>.676416"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %0 = bitcast %"Array<Token>.676417"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Array<Token>>_swap"(%"Array<Array<Token>>.676416"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %.48 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.47, align 8
  %.49 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.48, i64 %.2
  %4 = bitcast %"Array<Token>.676417"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.48, i64 %.3
  %5 = bitcast %"Array<Token>.676417"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.47, align 8
  %.69 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.67, i64 %.3
  %6 = bitcast %"Array<Token>.676417"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Array<Token>>___sl__"(%"Array<Array<Token>>.676416"* %.1, %"Array<Token>.676417"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 0
  %.17 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Array<Token>>.676416"*)*, void (%"Array<Array<Token>>.676416"*)** %.18, align 8
  call void %.19(%"Array<Array<Token>>.676416"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %.31 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.30, align 8
  %.33 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.31, i64 %.24
  store %"Array<Token>.676417"* %.2, %"Array<Token>.676417"** %.33, align 8
  ret void
}

define void @"Array<Array<Token>>___setitem__"(%"Array<Array<Token>>.676416"* nocapture readonly %.1, i64 %.2, %"Array<Token>.676417"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %.30 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.29, align 8
  %.32 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.30, i64 %.2
  store %"Array<Token>.676417"* %.3, %"Array<Token>.676417"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Array<Token>>_append"(%"Array<Array<Token>>.676416"* %.1, %"Array<Token>.676417"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 0
  %.9 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)*, void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)** %.10, align 8
  call void %.11(%"Array<Array<Token>>.676416"* %.1, %"Array<Token>.676417"* %.2)
  ret void
}

define %"Array<Token>.676417"* @"Array<Array<Token>>___getitem__"(%"Array<Array<Token>>.676416"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %.28 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.28, i64 %.2
  %.30 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %.29, align 8
  ret %"Array<Token>.676417"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Array<Token>.676417"* null
}

define i1 @"Array<Array<Token>>___eq__"(%"Array<Array<Token>>.676416"* %.1, %"Array<Array<Token>>.676416"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.27 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 0
  %.34 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.51, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.51, %for.cond ]
  %.28 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.28, i64 0, i32 5
  %.30 = load %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)*, %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)** %.29, align 8
  %.31 = call %"Array<Token>.676417"* %.30(%"Array<Array<Token>>.676416"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.35, i64 0, i32 5
  %.37 = load %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)*, %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)** %.36, align 8
  %.38 = call %"Array<Token>.676417"* %.37(%"Array<Array<Token>>.676416"* %.2, i64 %storemerge3)
  %.39 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.31, i64 0, i32 0
  %.40 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.40, i64 0, i32 6
  %.42 = load i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)*, i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)** %.41, align 8
  %.43 = call i1 %.42(%"Array<Token>.676417"* %.31, %"Array<Token>.676417"* %.38)
  %.51 = add nuw nsw i64 %storemerge3, 1
  br i1 %.43, label %for.cond, label %.4.if
}

define i1 @"Array<Array<Token>>___in__"(%"Array<Array<Token>>.676416"* %.1, %"Array<Token>.676417"* %.2) {
.4:
  %.12 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.cond ]
  %.19 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.19, i64 0, i32 5
  %.21 = load %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)*, %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)** %.20, align 8
  %.22 = call %"Array<Token>.676417"* %.21(%"Array<Array<Token>>.676416"* %.1, i64 %storemerge4)
  %.24 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.22, i64 0, i32 0
  %.25 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.24, align 8
  %.26 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.25, i64 0, i32 6
  %.27 = load i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)*, i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)** %.26, align 8
  %.28 = call i1 %.27(%"Array<Token>.676417"* %.22, %"Array<Token>.676417"* %.2)
  %.35 = add nuw nsw i64 %storemerge4, 1
  br i1 %.28, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

define i64 @"Array<Array<Token>>_find"(%"Array<Array<Token>>.676416"* nocapture readonly %.1, %"Array<Token>.676417"* %.2) {
.4:
  %.12 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body.endif ]
  %.19 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.19, i64 %storemerge4
  %.21 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %.20, align 8
  %.23 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.21, i64 0, i32 0
  %.24 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.24, i64 0, i32 6
  %.26 = load i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)*, i1 (%"Array<Token>.676417"*, %"Array<Token>.676417"*)** %.25, align 8
  %.27 = call i1 %.26(%"Array<Token>.676417"* %.21, %"Array<Token>.676417"* %.2)
  br i1 %.27, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge4, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Array<Token>>_join"(%"Array<Array<Token>>.676416"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.284 = icmp sgt i64 %.21, 0
  %.33 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 1
  %1 = bitcast %"Array<Token>.676417"*** %.33 to %string.676378***
  %.34511 = load %string.676378**, %string.676378*** %1, align 8
  %.3626 = load %string.676378*, %string.676378** %.34511, align 8
  br i1 %.284, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.3629 = phi %string.676378* [ %.362, %for.body ], [ %.3626, %.4 ]
  %res.08 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge7 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.43 = getelementptr inbounds %string.676378, %string.676378* %.3629, i64 0, i32 0
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.3629, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.08, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.08, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge7, 1
  %.34 = load %"Array<Token>.676417"**, %"Array<Token>.676417"*** %.33, align 8
  %.35 = getelementptr inbounds %"Array<Token>.676417"*, %"Array<Token>.676417"** %.34, i64 %.58
  %2 = bitcast %"Array<Token>.676417"** %.35 to %string.676378**
  %.362 = load %string.676378*, %string.676378** %2, align 8
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  %res.0.lcssa = phi %string.676378* [ %.8, %.4 ], [ %.52, %for.body ]
  %.362.lcssa = phi %string.676378* [ %.3626, %.4 ], [ %.362, %for.body ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.362.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Array<Token>>___as_string__"(%"Array<Array<Token>>.676416"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.1, i64 0, i32 0
  %.7 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Array<Token>>.676416"*, %string.676378*)*, %string.676378* (%"Array<Array<Token>>.676416"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Array<Token>>.676416"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StrToken_constructor(%StrToken.676414* nocapture %.1, %"Array<Array<Token>>.676416"* %.2, %string.676378* %.3, %FloRange.676382* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %StrToken.676414* %.1 to %Token.676406*
  call void @Token_constructor(%Token.676406* %.12, i64 31, %FloRange.676382* %.4)
  %.17 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.1, i64 0, i32 3
  store %string.676378* %.3, %string.676378** %.17, align 8
  %.21 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.1, i64 0, i32 4
  store %"Array<Array<Token>>.676416"* %.2, %"Array<Array<Token>>.676416"** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IdentifierToken_constructor(%IdentifierToken.676420* nocapture %.1, %string.676378* %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %IdentifierToken.676420* %.1 to %Token.676406*
  call void @Token_constructor(%Token.676406* %.10, i64 50, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.1, i64 0, i32 3
  store %string.676378* %.2, %string.676378** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Lexer_constructor(%Lexer.676422* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.7 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  store i64 -1, i64* %.7, align 8
  %.10 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 6
  store i64 1, i64* %.10, align 8
  %.13 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 5
  store i64 0, i64* %.13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Lexer_eof(%Lexer.676422* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  %.10 = load %string.676378*, %string.676378** %.9, align 8
  %.11 = getelementptr inbounds %string.676378, %string.676378* %.10, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp sge i64 %.7, %.12
  ret i1 %.13
}

define i8 @Lexer_peek(%Lexer.676422* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = add i64 %.9, %.2
  %.13 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  %.14 = load %string.676378*, %string.676378** %.13, align 8
  %.15 = getelementptr inbounds %string.676378, %string.676378* %.14, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp slt i64 %.11, %.16
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %string.676378, %string.676378* %.14, i64 0, i32 0
  %.23 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.23, i64 0, i32 8
  %.25 = load i8 (%string.676378*, i64)*, i8 (%string.676378*, i64)** %.24, align 8
  %.31 = call i8 %.25(%string.676378* %.14, i64 %.11)
  ret i8 %.31

.4.endif:                                         ; preds = %.4
  ret i8 0
}

define void @Lexer_advance(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 0
  %.9 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.8, align 8
  %.10 = call i1 %.9(%Lexer.676422* %.1)
  br i1 %.10, label %.3.if, label %.3.endif

.3.if.sink.split:                                 ; preds = %.3.endif, %.3.endif.if
  %.40.sink1 = phi i64* [ %.40, %.3.endif.if ], [ %.37, %.3.endif ]
  %.41 = load i64, i64* %.40.sink1, align 8
  %.42 = add i64 %.41, 1
  store i64 %.42, i64* %.40.sink1, align 8
  br label %.3.if

.3.if:                                            ; preds = %.3.if.sink.split, %.3
  ret void

.3.endif:                                         ; preds = %.3
  %.15 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  %.16 = load %string.676378*, %string.676378** %.15, align 8
  %.17 = getelementptr inbounds %string.676378, %string.676378* %.16, i64 0, i32 0
  %.18 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.17, align 8
  %.19 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.18, i64 0, i32 8
  %.20 = load i8 (%string.676378*, i64)*, i8 (%string.676378*, i64)** %.19, align 8
  %.22 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  %.23 = load i64, i64* %.22, align 8
  %.24 = add i64 %.23, 1
  store i64 %.24, i64* %.22, align 8
  %.28 = call i8 %.20(%string.676378* %.16, i64 %.24)
  %.29 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 1
  store i8 %.28, i8* %.29, align 1
  %.34 = icmp eq i8 %.28, 10
  %.37 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 5
  br i1 %.34, label %.3.endif.if, label %.3.if.sink.split

.3.endif.if:                                      ; preds = %.3.endif
  store i64 0, i64* %.37, align 8
  %.40 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 6
  br label %.3.if.sink.split
}

; Function Attrs: nofree nounwind
define noalias %FloRange.676382* @Lexer_get_range(%Lexer.676422* nocapture readonly %.1, i64 %.2) #3 {
.4:
  %.8 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = sub i64 1, %.2
  %.12 = add i64 %.11, %.9
  %.16 = add i64 %.9, 1
  %.18 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 5
  %.19 = load i64, i64* %.18, align 8
  %.21 = sub i64 %.19, %.2
  %.23 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 6
  %.24 = load i64, i64* %.23, align 8
  %.25 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.26 = bitcast i8* %.25 to %FloRange.676382*
  %.27 = bitcast i8* %.25 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.27, align 8
  call void @FloRange_constructor(%FloRange.676382* %.26, i64 %.12, i64 %.16, i64 %.21, i64 %.24)
  ret %FloRange.676382* %.26
}

define noalias %Token.676406* @Lexer_plus_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 43
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 20, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.676422* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 61
  %.41 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.42, align 8
  call void %.43(%Lexer.676422* %.1)
  %.47 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.47, i64 0, i32 3
  %.49 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.48, align 8
  %.50 = call %FloRange.676382* %.49(%Lexer.676422* %.1, i64 2)
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.676406*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.53, align 8
  call void @Token_constructor(%Token.676406* %.52, i64 11, %FloRange.676382* %.50)
  ret %Token.676406* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 3
  %.62 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.61, align 8
  %.63 = call %FloRange.676382* %.62(%Lexer.676422* %.1, i64 1)
  %.64 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.676406*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.66, align 8
  call void @Token_constructor(%Token.676406* %.65, i64 5, %FloRange.676382* %.63)
  ret %Token.676406* %.65
}

define i1 @Lexer_skip_comment(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 42
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 0
  %.23 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.22, align 8
  %.24 = call i1 %.23(%Lexer.676422* %.1)
  br i1 %.24, label %while.exit, label %while.entry

.3.else:                                          ; preds = %.3
  %.74 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 1
  %.75 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.74, align 8
  %.76 = call i8 %.75(%Lexer.676422* %.1, i64 1)
  %.77 = icmp eq i8 %.76, 47
  br i1 %.77, label %.3.else.if, label %.3.endif

.3.endif:                                         ; preds = %while.entry.1, %.3.else.if, %.3.else
  %merge = phi i1 [ false, %.3.else ], [ true, %.3.else.if ], [ true, %while.entry.1 ]
  ret i1 %merge

while.entry:                                      ; preds = %.3.if, %while.entry.endif
  %.29 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.30 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.29, i64 0, i32 1
  %.31 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.30, align 8
  %.32 = call i8 %.31(%Lexer.676422* %.1, i64 1)
  %.33 = icmp eq i8 %.32, 42
  %.36 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.37 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.36, i64 0, i32 1
  %.38 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.37, align 8
  %.39 = call i8 %.38(%Lexer.676422* %.1, i64 2)
  %.40 = icmp eq i8 %.39, 47
  %.41 = and i1 %.33, %.40
  br i1 %.41, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3.if
  %.60 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.61 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.60, i64 0, i32 2
  %.62 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.61, align 8
  call void %.62(%Lexer.676422* %.1)
  %.66 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.67, align 8
  call void %.68(%Lexer.676422* %.1)
  ret i1 true

while.entry.endif:                                ; preds = %while.entry
  %.46 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.47 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.46, i64 0, i32 2
  %.48 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.47, align 8
  call void %.48(%Lexer.676422* %.1)
  %.52 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.53 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.52, i64 0, i32 0
  %.54 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.53, align 8
  %.55 = call i1 %.54(%Lexer.676422* %.1)
  br i1 %.55, label %while.exit, label %while.entry

.3.else.if:                                       ; preds = %.3.else
  %.81 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.82 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.81, i64 0, i32 2
  %.83 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.82, align 8
  call void %.83(%Lexer.676422* %.1)
  %.87 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.88 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.87, i64 0, i32 1
  %.89 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.88, align 8
  %.90 = call i8 %.89(%Lexer.676422* %.1, i64 1)
  %.91 = icmp ne i8 %.90, 10
  %.94 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.95 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.94, i64 0, i32 0
  %.96 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.95, align 8
  %.97 = call i1 %.96(%Lexer.676422* %.1)
  %.98 = xor i1 %.97, true
  %.99 = and i1 %.91, %.98
  br i1 %.99, label %while.entry.1, label %.3.endif

while.entry.1:                                    ; preds = %.3.else.if, %while.entry.1
  %.103 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.104 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.103, i64 0, i32 2
  %.105 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.104, align 8
  call void %.105(%Lexer.676422* %.1)
  %.109 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.110 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.109, i64 0, i32 1
  %.111 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.110, align 8
  %.112 = call i8 %.111(%Lexer.676422* %.1, i64 1)
  %.113 = icmp ne i8 %.112, 10
  %.116 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.117 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.116, i64 0, i32 0
  %.118 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.117, align 8
  %.119 = call i1 %.118(%Lexer.676422* %.1)
  %.120 = xor i1 %.119, true
  %.121 = and i1 %.113, %.120
  br i1 %.121, label %while.entry.1, label %.3.endif
}

define noalias %Token.676406* @Lexer_minus_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 45
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 21, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.676422* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 61
  %.41 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.42, align 8
  call void %.43(%Lexer.676422* %.1)
  %.47 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.47, i64 0, i32 3
  %.49 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.48, align 8
  %.50 = call %FloRange.676382* %.49(%Lexer.676422* %.1, i64 2)
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.676406*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.53, align 8
  call void @Token_constructor(%Token.676406* %.52, i64 10, %FloRange.676382* %.50)
  ret %Token.676406* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 3
  %.62 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.61, align 8
  %.63 = call %FloRange.676382* %.62(%Lexer.676422* %.1, i64 2)
  %.64 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.676406*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.66, align 8
  call void @Token_constructor(%Token.676406* %.65, i64 4, %FloRange.676382* %.63)
  ret %Token.676406* %.65
}

define noalias %Token.676406* @Lexer_mult_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 9, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 3
  %.35 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call %FloRange.676382* %.35(%Lexer.676422* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.676406*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.39, align 8
  call void @Token_constructor(%Token.676406* %.38, i64 3, %FloRange.676382* %.36)
  ret %Token.676406* %.38
}

define noalias %Token.676406* @Lexer_mod_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 13, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 3
  %.35 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call %FloRange.676382* %.35(%Lexer.676422* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.676406*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.39, align 8
  call void @Token_constructor(%Token.676406* %.38, i64 7, %FloRange.676382* %.36)
  ret %Token.676406* %.38
}

define noalias %Token.676406* @Lexer_pow_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 14, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 3
  %.35 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call %FloRange.676382* %.35(%Lexer.676422* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.676406*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.39, align 8
  call void @Token_constructor(%Token.676406* %.38, i64 8, %FloRange.676382* %.36)
  ret %Token.676406* %.38
}

define noalias %Token.676406* @Lexer_div_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 12, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 3
  %.35 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call %FloRange.676382* %.35(%Lexer.676422* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.676406*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.39, align 8
  call void @Token_constructor(%Token.676406* %.38, i64 6, %FloRange.676382* %.36)
  ret %Token.676406* %.38
}

define noalias %Token.676406* @Lexer_eq_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 36, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.676422* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 62
  %.41 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.42, align 8
  call void %.43(%Lexer.676422* %.1)
  %.47 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.47, i64 0, i32 3
  %.49 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.48, align 8
  %.50 = call %FloRange.676382* %.49(%Lexer.676422* %.1, i64 2)
  %.51 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.52 = bitcast i8* %.51 to %Token.676406*
  %.53 = bitcast i8* %.51 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.53, align 8
  call void @Token_constructor(%Token.676406* %.52, i64 42, %FloRange.676382* %.50)
  ret %Token.676406* %.52

.3.else.endif:                                    ; preds = %.3.else
  %.61 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 3
  %.62 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.61, align 8
  %.63 = call %FloRange.676382* %.62(%Lexer.676422* %.1, i64 1)
  %.64 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.65 = bitcast i8* %.64 to %Token.676406*
  %.66 = bitcast i8* %.64 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.66, align 8
  call void @Token_constructor(%Token.676406* %.65, i64 35, %FloRange.676382* %.63)
  ret %Token.676406* %.65
}

define noalias %Token.676406* @Lexer_neq_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 37, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.endif:                                         ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 3
  %.35 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call %FloRange.676382* %.35(%Lexer.676422* %.1, i64 1)
  %.37 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.38 = bitcast i8* %.37 to %Token.676406*
  %.39 = bitcast i8* %.37 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.39, align 8
  call void @Token_constructor(%Token.676406* %.38, i64 44, %FloRange.676382* %.36)
  ret %Token.676406* %.38
}

define noalias %Token.676406* @Lexer_gt_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 41, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.676422* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 62
  %.41 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.42, align 8
  call void %.43(%Lexer.676422* %.1)
  %.47 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.47, i64 0, i32 1
  %.49 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.48, align 8
  %.50 = call i8 %.49(%Lexer.676422* %.1, i64 1)
  %.51 = icmp eq i8 %.50, 61
  %.55 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.51, label %.3.else.if.if, label %.3.else.if.endif

.3.else.endif:                                    ; preds = %.3.else
  %.87 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 3
  %.88 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.87, align 8
  %.89 = call %FloRange.676382* %.88(%Lexer.676422* %.1, i64 1)
  %.90 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.91 = bitcast i8* %.90 to %Token.676406*
  %.92 = bitcast i8* %.90 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.92, align 8
  call void @Token_constructor(%Token.676406* %.91, i64 38, %FloRange.676382* %.89)
  ret %Token.676406* %.91

.3.else.if.if:                                    ; preds = %.3.else.if
  %.56 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.55, i64 0, i32 2
  %.57 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.56, align 8
  call void %.57(%Lexer.676422* %.1)
  %.61 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.61, i64 0, i32 3
  %.63 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.62, align 8
  %.64 = call %FloRange.676382* %.63(%Lexer.676422* %.1, i64 3)
  %.65 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.66 = bitcast i8* %.65 to %Token.676406*
  %.67 = bitcast i8* %.65 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.67, align 8
  call void @Token_constructor(%Token.676406* %.66, i64 18, %FloRange.676382* %.64)
  ret %Token.676406* %.66

.3.else.if.endif:                                 ; preds = %.3.else.if
  %.74 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.55, i64 0, i32 3
  %.75 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.74, align 8
  %.76 = call %FloRange.676382* %.75(%Lexer.676422* %.1, i64 2)
  %.77 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.78 = bitcast i8* %.77 to %Token.676406*
  %.79 = bitcast i8* %.77 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.79, align 8
  call void @Token_constructor(%Token.676406* %.78, i64 46, %FloRange.676382* %.76)
  ret %Token.676406* %.78
}

define noalias %Token.676406* @Lexer_lt_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.7 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.8 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.7, i64 0, i32 1
  %.9 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.8, align 8
  %.10 = call i8 %.9(%Lexer.676422* %.1, i64 1)
  %.11 = icmp eq i8 %.10, 61
  %.15 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.11, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.16 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 2
  %.17 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.16, align 8
  call void %.17(%Lexer.676422* %.1)
  %.21 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.22 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.21, i64 0, i32 3
  %.23 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.22, align 8
  %.24 = call %FloRange.676382* %.23(%Lexer.676422* %.1, i64 2)
  %.25 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.26 = bitcast i8* %.25 to %Token.676406*
  %.27 = bitcast i8* %.25 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.27, align 8
  call void @Token_constructor(%Token.676406* %.26, i64 40, %FloRange.676382* %.24)
  ret %Token.676406* %.26

.3.else:                                          ; preds = %.3
  %.34 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.15, i64 0, i32 1
  %.35 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.34, align 8
  %.36 = call i8 %.35(%Lexer.676422* %.1, i64 1)
  %.37 = icmp eq i8 %.36, 60
  %.41 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.endif

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 2
  %.43 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.42, align 8
  call void %.43(%Lexer.676422* %.1)
  %.47 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.48 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.47, i64 0, i32 1
  %.49 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.48, align 8
  %.50 = call i8 %.49(%Lexer.676422* %.1, i64 1)
  %.51 = icmp eq i8 %.50, 61
  %.55 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  br i1 %.51, label %.3.else.if.if, label %.3.else.if.endif

.3.else.endif:                                    ; preds = %.3.else
  %.87 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.41, i64 0, i32 3
  %.88 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.87, align 8
  %.89 = call %FloRange.676382* %.88(%Lexer.676422* %.1, i64 1)
  %.90 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.91 = bitcast i8* %.90 to %Token.676406*
  %.92 = bitcast i8* %.90 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.92, align 8
  call void @Token_constructor(%Token.676406* %.91, i64 39, %FloRange.676382* %.89)
  ret %Token.676406* %.91

.3.else.if.if:                                    ; preds = %.3.else.if
  %.56 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.55, i64 0, i32 2
  %.57 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.56, align 8
  call void %.57(%Lexer.676422* %.1)
  %.61 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.6, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.61, i64 0, i32 3
  %.63 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.62, align 8
  %.64 = call %FloRange.676382* %.63(%Lexer.676422* %.1, i64 3)
  %.65 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.66 = bitcast i8* %.65 to %Token.676406*
  %.67 = bitcast i8* %.65 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.67, align 8
  call void @Token_constructor(%Token.676406* %.66, i64 19, %FloRange.676382* %.64)
  ret %Token.676406* %.66

.3.else.if.endif:                                 ; preds = %.3.else.if
  %.74 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.55, i64 0, i32 3
  %.75 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.74, align 8
  %.76 = call %FloRange.676382* %.75(%Lexer.676422* %.1, i64 2)
  %.77 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.78 = bitcast i8* %.77 to %Token.676406*
  %.79 = bitcast i8* %.77 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.79, align 8
  call void @Token_constructor(%Token.676406* %.78, i64 45, %FloRange.676382* %.76)
  ret %Token.676406* %.78
}

define noalias %Token.676406* @Lexer_dot_token(%Lexer.676422* %.1) {
.3:
  %.8 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.9 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.10 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.9, i64 0, i32 1
  %.11 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.10, align 8
  %.12 = call i8 %.11(%Lexer.676422* %.1, i64 1)
  %.13 = icmp eq i8 %.12, 46
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.23, i64 0, i32 2
  %.25 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.24, align 8
  call void %.25(%Lexer.676422* %.1)
  %.29 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.30 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.29, i64 0, i32 1
  %.31 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.30, align 8
  %.32 = call i8 %.31(%Lexer.676422* %.1, i64 1)
  %.33 = icmp eq i8 %.32, 46
  br i1 %.33, label %.3.if.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3.if.if, %.3
  %token.0 = phi i64 [ 47, %.3 ], [ 49, %.3.if.if ], [ 48, %.3.if ]
  %length.0 = phi i64 [ 1, %.3 ], [ 3, %.3.if.if ], [ 2, %.3.if ]
  %.52 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.53 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.52, i64 0, i32 3
  %.54 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.53, align 8
  %.56 = call %FloRange.676382* %.54(%Lexer.676422* %.1, i64 %length.0)
  %.57 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.58 = bitcast i8* %.57 to %Token.676406*
  %.59 = bitcast i8* %.57 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.59, align 8
  call void @Token_constructor(%Token.676406* %.58, i64 %token.0, %FloRange.676382* %.56)
  ret %Token.676406* %.58

.3.if.if:                                         ; preds = %.3.if
  %.43 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.44 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.43, i64 0, i32 2
  %.45 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.44, align 8
  call void %.45(%Lexer.676422* %.1)
  br label %.3.endif
}

define noalias %IntToken.676408* @Lexer_base_int_token(%Lexer.676422* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.9 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.10 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.9, i64 0, i32 2
  %.11 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.10, align 8
  call void %.11(%Lexer.676422* %.1)
  %.18 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.19 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.18, i64 0, i32 1
  %.20 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.19, align 8
  %.21 = call i8 %.20(%Lexer.676422* %.1, i64 1)
  %.22 = call i8 @capitalize(i8 %.21)
  %.25 = call i1 @in_base_range(i8 %.22, i64 %.2)
  %.28 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.29 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.28, i64 0, i32 0
  %.30 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.29, align 8
  %.31 = call i1 %.30(%Lexer.676422* %.1)
  %.32 = xor i1 %.31, true
  %.33 = and i1 %.25, %.32
  br i1 %.33, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %length.0 = phi i64 [ %.58, %while.entry ], [ 3, %.4 ]
  %value.0 = phi i64 [ %.53, %while.entry ], [ 0, %.4 ]
  %current_char.0 = phi i8 [ %.72, %while.entry ], [ %.22, %.4 ]
  %.37 = mul i64 %value.0, %.2
  %.43 = icmp sgt i8 %current_char.0, 64
  %spec.select.v = select i1 %.43, i8 -55, i8 -48
  %spec.select = add i8 %spec.select.v, %current_char.0
  %.52 = zext i8 %spec.select to i64
  %.53 = add i64 %.37, %.52
  %.58 = add i64 %length.0, 1
  %.62 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.63 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.62, i64 0, i32 2
  %.64 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.63, align 8
  call void %.64(%Lexer.676422* %.1)
  %.68 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.69 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.68, i64 0, i32 1
  %.70 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.69, align 8
  %.71 = call i8 %.70(%Lexer.676422* %.1, i64 1)
  %.72 = call i8 @capitalize(i8 %.71)
  %.75 = call i1 @in_base_range(i8 %.72, i64 %.2)
  %.78 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.79 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.78, i64 0, i32 0
  %.80 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.79, align 8
  %.81 = call i1 %.80(%Lexer.676422* %.1)
  %.82 = xor i1 %.81, true
  %.83 = and i1 %.75, %.82
  br i1 %.83, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %length.1 = phi i64 [ 3, %.4 ], [ %.58, %while.entry ]
  %value.1 = phi i64 [ 0, %.4 ], [ %.53, %while.entry ]
  %.88 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.8, align 8
  %.89 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.88, i64 0, i32 3
  %.90 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.89, align 8
  %.92 = call %FloRange.676382* %.90(%Lexer.676422* %.1, i64 %length.1)
  %.93 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.94 = bitcast i8* %.93 to %IntToken.676408*
  %.95 = bitcast i8* %.93 to %IntToken_vtable_ty.676409**
  store %IntToken_vtable_ty.676409* @IntToken_vtable_data, %IntToken_vtable_ty.676409** %.95, align 8
  call void @IntToken_constructor(%IntToken.676408* %.94, i64 %value.1, %FloRange.676382* %.92)
  ret %IntToken.676408* %.94
}

define %Token.676406* @Lexer_numeric_token(%Lexer.676422* %.1) {
.3:
  %.9 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 1
  %.10 = load i8, i8* %.9, align 1
  %.11 = icmp eq i8 %.10, 48
  %.13 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.14 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.15 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.14, i64 0, i32 1
  %.16 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.15, align 8
  %.17 = call i8 %.16(%Lexer.676422* %.1, i64 1)
  %.18 = icmp eq i8 %.17, 98
  %.19 = and i1 %.11, %.18
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.23, i64 0, i32 16
  %.25 = load %IntToken.676408* (%Lexer.676422*, i64)*, %IntToken.676408* (%Lexer.676422*, i64)** %.24, align 8
  %.26 = call %IntToken.676408* %.25(%Lexer.676422* %.1, i64 2)
  %.27 = bitcast %IntToken.676408* %.26 to %Token.676406*
  ret %Token.676406* %.27

.3.endif:                                         ; preds = %.3
  %.31 = load i8, i8* %.9, align 1
  %.32 = icmp eq i8 %.31, 48
  %.35 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.36 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.35, i64 0, i32 1
  %.37 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.36, align 8
  %.38 = call i8 %.37(%Lexer.676422* %.1, i64 1)
  %.39 = icmp eq i8 %.38, 111
  %.40 = and i1 %.32, %.39
  br i1 %.40, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.44 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.45 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.44, i64 0, i32 16
  %.46 = load %IntToken.676408* (%Lexer.676422*, i64)*, %IntToken.676408* (%Lexer.676422*, i64)** %.45, align 8
  %.47 = call %IntToken.676408* %.46(%Lexer.676422* %.1, i64 8)
  %.48 = bitcast %IntToken.676408* %.47 to %Token.676406*
  ret %Token.676406* %.48

.3.endif.endif:                                   ; preds = %.3.endif
  %.52 = load i8, i8* %.9, align 1
  %.53 = icmp eq i8 %.52, 48
  %.56 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.57 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.56, i64 0, i32 1
  %.58 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.57, align 8
  %.59 = call i8 %.58(%Lexer.676422* %.1, i64 1)
  %.60 = icmp eq i8 %.59, 120
  %.61 = and i1 %.53, %.60
  %.65 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  br i1 %.61, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.66 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.65, i64 0, i32 16
  %.67 = load %IntToken.676408* (%Lexer.676422*, i64)*, %IntToken.676408* (%Lexer.676422*, i64)** %.66, align 8
  %.68 = call %IntToken.676408* %.67(%Lexer.676422* %.1, i64 16)
  %.69 = bitcast %IntToken.676408* %.68 to %Token.676406*
  ret %Token.676406* %.69

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.74 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.65, i64 0, i32 1
  %.75 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.74, align 8
  %.76 = call i8 %.75(%Lexer.676422* %.1, i64 1)
  %.78 = call i1 @is_number_char(i8 %.76)
  %.80 = icmp eq i8 %.76, 46
  %.81 = or i1 %.78, %.80
  %.84 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.85 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.84, i64 0, i32 0
  %.86 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.85, align 8
  %.87 = call i1 %.86(%Lexer.676422* %.1)
  %.88 = xor i1 %.87, true
  %.89 = and i1 %.81, %.88
  br i1 %.89, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3.endif.endif.endif, %while.entry.endif
  %is_float.0 = phi i1 [ %spec.select, %while.entry.endif ], [ false, %.3.endif.endif.endif ]
  %length.0 = phi i64 [ %.116, %while.entry.endif ], [ 1, %.3.endif.endif.endif ]
  %next_char.0 = phi i8 [ %.129, %while.entry.endif ], [ %.76, %.3.endif.endif.endif ]
  %.92 = icmp eq i8 %next_char.0, 46
  %.96 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.97 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.96, i64 0, i32 1
  %.98 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.97, align 8
  %.99 = call i8 %.98(%Lexer.676422* %.1, i64 2)
  %.100 = call i1 @is_number_char(i8 %.99)
  %.101 = xor i1 %.100, true
  %.102 = or i1 %is_float.0, %.101
  %.103 = and i1 %.92, %.102
  br i1 %.103, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3.endif.endif.endif
  %is_float.1 = phi i1 [ false, %.3.endif.endif.endif ], [ %spec.select, %while.entry.endif ], [ %is_float.0, %while.entry ]
  %length.1 = phi i64 [ 1, %.3.endif.endif.endif ], [ %.116, %while.entry.endif ], [ %length.0, %while.entry ]
  %.146 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.147 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.146, i64 0, i32 3
  %.148 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.147, align 8
  %.150 = call %FloRange.676382* %.148(%Lexer.676422* %.1, i64 %length.1)
  %.153 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  %.154 = load %string.676378*, %string.676378** %.153, align 8
  %.155 = getelementptr inbounds %string.676378, %string.676378* %.154, i64 0, i32 0
  %.156 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.156, i64 0, i32 7
  %.158 = load %string.676378* (%string.676378*, i64, i64)*, %string.676378* (%string.676378*, i64, i64)** %.157, align 8
  %.160 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.150, i64 0, i32 1
  %.161 = load i64, i64* %.160, align 8
  %.163 = call %string.676378* %.158(%string.676378* %.154, i64 %.161, i64 %length.1)
  %.168 = getelementptr inbounds %string.676378, %string.676378* %.163, i64 0, i32 0
  %.169 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.168, align 8
  %.170 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.169, i64 0, i32 11
  %.171 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.170, align 8
  %.172 = call i8* %.171(%string.676378* %.163)
  br i1 %is_float.1, label %true_block, label %false_block

while.entry.endif:                                ; preds = %while.entry
  %.108 = load i8, i8* %.9, align 1
  %.109 = icmp eq i8 %.108, 46
  %spec.select = or i1 %is_float.0, %.109
  %.116 = add i64 %length.0, 1
  %.120 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.121 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.120, i64 0, i32 2
  %.122 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.121, align 8
  call void %.122(%Lexer.676422* %.1)
  %.126 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.127 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.126, i64 0, i32 1
  %.128 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.127, align 8
  %.129 = call i8 %.128(%Lexer.676422* %.1, i64 1)
  %.131 = call i1 @is_number_char(i8 %.129)
  %.133 = icmp eq i8 %.129, 46
  %.134 = or i1 %.131, %.133
  %.137 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.13, align 8
  %.138 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.137, i64 0, i32 0
  %.139 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.138, align 8
  %.140 = call i1 %.139(%Lexer.676422* %.1)
  %.141 = xor i1 %.140, true
  %.142 = and i1 %.134, %.141
  br i1 %.142, label %while.entry, label %while.exit

true_block:                                       ; preds = %while.exit
  %.173 = call double @atof(i8* %.172)
  %.175 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.176 = bitcast i8* %.175 to %FloatToken.676410*
  %.177 = bitcast i8* %.175 to %FloatToken_vtable_ty.676411**
  store %FloatToken_vtable_ty.676411* @FloatToken_vtable_data, %FloatToken_vtable_ty.676411** %.177, align 8
  call void @FloatToken_constructor(%FloatToken.676410* %.176, double %.173, %FloRange.676382* %.150)
  br label %end

false_block:                                      ; preds = %while.exit
  %.188 = call i32 @atoi(i8* %.172)
  %.189 = zext i32 %.188 to i64
  %.191 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.192 = bitcast i8* %.191 to %IntToken.676408*
  %.193 = bitcast i8* %.191 to %IntToken_vtable_ty.676409**
  store %IntToken_vtable_ty.676409* @IntToken_vtable_data, %IntToken_vtable_ty.676409** %.193, align 8
  call void @IntToken_constructor(%IntToken.676408* %.192, i64 %.189, %FloRange.676382* %.150)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.198.in = phi i8* [ %.175, %true_block ], [ %.191, %false_block ]
  %.198 = bitcast i8* %.198.in to %Token.676406*
  ret %Token.676406* %.198
}

define noalias %Token.676406* @Lexer_identifier_token(%Lexer.676422* %.1) {
.3:
  %.7 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  %.8 = load i64, i64* %.7, align 8
  %.11 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.12 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.13 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.12, i64 0, i32 1
  %.14 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.13, align 8
  %.15 = call i8 %.14(%Lexer.676422* %.1, i64 1)
  %.19 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.20 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.19, i64 0, i32 1
  %.21 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.20, align 8
  %.22 = call i8 %.21(%Lexer.676422* %.1, i64 1)
  %.24 = call i1 @is_identifier_char(i8 %.22)
  %.26 = call i1 @is_number_char(i8 %.22)
  %.27 = or i1 %.24, %.26
  %.30 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.31 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.30, i64 0, i32 0
  %.32 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.31, align 8
  %.33 = call i1 %.32(%Lexer.676422* %.1)
  %.34 = xor i1 %.33, true
  %.35 = and i1 %.27, %.34
  br i1 %.35, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %length.0 = phi i64 [ %.40, %while.entry ], [ 1, %.3 ]
  %.40 = add i64 %length.0, 1
  %.44 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.45 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.44, i64 0, i32 2
  %.46 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.45, align 8
  call void %.46(%Lexer.676422* %.1)
  %.50 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.51 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.50, i64 0, i32 1
  %.52 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.51, align 8
  %.53 = call i8 %.52(%Lexer.676422* %.1, i64 1)
  %.55 = call i1 @is_identifier_char(i8 %.53)
  %.57 = call i1 @is_number_char(i8 %.53)
  %.58 = or i1 %.55, %.57
  %.61 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.62 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.61, i64 0, i32 0
  %.63 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.62, align 8
  %.64 = call i1 %.63(%Lexer.676422* %.1)
  %.65 = xor i1 %.64, true
  %.66 = and i1 %.58, %.65
  br i1 %.66, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3
  %length.1 = phi i64 [ 1, %.3 ], [ %.40, %while.entry ]
  %.69 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  %.70 = load %string.676378*, %string.676378** %.69, align 8
  %.71 = getelementptr inbounds %string.676378, %string.676378* %.70, i64 0, i32 0
  %.72 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.71, align 8
  %.73 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.72, i64 0, i32 7
  %.74 = load %string.676378* (%string.676378*, i64, i64)*, %string.676378* (%string.676378*, i64, i64)** %.73, align 8
  %.77 = call %string.676378* %.74(%string.676378* %.70, i64 %.8, i64 %length.1)
  %.81 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.82 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.81, i64 0, i32 3
  %.83 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.82, align 8
  %.85 = call %FloRange.676382* %.83(%Lexer.676422* %.1, i64 %length.1)
  %keyword = alloca i64, align 8
  store i64 0, i64* %keyword, align 8
  %.89 = call i64 @string_to_kw_token(%string.676378* %.77)
  store i64 %.89, i64* %keyword, align 8
  %.92.not = icmp eq i64 %.89, -1
  br i1 %.92.not, label %while.exit.endif, label %while.exit.if

while.exit.if:                                    ; preds = %while.exit
  %.96 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.97 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.96, i64 0, i32 1
  %.98 = load i8 (%Lexer.676422*, i64)*, i8 (%Lexer.676422*, i64)** %.97, align 8
  %.99 = call i8 %.98(%Lexer.676422* %.1, i64 1)
  %.100 = icmp eq i8 %.99, 61
  br i1 %.100, label %while.exit.if.if, label %while.exit.if.endif

while.exit.endif:                                 ; preds = %while.exit
  %.146 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.147 = bitcast i8* %.146 to %IdentifierToken.676420*
  %.148 = bitcast i8* %.146 to %IdentifierToken_vtable_ty.676421**
  store %IdentifierToken_vtable_ty.676421* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.676421** %.148, align 8
  call void @IdentifierToken_constructor(%IdentifierToken.676420* %.147, %string.676378* %.77, %FloRange.676382* %.85)
  %.151 = bitcast i8* %.146 to %Token.676406*
  ret %Token.676406* %.151

while.exit.if.if:                                 ; preds = %while.exit.if
  %.103 = icmp eq i64 %.89, 51
  br i1 %.103, label %while.exit.if.if.if, label %while.exit.if.if.endif

while.exit.if.endif:                              ; preds = %while.exit.if.if.endif.endif, %while.exit.if.if.endif.endif.if, %while.exit.if
  %.136 = load i64, i64* %keyword, align 8
  %.138 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.139 = bitcast i8* %.138 to %Token.676406*
  %.140 = bitcast i8* %.138 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.140, align 8
  call void @Token_constructor(%Token.676406* %.139, i64 %.136, %FloRange.676382* %.85)
  ret %Token.676406* %.139

while.exit.if.if.if:                              ; preds = %while.exit.if.if
  %.107 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.108 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.107, i64 0, i32 2
  %.109 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.108, align 8
  call void %.109(%Lexer.676422* %.1)
  store i64 15, i64* %keyword, align 8
  br label %while.exit.if.if.endif

while.exit.if.if.endif:                           ; preds = %while.exit.if.if.if, %while.exit.if.if
  %.113 = load i64, i64* %keyword, align 8
  %.114 = icmp eq i64 %.113, 52
  br i1 %.114, label %while.exit.if.if.endif.if, label %while.exit.if.if.endif.endif

while.exit.if.if.endif.if:                        ; preds = %while.exit.if.if.endif
  %.118 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.119 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.118, i64 0, i32 2
  %.120 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.119, align 8
  call void %.120(%Lexer.676422* %.1)
  store i64 16, i64* %keyword, align 8
  br label %while.exit.if.if.endif.endif

while.exit.if.if.endif.endif:                     ; preds = %while.exit.if.if.endif.if, %while.exit.if.if.endif
  %.124 = load i64, i64* %keyword, align 8
  %.125 = icmp eq i64 %.124, 53
  br i1 %.125, label %while.exit.if.if.endif.endif.if, label %while.exit.if.endif

while.exit.if.if.endif.endif.if:                  ; preds = %while.exit.if.if.endif.endif
  %.129 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.11, align 8
  %.130 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.129, i64 0, i32 2
  %.131 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.130, align 8
  call void %.131(%Lexer.676422* %.1)
  store i64 17, i64* %keyword, align 8
  br label %while.exit.if.endif
}

define noalias %StrToken.676414* @Lexer_string_token(%Lexer.676422* %.1) {
.3:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Array<Array<Token>>.676416"*
  %.12 = bitcast i8* %.10 to %"Array<Array<Token>>_vtable_ty.676419"**
  store %"Array<Array<Token>>_vtable_ty.676419"* @"Array<Array<Token>>_vtable_data", %"Array<Array<Token>>_vtable_ty.676419"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.23 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.24 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.25 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.24, i64 0, i32 2
  %.26 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.25, align 8
  call void %.26(%Lexer.676422* %.1)
  %.28 = call %string.676378* @heap_string(i64 1)
  %.32 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.33 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.32, i64 0, i32 0
  %.34 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.33, align 8
  %.35 = call i1 %.34(%Lexer.676422* %.1)
  br i1 %.35, label %while.exit, label %while.entry.preheader

while.entry.preheader:                            ; preds = %.3
  %.39 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 1
  %.56 = getelementptr inbounds %string.676378, %string.676378* %.28, i64 0, i32 0
  %.190 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 5
  %.193 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 6
  %.229 = getelementptr inbounds %string.676378, %string.676378* %.28, i64 0, i32 0
  br label %while.entry.outer

while.entry.outer:                                ; preds = %while.entry.preheader, %while.entry.endif.endif
  %length.0.ph = phi i64 [ 2, %while.entry.preheader ], [ %.221, %while.entry.endif.endif ]
  %escape_next.0.ph = phi i1 [ false, %while.entry.preheader ], [ %.226, %while.entry.endif.endif ]
  %.404 = load i8, i8* %.39, align 1
  %.415 = icmp eq i8 %.404, 34
  %.43 = xor i1 %escape_next.0.ph, true
  %.446 = and i1 %.415, %.43
  br i1 %.446, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.outer, %while.entry.endif.endif, %while.entry.endif.if.endif, %.3
  %length.1 = phi i64 [ 2, %.3 ], [ %length.0.ph, %while.entry.endif.if.endif ], [ %.221, %while.entry.endif.endif ], [ %length.0.ph, %while.entry.outer ]
  %.253 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.254 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.253, i64 0, i32 3
  %.255 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.254, align 8
  %.257 = call %FloRange.676382* %.255(%Lexer.676422* %.1, i64 %length.1)
  %.260 = call %string.676378* @unescape(%string.676378* %.28)
  %.265 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.266 = bitcast i8* %.265 to %StrToken.676414*
  %.267 = bitcast i8* %.265 to %StrToken_vtable_ty.676415**
  store %StrToken_vtable_ty.676415* @StrToken_vtable_data, %StrToken_vtable_ty.676415** %.267, align 8
  call void @StrToken_constructor(%StrToken.676414* %.266, %"Array<Array<Token>>.676416"* %.11, %string.676378* %.260, %FloRange.676382* %.257)
  ret %StrToken.676414* %.266

while.entry.endif:                                ; preds = %while.entry.outer, %while.entry.endif.if.endif
  %.407 = phi i8 [ %.40, %while.entry.endif.if.endif ], [ %.404, %while.entry.outer ]
  %.50 = icmp eq i8 %.407, 36
  %.53 = and i1 %.50, %.43
  br i1 %.53, label %while.entry.endif.if, label %while.entry.endif.endif

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.57 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.56, align 8
  %.58 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.57, i64 0, i32 2
  %.59 = load void (%string.676378*, i8)*, void (%string.676378*, i8)** %.58, align 8
  call void %.59(%string.676378* %.28, i8 %.407)
  %.66 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.67, align 8
  call void %.68(%Lexer.676422* %.1)
  %.71 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<Token>_vtable_ty.676418"**
  store %"Array<Token>_vtable_ty.676418"* @"Array<Token>_vtable_data", %"Array<Token>_vtable_ty.676418"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %3 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %3, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %4 = bitcast i8* %.79 to i64*
  store i64 0, i64* %4, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %5 = bitcast i8* %.81 to i64*
  store i64 8, i64* %5, align 8
  %token_group = alloca %"Array<Token>.676417"*, align 8
  %6 = bitcast %"Array<Token>.676417"** %token_group to i8**
  store i8* %.73, i8** %6, align 8
  %active_open_pars = alloca i64, align 8
  store i64 0, i64* %active_open_pars, align 8
  %.87 = load i8, i8* %.39, align 1
  %.88 = icmp eq i8 %.87, 40
  br i1 %.88, label %while.entry.endif.if.if, label %while.entry.endif.if.else

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %.221 = add i64 %length.0.ph, 1
  %.226 = icmp eq i8 %.407, 92
  %.230 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.229, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.230, i64 0, i32 2
  %.232 = load void (%string.676378*, i8)*, void (%string.676378*, i8)** %.231, align 8
  call void %.232(%string.676378* %.28, i8 %.407)
  %.239 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.240 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.239, i64 0, i32 2
  %.241 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.240, align 8
  call void %.241(%Lexer.676422* %.1)
  %.245 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.246 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.245, i64 0, i32 0
  %.247 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.246, align 8
  %.248 = call i1 %.247(%Lexer.676422* %.1)
  br i1 %.248, label %while.exit, label %while.entry.outer

while.entry.endif.if.if:                          ; preds = %while.entry.endif.if
  %.92 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.93 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.92, i64 0, i32 2
  %.94 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.93, align 8
  call void %.94(%Lexer.676422* %.1)
  %.98 = load i8, i8* %.39, align 1
  %.99 = icmp ne i8 %.98, 41
  %.105 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.106 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.105, i64 0, i32 0
  %.107 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.106, align 8
  %.108 = call i1 %.107(%Lexer.676422* %.1)
  %.109 = xor i1 %.108, true
  %.110 = and i1 %.99, %.109
  br i1 %.110, label %while.entry.1.preheader, label %while.entry.endif.if.endif

while.entry.1.preheader:                          ; preds = %while.entry.endif.if.if
  %.134 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %token_group, align 8
  %.141 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.134, i64 0, i32 0
  %active_open_pars.promoted = load i64, i64* %active_open_pars, align 8
  br label %while.entry.1

while.entry.endif.if.else:                        ; preds = %while.entry.endif.if
  %.169 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %token_group, align 8
  %.172 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.173 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.172, i64 0, i32 21
  %.174 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.173, align 8
  %.175 = call %Token.676406* %.174(%Lexer.676422* %.1)
  %.176 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.169, i64 0, i32 0
  %.177 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.176, align 8
  %.178 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.177, i64 0, i32 2
  %.179 = load void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)** %.178, align 8
  call void %.179(%"Array<Token>.676417"* %.169, %Token.676406* %.175)
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif.loopexit:              ; preds = %while.entry.1.endif.endif
  store i64 %.15610, i64* %active_open_pars, align 8
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif:                       ; preds = %while.entry.endif.if.endif.loopexit, %while.entry.endif.if.if, %while.entry.endif.if.else
  %.184 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.185 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.184, i64 0, i32 2
  %.186 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.185, align 8
  call void %.186(%Lexer.676422* %.1)
  %.188 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %token_group, align 8
  %.191 = load i64, i64* %.190, align 8
  %.194 = load i64, i64* %.193, align 8
  %.195 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.196 = bitcast i8* %.195 to %FloRange.676382*
  %.197 = bitcast i8* %.195 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.197, align 8
  call void @FloRange_constructor(%FloRange.676382* %.196, i64 0, i64 0, i64 %.191, i64 %.194)
  %.200 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.201 = bitcast i8* %.200 to %Token.676406*
  %.202 = bitcast i8* %.200 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.202, align 8
  call void @Token_constructor(%Token.676406* %.201, i64 43, %FloRange.676382* %.196)
  %.205 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.188, i64 0, i32 0
  %.206 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.205, align 8
  %.207 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.206, i64 0, i32 2
  %.208 = load void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)** %.207, align 8
  call void %.208(%"Array<Token>.676417"* %.188, %Token.676406* %.201)
  %.213 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.12, align 8
  %.214 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.213, i64 0, i32 2
  %.215 = load void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)*, void (%"Array<Array<Token>>.676416"*, %"Array<Token>.676417"*)** %.214, align 8
  call void %.215(%"Array<Array<Token>>.676416"* %.11, %"Array<Token>.676417"* %.188)
  %.40 = load i8, i8* %.39, align 1
  %.41 = icmp eq i8 %.40, 34
  %.44 = and i1 %.41, %.43
  br i1 %.44, label %while.exit, label %while.entry.endif

while.entry.1:                                    ; preds = %while.entry.1.preheader, %while.entry.1.endif.endif
  %.1569 = phi i64 [ %active_open_pars.promoted, %while.entry.1.preheader ], [ %.15610, %while.entry.1.endif.endif ]
  %.114 = load i8, i8* %.39, align 1
  switch i8 %.114, label %while.entry.1.endif.endif [
    i8 40, label %while.entry.1.if
    i8 41, label %while.entry.1.endif.if
  ]

while.entry.1.if:                                 ; preds = %while.entry.1
  %.120 = add i64 %.1569, 1
  br label %while.entry.1.endif.endif

while.entry.1.endif.if:                           ; preds = %while.entry.1
  %.131 = add i64 %.1569, -1
  br label %while.entry.1.endif.endif

while.entry.1.endif.endif:                        ; preds = %while.entry.1.if, %while.entry.1, %while.entry.1.endif.if
  %.15610 = phi i64 [ %.120, %while.entry.1.if ], [ %.1569, %while.entry.1 ], [ %.131, %while.entry.1.endif.if ]
  %.137 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.138 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.137, i64 0, i32 21
  %.139 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.138, align 8
  %.140 = call %Token.676406* %.139(%Lexer.676422* %.1)
  %.142 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.141, align 8
  %.143 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.142, i64 0, i32 2
  %.144 = load void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)** %.143, align 8
  call void %.144(%"Array<Token>.676417"* %.134, %Token.676406* %.140)
  %.148 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.149 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.148, i64 0, i32 2
  %.150 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.149, align 8
  call void %.150(%Lexer.676422* %.1)
  %.154 = load i8, i8* %.39, align 1
  %.155 = icmp ne i8 %.154, 41
  %.157 = icmp ne i64 %.15610, 0
  %.158 = or i1 %.155, %.157
  %.161 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.23, align 8
  %.162 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.161, i64 0, i32 0
  %.163 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.162, align 8
  %.164 = call i1 %.163(%Lexer.676422* %.1)
  %.165 = xor i1 %.164, true
  %.166 = and i1 %.158, %.165
  br i1 %.166, label %while.entry.1, label %while.entry.endif.if.endif.loopexit
}

define noalias %CharToken.676412* @Lexer_char_token(%Lexer.676422* %.1) {
.3:
  %.7 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.8 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.7, align 8
  %.9 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.8, i64 0, i32 2
  %.10 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.9, align 8
  call void %.10(%Lexer.676422* %.1)
  %.13 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 1
  %.14 = load i8, i8* %.13, align 1
  %.19 = icmp eq i8 %.14, 92
  br i1 %.19, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.23 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.7, align 8
  %.24 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.23, i64 0, i32 2
  %.25 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.24, align 8
  call void %.25(%Lexer.676422* %.1)
  %.29 = load i8, i8* %.13, align 1
  %.30 = call i8 @get_escape_char(i8 %.29)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %length.0 = phi i64 [ 5, %.3.if ], [ 3, %.3 ]
  %value.0 = phi i8 [ %.30, %.3.if ], [ %.14, %.3 ]
  %.38 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.7, align 8
  %.39 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.38, i64 0, i32 2
  %.40 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.39, align 8
  call void %.40(%Lexer.676422* %.1)
  %.45 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.7, align 8
  %.46 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.45, i64 0, i32 3
  %.47 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.46, align 8
  %.49 = call %FloRange.676382* %.47(%Lexer.676422* %.1, i64 %length.0)
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %CharToken.676412*
  %.52 = bitcast i8* %.50 to %CharToken_vtable_ty.676413**
  store %CharToken_vtable_ty.676413* @CharToken_vtable_data, %CharToken_vtable_ty.676413** %.52, align 8
  call void @CharToken_constructor(%CharToken.676412* %.51, i8 %value.0, %FloRange.676382* %.49)
  ret %CharToken.676412* %.51
}

define %Token.676406* @Lexer_lex_token(%Lexer.676422* %.1) {
.3:
  %.6 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 1
  %.7 = load i8, i8* %.6, align 1
  %.12 = icmp eq i8 %.7, 32
  br i1 %.12, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.15 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.16 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.15, align 8
  %.17 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.16, i64 0, i32 2
  %.18 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.17, align 8
  call void %.18(%Lexer.676422* %.1)
  %.22 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.15, align 8
  %.23 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.22, i64 0, i32 21
  %.24 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.23, align 8
  %.25 = call %Token.676406* %.24(%Lexer.676422* %.1)
  ret %Token.676406* %.25

.3.endif:                                         ; preds = %.3
  %.28 = call i1 @is_identifier_char(i8 %.7)
  br i1 %.28, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.31 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.32 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.31, align 8
  %.33 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.32, i64 0, i32 18
  %.34 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.33, align 8
  %.35 = call %Token.676406* %.34(%Lexer.676422* %.1)
  ret %Token.676406* %.35

.3.endif.endif:                                   ; preds = %.3.endif
  %.38 = icmp eq i8 %.7, 34
  br i1 %.38, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.41 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.42 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.41, align 8
  %.43 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.42, i64 0, i32 19
  %.44 = load %StrToken.676414* (%Lexer.676422*)*, %StrToken.676414* (%Lexer.676422*)** %.43, align 8
  %.45 = call %StrToken.676414* %.44(%Lexer.676422* %.1)
  %.46 = bitcast %StrToken.676414* %.45 to %Token.676406*
  ret %Token.676406* %.46

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.49 = call i1 @is_number_char(i8 %.7)
  br i1 %.49, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.52 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.53 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.52, align 8
  %.54 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.53, i64 0, i32 17
  %.55 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.54, align 8
  %.56 = call %Token.676406* %.55(%Lexer.676422* %.1)
  ret %Token.676406* %.56

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  switch i8 %.7, label %.3.endif.endif.endif.endi...endif.4.endif.endif.endif [
    i8 58, label %.3.endif.endif.endif.endif.if
    i8 59, label %.3.endif.endif.endif.endif.endif.if
    i8 44, label %.3.endif.endif.endif.endif.endif.endif.if
    i8 43, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i8 45, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i8 42, label %.3.endif.endif.endif.endi...if
    i8 37, label %.3.endif.endif.endif.endi...endif.if
    i8 94, label %.3.endif.endif.endif.endi...endif.endif.if
    i8 47, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i8 40, label %.3.endif.endif.endif.endi...if.1
    i8 41, label %.3.endif.endif.endif.endi...endif.1.if
    i8 123, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i8 125, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i8 91, label %.3.endif.endif.endif.endi...if.2
    i8 93, label %.3.endif.endif.endif.endi...endif.2.if
    i8 13, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i8 10, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i8 39, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i8 63, label %.3.endif.endif.endif.endi...if.3
    i8 38, label %.3.endif.endif.endif.endi...endif.3.if
    i8 61, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i8 33, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i8 62, label %.3.endif.endif.endif.endi...if.4
    i8 60, label %.3.endif.endif.endif.endi...endif.4.if
    i8 46, label %.3.endif.endif.endif.endi...endif.4.endif.if
    i8 0, label %.3.endif.endif.endif.endi...endif.4.endif.endif.if
  ]

.3.endif.endif.endif.endif.if:                    ; preds = %.3.endif.endif.endif.endif
  %.62 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.63 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.62, align 8
  %.64 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.63, i64 0, i32 3
  %.65 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.64, align 8
  %.66 = call %FloRange.676382* %.65(%Lexer.676422* %.1, i64 1)
  %.67 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.68 = bitcast i8* %.67 to %Token.676406*
  %.69 = bitcast i8* %.67 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.69, align 8
  call void @Token_constructor(%Token.676406* %.68, i64 0, %FloRange.676382* %.66)
  ret %Token.676406* %.68

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3.endif.endif.endif.endif
  %.77 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.78 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.77, align 8
  %.79 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.78, i64 0, i32 3
  %.80 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.79, align 8
  %.81 = call %FloRange.676382* %.80(%Lexer.676422* %.1, i64 1)
  %.82 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.83 = bitcast i8* %.82 to %Token.676406*
  %.84 = bitcast i8* %.82 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.84, align 8
  call void @Token_constructor(%Token.676406* %.83, i64 1, %FloRange.676382* %.81)
  ret %Token.676406* %.83

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3.endif.endif.endif.endif
  %.92 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.93 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.92, align 8
  %.94 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.93, i64 0, i32 3
  %.95 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.94, align 8
  %.96 = call %FloRange.676382* %.95(%Lexer.676422* %.1, i64 1)
  %.97 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.98 = bitcast i8* %.97 to %Token.676406*
  %.99 = bitcast i8* %.97 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.99, align 8
  call void @Token_constructor(%Token.676406* %.98, i64 2, %FloRange.676382* %.96)
  ret %Token.676406* %.98

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3.endif.endif.endif.endif
  %.107 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.108 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.107, align 8
  %.109 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.108, i64 0, i32 4
  %.110 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.109, align 8
  %.111 = call %Token.676406* %.110(%Lexer.676422* %.1)
  ret %Token.676406* %.111

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.117 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.118 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.117, align 8
  %.119 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.118, i64 0, i32 6
  %.120 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.119, align 8
  %.121 = call %Token.676406* %.120(%Lexer.676422* %.1)
  ret %Token.676406* %.121

.3.endif.endif.endif.endi...if:                   ; preds = %.3.endif.endif.endif.endif
  %.127 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.128 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.127, align 8
  %.129 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.128, i64 0, i32 7
  %.130 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.129, align 8
  %.131 = call %Token.676406* %.130(%Lexer.676422* %.1)
  ret %Token.676406* %.131

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3.endif.endif.endif.endif
  %.137 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.138 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.137, align 8
  %.139 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.138, i64 0, i32 8
  %.140 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.139, align 8
  %.141 = call %Token.676406* %.140(%Lexer.676422* %.1)
  ret %Token.676406* %.141

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3.endif.endif.endif.endif
  %.147 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.148 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.147, align 8
  %.149 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.148, i64 0, i32 9
  %.150 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.149, align 8
  %.151 = call %Token.676406* %.150(%Lexer.676422* %.1)
  ret %Token.676406* %.151

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.157 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.158 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.157, align 8
  %.159 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.158, i64 0, i32 5
  %.160 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.159, align 8
  %.161 = call i1 %.160(%Lexer.676422* %.1)
  %.165 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.157, align 8
  br i1 %.161, label %.3.endif.endif.endif.endi...endif.endif.endif.if.if, label %.3.endif.endif.endif.endi...endif.endif.endif.if.endif

.3.endif.endif.endif.endi...endif.endif.endif.if.if: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.if
  %.166 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.165, i64 0, i32 2
  %.167 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.166, align 8
  call void %.167(%Lexer.676422* %.1)
  %.171 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.157, align 8
  %.172 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.171, i64 0, i32 21
  %.173 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.172, align 8
  %.174 = call %Token.676406* %.173(%Lexer.676422* %.1)
  ret %Token.676406* %.174

.3.endif.endif.endif.endi...endif.endif.endif.if.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.if
  %.179 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.165, i64 0, i32 10
  %.180 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.179, align 8
  %.181 = call %Token.676406* %.180(%Lexer.676422* %.1)
  ret %Token.676406* %.181

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3.endif.endif.endif.endif
  %.187 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.188 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.187, align 8
  %.189 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.188, i64 0, i32 3
  %.190 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.189, align 8
  %.191 = call %FloRange.676382* %.190(%Lexer.676422* %.1, i64 1)
  %.192 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.193 = bitcast i8* %.192 to %Token.676406*
  %.194 = bitcast i8* %.192 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.194, align 8
  call void @Token_constructor(%Token.676406* %.193, i64 22, %FloRange.676382* %.191)
  ret %Token.676406* %.193

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3.endif.endif.endif.endif
  %.202 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.203 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.202, align 8
  %.204 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.203, i64 0, i32 3
  %.205 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.204, align 8
  %.206 = call %FloRange.676382* %.205(%Lexer.676422* %.1, i64 1)
  %.207 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.208 = bitcast i8* %.207 to %Token.676406*
  %.209 = bitcast i8* %.207 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.209, align 8
  call void @Token_constructor(%Token.676406* %.208, i64 23, %FloRange.676382* %.206)
  ret %Token.676406* %.208

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.217 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.218 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.217, align 8
  %.219 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.218, i64 0, i32 3
  %.220 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.219, align 8
  %.221 = call %FloRange.676382* %.220(%Lexer.676422* %.1, i64 1)
  %.222 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.223 = bitcast i8* %.222 to %Token.676406*
  %.224 = bitcast i8* %.222 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.224, align 8
  call void @Token_constructor(%Token.676406* %.223, i64 24, %FloRange.676382* %.221)
  ret %Token.676406* %.223

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.232 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.233 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.232, align 8
  %.234 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.233, i64 0, i32 3
  %.235 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.234, align 8
  %.236 = call %FloRange.676382* %.235(%Lexer.676422* %.1, i64 1)
  %.237 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.238 = bitcast i8* %.237 to %Token.676406*
  %.239 = bitcast i8* %.237 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.239, align 8
  call void @Token_constructor(%Token.676406* %.238, i64 25, %FloRange.676382* %.236)
  ret %Token.676406* %.238

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3.endif.endif.endif.endif
  %.247 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.248 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.247, align 8
  %.249 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.248, i64 0, i32 3
  %.250 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.249, align 8
  %.251 = call %FloRange.676382* %.250(%Lexer.676422* %.1, i64 1)
  %.252 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.253 = bitcast i8* %.252 to %Token.676406*
  %.254 = bitcast i8* %.252 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.254, align 8
  call void @Token_constructor(%Token.676406* %.253, i64 26, %FloRange.676382* %.251)
  ret %Token.676406* %.253

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3.endif.endif.endif.endif
  %.262 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.263 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.262, align 8
  %.264 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.263, i64 0, i32 3
  %.265 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.264, align 8
  %.266 = call %FloRange.676382* %.265(%Lexer.676422* %.1, i64 1)
  %.267 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.268 = bitcast i8* %.267 to %Token.676406*
  %.269 = bitcast i8* %.267 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.269, align 8
  call void @Token_constructor(%Token.676406* %.268, i64 27, %FloRange.676382* %.266)
  ret %Token.676406* %.268

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3.endif.endif.endif.endif, %.3.endif.endif.endif.endif
  %.280 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.281 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.280, align 8
  %.282 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.281, i64 0, i32 3
  %.283 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.282, align 8
  %.284 = call %FloRange.676382* %.283(%Lexer.676422* %.1, i64 1)
  %.285 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.286 = bitcast i8* %.285 to %Token.676406*
  %.287 = bitcast i8* %.285 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.287, align 8
  call void @Token_constructor(%Token.676406* %.286, i64 30, %FloRange.676382* %.284)
  ret %Token.676406* %.286

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.295 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.296 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.295, align 8
  %.297 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.296, i64 0, i32 20
  %.298 = load %CharToken.676412* (%Lexer.676422*)*, %CharToken.676412* (%Lexer.676422*)** %.297, align 8
  %.299 = call %CharToken.676412* %.298(%Lexer.676422* %.1)
  %.300 = bitcast %CharToken.676412* %.299 to %Token.676406*
  ret %Token.676406* %.300

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3.endif.endif.endif.endif
  %.306 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.307 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.306, align 8
  %.308 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.307, i64 0, i32 3
  %.309 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.308, align 8
  %.310 = call %FloRange.676382* %.309(%Lexer.676422* %.1, i64 1)
  %.311 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.312 = bitcast i8* %.311 to %Token.676406*
  %.313 = bitcast i8* %.311 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.313, align 8
  call void @Token_constructor(%Token.676406* %.312, i64 33, %FloRange.676382* %.310)
  ret %Token.676406* %.312

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3.endif.endif.endif.endif
  %.321 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.322 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.321, align 8
  %.323 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.322, i64 0, i32 3
  %.324 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.323, align 8
  %.325 = call %FloRange.676382* %.324(%Lexer.676422* %.1, i64 1)
  %.326 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.327 = bitcast i8* %.326 to %Token.676406*
  %.328 = bitcast i8* %.326 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.328, align 8
  call void @Token_constructor(%Token.676406* %.327, i64 34, %FloRange.676382* %.325)
  ret %Token.676406* %.327

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.336 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.337 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.336, align 8
  %.338 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.337, i64 0, i32 11
  %.339 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.338, align 8
  %.340 = call %Token.676406* %.339(%Lexer.676422* %.1)
  ret %Token.676406* %.340

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.346 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.347 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.346, align 8
  %.348 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.347, i64 0, i32 12
  %.349 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.348, align 8
  %.350 = call %Token.676406* %.349(%Lexer.676422* %.1)
  ret %Token.676406* %.350

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3.endif.endif.endif.endif
  %.356 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.357 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.356, align 8
  %.358 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.357, i64 0, i32 13
  %.359 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.358, align 8
  %.360 = call %Token.676406* %.359(%Lexer.676422* %.1)
  ret %Token.676406* %.360

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3.endif.endif.endif.endif
  %.366 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.367 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.366, align 8
  %.368 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.367, i64 0, i32 14
  %.369 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.368, align 8
  %.370 = call %Token.676406* %.369(%Lexer.676422* %.1)
  ret %Token.676406* %.370

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3.endif.endif.endif.endif
  %.376 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.377 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.376, align 8
  %.378 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.377, i64 0, i32 15
  %.379 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.378, align 8
  %.380 = call %Token.676406* %.379(%Lexer.676422* %.1)
  ret %Token.676406* %.380

.3.endif.endif.endif.endi...endif.4.endif.endif.if: ; preds = %.3.endif.endif.endif.endif
  %.386 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 5
  %.387 = load i64, i64* %.386, align 8
  %.389 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 6
  %.390 = load i64, i64* %.389, align 8
  %.391 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.392 = bitcast i8* %.391 to %FloRange.676382*
  %.393 = bitcast i8* %.391 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.393, align 8
  call void @FloRange_constructor(%FloRange.676382* %.392, i64 0, i64 0, i64 %.387, i64 %.390)
  %.396 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.397 = bitcast i8* %.396 to %Token.676406*
  %.398 = bitcast i8* %.396 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.398, align 8
  call void @Token_constructor(%Token.676406* %.397, i64 43, %FloRange.676382* %.392)
  ret %Token.676406* %.397

.3.endif.endif.endif.endi...endif.4.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif
  %.403 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 3
  %.404 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.403, align 8
  %.406 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  %.407 = load %string.676378*, %string.676378** %.406, align 8
  %.408 = getelementptr inbounds %string.676378, %string.676378* %.407, i64 0, i32 0
  %.409 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.408, align 8
  %.410 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.409, i64 0, i32 7
  %.411 = load %string.676378* (%string.676378*, i64, i64)*, %string.676378* (%string.676378*, i64, i64)** %.410, align 8
  %.413 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 4
  %.414 = load i64, i64* %.413, align 8
  %.415 = call %string.676378* %.411(%string.676378* %.407, i64 %.414, i64 1)
  %.416 = getelementptr inbounds %string.676378, %string.676378* %.415, i64 0, i32 0
  %.417 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.416, align 8
  %.418 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.417, i64 0, i32 11
  %.419 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.418, align 8
  %.420 = call i8* %.419(%string.676378* %.415)
  %.422 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.66, i64 0, i64 0), i8* %.420)
  %.424 = call i8* @malloc(i64 %.422)
  %.425 = call i64 (i8*, i8*, ...) @sprintf(i8* %.424, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.66, i64 0, i64 0), i8* %.420)
  %.426 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.427 = bitcast i8* %.426 to %string.676378*
  %.428 = bitcast i8* %.426 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.428, align 8
  %.430 = getelementptr inbounds i8, i8* %.426, i64 8
  %0 = bitcast i8* %.430 to i8**
  store i8* %.424, i8** %0, align 8
  %.432 = getelementptr inbounds i8, i8* %.426, i64 16
  %1 = bitcast i8* %.432 to i64*
  store i64 %.422, i64* %1, align 8
  %.434 = getelementptr inbounds i8, i8* %.426, i64 24
  %2 = bitcast i8* %.434 to i64*
  store i64 %.422, i64* %2, align 8
  %.437 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.438 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.437, align 8
  %.439 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.438, i64 0, i32 3
  %.440 = load %FloRange.676382* (%Lexer.676422*, i64)*, %FloRange.676382* (%Lexer.676422*, i64)** %.439, align 8
  %.441 = call %FloRange.676382* %.440(%Lexer.676422* %.1, i64 1)
  %.442 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.443 = bitcast i8* %.442 to %FloError.676384*
  %.444 = bitcast i8* %.442 to %FloError_vtable_ty.676385**
  store %FloError_vtable_ty.676385* @FloError_vtable_data, %FloError_vtable_ty.676385** %.444, align 8
  call void @FloError_constructor(%FloError.676384* %.443, i64 0, %string.676378* %.427, %FloRange.676382* %.441)
  %.447 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.404, i64 0, i32 0
  %.448 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.447, align 8
  %.449 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.448, i64 0, i32 2
  %.450 = load void (%"Array<FloError>.676397"*, %FloError.676384*)*, void (%"Array<FloError>.676397"*, %FloError.676384*)** %.449, align 8
  call void %.450(%"Array<FloError>.676397"* %.404, %FloError.676384* %.443)
  ret %Token.676406* null
}

define %"Array<Token>.676417"* @Lexer_tokenize(%Lexer.676422* %.1, %string.676378* %.2, %"Array<FloError>.676397"* %.3) {
.5:
  %.11 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 2
  store %string.676378* %.2, %string.676378** %.11, align 8
  %.15 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 3
  store %"Array<FloError>.676397"* %.3, %"Array<FloError>.676397"** %.15, align 8
  %.18 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 0
  %.19 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.18, align 8
  %.20 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.19, i64 0, i32 2
  %.21 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.20, align 8
  call void %.21(%Lexer.676422* %.1)
  %.24 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %"Array<Token>.676417"*
  %.28 = bitcast i8* %.26 to %"Array<Token>_vtable_ty.676418"**
  store %"Array<Token>_vtable_ty.676418"* @"Array<Token>_vtable_data", %"Array<Token>_vtable_ty.676418"** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 0, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 8, i64* %2, align 8
  %.39 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.18, align 8
  %.40 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.39, i64 0, i32 0
  %.41 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.40, align 8
  %.42 = call i1 %.41(%Lexer.676422* %.1)
  %.43 = xor i1 %.42, true
  %.46 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.15, align 8
  %.47 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.46, i64 0, i32 2
  %.48 = load i64, i64* %.47, align 8
  %.49 = icmp eq i64 %.48, 0
  %.50 = and i1 %.49, %.43
  br i1 %.50, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.5, %while.entry
  %.55 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.18, align 8
  %.56 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.55, i64 0, i32 21
  %.57 = load %Token.676406* (%Lexer.676422*)*, %Token.676406* (%Lexer.676422*)** %.56, align 8
  %.58 = call %Token.676406* %.57(%Lexer.676422* %.1)
  %.60 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.28, align 8
  %.61 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.60, i64 0, i32 2
  %.62 = load void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)** %.61, align 8
  call void %.62(%"Array<Token>.676417"* %.27, %Token.676406* %.58)
  %.66 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.18, align 8
  %.67 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.66, i64 0, i32 2
  %.68 = load void (%Lexer.676422*)*, void (%Lexer.676422*)** %.67, align 8
  call void %.68(%Lexer.676422* %.1)
  %.72 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.18, align 8
  %.73 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.72, i64 0, i32 0
  %.74 = load i1 (%Lexer.676422*)*, i1 (%Lexer.676422*)** %.73, align 8
  %.75 = call i1 %.74(%Lexer.676422* %.1)
  %.76 = xor i1 %.75, true
  %.79 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.15, align 8
  %.80 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.79, i64 0, i32 2
  %.81 = load i64, i64* %.80, align 8
  %.82 = icmp eq i64 %.81, 0
  %.83 = and i1 %.82, %.76
  br i1 %.83, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.5
  %.87 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 5
  %.88 = load i64, i64* %.87, align 8
  %.90 = getelementptr inbounds %Lexer.676422, %Lexer.676422* %.1, i64 0, i32 6
  %.91 = load i64, i64* %.90, align 8
  %.92 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.93 = bitcast i8* %.92 to %FloRange.676382*
  %.94 = bitcast i8* %.92 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.94, align 8
  call void @FloRange_constructor(%FloRange.676382* %.93, i64 0, i64 0, i64 %.88, i64 %.91)
  %.97 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.98 = bitcast i8* %.97 to %Token.676406*
  %.99 = bitcast i8* %.97 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.99, align 8
  call void @Token_constructor(%Token.676406* %.98, i64 43, %FloRange.676382* %.93)
  %.103 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.28, align 8
  %.104 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.103, i64 0, i32 2
  %.105 = load void (%"Array<Token>.676417"*, %Token.676406*)*, void (%"Array<Token>.676417"*, %Token.676406*)** %.104, align 8
  call void %.105(%"Array<Token>.676417"* %.27, %Token.676406* %.98)
  ret %"Array<Token>.676417"* %.27
}

; Function Attrs: nofree nounwind readonly
declare double @atof(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @atoi(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
define noalias %string.676378* @token_str(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.16.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 5, label %.3.endif.endif.endif.if
    i64 20, label %.3.endif.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.endif.if
    i64 21, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 3, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 22, label %.3.endif.endif.endif.endi...if
    i64 23, label %.3.endif.endif.endif.endi...endif.if
    i64 7, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 24, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 25, label %.3.endif.endif.endif.endi...if.1
    i64 26, label %.3.endif.endif.endif.endi...endif.1.if
    i64 27, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 28, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 29, label %.3.endif.endif.endif.endi...if.2
    i64 30, label %.3.endif.endif.endif.endi...endif.2.if
    i64 31, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i64 32, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i64 8, label %.3.endif.endif.endif.endi...if.3
    i64 33, label %.3.endif.endif.endif.endi...endif.3.if
    i64 34, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i64 35, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i64 36, label %.3.endif.endif.endif.endi...if.4
    i64 37, label %.3.endif.endif.endif.endi...endif.4.if
    i64 38, label %.3.endif.endif.endif.endi...endif.4.endif.if
    i64 39, label %.3.endif.endif.endif.endi...endif.4.endif.endif.if
    i64 40, label %.3.endif.endif.endif.endi...if.5
    i64 41, label %.3.endif.endif.endif.endi...endif.5.if
    i64 42, label %.3.endif.endif.endif.endi...endif.5.endif.if
    i64 43, label %.3.endif.endif.endif.endi...endif.5.endif.endif.if
    i64 44, label %.3.endif.endif.endif.endi...if.6
    i64 45, label %.3.endif.endif.endif.endi...endif.6.if
    i64 46, label %.3.endif.endif.endif.endi...endif.6.endif.if
    i64 47, label %.3.endif.endif.endif.endi...endif.6.endif.endif.if
    i64 48, label %.3.endif.endif.endif.endi...if.7
    i64 49, label %.3.endif.endif.endif.endi...endif.7.if
    i64 50, label %.3.endif.endif.endif.endi...endif.7.endif.if
    i64 51, label %.3.endif.endif.endif.endi...endif.7.endif.endif.if
    i64 52, label %.3.endif.endif.endif.endi...if.8
    i64 53, label %.3.endif.endif.endif.endi...endif.8.if
    i64 54, label %.3.endif.endif.endif.endi...endif.8.endif.if
    i64 56, label %.3.endif.endif.endif.endi...endif.8.endif.endif.if
    i64 57, label %.3.endif.endif.endif.endi...if.9
    i64 58, label %.3.endif.endif.endif.endi...endif.9.if
    i64 59, label %.3.endif.endif.endif.endi...endif.9.endif.if
    i64 60, label %.3.endif.endif.endif.endi...endif.9.endif.endif.if
    i64 61, label %.3.endif.endif.endif.endi...if.10
    i64 62, label %.3.endif.endif.endif.endi...endif.10.if
    i64 63, label %.3.endif.endif.endif.endi...endif.10.endif.if
    i64 64, label %.3.endif.endif.endif.endi...endif.10.endif.endif.if
    i64 65, label %.3.endif.endif.endif.endi...if.11
    i64 66, label %.3.endif.endif.endif.endi...endif.11.if
    i64 67, label %.3.endif.endif.endif.endi...endif.11.endif.if
    i64 68, label %.3.endif.endif.endif.endi...endif.11.endif.endif.if
    i64 69, label %.3.endif.endif.endif.endi...if.12
    i64 70, label %.3.endif.endif.endif.endi...endif.12.if
    i64 71, label %.3.endif.endif.endif.endi...endif.12.endif.if
    i64 72, label %.3.endif.endif.endif.endi...endif.12.endif.endif.if
    i64 73, label %.3.endif.endif.endif.endi...if.13
    i64 74, label %.3.endif.endif.endif.endi...endif.13.if
    i64 75, label %.3.endif.endif.endif.endi...endif.13.endif.if
    i64 76, label %.3.endif.endif.endif.endi...endif.13.endif.endif.if
    i64 77, label %.3.endif.endif.endif.endi...if.14
    i64 78, label %.3.endif.endif.endif.endi...endif.14.if
    i64 79, label %.3.endif.endif.endif.endi...endif.14.endif.if
    i64 80, label %.3.endif.endif.endif.endi...endif.14.endif.endif.if
    i64 81, label %.3.endif.endif.endif.endi...if.15
    i64 82, label %.3.endif.endif.endif.endi...endif.15.if
    i64 83, label %.3.endif.endif.endif.endi...endif.15.endif.if
    i64 84, label %.3.endif.endif.endif.endi...endif.15.endif.endif.if
    i64 85, label %.3.endif.endif.endif.endi...if.16
    i64 55, label %.3.endif.endif.endif.endi...endif.16.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.676378*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9.repack, align 8
  %.9.repack223 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack223 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.67, i64 0, i64 0), i8** %0, align 8
  %.9.repack224 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack224 to i64*
  store i64 3, i64* %1, align 8
  %.9.repack225 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack225 to i64*
  store i64 3, i64* %2, align 8
  ret %string.676378* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.16.repack, align 8
  %.16.repack220 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack220 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.68, i64 0, i64 0), i8** %3, align 8
  %.16.repack221 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack221 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack222 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack222 to i64*
  store i64 7, i64* %5, align 8
  ret %string.676378* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.676378*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.23.repack, align 8
  %.23.repack217 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack217 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.69, i64 0, i64 0), i8** %6, align 8
  %.23.repack218 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack218 to i64*
  store i64 5, i64* %7, align 8
  %.23.repack219 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack219 to i64*
  store i64 5, i64* %8, align 8
  ret %string.676378* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack214 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack214 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.70, i64 0, i64 0), i8** %9, align 8
  %.30.repack215 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack215 to i64*
  store i64 4, i64* %10, align 8
  %.30.repack216 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack216 to i64*
  store i64 4, i64* %11, align 8
  ret %string.676378* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.676378*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.37.repack, align 8
  %.37.repack211 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack211 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.71, i64 0, i64 0), i8** %12, align 8
  %.37.repack212 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack212 to i64*
  store i64 9, i64* %13, align 8
  %.37.repack213 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack213 to i64*
  store i64 9, i64* %14, align 8
  ret %string.676378* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.676378*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.44.repack, align 8
  %.44.repack208 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack208 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.72, i64 0, i64 0), i8** %15, align 8
  %.44.repack209 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack209 to i64*
  store i64 5, i64* %16, align 8
  %.44.repack210 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack210 to i64*
  store i64 5, i64* %17, align 8
  ret %string.676378* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.51.repack, align 8
  %.51.repack205 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack205 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.73, i64 0, i64 0), i8** %18, align 8
  %.51.repack206 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack206 to i64*
  store i64 11, i64* %19, align 8
  %.51.repack207 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack207 to i64*
  store i64 11, i64* %20, align 8
  ret %string.676378* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.58.repack, align 8
  %.58.repack202 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack202 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.74, i64 0, i64 0), i8** %21, align 8
  %.58.repack203 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack203 to i64*
  store i64 4, i64* %22, align 8
  %.58.repack204 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack204 to i64*
  store i64 4, i64* %23, align 8
  ret %string.676378* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.676378*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.65.repack, align 8
  %.65.repack199 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack199 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.75, i64 0, i64 0), i8** %24, align 8
  %.65.repack200 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack200 to i64*
  store i64 3, i64* %25, align 8
  %.65.repack201 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack201 to i64*
  store i64 3, i64* %26, align 8
  ret %string.676378* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.676378*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.72.repack, align 8
  %.72.repack196 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack196 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.76, i64 0, i64 0), i8** %27, align 8
  %.72.repack197 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack197 to i64*
  store i64 4, i64* %28, align 8
  %.72.repack198 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack198 to i64*
  store i64 4, i64* %29, align 8
  ret %string.676378* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.676378*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.79.repack, align 8
  %.79.repack193 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack193 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.77, i64 0, i64 0), i8** %30, align 8
  %.79.repack194 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack194 to i64*
  store i64 4, i64* %31, align 8
  %.79.repack195 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack195 to i64*
  store i64 4, i64* %32, align 8
  ret %string.676378* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.676378*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.86.repack, align 8
  %.86.repack190 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack190 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.78, i64 0, i64 0), i8** %33, align 8
  %.86.repack191 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack191 to i64*
  store i64 3, i64* %34, align 8
  %.86.repack192 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack192 to i64*
  store i64 3, i64* %35, align 8
  ret %string.676378* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.676378*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.93.repack, align 8
  %.93.repack187 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack187 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.79, i64 0, i64 0), i8** %36, align 8
  %.93.repack188 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack188 to i64*
  store i64 6, i64* %37, align 8
  %.93.repack189 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack189 to i64*
  store i64 6, i64* %38, align 8
  ret %string.676378* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.676378*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.100.repack, align 8
  %.100.repack184 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack184 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.80, i64 0, i64 0), i8** %39, align 8
  %.100.repack185 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack185 to i64*
  store i64 6, i64* %40, align 8
  %.100.repack186 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack186 to i64*
  store i64 6, i64* %41, align 8
  ret %string.676378* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.676378*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.107.repack, align 8
  %.107.repack181 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack181 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.81, i64 0, i64 0), i8** %42, align 8
  %.107.repack182 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack182 to i64*
  store i64 8, i64* %43, align 8
  %.107.repack183 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack183 to i64*
  store i64 8, i64* %44, align 8
  ret %string.676378* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.676378*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.114.repack, align 8
  %.114.repack178 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack178 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.82, i64 0, i64 0), i8** %45, align 8
  %.114.repack179 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack179 to i64*
  store i64 8, i64* %46, align 8
  %.114.repack180 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack180 to i64*
  store i64 8, i64* %47, align 8
  ret %string.676378* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.676378*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.121.repack, align 8
  %.121.repack175 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack175 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.83, i64 0, i64 0), i8** %48, align 8
  %.121.repack176 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack176 to i64*
  store i64 3, i64* %49, align 8
  %.121.repack177 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack177 to i64*
  store i64 3, i64* %50, align 8
  ret %string.676378* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.128.repack, align 8
  %.128.repack172 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack172 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.84, i64 0, i64 0), i8** %51, align 8
  %.128.repack173 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack173 to i64*
  store i64 5, i64* %52, align 8
  %.128.repack174 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack174 to i64*
  store i64 5, i64* %53, align 8
  ret %string.676378* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.676378*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.135.repack, align 8
  %.135.repack169 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack169 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.85, i64 0, i64 0), i8** %54, align 8
  %.135.repack170 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack170 to i64*
  store i64 2, i64* %55, align 8
  %.135.repack171 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack171 to i64*
  store i64 2, i64* %56, align 8
  ret %string.676378* %.135

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3
  %.141 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.676378*
  %.142.repack = bitcast i8* %.141 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.142.repack, align 8
  %.142.repack166 = getelementptr inbounds i8, i8* %.141, i64 8
  %57 = bitcast i8* %.142.repack166 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.86, i64 0, i64 0), i8** %57, align 8
  %.142.repack167 = getelementptr inbounds i8, i8* %.141, i64 16
  %58 = bitcast i8* %.142.repack167 to i64*
  store i64 3, i64* %58, align 8
  %.142.repack168 = getelementptr inbounds i8, i8* %.141, i64 24
  %59 = bitcast i8* %.142.repack168 to i64*
  store i64 3, i64* %59, align 8
  ret %string.676378* %.142

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.676378*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.149.repack, align 8
  %.149.repack163 = getelementptr inbounds i8, i8* %.148, i64 8
  %60 = bitcast i8* %.149.repack163 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.87, i64 0, i64 0), i8** %60, align 8
  %.149.repack164 = getelementptr inbounds i8, i8* %.148, i64 16
  %61 = bitcast i8* %.149.repack164 to i64*
  store i64 4, i64* %61, align 8
  %.149.repack165 = getelementptr inbounds i8, i8* %.148, i64 24
  %62 = bitcast i8* %.149.repack165 to i64*
  store i64 4, i64* %62, align 8
  ret %string.676378* %.149

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3
  %.155 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.676378*
  %.156.repack = bitcast i8* %.155 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.156.repack, align 8
  %.156.repack160 = getelementptr inbounds i8, i8* %.155, i64 8
  %63 = bitcast i8* %.156.repack160 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.88, i64 0, i64 0), i8** %63, align 8
  %.156.repack161 = getelementptr inbounds i8, i8* %.155, i64 16
  %64 = bitcast i8* %.156.repack161 to i64*
  store i64 3, i64* %64, align 8
  %.156.repack162 = getelementptr inbounds i8, i8* %.155, i64 24
  %65 = bitcast i8* %.156.repack162 to i64*
  store i64 3, i64* %65, align 8
  ret %string.676378* %.156

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3
  %.162 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.676378*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.163.repack, align 8
  %.163.repack157 = getelementptr inbounds i8, i8* %.162, i64 8
  %66 = bitcast i8* %.163.repack157 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.89, i64 0, i64 0), i8** %66, align 8
  %.163.repack158 = getelementptr inbounds i8, i8* %.162, i64 16
  %67 = bitcast i8* %.163.repack158 to i64*
  store i64 4, i64* %67, align 8
  %.163.repack159 = getelementptr inbounds i8, i8* %.162, i64 24
  %68 = bitcast i8* %.163.repack159 to i64*
  store i64 4, i64* %68, align 8
  ret %string.676378* %.163

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.676378*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.170.repack, align 8
  %.170.repack154 = getelementptr inbounds i8, i8* %.169, i64 8
  %69 = bitcast i8* %.170.repack154 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.90, i64 0, i64 0), i8** %69, align 8
  %.170.repack155 = getelementptr inbounds i8, i8* %.169, i64 16
  %70 = bitcast i8* %.170.repack155 to i64*
  store i64 3, i64* %70, align 8
  %.170.repack156 = getelementptr inbounds i8, i8* %.169, i64 24
  %71 = bitcast i8* %.170.repack156 to i64*
  store i64 3, i64* %71, align 8
  ret %string.676378* %.170

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3
  %.176 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.177 = bitcast i8* %.176 to %string.676378*
  %.177.repack = bitcast i8* %.176 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.177.repack, align 8
  %.177.repack151 = getelementptr inbounds i8, i8* %.176, i64 8
  %72 = bitcast i8* %.177.repack151 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.91, i64 0, i64 0), i8** %72, align 8
  %.177.repack152 = getelementptr inbounds i8, i8* %.176, i64 16
  %73 = bitcast i8* %.177.repack152 to i64*
  store i64 2, i64* %73, align 8
  %.177.repack153 = getelementptr inbounds i8, i8* %.176, i64 24
  %74 = bitcast i8* %.177.repack153 to i64*
  store i64 2, i64* %74, align 8
  ret %string.676378* %.177

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3
  %.183 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.676378*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.184.repack, align 8
  %.184.repack148 = getelementptr inbounds i8, i8* %.183, i64 8
  %75 = bitcast i8* %.184.repack148 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.92, i64 0, i64 0), i8** %75, align 8
  %.184.repack149 = getelementptr inbounds i8, i8* %.183, i64 16
  %76 = bitcast i8* %.184.repack149 to i64*
  store i64 3, i64* %76, align 8
  %.184.repack150 = getelementptr inbounds i8, i8* %.183, i64 24
  %77 = bitcast i8* %.184.repack150 to i64*
  store i64 3, i64* %77, align 8
  ret %string.676378* %.184

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3
  %.190 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.676378*
  %.191.repack = bitcast i8* %.190 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.191.repack, align 8
  %.191.repack145 = getelementptr inbounds i8, i8* %.190, i64 8
  %78 = bitcast i8* %.191.repack145 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.93, i64 0, i64 0), i8** %78, align 8
  %.191.repack146 = getelementptr inbounds i8, i8* %.190, i64 16
  %79 = bitcast i8* %.191.repack146 to i64*
  store i64 3, i64* %79, align 8
  %.191.repack147 = getelementptr inbounds i8, i8* %.190, i64 24
  %80 = bitcast i8* %.191.repack147 to i64*
  store i64 3, i64* %80, align 8
  ret %string.676378* %.191

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3
  %.197 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.198 = bitcast i8* %.197 to %string.676378*
  %.198.repack = bitcast i8* %.197 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.198.repack, align 8
  %.198.repack142 = getelementptr inbounds i8, i8* %.197, i64 8
  %81 = bitcast i8* %.198.repack142 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.94, i64 0, i64 0), i8** %81, align 8
  %.198.repack143 = getelementptr inbounds i8, i8* %.197, i64 16
  %82 = bitcast i8* %.198.repack143 to i64*
  store i64 2, i64* %82, align 8
  %.198.repack144 = getelementptr inbounds i8, i8* %.197, i64 24
  %83 = bitcast i8* %.198.repack144 to i64*
  store i64 2, i64* %83, align 8
  ret %string.676378* %.198

.3.endif.endif.endif.endi...endif.4.endif.endif.if: ; preds = %.3
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.676378*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.205.repack, align 8
  %.205.repack139 = getelementptr inbounds i8, i8* %.204, i64 8
  %84 = bitcast i8* %.205.repack139 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.95, i64 0, i64 0), i8** %84, align 8
  %.205.repack140 = getelementptr inbounds i8, i8* %.204, i64 16
  %85 = bitcast i8* %.205.repack140 to i64*
  store i64 2, i64* %85, align 8
  %.205.repack141 = getelementptr inbounds i8, i8* %.204, i64 24
  %86 = bitcast i8* %.205.repack141 to i64*
  store i64 2, i64* %86, align 8
  ret %string.676378* %.205

.3.endif.endif.endif.endi...if.5:                 ; preds = %.3
  %.211 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.212 = bitcast i8* %.211 to %string.676378*
  %.212.repack = bitcast i8* %.211 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.212.repack, align 8
  %.212.repack136 = getelementptr inbounds i8, i8* %.211, i64 8
  %87 = bitcast i8* %.212.repack136 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.96, i64 0, i64 0), i8** %87, align 8
  %.212.repack137 = getelementptr inbounds i8, i8* %.211, i64 16
  %88 = bitcast i8* %.212.repack137 to i64*
  store i64 3, i64* %88, align 8
  %.212.repack138 = getelementptr inbounds i8, i8* %.211, i64 24
  %89 = bitcast i8* %.212.repack138 to i64*
  store i64 3, i64* %89, align 8
  ret %string.676378* %.212

.3.endif.endif.endif.endi...endif.5.if:           ; preds = %.3
  %.218 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.219 = bitcast i8* %.218 to %string.676378*
  %.219.repack = bitcast i8* %.218 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.219.repack, align 8
  %.219.repack133 = getelementptr inbounds i8, i8* %.218, i64 8
  %90 = bitcast i8* %.219.repack133 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.97, i64 0, i64 0), i8** %90, align 8
  %.219.repack134 = getelementptr inbounds i8, i8* %.218, i64 16
  %91 = bitcast i8* %.219.repack134 to i64*
  store i64 3, i64* %91, align 8
  %.219.repack135 = getelementptr inbounds i8, i8* %.218, i64 24
  %92 = bitcast i8* %.219.repack135 to i64*
  store i64 3, i64* %92, align 8
  ret %string.676378* %.219

.3.endif.endif.endif.endi...endif.5.endif.if:     ; preds = %.3
  %.225 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.226 = bitcast i8* %.225 to %string.676378*
  %.226.repack = bitcast i8* %.225 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.226.repack, align 8
  %.226.repack130 = getelementptr inbounds i8, i8* %.225, i64 8
  %93 = bitcast i8* %.226.repack130 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.98, i64 0, i64 0), i8** %93, align 8
  %.226.repack131 = getelementptr inbounds i8, i8* %.225, i64 16
  %94 = bitcast i8* %.226.repack131 to i64*
  store i64 5, i64* %94, align 8
  %.226.repack132 = getelementptr inbounds i8, i8* %.225, i64 24
  %95 = bitcast i8* %.226.repack132 to i64*
  store i64 5, i64* %95, align 8
  ret %string.676378* %.226

.3.endif.endif.endif.endi...endif.5.endif.endif.if: ; preds = %.3
  %.232 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.233 = bitcast i8* %.232 to %string.676378*
  %.233.repack = bitcast i8* %.232 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.233.repack, align 8
  %.233.repack127 = getelementptr inbounds i8, i8* %.232, i64 8
  %96 = bitcast i8* %.233.repack127 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.99, i64 0, i64 0), i8** %96, align 8
  %.233.repack128 = getelementptr inbounds i8, i8* %.232, i64 16
  %97 = bitcast i8* %.233.repack128 to i64*
  store i64 3, i64* %97, align 8
  %.233.repack129 = getelementptr inbounds i8, i8* %.232, i64 24
  %98 = bitcast i8* %.233.repack129 to i64*
  store i64 3, i64* %98, align 8
  ret %string.676378* %.233

.3.endif.endif.endif.endi...if.6:                 ; preds = %.3
  %.239 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.240 = bitcast i8* %.239 to %string.676378*
  %.240.repack = bitcast i8* %.239 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.240.repack, align 8
  %.240.repack124 = getelementptr inbounds i8, i8* %.239, i64 8
  %99 = bitcast i8* %.240.repack124 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.100, i64 0, i64 0), i8** %99, align 8
  %.240.repack125 = getelementptr inbounds i8, i8* %.239, i64 16
  %100 = bitcast i8* %.240.repack125 to i64*
  store i64 3, i64* %100, align 8
  %.240.repack126 = getelementptr inbounds i8, i8* %.239, i64 24
  %101 = bitcast i8* %.240.repack126 to i64*
  store i64 3, i64* %101, align 8
  ret %string.676378* %.240

.3.endif.endif.endif.endi...endif.6.if:           ; preds = %.3
  %.246 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.247 = bitcast i8* %.246 to %string.676378*
  %.247.repack = bitcast i8* %.246 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.247.repack, align 8
  %.247.repack121 = getelementptr inbounds i8, i8* %.246, i64 8
  %102 = bitcast i8* %.247.repack121 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.101, i64 0, i64 0), i8** %102, align 8
  %.247.repack122 = getelementptr inbounds i8, i8* %.246, i64 16
  %103 = bitcast i8* %.247.repack122 to i64*
  store i64 2, i64* %103, align 8
  %.247.repack123 = getelementptr inbounds i8, i8* %.246, i64 24
  %104 = bitcast i8* %.247.repack123 to i64*
  store i64 2, i64* %104, align 8
  ret %string.676378* %.247

.3.endif.endif.endif.endi...endif.6.endif.if:     ; preds = %.3
  %.253 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.676378*
  %.254.repack = bitcast i8* %.253 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.254.repack, align 8
  %.254.repack118 = getelementptr inbounds i8, i8* %.253, i64 8
  %105 = bitcast i8* %.254.repack118 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.102, i64 0, i64 0), i8** %105, align 8
  %.254.repack119 = getelementptr inbounds i8, i8* %.253, i64 16
  %106 = bitcast i8* %.254.repack119 to i64*
  store i64 2, i64* %106, align 8
  %.254.repack120 = getelementptr inbounds i8, i8* %.253, i64 24
  %107 = bitcast i8* %.254.repack120 to i64*
  store i64 2, i64* %107, align 8
  ret %string.676378* %.254

.3.endif.endif.endif.endi...endif.6.endif.endif.if: ; preds = %.3
  %.260 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.261 = bitcast i8* %.260 to %string.676378*
  %.261.repack = bitcast i8* %.260 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.261.repack, align 8
  %.261.repack115 = getelementptr inbounds i8, i8* %.260, i64 8
  %108 = bitcast i8* %.261.repack115 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.103, i64 0, i64 0), i8** %108, align 8
  %.261.repack116 = getelementptr inbounds i8, i8* %.260, i64 16
  %109 = bitcast i8* %.261.repack116 to i64*
  store i64 3, i64* %109, align 8
  %.261.repack117 = getelementptr inbounds i8, i8* %.260, i64 24
  %110 = bitcast i8* %.261.repack117 to i64*
  store i64 3, i64* %110, align 8
  ret %string.676378* %.261

.3.endif.endif.endif.endi...if.7:                 ; preds = %.3
  %.267 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.268 = bitcast i8* %.267 to %string.676378*
  %.268.repack = bitcast i8* %.267 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.268.repack, align 8
  %.268.repack112 = getelementptr inbounds i8, i8* %.267, i64 8
  %111 = bitcast i8* %.268.repack112 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.104, i64 0, i64 0), i8** %111, align 8
  %.268.repack113 = getelementptr inbounds i8, i8* %.267, i64 16
  %112 = bitcast i8* %.268.repack113 to i64*
  store i64 7, i64* %112, align 8
  %.268.repack114 = getelementptr inbounds i8, i8* %.267, i64 24
  %113 = bitcast i8* %.268.repack114 to i64*
  store i64 7, i64* %113, align 8
  ret %string.676378* %.268

.3.endif.endif.endif.endi...endif.7.if:           ; preds = %.3
  %.274 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.275 = bitcast i8* %.274 to %string.676378*
  %.275.repack = bitcast i8* %.274 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.275.repack, align 8
  %.275.repack109 = getelementptr inbounds i8, i8* %.274, i64 8
  %114 = bitcast i8* %.275.repack109 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.105, i64 0, i64 0), i8** %114, align 8
  %.275.repack110 = getelementptr inbounds i8, i8* %.274, i64 16
  %115 = bitcast i8* %.275.repack110 to i64*
  store i64 11, i64* %115, align 8
  %.275.repack111 = getelementptr inbounds i8, i8* %.274, i64 24
  %116 = bitcast i8* %.275.repack111 to i64*
  store i64 11, i64* %116, align 8
  ret %string.676378* %.275

.3.endif.endif.endif.endi...endif.7.endif.if:     ; preds = %.3
  %.281 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.676378*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.282.repack, align 8
  %.282.repack106 = getelementptr inbounds i8, i8* %.281, i64 8
  %117 = bitcast i8* %.282.repack106 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.106, i64 0, i64 0), i8** %117, align 8
  %.282.repack107 = getelementptr inbounds i8, i8* %.281, i64 16
  %118 = bitcast i8* %.282.repack107 to i64*
  store i64 9, i64* %118, align 8
  %.282.repack108 = getelementptr inbounds i8, i8* %.281, i64 24
  %119 = bitcast i8* %.282.repack108 to i64*
  store i64 9, i64* %119, align 8
  ret %string.676378* %.282

.3.endif.endif.endif.endi...endif.7.endif.endif.if: ; preds = %.3
  %.288 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.289 = bitcast i8* %.288 to %string.676378*
  %.289.repack = bitcast i8* %.288 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.289.repack, align 8
  %.289.repack103 = getelementptr inbounds i8, i8* %.288, i64 8
  %120 = bitcast i8* %.289.repack103 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.107, i64 0, i64 0), i8** %120, align 8
  %.289.repack104 = getelementptr inbounds i8, i8* %.288, i64 16
  %121 = bitcast i8* %.289.repack104 to i64*
  store i64 6, i64* %121, align 8
  %.289.repack105 = getelementptr inbounds i8, i8* %.288, i64 24
  %122 = bitcast i8* %.289.repack105 to i64*
  store i64 6, i64* %122, align 8
  ret %string.676378* %.289

.3.endif.endif.endif.endi...if.8:                 ; preds = %.3
  %.295 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.296 = bitcast i8* %.295 to %string.676378*
  %.296.repack = bitcast i8* %.295 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.296.repack, align 8
  %.296.repack100 = getelementptr inbounds i8, i8* %.295, i64 8
  %123 = bitcast i8* %.296.repack100 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.108, i64 0, i64 0), i8** %123, align 8
  %.296.repack101 = getelementptr inbounds i8, i8* %.295, i64 16
  %124 = bitcast i8* %.296.repack101 to i64*
  store i64 5, i64* %124, align 8
  %.296.repack102 = getelementptr inbounds i8, i8* %.295, i64 24
  %125 = bitcast i8* %.296.repack102 to i64*
  store i64 5, i64* %125, align 8
  ret %string.676378* %.296

.3.endif.endif.endif.endi...endif.8.if:           ; preds = %.3
  %.302 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.303 = bitcast i8* %.302 to %string.676378*
  %.303.repack = bitcast i8* %.302 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.303.repack, align 8
  %.303.repack97 = getelementptr inbounds i8, i8* %.302, i64 8
  %126 = bitcast i8* %.303.repack97 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.109, i64 0, i64 0), i8** %126, align 8
  %.303.repack98 = getelementptr inbounds i8, i8* %.302, i64 16
  %127 = bitcast i8* %.303.repack98 to i64*
  store i64 6, i64* %127, align 8
  %.303.repack99 = getelementptr inbounds i8, i8* %.302, i64 24
  %128 = bitcast i8* %.303.repack99 to i64*
  store i64 6, i64* %128, align 8
  ret %string.676378* %.303

.3.endif.endif.endif.endi...endif.8.endif.if:     ; preds = %.3
  %.309 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.310 = bitcast i8* %.309 to %string.676378*
  %.310.repack = bitcast i8* %.309 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.310.repack, align 8
  %.310.repack94 = getelementptr inbounds i8, i8* %.309, i64 8
  %129 = bitcast i8* %.310.repack94 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.110, i64 0, i64 0), i8** %129, align 8
  %.310.repack95 = getelementptr inbounds i8, i8* %.309, i64 16
  %130 = bitcast i8* %.310.repack95 to i64*
  store i64 8, i64* %130, align 8
  %.310.repack96 = getelementptr inbounds i8, i8* %.309, i64 24
  %131 = bitcast i8* %.310.repack96 to i64*
  store i64 8, i64* %131, align 8
  ret %string.676378* %.310

.3.endif.endif.endif.endi...endif.8.endif.endif.if: ; preds = %.3
  %.316 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.317 = bitcast i8* %.316 to %string.676378*
  %.317.repack = bitcast i8* %.316 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.317.repack, align 8
  %.317.repack91 = getelementptr inbounds i8, i8* %.316, i64 8
  %132 = bitcast i8* %.317.repack91 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.111, i64 0, i64 0), i8** %132, align 8
  %.317.repack92 = getelementptr inbounds i8, i8* %.316, i64 16
  %133 = bitcast i8* %.317.repack92 to i64*
  store i64 5, i64* %133, align 8
  %.317.repack93 = getelementptr inbounds i8, i8* %.316, i64 24
  %134 = bitcast i8* %.317.repack93 to i64*
  store i64 5, i64* %134, align 8
  ret %string.676378* %.317

.3.endif.endif.endif.endi...if.9:                 ; preds = %.3
  %.323 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.324 = bitcast i8* %.323 to %string.676378*
  %.324.repack = bitcast i8* %.323 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.324.repack, align 8
  %.324.repack88 = getelementptr inbounds i8, i8* %.323, i64 8
  %135 = bitcast i8* %.324.repack88 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.112, i64 0, i64 0), i8** %135, align 8
  %.324.repack89 = getelementptr inbounds i8, i8* %.323, i64 16
  %136 = bitcast i8* %.324.repack89 to i64*
  store i64 7, i64* %136, align 8
  %.324.repack90 = getelementptr inbounds i8, i8* %.323, i64 24
  %137 = bitcast i8* %.324.repack90 to i64*
  store i64 7, i64* %137, align 8
  ret %string.676378* %.324

.3.endif.endif.endif.endi...endif.9.if:           ; preds = %.3
  %.330 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.331 = bitcast i8* %.330 to %string.676378*
  %.331.repack = bitcast i8* %.330 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.331.repack, align 8
  %.331.repack85 = getelementptr inbounds i8, i8* %.330, i64 8
  %138 = bitcast i8* %.331.repack85 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.113, i64 0, i64 0), i8** %138, align 8
  %.331.repack86 = getelementptr inbounds i8, i8* %.330, i64 16
  %139 = bitcast i8* %.331.repack86 to i64*
  store i64 7, i64* %139, align 8
  %.331.repack87 = getelementptr inbounds i8, i8* %.330, i64 24
  %140 = bitcast i8* %.331.repack87 to i64*
  store i64 7, i64* %140, align 8
  ret %string.676378* %.331

.3.endif.endif.endif.endi...endif.9.endif.if:     ; preds = %.3
  %.337 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.338 = bitcast i8* %.337 to %string.676378*
  %.338.repack = bitcast i8* %.337 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.338.repack, align 8
  %.338.repack82 = getelementptr inbounds i8, i8* %.337, i64 8
  %141 = bitcast i8* %.338.repack82 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.114, i64 0, i64 0), i8** %141, align 8
  %.338.repack83 = getelementptr inbounds i8, i8* %.337, i64 16
  %142 = bitcast i8* %.338.repack83 to i64*
  store i64 5, i64* %142, align 8
  %.338.repack84 = getelementptr inbounds i8, i8* %.337, i64 24
  %143 = bitcast i8* %.338.repack84 to i64*
  store i64 5, i64* %143, align 8
  ret %string.676378* %.338

.3.endif.endif.endif.endi...endif.9.endif.endif.if: ; preds = %.3
  %.344 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.345 = bitcast i8* %.344 to %string.676378*
  %.345.repack = bitcast i8* %.344 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.345.repack, align 8
  %.345.repack79 = getelementptr inbounds i8, i8* %.344, i64 8
  %144 = bitcast i8* %.345.repack79 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.115, i64 0, i64 0), i8** %144, align 8
  %.345.repack80 = getelementptr inbounds i8, i8* %.344, i64 16
  %145 = bitcast i8* %.345.repack80 to i64*
  store i64 5, i64* %145, align 8
  %.345.repack81 = getelementptr inbounds i8, i8* %.344, i64 24
  %146 = bitcast i8* %.345.repack81 to i64*
  store i64 5, i64* %146, align 8
  ret %string.676378* %.345

.3.endif.endif.endif.endi...if.10:                ; preds = %.3
  %.351 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.352 = bitcast i8* %.351 to %string.676378*
  %.352.repack = bitcast i8* %.351 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.352.repack, align 8
  %.352.repack76 = getelementptr inbounds i8, i8* %.351, i64 8
  %147 = bitcast i8* %.352.repack76 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.116, i64 0, i64 0), i8** %147, align 8
  %.352.repack77 = getelementptr inbounds i8, i8* %.351, i64 16
  %148 = bitcast i8* %.352.repack77 to i64*
  store i64 6, i64* %148, align 8
  %.352.repack78 = getelementptr inbounds i8, i8* %.351, i64 24
  %149 = bitcast i8* %.352.repack78 to i64*
  store i64 6, i64* %149, align 8
  ret %string.676378* %.352

.3.endif.endif.endif.endi...endif.10.if:          ; preds = %.3
  %.358 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.359 = bitcast i8* %.358 to %string.676378*
  %.359.repack = bitcast i8* %.358 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.359.repack, align 8
  %.359.repack73 = getelementptr inbounds i8, i8* %.358, i64 8
  %150 = bitcast i8* %.359.repack73 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.117, i64 0, i64 0), i8** %150, align 8
  %.359.repack74 = getelementptr inbounds i8, i8* %.358, i64 16
  %151 = bitcast i8* %.359.repack74 to i64*
  store i64 6, i64* %151, align 8
  %.359.repack75 = getelementptr inbounds i8, i8* %.358, i64 24
  %152 = bitcast i8* %.359.repack75 to i64*
  store i64 6, i64* %152, align 8
  ret %string.676378* %.359

.3.endif.endif.endif.endi...endif.10.endif.if:    ; preds = %.3
  %.365 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.366 = bitcast i8* %.365 to %string.676378*
  %.366.repack = bitcast i8* %.365 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.366.repack, align 8
  %.366.repack70 = getelementptr inbounds i8, i8* %.365, i64 8
  %153 = bitcast i8* %.366.repack70 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.118, i64 0, i64 0), i8** %153, align 8
  %.366.repack71 = getelementptr inbounds i8, i8* %.365, i64 16
  %154 = bitcast i8* %.366.repack71 to i64*
  store i64 6, i64* %154, align 8
  %.366.repack72 = getelementptr inbounds i8, i8* %.365, i64 24
  %155 = bitcast i8* %.366.repack72 to i64*
  store i64 6, i64* %155, align 8
  ret %string.676378* %.366

.3.endif.endif.endif.endi...endif.10.endif.endif.if: ; preds = %.3
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.373 = bitcast i8* %.372 to %string.676378*
  %.373.repack = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.373.repack, align 8
  %.373.repack67 = getelementptr inbounds i8, i8* %.372, i64 8
  %156 = bitcast i8* %.373.repack67 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.119, i64 0, i64 0), i8** %156, align 8
  %.373.repack68 = getelementptr inbounds i8, i8* %.372, i64 16
  %157 = bitcast i8* %.373.repack68 to i64*
  store i64 7, i64* %157, align 8
  %.373.repack69 = getelementptr inbounds i8, i8* %.372, i64 24
  %158 = bitcast i8* %.373.repack69 to i64*
  store i64 7, i64* %158, align 8
  ret %string.676378* %.373

.3.endif.endif.endif.endi...if.11:                ; preds = %.3
  %.379 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.380 = bitcast i8* %.379 to %string.676378*
  %.380.repack = bitcast i8* %.379 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.380.repack, align 8
  %.380.repack64 = getelementptr inbounds i8, i8* %.379, i64 8
  %159 = bitcast i8* %.380.repack64 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.120, i64 0, i64 0), i8** %159, align 8
  %.380.repack65 = getelementptr inbounds i8, i8* %.379, i64 16
  %160 = bitcast i8* %.380.repack65 to i64*
  store i64 6, i64* %160, align 8
  %.380.repack66 = getelementptr inbounds i8, i8* %.379, i64 24
  %161 = bitcast i8* %.380.repack66 to i64*
  store i64 6, i64* %161, align 8
  ret %string.676378* %.380

.3.endif.endif.endif.endi...endif.11.if:          ; preds = %.3
  %.386 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.387 = bitcast i8* %.386 to %string.676378*
  %.387.repack = bitcast i8* %.386 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.387.repack, align 8
  %.387.repack61 = getelementptr inbounds i8, i8* %.386, i64 8
  %162 = bitcast i8* %.387.repack61 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.121, i64 0, i64 0), i8** %162, align 8
  %.387.repack62 = getelementptr inbounds i8, i8* %.386, i64 16
  %163 = bitcast i8* %.387.repack62 to i64*
  store i64 6, i64* %163, align 8
  %.387.repack63 = getelementptr inbounds i8, i8* %.386, i64 24
  %164 = bitcast i8* %.387.repack63 to i64*
  store i64 6, i64* %164, align 8
  ret %string.676378* %.387

.3.endif.endif.endif.endi...endif.11.endif.if:    ; preds = %.3
  %.393 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.394 = bitcast i8* %.393 to %string.676378*
  %.394.repack = bitcast i8* %.393 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394.repack, align 8
  %.394.repack58 = getelementptr inbounds i8, i8* %.393, i64 8
  %165 = bitcast i8* %.394.repack58 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.122, i64 0, i64 0), i8** %165, align 8
  %.394.repack59 = getelementptr inbounds i8, i8* %.393, i64 16
  %166 = bitcast i8* %.394.repack59 to i64*
  store i64 6, i64* %166, align 8
  %.394.repack60 = getelementptr inbounds i8, i8* %.393, i64 24
  %167 = bitcast i8* %.394.repack60 to i64*
  store i64 6, i64* %167, align 8
  ret %string.676378* %.394

.3.endif.endif.endif.endi...endif.11.endif.endif.if: ; preds = %.3
  %.400 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.401 = bitcast i8* %.400 to %string.676378*
  %.401.repack = bitcast i8* %.400 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.401.repack, align 8
  %.401.repack55 = getelementptr inbounds i8, i8* %.400, i64 8
  %168 = bitcast i8* %.401.repack55 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.123, i64 0, i64 0), i8** %168, align 8
  %.401.repack56 = getelementptr inbounds i8, i8* %.400, i64 16
  %169 = bitcast i8* %.401.repack56 to i64*
  store i64 6, i64* %169, align 8
  %.401.repack57 = getelementptr inbounds i8, i8* %.400, i64 24
  %170 = bitcast i8* %.401.repack57 to i64*
  store i64 6, i64* %170, align 8
  ret %string.676378* %.401

.3.endif.endif.endif.endi...if.12:                ; preds = %.3
  %.407 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.408 = bitcast i8* %.407 to %string.676378*
  %.408.repack = bitcast i8* %.407 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.408.repack, align 8
  %.408.repack52 = getelementptr inbounds i8, i8* %.407, i64 8
  %171 = bitcast i8* %.408.repack52 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.124, i64 0, i64 0), i8** %171, align 8
  %.408.repack53 = getelementptr inbounds i8, i8* %.407, i64 16
  %172 = bitcast i8* %.408.repack53 to i64*
  store i64 8, i64* %172, align 8
  %.408.repack54 = getelementptr inbounds i8, i8* %.407, i64 24
  %173 = bitcast i8* %.408.repack54 to i64*
  store i64 8, i64* %173, align 8
  ret %string.676378* %.408

.3.endif.endif.endif.endi...endif.12.if:          ; preds = %.3
  %.414 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.415 = bitcast i8* %.414 to %string.676378*
  %.415.repack = bitcast i8* %.414 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.415.repack, align 8
  %.415.repack49 = getelementptr inbounds i8, i8* %.414, i64 8
  %174 = bitcast i8* %.415.repack49 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.125, i64 0, i64 0), i8** %174, align 8
  %.415.repack50 = getelementptr inbounds i8, i8* %.414, i64 16
  %175 = bitcast i8* %.415.repack50 to i64*
  store i64 7, i64* %175, align 8
  %.415.repack51 = getelementptr inbounds i8, i8* %.414, i64 24
  %176 = bitcast i8* %.415.repack51 to i64*
  store i64 7, i64* %176, align 8
  ret %string.676378* %.415

.3.endif.endif.endif.endi...endif.12.endif.if:    ; preds = %.3
  %.421 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.422 = bitcast i8* %.421 to %string.676378*
  %.422.repack = bitcast i8* %.421 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.422.repack, align 8
  %.422.repack46 = getelementptr inbounds i8, i8* %.421, i64 8
  %177 = bitcast i8* %.422.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.126, i64 0, i64 0), i8** %177, align 8
  %.422.repack47 = getelementptr inbounds i8, i8* %.421, i64 16
  %178 = bitcast i8* %.422.repack47 to i64*
  store i64 6, i64* %178, align 8
  %.422.repack48 = getelementptr inbounds i8, i8* %.421, i64 24
  %179 = bitcast i8* %.422.repack48 to i64*
  store i64 6, i64* %179, align 8
  ret %string.676378* %.422

.3.endif.endif.endif.endi...endif.12.endif.endif.if: ; preds = %.3
  %.428 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.429 = bitcast i8* %.428 to %string.676378*
  %.429.repack = bitcast i8* %.428 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.429.repack, align 8
  %.429.repack43 = getelementptr inbounds i8, i8* %.428, i64 8
  %180 = bitcast i8* %.429.repack43 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.127, i64 0, i64 0), i8** %180, align 8
  %.429.repack44 = getelementptr inbounds i8, i8* %.428, i64 16
  %181 = bitcast i8* %.429.repack44 to i64*
  store i64 8, i64* %181, align 8
  %.429.repack45 = getelementptr inbounds i8, i8* %.428, i64 24
  %182 = bitcast i8* %.429.repack45 to i64*
  store i64 8, i64* %182, align 8
  ret %string.676378* %.429

.3.endif.endif.endif.endi...if.13:                ; preds = %.3
  %.435 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.436 = bitcast i8* %.435 to %string.676378*
  %.436.repack = bitcast i8* %.435 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.436.repack, align 8
  %.436.repack40 = getelementptr inbounds i8, i8* %.435, i64 8
  %183 = bitcast i8* %.436.repack40 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.128, i64 0, i64 0), i8** %183, align 8
  %.436.repack41 = getelementptr inbounds i8, i8* %.435, i64 16
  %184 = bitcast i8* %.436.repack41 to i64*
  store i64 6, i64* %184, align 8
  %.436.repack42 = getelementptr inbounds i8, i8* %.435, i64 24
  %185 = bitcast i8* %.436.repack42 to i64*
  store i64 6, i64* %185, align 8
  ret %string.676378* %.436

.3.endif.endif.endif.endi...endif.13.if:          ; preds = %.3
  %.442 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.443 = bitcast i8* %.442 to %string.676378*
  %.443.repack = bitcast i8* %.442 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.443.repack, align 8
  %.443.repack37 = getelementptr inbounds i8, i8* %.442, i64 8
  %186 = bitcast i8* %.443.repack37 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.129, i64 0, i64 0), i8** %186, align 8
  %.443.repack38 = getelementptr inbounds i8, i8* %.442, i64 16
  %187 = bitcast i8* %.443.repack38 to i64*
  store i64 8, i64* %187, align 8
  %.443.repack39 = getelementptr inbounds i8, i8* %.442, i64 24
  %188 = bitcast i8* %.443.repack39 to i64*
  store i64 8, i64* %188, align 8
  ret %string.676378* %.443

.3.endif.endif.endif.endi...endif.13.endif.if:    ; preds = %.3
  %.449 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.450 = bitcast i8* %.449 to %string.676378*
  %.450.repack = bitcast i8* %.449 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.450.repack, align 8
  %.450.repack34 = getelementptr inbounds i8, i8* %.449, i64 8
  %189 = bitcast i8* %.450.repack34 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.130, i64 0, i64 0), i8** %189, align 8
  %.450.repack35 = getelementptr inbounds i8, i8* %.449, i64 16
  %190 = bitcast i8* %.450.repack35 to i64*
  store i64 11, i64* %190, align 8
  %.450.repack36 = getelementptr inbounds i8, i8* %.449, i64 24
  %191 = bitcast i8* %.450.repack36 to i64*
  store i64 11, i64* %191, align 8
  ret %string.676378* %.450

.3.endif.endif.endif.endi...endif.13.endif.endif.if: ; preds = %.3
  %.456 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.457 = bitcast i8* %.456 to %string.676378*
  %.457.repack = bitcast i8* %.456 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.457.repack, align 8
  %.457.repack31 = getelementptr inbounds i8, i8* %.456, i64 8
  %192 = bitcast i8* %.457.repack31 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.131, i64 0, i64 0), i8** %192, align 8
  %.457.repack32 = getelementptr inbounds i8, i8* %.456, i64 16
  %193 = bitcast i8* %.457.repack32 to i64*
  store i64 9, i64* %193, align 8
  %.457.repack33 = getelementptr inbounds i8, i8* %.456, i64 24
  %194 = bitcast i8* %.457.repack33 to i64*
  store i64 9, i64* %194, align 8
  ret %string.676378* %.457

.3.endif.endif.endif.endi...if.14:                ; preds = %.3
  %.463 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.464 = bitcast i8* %.463 to %string.676378*
  %.464.repack = bitcast i8* %.463 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.464.repack, align 8
  %.464.repack28 = getelementptr inbounds i8, i8* %.463, i64 8
  %195 = bitcast i8* %.464.repack28 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.132, i64 0, i64 0), i8** %195, align 8
  %.464.repack29 = getelementptr inbounds i8, i8* %.463, i64 16
  %196 = bitcast i8* %.464.repack29 to i64*
  store i64 9, i64* %196, align 8
  %.464.repack30 = getelementptr inbounds i8, i8* %.463, i64 24
  %197 = bitcast i8* %.464.repack30 to i64*
  store i64 9, i64* %197, align 8
  ret %string.676378* %.464

.3.endif.endif.endif.endi...endif.14.if:          ; preds = %.3
  %.470 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.471 = bitcast i8* %.470 to %string.676378*
  %.471.repack = bitcast i8* %.470 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.471.repack, align 8
  %.471.repack25 = getelementptr inbounds i8, i8* %.470, i64 8
  %198 = bitcast i8* %.471.repack25 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.133, i64 0, i64 0), i8** %198, align 8
  %.471.repack26 = getelementptr inbounds i8, i8* %.470, i64 16
  %199 = bitcast i8* %.471.repack26 to i64*
  store i64 10, i64* %199, align 8
  %.471.repack27 = getelementptr inbounds i8, i8* %.470, i64 24
  %200 = bitcast i8* %.471.repack27 to i64*
  store i64 10, i64* %200, align 8
  ret %string.676378* %.471

.3.endif.endif.endif.endi...endif.14.endif.if:    ; preds = %.3
  %.477 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.478 = bitcast i8* %.477 to %string.676378*
  %.478.repack = bitcast i8* %.477 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.478.repack, align 8
  %.478.repack22 = getelementptr inbounds i8, i8* %.477, i64 8
  %201 = bitcast i8* %.478.repack22 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.134, i64 0, i64 0), i8** %201, align 8
  %.478.repack23 = getelementptr inbounds i8, i8* %.477, i64 16
  %202 = bitcast i8* %.478.repack23 to i64*
  store i64 9, i64* %202, align 8
  %.478.repack24 = getelementptr inbounds i8, i8* %.477, i64 24
  %203 = bitcast i8* %.478.repack24 to i64*
  store i64 9, i64* %203, align 8
  ret %string.676378* %.478

.3.endif.endif.endif.endi...endif.14.endif.endif.if: ; preds = %.3
  %.484 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.485 = bitcast i8* %.484 to %string.676378*
  %.485.repack = bitcast i8* %.484 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.485.repack, align 8
  %.485.repack19 = getelementptr inbounds i8, i8* %.484, i64 8
  %204 = bitcast i8* %.485.repack19 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.135, i64 0, i64 0), i8** %204, align 8
  %.485.repack20 = getelementptr inbounds i8, i8* %.484, i64 16
  %205 = bitcast i8* %.485.repack20 to i64*
  store i64 12, i64* %205, align 8
  %.485.repack21 = getelementptr inbounds i8, i8* %.484, i64 24
  %206 = bitcast i8* %.485.repack21 to i64*
  store i64 12, i64* %206, align 8
  ret %string.676378* %.485

.3.endif.endif.endif.endi...if.15:                ; preds = %.3
  %.491 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.492 = bitcast i8* %.491 to %string.676378*
  %.492.repack = bitcast i8* %.491 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.492.repack, align 8
  %.492.repack16 = getelementptr inbounds i8, i8* %.491, i64 8
  %207 = bitcast i8* %.492.repack16 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.136, i64 0, i64 0), i8** %207, align 8
  %.492.repack17 = getelementptr inbounds i8, i8* %.491, i64 16
  %208 = bitcast i8* %.492.repack17 to i64*
  store i64 5, i64* %208, align 8
  %.492.repack18 = getelementptr inbounds i8, i8* %.491, i64 24
  %209 = bitcast i8* %.492.repack18 to i64*
  store i64 5, i64* %209, align 8
  ret %string.676378* %.492

.3.endif.endif.endif.endi...endif.15.if:          ; preds = %.3
  %.498 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.499 = bitcast i8* %.498 to %string.676378*
  %.499.repack = bitcast i8* %.498 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.499.repack, align 8
  %.499.repack13 = getelementptr inbounds i8, i8* %.498, i64 8
  %210 = bitcast i8* %.499.repack13 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.137, i64 0, i64 0), i8** %210, align 8
  %.499.repack14 = getelementptr inbounds i8, i8* %.498, i64 16
  %211 = bitcast i8* %.499.repack14 to i64*
  store i64 8, i64* %211, align 8
  %.499.repack15 = getelementptr inbounds i8, i8* %.498, i64 24
  %212 = bitcast i8* %.499.repack15 to i64*
  store i64 8, i64* %212, align 8
  ret %string.676378* %.499

.3.endif.endif.endif.endi...endif.15.endif.if:    ; preds = %.3
  %.505 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.506 = bitcast i8* %.505 to %string.676378*
  %.506.repack = bitcast i8* %.505 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.506.repack, align 8
  %.506.repack10 = getelementptr inbounds i8, i8* %.505, i64 8
  %213 = bitcast i8* %.506.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.138, i64 0, i64 0), i8** %213, align 8
  %.506.repack11 = getelementptr inbounds i8, i8* %.505, i64 16
  %214 = bitcast i8* %.506.repack11 to i64*
  store i64 7, i64* %214, align 8
  %.506.repack12 = getelementptr inbounds i8, i8* %.505, i64 24
  %215 = bitcast i8* %.506.repack12 to i64*
  store i64 7, i64* %215, align 8
  ret %string.676378* %.506

.3.endif.endif.endif.endi...endif.15.endif.endif.if: ; preds = %.3
  %.512 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.513 = bitcast i8* %.512 to %string.676378*
  %.513.repack = bitcast i8* %.512 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.513.repack, align 8
  %.513.repack7 = getelementptr inbounds i8, i8* %.512, i64 8
  %216 = bitcast i8* %.513.repack7 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.139, i64 0, i64 0), i8** %216, align 8
  %.513.repack8 = getelementptr inbounds i8, i8* %.512, i64 16
  %217 = bitcast i8* %.513.repack8 to i64*
  store i64 6, i64* %217, align 8
  %.513.repack9 = getelementptr inbounds i8, i8* %.512, i64 24
  %218 = bitcast i8* %.513.repack9 to i64*
  store i64 6, i64* %218, align 8
  ret %string.676378* %.513

.3.endif.endif.endif.endi...if.16:                ; preds = %.3
  %.519 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.520 = bitcast i8* %.519 to %string.676378*
  %.520.repack = bitcast i8* %.519 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.520.repack, align 8
  %.520.repack4 = getelementptr inbounds i8, i8* %.519, i64 8
  %219 = bitcast i8* %.520.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.140, i64 0, i64 0), i8** %219, align 8
  %.520.repack5 = getelementptr inbounds i8, i8* %.519, i64 16
  %220 = bitcast i8* %.520.repack5 to i64*
  store i64 5, i64* %220, align 8
  %.520.repack6 = getelementptr inbounds i8, i8* %.519, i64 24
  %221 = bitcast i8* %.520.repack6 to i64*
  store i64 5, i64* %221, align 8
  ret %string.676378* %.520

.3.endif.endif.endif.endi...endif.16.if:          ; preds = %.3
  %.526 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.527 = bitcast i8* %.526 to %string.676378*
  %.527.repack = bitcast i8* %.526 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.527.repack, align 8
  %.527.repack1 = getelementptr inbounds i8, i8* %.526, i64 8
  %222 = bitcast i8* %.527.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.141, i64 0, i64 0), i8** %222, align 8
  %.527.repack2 = getelementptr inbounds i8, i8* %.526, i64 16
  %223 = bitcast i8* %.527.repack2 to i64*
  store i64 6, i64* %223, align 8
  %.527.repack3 = getelementptr inbounds i8, i8* %.526, i64 24
  %224 = bitcast i8* %.527.repack3 to i64*
  store i64 6, i64* %224, align 8
  ret %string.676378* %.527

.3.endif.endif.endif.endi...endif.16.endif:       ; preds = %.3
  %.530 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.531 = bitcast i8* %.530 to %string.676378*
  %.532 = bitcast i8* %.530 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.532, align 8
  %.534 = getelementptr inbounds i8, i8* %.530, i64 8
  %225 = bitcast i8* %.534 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %225, align 8
  %.536 = getelementptr inbounds i8, i8* %.530, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.536, i8 0, i64 16, i1 false)
  ret %string.676378* %.531
}

define %string.676378* @token_value(%Token.676406* nocapture readonly %.1, %string.676378* %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.9 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.8, align 8
  %.10 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.9, i64 0, i32 7
  %.11 = load %string.676378* (%string.676378*, i64, i64)*, %string.676378* (%string.676378*, i64, i64)** %.10, align 8
  %.13 = getelementptr inbounds %Token.676406, %Token.676406* %.1, i64 0, i32 2
  %.14 = load %FloRange.676382*, %FloRange.676382** %.13, align 8
  %.15 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.20 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.14, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.27 = sub i64 %.21, %.16
  %.28 = call %string.676378* %.11(%string.676378* %.2, i64 %.16, i64 %.27)
  ret %string.676378* %.28
}

define void @print_tokens(%"Array<Token>.676417"* %.1, %string.676378* %.2) local_unnamed_addr {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.7 to %string.676378*
  %.8.repack = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.8.repack, align 8
  %.8.repack1 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.8.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.142, i64 0, i64 0), i8** %0, align 8
  %.8.repack2 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.8.repack2 to i64*
  store i64 1, i64* %1, align 8
  %.8.repack3 = getelementptr inbounds i8, i8* %.7, i64 24
  %2 = bitcast i8* %.8.repack3 to i64*
  store i64 1, i64* %2, align 8
  call void @println(%string.676378* %.8)
  %.16 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 2
  %.1717 = load i64, i64* %.16, align 8
  %.1818 = icmp sgt i64 %.1717, 0
  br i1 %.1818, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.22 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge19 = phi i64 [ 0, %for.body.lr.ph ], [ %.121, %for.body.endif ]
  %.23 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.23, i64 0, i32 5
  %.25 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.24, align 8
  %.26 = call %Token.676406* %.25(%"Array<Token>.676417"* %.1, i64 %storemerge19)
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.676378*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %3 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.143, i64 0, i64 0), i8** %3, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %4 = bitcast i8* %.29.repack8 to i64*
  store i64 2, i64* %4, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %5 = bitcast i8* %.29.repack9 to i64*
  store i64 2, i64* %5, align 8
  call void @println(%string.676378* %.29)
  %.33 = getelementptr inbounds %Token.676406, %Token.676406* %.26, i64 0, i32 1
  %.34 = load i64, i64* %.33, align 8
  %.35 = call %string.676378* @token_str(i64 %.34)
  %.36 = getelementptr inbounds %string.676378, %string.676378* %.35, i64 0, i32 0
  %.37 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.36, align 8
  %.38 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.37, i64 0, i32 11
  %.39 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.38, align 8
  %.40 = call i8* %.39(%string.676378* %.35)
  %.42 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.144, i64 0, i64 0), i8* %.40)
  %.44 = call i8* @malloc(i64 %.42)
  %.45 = call i64 (i8*, i8*, ...) @sprintf(i8* %.44, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.144, i64 0, i64 0), i8* %.40)
  %.46 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.46 to %string.676378*
  %.48 = bitcast i8* %.46 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds i8, i8* %.46, i64 8
  %6 = bitcast i8* %.50 to i8**
  store i8* %.44, i8** %6, align 8
  %.52 = getelementptr inbounds i8, i8* %.46, i64 16
  %7 = bitcast i8* %.52 to i64*
  store i64 %.42, i64* %7, align 8
  %.54 = getelementptr inbounds i8, i8* %.46, i64 24
  %8 = bitcast i8* %.54 to i64*
  store i64 %.42, i64* %8, align 8
  call void @println(%string.676378* %.47)
  %.58 = getelementptr inbounds %Token.676406, %Token.676406* %.26, i64 0, i32 2
  %.59 = load %FloRange.676382*, %FloRange.676382** %.58, align 8
  %.60 = getelementptr inbounds %FloRange.676382, %FloRange.676382* %.59, i64 0, i32 2
  %.61 = load i64, i64* %.60, align 8
  %.63 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.145, i64 0, i64 0), i64 %.61)
  %.65 = call i8* @malloc(i64 %.63)
  %.66 = call i64 (i8*, i8*, ...) @sprintf(i8* %.65, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.145, i64 0, i64 0), i64 %.61)
  %.67 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.68 = bitcast i8* %.67 to %string.676378*
  %.69 = bitcast i8* %.67 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.69, align 8
  %.71 = getelementptr inbounds i8, i8* %.67, i64 8
  %9 = bitcast i8* %.71 to i8**
  store i8* %.65, i8** %9, align 8
  %.73 = getelementptr inbounds i8, i8* %.67, i64 16
  %10 = bitcast i8* %.73 to i64*
  store i64 %.63, i64* %10, align 8
  %.75 = getelementptr inbounds i8, i8* %.67, i64 24
  %11 = bitcast i8* %.75 to i64*
  store i64 %.63, i64* %11, align 8
  call void @println(%string.676378* %.68)
  %.80 = load i64, i64* %.33, align 8
  %.81.not = icmp eq i64 %.80, 30
  br i1 %.81.not, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.4
  %.124 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.676378*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.125.repack, align 8
  %.125.repack4 = getelementptr inbounds i8, i8* %.124, i64 8
  %12 = bitcast i8* %.125.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.149, i64 0, i64 0), i8** %12, align 8
  %.125.repack5 = getelementptr inbounds i8, i8* %.124, i64 16
  %13 = bitcast i8* %.125.repack5 to i64*
  store i64 1, i64* %13, align 8
  %.125.repack6 = getelementptr inbounds i8, i8* %.124, i64 24
  %14 = bitcast i8* %.125.repack6 to i64*
  store i64 1, i64* %14, align 8
  call void @println(%string.676378* %.125)
  ret void

for.body.if:                                      ; preds = %for.body
  %.85 = call %string.676378* @token_value(%Token.676406* %.26, %string.676378* %.2)
  %.86 = getelementptr inbounds %string.676378, %string.676378* %.85, i64 0, i32 0
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 11
  %.89 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.88, align 8
  %.90 = call i8* %.89(%string.676378* %.85)
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.146, i64 0, i64 0), i8* %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.146, i64 0, i64 0), i8* %.90)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.sink24 = phi i8* [ %.94, %for.body.if ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @str.147, i64 0, i64 0), %for.body ]
  %.sink21 = phi i64 [ %.92, %for.body.if ], [ 11, %for.body ]
  %.108 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.109 = bitcast i8* %.108 to %string.676378*
  %.109.repack = bitcast i8* %.108 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.109.repack, align 8
  %.109.repack10 = getelementptr inbounds i8, i8* %.108, i64 8
  %15 = bitcast i8* %.109.repack10 to i8**
  store i8* %.sink24, i8** %15, align 8
  %.109.repack11 = getelementptr inbounds i8, i8* %.108, i64 16
  %16 = bitcast i8* %.109.repack11 to i64*
  store i64 %.sink21, i64* %16, align 8
  %.109.repack12 = getelementptr inbounds i8, i8* %.108, i64 24
  %17 = bitcast i8* %.109.repack12 to i64*
  store i64 %.sink21, i64* %17, align 8
  call void @println(%string.676378* %.109)
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.676378*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.114.repack, align 8
  %.114.repack13 = getelementptr inbounds i8, i8* %.113, i64 8
  %18 = bitcast i8* %.114.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.148, i64 0, i64 0), i8** %18, align 8
  %.114.repack14 = getelementptr inbounds i8, i8* %.113, i64 16
  %19 = bitcast i8* %.114.repack14 to i64*
  store i64 3, i64* %19, align 8
  %.114.repack15 = getelementptr inbounds i8, i8* %.113, i64 24
  %20 = bitcast i8* %.114.repack15 to i64*
  store i64 3, i64* %20, align 8
  call void @println(%string.676378* %.114)
  %.121 = add nuw nsw i64 %storemerge19, 1
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp slt i64 %.121, %.17
  br i1 %.18, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Node_constructor(%Node.676424* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %Node.676424, %Node.676424* %.1, i64 0, i32 1
  store %FloRange.676382* %.2, %FloRange.676382** %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeNode_constructor(%TypeNode.676426* nocapture %.1, i64 %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %TypeNode.676426* %.1 to %Node.676424*
  call void @Node_constructor(%Node.676424* %.10, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.1, i64 0, i32 2
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<TypeNode>_constructor"(%"Array<TypeNode>.676430"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %0 = bitcast %TypeNode.676426*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<TypeNode>_resize"(%"Array<TypeNode>.676430"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %0 = bitcast %TypeNode.676426*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<TypeNode>_swap"(%"Array<TypeNode>.676430"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %.48 = load %TypeNode.676426**, %TypeNode.676426*** %.47, align 8
  %.49 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.48, i64 %.2
  %4 = bitcast %TypeNode.676426** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.48, i64 %.3
  %5 = bitcast %TypeNode.676426** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %TypeNode.676426**, %TypeNode.676426*** %.47, align 8
  %.69 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.67, i64 %.3
  %6 = bitcast %TypeNode.676426** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeNode>___sl__"(%"Array<TypeNode>.676430"* %.1, %TypeNode.676426* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 0
  %.17 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<TypeNode>.676430"*)*, void (%"Array<TypeNode>.676430"*)** %.18, align 8
  call void %.19(%"Array<TypeNode>.676430"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %.31 = load %TypeNode.676426**, %TypeNode.676426*** %.30, align 8
  %.33 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.31, i64 %.24
  store %TypeNode.676426* %.2, %TypeNode.676426** %.33, align 8
  ret void
}

define void @"Array<TypeNode>___setitem__"(%"Array<TypeNode>.676430"* nocapture readonly %.1, i64 %.2, %TypeNode.676426* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %.30 = load %TypeNode.676426**, %TypeNode.676426*** %.29, align 8
  %.32 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.30, i64 %.2
  store %TypeNode.676426* %.3, %TypeNode.676426** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeNode>_append"(%"Array<TypeNode>.676430"* %.1, %TypeNode.676426* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 0
  %.9 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)** %.10, align 8
  call void %.11(%"Array<TypeNode>.676430"* %.1, %TypeNode.676426* %.2)
  ret void
}

define %TypeNode.676426* @"Array<TypeNode>___getitem__"(%"Array<TypeNode>.676430"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %.28 = load %TypeNode.676426**, %TypeNode.676426*** %.27, align 8
  %.29 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.28, i64 %.2
  %.30 = load %TypeNode.676426*, %TypeNode.676426** %.29, align 8
  ret %TypeNode.676426* %.30

.4.endif:                                         ; preds = %.4
  ret %TypeNode.676426* null
}

define i1 @"Array<TypeNode>___eq__"(%"Array<TypeNode>.676430"* %.1, %"Array<TypeNode>.676430"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.28, i64 0, i32 5
  %.30 = load %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)*, %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)** %.29, align 8
  %.31 = call %TypeNode.676426* %.30(%"Array<TypeNode>.676430"* %.1, i64 %storemerge3)
  %.35 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.35, i64 0, i32 5
  %.37 = load %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)*, %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)** %.36, align 8
  %.38 = call %TypeNode.676426* %.37(%"Array<TypeNode>.676430"* %.2, i64 %storemerge3)
  %0 = ptrtoint %TypeNode.676426* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %TypeNode.676426* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<TypeNode>___in__"(%"Array<TypeNode>.676430"* %.1, %TypeNode.676426* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %TypeNode.676426* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.19, i64 0, i32 5
  %.21 = load %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)*, %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)** %.20, align 8
  %.22 = call %TypeNode.676426* %.21(%"Array<TypeNode>.676430"* %.1, i64 %storemerge4)
  %1 = ptrtoint %TypeNode.676426* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<TypeNode>_find"(%"Array<TypeNode>.676430"* nocapture readonly %.1, %TypeNode.676426* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 1
  %.19 = load %TypeNode.676426**, %TypeNode.676426*** %.18, align 8
  %0 = ptrtoint %TypeNode.676426* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %TypeNode.676426*, %TypeNode.676426** %.19, i64 %storemerge5
  %1 = bitcast %TypeNode.676426** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<TypeNode>_join"(%"Array<TypeNode>.676430"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.150, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.150, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<TypeNode>___as_string__"(%"Array<TypeNode>.676430"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.1, i64 0, i32 0
  %.7 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<TypeNode>.676430"*, %string.676378*)*, %string.676378* (%"Array<TypeNode>.676430"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<TypeNode>.676430"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @RecordTypeNode_constructor(%RecordTypeNode.676428* nocapture %.1, %IdentifierToken.676420* %.2, %FloRange.676382* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %RecordTypeNode.676428* %.1 to %TypeNode.676426*
  call void @TypeNode_constructor(%TypeNode.676426* %.10, i64 18, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %RecordTypeNode.676428, %RecordTypeNode.676428* %.1, i64 0, i32 3
  store %IdentifierToken.676420* %.2, %IdentifierToken.676420** %.15, align 8
  %.19 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.21 to %"Array<TypeNode>_vtable_ty.676431"**
  store %"Array<TypeNode>_vtable_ty.676431"* @"Array<TypeNode>_vtable_data", %"Array<TypeNode>_vtable_ty.676431"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  %.31 = getelementptr inbounds %RecordTypeNode.676428, %RecordTypeNode.676428* %.1, i64 0, i32 4
  %3 = bitcast %"Array<TypeNode>.676430"** %.31 to i8**
  store i8* %.21, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @FunctionTypeNode_constructor(%FunctionTypeNode.676432* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %FunctionTypeNode.676432* %.1 to %TypeNode.676426*
  call void @TypeNode_constructor(%TypeNode.676426* %.8, i64 17, %FloRange.676382* %.2)
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<TypeNode>_vtable_ty.676431"**
  store %"Array<TypeNode>_vtable_ty.676431"* @"Array<TypeNode>_vtable_data", %"Array<TypeNode>_vtable_ty.676431"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %FunctionTypeNode.676432, %FunctionTypeNode.676432* %.1, i64 0, i32 3
  %3 = bitcast %"Array<TypeNode>.676430"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PointerTypeNode_constructor(%PointerTypeNode.676434* nocapture %.1, %TypeNode.676426* %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %PointerTypeNode.676434* %.1 to %TypeNode.676426*
  call void @TypeNode_constructor(%TypeNode.676426* %.10, i64 15, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %PointerTypeNode.676434, %PointerTypeNode.676434* %.1, i64 0, i32 3
  store %TypeNode.676426* %.2, %TypeNode.676426** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StatementNode_constructor(%StatementNode.676436* nocapture %.1, i64 %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %StatementNode.676436* %.1 to %Node.676424*
  call void @Node_constructor(%Node.676424* %.10, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %StatementNode.676436, %StatementNode.676436* %.1, i64 0, i32 2
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<StatementNode>_constructor"(%"Array<StatementNode>.676440"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %0 = bitcast %StatementNode.676436*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<StatementNode>_resize"(%"Array<StatementNode>.676440"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %0 = bitcast %StatementNode.676436*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<StatementNode>_swap"(%"Array<StatementNode>.676440"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %.48 = load %StatementNode.676436**, %StatementNode.676436*** %.47, align 8
  %.49 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.48, i64 %.2
  %4 = bitcast %StatementNode.676436** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.48, i64 %.3
  %5 = bitcast %StatementNode.676436** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %StatementNode.676436**, %StatementNode.676436*** %.47, align 8
  %.69 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.67, i64 %.3
  %6 = bitcast %StatementNode.676436** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<StatementNode>___sl__"(%"Array<StatementNode>.676440"* %.1, %StatementNode.676436* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 0
  %.17 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<StatementNode>.676440"*)*, void (%"Array<StatementNode>.676440"*)** %.18, align 8
  call void %.19(%"Array<StatementNode>.676440"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %.31 = load %StatementNode.676436**, %StatementNode.676436*** %.30, align 8
  %.33 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.31, i64 %.24
  store %StatementNode.676436* %.2, %StatementNode.676436** %.33, align 8
  ret void
}

define void @"Array<StatementNode>___setitem__"(%"Array<StatementNode>.676440"* nocapture readonly %.1, i64 %.2, %StatementNode.676436* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %.30 = load %StatementNode.676436**, %StatementNode.676436*** %.29, align 8
  %.32 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.30, i64 %.2
  store %StatementNode.676436* %.3, %StatementNode.676436** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<StatementNode>_append"(%"Array<StatementNode>.676440"* %.1, %StatementNode.676436* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 0
  %.9 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)** %.10, align 8
  call void %.11(%"Array<StatementNode>.676440"* %.1, %StatementNode.676436* %.2)
  ret void
}

define %StatementNode.676436* @"Array<StatementNode>___getitem__"(%"Array<StatementNode>.676440"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %.28 = load %StatementNode.676436**, %StatementNode.676436*** %.27, align 8
  %.29 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.28, i64 %.2
  %.30 = load %StatementNode.676436*, %StatementNode.676436** %.29, align 8
  ret %StatementNode.676436* %.30

.4.endif:                                         ; preds = %.4
  ret %StatementNode.676436* null
}

define i1 @"Array<StatementNode>___eq__"(%"Array<StatementNode>.676440"* %.1, %"Array<StatementNode>.676440"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.28, i64 0, i32 5
  %.30 = load %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)*, %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)** %.29, align 8
  %.31 = call %StatementNode.676436* %.30(%"Array<StatementNode>.676440"* %.1, i64 %storemerge3)
  %.35 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.35, i64 0, i32 5
  %.37 = load %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)*, %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)** %.36, align 8
  %.38 = call %StatementNode.676436* %.37(%"Array<StatementNode>.676440"* %.2, i64 %storemerge3)
  %0 = ptrtoint %StatementNode.676436* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %StatementNode.676436* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<StatementNode>___in__"(%"Array<StatementNode>.676440"* %.1, %StatementNode.676436* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %StatementNode.676436* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.19, i64 0, i32 5
  %.21 = load %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)*, %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)** %.20, align 8
  %.22 = call %StatementNode.676436* %.21(%"Array<StatementNode>.676440"* %.1, i64 %storemerge4)
  %1 = ptrtoint %StatementNode.676436* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<StatementNode>_find"(%"Array<StatementNode>.676440"* nocapture readonly %.1, %StatementNode.676436* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 1
  %.19 = load %StatementNode.676436**, %StatementNode.676436*** %.18, align 8
  %0 = ptrtoint %StatementNode.676436* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %StatementNode.676436*, %StatementNode.676436** %.19, i64 %storemerge5
  %1 = bitcast %StatementNode.676436** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<StatementNode>_join"(%"Array<StatementNode>.676440"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.151, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.151, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<StatementNode>___as_string__"(%"Array<StatementNode>.676440"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.1, i64 0, i32 0
  %.7 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<StatementNode>.676440"*, %string.676378*)*, %string.676378* (%"Array<StatementNode>.676440"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<StatementNode>.676440"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @BlockNode_constructor(%BlockNode.676438* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %BlockNode.676438* %.1 to %Node.676424*
  call void @Node_constructor(%Node.676424* %.8, %FloRange.676382* %.2)
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<StatementNode>_vtable_ty.676441"**
  store %"Array<StatementNode>_vtable_ty.676441"* @"Array<StatementNode>_vtable_data", %"Array<StatementNode>_vtable_ty.676441"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %BlockNode.676438, %BlockNode.676438* %.1, i64 0, i32 2
  %3 = bitcast %"Array<StatementNode>.676440"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ExpressionNode_constructor(%ExpressionNode.676442* nocapture %.1, i64 %.2, %FloRange.676382* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ExpressionNode.676442* %.1 to %StatementNode.676436*
  call void @StatementNode_constructor(%StatementNode.676436* %.10, i64 8, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.1, i64 0, i32 3
  store i64 %.2, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArrayTypeNode_constructor(%ArrayTypeNode.676444* nocapture %.1, %TypeNode.676426* %.2, %ExpressionNode.676442* %.3, %FloRange.676382* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %ArrayTypeNode.676444* %.1 to %TypeNode.676426*
  call void @TypeNode_constructor(%TypeNode.676426* %.12, i64 16, %FloRange.676382* %.4)
  %.17 = getelementptr inbounds %ArrayTypeNode.676444, %ArrayTypeNode.676444* %.1, i64 0, i32 3
  store %TypeNode.676426* %.2, %TypeNode.676426** %.17, align 8
  %.21 = getelementptr inbounds %ArrayTypeNode.676444, %ArrayTypeNode.676444* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.3, %ExpressionNode.676442** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @IntExpressionNode_constructor(%IntExpressionNode.676446* nocapture %.1, %IntToken.676408* %.2) local_unnamed_addr #8 {
.4:
  %.8 = bitcast %IntExpressionNode.676446* %.1 to %ExpressionNode.676442*
  %.10 = getelementptr inbounds %IntToken.676408, %IntToken.676408* %.2, i64 0, i32 2
  %.11 = load %FloRange.676382*, %FloRange.676382** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.8, i64 0, %FloRange.676382* %.11)
  %.15 = getelementptr inbounds %IntExpressionNode.676446, %IntExpressionNode.676446* %.1, i64 0, i32 4
  store %IntToken.676408* %.2, %IntToken.676408** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @FloatExpressionNode_constructor(%FloatExpressionNode.676448* nocapture %.1, %FloatToken.676410* %.2) local_unnamed_addr #8 {
.4:
  %.8 = bitcast %FloatExpressionNode.676448* %.1 to %ExpressionNode.676442*
  %.10 = getelementptr inbounds %FloatToken.676410, %FloatToken.676410* %.2, i64 0, i32 2
  %.11 = load %FloRange.676382*, %FloRange.676382** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.8, i64 1, %FloRange.676382* %.11)
  %.15 = getelementptr inbounds %FloatExpressionNode.676448, %FloatExpressionNode.676448* %.1, i64 0, i32 4
  store %FloatToken.676410* %.2, %FloatToken.676410** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @CharExpressionNode_constructor(%CharExpressionNode.676450* nocapture %.1, %CharToken.676412* %.2) local_unnamed_addr #8 {
.4:
  %.8 = bitcast %CharExpressionNode.676450* %.1 to %ExpressionNode.676442*
  %.10 = getelementptr inbounds %CharToken.676412, %CharToken.676412* %.2, i64 0, i32 2
  %.11 = load %FloRange.676382*, %FloRange.676382** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.8, i64 3, %FloRange.676382* %.11)
  %.15 = getelementptr inbounds %CharExpressionNode.676450, %CharExpressionNode.676450* %.1, i64 0, i32 4
  store %CharToken.676412* %.2, %CharToken.676412** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ExpressionNode>_constructor"(%"Array<ExpressionNode>.676454"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %0 = bitcast %ExpressionNode.676442*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ExpressionNode>_resize"(%"Array<ExpressionNode>.676454"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %0 = bitcast %ExpressionNode.676442*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ExpressionNode>_swap"(%"Array<ExpressionNode>.676454"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %.48 = load %ExpressionNode.676442**, %ExpressionNode.676442*** %.47, align 8
  %.49 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.48, i64 %.2
  %4 = bitcast %ExpressionNode.676442** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.48, i64 %.3
  %5 = bitcast %ExpressionNode.676442** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ExpressionNode.676442**, %ExpressionNode.676442*** %.47, align 8
  %.69 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.67, i64 %.3
  %6 = bitcast %ExpressionNode.676442** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ExpressionNode>___sl__"(%"Array<ExpressionNode>.676454"* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 0
  %.17 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ExpressionNode>.676454"*)*, void (%"Array<ExpressionNode>.676454"*)** %.18, align 8
  call void %.19(%"Array<ExpressionNode>.676454"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %.31 = load %ExpressionNode.676442**, %ExpressionNode.676442*** %.30, align 8
  %.33 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.31, i64 %.24
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.33, align 8
  ret void
}

define void @"Array<ExpressionNode>___setitem__"(%"Array<ExpressionNode>.676454"* nocapture readonly %.1, i64 %.2, %ExpressionNode.676442* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %.30 = load %ExpressionNode.676442**, %ExpressionNode.676442*** %.29, align 8
  %.32 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.30, i64 %.2
  store %ExpressionNode.676442* %.3, %ExpressionNode.676442** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ExpressionNode>_append"(%"Array<ExpressionNode>.676454"* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 0
  %.9 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)** %.10, align 8
  call void %.11(%"Array<ExpressionNode>.676454"* %.1, %ExpressionNode.676442* %.2)
  ret void
}

define %ExpressionNode.676442* @"Array<ExpressionNode>___getitem__"(%"Array<ExpressionNode>.676454"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %.28 = load %ExpressionNode.676442**, %ExpressionNode.676442*** %.27, align 8
  %.29 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.28, i64 %.2
  %.30 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.29, align 8
  ret %ExpressionNode.676442* %.30

.4.endif:                                         ; preds = %.4
  ret %ExpressionNode.676442* null
}

define i1 @"Array<ExpressionNode>___eq__"(%"Array<ExpressionNode>.676454"* %.1, %"Array<ExpressionNode>.676454"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.28, i64 0, i32 5
  %.30 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.29, align 8
  %.31 = call %ExpressionNode.676442* %.30(%"Array<ExpressionNode>.676454"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.35, i64 0, i32 5
  %.37 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.36, align 8
  %.38 = call %ExpressionNode.676442* %.37(%"Array<ExpressionNode>.676454"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ExpressionNode.676442* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ExpressionNode.676442* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ExpressionNode>___in__"(%"Array<ExpressionNode>.676454"* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ExpressionNode.676442* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.19, i64 0, i32 5
  %.21 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.20, align 8
  %.22 = call %ExpressionNode.676442* %.21(%"Array<ExpressionNode>.676454"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ExpressionNode.676442* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ExpressionNode>_find"(%"Array<ExpressionNode>.676454"* nocapture readonly %.1, %ExpressionNode.676442* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 1
  %.19 = load %ExpressionNode.676442**, %ExpressionNode.676442*** %.18, align 8
  %0 = ptrtoint %ExpressionNode.676442* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ExpressionNode.676442*, %ExpressionNode.676442** %.19, i64 %storemerge5
  %1 = bitcast %ExpressionNode.676442** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ExpressionNode>_join"(%"Array<ExpressionNode>.676454"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.152, i64 0, i64 0), i64 15)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.152, i64 0, i64 0), i64 15)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ExpressionNode>___as_string__"(%"Array<ExpressionNode>.676454"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.1, i64 0, i32 0
  %.7 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ExpressionNode>.676454"*, %string.676378*)*, %string.676378* (%"Array<ExpressionNode>.676454"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ExpressionNode>.676454"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind
define void @StringExpressionNode_constructor(%StringExpressionNode.676452* nocapture %.1, %StrToken.676414* %.2, %"Array<ExpressionNode>.676454"* %.3) local_unnamed_addr #8 {
.5:
  %.10 = bitcast %StringExpressionNode.676452* %.1 to %ExpressionNode.676442*
  %.12 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.2, i64 0, i32 2
  %.13 = load %FloRange.676382*, %FloRange.676382** %.12, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.10, i64 2, %FloRange.676382* %.13)
  %.17 = getelementptr inbounds %StringExpressionNode.676452, %StringExpressionNode.676452* %.1, i64 0, i32 4
  store %StrToken.676414* %.2, %StrToken.676414** %.17, align 8
  %.21 = getelementptr inbounds %StringExpressionNode.676452, %StringExpressionNode.676452* %.1, i64 0, i32 5
  store %"Array<ExpressionNode>.676454"* %.3, %"Array<ExpressionNode>.676454"** %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @VarAccessExpressionNode_constructor(%VarAccessExpressionNode.676456* nocapture %.1, %IdentifierToken.676420* %.2) local_unnamed_addr #8 {
.4:
  %.8 = bitcast %VarAccessExpressionNode.676456* %.1 to %ExpressionNode.676442*
  %.10 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.2, i64 0, i32 2
  %.11 = load %FloRange.676382*, %FloRange.676382** %.10, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.8, i64 7, %FloRange.676382* %.11)
  %.15 = getelementptr inbounds %VarAccessExpressionNode.676456, %VarAccessExpressionNode.676456* %.1, i64 0, i32 4
  store %IdentifierToken.676420* %.2, %IdentifierToken.676420** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @ArrayExpressionNode_constructor(%ArrayExpressionNode.676458* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %ArrayExpressionNode.676458* %.1 to %ExpressionNode.676442*
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.8, i64 6, %FloRange.676382* %.2)
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<ExpressionNode>_vtable_ty.676455"**
  store %"Array<ExpressionNode>_vtable_ty.676455"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.676455"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %ArrayExpressionNode.676458, %ArrayExpressionNode.676458* %.1, i64 0, i32 4
  %3 = bitcast %"Array<ExpressionNode>.676454"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @NewExpressionNode_constructor(%NewExpressionNode.676460* nocapture %.1, %TypeNode.676426* %.2, %FloRange.676382* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %NewExpressionNode.676460* %.1 to %ExpressionNode.676442*
  %.13 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.1, i64 0, i32 4
  store %TypeNode.676426* %.2, %TypeNode.676426** %.13, align 8
  %.16 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.1, i64 0, i32 5
  store i1 true, i1* %.16, align 1
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.10, i64 11, %FloRange.676382* %.3)
  %.22 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.24 to %"Array<ExpressionNode>_vtable_ty.676455"**
  store %"Array<ExpressionNode>_vtable_ty.676455"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.676455"** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %0 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %0, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %1 = bitcast i8* %.30 to i64*
  store i64 0, i64* %1, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %2 = bitcast i8* %.32 to i64*
  store i64 8, i64* %2, align 8
  %.34 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.1, i64 0, i32 6
  %3 = bitcast %"Array<ExpressionNode>.676454"** %.34 to i8**
  store i8* %.24, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ExpressionIndexNode_constructor(%ExpressionIndexNode.676462* nocapture %.1, %ExpressionNode.676442* %.2, %ExpressionNode.676442* %.3, %FloRange.676382* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %ExpressionIndexNode.676462* %.1 to %ExpressionNode.676442*
  %.15 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.15, align 8
  %.19 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.1, i64 0, i32 5
  store %ExpressionNode.676442* %.3, %ExpressionNode.676442** %.19, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.12, i64 13, %FloRange.676382* %.4)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @MemberExpressionNode_constructor(%MemberExpressionNode.676464* nocapture %.1, %ExpressionNode.676442* %.2, %IdentifierToken.676420* %.3, %FloRange.676382* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %MemberExpressionNode.676464* %.1 to %ExpressionNode.676442*
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.12, i64 12, %FloRange.676382* %.4)
  %.17 = getelementptr inbounds %MemberExpressionNode.676464, %MemberExpressionNode.676464* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.17, align 8
  %.21 = getelementptr inbounds %MemberExpressionNode.676464, %MemberExpressionNode.676464* %.1, i64 0, i32 5
  store %IdentifierToken.676420* %.3, %IdentifierToken.676420** %.21, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @CallExpressionNode_constructor(%CallExpressionNode.676466* nocapture %.1, %ExpressionNode.676442* %.2, %FloRange.676382* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %CallExpressionNode.676466* %.1 to %ExpressionNode.676442*
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.10, i64 14, %FloRange.676382* %.3)
  %.15 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.15, align 8
  %.19 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.21 to %"Array<ExpressionNode>_vtable_ty.676455"**
  store %"Array<ExpressionNode>_vtable_ty.676455"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.676455"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  %.31 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.1, i64 0, i32 5
  %3 = bitcast %"Array<ExpressionNode>.676454"** %.31 to i8**
  store i8* %.21, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @TypeCastExpressionNode_constructor(%TypeCastExpressionNode.676468* nocapture %.1, %ExpressionNode.676442* %.2, %TypeNode.676426* %.3) local_unnamed_addr #3 {
.5:
  %.10 = bitcast %TypeCastExpressionNode.676468* %.1 to %ExpressionNode.676442*
  %.12 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.2, i64 0, i32 1
  %.13 = load %FloRange.676382*, %FloRange.676382** %.12, align 8
  %.15 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.3, i64 0, i32 1
  %.16 = load %FloRange.676382*, %FloRange.676382** %.15, align 8
  %.17 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.13, %FloRange.676382* %.16)
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.10, i64 10, %FloRange.676382* %.17)
  %.21 = getelementptr inbounds %TypeCastExpressionNode.676468, %TypeCastExpressionNode.676468* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.21, align 8
  %.25 = getelementptr inbounds %TypeCastExpressionNode.676468, %TypeCastExpressionNode.676468* %.1, i64 0, i32 5
  store %TypeNode.676426* %.3, %TypeNode.676426** %.25, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* nocapture %.1, %ExpressionNode.676442* %.2, i64 %.3, %ExpressionNode.676442* %.4) local_unnamed_addr #3 {
.6:
  %.12 = bitcast %BinaryExpressionNode.676470* %.1 to %ExpressionNode.676442*
  %.14 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.2, i64 0, i32 1
  %.15 = load %FloRange.676382*, %FloRange.676382** %.14, align 8
  %.17 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.4, i64 0, i32 1
  %.18 = load %FloRange.676382*, %FloRange.676382** %.17, align 8
  %.19 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.15, %FloRange.676382* %.18)
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.12, i64 8, %FloRange.676382* %.19)
  %.23 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.23, align 8
  %.27 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.1, i64 0, i32 5
  store i64 %.3, i64* %.27, align 8
  %.31 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.1, i64 0, i32 6
  store %ExpressionNode.676442* %.4, %ExpressionNode.676442** %.31, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @TernaryExpressionNode_constructor(%TernaryExpressionNode.676472* nocapture %.1, %ExpressionNode.676442* %.2, %ExpressionNode.676442* %.3, %ExpressionNode.676442* %.4) local_unnamed_addr #3 {
.6:
  %.12 = bitcast %TernaryExpressionNode.676472* %.1 to %ExpressionNode.676442*
  %.14 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.2, i64 0, i32 1
  %.15 = load %FloRange.676382*, %FloRange.676382** %.14, align 8
  %.17 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.4, i64 0, i32 1
  %.18 = load %FloRange.676382*, %FloRange.676382** %.17, align 8
  %.19 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.15, %FloRange.676382* %.18)
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.12, i64 15, %FloRange.676382* %.19)
  %.23 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.1, i64 0, i32 4
  store %ExpressionNode.676442* %.2, %ExpressionNode.676442** %.23, align 8
  %.27 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.1, i64 0, i32 5
  store %ExpressionNode.676442* %.3, %ExpressionNode.676442** %.27, align 8
  %.31 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.1, i64 0, i32 6
  store %ExpressionNode.676442* %.4, %ExpressionNode.676442** %.31, align 8
  %.35 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.3, i64 0, i32 1
  %.36 = load %FloRange.676382*, %FloRange.676382** %.35, align 8
  %.39 = load %FloRange.676382*, %FloRange.676382** %.17, align 8
  %.40 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.36, %FloRange.676382* %.39)
  %.41 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.1, i64 0, i32 1
  store %FloRange.676382* %.40, %FloRange.676382** %.41, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @UnaryExpressionNode_constructor(%UnaryExpressionNode.676474* nocapture %.1, i64 %.2, %ExpressionNode.676442* %.3, %FloRange.676382* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %UnaryExpressionNode.676474* %.1 to %ExpressionNode.676442*
  %.15 = getelementptr inbounds %UnaryExpressionNode.676474, %UnaryExpressionNode.676474* %.1, i64 0, i32 4
  store i64 %.2, i64* %.15, align 8
  %.19 = getelementptr inbounds %UnaryExpressionNode.676474, %UnaryExpressionNode.676474* %.1, i64 0, i32 5
  store %ExpressionNode.676442* %.3, %ExpressionNode.676442** %.19, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.12, i64 9, %FloRange.676382* %.4)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IfStatementNode_constructor(%IfStatementNode.676476* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %IfStatementNode.676476* %.1 to %StatementNode.676436*
  call void @StatementNode_constructor(%StatementNode.676436* %.8, i64 0, %FloRange.676382* %.2)
  %.12 = getelementptr inbounds %IfStatementNode.676476, %IfStatementNode.676476* %.1, i64 0, i32 5
  store %BlockNode.676438* null, %BlockNode.676438** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @WhileStatementNode_constructor(%WhileStatementNode.676478* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %WhileStatementNode.676478* %.1 to %StatementNode.676436*
  call void @StatementNode_constructor(%StatementNode.676436* %.8, i64 4, %FloRange.676382* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ForStatementNode_constructor(%ForStatementNode.676480* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ForStatementNode.676480* %.1 to %StatementNode.676436*
  %.19 = getelementptr inbounds %ForStatementNode.676480, %ForStatementNode.676480* %.1, i64 0, i32 2
  %0 = bitcast i64* %.19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(32) %0, i8 0, i64 32, i1 false)
  call void @StatementNode_constructor(%StatementNode.676436* %.8, i64 3, %FloRange.676382* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ReturnStatementNode_constructor(%ReturnStatementNode.676482* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ReturnStatementNode.676482* %.1 to %StatementNode.676436*
  %.10 = getelementptr inbounds %ReturnStatementNode.676482, %ReturnStatementNode.676482* %.1, i64 0, i32 3
  store %ExpressionNode.676442* null, %ExpressionNode.676442** %.10, align 8
  call void @StatementNode_constructor(%StatementNode.676436* %.8, i64 7, %FloRange.676382* %.2)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarDeclarationStatement_constructor(%VarDeclarationStatement.676484* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %VarDeclarationStatement.676484* %.1 to %StatementNode.676436*
  call void @StatementNode_constructor(%StatementNode.676436* %.8, i64 1, %FloRange.676382* %.2)
  %.12 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.1, i64 0, i32 4
  %0 = bitcast %TypeNode.676426** %.12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstDeclarationStatement_constructor(%ConstDeclarationStatement.676486* nocapture %.1, %FloRange.676382* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ConstDeclarationStatement.676486* %.1 to %StatementNode.676436*
  call void @StatementNode_constructor(%StatementNode.676436* %.8, i64 2, %FloRange.676382* %.2)
  %.12 = getelementptr inbounds %ConstDeclarationStatement.676486, %ConstDeclarationStatement.676486* %.1, i64 0, i32 4
  store %TypeNode.676426* null, %TypeNode.676426** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ArgNode>_constructor"(%"Array<ArgNode>.676492"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %0 = bitcast %ArgNode.676488*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ArgNode>_resize"(%"Array<ArgNode>.676492"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %0 = bitcast %ArgNode.676488*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ArgNode>_swap"(%"Array<ArgNode>.676492"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %.48 = load %ArgNode.676488**, %ArgNode.676488*** %.47, align 8
  %.49 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.48, i64 %.2
  %4 = bitcast %ArgNode.676488** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.48, i64 %.3
  %5 = bitcast %ArgNode.676488** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ArgNode.676488**, %ArgNode.676488*** %.47, align 8
  %.69 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.67, i64 %.3
  %6 = bitcast %ArgNode.676488** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ArgNode>___sl__"(%"Array<ArgNode>.676492"* %.1, %ArgNode.676488* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 0
  %.17 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ArgNode>.676492"*)*, void (%"Array<ArgNode>.676492"*)** %.18, align 8
  call void %.19(%"Array<ArgNode>.676492"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %.31 = load %ArgNode.676488**, %ArgNode.676488*** %.30, align 8
  %.33 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.31, i64 %.24
  store %ArgNode.676488* %.2, %ArgNode.676488** %.33, align 8
  ret void
}

define void @"Array<ArgNode>___setitem__"(%"Array<ArgNode>.676492"* nocapture readonly %.1, i64 %.2, %ArgNode.676488* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %.30 = load %ArgNode.676488**, %ArgNode.676488*** %.29, align 8
  %.32 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.30, i64 %.2
  store %ArgNode.676488* %.3, %ArgNode.676488** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ArgNode>_append"(%"Array<ArgNode>.676492"* %.1, %ArgNode.676488* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 0
  %.9 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)** %.10, align 8
  call void %.11(%"Array<ArgNode>.676492"* %.1, %ArgNode.676488* %.2)
  ret void
}

define %ArgNode.676488* @"Array<ArgNode>___getitem__"(%"Array<ArgNode>.676492"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %.28 = load %ArgNode.676488**, %ArgNode.676488*** %.27, align 8
  %.29 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.28, i64 %.2
  %.30 = load %ArgNode.676488*, %ArgNode.676488** %.29, align 8
  ret %ArgNode.676488* %.30

.4.endif:                                         ; preds = %.4
  ret %ArgNode.676488* null
}

define i1 @"Array<ArgNode>___eq__"(%"Array<ArgNode>.676492"* %.1, %"Array<ArgNode>.676492"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.28, i64 0, i32 5
  %.30 = load %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)*, %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)** %.29, align 8
  %.31 = call %ArgNode.676488* %.30(%"Array<ArgNode>.676492"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.35, i64 0, i32 5
  %.37 = load %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)*, %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)** %.36, align 8
  %.38 = call %ArgNode.676488* %.37(%"Array<ArgNode>.676492"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ArgNode.676488* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ArgNode.676488* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ArgNode>___in__"(%"Array<ArgNode>.676492"* %.1, %ArgNode.676488* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ArgNode.676488* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.19, i64 0, i32 5
  %.21 = load %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)*, %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)** %.20, align 8
  %.22 = call %ArgNode.676488* %.21(%"Array<ArgNode>.676492"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ArgNode.676488* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ArgNode>_find"(%"Array<ArgNode>.676492"* nocapture readonly %.1, %ArgNode.676488* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 1
  %.19 = load %ArgNode.676488**, %ArgNode.676488*** %.18, align 8
  %0 = ptrtoint %ArgNode.676488* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ArgNode.676488*, %ArgNode.676488** %.19, i64 %storemerge5
  %1 = bitcast %ArgNode.676488** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ArgNode>_join"(%"Array<ArgNode>.676492"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.153, i64 0, i64 0), i64 8)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.153, i64 0, i64 0), i64 8)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ArgNode>___as_string__"(%"Array<ArgNode>.676492"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.1, i64 0, i32 0
  %.7 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ArgNode>.676492"*, %string.676378*)*, %string.676378* (%"Array<ArgNode>.676492"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ArgNode>.676492"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @FunctionDeclarationNode_constructor(%FunctionDeclarationNode.676490* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<ArgNode>_vtable_ty.676493"**
  store %"Array<ArgNode>_vtable_ty.676493"* @"Array<ArgNode>_vtable_data", %"Array<ArgNode>_vtable_ty.676493"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.1, i64 0, i32 2
  %3 = bitcast %"Array<ArgNode>.676492"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.1, i64 0, i32 5
  store i1 false, i1* %.22, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @MethodNode_constructor(%MethodNode.676494* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<ArgNode>_vtable_ty.676493"**
  store %"Array<ArgNode>_vtable_ty.676493"* @"Array<ArgNode>_vtable_data", %"Array<ArgNode>_vtable_ty.676493"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.1, i64 0, i32 2
  %3 = bitcast %"Array<ArgNode>.676492"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.1, i64 0, i32 6
  store i1 true, i1* %.22, align 1
  %.25 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.1, i64 0, i32 7
  store i1 false, i1* %.25, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FieldNode_constructor(%FieldNode.676496* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.1, i64 0, i32 3
  store %ExpressionNode.676442* null, %ExpressionNode.676442** %.6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @GenericParameterNode_constructor(%GenericParameterNode.676498* nocapture %.1, %IdentifierToken.676420* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %GenericParameterNode.676498, %GenericParameterNode.676498* %.1, i64 0, i32 1
  store %IdentifierToken.676420* %.2, %IdentifierToken.676420** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<GenericParameterNode>_constructor"(%"Array<GenericParameterNode>.676502"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %0 = bitcast %GenericParameterNode.676498*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<GenericParameterNode>_resize"(%"Array<GenericParameterNode>.676502"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %0 = bitcast %GenericParameterNode.676498*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<GenericParameterNode>_swap"(%"Array<GenericParameterNode>.676502"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %.48 = load %GenericParameterNode.676498**, %GenericParameterNode.676498*** %.47, align 8
  %.49 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.48, i64 %.2
  %4 = bitcast %GenericParameterNode.676498** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.48, i64 %.3
  %5 = bitcast %GenericParameterNode.676498** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %GenericParameterNode.676498**, %GenericParameterNode.676498*** %.47, align 8
  %.69 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.67, i64 %.3
  %6 = bitcast %GenericParameterNode.676498** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<GenericParameterNode>___sl__"(%"Array<GenericParameterNode>.676502"* %.1, %GenericParameterNode.676498* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 0
  %.17 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<GenericParameterNode>.676502"*)*, void (%"Array<GenericParameterNode>.676502"*)** %.18, align 8
  call void %.19(%"Array<GenericParameterNode>.676502"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %.31 = load %GenericParameterNode.676498**, %GenericParameterNode.676498*** %.30, align 8
  %.33 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.31, i64 %.24
  store %GenericParameterNode.676498* %.2, %GenericParameterNode.676498** %.33, align 8
  ret void
}

define void @"Array<GenericParameterNode>___setitem__"(%"Array<GenericParameterNode>.676502"* nocapture readonly %.1, i64 %.2, %GenericParameterNode.676498* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %.30 = load %GenericParameterNode.676498**, %GenericParameterNode.676498*** %.29, align 8
  %.32 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.30, i64 %.2
  store %GenericParameterNode.676498* %.3, %GenericParameterNode.676498** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<GenericParameterNode>_append"(%"Array<GenericParameterNode>.676502"* %.1, %GenericParameterNode.676498* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 0
  %.9 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)** %.10, align 8
  call void %.11(%"Array<GenericParameterNode>.676502"* %.1, %GenericParameterNode.676498* %.2)
  ret void
}

define %GenericParameterNode.676498* @"Array<GenericParameterNode>___getitem__"(%"Array<GenericParameterNode>.676502"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %.28 = load %GenericParameterNode.676498**, %GenericParameterNode.676498*** %.27, align 8
  %.29 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.28, i64 %.2
  %.30 = load %GenericParameterNode.676498*, %GenericParameterNode.676498** %.29, align 8
  ret %GenericParameterNode.676498* %.30

.4.endif:                                         ; preds = %.4
  ret %GenericParameterNode.676498* null
}

define i1 @"Array<GenericParameterNode>___eq__"(%"Array<GenericParameterNode>.676502"* %.1, %"Array<GenericParameterNode>.676502"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.28, i64 0, i32 5
  %.30 = load %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)*, %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)** %.29, align 8
  %.31 = call %GenericParameterNode.676498* %.30(%"Array<GenericParameterNode>.676502"* %.1, i64 %storemerge3)
  %.35 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.35, i64 0, i32 5
  %.37 = load %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)*, %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)** %.36, align 8
  %.38 = call %GenericParameterNode.676498* %.37(%"Array<GenericParameterNode>.676502"* %.2, i64 %storemerge3)
  %0 = ptrtoint %GenericParameterNode.676498* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %GenericParameterNode.676498* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<GenericParameterNode>___in__"(%"Array<GenericParameterNode>.676502"* %.1, %GenericParameterNode.676498* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %GenericParameterNode.676498* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.19, i64 0, i32 5
  %.21 = load %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)*, %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)** %.20, align 8
  %.22 = call %GenericParameterNode.676498* %.21(%"Array<GenericParameterNode>.676502"* %.1, i64 %storemerge4)
  %1 = ptrtoint %GenericParameterNode.676498* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<GenericParameterNode>_find"(%"Array<GenericParameterNode>.676502"* nocapture readonly %.1, %GenericParameterNode.676498* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 1
  %.19 = load %GenericParameterNode.676498**, %GenericParameterNode.676498*** %.18, align 8
  %0 = ptrtoint %GenericParameterNode.676498* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %GenericParameterNode.676498*, %GenericParameterNode.676498** %.19, i64 %storemerge5
  %1 = bitcast %GenericParameterNode.676498** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<GenericParameterNode>_join"(%"Array<GenericParameterNode>.676502"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.154, i64 0, i64 0), i64 21)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.154, i64 0, i64 0), i64 21)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<GenericParameterNode>___as_string__"(%"Array<GenericParameterNode>.676502"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.1, i64 0, i32 0
  %.7 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<GenericParameterNode>.676502"*, %string.676378*)*, %string.676378* (%"Array<GenericParameterNode>.676502"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<GenericParameterNode>.676502"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<FieldNode>_constructor"(%"Array<FieldNode>.676503"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %0 = bitcast %FieldNode.676496*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FieldNode>_resize"(%"Array<FieldNode>.676503"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %0 = bitcast %FieldNode.676496*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FieldNode>_swap"(%"Array<FieldNode>.676503"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %.48 = load %FieldNode.676496**, %FieldNode.676496*** %.47, align 8
  %.49 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.48, i64 %.2
  %4 = bitcast %FieldNode.676496** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.48, i64 %.3
  %5 = bitcast %FieldNode.676496** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FieldNode.676496**, %FieldNode.676496*** %.47, align 8
  %.69 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.67, i64 %.3
  %6 = bitcast %FieldNode.676496** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FieldNode>___sl__"(%"Array<FieldNode>.676503"* %.1, %FieldNode.676496* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 0
  %.17 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FieldNode>.676503"*)*, void (%"Array<FieldNode>.676503"*)** %.18, align 8
  call void %.19(%"Array<FieldNode>.676503"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %.31 = load %FieldNode.676496**, %FieldNode.676496*** %.30, align 8
  %.33 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.31, i64 %.24
  store %FieldNode.676496* %.2, %FieldNode.676496** %.33, align 8
  ret void
}

define void @"Array<FieldNode>___setitem__"(%"Array<FieldNode>.676503"* nocapture readonly %.1, i64 %.2, %FieldNode.676496* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %.30 = load %FieldNode.676496**, %FieldNode.676496*** %.29, align 8
  %.32 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.30, i64 %.2
  store %FieldNode.676496* %.3, %FieldNode.676496** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FieldNode>_append"(%"Array<FieldNode>.676503"* %.1, %FieldNode.676496* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 0
  %.9 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)*, void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)** %.10, align 8
  call void %.11(%"Array<FieldNode>.676503"* %.1, %FieldNode.676496* %.2)
  ret void
}

define %FieldNode.676496* @"Array<FieldNode>___getitem__"(%"Array<FieldNode>.676503"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %.28 = load %FieldNode.676496**, %FieldNode.676496*** %.27, align 8
  %.29 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.28, i64 %.2
  %.30 = load %FieldNode.676496*, %FieldNode.676496** %.29, align 8
  ret %FieldNode.676496* %.30

.4.endif:                                         ; preds = %.4
  ret %FieldNode.676496* null
}

define i1 @"Array<FieldNode>___eq__"(%"Array<FieldNode>.676503"* %.1, %"Array<FieldNode>.676503"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.28, i64 0, i32 5
  %.30 = load %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)*, %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)** %.29, align 8
  %.31 = call %FieldNode.676496* %.30(%"Array<FieldNode>.676503"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.35, i64 0, i32 5
  %.37 = load %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)*, %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)** %.36, align 8
  %.38 = call %FieldNode.676496* %.37(%"Array<FieldNode>.676503"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FieldNode.676496* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FieldNode.676496* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FieldNode>___in__"(%"Array<FieldNode>.676503"* %.1, %FieldNode.676496* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FieldNode.676496* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.19, i64 0, i32 5
  %.21 = load %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)*, %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)** %.20, align 8
  %.22 = call %FieldNode.676496* %.21(%"Array<FieldNode>.676503"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FieldNode.676496* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FieldNode>_find"(%"Array<FieldNode>.676503"* nocapture readonly %.1, %FieldNode.676496* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 1
  %.19 = load %FieldNode.676496**, %FieldNode.676496*** %.18, align 8
  %0 = ptrtoint %FieldNode.676496* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FieldNode.676496*, %FieldNode.676496** %.19, i64 %storemerge5
  %1 = bitcast %FieldNode.676496** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<FieldNode>_join"(%"Array<FieldNode>.676503"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.155, i64 0, i64 0), i64 10)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.155, i64 0, i64 0), i64 10)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<FieldNode>___as_string__"(%"Array<FieldNode>.676503"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1, i64 0, i32 0
  %.7 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<FieldNode>.676503"*, %string.676378*)*, %string.676378* (%"Array<FieldNode>.676503"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<FieldNode>.676503"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<MethodNode>_constructor"(%"Array<MethodNode>.676504"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %0 = bitcast %MethodNode.676494*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<MethodNode>_resize"(%"Array<MethodNode>.676504"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %0 = bitcast %MethodNode.676494*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<MethodNode>_swap"(%"Array<MethodNode>.676504"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %.48 = load %MethodNode.676494**, %MethodNode.676494*** %.47, align 8
  %.49 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.48, i64 %.2
  %4 = bitcast %MethodNode.676494** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.48, i64 %.3
  %5 = bitcast %MethodNode.676494** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %MethodNode.676494**, %MethodNode.676494*** %.47, align 8
  %.69 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.67, i64 %.3
  %6 = bitcast %MethodNode.676494** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<MethodNode>___sl__"(%"Array<MethodNode>.676504"* %.1, %MethodNode.676494* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 0
  %.17 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<MethodNode>.676504"*)*, void (%"Array<MethodNode>.676504"*)** %.18, align 8
  call void %.19(%"Array<MethodNode>.676504"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %.31 = load %MethodNode.676494**, %MethodNode.676494*** %.30, align 8
  %.33 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.31, i64 %.24
  store %MethodNode.676494* %.2, %MethodNode.676494** %.33, align 8
  ret void
}

define void @"Array<MethodNode>___setitem__"(%"Array<MethodNode>.676504"* nocapture readonly %.1, i64 %.2, %MethodNode.676494* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %.30 = load %MethodNode.676494**, %MethodNode.676494*** %.29, align 8
  %.32 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.30, i64 %.2
  store %MethodNode.676494* %.3, %MethodNode.676494** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<MethodNode>_append"(%"Array<MethodNode>.676504"* %.1, %MethodNode.676494* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 0
  %.9 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)*, void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)** %.10, align 8
  call void %.11(%"Array<MethodNode>.676504"* %.1, %MethodNode.676494* %.2)
  ret void
}

define %MethodNode.676494* @"Array<MethodNode>___getitem__"(%"Array<MethodNode>.676504"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %.28 = load %MethodNode.676494**, %MethodNode.676494*** %.27, align 8
  %.29 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.28, i64 %.2
  %.30 = load %MethodNode.676494*, %MethodNode.676494** %.29, align 8
  ret %MethodNode.676494* %.30

.4.endif:                                         ; preds = %.4
  ret %MethodNode.676494* null
}

define i1 @"Array<MethodNode>___eq__"(%"Array<MethodNode>.676504"* %.1, %"Array<MethodNode>.676504"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.28, i64 0, i32 5
  %.30 = load %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)*, %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)** %.29, align 8
  %.31 = call %MethodNode.676494* %.30(%"Array<MethodNode>.676504"* %.1, i64 %storemerge3)
  %.35 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.35, i64 0, i32 5
  %.37 = load %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)*, %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)** %.36, align 8
  %.38 = call %MethodNode.676494* %.37(%"Array<MethodNode>.676504"* %.2, i64 %storemerge3)
  %0 = ptrtoint %MethodNode.676494* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %MethodNode.676494* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<MethodNode>___in__"(%"Array<MethodNode>.676504"* %.1, %MethodNode.676494* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %MethodNode.676494* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.19, i64 0, i32 5
  %.21 = load %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)*, %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)** %.20, align 8
  %.22 = call %MethodNode.676494* %.21(%"Array<MethodNode>.676504"* %.1, i64 %storemerge4)
  %1 = ptrtoint %MethodNode.676494* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<MethodNode>_find"(%"Array<MethodNode>.676504"* nocapture readonly %.1, %MethodNode.676494* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 1
  %.19 = load %MethodNode.676494**, %MethodNode.676494*** %.18, align 8
  %0 = ptrtoint %MethodNode.676494* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %MethodNode.676494*, %MethodNode.676494** %.19, i64 %storemerge5
  %1 = bitcast %MethodNode.676494** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<MethodNode>_join"(%"Array<MethodNode>.676504"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.156, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.156, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<MethodNode>___as_string__"(%"Array<MethodNode>.676504"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1, i64 0, i32 0
  %.7 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<MethodNode>.676504"*, %string.676378*)*, %string.676378* (%"Array<MethodNode>.676504"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<MethodNode>.676504"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @ClassDeclarationNode_constructor(%ClassDeclarationNode.676500* nocapture %.1, %IdentifierToken.676420* %.2) local_unnamed_addr #3 {
.4:
  %.9 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.1, i64 0, i32 1
  store %IdentifierToken.676420* %.2, %IdentifierToken.676420** %.9, align 8
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<FieldNode>_vtable_ty.676506"**
  store %"Array<FieldNode>_vtable_ty.676506"* @"Array<FieldNode>_vtable_data", %"Array<FieldNode>_vtable_ty.676506"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.1, i64 0, i32 4
  %3 = bitcast %"Array<FieldNode>.676503"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.29 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.31 to %"Array<MethodNode>_vtable_ty.676507"**
  store %"Array<MethodNode>_vtable_ty.676507"* @"Array<MethodNode>_vtable_data", %"Array<MethodNode>_vtable_ty.676507"** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %4 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %4, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %5 = bitcast i8* %.37 to i64*
  store i64 0, i64* %5, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %6 = bitcast i8* %.39 to i64*
  store i64 8, i64* %6, align 8
  %.41 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.1, i64 0, i32 5
  %7 = bitcast %"Array<MethodNode>.676504"** %.41 to i8**
  store i8* %.31, i8** %7, align 8
  %.45 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.47 to %"Array<GenericParameterNode>_vtable_ty.676505"**
  store %"Array<GenericParameterNode>_vtable_ty.676505"* @"Array<GenericParameterNode>_vtable_data", %"Array<GenericParameterNode>_vtable_ty.676505"** %.49, align 8
  %.51 = getelementptr inbounds i8, i8* %.47, i64 8
  %8 = bitcast i8* %.51 to i8**
  store i8* %.45, i8** %8, align 8
  %.53 = getelementptr inbounds i8, i8* %.47, i64 16
  %9 = bitcast i8* %.53 to i64*
  store i64 0, i64* %9, align 8
  %.55 = getelementptr inbounds i8, i8* %.47, i64 24
  %10 = bitcast i8* %.55 to i64*
  store i64 8, i64* %10, align 8
  %.57 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.1, i64 0, i32 2
  %11 = bitcast %"Array<GenericParameterNode>.676502"** %.57 to i8**
  store i8* %.47, i8** %11, align 8
  %.60 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.1, i64 0, i32 3
  store %RecordTypeNode.676428* null, %RecordTypeNode.676428** %.60, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumNodeField_constructor(%EnumNodeField.676508* nocapture %.1, %IdentifierToken.676420* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %EnumNodeField.676508, %EnumNodeField.676508* %.1, i64 0, i32 1
  store %IdentifierToken.676420* %.2, %IdentifierToken.676420** %.9, align 8
  %.12 = getelementptr inbounds %EnumNodeField.676508, %EnumNodeField.676508* %.1, i64 0, i32 2
  store %ExpressionNode.676442* null, %ExpressionNode.676442** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<EnumNodeField>_constructor"(%"Array<EnumNodeField>.676512"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNodeField.676508*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumNodeField>_resize"(%"Array<EnumNodeField>.676512"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNodeField.676508*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumNodeField>_swap"(%"Array<EnumNodeField>.676512"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %.48 = load %EnumNodeField.676508**, %EnumNodeField.676508*** %.47, align 8
  %.49 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.48, i64 %.2
  %4 = bitcast %EnumNodeField.676508** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.48, i64 %.3
  %5 = bitcast %EnumNodeField.676508** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumNodeField.676508**, %EnumNodeField.676508*** %.47, align 8
  %.69 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.67, i64 %.3
  %6 = bitcast %EnumNodeField.676508** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNodeField>___sl__"(%"Array<EnumNodeField>.676512"* %.1, %EnumNodeField.676508* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumNodeField>.676512"*)*, void (%"Array<EnumNodeField>.676512"*)** %.18, align 8
  call void %.19(%"Array<EnumNodeField>.676512"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %.31 = load %EnumNodeField.676508**, %EnumNodeField.676508*** %.30, align 8
  %.33 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.31, i64 %.24
  store %EnumNodeField.676508* %.2, %EnumNodeField.676508** %.33, align 8
  ret void
}

define void @"Array<EnumNodeField>___setitem__"(%"Array<EnumNodeField>.676512"* nocapture readonly %.1, i64 %.2, %EnumNodeField.676508* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %.30 = load %EnumNodeField.676508**, %EnumNodeField.676508*** %.29, align 8
  %.32 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.30, i64 %.2
  store %EnumNodeField.676508* %.3, %EnumNodeField.676508** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNodeField>_append"(%"Array<EnumNodeField>.676512"* %.1, %EnumNodeField.676508* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)*, void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)** %.10, align 8
  call void %.11(%"Array<EnumNodeField>.676512"* %.1, %EnumNodeField.676508* %.2)
  ret void
}

define %EnumNodeField.676508* @"Array<EnumNodeField>___getitem__"(%"Array<EnumNodeField>.676512"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %.28 = load %EnumNodeField.676508**, %EnumNodeField.676508*** %.27, align 8
  %.29 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.28, i64 %.2
  %.30 = load %EnumNodeField.676508*, %EnumNodeField.676508** %.29, align 8
  ret %EnumNodeField.676508* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumNodeField.676508* null
}

define i1 @"Array<EnumNodeField>___eq__"(%"Array<EnumNodeField>.676512"* %.1, %"Array<EnumNodeField>.676512"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.28, i64 0, i32 5
  %.30 = load %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)*, %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)** %.29, align 8
  %.31 = call %EnumNodeField.676508* %.30(%"Array<EnumNodeField>.676512"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.35, i64 0, i32 5
  %.37 = load %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)*, %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)** %.36, align 8
  %.38 = call %EnumNodeField.676508* %.37(%"Array<EnumNodeField>.676512"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumNodeField.676508* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumNodeField.676508* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumNodeField>___in__"(%"Array<EnumNodeField>.676512"* %.1, %EnumNodeField.676508* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumNodeField.676508* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.19, i64 0, i32 5
  %.21 = load %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)*, %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)** %.20, align 8
  %.22 = call %EnumNodeField.676508* %.21(%"Array<EnumNodeField>.676512"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumNodeField.676508* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumNodeField>_find"(%"Array<EnumNodeField>.676512"* nocapture readonly %.1, %EnumNodeField.676508* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 1
  %.19 = load %EnumNodeField.676508**, %EnumNodeField.676508*** %.18, align 8
  %0 = ptrtoint %EnumNodeField.676508* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumNodeField.676508*, %EnumNodeField.676508** %.19, i64 %storemerge5
  %1 = bitcast %EnumNodeField.676508** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<EnumNodeField>_join"(%"Array<EnumNodeField>.676512"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.157, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.157, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<EnumNodeField>___as_string__"(%"Array<EnumNodeField>.676512"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<EnumNodeField>.676512"*, %string.676378*)*, %string.676378* (%"Array<EnumNodeField>.676512"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<EnumNodeField>.676512"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @EnumNode_constructor(%EnumNode.676510* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<EnumNodeField>_vtable_ty.676513"**
  store %"Array<EnumNodeField>_vtable_ty.676513"* @"Array<EnumNodeField>_vtable_data", %"Array<EnumNodeField>_vtable_ty.676513"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %EnumNode.676510, %EnumNode.676510* %.1, i64 0, i32 2
  %3 = bitcast %"Array<EnumNodeField>.676512"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<IdentifierToken>_constructor"(%"Array<IdentifierToken>.676516"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %0 = bitcast %IdentifierToken.676420*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<IdentifierToken>_resize"(%"Array<IdentifierToken>.676516"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %0 = bitcast %IdentifierToken.676420*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<IdentifierToken>_swap"(%"Array<IdentifierToken>.676516"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %.48 = load %IdentifierToken.676420**, %IdentifierToken.676420*** %.47, align 8
  %.49 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.48, i64 %.2
  %4 = bitcast %IdentifierToken.676420** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.48, i64 %.3
  %5 = bitcast %IdentifierToken.676420** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %IdentifierToken.676420**, %IdentifierToken.676420*** %.47, align 8
  %.69 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.67, i64 %.3
  %6 = bitcast %IdentifierToken.676420** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<IdentifierToken>___sl__"(%"Array<IdentifierToken>.676516"* %.1, %IdentifierToken.676420* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 0
  %.17 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<IdentifierToken>.676516"*)*, void (%"Array<IdentifierToken>.676516"*)** %.18, align 8
  call void %.19(%"Array<IdentifierToken>.676516"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %.31 = load %IdentifierToken.676420**, %IdentifierToken.676420*** %.30, align 8
  %.33 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.31, i64 %.24
  store %IdentifierToken.676420* %.2, %IdentifierToken.676420** %.33, align 8
  ret void
}

define void @"Array<IdentifierToken>___setitem__"(%"Array<IdentifierToken>.676516"* nocapture readonly %.1, i64 %.2, %IdentifierToken.676420* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %.30 = load %IdentifierToken.676420**, %IdentifierToken.676420*** %.29, align 8
  %.32 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.30, i64 %.2
  store %IdentifierToken.676420* %.3, %IdentifierToken.676420** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<IdentifierToken>_append"(%"Array<IdentifierToken>.676516"* %.1, %IdentifierToken.676420* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 0
  %.9 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)** %.10, align 8
  call void %.11(%"Array<IdentifierToken>.676516"* %.1, %IdentifierToken.676420* %.2)
  ret void
}

define %IdentifierToken.676420* @"Array<IdentifierToken>___getitem__"(%"Array<IdentifierToken>.676516"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %.28 = load %IdentifierToken.676420**, %IdentifierToken.676420*** %.27, align 8
  %.29 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.28, i64 %.2
  %.30 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.29, align 8
  ret %IdentifierToken.676420* %.30

.4.endif:                                         ; preds = %.4
  ret %IdentifierToken.676420* null
}

define i1 @"Array<IdentifierToken>___eq__"(%"Array<IdentifierToken>.676516"* %.1, %"Array<IdentifierToken>.676516"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.28, i64 0, i32 5
  %.30 = load %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)*, %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)** %.29, align 8
  %.31 = call %IdentifierToken.676420* %.30(%"Array<IdentifierToken>.676516"* %.1, i64 %storemerge3)
  %.35 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.35, i64 0, i32 5
  %.37 = load %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)*, %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)** %.36, align 8
  %.38 = call %IdentifierToken.676420* %.37(%"Array<IdentifierToken>.676516"* %.2, i64 %storemerge3)
  %0 = ptrtoint %IdentifierToken.676420* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %IdentifierToken.676420* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<IdentifierToken>___in__"(%"Array<IdentifierToken>.676516"* %.1, %IdentifierToken.676420* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %IdentifierToken.676420* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.19, i64 0, i32 5
  %.21 = load %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)*, %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)** %.20, align 8
  %.22 = call %IdentifierToken.676420* %.21(%"Array<IdentifierToken>.676516"* %.1, i64 %storemerge4)
  %1 = ptrtoint %IdentifierToken.676420* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<IdentifierToken>_find"(%"Array<IdentifierToken>.676516"* nocapture readonly %.1, %IdentifierToken.676420* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 1
  %.19 = load %IdentifierToken.676420**, %IdentifierToken.676420*** %.18, align 8
  %0 = ptrtoint %IdentifierToken.676420* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %IdentifierToken.676420*, %IdentifierToken.676420** %.19, i64 %storemerge5
  %1 = bitcast %IdentifierToken.676420** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<IdentifierToken>_join"(%"Array<IdentifierToken>.676516"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.158, i64 0, i64 0), i64 16)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.158, i64 0, i64 0), i64 16)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<IdentifierToken>___as_string__"(%"Array<IdentifierToken>.676516"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.1, i64 0, i32 0
  %.7 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<IdentifierToken>.676516"*, %string.676378*)*, %string.676378* (%"Array<IdentifierToken>.676516"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<IdentifierToken>.676516"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @ImportNode_constructor(%ImportNode.676514* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<IdentifierToken>_vtable_ty.676517"**
  store %"Array<IdentifierToken>_vtable_ty.676517"* @"Array<IdentifierToken>_vtable_data", %"Array<IdentifierToken>_vtable_ty.676517"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ImportNode.676514, %ImportNode.676514* %.1, i64 0, i32 1
  %3 = bitcast %"Array<IdentifierToken>.676516"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FunctionDeclarationNode>_constructor"(%"Array<FunctionDeclarationNode>.676522"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionDeclarationNode.676490*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FunctionDeclarationNode>_resize"(%"Array<FunctionDeclarationNode>.676522"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionDeclarationNode.676490*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FunctionDeclarationNode>_swap"(%"Array<FunctionDeclarationNode>.676522"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %.48 = load %FunctionDeclarationNode.676490**, %FunctionDeclarationNode.676490*** %.47, align 8
  %.49 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.48, i64 %.2
  %4 = bitcast %FunctionDeclarationNode.676490** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.48, i64 %.3
  %5 = bitcast %FunctionDeclarationNode.676490** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FunctionDeclarationNode.676490**, %FunctionDeclarationNode.676490*** %.47, align 8
  %.69 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.67, i64 %.3
  %6 = bitcast %FunctionDeclarationNode.676490** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionDeclarationNode>___sl__"(%"Array<FunctionDeclarationNode>.676522"* %.1, %FunctionDeclarationNode.676490* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 0
  %.17 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FunctionDeclarationNode>.676522"*)*, void (%"Array<FunctionDeclarationNode>.676522"*)** %.18, align 8
  call void %.19(%"Array<FunctionDeclarationNode>.676522"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %.31 = load %FunctionDeclarationNode.676490**, %FunctionDeclarationNode.676490*** %.30, align 8
  %.33 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.31, i64 %.24
  store %FunctionDeclarationNode.676490* %.2, %FunctionDeclarationNode.676490** %.33, align 8
  ret void
}

define void @"Array<FunctionDeclarationNode>___setitem__"(%"Array<FunctionDeclarationNode>.676522"* nocapture readonly %.1, i64 %.2, %FunctionDeclarationNode.676490* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %.30 = load %FunctionDeclarationNode.676490**, %FunctionDeclarationNode.676490*** %.29, align 8
  %.32 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.30, i64 %.2
  store %FunctionDeclarationNode.676490* %.3, %FunctionDeclarationNode.676490** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionDeclarationNode>_append"(%"Array<FunctionDeclarationNode>.676522"* %.1, %FunctionDeclarationNode.676490* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 0
  %.9 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)*, void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)** %.10, align 8
  call void %.11(%"Array<FunctionDeclarationNode>.676522"* %.1, %FunctionDeclarationNode.676490* %.2)
  ret void
}

define %FunctionDeclarationNode.676490* @"Array<FunctionDeclarationNode>___getitem__"(%"Array<FunctionDeclarationNode>.676522"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %.28 = load %FunctionDeclarationNode.676490**, %FunctionDeclarationNode.676490*** %.27, align 8
  %.29 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.28, i64 %.2
  %.30 = load %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.29, align 8
  ret %FunctionDeclarationNode.676490* %.30

.4.endif:                                         ; preds = %.4
  ret %FunctionDeclarationNode.676490* null
}

define i1 @"Array<FunctionDeclarationNode>___eq__"(%"Array<FunctionDeclarationNode>.676522"* %.1, %"Array<FunctionDeclarationNode>.676522"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.28, i64 0, i32 5
  %.30 = load %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)*, %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)** %.29, align 8
  %.31 = call %FunctionDeclarationNode.676490* %.30(%"Array<FunctionDeclarationNode>.676522"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.35, i64 0, i32 5
  %.37 = load %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)*, %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)** %.36, align 8
  %.38 = call %FunctionDeclarationNode.676490* %.37(%"Array<FunctionDeclarationNode>.676522"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FunctionDeclarationNode.676490* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FunctionDeclarationNode.676490* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FunctionDeclarationNode>___in__"(%"Array<FunctionDeclarationNode>.676522"* %.1, %FunctionDeclarationNode.676490* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FunctionDeclarationNode.676490* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.19, i64 0, i32 5
  %.21 = load %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)*, %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)** %.20, align 8
  %.22 = call %FunctionDeclarationNode.676490* %.21(%"Array<FunctionDeclarationNode>.676522"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FunctionDeclarationNode.676490* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FunctionDeclarationNode>_find"(%"Array<FunctionDeclarationNode>.676522"* nocapture readonly %.1, %FunctionDeclarationNode.676490* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 1
  %.19 = load %FunctionDeclarationNode.676490**, %FunctionDeclarationNode.676490*** %.18, align 8
  %0 = ptrtoint %FunctionDeclarationNode.676490* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FunctionDeclarationNode.676490*, %FunctionDeclarationNode.676490** %.19, i64 %storemerge5
  %1 = bitcast %FunctionDeclarationNode.676490** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<FunctionDeclarationNode>_join"(%"Array<FunctionDeclarationNode>.676522"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.159, i64 0, i64 0), i64 24)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.159, i64 0, i64 0), i64 24)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<FunctionDeclarationNode>___as_string__"(%"Array<FunctionDeclarationNode>.676522"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.1, i64 0, i32 0
  %.7 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<FunctionDeclarationNode>.676522"*, %string.676378*)*, %string.676378* (%"Array<FunctionDeclarationNode>.676522"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<FunctionDeclarationNode>.676522"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ClassDeclarationNode>_constructor"(%"Array<ClassDeclarationNode>.676523"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %0 = bitcast %ClassDeclarationNode.676500*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassDeclarationNode>_resize"(%"Array<ClassDeclarationNode>.676523"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %0 = bitcast %ClassDeclarationNode.676500*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassDeclarationNode>_swap"(%"Array<ClassDeclarationNode>.676523"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %.48 = load %ClassDeclarationNode.676500**, %ClassDeclarationNode.676500*** %.47, align 8
  %.49 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.48, i64 %.2
  %4 = bitcast %ClassDeclarationNode.676500** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.48, i64 %.3
  %5 = bitcast %ClassDeclarationNode.676500** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassDeclarationNode.676500**, %ClassDeclarationNode.676500*** %.47, align 8
  %.69 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.67, i64 %.3
  %6 = bitcast %ClassDeclarationNode.676500** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassDeclarationNode>___sl__"(%"Array<ClassDeclarationNode>.676523"* %.1, %ClassDeclarationNode.676500* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassDeclarationNode>.676523"*)*, void (%"Array<ClassDeclarationNode>.676523"*)** %.18, align 8
  call void %.19(%"Array<ClassDeclarationNode>.676523"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %.31 = load %ClassDeclarationNode.676500**, %ClassDeclarationNode.676500*** %.30, align 8
  %.33 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.31, i64 %.24
  store %ClassDeclarationNode.676500* %.2, %ClassDeclarationNode.676500** %.33, align 8
  ret void
}

define void @"Array<ClassDeclarationNode>___setitem__"(%"Array<ClassDeclarationNode>.676523"* nocapture readonly %.1, i64 %.2, %ClassDeclarationNode.676500* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %.30 = load %ClassDeclarationNode.676500**, %ClassDeclarationNode.676500*** %.29, align 8
  %.32 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.30, i64 %.2
  store %ClassDeclarationNode.676500* %.3, %ClassDeclarationNode.676500** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassDeclarationNode>_append"(%"Array<ClassDeclarationNode>.676523"* %.1, %ClassDeclarationNode.676500* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)*, void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)** %.10, align 8
  call void %.11(%"Array<ClassDeclarationNode>.676523"* %.1, %ClassDeclarationNode.676500* %.2)
  ret void
}

define %ClassDeclarationNode.676500* @"Array<ClassDeclarationNode>___getitem__"(%"Array<ClassDeclarationNode>.676523"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %.28 = load %ClassDeclarationNode.676500**, %ClassDeclarationNode.676500*** %.27, align 8
  %.29 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.28, i64 %.2
  %.30 = load %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.29, align 8
  ret %ClassDeclarationNode.676500* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassDeclarationNode.676500* null
}

define i1 @"Array<ClassDeclarationNode>___eq__"(%"Array<ClassDeclarationNode>.676523"* %.1, %"Array<ClassDeclarationNode>.676523"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.28, i64 0, i32 5
  %.30 = load %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)*, %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)** %.29, align 8
  %.31 = call %ClassDeclarationNode.676500* %.30(%"Array<ClassDeclarationNode>.676523"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.35, i64 0, i32 5
  %.37 = load %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)*, %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)** %.36, align 8
  %.38 = call %ClassDeclarationNode.676500* %.37(%"Array<ClassDeclarationNode>.676523"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassDeclarationNode.676500* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassDeclarationNode.676500* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassDeclarationNode>___in__"(%"Array<ClassDeclarationNode>.676523"* %.1, %ClassDeclarationNode.676500* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassDeclarationNode.676500* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.19, i64 0, i32 5
  %.21 = load %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)*, %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)** %.20, align 8
  %.22 = call %ClassDeclarationNode.676500* %.21(%"Array<ClassDeclarationNode>.676523"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassDeclarationNode.676500* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassDeclarationNode>_find"(%"Array<ClassDeclarationNode>.676523"* nocapture readonly %.1, %ClassDeclarationNode.676500* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 1
  %.19 = load %ClassDeclarationNode.676500**, %ClassDeclarationNode.676500*** %.18, align 8
  %0 = ptrtoint %ClassDeclarationNode.676500* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.19, i64 %storemerge5
  %1 = bitcast %ClassDeclarationNode.676500** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ClassDeclarationNode>_join"(%"Array<ClassDeclarationNode>.676523"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.160, i64 0, i64 0), i64 21)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.160, i64 0, i64 0), i64 21)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ClassDeclarationNode>___as_string__"(%"Array<ClassDeclarationNode>.676523"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ClassDeclarationNode>.676523"*, %string.676378*)*, %string.676378* (%"Array<ClassDeclarationNode>.676523"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ClassDeclarationNode>.676523"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<EnumNode>_constructor"(%"Array<EnumNode>.676524"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNode.676510*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumNode>_resize"(%"Array<EnumNode>.676524"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %0 = bitcast %EnumNode.676510*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumNode>_swap"(%"Array<EnumNode>.676524"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %.48 = load %EnumNode.676510**, %EnumNode.676510*** %.47, align 8
  %.49 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.48, i64 %.2
  %4 = bitcast %EnumNode.676510** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.48, i64 %.3
  %5 = bitcast %EnumNode.676510** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumNode.676510**, %EnumNode.676510*** %.47, align 8
  %.69 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.67, i64 %.3
  %6 = bitcast %EnumNode.676510** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNode>___sl__"(%"Array<EnumNode>.676524"* %.1, %EnumNode.676510* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumNode>.676524"*)*, void (%"Array<EnumNode>.676524"*)** %.18, align 8
  call void %.19(%"Array<EnumNode>.676524"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %.31 = load %EnumNode.676510**, %EnumNode.676510*** %.30, align 8
  %.33 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.31, i64 %.24
  store %EnumNode.676510* %.2, %EnumNode.676510** %.33, align 8
  ret void
}

define void @"Array<EnumNode>___setitem__"(%"Array<EnumNode>.676524"* nocapture readonly %.1, i64 %.2, %EnumNode.676510* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %.30 = load %EnumNode.676510**, %EnumNode.676510*** %.29, align 8
  %.32 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.30, i64 %.2
  store %EnumNode.676510* %.3, %EnumNode.676510** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumNode>_append"(%"Array<EnumNode>.676524"* %.1, %EnumNode.676510* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)*, void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)** %.10, align 8
  call void %.11(%"Array<EnumNode>.676524"* %.1, %EnumNode.676510* %.2)
  ret void
}

define %EnumNode.676510* @"Array<EnumNode>___getitem__"(%"Array<EnumNode>.676524"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %.28 = load %EnumNode.676510**, %EnumNode.676510*** %.27, align 8
  %.29 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.28, i64 %.2
  %.30 = load %EnumNode.676510*, %EnumNode.676510** %.29, align 8
  ret %EnumNode.676510* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumNode.676510* null
}

define i1 @"Array<EnumNode>___eq__"(%"Array<EnumNode>.676524"* %.1, %"Array<EnumNode>.676524"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.28, i64 0, i32 5
  %.30 = load %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)*, %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)** %.29, align 8
  %.31 = call %EnumNode.676510* %.30(%"Array<EnumNode>.676524"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.35, i64 0, i32 5
  %.37 = load %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)*, %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)** %.36, align 8
  %.38 = call %EnumNode.676510* %.37(%"Array<EnumNode>.676524"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumNode.676510* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumNode.676510* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumNode>___in__"(%"Array<EnumNode>.676524"* %.1, %EnumNode.676510* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumNode.676510* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.19, i64 0, i32 5
  %.21 = load %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)*, %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)** %.20, align 8
  %.22 = call %EnumNode.676510* %.21(%"Array<EnumNode>.676524"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumNode.676510* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumNode>_find"(%"Array<EnumNode>.676524"* nocapture readonly %.1, %EnumNode.676510* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 1
  %.19 = load %EnumNode.676510**, %EnumNode.676510*** %.18, align 8
  %0 = ptrtoint %EnumNode.676510* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumNode.676510*, %EnumNode.676510** %.19, i64 %storemerge5
  %1 = bitcast %EnumNode.676510** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<EnumNode>_join"(%"Array<EnumNode>.676524"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.161, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.161, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<EnumNode>___as_string__"(%"Array<EnumNode>.676524"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<EnumNode>.676524"*, %string.676378*)*, %string.676378* (%"Array<EnumNode>.676524"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<EnumNode>.676524"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ImportNode>_constructor"(%"Array<ImportNode>.676525"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %0 = bitcast %ImportNode.676514*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ImportNode>_resize"(%"Array<ImportNode>.676525"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %0 = bitcast %ImportNode.676514*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ImportNode>_swap"(%"Array<ImportNode>.676525"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %.48 = load %ImportNode.676514**, %ImportNode.676514*** %.47, align 8
  %.49 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.48, i64 %.2
  %4 = bitcast %ImportNode.676514** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.48, i64 %.3
  %5 = bitcast %ImportNode.676514** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ImportNode.676514**, %ImportNode.676514*** %.47, align 8
  %.69 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.67, i64 %.3
  %6 = bitcast %ImportNode.676514** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ImportNode>___sl__"(%"Array<ImportNode>.676525"* %.1, %ImportNode.676514* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 0
  %.17 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ImportNode>.676525"*)*, void (%"Array<ImportNode>.676525"*)** %.18, align 8
  call void %.19(%"Array<ImportNode>.676525"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %.31 = load %ImportNode.676514**, %ImportNode.676514*** %.30, align 8
  %.33 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.31, i64 %.24
  store %ImportNode.676514* %.2, %ImportNode.676514** %.33, align 8
  ret void
}

define void @"Array<ImportNode>___setitem__"(%"Array<ImportNode>.676525"* nocapture readonly %.1, i64 %.2, %ImportNode.676514* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %.30 = load %ImportNode.676514**, %ImportNode.676514*** %.29, align 8
  %.32 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.30, i64 %.2
  store %ImportNode.676514* %.3, %ImportNode.676514** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ImportNode>_append"(%"Array<ImportNode>.676525"* %.1, %ImportNode.676514* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 0
  %.9 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)*, void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)** %.10, align 8
  call void %.11(%"Array<ImportNode>.676525"* %.1, %ImportNode.676514* %.2)
  ret void
}

define %ImportNode.676514* @"Array<ImportNode>___getitem__"(%"Array<ImportNode>.676525"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %.28 = load %ImportNode.676514**, %ImportNode.676514*** %.27, align 8
  %.29 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.28, i64 %.2
  %.30 = load %ImportNode.676514*, %ImportNode.676514** %.29, align 8
  ret %ImportNode.676514* %.30

.4.endif:                                         ; preds = %.4
  ret %ImportNode.676514* null
}

define i1 @"Array<ImportNode>___eq__"(%"Array<ImportNode>.676525"* %.1, %"Array<ImportNode>.676525"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.28, i64 0, i32 5
  %.30 = load %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)*, %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)** %.29, align 8
  %.31 = call %ImportNode.676514* %.30(%"Array<ImportNode>.676525"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.35, i64 0, i32 5
  %.37 = load %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)*, %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)** %.36, align 8
  %.38 = call %ImportNode.676514* %.37(%"Array<ImportNode>.676525"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ImportNode.676514* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ImportNode.676514* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ImportNode>___in__"(%"Array<ImportNode>.676525"* %.1, %ImportNode.676514* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ImportNode.676514* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.19, i64 0, i32 5
  %.21 = load %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)*, %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)** %.20, align 8
  %.22 = call %ImportNode.676514* %.21(%"Array<ImportNode>.676525"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ImportNode.676514* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ImportNode>_find"(%"Array<ImportNode>.676525"* nocapture readonly %.1, %ImportNode.676514* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 1
  %.19 = load %ImportNode.676514**, %ImportNode.676514*** %.18, align 8
  %0 = ptrtoint %ImportNode.676514* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ImportNode.676514*, %ImportNode.676514** %.19, i64 %storemerge5
  %1 = bitcast %ImportNode.676514** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ImportNode>_join"(%"Array<ImportNode>.676525"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.162, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.162, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ImportNode>___as_string__"(%"Array<ImportNode>.676525"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.1, i64 0, i32 0
  %.7 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ImportNode>.676525"*, %string.676378*)*, %string.676378* (%"Array<ImportNode>.676525"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ImportNode>.676525"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ConstDeclarationStatement>_constructor"(%"Array<ConstDeclarationStatement>.676526"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclarationStatement.676486*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ConstDeclarationStatement>_resize"(%"Array<ConstDeclarationStatement>.676526"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclarationStatement.676486*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ConstDeclarationStatement>_swap"(%"Array<ConstDeclarationStatement>.676526"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %.48 = load %ConstDeclarationStatement.676486**, %ConstDeclarationStatement.676486*** %.47, align 8
  %.49 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.48, i64 %.2
  %4 = bitcast %ConstDeclarationStatement.676486** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.48, i64 %.3
  %5 = bitcast %ConstDeclarationStatement.676486** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ConstDeclarationStatement.676486**, %ConstDeclarationStatement.676486*** %.47, align 8
  %.69 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.67, i64 %.3
  %6 = bitcast %ConstDeclarationStatement.676486** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclarationStatement>___sl__"(%"Array<ConstDeclarationStatement>.676526"* %.1, %ConstDeclarationStatement.676486* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 0
  %.17 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ConstDeclarationStatement>.676526"*)*, void (%"Array<ConstDeclarationStatement>.676526"*)** %.18, align 8
  call void %.19(%"Array<ConstDeclarationStatement>.676526"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %.31 = load %ConstDeclarationStatement.676486**, %ConstDeclarationStatement.676486*** %.30, align 8
  %.33 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.31, i64 %.24
  store %ConstDeclarationStatement.676486* %.2, %ConstDeclarationStatement.676486** %.33, align 8
  ret void
}

define void @"Array<ConstDeclarationStatement>___setitem__"(%"Array<ConstDeclarationStatement>.676526"* nocapture readonly %.1, i64 %.2, %ConstDeclarationStatement.676486* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %.30 = load %ConstDeclarationStatement.676486**, %ConstDeclarationStatement.676486*** %.29, align 8
  %.32 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.30, i64 %.2
  store %ConstDeclarationStatement.676486* %.3, %ConstDeclarationStatement.676486** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclarationStatement>_append"(%"Array<ConstDeclarationStatement>.676526"* %.1, %ConstDeclarationStatement.676486* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 0
  %.9 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)*, void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)** %.10, align 8
  call void %.11(%"Array<ConstDeclarationStatement>.676526"* %.1, %ConstDeclarationStatement.676486* %.2)
  ret void
}

define %ConstDeclarationStatement.676486* @"Array<ConstDeclarationStatement>___getitem__"(%"Array<ConstDeclarationStatement>.676526"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %.28 = load %ConstDeclarationStatement.676486**, %ConstDeclarationStatement.676486*** %.27, align 8
  %.29 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.28, i64 %.2
  %.30 = load %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.29, align 8
  ret %ConstDeclarationStatement.676486* %.30

.4.endif:                                         ; preds = %.4
  ret %ConstDeclarationStatement.676486* null
}

define i1 @"Array<ConstDeclarationStatement>___eq__"(%"Array<ConstDeclarationStatement>.676526"* %.1, %"Array<ConstDeclarationStatement>.676526"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.28, i64 0, i32 5
  %.30 = load %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)*, %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)** %.29, align 8
  %.31 = call %ConstDeclarationStatement.676486* %.30(%"Array<ConstDeclarationStatement>.676526"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.35, i64 0, i32 5
  %.37 = load %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)*, %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)** %.36, align 8
  %.38 = call %ConstDeclarationStatement.676486* %.37(%"Array<ConstDeclarationStatement>.676526"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ConstDeclarationStatement.676486* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ConstDeclarationStatement.676486* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ConstDeclarationStatement>___in__"(%"Array<ConstDeclarationStatement>.676526"* %.1, %ConstDeclarationStatement.676486* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ConstDeclarationStatement.676486* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.19, i64 0, i32 5
  %.21 = load %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)*, %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)** %.20, align 8
  %.22 = call %ConstDeclarationStatement.676486* %.21(%"Array<ConstDeclarationStatement>.676526"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ConstDeclarationStatement.676486* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ConstDeclarationStatement>_find"(%"Array<ConstDeclarationStatement>.676526"* nocapture readonly %.1, %ConstDeclarationStatement.676486* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 1
  %.19 = load %ConstDeclarationStatement.676486**, %ConstDeclarationStatement.676486*** %.18, align 8
  %0 = ptrtoint %ConstDeclarationStatement.676486* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ConstDeclarationStatement.676486*, %ConstDeclarationStatement.676486** %.19, i64 %storemerge5
  %1 = bitcast %ConstDeclarationStatement.676486** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ConstDeclarationStatement>_join"(%"Array<ConstDeclarationStatement>.676526"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.163, i64 0, i64 0), i64 26)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.163, i64 0, i64 0), i64 26)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ConstDeclarationStatement>___as_string__"(%"Array<ConstDeclarationStatement>.676526"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.1, i64 0, i32 0
  %.7 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ConstDeclarationStatement>.676526"*, %string.676378*)*, %string.676378* (%"Array<ConstDeclarationStatement>.676526"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ConstDeclarationStatement>.676526"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<VarDeclarationStatement>_constructor"(%"Array<VarDeclarationStatement>.676527"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclarationStatement.676484*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarDeclarationStatement>_resize"(%"Array<VarDeclarationStatement>.676527"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclarationStatement.676484*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<VarDeclarationStatement>_swap"(%"Array<VarDeclarationStatement>.676527"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %.48 = load %VarDeclarationStatement.676484**, %VarDeclarationStatement.676484*** %.47, align 8
  %.49 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.48, i64 %.2
  %4 = bitcast %VarDeclarationStatement.676484** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.48, i64 %.3
  %5 = bitcast %VarDeclarationStatement.676484** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %VarDeclarationStatement.676484**, %VarDeclarationStatement.676484*** %.47, align 8
  %.69 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.67, i64 %.3
  %6 = bitcast %VarDeclarationStatement.676484** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclarationStatement>___sl__"(%"Array<VarDeclarationStatement>.676527"* %.1, %VarDeclarationStatement.676484* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarDeclarationStatement>.676527"*)*, void (%"Array<VarDeclarationStatement>.676527"*)** %.18, align 8
  call void %.19(%"Array<VarDeclarationStatement>.676527"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %.31 = load %VarDeclarationStatement.676484**, %VarDeclarationStatement.676484*** %.30, align 8
  %.33 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.31, i64 %.24
  store %VarDeclarationStatement.676484* %.2, %VarDeclarationStatement.676484** %.33, align 8
  ret void
}

define void @"Array<VarDeclarationStatement>___setitem__"(%"Array<VarDeclarationStatement>.676527"* nocapture readonly %.1, i64 %.2, %VarDeclarationStatement.676484* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %.30 = load %VarDeclarationStatement.676484**, %VarDeclarationStatement.676484*** %.29, align 8
  %.32 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.30, i64 %.2
  store %VarDeclarationStatement.676484* %.3, %VarDeclarationStatement.676484** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclarationStatement>_append"(%"Array<VarDeclarationStatement>.676527"* %.1, %VarDeclarationStatement.676484* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)*, void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)** %.10, align 8
  call void %.11(%"Array<VarDeclarationStatement>.676527"* %.1, %VarDeclarationStatement.676484* %.2)
  ret void
}

define %VarDeclarationStatement.676484* @"Array<VarDeclarationStatement>___getitem__"(%"Array<VarDeclarationStatement>.676527"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %.28 = load %VarDeclarationStatement.676484**, %VarDeclarationStatement.676484*** %.27, align 8
  %.29 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.28, i64 %.2
  %.30 = load %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.29, align 8
  ret %VarDeclarationStatement.676484* %.30

.4.endif:                                         ; preds = %.4
  ret %VarDeclarationStatement.676484* null
}

define i1 @"Array<VarDeclarationStatement>___eq__"(%"Array<VarDeclarationStatement>.676527"* %.1, %"Array<VarDeclarationStatement>.676527"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.28, i64 0, i32 5
  %.30 = load %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)*, %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)** %.29, align 8
  %.31 = call %VarDeclarationStatement.676484* %.30(%"Array<VarDeclarationStatement>.676527"* %.1, i64 %storemerge3)
  %.35 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.35, i64 0, i32 5
  %.37 = load %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)*, %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)** %.36, align 8
  %.38 = call %VarDeclarationStatement.676484* %.37(%"Array<VarDeclarationStatement>.676527"* %.2, i64 %storemerge3)
  %0 = ptrtoint %VarDeclarationStatement.676484* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarDeclarationStatement.676484* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarDeclarationStatement>___in__"(%"Array<VarDeclarationStatement>.676527"* %.1, %VarDeclarationStatement.676484* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarDeclarationStatement.676484* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.19, i64 0, i32 5
  %.21 = load %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)*, %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)** %.20, align 8
  %.22 = call %VarDeclarationStatement.676484* %.21(%"Array<VarDeclarationStatement>.676527"* %.1, i64 %storemerge4)
  %1 = ptrtoint %VarDeclarationStatement.676484* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarDeclarationStatement>_find"(%"Array<VarDeclarationStatement>.676527"* nocapture readonly %.1, %VarDeclarationStatement.676484* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 1
  %.19 = load %VarDeclarationStatement.676484**, %VarDeclarationStatement.676484*** %.18, align 8
  %0 = ptrtoint %VarDeclarationStatement.676484* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarDeclarationStatement.676484*, %VarDeclarationStatement.676484** %.19, i64 %storemerge5
  %1 = bitcast %VarDeclarationStatement.676484** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<VarDeclarationStatement>_join"(%"Array<VarDeclarationStatement>.676527"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.164, i64 0, i64 0), i64 24)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.164, i64 0, i64 0), i64 24)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<VarDeclarationStatement>___as_string__"(%"Array<VarDeclarationStatement>.676527"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.1, i64 0, i32 0
  %.7 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<VarDeclarationStatement>.676527"*, %string.676378*)*, %string.676378* (%"Array<VarDeclarationStatement>.676527"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<VarDeclarationStatement>.676527"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<TypeAliasNode>_constructor"(%"Array<TypeAliasNode>.676528"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %0 = bitcast %TypeAliasNode.676518*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<TypeAliasNode>_resize"(%"Array<TypeAliasNode>.676528"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %0 = bitcast %TypeAliasNode.676518*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<TypeAliasNode>_swap"(%"Array<TypeAliasNode>.676528"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %.48 = load %TypeAliasNode.676518**, %TypeAliasNode.676518*** %.47, align 8
  %.49 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.48, i64 %.2
  %4 = bitcast %TypeAliasNode.676518** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.48, i64 %.3
  %5 = bitcast %TypeAliasNode.676518** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %TypeAliasNode.676518**, %TypeAliasNode.676518*** %.47, align 8
  %.69 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.67, i64 %.3
  %6 = bitcast %TypeAliasNode.676518** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeAliasNode>___sl__"(%"Array<TypeAliasNode>.676528"* %.1, %TypeAliasNode.676518* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 0
  %.17 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<TypeAliasNode>.676528"*)*, void (%"Array<TypeAliasNode>.676528"*)** %.18, align 8
  call void %.19(%"Array<TypeAliasNode>.676528"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %.31 = load %TypeAliasNode.676518**, %TypeAliasNode.676518*** %.30, align 8
  %.33 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.31, i64 %.24
  store %TypeAliasNode.676518* %.2, %TypeAliasNode.676518** %.33, align 8
  ret void
}

define void @"Array<TypeAliasNode>___setitem__"(%"Array<TypeAliasNode>.676528"* nocapture readonly %.1, i64 %.2, %TypeAliasNode.676518* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %.30 = load %TypeAliasNode.676518**, %TypeAliasNode.676518*** %.29, align 8
  %.32 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.30, i64 %.2
  store %TypeAliasNode.676518* %.3, %TypeAliasNode.676518** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<TypeAliasNode>_append"(%"Array<TypeAliasNode>.676528"* %.1, %TypeAliasNode.676518* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 0
  %.9 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)*, void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)** %.10, align 8
  call void %.11(%"Array<TypeAliasNode>.676528"* %.1, %TypeAliasNode.676518* %.2)
  ret void
}

define %TypeAliasNode.676518* @"Array<TypeAliasNode>___getitem__"(%"Array<TypeAliasNode>.676528"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %.28 = load %TypeAliasNode.676518**, %TypeAliasNode.676518*** %.27, align 8
  %.29 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.28, i64 %.2
  %.30 = load %TypeAliasNode.676518*, %TypeAliasNode.676518** %.29, align 8
  ret %TypeAliasNode.676518* %.30

.4.endif:                                         ; preds = %.4
  ret %TypeAliasNode.676518* null
}

define i1 @"Array<TypeAliasNode>___eq__"(%"Array<TypeAliasNode>.676528"* %.1, %"Array<TypeAliasNode>.676528"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.28, i64 0, i32 5
  %.30 = load %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)*, %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)** %.29, align 8
  %.31 = call %TypeAliasNode.676518* %.30(%"Array<TypeAliasNode>.676528"* %.1, i64 %storemerge3)
  %.35 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.35, i64 0, i32 5
  %.37 = load %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)*, %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)** %.36, align 8
  %.38 = call %TypeAliasNode.676518* %.37(%"Array<TypeAliasNode>.676528"* %.2, i64 %storemerge3)
  %0 = ptrtoint %TypeAliasNode.676518* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %TypeAliasNode.676518* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<TypeAliasNode>___in__"(%"Array<TypeAliasNode>.676528"* %.1, %TypeAliasNode.676518* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %TypeAliasNode.676518* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.19, i64 0, i32 5
  %.21 = load %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)*, %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)** %.20, align 8
  %.22 = call %TypeAliasNode.676518* %.21(%"Array<TypeAliasNode>.676528"* %.1, i64 %storemerge4)
  %1 = ptrtoint %TypeAliasNode.676518* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<TypeAliasNode>_find"(%"Array<TypeAliasNode>.676528"* nocapture readonly %.1, %TypeAliasNode.676518* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 1
  %.19 = load %TypeAliasNode.676518**, %TypeAliasNode.676518*** %.18, align 8
  %0 = ptrtoint %TypeAliasNode.676518* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %TypeAliasNode.676518*, %TypeAliasNode.676518** %.19, i64 %storemerge5
  %1 = bitcast %TypeAliasNode.676518** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<TypeAliasNode>_join"(%"Array<TypeAliasNode>.676528"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.165, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.165, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<TypeAliasNode>___as_string__"(%"Array<TypeAliasNode>.676528"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.1, i64 0, i32 0
  %.7 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<TypeAliasNode>.676528"*, %string.676378*)*, %string.676378* (%"Array<TypeAliasNode>.676528"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<TypeAliasNode>.676528"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @ModuleAST_constructor(%ModuleAST.676520* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<FunctionDeclarationNode>_vtable_ty.676529"**
  store %"Array<FunctionDeclarationNode>_vtable_ty.676529"* @"Array<FunctionDeclarationNode>_vtable_data", %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 1
  %3 = bitcast %"Array<FunctionDeclarationNode>.676522"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.25 to %"Array<ClassDeclarationNode>_vtable_ty.676530"**
  store %"Array<ClassDeclarationNode>_vtable_ty.676530"* @"Array<ClassDeclarationNode>_vtable_data", %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %4 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %4, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %5 = bitcast i8* %.31 to i64*
  store i64 0, i64* %5, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %6 = bitcast i8* %.33 to i64*
  store i64 8, i64* %6, align 8
  %.35 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 2
  %7 = bitcast %"Array<ClassDeclarationNode>.676523"** %.35 to i8**
  store i8* %.25, i8** %7, align 8
  %.39 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.41 to %"Array<ImportNode>_vtable_ty.676532"**
  store %"Array<ImportNode>_vtable_ty.676532"* @"Array<ImportNode>_vtable_data", %"Array<ImportNode>_vtable_ty.676532"** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %8 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %8, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %9 = bitcast i8* %.47 to i64*
  store i64 0, i64* %9, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %10 = bitcast i8* %.49 to i64*
  store i64 8, i64* %10, align 8
  %.51 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 4
  %11 = bitcast %"Array<ImportNode>.676525"** %.51 to i8**
  store i8* %.41, i8** %11, align 8
  %.55 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.57 to %"Array<ConstDeclarationStatement>_vtable_ty.676533"**
  store %"Array<ConstDeclarationStatement>_vtable_ty.676533"* @"Array<ConstDeclarationStatement>_vtable_data", %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %12 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %12, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %13 = bitcast i8* %.63 to i64*
  store i64 0, i64* %13, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %14 = bitcast i8* %.65 to i64*
  store i64 8, i64* %14, align 8
  %.67 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 5
  %15 = bitcast %"Array<ConstDeclarationStatement>.676526"** %.67 to i8**
  store i8* %.57, i8** %15, align 8
  %.71 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<VarDeclarationStatement>_vtable_ty.676534"**
  store %"Array<VarDeclarationStatement>_vtable_ty.676534"* @"Array<VarDeclarationStatement>_vtable_data", %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %16 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %16, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %17 = bitcast i8* %.79 to i64*
  store i64 0, i64* %17, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %18 = bitcast i8* %.81 to i64*
  store i64 8, i64* %18, align 8
  %.83 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 6
  %19 = bitcast %"Array<VarDeclarationStatement>.676527"** %.83 to i8**
  store i8* %.73, i8** %19, align 8
  %.87 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<EnumNode>_vtable_ty.676531"**
  store %"Array<EnumNode>_vtable_ty.676531"* @"Array<EnumNode>_vtable_data", %"Array<EnumNode>_vtable_ty.676531"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %20 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %20, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %21 = bitcast i8* %.95 to i64*
  store i64 0, i64* %21, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %22 = bitcast i8* %.97 to i64*
  store i64 8, i64* %22, align 8
  %.99 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 3
  %23 = bitcast %"Array<EnumNode>.676524"** %.99 to i8**
  store i8* %.89, i8** %23, align 8
  %.103 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.105 to %"Array<TypeAliasNode>_vtable_ty.676535"**
  store %"Array<TypeAliasNode>_vtable_ty.676535"* @"Array<TypeAliasNode>_vtable_data", %"Array<TypeAliasNode>_vtable_ty.676535"** %.107, align 8
  %.109 = getelementptr inbounds i8, i8* %.105, i64 8
  %24 = bitcast i8* %.109 to i8**
  store i8* %.103, i8** %24, align 8
  %.111 = getelementptr inbounds i8, i8* %.105, i64 16
  %25 = bitcast i8* %.111 to i64*
  store i64 0, i64* %25, align 8
  %.113 = getelementptr inbounds i8, i8* %.105, i64 24
  %26 = bitcast i8* %.113 to i64*
  store i64 8, i64* %26, align 8
  %.115 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.1, i64 0, i32 7
  %27 = bitcast %"Array<TypeAliasNode>.676528"** %.115 to i8**
  store i8* %.105, i8** %27, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Parser_constructor(%Parser.676536* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.7 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 4
  store i64 -1, i64* %.7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @Parser_can_parse(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp ne i64 %.9, 43
  %.12 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 2
  %.13 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 0
  %.17 = and i1 %.10, %.16
  ret i1 %.17
}

define void @Parser_error(%Parser.676536* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 2
  %.9 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.8, align 8
  %.12 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.13 = load %Token.676406*, %Token.676406** %.12, align 8
  %.14 = getelementptr inbounds %Token.676406, %Token.676406* %.13, i64 0, i32 2
  %.15 = load %FloRange.676382*, %FloRange.676382** %.14, align 8
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %FloError.676384*
  %.18 = bitcast i8* %.16 to %FloError_vtable_ty.676385**
  store %FloError_vtable_ty.676385* @FloError_vtable_data, %FloError_vtable_ty.676385** %.18, align 8
  call void @FloError_constructor(%FloError.676384* %.17, i64 2, %string.676378* %.2, %FloRange.676382* %.15)
  %.21 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.9, i64 0, i32 0
  %.22 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.22, i64 0, i32 2
  %.24 = load void (%"Array<FloError>.676397"*, %FloError.676384*)*, void (%"Array<FloError>.676397"*, %FloError.676384*)** %.23, align 8
  call void %.24(%"Array<FloError>.676397"* %.9, %FloError.676384* %.17)
  ret void
}

define void @Parser_advance(%Parser.676536* nocapture %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 4
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 1
  %.10 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %.9, align 8
  %.11 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.10, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp slt i64 %.7, %.12
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.19 = add i64 %.7, 1
  store i64 %.19, i64* %.6, align 8
  %.26 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.10, i64 0, i32 0
  %.27 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.27, i64 0, i32 5
  %.29 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.28, align 8
  %.30 = call %Token.676406* %.29(%"Array<Token>.676417"* %.10, i64 %.19)
  %.31 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  store %Token.676406* %.30, %Token.676406** %.31, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret void
}

define %Token.676406* @Parser_peek(%Parser.676536* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 4
  %.9 = load i64, i64* %.8, align 8
  %.11 = add i64 %.9, %.2
  %.15 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 1
  %.16 = load %"Array<Token>.676417"*, %"Array<Token>.676417"** %.15, align 8
  %.17 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.16, i64 0, i32 2
  %.18 = load i64, i64* %.17, align 8
  %.19 = icmp slt i64 %.11, %.18
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.25 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.16, i64 0, i32 0
  %.26 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.26, i64 0, i32 5
  %.28 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.27, align 8
  %.29 = call %Token.676406* %.28(%"Array<Token>.676417"* %.16, i64 %.11)
  ret %Token.676406* %.29

.4.endif:                                         ; preds = %.4
  %.36 = add i64 %.18, -1
  %.40 = getelementptr inbounds %"Array<Token>.676417", %"Array<Token>.676417"* %.16, i64 0, i32 0
  %.41 = load %"Array<Token>_vtable_ty.676418"*, %"Array<Token>_vtable_ty.676418"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<Token>_vtable_ty.676418", %"Array<Token>_vtable_ty.676418"* %.41, i64 0, i32 5
  %.43 = load %Token.676406* (%"Array<Token>.676417"*, i64)*, %Token.676406* (%"Array<Token>.676417"*, i64)** %.42, align 8
  %.44 = call %Token.676406* %.43(%"Array<Token>.676417"* %.16, i64 %.36)
  ret %Token.676406* %.44
}

define %Token.676406* @Parser_eat(%Parser.676536* %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.9 = load %Token.676406*, %Token.676406** %.8, align 8
  %.13 = getelementptr inbounds %Token.676406, %Token.676406* %.9, i64 0, i32 1
  %.14 = load i64, i64* %.13, align 8
  %.15 = icmp eq i64 %.14, %.2
  br i1 %.15, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.18 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.19 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.19, i64 0, i32 2
  %.21 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.20, align 8
  call void %.21(%Parser.676536* %.1)
  ret %Token.676406* %.9

.4.else:                                          ; preds = %.4
  switch i64 %.2, label %.4.else.else.else.else.else.else.else.else.else.if [
    i64 50, label %.4.else.if
    i64 35, label %.4.else.else.if
    i64 0, label %.4.else.else.else.if
    i64 22, label %.4.else.else.else.else.if
    i64 23, label %.4.else.else.else.else.else.if
    i64 24, label %.4.else.else.else.else.else.else.if
    i64 25, label %.4.else.else.else.else.else.else.else.if
    i64 2, label %.4.else.else.else.else.else.else.else.else.if
  ]

.4.else.if:                                       ; preds = %.4.else
  %.29 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.30 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.29, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.30, i64 0, i32 1
  %.32 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.31, align 8
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.676378*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.34.repack, align 8
  %.34.repack25 = getelementptr inbounds i8, i8* %.33, i64 8
  %0 = bitcast i8* %.34.repack25 to i8**
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.166, i64 0, i64 0), i8** %0, align 8
  %.34.repack26 = getelementptr inbounds i8, i8* %.33, i64 16
  %1 = bitcast i8* %.34.repack26 to i64*
  store i64 22, i64* %1, align 8
  %.34.repack27 = getelementptr inbounds i8, i8* %.33, i64 24
  %2 = bitcast i8* %.34.repack27 to i64*
  store i64 22, i64* %2, align 8
  call void %.32(%Parser.676536* %.1, %string.676378* %.34)
  br label %.4.else.endif

.4.else.endif:                                    ; preds = %.4.else.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.else.if, %.4.else.else.else.else.else.else.if, %.4.else.else.else.else.else.if, %.4.else.else.else.else.if, %.4.else.else.else.if, %.4.else.else.if, %.4.else.if
  %.177 = getelementptr inbounds %Token.676406, %Token.676406* %.9, i64 0, i32 2
  %.178 = load %FloRange.676382*, %FloRange.676382** %.177, align 8
  %.179 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.180 = bitcast i8* %.179 to %Token.676406*
  %.181 = bitcast i8* %.179 to %Token_vtable_ty.676407**
  store %Token_vtable_ty.676407* @Token_vtable_data, %Token_vtable_ty.676407** %.181, align 8
  call void @Token_constructor(%Token.676406* %.180, i64 43, %FloRange.676382* %.178)
  ret %Token.676406* %.180

.4.else.else.if:                                  ; preds = %.4.else
  %.42 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.42, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 1
  %.45 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.44, align 8
  %.46 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.47 = bitcast i8* %.46 to %string.676378*
  %.47.repack = bitcast i8* %.46 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.47.repack, align 8
  %.47.repack22 = getelementptr inbounds i8, i8* %.46, i64 8
  %3 = bitcast i8* %.47.repack22 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.167, i64 0, i64 0), i8** %3, align 8
  %.47.repack23 = getelementptr inbounds i8, i8* %.46, i64 16
  %4 = bitcast i8* %.47.repack23 to i64*
  store i64 12, i64* %4, align 8
  %.47.repack24 = getelementptr inbounds i8, i8* %.46, i64 24
  %5 = bitcast i8* %.47.repack24 to i64*
  store i64 12, i64* %5, align 8
  call void %.45(%Parser.676536* %.1, %string.676378* %.47)
  br label %.4.else.endif

.4.else.else.else.if:                             ; preds = %.4.else
  %.55 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.56 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.55, align 8
  %.57 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.56, i64 0, i32 1
  %.58 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.57, align 8
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.676378*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.60.repack, align 8
  %.60.repack19 = getelementptr inbounds i8, i8* %.59, i64 8
  %6 = bitcast i8* %.60.repack19 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.168, i64 0, i64 0), i8** %6, align 8
  %.60.repack20 = getelementptr inbounds i8, i8* %.59, i64 16
  %7 = bitcast i8* %.60.repack20 to i64*
  store i64 12, i64* %7, align 8
  %.60.repack21 = getelementptr inbounds i8, i8* %.59, i64 24
  %8 = bitcast i8* %.60.repack21 to i64*
  store i64 12, i64* %8, align 8
  call void %.58(%Parser.676536* %.1, %string.676378* %.60)
  br label %.4.else.endif

.4.else.else.else.else.if:                        ; preds = %.4.else
  %.68 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.69 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.68, align 8
  %.70 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.69, i64 0, i32 1
  %.71 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.70, align 8
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.676378*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.73.repack, align 8
  %.73.repack16 = getelementptr inbounds i8, i8* %.72, i64 8
  %9 = bitcast i8* %.73.repack16 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.169, i64 0, i64 0), i8** %9, align 8
  %.73.repack17 = getelementptr inbounds i8, i8* %.72, i64 16
  %10 = bitcast i8* %.73.repack17 to i64*
  store i64 12, i64* %10, align 8
  %.73.repack18 = getelementptr inbounds i8, i8* %.72, i64 24
  %11 = bitcast i8* %.73.repack18 to i64*
  store i64 12, i64* %11, align 8
  call void %.71(%Parser.676536* %.1, %string.676378* %.73)
  br label %.4.else.endif

.4.else.else.else.else.else.if:                   ; preds = %.4.else
  %.81 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.82 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.81, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.82, i64 0, i32 1
  %.84 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.83, align 8
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.676378*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.86.repack, align 8
  %.86.repack13 = getelementptr inbounds i8, i8* %.85, i64 8
  %12 = bitcast i8* %.86.repack13 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.170, i64 0, i64 0), i8** %12, align 8
  %.86.repack14 = getelementptr inbounds i8, i8* %.85, i64 16
  %13 = bitcast i8* %.86.repack14 to i64*
  store i64 12, i64* %13, align 8
  %.86.repack15 = getelementptr inbounds i8, i8* %.85, i64 24
  %14 = bitcast i8* %.86.repack15 to i64*
  store i64 12, i64* %14, align 8
  call void %.84(%Parser.676536* %.1, %string.676378* %.86)
  br label %.4.else.endif

.4.else.else.else.else.else.else.if:              ; preds = %.4.else
  %.94 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.95 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.94, align 8
  %.96 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.95, i64 0, i32 1
  %.97 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.96, align 8
  %.98 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.676378*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.99.repack, align 8
  %.99.repack10 = getelementptr inbounds i8, i8* %.98, i64 8
  %15 = bitcast i8* %.99.repack10 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.171, i64 0, i64 0), i8** %15, align 8
  %.99.repack11 = getelementptr inbounds i8, i8* %.98, i64 16
  %16 = bitcast i8* %.99.repack11 to i64*
  store i64 12, i64* %16, align 8
  %.99.repack12 = getelementptr inbounds i8, i8* %.98, i64 24
  %17 = bitcast i8* %.99.repack12 to i64*
  store i64 12, i64* %17, align 8
  call void %.97(%Parser.676536* %.1, %string.676378* %.99)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.if:         ; preds = %.4.else
  %.107 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.108 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.107, align 8
  %.109 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.108, i64 0, i32 1
  %.110 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.109, align 8
  %.111 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.112 = bitcast i8* %.111 to %string.676378*
  %.112.repack = bitcast i8* %.111 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.112.repack, align 8
  %.112.repack7 = getelementptr inbounds i8, i8* %.111, i64 8
  %18 = bitcast i8* %.112.repack7 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.172, i64 0, i64 0), i8** %18, align 8
  %.112.repack8 = getelementptr inbounds i8, i8* %.111, i64 16
  %19 = bitcast i8* %.112.repack8 to i64*
  store i64 12, i64* %19, align 8
  %.112.repack9 = getelementptr inbounds i8, i8* %.111, i64 24
  %20 = bitcast i8* %.112.repack9 to i64*
  store i64 12, i64* %20, align 8
  call void %.110(%Parser.676536* %.1, %string.676378* %.112)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.else.if:    ; preds = %.4.else
  %.120 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.121 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.120, align 8
  %.122 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.121, i64 0, i32 1
  %.123 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.122, align 8
  %.124 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.676378*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.125.repack, align 8
  %.125.repack4 = getelementptr inbounds i8, i8* %.124, i64 8
  %21 = bitcast i8* %.125.repack4 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.173, i64 0, i64 0), i8** %21, align 8
  %.125.repack5 = getelementptr inbounds i8, i8* %.124, i64 16
  %22 = bitcast i8* %.125.repack5 to i64*
  store i64 12, i64* %22, align 8
  %.125.repack6 = getelementptr inbounds i8, i8* %.124, i64 24
  %23 = bitcast i8* %.125.repack6 to i64*
  store i64 12, i64* %23, align 8
  call void %.123(%Parser.676536* %.1, %string.676378* %.125)
  br label %.4.else.endif

.4.else.else.else.else.else.else.else.else.else.if: ; preds = %.4.else
  %.132 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.133 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.132, align 8
  %.134 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.133, i64 0, i32 1
  %.135 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.134, align 8
  %.136 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.137 = bitcast i8* %.136 to %string.676378*
  %.137.repack = bitcast i8* %.136 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.137.repack, align 8
  %.137.repack1 = getelementptr inbounds i8, i8* %.136, i64 8
  %24 = bitcast i8* %.137.repack1 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.174, i64 0, i64 0), i8** %24, align 8
  %.137.repack2 = getelementptr inbounds i8, i8* %.136, i64 16
  %25 = bitcast i8* %.137.repack2 to i64*
  store i64 12, i64* %25, align 8
  %.137.repack3 = getelementptr inbounds i8, i8* %.136, i64 24
  %26 = bitcast i8* %.137.repack3 to i64*
  store i64 12, i64* %26, align 8
  call void %.135(%Parser.676536* %.1, %string.676378* %.137)
  br label %.4.else.endif
}

define void @Parser_new_lines(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp eq i64 %.9, 30
  %.12 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.13, i64 0, i32 0
  %.15 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.14, align 8
  %.16 = call i1 %.15(%Parser.676536* %.1)
  %.17 = and i1 %.10, %.16
  br i1 %.17, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.3, %while.entry
  %.21 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.22 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.21, i64 0, i32 2
  %.23 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.22, align 8
  call void %.23(%Parser.676536* %.1)
  %.27 = load %Token.676406*, %Token.676406** %.6, align 8
  %.28 = getelementptr inbounds %Token.676406, %Token.676406* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30 = icmp eq i64 %.29, 30
  %.33 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.33, i64 0, i32 0
  %.35 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.34, align 8
  %.36 = call i1 %.35(%Parser.676536* %.1)
  %.37 = and i1 %.30, %.36
  br i1 %.37, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3
  ret void
}

define noalias %TypeNode.676426* @Parser_parse_primitive_type(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %TypeNode.676426*
  %.12 = bitcast i8* %.10 to %TypeNode_vtable_ty.676427**
  store %TypeNode_vtable_ty.676427* @TypeNode_vtable_data, %TypeNode_vtable_ty.676427** %.12, align 8
  call void @TypeNode_constructor(%TypeNode.676426* %.11, i64 12, %FloRange.676382* %.9)
  %.18 = load %Token.676406*, %Token.676406** %.6, align 8
  %.19 = getelementptr inbounds %Token.676406, %Token.676406* %.18, i64 0, i32 1
  %.20 = load i64, i64* %.19, align 8
  switch i64 %.20, label %.3.else.else.else.else.el...else.else.if [
    i64 58, label %.3.if
    i64 59, label %.3.else.if
    i64 60, label %.3.else.else.if
    i64 61, label %.3.else.else.else.if
    i64 62, label %.3.else.else.else.else.if
    i64 63, label %.3.else.else.else.else.else.if
    i64 64, label %.3.else.else.else.else.else.else.if
    i64 65, label %.3.else.else.else.else.else.else.else.if
    i64 66, label %.3.else.else.else.else.else.else.else.else.if
    i64 67, label %.3.else.else.else.else.else.else.else.else.else.if
    i64 68, label %.3.else.else.else.else.el...if
    i64 69, label %.3.else.else.else.else.el...else.if
    i64 70, label %.3.endif
  ]

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.24 to i64*
  store i64 0, i64* %0, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.else.else.else.else.el...else.else.if, %.3.else.else.else.else.el...else.if, %.3.else.else.else.else.el...if, %.3.else.else.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.else.if, %.3.else.else.else.else.else.else.if, %.3.else.else.else.else.else.if, %.3.else.else.else.else.if, %.3.else.else.else.if, %.3.else.else.if, %.3.else.if, %.3.if
  %.178 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.179 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.178, align 8
  %.180 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.179, i64 0, i32 2
  %.181 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.180, align 8
  call void %.181(%Parser.676536* %.1)
  ret %TypeNode.676426* %.11

.3.else.if:                                       ; preds = %.3
  %.35 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.35 to i64*
  store i64 1, i64* %1, align 8
  br label %.3.endif

.3.else.else.if:                                  ; preds = %.3
  %.46 = getelementptr inbounds i8, i8* %.10, i64 16
  %2 = bitcast i8* %.46 to i64*
  store i64 2, i64* %2, align 8
  br label %.3.endif

.3.else.else.else.if:                             ; preds = %.3
  %.57 = getelementptr inbounds i8, i8* %.10, i64 16
  %3 = bitcast i8* %.57 to i64*
  store i64 3, i64* %3, align 8
  br label %.3.endif

.3.else.else.else.else.if:                        ; preds = %.3
  %.68 = getelementptr inbounds i8, i8* %.10, i64 16
  %4 = bitcast i8* %.68 to i64*
  store i64 4, i64* %4, align 8
  br label %.3.endif

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.79 = getelementptr inbounds i8, i8* %.10, i64 16
  %5 = bitcast i8* %.79 to i64*
  store i64 5, i64* %5, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.90 = getelementptr inbounds i8, i8* %.10, i64 16
  %6 = bitcast i8* %.90 to i64*
  store i64 6, i64* %6, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.if:         ; preds = %.3
  %.101 = getelementptr inbounds i8, i8* %.10, i64 16
  %7 = bitcast i8* %.101 to i64*
  store i64 7, i64* %7, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.else.if:    ; preds = %.3
  %.112 = getelementptr inbounds i8, i8* %.10, i64 16
  %8 = bitcast i8* %.112 to i64*
  store i64 8, i64* %8, align 8
  br label %.3.endif

.3.else.else.else.else.else.else.else.else.else.if: ; preds = %.3
  %.123 = getelementptr inbounds i8, i8* %.10, i64 16
  %9 = bitcast i8* %.123 to i64*
  store i64 9, i64* %9, align 8
  br label %.3.endif

.3.else.else.else.else.el...if:                   ; preds = %.3
  %.134 = getelementptr inbounds i8, i8* %.10, i64 16
  %10 = bitcast i8* %.134 to i64*
  store i64 10, i64* %10, align 8
  br label %.3.endif

.3.else.else.else.else.el...else.if:              ; preds = %.3
  %.145 = getelementptr inbounds i8, i8* %.10, i64 16
  %11 = bitcast i8* %.145 to i64*
  store i64 11, i64* %11, align 8
  br label %.3.endif

.3.else.else.else.else.el...else.else.if:         ; preds = %.3
  %.156 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.157 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.156, align 8
  %.158 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.157, i64 0, i32 1
  %.159 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.158, align 8
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.676378*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.161.repack, align 8
  %.161.repack1 = getelementptr inbounds i8, i8* %.160, i64 8
  %12 = bitcast i8* %.161.repack1 to i8**
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @str.177, i64 0, i64 0), i8** %12, align 8
  %.161.repack2 = getelementptr inbounds i8, i8* %.160, i64 16
  %13 = bitcast i8* %.161.repack2 to i64*
  store i64 26, i64* %13, align 8
  %.161.repack3 = getelementptr inbounds i8, i8* %.160, i64 24
  %14 = bitcast i8* %.161.repack3 to i64*
  store i64 26, i64* %14, align 8
  call void %.159(%Parser.676536* %.1, %string.676378* %.161)
  br label %.3.endif
}

define void @Parser_parse_type_list(%Parser.676536* %.1, %"Array<TypeNode>.676430"* %.2) {
.4:
  %.9 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.10 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.11 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.10, i64 0, i32 10
  %.12 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.11, align 8
  %.13 = call %TypeNode.676426* %.12(%Parser.676536* %.1)
  %.14 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.2, i64 0, i32 0
  %.15 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.15, i64 0, i32 2
  %.17 = load void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)** %.16, align 8
  call void %.17(%"Array<TypeNode>.676430"* %.2, %TypeNode.676426* %.13)
  %.20 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.21 = load %Token.676406*, %Token.676406** %.20, align 8
  %.22 = getelementptr inbounds %Token.676406, %Token.676406* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.27 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.28, align 8
  %.30 = call i1 %.29(%Parser.676536* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 2
  %.37 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.36, align 8
  call void %.37(%Parser.676536* %.1)
  %.42 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.42, i64 0, i32 10
  %.44 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.43, align 8
  %.45 = call %TypeNode.676426* %.44(%Parser.676536* %.1)
  %.47 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.14, align 8
  %.48 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.47, i64 0, i32 2
  %.49 = load void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)** %.48, align 8
  call void %.49(%"Array<TypeNode>.676430"* %.2, %TypeNode.676426* %.45)
  %.53 = load %Token.676406*, %Token.676406** %.20, align 8
  %.54 = getelementptr inbounds %Token.676406, %Token.676406* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 2
  %.59 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.59, i64 0, i32 0
  %.61 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.60, align 8
  %.62 = call i1 %.61(%Parser.676536* %.1)
  %.63 = and i1 %.56, %.62
  br i1 %.63, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  ret void
}

define noalias %RecordTypeNode.676428* @Parser_parse_object_type(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 4
  %.9 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.8, align 8
  %.10 = call %Token.676406* %.9(%Parser.676536* %.1, i64 50)
  %.11 = bitcast %Token.676406* %.10 to %IdentifierToken.676420*
  %0 = getelementptr inbounds %Token.676406, %Token.676406* %.10, i64 0, i32 2
  %.16 = load %FloRange.676382*, %FloRange.676382** %0, align 8
  %.17 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.18 = bitcast i8* %.17 to %RecordTypeNode.676428*
  %.19 = bitcast i8* %.17 to %RecordTypeNode_vtable_ty.676429**
  store %RecordTypeNode_vtable_ty.676429* @RecordTypeNode_vtable_data, %RecordTypeNode_vtable_ty.676429** %.19, align 8
  call void @RecordTypeNode_constructor(%RecordTypeNode.676428* %.18, %IdentifierToken.676420* %.11, %FloRange.676382* %.16)
  %.24 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.25 = load %Token.676406*, %Token.676406** %.24, align 8
  %.26 = getelementptr inbounds %Token.676406, %Token.676406* %.25, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28 = icmp eq i64 %.27, 39
  br i1 %.28, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.32 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.32, i64 0, i32 2
  %.34 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.33, align 8
  call void %.34(%Parser.676536* %.1)
  %.38 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.38, i64 0, i32 7
  %.40 = load void (%Parser.676536*, %"Array<TypeNode>.676430"*)*, void (%Parser.676536*, %"Array<TypeNode>.676430"*)** %.39, align 8
  %.42 = getelementptr inbounds i8, i8* %.17, i64 32
  %1 = bitcast i8* %.42 to %"Array<TypeNode>.676430"**
  %.43 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %1, align 8
  call void %.40(%Parser.676536* %.1, %"Array<TypeNode>.676430"* %.43)
  %.47 = getelementptr inbounds i8, i8* %.17, i64 8
  %2 = bitcast i8* %.47 to %FloRange.676382**
  %.48 = load %FloRange.676382*, %FloRange.676382** %2, align 8
  %.51 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.51, i64 0, i32 4
  %.53 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.52, align 8
  %.54 = call %Token.676406* %.53(%Parser.676536* %.1, i64 38)
  %.55 = getelementptr inbounds %Token.676406, %Token.676406* %.54, i64 0, i32 2
  %.56 = load %FloRange.676382*, %FloRange.676382** %.55, align 8
  %.57 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.48, %FloRange.676382* %.56)
  store %FloRange.676382* %.57, %FloRange.676382** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %RecordTypeNode.676428* %.18
}

define noalias %FunctionTypeNode.676432* @Parser_parse_function_type(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %FunctionTypeNode.676432*
  %.12 = bitcast i8* %.10 to %FunctionTypeNode_vtable_ty.676433**
  store %FunctionTypeNode_vtable_ty.676433* @FunctionTypeNode_vtable_data, %FunctionTypeNode_vtable_ty.676433** %.12, align 8
  call void @FunctionTypeNode_constructor(%FunctionTypeNode.676432* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.24 = load %Token.676406*, %Token.676406** %.6, align 8
  %.25 = getelementptr inbounds %Token.676406, %Token.676406* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.26, 23
  br i1 %.27.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.31, i64 0, i32 7
  %.33 = load void (%Parser.676536*, %"Array<TypeNode>.676430"*)*, void (%Parser.676536*, %"Array<TypeNode>.676430"*)** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.35 to %"Array<TypeNode>.676430"**
  %.36 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %0, align 8
  call void %.33(%Parser.676536* %.1, %"Array<TypeNode>.676430"* %.36)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.41 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.41, i64 0, i32 4
  %.43 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.42, align 8
  %.44 = call %Token.676406* %.43(%Parser.676536* %.1, i64 23)
  %.47 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.47, i64 0, i32 4
  %.49 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.48, align 8
  %.50 = call %Token.676406* %.49(%Parser.676536* %.1, i64 42)
  %.54 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.54, i64 0, i32 10
  %.56 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.55, align 8
  %.57 = call %TypeNode.676426* %.56(%Parser.676536* %.1)
  %.58 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.58 to %TypeNode.676426**
  store %TypeNode.676426* %.57, %TypeNode.676426** %1, align 8
  %.62 = getelementptr inbounds i8, i8* %.10, i64 8
  %2 = bitcast i8* %.62 to %FloRange.676382**
  %.63 = load %FloRange.676382*, %FloRange.676382** %2, align 8
  %.67 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.57, i64 0, i32 1
  %.68 = load %FloRange.676382*, %FloRange.676382** %.67, align 8
  %.69 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.63, %FloRange.676382* %.68)
  store %FloRange.676382* %.69, %FloRange.676382** %2, align 8
  ret %FunctionTypeNode.676432* %.11
}

define %TypeNode.676426* @Parser_parse_type(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %TypeNode.676426*
  %.12 = bitcast i8* %.10 to %TypeNode_vtable_ty.676427**
  store %TypeNode_vtable_ty.676427* @TypeNode_vtable_data, %TypeNode_vtable_ty.676427** %.12, align 8
  call void @TypeNode_constructor(%TypeNode.676426* %.11, i64 12, %FloRange.676382* %.9)
  %.18 = load %Token.676406*, %Token.676406** %.6, align 8
  %.19 = getelementptr inbounds %Token.676406, %Token.676406* %.18, i64 0, i32 1
  %.20 = load i64, i64* %.19, align 8
  %.21 = icmp eq i64 %.20, 50
  br i1 %.21, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.24 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.25 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.24, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.25, i64 0, i32 8
  %.27 = load %RecordTypeNode.676428* (%Parser.676536*)*, %RecordTypeNode.676428* (%Parser.676536*)** %.26, align 8
  %.28 = call %RecordTypeNode.676428* %.27(%Parser.676536* %.1)
  %.29 = bitcast %RecordTypeNode.676428* %.28 to %TypeNode.676426*
  br label %.3.endif

.3.else:                                          ; preds = %.3
  %.37 = icmp eq i64 %.20, 22
  %.40 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.41 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.40, align 8
  br i1 %.37, label %.3.else.if, label %.3.else.else

.3.endif:                                         ; preds = %.3.else.if, %.3.else.else, %.3.if
  %type_node.0 = phi %TypeNode.676426* [ %.29, %.3.if ], [ %.45, %.3.else.if ], [ %.53, %.3.else.else ]
  %.59 = load %Token.676406*, %Token.676406** %.6, align 8
  %.60 = getelementptr inbounds %Token.676406, %Token.676406* %.59, i64 0, i32 1
  %.61 = load i64, i64* %.60, align 8
  %.62 = icmp eq i64 %.61, 26
  %.68 = icmp eq i64 %.61, 3
  %.69 = or i1 %.62, %.68
  %.71 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.72 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.71, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.72, i64 0, i32 0
  %.74 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.73, align 8
  %.75 = call i1 %.74(%Parser.676536* %.1)
  %.76 = and i1 %.69, %.75
  br i1 %.76, label %while.entry, label %while.exit

.3.else.if:                                       ; preds = %.3.else
  %.42 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.41, i64 0, i32 9
  %.43 = load %FunctionTypeNode.676432* (%Parser.676536*)*, %FunctionTypeNode.676432* (%Parser.676536*)** %.42, align 8
  %.44 = call %FunctionTypeNode.676432* %.43(%Parser.676536* %.1)
  %.45 = bitcast %FunctionTypeNode.676432* %.44 to %TypeNode.676426*
  br label %.3.endif

.3.else.else:                                     ; preds = %.3.else
  %.51 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.41, i64 0, i32 6
  %.52 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.51, align 8
  %.53 = call %TypeNode.676426* %.52(%Parser.676536* %.1)
  br label %.3.endif

while.entry:                                      ; preds = %.3.endif, %while.entry.endif
  %type_node.2 = phi %TypeNode.676426* [ %type_node.4, %while.entry.endif ], [ %type_node.0, %.3.endif ]
  %.80 = load %Token.676406*, %Token.676406** %.6, align 8
  %.81 = getelementptr inbounds %Token.676406, %Token.676406* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp eq i64 %.82, 26
  br i1 %.83, label %while.entry.if, label %while.entry.else

while.exit:                                       ; preds = %while.entry.endif, %.3.endif
  %type_node.3 = phi %TypeNode.676426* [ %type_node.0, %.3.endif ], [ %type_node.4, %while.entry.endif ]
  ret %TypeNode.676426* %type_node.3

while.entry.if:                                   ; preds = %while.entry
  %.87 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.71, align 8
  %.88 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.87, i64 0, i32 2
  %.89 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.88, align 8
  call void %.89(%Parser.676536* %.1)
  %.93 = load %Token.676406*, %Token.676406** %.6, align 8
  %.94 = getelementptr inbounds %Token.676406, %Token.676406* %.93, i64 0, i32 1
  %.95 = load i64, i64* %.94, align 8
  %.96 = icmp eq i64 %.95, 27
  br i1 %.96, label %while.entry.if.if, label %while.entry.if.else

while.entry.else:                                 ; preds = %while.entry
  %.176 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %type_node.2, i64 0, i32 1
  %.177 = load %FloRange.676382*, %FloRange.676382** %.176, align 8
  %.180 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.71, align 8
  %.181 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.180, i64 0, i32 4
  %.182 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.181, align 8
  %.183 = call %Token.676406* %.182(%Parser.676536* %.1, i64 3)
  %.184 = getelementptr inbounds %Token.676406, %Token.676406* %.183, i64 0, i32 2
  %.185 = load %FloRange.676382*, %FloRange.676382** %.184, align 8
  %.186 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.177, %FloRange.676382* %.185)
  %.187 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.188 = bitcast i8* %.187 to %PointerTypeNode.676434*
  %.189 = bitcast i8* %.187 to %PointerTypeNode_vtable_ty.676435**
  store %PointerTypeNode_vtable_ty.676435* @PointerTypeNode_vtable_data, %PointerTypeNode_vtable_ty.676435** %.189, align 8
  call void @PointerTypeNode_constructor(%PointerTypeNode.676434* %.188, %TypeNode.676426* %type_node.2, %FloRange.676382* %.186)
  %.192 = bitcast i8* %.187 to %TypeNode.676426*
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if.endif, %while.entry.else
  %type_node.4 = phi %TypeNode.676426* [ %type_node.5, %while.entry.if.endif ], [ %.192, %while.entry.else ]
  %.197 = load %Token.676406*, %Token.676406** %.6, align 8
  %.198 = getelementptr inbounds %Token.676406, %Token.676406* %.197, i64 0, i32 1
  %.199 = load i64, i64* %.198, align 8
  %.200 = icmp eq i64 %.199, 26
  %.206 = icmp eq i64 %.199, 3
  %.207 = or i1 %.200, %.206
  %.210 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.71, align 8
  %.211 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.210, i64 0, i32 0
  %.212 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.211, align 8
  %.213 = call i1 %.212(%Parser.676536* %.1)
  %.214 = and i1 %.207, %.213
  br i1 %.214, label %while.entry, label %while.exit

while.entry.if.if:                                ; preds = %while.entry.if
  %.98 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.99 = bitcast i8* %.98 to %string.676378*
  %.99.repack = bitcast i8* %.98 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.99.repack, align 8
  %.99.repack1 = getelementptr inbounds i8, i8* %.98, i64 8
  %0 = bitcast i8* %.99.repack1 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.178, i64 0, i64 0), i8** %0, align 8
  %.99.repack2 = getelementptr inbounds i8, i8* %.98, i64 16
  %1 = bitcast i8* %.99.repack2 to i64*
  store i64 5, i64* %1, align 8
  %.99.repack3 = getelementptr inbounds i8, i8* %.98, i64 24
  %2 = bitcast i8* %.99.repack3 to i64*
  store i64 5, i64* %2, align 8
  %.104 = getelementptr inbounds %Token.676406, %Token.676406* %.93, i64 0, i32 2
  %.105 = load %FloRange.676382*, %FloRange.676382** %.104, align 8
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %IdentifierToken.676420*
  %.108 = bitcast i8* %.106 to %IdentifierToken_vtable_ty.676421**
  store %IdentifierToken_vtable_ty.676421* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.676421** %.108, align 8
  call void @IdentifierToken_constructor(%IdentifierToken.676420* %.107, %string.676378* %.99, %FloRange.676382* %.105)
  %.113 = load %Token.676406*, %Token.676406** %.6, align 8
  %.114 = getelementptr inbounds %Token.676406, %Token.676406* %.113, i64 0, i32 2
  %.115 = load %FloRange.676382*, %FloRange.676382** %.114, align 8
  %.116 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.117 = bitcast i8* %.116 to %RecordTypeNode.676428*
  %.118 = bitcast i8* %.116 to %RecordTypeNode_vtable_ty.676429**
  store %RecordTypeNode_vtable_ty.676429* @RecordTypeNode_vtable_data, %RecordTypeNode_vtable_ty.676429** %.118, align 8
  call void @RecordTypeNode_constructor(%RecordTypeNode.676428* %.117, %IdentifierToken.676420* %.107, %FloRange.676382* %.115)
  %rec_node = alloca %RecordTypeNode.676428*, align 8
  %3 = bitcast %RecordTypeNode.676428** %rec_node to i8**
  store i8* %.116, i8** %3, align 8
  %.123 = getelementptr inbounds i8, i8* %.116, i64 32
  %4 = bitcast i8* %.123 to %"Array<TypeNode>.676430"**
  %.124 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %4, align 8
  %.126 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.124, i64 0, i32 0
  %.127 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.126, align 8
  %.128 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.127, i64 0, i32 2
  %.129 = load void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)*, void (%"Array<TypeNode>.676430"*, %TypeNode.676426*)** %.128, align 8
  call void %.129(%"Array<TypeNode>.676430"* %.124, %TypeNode.676426* %type_node.2)
  %5 = bitcast %RecordTypeNode.676428** %rec_node to %TypeNode.676426**
  %.1314 = load %TypeNode.676426*, %TypeNode.676426** %5, align 8
  br label %while.entry.if.endif

while.entry.if.else:                              ; preds = %while.entry.if
  %.138 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.71, align 8
  %.139 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.138, i64 0, i32 36
  %.140 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.139, align 8
  %.141 = call %ExpressionNode.676442* %.140(%Parser.676536* %.1)
  %.144 = load %Token.676406*, %Token.676406** %.6, align 8
  %.145 = getelementptr inbounds %Token.676406, %Token.676406* %.144, i64 0, i32 2
  %.146 = load %FloRange.676382*, %FloRange.676382** %.145, align 8
  %.147 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.148 = bitcast i8* %.147 to %ArrayTypeNode.676444*
  %.149 = bitcast i8* %.147 to %ArrayTypeNode_vtable_ty.676445**
  store %ArrayTypeNode_vtable_ty.676445* @ArrayTypeNode_vtable_data, %ArrayTypeNode_vtable_ty.676445** %.149, align 8
  call void @ArrayTypeNode_constructor(%ArrayTypeNode.676444* %.148, %TypeNode.676426* %type_node.2, %ExpressionNode.676442* %.141, %FloRange.676382* %.146)
  %.152 = bitcast i8* %.147 to %TypeNode.676426*
  br label %while.entry.if.endif

while.entry.if.endif:                             ; preds = %while.entry.if.else, %while.entry.if.if
  %type_node.5 = phi %TypeNode.676426* [ %.1314, %while.entry.if.if ], [ %.152, %while.entry.if.else ]
  %.157 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %type_node.5, i64 0, i32 1
  %.158 = load %FloRange.676382*, %FloRange.676382** %.157, align 8
  %.161 = load %Token.676406*, %Token.676406** %.6, align 8
  %.162 = getelementptr inbounds %Token.676406, %Token.676406* %.161, i64 0, i32 2
  %.163 = load %FloRange.676382*, %FloRange.676382** %.162, align 8
  %.164 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.158, %FloRange.676382* %.163)
  store %FloRange.676382* %.164, %FloRange.676382** %.157, align 8
  %.169 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.71, align 8
  %.170 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.169, i64 0, i32 4
  %.171 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.170, align 8
  %.172 = call %Token.676406* %.171(%Parser.676536* %.1, i64 27)
  br label %while.entry.endif
}

define void @Parser_parse_expression_list(%Parser.676536* %.1, %"Array<ExpressionNode>.676454"* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.9, i64 0, i32 5
  %.11 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.10, align 8
  call void %.11(%Parser.676536* %.1)
  %.16 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.16, i64 0, i32 36
  %.18 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.17, align 8
  %.19 = call %ExpressionNode.676442* %.18(%Parser.676536* %.1)
  %.20 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.2, i64 0, i32 0
  %.21 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.20, align 8
  %.22 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.21, i64 0, i32 2
  %.23 = load void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)** %.22, align 8
  call void %.23(%"Array<ExpressionNode>.676454"* %.2, %ExpressionNode.676442* %.19)
  %.27 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.27, i64 0, i32 5
  %.29 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.28, align 8
  call void %.29(%Parser.676536* %.1)
  %.32 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.33 = load %Token.676406*, %Token.676406** %.32, align 8
  %.34 = getelementptr inbounds %Token.676406, %Token.676406* %.33, i64 0, i32 1
  %.35 = load i64, i64* %.34, align 8
  %.36 = icmp eq i64 %.35, 2
  %.39 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.39, i64 0, i32 0
  %.41 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.40, align 8
  %.42 = call i1 %.41(%Parser.676536* %.1)
  %.43 = and i1 %.36, %.42
  br i1 %.43, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.47 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.47, i64 0, i32 2
  %.49 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.48, align 8
  call void %.49(%Parser.676536* %.1)
  %.53 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.54 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.53, i64 0, i32 5
  %.55 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.54, align 8
  call void %.55(%Parser.676536* %.1)
  %.60 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.60, i64 0, i32 36
  %.62 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.61, align 8
  %.63 = call %ExpressionNode.676442* %.62(%Parser.676536* %.1)
  %.65 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.20, align 8
  %.66 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)** %.66, align 8
  call void %.67(%"Array<ExpressionNode>.676454"* %.2, %ExpressionNode.676442* %.63)
  %.71 = load %Token.676406*, %Token.676406** %.32, align 8
  %.72 = getelementptr inbounds %Token.676406, %Token.676406* %.71, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  %.74 = icmp eq i64 %.73, 2
  %.77 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.78, align 8
  %.80 = call i1 %.79(%Parser.676536* %.1)
  %.81 = and i1 %.74, %.80
  br i1 %.81, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %.85 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.85, i64 0, i32 5
  %.87 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.86, align 8
  call void %.87(%Parser.676536* %.1)
  ret void
}

define noalias %ArrayExpressionNode.676458* @Parser_parse_array_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %ArrayExpressionNode.676458*
  %.12 = bitcast i8* %.10 to %ArrayExpressionNode_vtable_ty.676459**
  store %ArrayExpressionNode_vtable_ty.676459* @ArrayExpressionNode_vtable_data, %ArrayExpressionNode_vtable_ty.676459** %.12, align 8
  call void @ArrayExpressionNode_constructor(%ArrayExpressionNode.676458* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.24 = load %Token.676406*, %Token.676406** %.6, align 8
  %.25 = getelementptr inbounds %Token.676406, %Token.676406* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp eq i64 %.26, 27
  br i1 %.27.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.31, i64 0, i32 11
  %.33 = load void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)*, void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.10, i64 32
  %0 = bitcast i8* %.35 to %"Array<ExpressionNode>.676454"**
  %.36 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %0, align 8
  call void %.33(%Parser.676536* %.1, %"Array<ExpressionNode>.676454"* %.36)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.41 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.41 to %FloRange.676382**
  %.42 = load %FloRange.676382*, %FloRange.676382** %1, align 8
  %.45 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.45, i64 0, i32 4
  %.47 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.46, align 8
  %.48 = call %Token.676406* %.47(%Parser.676536* %.1, i64 27)
  %.49 = getelementptr inbounds %Token.676406, %Token.676406* %.48, i64 0, i32 2
  %.50 = load %FloRange.676382*, %FloRange.676382** %.49, align 8
  %.51 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.42, %FloRange.676382* %.50)
  store %FloRange.676382* %.51, %FloRange.676382** %1, align 8
  ret %ArrayExpressionNode.676458* %.11
}

define noalias %NewExpressionNode.676460* @Parser_parse_new_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.12 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.13, i64 0, i32 2
  %.15 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.14, align 8
  call void %.15(%Parser.676536* %.1)
  %.19 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.19, i64 0, i32 10
  %.21 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.20, align 8
  %.22 = call %TypeNode.676426* %.21(%Parser.676536* %.1)
  %.24 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.25 = bitcast i8* %.24 to %NewExpressionNode.676460*
  %.26 = bitcast i8* %.24 to %NewExpressionNode_vtable_ty.676461**
  store %NewExpressionNode_vtable_ty.676461* @NewExpressionNode_vtable_data, %NewExpressionNode_vtable_ty.676461** %.26, align 8
  call void @NewExpressionNode_constructor(%NewExpressionNode.676460* %.25, %TypeNode.676426* %.22, %FloRange.676382* %.9)
  %.32 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.32, i64 0, i32 4
  %.34 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.33, align 8
  %.35 = call %Token.676406* %.34(%Parser.676536* %.1, i64 22)
  %.38 = load %Token.676406*, %Token.676406** %.6, align 8
  %.39 = getelementptr inbounds %Token.676406, %Token.676406* %.38, i64 0, i32 1
  %.40 = load i64, i64* %.39, align 8
  %.41 = icmp ne i64 %.40, 23
  %.44 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.44, i64 0, i32 0
  %.46 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.45, align 8
  %.47 = call i1 %.46(%Parser.676536* %.1)
  %.48 = and i1 %.41, %.47
  br i1 %.48, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.52 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.52, i64 0, i32 11
  %.54 = load void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)*, void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)** %.53, align 8
  %.56 = getelementptr inbounds i8, i8* %.24, i64 48
  %0 = bitcast i8* %.56 to %"Array<ExpressionNode>.676454"**
  %.57 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %0, align 8
  call void %.54(%Parser.676536* %.1, %"Array<ExpressionNode>.676454"* %.57)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.62 = getelementptr inbounds i8, i8* %.24, i64 8
  %1 = bitcast i8* %.62 to %FloRange.676382**
  %.63 = load %FloRange.676382*, %FloRange.676382** %1, align 8
  %.66 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.67 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.66, i64 0, i32 4
  %.68 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.67, align 8
  %.69 = call %Token.676406* %.68(%Parser.676536* %.1, i64 23)
  %.70 = getelementptr inbounds %Token.676406, %Token.676406* %.69, i64 0, i32 2
  %.71 = load %FloRange.676382*, %FloRange.676382** %.70, align 8
  %.72 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.63, %FloRange.676382* %.71)
  store %FloRange.676382* %.72, %FloRange.676382** %1, align 8
  ret %NewExpressionNode.676460* %.25
}

define noalias %StringExpressionNode.676452* @Parser_parse_string(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 4
  %.9 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.8, align 8
  %.10 = call %Token.676406* %.9(%Parser.676536* %.1, i64 31)
  %.14 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.15 = bitcast i8* %.14 to %Parser.676536*
  %.16 = bitcast i8* %.14 to %Parser_vtable_ty.676537**
  store %Parser_vtable_ty.676537* @Parser_vtable_data, %Parser_vtable_ty.676537** %.16, align 8
  call void @Parser_constructor(%Parser.676536* %.15)
  %.22 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 2
  %0 = bitcast %"Array<FloError>.676397"** %.22 to i64*
  %.231 = load i64, i64* %0, align 8
  %.24 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.24 to i64*
  store i64 %.231, i64* %1, align 8
  %.27 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %"Array<ExpressionNode>.676454"*
  %.31 = bitcast i8* %.29 to %"Array<ExpressionNode>_vtable_ty.676455"**
  store %"Array<ExpressionNode>_vtable_ty.676455"* @"Array<ExpressionNode>_vtable_data", %"Array<ExpressionNode>_vtable_ty.676455"** %.31, align 8
  %.33 = getelementptr inbounds i8, i8* %.29, i64 8
  %2 = bitcast i8* %.33 to i8**
  store i8* %.27, i8** %2, align 8
  %.35 = getelementptr inbounds i8, i8* %.29, i64 16
  %3 = bitcast i8* %.35 to i64*
  store i64 0, i64* %3, align 8
  %.37 = getelementptr inbounds i8, i8* %.29, i64 24
  %4 = bitcast i8* %.37 to i64*
  store i64 8, i64* %4, align 8
  %.45 = getelementptr inbounds %Token.676406, %Token.676406* %.10, i64 1, i32 1
  %5 = bitcast i64* %.45 to %"Array<Array<Token>>.676416"**
  %.463 = load %"Array<Array<Token>>.676416"*, %"Array<Array<Token>>.676416"** %5, align 8
  %.474 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.463, i64 0, i32 2
  %.485 = load i64, i64* %.474, align 8
  %.496 = icmp sgt i64 %.485, 0
  %.527 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.538 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.527, i64 0, i32 0
  %.549 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.538, align 8
  %.5510 = call i1 %.549(%Parser.676536* %.1)
  %.5611 = and i1 %.496, %.5510
  br i1 %.5611, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.68 = getelementptr inbounds i8, i8* %.14, i64 8
  %6 = bitcast i8* %.68 to %"Array<Token>.676417"**
  %.72 = getelementptr inbounds i8, i8* %.14, i64 32
  %7 = bitcast i8* %.72 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge12 = phi i64 [ 0, %for.body.lr.ph ], [ %.96, %for.body ]
  %.62 = load %"Array<Array<Token>>.676416"*, %"Array<Array<Token>>.676416"** %5, align 8
  %.63 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.62, i64 0, i32 0
  %.64 = load %"Array<Array<Token>>_vtable_ty.676419"*, %"Array<Array<Token>>_vtable_ty.676419"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<Array<Token>>_vtable_ty.676419", %"Array<Array<Token>>_vtable_ty.676419"* %.64, i64 0, i32 5
  %.66 = load %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)*, %"Array<Token>.676417"* (%"Array<Array<Token>>.676416"*, i64)** %.65, align 8
  %.67 = call %"Array<Token>.676417"* %.66(%"Array<Array<Token>>.676416"* %.62, i64 %storemerge12)
  store %"Array<Token>.676417"* %.67, %"Array<Token>.676417"** %6, align 8
  store i64 -1, i64* %7, align 8
  %.76 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.16, align 8
  %.77 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.76, i64 0, i32 2
  %.78 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.77, align 8
  call void %.78(%Parser.676536* %.15)
  %.83 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.16, align 8
  %.84 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.83, i64 0, i32 36
  %.85 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.84, align 8
  %.86 = call %ExpressionNode.676442* %.85(%Parser.676536* %.15)
  %.88 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.31, align 8
  %.89 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.88, i64 0, i32 2
  %.90 = load void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)*, void (%"Array<ExpressionNode>.676454"*, %ExpressionNode.676442*)** %.89, align 8
  call void %.90(%"Array<ExpressionNode>.676454"* %.30, %ExpressionNode.676442* %.86)
  %.96 = add nuw nsw i64 %storemerge12, 1
  %.46 = load %"Array<Array<Token>>.676416"*, %"Array<Array<Token>>.676416"** %5, align 8
  %.47 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.46, i64 0, i32 2
  %.48 = load i64, i64* %.47, align 8
  %.49 = icmp slt i64 %.96, %.48
  %.52 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.52, i64 0, i32 0
  %.54 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.53, align 8
  %.55 = call i1 %.54(%Parser.676536* %.1)
  %.56 = and i1 %.49, %.55
  br i1 %.56, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  %.11 = bitcast %Token.676406* %.10 to %StrToken.676414*
  %.101 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.102 = bitcast i8* %.101 to %StringExpressionNode.676452*
  %.103 = bitcast i8* %.101 to %StringExpressionNode_vtable_ty.676453**
  store %StringExpressionNode_vtable_ty.676453* @StringExpressionNode_vtable_data, %StringExpressionNode_vtable_ty.676453** %.103, align 8
  call void @StringExpressionNode_constructor(%StringExpressionNode.676452* %.102, %StrToken.676414* %.11, %"Array<ExpressionNode>.676454"* %.30)
  ret %StringExpressionNode.676452* %.102
}

define %ExpressionNode.676442* @Parser_parse_atom(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.else.else.else.else.else.else.else [
    i64 31, label %.3.if
    i64 28, label %.3.else.if
    i64 29, label %.3.else.else.if
    i64 32, label %.3.else.else.else.if
    i64 50, label %.3.else.else.else.else.if
    i64 26, label %.3.else.else.else.else.else.if
    i64 84, label %.3.else.else.else.else.else.else.if
  ]

.3.if:                                            ; preds = %.3
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 14
  %.16 = load %StringExpressionNode.676452* (%Parser.676536*)*, %StringExpressionNode.676452* (%Parser.676536*)** %.15, align 8
  %.17 = call %StringExpressionNode.676452* %.16(%Parser.676536* %.1)
  %.18 = bitcast %StringExpressionNode.676452* %.17 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.18

.3.else.if:                                       ; preds = %.3
  %.28 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.29 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.28, align 8
  %.30 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.29, i64 0, i32 4
  %.31 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.30, align 8
  %.32 = call %Token.676406* %.31(%Parser.676536* %.1, i64 28)
  %.33 = bitcast %Token.676406* %.32 to %IntToken.676408*
  %.34 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.35 = bitcast i8* %.34 to %IntExpressionNode.676446*
  %.36 = bitcast i8* %.34 to %IntExpressionNode_vtable_ty.676447**
  store %IntExpressionNode_vtable_ty.676447* @IntExpressionNode_vtable_data, %IntExpressionNode_vtable_ty.676447** %.36, align 8
  call void @IntExpressionNode_constructor(%IntExpressionNode.676446* %.35, %IntToken.676408* %.33)
  %.39 = bitcast i8* %.34 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.39

.3.else.else.if:                                  ; preds = %.3
  %.49 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.50 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.49, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.50, i64 0, i32 4
  %.52 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.51, align 8
  %.53 = call %Token.676406* %.52(%Parser.676536* %.1, i64 29)
  %.54 = bitcast %Token.676406* %.53 to %FloatToken.676410*
  %.55 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.56 = bitcast i8* %.55 to %FloatExpressionNode.676448*
  %.57 = bitcast i8* %.55 to %FloatExpressionNode_vtable_ty.676449**
  store %FloatExpressionNode_vtable_ty.676449* @FloatExpressionNode_vtable_data, %FloatExpressionNode_vtable_ty.676449** %.57, align 8
  call void @FloatExpressionNode_constructor(%FloatExpressionNode.676448* %.56, %FloatToken.676410* %.54)
  %.60 = bitcast i8* %.55 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.60

.3.else.else.else.if:                             ; preds = %.3
  %.70 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.71 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.70, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.71, i64 0, i32 4
  %.73 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.72, align 8
  %.74 = call %Token.676406* %.73(%Parser.676536* %.1, i64 32)
  %.75 = bitcast %Token.676406* %.74 to %CharToken.676412*
  %.76 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.77 = bitcast i8* %.76 to %CharExpressionNode.676450*
  %.78 = bitcast i8* %.76 to %CharExpressionNode_vtable_ty.676451**
  store %CharExpressionNode_vtable_ty.676451* @CharExpressionNode_vtable_data, %CharExpressionNode_vtable_ty.676451** %.78, align 8
  call void @CharExpressionNode_constructor(%CharExpressionNode.676450* %.77, %CharToken.676412* %.75)
  %.81 = bitcast i8* %.76 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.81

.3.else.else.else.else.if:                        ; preds = %.3
  %.91 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.92 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.91, align 8
  %.93 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.92, i64 0, i32 4
  %.94 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.93, align 8
  %.95 = call %Token.676406* %.94(%Parser.676536* %.1, i64 50)
  %.96 = bitcast %Token.676406* %.95 to %IdentifierToken.676420*
  %.97 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.98 = bitcast i8* %.97 to %VarAccessExpressionNode.676456*
  %.99 = bitcast i8* %.97 to %VarAccessExpressionNode_vtable_ty.676457**
  store %VarAccessExpressionNode_vtable_ty.676457* @VarAccessExpressionNode_vtable_data, %VarAccessExpressionNode_vtable_ty.676457** %.99, align 8
  call void @VarAccessExpressionNode_constructor(%VarAccessExpressionNode.676456* %.98, %IdentifierToken.676420* %.96)
  %.102 = bitcast i8* %.97 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.102

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.112 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.113 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.112, align 8
  %.114 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.113, i64 0, i32 12
  %.115 = load %ArrayExpressionNode.676458* (%Parser.676536*)*, %ArrayExpressionNode.676458* (%Parser.676536*)** %.114, align 8
  %.116 = call %ArrayExpressionNode.676458* %.115(%Parser.676536* %.1)
  %.117 = bitcast %ArrayExpressionNode.676458* %.116 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.117

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.127 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.128 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.127, align 8
  %.129 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.128, i64 0, i32 13
  %.130 = load %NewExpressionNode.676460* (%Parser.676536*)*, %NewExpressionNode.676460* (%Parser.676536*)** %.129, align 8
  %.131 = call %NewExpressionNode.676460* %.130(%Parser.676536* %.1)
  %.132 = bitcast %NewExpressionNode.676460* %.131 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.132

.3.else.else.else.else.else.else.else:            ; preds = %.3
  %.139 = icmp eq i64 %.9, 22
  %.142 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.143 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.142, align 8
  br i1 %.139, label %.3.else.else.else.else.else.else.else.if, label %.3.else.else.else.else.else.else.else.else

.3.else.else.else.else.else.else.else.if:         ; preds = %.3.else.else.else.else.else.else.else
  %.144 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.143, i64 0, i32 2
  %.145 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.144, align 8
  call void %.145(%Parser.676536* %.1)
  %.149 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.142, align 8
  %.150 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.149, i64 0, i32 36
  %.151 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.150, align 8
  %.152 = call %ExpressionNode.676442* %.151(%Parser.676536* %.1)
  %.156 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.142, align 8
  %.157 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.156, i64 0, i32 4
  %.158 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.157, align 8
  %.159 = call %Token.676406* %.158(%Parser.676536* %.1, i64 23)
  ret %ExpressionNode.676442* %.152

.3.else.else.else.else.else.else.else.else:       ; preds = %.3.else.else.else.else.else.else.else
  %.165 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.143, i64 0, i32 1
  %.166 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.165, align 8
  %.167 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.168 = bitcast i8* %.167 to %string.676378*
  %.168.repack = bitcast i8* %.167 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.168.repack, align 8
  %.168.repack1 = getelementptr inbounds i8, i8* %.167, i64 8
  %0 = bitcast i8* %.168.repack1 to i8**
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.179, i64 0, i64 0), i8** %0, align 8
  %.168.repack2 = getelementptr inbounds i8, i8* %.167, i64 16
  %1 = bitcast i8* %.168.repack2 to i64*
  store i64 28, i64* %1, align 8
  %.168.repack3 = getelementptr inbounds i8, i8* %.167, i64 24
  %2 = bitcast i8* %.168.repack3 to i64*
  store i64 28, i64* %2, align 8
  call void %.166(%Parser.676536* %.1, %string.676378* %.168)
  %.181 = load %Token.676406*, %Token.676406** %.6, align 8
  %.182 = getelementptr inbounds %Token.676406, %Token.676406* %.181, i64 0, i32 2
  %.183 = load %FloRange.676382*, %FloRange.676382** %.182, align 8
  %.184 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.184 to %ExpressionNode.676442*
  %.186 = bitcast i8* %.184 to %ExpressionNode_vtable_ty.676443**
  store %ExpressionNode_vtable_ty.676443* @ExpressionNode_vtable_data, %ExpressionNode_vtable_ty.676443** %.186, align 8
  call void @ExpressionNode_constructor(%ExpressionNode.676442* %.185, i64 7, %FloRange.676382* %.183)
  ret %ExpressionNode.676442* %.185
}

define noalias %ExpressionIndexNode.676462* @Parser_parse_index_expression(%Parser.676536* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.9, i64 0, i32 4
  %.11 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.10, align 8
  %.12 = call %Token.676406* %.11(%Parser.676536* %.1, i64 26)
  %.16 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.16, i64 0, i32 36
  %.18 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.17, align 8
  %.19 = call %ExpressionNode.676442* %.18(%Parser.676536* %.1)
  %.21 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.22 = load %Token.676406*, %Token.676406** %.21, align 8
  %.23 = getelementptr inbounds %Token.676406, %Token.676406* %.22, i64 0, i32 2
  %.24 = load %FloRange.676382*, %FloRange.676382** %.23, align 8
  %.25 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.26 = bitcast i8* %.25 to %ExpressionIndexNode.676462*
  %.27 = bitcast i8* %.25 to %ExpressionIndexNode_vtable_ty.676463**
  store %ExpressionIndexNode_vtable_ty.676463* @ExpressionIndexNode_vtable_data, %ExpressionIndexNode_vtable_ty.676463** %.27, align 8
  call void @ExpressionIndexNode_constructor(%ExpressionIndexNode.676462* %.26, %ExpressionNode.676442* %.2, %ExpressionNode.676442* %.19, %FloRange.676382* %.24)
  %.33 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.2, i64 0, i32 1
  %.34 = load %FloRange.676382*, %FloRange.676382** %.33, align 8
  %.37 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.37, i64 0, i32 4
  %.39 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.38, align 8
  %.40 = call %Token.676406* %.39(%Parser.676536* %.1, i64 27)
  %.41 = getelementptr inbounds %Token.676406, %Token.676406* %.40, i64 0, i32 2
  %.42 = load %FloRange.676382*, %FloRange.676382** %.41, align 8
  %.43 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.34, %FloRange.676382* %.42)
  %.44 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.44 to %FloRange.676382**
  store %FloRange.676382* %.43, %FloRange.676382** %0, align 8
  ret %ExpressionIndexNode.676462* %.26
}

define noalias %CallExpressionNode.676466* @Parser_parse_call_expression(%Parser.676536* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.9, i64 0, i32 4
  %.11 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.10, align 8
  %.12 = call %Token.676406* %.11(%Parser.676536* %.1, i64 22)
  %.15 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.16 = load %Token.676406*, %Token.676406** %.15, align 8
  %.17 = getelementptr inbounds %Token.676406, %Token.676406* %.16, i64 0, i32 2
  %.18 = load %FloRange.676382*, %FloRange.676382** %.17, align 8
  %.19 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.20 = bitcast i8* %.19 to %CallExpressionNode.676466*
  %.21 = bitcast i8* %.19 to %CallExpressionNode_vtable_ty.676467**
  store %CallExpressionNode_vtable_ty.676467* @CallExpressionNode_vtable_data, %CallExpressionNode_vtable_ty.676467** %.21, align 8
  call void @CallExpressionNode_constructor(%CallExpressionNode.676466* %.20, %ExpressionNode.676442* %.2, %FloRange.676382* %.18)
  %.27 = load %Token.676406*, %Token.676406** %.15, align 8
  %.28 = getelementptr inbounds %Token.676406, %Token.676406* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30.not = icmp eq i64 %.29, 23
  br i1 %.30.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.34 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.35 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.34, i64 0, i32 11
  %.36 = load void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)*, void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)** %.35, align 8
  %.38 = getelementptr inbounds i8, i8* %.19, i64 40
  %0 = bitcast i8* %.38 to %"Array<ExpressionNode>.676454"**
  %.39 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %0, align 8
  call void %.36(%Parser.676536* %.1, %"Array<ExpressionNode>.676454"* %.39)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.44 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.2, i64 0, i32 1
  %.45 = load %FloRange.676382*, %FloRange.676382** %.44, align 8
  %.48 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.48, i64 0, i32 4
  %.50 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.49, align 8
  %.51 = call %Token.676406* %.50(%Parser.676536* %.1, i64 23)
  %.52 = getelementptr inbounds %Token.676406, %Token.676406* %.51, i64 0, i32 2
  %.53 = load %FloRange.676382*, %FloRange.676382** %.52, align 8
  %.54 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.45, %FloRange.676382* %.53)
  %.55 = getelementptr inbounds i8, i8* %.19, i64 8
  %1 = bitcast i8* %.55 to %FloRange.676382**
  store %FloRange.676382* %.54, %FloRange.676382** %1, align 8
  ret %CallExpressionNode.676466* %.20
}

define noalias %MemberExpressionNode.676464* @Parser_parse_member_expression(%Parser.676536* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.9, i64 0, i32 4
  %.11 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.10, align 8
  %.12 = call %Token.676406* %.11(%Parser.676536* %.1, i64 47)
  %.15 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.15, i64 0, i32 4
  %.17 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.16, align 8
  %.18 = call %Token.676406* %.17(%Parser.676536* %.1, i64 50)
  %.19 = bitcast %Token.676406* %.18 to %IdentifierToken.676420*
  %.24 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.2, i64 0, i32 1
  %.25 = load %FloRange.676382*, %FloRange.676382** %.24, align 8
  %0 = getelementptr inbounds %Token.676406, %Token.676406* %.18, i64 0, i32 2
  %.28 = load %FloRange.676382*, %FloRange.676382** %0, align 8
  %.29 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.25, %FloRange.676382* %.28)
  %.30 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.31 = bitcast i8* %.30 to %MemberExpressionNode.676464*
  %.32 = bitcast i8* %.30 to %MemberExpressionNode_vtable_ty.676465**
  store %MemberExpressionNode_vtable_ty.676465* @MemberExpressionNode_vtable_data, %MemberExpressionNode_vtable_ty.676465** %.32, align 8
  call void @MemberExpressionNode_constructor(%MemberExpressionNode.676464* %.31, %ExpressionNode.676442* %.2, %IdentifierToken.676420* %.19, %FloRange.676382* %.29)
  ret %MemberExpressionNode.676464* %.31
}

define %ExpressionNode.676442* @Parser_parse_lhs_expression_allow_call(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 15
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 0
  %.16 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.15, align 8
  %.17 = call i1 %.16(%Parser.676536* %.1)
  br i1 %.17, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3
  %.20 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %expression.0 = phi %ExpressionNode.676442* [ %expression.2, %while.entry.endif ], [ %.10, %while.entry.preheader ]
  %.21 = load %Token.676406*, %Token.676406** %.20, align 8
  %.22 = getelementptr inbounds %Token.676406, %Token.676406* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  switch i64 %.23, label %while.exit [
    i64 22, label %while.entry.if
    i64 26, label %while.entry.else.if
    i64 47, label %while.entry.else.else.if
  ]

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.3
  %expression.1 = phi %ExpressionNode.676442* [ %.10, %.3 ], [ %expression.2, %while.entry.endif ], [ %expression.0, %while.entry ]
  ret %ExpressionNode.676442* %expression.1

while.entry.if:                                   ; preds = %while.entry
  %.28 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.29 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.28, i64 0, i32 17
  %.30 = load %CallExpressionNode.676466* (%Parser.676536*, %ExpressionNode.676442*)*, %CallExpressionNode.676466* (%Parser.676536*, %ExpressionNode.676442*)** %.29, align 8
  %.32 = call %CallExpressionNode.676466* %.30(%Parser.676536* %.1, %ExpressionNode.676442* %expression.0)
  %.33 = bitcast %CallExpressionNode.676466* %.32 to %ExpressionNode.676442*
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else.if, %while.entry.else.else.if, %while.entry.if
  %expression.2 = phi %ExpressionNode.676442* [ %.33, %while.entry.if ], [ %.50, %while.entry.else.if ], [ %.67, %while.entry.else.else.if ]
  %.75 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.76 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.75, i64 0, i32 0
  %.77 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.76, align 8
  %.78 = call i1 %.77(%Parser.676536* %.1)
  br i1 %.78, label %while.entry, label %while.exit

while.entry.else.if:                              ; preds = %while.entry
  %.45 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.45, i64 0, i32 16
  %.47 = load %ExpressionIndexNode.676462* (%Parser.676536*, %ExpressionNode.676442*)*, %ExpressionIndexNode.676462* (%Parser.676536*, %ExpressionNode.676442*)** %.46, align 8
  %.49 = call %ExpressionIndexNode.676462* %.47(%Parser.676536* %.1, %ExpressionNode.676442* %expression.0)
  %.50 = bitcast %ExpressionIndexNode.676462* %.49 to %ExpressionNode.676442*
  br label %while.entry.endif

while.entry.else.else.if:                         ; preds = %while.entry
  %.62 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.63 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.62, i64 0, i32 18
  %.64 = load %MemberExpressionNode.676464* (%Parser.676536*, %ExpressionNode.676442*)*, %MemberExpressionNode.676464* (%Parser.676536*, %ExpressionNode.676442*)** %.63, align 8
  %.66 = call %MemberExpressionNode.676464* %.64(%Parser.676536* %.1, %ExpressionNode.676442* %expression.0)
  %.67 = bitcast %MemberExpressionNode.676464* %.66 to %ExpressionNode.676442*
  br label %while.entry.endif
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_unary_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif.endif [
    i64 20, label %.3.if
    i64 21, label %.3.endif.if
    i64 4, label %.3.endif.endif.if
    i64 44, label %.3.endif.endif.endif.if
    i64 34, label %.3.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 0, %.3 ], [ 1, %.3.endif.if ], [ 4, %.3.endif.endif.if ], [ 5, %.3.endif.endif.endif.if ], [ 6, %.3.endif.endif.endif.endif.if ], [ -1, %.3.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif:                 ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.676442* @Parser_parse_unary_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.12 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.13 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.13, i64 0, i32 20
  %.15 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.14, align 8
  %.16 = call i64 %.15(%Parser.676536* %.1)
  %.20.not = icmp eq i64 %.16, -1
  br i1 %.20.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 2
  %.26 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.25, align 8
  call void %.26(%Parser.676536* %.1)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.31 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.31, i64 0, i32 19
  %.33 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.32, align 8
  %.34 = call %ExpressionNode.676442* %.33(%Parser.676536* %.1)
  br i1 %.20.not, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.42 = load %Token.676406*, %Token.676406** %.6, align 8
  %.43 = getelementptr inbounds %Token.676406, %Token.676406* %.42, i64 0, i32 1
  %.44 = load i64, i64* %.43, align 8
  %.45 = icmp eq i64 %.44, 20
  %spec.select = select i1 %.45, i64 2, i64 %.16
  %.54 = icmp eq i64 %.44, 21
  %op.2 = select i1 %.54, i64 3, i64 %spec.select
  %.60.not = icmp eq i64 %op.2, -1
  br i1 %.60.not, label %.3.endif.endif, label %.3.endif.if.endif.endif.if

.3.endif.endif:                                   ; preds = %.3.endif.if.endif.endif.if, %.3.endif.if, %.3.endif
  %op.0 = phi i64 [ %.16, %.3.endif ], [ %op.2, %.3.endif.if ], [ %op.2, %.3.endif.if.endif.endif.if ]
  %.72 = icmp eq i64 %op.0, -1
  br i1 %.72, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.if.endif.endif.if:                       ; preds = %.3.endif.if
  %.64 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.12, align 8
  %.65 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.64, i64 0, i32 2
  %.66 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.65, align 8
  call void %.66(%Parser.676536* %.1)
  br label %.3.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  ret %ExpressionNode.676442* %.34

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.80 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.34, i64 0, i32 1
  %.81 = load %FloRange.676382*, %FloRange.676382** %.80, align 8
  %.82 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.9, %FloRange.676382* %.81)
  %.83 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.84 = bitcast i8* %.83 to %UnaryExpressionNode.676474*
  %.85 = bitcast i8* %.83 to %UnaryExpressionNode_vtable_ty.676475**
  store %UnaryExpressionNode_vtable_ty.676475* @UnaryExpressionNode_vtable_data, %UnaryExpressionNode_vtable_ty.676475** %.85, align 8
  call void @UnaryExpressionNode_constructor(%UnaryExpressionNode.676474* %.84, i64 %op.0, %ExpressionNode.676442* %.34, %FloRange.676382* %.82)
  %.88 = bitcast i8* %.83 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.88
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_term_expr_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif [
    i64 3, label %.3.if
    i64 6, label %.3.endif.if
    i64 7, label %.3.endif.endif.if
    i64 8, label %.3.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 2, %.3 ], [ 3, %.3.endif.if ], [ 4, %.3.endif.endif.if ], [ 5, %.3.endif.endif.endif.if ], [ -1, %.3.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif:                       ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.676442* @Parser_parse_term_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 21
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 22
  %.16 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.676536* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.676536* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 2
  %.37 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.36, align 8
  call void %.37(%Parser.676536* %.1)
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 23
  %.45 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.44, align 8
  %.46 = call %ExpressionNode.676442* %.45(%Parser.676536* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.676470*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.48, %ExpressionNode.676442* %.10, i64 %.17, %ExpressionNode.676442* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_arith_expr_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %switch.selectcmp = icmp eq i64 %.9, 4
  %switch.select = select i1 %switch.selectcmp, i64 1, i64 -1
  %switch.selectcmp1 = icmp eq i64 %.9, 5
  %switch.select2 = select i1 %switch.selectcmp1, i64 0, i64 %switch.select
  ret i64 %switch.select2
}

define %ExpressionNode.676442* @Parser_parse_arithmetic_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 23
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 24
  %.16 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.676536* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.676536* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 2
  %.37 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.36, align 8
  call void %.37(%Parser.676536* %.1)
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 25
  %.45 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.44, align 8
  %.46 = call %ExpressionNode.676442* %.45(%Parser.676536* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.676470*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.48, %ExpressionNode.676442* %.10, i64 %.17, %ExpressionNode.676442* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_bitshift_expr_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %switch.selectcmp = icmp eq i64 %.9, 46
  %switch.select = select i1 %switch.selectcmp, i64 13, i64 -1
  %switch.selectcmp1 = icmp eq i64 %.9, 45
  %switch.select2 = select i1 %switch.selectcmp1, i64 12, i64 %switch.select
  ret i64 %switch.select2
}

define %ExpressionNode.676442* @Parser_parse_bitshift_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 25
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 26
  %.16 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.676536* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.676536* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 2
  %.37 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.36, align 8
  call void %.37(%Parser.676536* %.1)
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 27
  %.45 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.44, align 8
  %.46 = call %ExpressionNode.676442* %.45(%Parser.676536* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.676470*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.48, %ExpressionNode.676442* %.10, i64 %.17, %ExpressionNode.676442* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_comp_expr_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endif.endif.endif [
    i64 38, label %.3.if
    i64 39, label %.3.endif.if
    i64 41, label %.3.endif.endif.if
    i64 40, label %.3.endif.endif.endif.if
    i64 36, label %.3.endif.endif.endif.endif.if
    i64 37, label %.3.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 6, %.3 ], [ 8, %.3.endif.if ], [ 7, %.3.endif.endif.if ], [ 9, %.3.endif.endif.endif.if ], [ 10, %.3.endif.endif.endif.endif.if ], [ 11, %.3.endif.endif.endif.endif.endif.if ], [ -1, %.3.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.676442* @Parser_parse_comparasion_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 27
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 28
  %.16 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.676536* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.676536* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 2
  %.37 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.36, align 8
  call void %.37(%Parser.676536* %.1)
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 29
  %.45 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.44, align 8
  %.46 = call %ExpressionNode.676442* %.45(%Parser.676536* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.676470*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.48, %ExpressionNode.676442* %.10, i64 %.17, %ExpressionNode.676442* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.52
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_bit_expr_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif [
    i64 52, label %.3.if
    i64 51, label %.3.endif.if
    i64 53, label %.3.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 14, %.3 ], [ 15, %.3.endif.if ], [ 16, %.3.endif.endif.if ], [ -1, %.3.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif:                             ; preds = %.3
  br label %.3.if
}

define %ExpressionNode.676442* @Parser_parse_bit_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 29
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 30
  %.16 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.15, align 8
  %.17 = call i64 %.16(%Parser.676536* %.1)
  %.21 = icmp eq i64 %.17, -1
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 0
  %.26 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.25, align 8
  %.27 = call i1 %.26(%Parser.676536* %.1)
  %.28 = xor i1 %.27, true
  %.29 = or i1 %.21, %.28
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 2
  %.37 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.36, align 8
  call void %.37(%Parser.676536* %.1)
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 31
  %.45 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.44, align 8
  %.46 = call %ExpressionNode.676442* %.45(%Parser.676536* %.1)
  %.47 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.48 = bitcast i8* %.47 to %BinaryExpressionNode.676470*
  %.49 = bitcast i8* %.47 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.49, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.48, %ExpressionNode.676442* %.10, i64 %.17, %ExpressionNode.676442* %.46)
  %.52 = bitcast i8* %.47 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.52
}

define %ExpressionNode.676442* @Parser_parse_range_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 31
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.14 = load %Token.676406*, %Token.676406** %.13, align 8
  %.15 = getelementptr inbounds %Token.676406, %Token.676406* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp ne i64 %.16, 48
  %.20 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.21, align 8
  %.23 = call i1 %.22(%Parser.676536* %.1)
  %.24 = xor i1 %.23, true
  %.25 = or i1 %.17, %.24
  br i1 %.25, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.31 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.31, i64 0, i32 2
  %.33 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.32, align 8
  call void %.33(%Parser.676536* %.1)
  %.38 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.38, i64 0, i32 36
  %.40 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.39, align 8
  %.41 = call %ExpressionNode.676442* %.40(%Parser.676536* %.1)
  %.42 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.43 = bitcast i8* %.42 to %BinaryExpressionNode.676470*
  %.44 = bitcast i8* %.42 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.44, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.43, %ExpressionNode.676442* %.10, i64 30, %ExpressionNode.676442* %.41)
  %.47 = bitcast i8* %.42 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.47
}

define %ExpressionNode.676442* @Parser_parse_typecast_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 32
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.14 = load %Token.676406*, %Token.676406** %.13, align 8
  %.15 = getelementptr inbounds %Token.676406, %Token.676406* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.16, 85
  br i1 %.17.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.23 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.24 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.23, i64 0, i32 2
  %.25 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.24, align 8
  call void %.25(%Parser.676536* %.1)
  %.30 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.30, i64 0, i32 10
  %.32 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.31, align 8
  %.33 = call %TypeNode.676426* %.32(%Parser.676536* %.1)
  %.34 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.35 = bitcast i8* %.34 to %TypeCastExpressionNode.676468*
  %.36 = bitcast i8* %.34 to %TypeCastExpressionNode_vtable_ty.676469**
  store %TypeCastExpressionNode_vtable_ty.676469* @TypeCastExpressionNode_vtable_data, %TypeCastExpressionNode_vtable_ty.676469** %.36, align 8
  call void @TypeCastExpressionNode_constructor(%TypeCastExpressionNode.676468* %.35, %ExpressionNode.676442* %.10, %TypeNode.676426* %.33)
  %.401.cast = bitcast i8* %.34 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.401.cast
}

define %ExpressionNode.676442* @Parser_parse_ternary_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 33
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.14 = load %Token.676406*, %Token.676406** %.13, align 8
  %.15 = getelementptr inbounds %Token.676406, %Token.676406* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp ne i64 %.16, 33
  %.20 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.21, align 8
  %.23 = call i1 %.22(%Parser.676536* %.1)
  %.24 = xor i1 %.23, true
  %.25 = or i1 %.17, %.24
  br i1 %.25, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  ret %ExpressionNode.676442* %.10

.3.endif:                                         ; preds = %.3
  %.31 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.31, i64 0, i32 2
  %.33 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.32, align 8
  call void %.33(%Parser.676536* %.1)
  %.37 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.37, i64 0, i32 36
  %.39 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.38, align 8
  %.40 = call %ExpressionNode.676442* %.39(%Parser.676536* %.1)
  %.44 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.44, i64 0, i32 4
  %.46 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.45, align 8
  %.47 = call %Token.676406* %.46(%Parser.676536* %.1, i64 0)
  %.50 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.50, i64 0, i32 36
  %.52 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.51, align 8
  %.53 = call %ExpressionNode.676442* %.52(%Parser.676536* %.1)
  %.58 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.59 = bitcast i8* %.58 to %TernaryExpressionNode.676472*
  %.60 = bitcast i8* %.58 to %TernaryExpressionNode_vtable_ty.676473**
  store %TernaryExpressionNode_vtable_ty.676473* @TernaryExpressionNode_vtable_data, %TernaryExpressionNode_vtable_ty.676473** %.60, align 8
  call void @TernaryExpressionNode_constructor(%TernaryExpressionNode.676472* %.59, %ExpressionNode.676442* %.10, %ExpressionNode.676442* %.40, %ExpressionNode.676442* %.53)
  %.63 = bitcast i8* %.58 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.63
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_is_assign_op(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif.endif.endi...endif.endif [
    i64 35, label %.3.if
    i64 9, label %.3.if.fold.split
    i64 10, label %.3.if.fold.split1
    i64 11, label %.3.if.fold.split2
    i64 12, label %.3.if.fold.split3
    i64 13, label %.3.if.fold.split4
    i64 14, label %.3.if.fold.split5
    i64 15, label %.3.if.fold.split6
    i64 16, label %.3.if.fold.split7
    i64 17, label %.3.if.fold.split8
    i64 19, label %.3.if.fold.split9
  ]

.3.if.fold.split:                                 ; preds = %.3
  br label %.3.if

.3.if.fold.split1:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split2:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split3:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split4:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split5:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split6:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split7:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split8:                                ; preds = %.3
  br label %.3.if

.3.if.fold.split9:                                ; preds = %.3
  br label %.3.if

.3.if:                                            ; preds = %.3, %.3.if.fold.split9, %.3.if.fold.split8, %.3.if.fold.split7, %.3.if.fold.split6, %.3.if.fold.split5, %.3.if.fold.split4, %.3.if.fold.split3, %.3.if.fold.split2, %.3.if.fold.split1, %.3.if.fold.split, %.3.endif.endif.endif.endi...endif.endif
  %merge = phi i64 [ 18, %.3 ], [ %., %.3.endif.endif.endif.endi...endif.endif ], [ 21, %.3.if.fold.split ], [ 20, %.3.if.fold.split1 ], [ 19, %.3.if.fold.split2 ], [ 22, %.3.if.fold.split3 ], [ 23, %.3.if.fold.split4 ], [ 24, %.3.if.fold.split5 ], [ 25, %.3.if.fold.split6 ], [ 26, %.3.if.fold.split7 ], [ 27, %.3.if.fold.split8 ], [ 28, %.3.if.fold.split9 ]
  ret i64 %merge

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3
  %.98 = icmp eq i64 %.9, 18
  %. = select i1 %.98, i64 29, i64 -1
  br label %.3.if
}

define %ExpressionNode.676442* @Parser_parse_expression(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 34
  %.9 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.8, align 8
  %.10 = call %ExpressionNode.676442* %.9(%Parser.676536* %.1)
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.14 = load %Token.676406*, %Token.676406** %.13, align 8
  %.15 = getelementptr inbounds %Token.676406, %Token.676406* %.14, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 81
  %.20 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.20, i64 0, i32 0
  %.22 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.21, align 8
  %.23 = call i1 %.22(%Parser.676536* %.1)
  %.24 = and i1 %.17, %.23
  %.28 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  br i1 %.24, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.29 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.28, i64 0, i32 2
  %.30 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.29, align 8
  call void %.30(%Parser.676536* %.1)
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 36
  %.37 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.36, align 8
  %.38 = call %ExpressionNode.676442* %.37(%Parser.676536* %.1)
  %.39 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.40 = bitcast i8* %.39 to %BinaryExpressionNode.676470*
  %.41 = bitcast i8* %.39 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.41, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.40, %ExpressionNode.676442* %.10, i64 17, %ExpressionNode.676442* %.38)
  %.44 = bitcast i8* %.39 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.44

.3.endif:                                         ; preds = %.3
  %.49 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.28, i64 0, i32 35
  %.50 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.49, align 8
  %.51 = call i64 %.50(%Parser.676536* %.1)
  %.55 = icmp eq i64 %.51, -1
  %.58 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.59 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.58, i64 0, i32 0
  %.60 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.59, align 8
  %.61 = call i1 %.60(%Parser.676536* %.1)
  %.62 = xor i1 %.61, true
  %.63 = or i1 %.55, %.62
  br i1 %.63, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  ret %ExpressionNode.676442* %.10

.3.endif.endif:                                   ; preds = %.3.endif
  %.69 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.70 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.69, i64 0, i32 2
  %.71 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.70, align 8
  call void %.71(%Parser.676536* %.1)
  %.77 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.77, i64 0, i32 36
  %.79 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.78, align 8
  %.80 = call %ExpressionNode.676442* %.79(%Parser.676536* %.1)
  %.81 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.82 = bitcast i8* %.81 to %BinaryExpressionNode.676470*
  %.83 = bitcast i8* %.81 to %BinaryExpressionNode_vtable_ty.676471**
  store %BinaryExpressionNode_vtable_ty.676471* @BinaryExpressionNode_vtable_data, %BinaryExpressionNode_vtable_ty.676471** %.83, align 8
  call void @BinaryExpressionNode_constructor(%BinaryExpressionNode.676470* %.82, %ExpressionNode.676442* %.10, i64 %.51, %ExpressionNode.676442* %.80)
  %.86 = bitcast i8* %.81 to %ExpressionNode.676442*
  ret %ExpressionNode.676442* %.86
}

define noalias %IfStatementNode.676476* @Parser_parse_if_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %IfStatementNode.676476*
  %.12 = bitcast i8* %.10 to %IfStatementNode_vtable_ty.676477**
  store %IfStatementNode_vtable_ty.676477* @IfStatementNode_vtable_data, %IfStatementNode_vtable_ty.676477** %.12, align 8
  call void @IfStatementNode_constructor(%IfStatementNode.676476* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.25 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.25, i64 0, i32 36
  %.27 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.26, align 8
  %.28 = call %ExpressionNode.676442* %.27(%Parser.676536* %.1)
  %.29 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.29 to %ExpressionNode.676442**
  store %ExpressionNode.676442* %.28, %ExpressionNode.676442** %0, align 8
  %.33 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.33 to %FloRange.676382**
  %.34 = load %FloRange.676382*, %FloRange.676382** %1, align 8
  %.38 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.28, i64 0, i32 1
  %.39 = load %FloRange.676382*, %FloRange.676382** %.38, align 8
  %.40 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.34, %FloRange.676382* %.39)
  store %FloRange.676382* %.40, %FloRange.676382** %1, align 8
  %.46 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.46, i64 0, i32 43
  %.48 = load %BlockNode.676438* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)** %.47, align 8
  %.49 = call %BlockNode.676438* %.48(%Parser.676536* %.1)
  %.50 = getelementptr inbounds i8, i8* %.10, i64 32
  %2 = bitcast i8* %.50 to %BlockNode.676438**
  store %BlockNode.676438* %.49, %BlockNode.676438** %2, align 8
  %.54 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.54, i64 0, i32 5
  %.56 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.55, align 8
  call void %.56(%Parser.676536* %.1)
  %.60 = load %Token.676406*, %Token.676406** %.6, align 8
  %.61 = getelementptr inbounds %Token.676406, %Token.676406* %.60, i64 0, i32 1
  %.62 = load i64, i64* %.61, align 8
  %.63 = icmp eq i64 %.62, 57
  br i1 %.63, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.67 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.67, i64 0, i32 2
  %.69 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.68, align 8
  call void %.69(%Parser.676536* %.1)
  %.74 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.75 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.74, i64 0, i32 43
  %.76 = load %BlockNode.676438* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)** %.75, align 8
  %.77 = call %BlockNode.676438* %.76(%Parser.676536* %.1)
  %.78 = getelementptr inbounds i8, i8* %.10, i64 40
  %3 = bitcast i8* %.78 to %BlockNode.676438**
  store %BlockNode.676438* %.77, %BlockNode.676438** %3, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %IfStatementNode.676476* %.11
}

define noalias %WhileStatementNode.676478* @Parser_parse_while_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.11 = bitcast i8* %.10 to %WhileStatementNode.676478*
  %.12 = bitcast i8* %.10 to %WhileStatementNode_vtable_ty.676479**
  store %WhileStatementNode_vtable_ty.676479* @WhileStatementNode_vtable_data, %WhileStatementNode_vtable_ty.676479** %.12, align 8
  call void @WhileStatementNode_constructor(%WhileStatementNode.676478* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.25 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.25, i64 0, i32 36
  %.27 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.26, align 8
  %.28 = call %ExpressionNode.676442* %.27(%Parser.676536* %.1)
  %.29 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.29 to %ExpressionNode.676442**
  store %ExpressionNode.676442* %.28, %ExpressionNode.676442** %0, align 8
  %.33 = getelementptr inbounds i8, i8* %.10, i64 8
  %1 = bitcast i8* %.33 to %FloRange.676382**
  %.34 = load %FloRange.676382*, %FloRange.676382** %1, align 8
  %.38 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.28, i64 0, i32 1
  %.39 = load %FloRange.676382*, %FloRange.676382** %.38, align 8
  %.40 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.34, %FloRange.676382* %.39)
  store %FloRange.676382* %.40, %FloRange.676382** %1, align 8
  %.46 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.46, i64 0, i32 43
  %.48 = load %BlockNode.676438* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)** %.47, align 8
  %.49 = call %BlockNode.676438* %.48(%Parser.676536* %.1)
  %.50 = getelementptr inbounds i8, i8* %.10, i64 32
  %2 = bitcast i8* %.50 to %BlockNode.676438**
  store %BlockNode.676438* %.49, %BlockNode.676438** %2, align 8
  ret %WhileStatementNode.676478* %.11
}

define noalias %ForStatementNode.676480* @Parser_parse_for_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(80) i8* @malloc(i64 80)
  %.11 = bitcast i8* %.10 to %ForStatementNode.676480*
  %.12 = bitcast i8* %.10 to %ForStatementNode_vtable_ty.676481**
  store %ForStatementNode_vtable_ty.676481* @ForStatementNode_vtable_data, %ForStatementNode_vtable_ty.676481** %.12, align 8
  call void @ForStatementNode_constructor(%ForStatementNode.676480* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 3
  %.26 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.25, align 8
  %.27 = call %Token.676406* %.26(%Parser.676536* %.1, i64 1)
  %.28 = getelementptr inbounds %Token.676406, %Token.676406* %.27, i64 0, i32 1
  %.29 = load i64, i64* %.28, align 8
  %.30.not = icmp eq i64 %.29, 81
  br i1 %.30.not, label %.3.else, label %.3.if

.3.if:                                            ; preds = %.3
  %.34 = load %Token.676406*, %Token.676406** %.6, align 8
  %.35 = getelementptr inbounds %Token.676406, %Token.676406* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37.not = icmp eq i64 %.36, 1
  br i1 %.37.not, label %.3.if.endif, label %.3.if.if

.3.else:                                          ; preds = %.3
  %.97 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.97 to i64*
  store i64 1, i64* %0, align 8
  %.102 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.103 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.102, i64 0, i32 4
  %.104 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.103, align 8
  %.105 = call %Token.676406* %.104(%Parser.676536* %.1, i64 50)
  %.107 = getelementptr inbounds i8, i8* %.10, i64 64
  %1 = bitcast i8* %.107 to %Token.676406**
  store %Token.676406* %.105, %Token.676406** %1, align 8
  %.111 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.112 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.111, i64 0, i32 4
  %.113 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.112, align 8
  %.114 = call %Token.676406* %.113(%Parser.676536* %.1, i64 81)
  %.118 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.119 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.118, i64 0, i32 36
  %.120 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.119, align 8
  %.121 = call %ExpressionNode.676442* %.120(%Parser.676536* %.1)
  br label %.3.endif.sink.split

.3.endif.sink.split:                              ; preds = %.3.else, %.3.if.endif.endif.if
  %.sink = phi i64 [ 40, %.3.if.endif.endif.if ], [ 48, %.3.else ]
  %.91.sink = phi %ExpressionNode.676442* [ %.91, %.3.if.endif.endif.if ], [ %.121, %.3.else ]
  %.92 = getelementptr inbounds i8, i8* %.10, i64 %.sink
  %2 = bitcast i8* %.92 to %ExpressionNode.676442**
  store %ExpressionNode.676442* %.91.sink, %ExpressionNode.676442** %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.endif.sink.split, %.3.if.endif.endif
  %.127 = getelementptr inbounds i8, i8* %.10, i64 8
  %3 = bitcast i8* %.127 to %FloRange.676382**
  %.128 = load %FloRange.676382*, %FloRange.676382** %3, align 8
  %.131 = load %Token.676406*, %Token.676406** %.6, align 8
  %.132 = getelementptr inbounds %Token.676406, %Token.676406* %.131, i64 0, i32 2
  %.133 = load %FloRange.676382*, %FloRange.676382** %.132, align 8
  %.134 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.128, %FloRange.676382* %.133)
  store %FloRange.676382* %.134, %FloRange.676382** %3, align 8
  %.139 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.140 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.139, i64 0, i32 0
  %.141 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.140, align 8
  %.142 = call i1 %.141(%Parser.676536* %.1)
  br i1 %.142, label %.3.endif.if, label %.3.endif.endif

.3.if.if:                                         ; preds = %.3.if
  %.42 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.42, i64 0, i32 42
  %.44 = load %StatementNode.676436* (%Parser.676536*)*, %StatementNode.676436* (%Parser.676536*)** %.43, align 8
  %.45 = call %StatementNode.676436* %.44(%Parser.676536* %.1)
  %.46 = getelementptr inbounds i8, i8* %.10, i64 24
  %4 = bitcast i8* %.46 to %StatementNode.676436**
  store %StatementNode.676436* %.45, %StatementNode.676436** %4, align 8
  br label %.3.if.endif

.3.if.endif:                                      ; preds = %.3.if, %.3.if.if
  %.51 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.51, i64 0, i32 4
  %.53 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.52, align 8
  %.54 = call %Token.676406* %.53(%Parser.676536* %.1, i64 1)
  %.57 = load %Token.676406*, %Token.676406** %.6, align 8
  %.58 = getelementptr inbounds %Token.676406, %Token.676406* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60.not = icmp eq i64 %.59, 1
  br i1 %.60.not, label %.3.if.endif.endif, label %.3.if.endif.if

.3.if.endif.if:                                   ; preds = %.3.if.endif
  %.65 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.65, i64 0, i32 36
  %.67 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.66, align 8
  %.68 = call %ExpressionNode.676442* %.67(%Parser.676536* %.1)
  %.69 = getelementptr inbounds i8, i8* %.10, i64 32
  %5 = bitcast i8* %.69 to %ExpressionNode.676442**
  store %ExpressionNode.676442* %.68, %ExpressionNode.676442** %5, align 8
  br label %.3.if.endif.endif

.3.if.endif.endif:                                ; preds = %.3.if.endif, %.3.if.endif.if
  %.74 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.75 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.74, i64 0, i32 4
  %.76 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.75, align 8
  %.77 = call %Token.676406* %.76(%Parser.676536* %.1, i64 1)
  %.80 = load %Token.676406*, %Token.676406** %.6, align 8
  %.81 = getelementptr inbounds %Token.676406, %Token.676406* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83.not = icmp eq i64 %.82, 24
  br i1 %.83.not, label %.3.endif, label %.3.if.endif.endif.if

.3.if.endif.endif.if:                             ; preds = %.3.if.endif.endif
  %.88 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.89 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.88, i64 0, i32 36
  %.90 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.89, align 8
  %.91 = call %ExpressionNode.676442* %.90(%Parser.676536* %.1)
  br label %.3.endif.sink.split

.3.endif.if:                                      ; preds = %.3.endif
  %.147 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.148 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.147, i64 0, i32 43
  %.149 = load %BlockNode.676438* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)** %.148, align 8
  %.150 = call %BlockNode.676438* %.149(%Parser.676536* %.1)
  %.151 = getelementptr inbounds i8, i8* %.10, i64 72
  %6 = bitcast i8* %.151 to %BlockNode.676438**
  store %BlockNode.676438* %.150, %BlockNode.676438** %6, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  ret %ForStatementNode.676480* %.11
}

define noalias %VarDeclarationStatement.676484* @Parser_parse_variable_declaration_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %VarDeclarationStatement.676484*
  %.12 = bitcast i8* %.10 to %VarDeclarationStatement_vtable_ty.676485**
  store %VarDeclarationStatement_vtable_ty.676485* @VarDeclarationStatement_vtable_data, %VarDeclarationStatement_vtable_ty.676485** %.12, align 8
  call void @VarDeclarationStatement_constructor(%VarDeclarationStatement.676484* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.25 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.25, i64 0, i32 4
  %.27 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.26, align 8
  %.28 = call %Token.676406* %.27(%Parser.676536* %.1, i64 50)
  %.30 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.30 to %Token.676406**
  store %Token.676406* %.28, %Token.676406** %0, align 8
  %.34 = load %Token.676406*, %Token.676406** %.6, align 8
  %.35 = getelementptr inbounds %Token.676406, %Token.676406* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 0
  br i1 %.37, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.41 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.41, i64 0, i32 2
  %.43 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.42, align 8
  call void %.43(%Parser.676536* %.1)
  %.48 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.48, i64 0, i32 10
  %.50 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.49, align 8
  %.51 = call %TypeNode.676426* %.50(%Parser.676536* %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.52 to %TypeNode.676426**
  store %TypeNode.676426* %.51, %TypeNode.676426** %1, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.57 = load %Token.676406*, %Token.676406** %.6, align 8
  %.58 = getelementptr inbounds %Token.676406, %Token.676406* %.57, i64 0, i32 2
  %2 = bitcast %FloRange.676382** %.58 to i64*
  %.591 = load i64, i64* %2, align 8
  %end_range = alloca %FloRange.676382*, align 8
  %3 = bitcast %FloRange.676382** %end_range to i64*
  store i64 %.591, i64* %3, align 8
  %.64 = getelementptr inbounds %Token.676406, %Token.676406* %.57, i64 0, i32 1
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp eq i64 %.65, 35
  br i1 %.66, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3.endif
  %.70 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.71 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.70, i64 0, i32 2
  %.72 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.71, align 8
  call void %.72(%Parser.676536* %.1)
  %.77 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.77, i64 0, i32 36
  %.79 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.78, align 8
  %.80 = call %ExpressionNode.676442* %.79(%Parser.676536* %.1)
  %.81 = getelementptr inbounds i8, i8* %.10, i64 40
  %4 = bitcast i8* %.81 to %ExpressionNode.676442**
  store %ExpressionNode.676442* %.80, %ExpressionNode.676442** %4, align 8
  %.86 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.80, i64 0, i32 1
  %5 = bitcast %FloRange.676382** %.86 to i64*
  %.875 = load i64, i64* %5, align 8
  store i64 %.875, i64* %3, align 8
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3.endif
  %.91 = getelementptr inbounds i8, i8* %.10, i64 32
  %6 = bitcast i8* %.91 to i64*
  %.922 = load i64, i64* %6, align 8
  %.93 = trunc i64 %.922 to i32
  %.95 = icmp ne i32 %.93, 0
  %.101 = icmp eq i64 %.65, 22
  %.102 = and i1 %.101, %.95
  br i1 %.102, label %.3.endif.else.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.else.if.endif, %.3.endif.if
  %.168 = getelementptr inbounds i8, i8* %.10, i64 8
  %7 = bitcast i8* %.168 to %FloRange.676382**
  %.169 = load %FloRange.676382*, %FloRange.676382** %7, align 8
  %.170 = load %FloRange.676382*, %FloRange.676382** %end_range, align 8
  %.171 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.169, %FloRange.676382* %.170)
  store %FloRange.676382* %.171, %FloRange.676382** %7, align 8
  ret %VarDeclarationStatement.676484* %.11

.3.endif.else.if:                                 ; preds = %.3.endif.else
  %8 = bitcast i8* %.91 to %TypeNode.676426**
  %.106 = load %TypeNode.676426*, %TypeNode.676426** %8, align 8
  %.110 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.106, i64 0, i32 1
  %.111 = load %FloRange.676382*, %FloRange.676382** %.110, align 8
  %.112 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.113 = bitcast i8* %.112 to %NewExpressionNode.676460*
  %.114 = bitcast i8* %.112 to %NewExpressionNode_vtable_ty.676461**
  store %NewExpressionNode_vtable_ty.676461* @NewExpressionNode_vtable_data, %NewExpressionNode_vtable_ty.676461** %.114, align 8
  call void @NewExpressionNode_constructor(%NewExpressionNode.676460* %.113, %TypeNode.676426* %.106, %FloRange.676382* %.111)
  %new_node = alloca %NewExpressionNode.676460*, align 8
  %9 = bitcast %NewExpressionNode.676460** %new_node to i8**
  store i8* %.112, i8** %9, align 8
  %.119 = getelementptr inbounds i8, i8* %.112, i64 40
  %10 = bitcast i8* %.119 to i1*
  store i1 false, i1* %10, align 1
  %.123 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.124 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.123, i64 0, i32 2
  %.125 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.124, align 8
  call void %.125(%Parser.676536* %.1)
  %.129 = load %Token.676406*, %Token.676406** %.6, align 8
  %.130 = getelementptr inbounds %Token.676406, %Token.676406* %.129, i64 0, i32 1
  %.131 = load i64, i64* %.130, align 8
  %.132.not = icmp eq i64 %.131, 23
  br i1 %.132.not, label %.3.endif.else.if.endif, label %.3.endif.else.if.if

.3.endif.else.if.if:                              ; preds = %.3.endif.else.if
  %.136 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.137 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.136, i64 0, i32 11
  %.138 = load void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)*, void (%Parser.676536*, %"Array<ExpressionNode>.676454"*)** %.137, align 8
  %.139 = load %NewExpressionNode.676460*, %NewExpressionNode.676460** %new_node, align 8
  %.140 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.139, i64 0, i32 6
  %.141 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.140, align 8
  call void %.138(%Parser.676536* %.1, %"Array<ExpressionNode>.676454"* %.141)
  br label %.3.endif.else.if.endif

.3.endif.else.if.endif:                           ; preds = %.3.endif.else.if, %.3.endif.else.if.if
  %.144 = load %NewExpressionNode.676460*, %NewExpressionNode.676460** %new_node, align 8
  %.146 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.144, i64 0, i32 1
  %.147 = load %FloRange.676382*, %FloRange.676382** %.146, align 8
  %.150 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.151 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.150, i64 0, i32 4
  %.152 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.151, align 8
  %.153 = call %Token.676406* %.152(%Parser.676536* %.1, i64 23)
  %.154 = getelementptr inbounds %Token.676406, %Token.676406* %.153, i64 0, i32 2
  %.155 = load %FloRange.676382*, %FloRange.676382** %.154, align 8
  %.156 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.147, %FloRange.676382* %.155)
  store %FloRange.676382* %.156, %FloRange.676382** %.146, align 8
  %11 = bitcast %NewExpressionNode.676460** %new_node to i64*
  %.16034 = load i64, i64* %11, align 8
  %.162 = getelementptr inbounds i8, i8* %.10, i64 40
  %12 = bitcast i8* %.162 to i64*
  store i64 %.16034, i64* %12, align 8
  br label %.3.endif.endif
}

define noalias %ReturnStatementNode.676482* @Parser_parse_return_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %ReturnStatementNode.676482*
  %.12 = bitcast i8* %.10 to %ReturnStatementNode_vtable_ty.676483**
  store %ReturnStatementNode_vtable_ty.676483* @ReturnStatementNode_vtable_data, %ReturnStatementNode_vtable_ty.676483** %.12, align 8
  call void @ReturnStatementNode_constructor(%ReturnStatementNode.676482* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.24 = load %Token.676406*, %Token.676406** %.6, align 8
  %.25 = getelementptr inbounds %Token.676406, %Token.676406* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp ne i64 %.26, 30
  %.30 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.31 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.30, i64 0, i32 0
  %.32 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.31, align 8
  %.33 = call i1 %.32(%Parser.676536* %.1)
  %.34 = and i1 %.27, %.33
  %.37 = load %Token.676406*, %Token.676406** %.6, align 8
  %.38 = getelementptr inbounds %Token.676406, %Token.676406* %.37, i64 0, i32 1
  %.39 = load i64, i64* %.38, align 8
  %.40 = icmp ne i64 %.39, 25
  %.41 = and i1 %.34, %.40
  br i1 %.41, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.45 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.46 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.45, i64 0, i32 36
  %.47 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.46, align 8
  %.48 = call %ExpressionNode.676442* %.47(%Parser.676536* %.1)
  %value = alloca %ExpressionNode.676442*, align 8
  store %ExpressionNode.676442* %.48, %ExpressionNode.676442** %value, align 8
  %.52 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.52 to %FloRange.676382**
  %.53 = load %FloRange.676382*, %FloRange.676382** %0, align 8
  %.55 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.48, i64 0, i32 1
  %.56 = load %FloRange.676382*, %FloRange.676382** %.55, align 8
  %.57 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.53, %FloRange.676382* %.56)
  store %FloRange.676382* %.57, %FloRange.676382** %0, align 8
  %1 = bitcast %ExpressionNode.676442** %value to i64*
  %.611 = load i64, i64* %1, align 8
  %.62 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.62 to i64*
  store i64 %.611, i64* %2, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  ret %ReturnStatementNode.676482* %.11
}

define %StatementNode.676436* @Parser_parse_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.14 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  switch i64 %.15, label %.3.else.else.else.else.else.else.else [
    i64 56, label %.3.if
    i64 72, label %.3.else.if
    i64 71, label %.3.else.else.if
    i64 76, label %.3.else.else.else.if
    i64 55, label %.3.else.else.else.else.if
    i64 54, label %.3.else.else.else.else.else.if
    i64 75, label %.3.else.else.else.else.else.else.if
  ]

.3.if:                                            ; preds = %.3
  %.19 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.20 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.20, i64 0, i32 37
  %.22 = load %IfStatementNode.676476* (%Parser.676536*)*, %IfStatementNode.676476* (%Parser.676536*)** %.21, align 8
  %.23 = call %IfStatementNode.676476* %.22(%Parser.676536* %.1)
  %.24 = bitcast %IfStatementNode.676476* %.23 to %StatementNode.676436*
  ret %StatementNode.676436* %.24

.3.else.if:                                       ; preds = %.3
  %.34 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.34, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 38
  %.37 = load %WhileStatementNode.676478* (%Parser.676536*)*, %WhileStatementNode.676478* (%Parser.676536*)** %.36, align 8
  %.38 = call %WhileStatementNode.676478* %.37(%Parser.676536* %.1)
  %.39 = bitcast %WhileStatementNode.676478* %.38 to %StatementNode.676436*
  ret %StatementNode.676436* %.39

.3.else.else.if:                                  ; preds = %.3
  %.49 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.50 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.49, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.50, i64 0, i32 39
  %.52 = load %ForStatementNode.676480* (%Parser.676536*)*, %ForStatementNode.676480* (%Parser.676536*)** %.51, align 8
  %.53 = call %ForStatementNode.676480* %.52(%Parser.676536* %.1)
  %.54 = bitcast %ForStatementNode.676480* %.53 to %StatementNode.676436*
  ret %StatementNode.676436* %.54

.3.else.else.else.if:                             ; preds = %.3
  %.64 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.65 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.64, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.65, i64 0, i32 41
  %.67 = load %ReturnStatementNode.676482* (%Parser.676536*)*, %ReturnStatementNode.676482* (%Parser.676536*)** %.66, align 8
  %.68 = call %ReturnStatementNode.676482* %.67(%Parser.676536* %.1)
  %.69 = bitcast %ReturnStatementNode.676482* %.68 to %StatementNode.676436*
  ret %StatementNode.676436* %.69

.3.else.else.else.else.if:                        ; preds = %.3
  %.79 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.80 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.79, align 8
  %.81 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.80, i64 0, i32 40
  %.82 = load %VarDeclarationStatement.676484* (%Parser.676536*)*, %VarDeclarationStatement.676484* (%Parser.676536*)** %.81, align 8
  %.83 = call %VarDeclarationStatement.676484* %.82(%Parser.676536* %.1)
  %.84 = bitcast %VarDeclarationStatement.676484* %.83 to %StatementNode.676436*
  ret %StatementNode.676436* %.84

.3.else.else.else.else.else.if:                   ; preds = %.3
  %.94 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.95 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.94, align 8
  %.96 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.95, i64 0, i32 53
  %.97 = load %ConstDeclarationStatement.676486* (%Parser.676536*)*, %ConstDeclarationStatement.676486* (%Parser.676536*)** %.96, align 8
  %.98 = call %ConstDeclarationStatement.676486* %.97(%Parser.676536* %.1)
  %.99 = bitcast %ConstDeclarationStatement.676486* %.98 to %StatementNode.676436*
  ret %StatementNode.676436* %.99

.3.else.else.else.else.else.else.if:              ; preds = %.3
  %.109 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.110 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.109, align 8
  %.111 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.110, i64 0, i32 2
  %.112 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.111, align 8
  call void %.112(%Parser.676536* %.1)
  %.115 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.116 = bitcast i8* %.115 to %StatementNode.676436*
  %.117 = bitcast i8* %.115 to %StatementNode_vtable_ty.676437**
  store %StatementNode_vtable_ty.676437* @StatementNode_vtable_data, %StatementNode_vtable_ty.676437** %.117, align 8
  call void @StatementNode_constructor(%StatementNode.676436* %.116, i64 5, %FloRange.676382* %.9)
  ret %StatementNode.676436* %.116

.3.else.else.else.else.else.else.else:            ; preds = %.3
  %.126 = icmp eq i64 %.15, 74
  %.129 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.130 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.129, align 8
  br i1 %.126, label %.3.else.else.else.else.else.else.else.if, label %.3.else.else.else.else.else.else.else.endif

.3.else.else.else.else.else.else.else.if:         ; preds = %.3.else.else.else.else.else.else.else
  %.131 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.130, i64 0, i32 2
  %.132 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.131, align 8
  call void %.132(%Parser.676536* %.1)
  %.135 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.136 = bitcast i8* %.135 to %StatementNode.676436*
  %.137 = bitcast i8* %.135 to %StatementNode_vtable_ty.676437**
  store %StatementNode_vtable_ty.676437* @StatementNode_vtable_data, %StatementNode_vtable_ty.676437** %.137, align 8
  call void @StatementNode_constructor(%StatementNode.676436* %.136, i64 6, %FloRange.676382* %.9)
  ret %StatementNode.676436* %.136

.3.else.else.else.else.else.else.else.endif:      ; preds = %.3.else.else.else.else.else.else.else
  %.151 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.130, i64 0, i32 36
  %.152 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.151, align 8
  %.153 = call %ExpressionNode.676442* %.152(%Parser.676536* %.1)
  %.154 = bitcast %ExpressionNode.676442* %.153 to %StatementNode.676436*
  ret %StatementNode.676436* %.154
}

define noalias %BlockNode.676438* @Parser_parse_block(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.11 = bitcast i8* %.10 to %BlockNode.676438*
  %.12 = bitcast i8* %.10 to %BlockNode_vtable_ty.676439**
  store %BlockNode_vtable_ty.676439* @BlockNode_vtable_data, %BlockNode_vtable_ty.676439** %.12, align 8
  call void @BlockNode_constructor(%BlockNode.676438* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 5
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.24 = load %Token.676406*, %Token.676406** %.6, align 8
  %.25 = getelementptr inbounds %Token.676406, %Token.676406* %.24, i64 0, i32 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp eq i64 %.26, 24
  br i1 %.27, label %.3.if, label %.3.else

.3.if:                                            ; preds = %.3
  %.31 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.32 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.31, i64 0, i32 2
  %.33 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.32, align 8
  call void %.33(%Parser.676536* %.1)
  %.37 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.37, i64 0, i32 5
  %.39 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.38, align 8
  call void %.39(%Parser.676536* %.1)
  %.43 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.44 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.43, i64 0, i32 0
  %.45 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.44, align 8
  %.46 = call i1 %.45(%Parser.676536* %.1)
  %.49 = load %Token.676406*, %Token.676406** %.6, align 8
  %.50 = getelementptr inbounds %Token.676406, %Token.676406* %.49, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp ne i64 %.51, 25
  %.53 = and i1 %.46, %.52
  br i1 %.53, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3.if
  %.56 = getelementptr inbounds i8, i8* %.10, i64 16
  %0 = bitcast i8* %.56 to %"Array<StatementNode>.676440"**
  %.57 = load %"Array<StatementNode>.676440"*, %"Array<StatementNode>.676440"** %0, align 8
  %.64 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.57, i64 0, i32 0
  br label %while.entry

.3.else:                                          ; preds = %.3
  %.97 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.97 to %"Array<StatementNode>.676440"**
  %.98 = load %"Array<StatementNode>.676440"*, %"Array<StatementNode>.676440"** %1, align 8
  %.101 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.102 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.101, i64 0, i32 42
  %.103 = load %StatementNode.676436* (%Parser.676536*)*, %StatementNode.676436* (%Parser.676536*)** %.102, align 8
  %.104 = call %StatementNode.676436* %.103(%Parser.676536* %.1)
  %.105 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.98, i64 0, i32 0
  %.106 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.105, align 8
  %.107 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.106, i64 0, i32 2
  %.108 = load void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)** %.107, align 8
  call void %.108(%"Array<StatementNode>.676440"* %.98, %StatementNode.676436* %.104)
  br label %.3.endif

.3.endif:                                         ; preds = %while.exit, %.3.else
  ret %BlockNode.676438* %.11

while.entry:                                      ; preds = %while.entry.preheader, %while.entry
  %.60 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.60, i64 0, i32 42
  %.62 = load %StatementNode.676436* (%Parser.676536*)*, %StatementNode.676436* (%Parser.676536*)** %.61, align 8
  %.63 = call %StatementNode.676436* %.62(%Parser.676536* %.1)
  %.65 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.64, align 8
  %.66 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)*, void (%"Array<StatementNode>.676440"*, %StatementNode.676436*)** %.66, align 8
  call void %.67(%"Array<StatementNode>.676440"* %.57, %StatementNode.676436* %.63)
  %.71 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.71, i64 0, i32 5
  %.73 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.72, align 8
  call void %.73(%Parser.676536* %.1)
  %.77 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.78, align 8
  %.80 = call i1 %.79(%Parser.676536* %.1)
  %.83 = load %Token.676406*, %Token.676406** %.6, align 8
  %.84 = getelementptr inbounds %Token.676406, %Token.676406* %.83, i64 0, i32 1
  %.85 = load i64, i64* %.84, align 8
  %.86 = icmp ne i64 %.85, 25
  %.87 = and i1 %.80, %.86
  br i1 %.87, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3.if
  %.91 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.92 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.91, i64 0, i32 4
  %.93 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.92, align 8
  %.94 = call %Token.676406* %.93(%Parser.676536* %.1, i64 25)
  br label %.3.endif
}

define noalias %TypeAliasNode.676518* @Parser_parse_type_alias(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 2
  %.9 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.8, align 8
  call void %.9(%Parser.676536* %.1)
  %.12 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.13 = bitcast i8* %.12 to %TypeAliasNode.676518*
  %.14 = bitcast i8* %.12 to %TypeAliasNode_vtable_ty.676519**
  store %TypeAliasNode_vtable_ty.676519* @TypeAliasNode_vtable_data, %TypeAliasNode_vtable_ty.676519** %.14, align 8
  %.20 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.20, i64 0, i32 4
  %.22 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.21, align 8
  %.23 = call %Token.676406* %.22(%Parser.676536* %.1, i64 50)
  %.25 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.25 to %Token.676406**
  store %Token.676406* %.23, %Token.676406** %0, align 8
  %.29 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.30 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.29, i64 0, i32 4
  %.31 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.30, align 8
  %.32 = call %Token.676406* %.31(%Parser.676536* %.1, i64 35)
  %.36 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.37 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.36, i64 0, i32 10
  %.38 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.37, align 8
  %.39 = call %TypeNode.676426* %.38(%Parser.676536* %.1)
  %.40 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.40 to %TypeNode.676426**
  store %TypeNode.676426* %.39, %TypeNode.676426** %1, align 8
  ret %TypeAliasNode.676518* %.13
}

define noalias %ArgNode.676488* @Parser_parse_arg(%Parser.676536* %.1) {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.8 = bitcast i8* %.6 to %ArgNode_vtable_ty.676489**
  store %ArgNode_vtable_ty.676489* @ArgNode_vtable_data, %ArgNode_vtable_ty.676489** %.8, align 8
  %.12 = getelementptr inbounds i8, i8* %.6, i64 16
  %0 = bitcast i8* %.12 to %TypeNode.676426**
  %.15 = getelementptr inbounds i8, i8* %.6, i64 24
  %1 = bitcast i8* %.15 to %ExpressionNode.676442**
  %.19 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.12, i8 0, i64 16, i1 false)
  %.20 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.21 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.20, i64 0, i32 4
  %.22 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.21, align 8
  %.23 = call %Token.676406* %.22(%Parser.676536* %.1, i64 50)
  %.25 = getelementptr inbounds i8, i8* %.6, i64 8
  %2 = bitcast i8* %.25 to %Token.676406**
  store %Token.676406* %.23, %Token.676406** %2, align 8
  %.29 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.30 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.29, i64 0, i32 0
  %.31 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.30, align 8
  %.32 = call i1 %.31(%Parser.676536* %.1)
  br i1 %.32, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3.endif.endif.endif, %.3.endif.endif.endif.if, %.3.endif.if, %.3
  %.7 = bitcast i8* %.6 to %ArgNode.676488*
  ret %ArgNode.676488* %.7

.3.endif:                                         ; preds = %.3
  %.38 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.39 = load %Token.676406*, %Token.676406** %.38, align 8
  %.40 = getelementptr inbounds %Token.676406, %Token.676406* %.39, i64 0, i32 1
  %.41 = load i64, i64* %.40, align 8
  %.42 = icmp eq i64 %.41, 0
  br i1 %.42, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.46 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.47 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.46, i64 0, i32 2
  %.48 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.47, align 8
  call void %.48(%Parser.676536* %.1)
  %.53 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.54 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.53, i64 0, i32 10
  %.55 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.54, align 8
  %.56 = call %TypeNode.676426* %.55(%Parser.676536* %.1)
  store %TypeNode.676426* %.56, %TypeNode.676426** %0, align 8
  %.61 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.61, i64 0, i32 0
  %.63 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.62, align 8
  %.64 = call i1 %.63(%Parser.676536* %.1)
  br i1 %.64, label %.3.endif.endif, label %.3.if

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  %.72 = load %Token.676406*, %Token.676406** %.38, align 8
  %.73 = getelementptr inbounds %Token.676406, %Token.676406* %.72, i64 0, i32 1
  %.74 = load i64, i64* %.73, align 8
  %.75 = icmp eq i64 %.74, 35
  br i1 %.75, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.79 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.80 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.79, i64 0, i32 2
  %.81 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.80, align 8
  call void %.81(%Parser.676536* %.1)
  %.86 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.87 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.86, i64 0, i32 36
  %.88 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.87, align 8
  %.89 = call %ExpressionNode.676442* %.88(%Parser.676536* %.1)
  store %ExpressionNode.676442* %.89, %ExpressionNode.676442** %1, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.if, %.3.endif.endif
  %3 = bitcast i8* %.12 to i64*
  %.951 = load i64, i64* %3, align 8
  %4 = bitcast i8* %.15 to i64*
  %.1012 = load i64, i64* %4, align 8
  %5 = or i64 %.1012, %.951
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %.3.endif.endif.endif.if, label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.109 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.19, align 8
  %.110 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.109, i64 0, i32 1
  %.111 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.110, align 8
  %8 = bitcast i8* %.25 to %IdentifierToken.676420**
  %.114 = load %IdentifierToken.676420*, %IdentifierToken.676420** %8, align 8
  %.115 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.114, i64 0, i32 3
  %.116 = load %string.676378*, %string.676378** %.115, align 8
  %.117 = getelementptr inbounds %string.676378, %string.676378* %.116, i64 0, i32 0
  %.118 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.117, align 8
  %.119 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.118, i64 0, i32 11
  %.120 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.119, align 8
  %.121 = call i8* %.120(%string.676378* %.116)
  %.123 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.180, i64 0, i64 0), i8* %.121)
  %.125 = call i8* @malloc(i64 %.123)
  %.126 = call i64 (i8*, i8*, ...) @sprintf(i8* %.125, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.180, i64 0, i64 0), i8* %.121)
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.129 = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.129, align 8
  %.131 = getelementptr inbounds i8, i8* %.127, i64 8
  %9 = bitcast i8* %.131 to i8**
  store i8* %.125, i8** %9, align 8
  %.133 = getelementptr inbounds i8, i8* %.127, i64 16
  %10 = bitcast i8* %.133 to i64*
  store i64 %.123, i64* %10, align 8
  %.135 = getelementptr inbounds i8, i8* %.127, i64 24
  %11 = bitcast i8* %.135 to i64*
  store i64 %.123, i64* %11, align 8
  call void %.111(%Parser.676536* %.1, %string.676378* %.128)
  %.139 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 2
  %.140 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.139, align 8
  %.141 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.140, i64 0, i32 2
  %.142 = load i64, i64* %.141, align 8
  %.143 = add i64 %.142, -1
  %.147 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.140, i64 0, i32 0
  %.148 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.147, align 8
  %.149 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.148, i64 0, i32 5
  %.150 = load %FloError.676384* (%"Array<FloError>.676397"*, i64)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)** %.149, align 8
  %.151 = call %FloError.676384* %.150(%"Array<FloError>.676397"* %.140, i64 %.143)
  %.155 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.114, i64 0, i32 2
  %12 = bitcast %FloRange.676382** %.155 to i64*
  %.1563 = load i64, i64* %12, align 8
  %.157 = getelementptr inbounds %FloError.676384, %FloError.676384* %.151, i64 0, i32 3
  %13 = bitcast %FloRange.676382** %.157 to i64*
  store i64 %.1563, i64* %13, align 8
  br label %.3.if
}

define void @Parser_parse_args(%Parser.676536* %.1, %"Array<ArgNode>.676492"* %.2) {
.4:
  %.9 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.10 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.11 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.10, i64 0, i32 45
  %.12 = load %ArgNode.676488* (%Parser.676536*)*, %ArgNode.676488* (%Parser.676536*)** %.11, align 8
  %.13 = call %ArgNode.676488* %.12(%Parser.676536* %.1)
  %.14 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.2, i64 0, i32 0
  %.15 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.15, i64 0, i32 2
  %.17 = load void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)** %.16, align 8
  call void %.17(%"Array<ArgNode>.676492"* %.2, %ArgNode.676488* %.13)
  %.20 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.21 = load %Token.676406*, %Token.676406** %.20, align 8
  %.22 = getelementptr inbounds %Token.676406, %Token.676406* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.27 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.28, align 8
  %.30 = call i1 %.29(%Parser.676536* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 4
  %.37 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.36, align 8
  %.38 = call %Token.676406* %.37(%Parser.676536* %.1, i64 2)
  %.42 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.43 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.42, i64 0, i32 45
  %.44 = load %ArgNode.676488* (%Parser.676536*)*, %ArgNode.676488* (%Parser.676536*)** %.43, align 8
  %.45 = call %ArgNode.676488* %.44(%Parser.676536* %.1)
  %.47 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.14, align 8
  %.48 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.47, i64 0, i32 2
  %.49 = load void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)*, void (%"Array<ArgNode>.676492"*, %ArgNode.676488*)** %.48, align 8
  call void %.49(%"Array<ArgNode>.676492"* %.2, %ArgNode.676488* %.45)
  %.53 = load %Token.676406*, %Token.676406** %.20, align 8
  %.54 = getelementptr inbounds %Token.676406, %Token.676406* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 2
  %.59 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.9, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.59, i64 0, i32 0
  %.61 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.60, align 8
  %.62 = call i1 %.61(%Parser.676536* %.1)
  %.63 = and i1 %.56, %.62
  br i1 %.63, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  ret void
}

define noalias %FunctionDeclarationNode.676490* @Parser_parse_function(%Parser.676536* %.1) {
.3:
  %.6 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.7 = bitcast i8* %.6 to %FunctionDeclarationNode.676490*
  %.8 = bitcast i8* %.6 to %FunctionDeclarationNode_vtable_ty.676491**
  store %FunctionDeclarationNode_vtable_ty.676491* @FunctionDeclarationNode_vtable_data, %FunctionDeclarationNode_vtable_ty.676491** %.8, align 8
  call void @FunctionDeclarationNode_constructor(%FunctionDeclarationNode.676490* %.7)
  %.14 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.15 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.15, i64 0, i32 4
  %.17 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.16, align 8
  %.18 = call %Token.676406* %.17(%Parser.676536* %.1, i64 50)
  %.20 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.20 to %Token.676406**
  store %Token.676406* %.18, %Token.676406** %0, align 8
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 4
  %.26 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.25, align 8
  %.27 = call %Token.676406* %.26(%Parser.676536* %.1, i64 22)
  %.29 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.30 = load %Token.676406*, %Token.676406** %.29, align 8
  %.31 = getelementptr inbounds %Token.676406, %Token.676406* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33.not = icmp eq i64 %.32, 23
  br i1 %.33.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.37 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.37, i64 0, i32 46
  %.39 = load void (%Parser.676536*, %"Array<ArgNode>.676492"*)*, void (%Parser.676536*, %"Array<ArgNode>.676492"*)** %.38, align 8
  %.41 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.41 to %"Array<ArgNode>.676492"**
  %.42 = load %"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"** %1, align 8
  call void %.39(%Parser.676536* %.1, %"Array<ArgNode>.676492"* %.42)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  %.47 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.47, i64 0, i32 4
  %.49 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.48, align 8
  %.50 = call %Token.676406* %.49(%Parser.676536* %.1, i64 23)
  %.53 = load %Token.676406*, %Token.676406** %.29, align 8
  %.54 = getelementptr inbounds %Token.676406, %Token.676406* %.53, i64 0, i32 1
  %.55 = load i64, i64* %.54, align 8
  %.56 = icmp eq i64 %.55, 0
  br i1 %.56, label %.3.endif.if, label %.3.endif.else

.3.endif.if:                                      ; preds = %.3.endif
  %.60 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.61 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.60, i64 0, i32 2
  %.62 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.61, align 8
  call void %.62(%Parser.676536* %.1)
  %.67 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.68 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.67, i64 0, i32 10
  %.69 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.68, align 8
  %.70 = call %TypeNode.676426* %.69(%Parser.676536* %.1)
  %.71 = getelementptr inbounds i8, i8* %.6, i64 32
  %2 = bitcast i8* %.71 to %TypeNode.676426**
  store %TypeNode.676426* %.70, %TypeNode.676426** %2, align 8
  br label %.3.endif.endif

.3.endif.else:                                    ; preds = %.3.endif
  %.75 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.76 = bitcast i8* %.75 to %FloRange.676382*
  %.77 = bitcast i8* %.75 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.77, align 8
  call void @FloRange_constructor(%FloRange.676382* %.76, i64 0, i64 0, i64 0, i64 0)
  %.80 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.81 = bitcast i8* %.80 to %TypeNode.676426*
  %.82 = bitcast i8* %.80 to %TypeNode_vtable_ty.676427**
  store %TypeNode_vtable_ty.676427* @TypeNode_vtable_data, %TypeNode_vtable_ty.676427** %.82, align 8
  call void @TypeNode_constructor(%TypeNode.676426* %.81, i64 12, %FloRange.676382* %.76)
  %.85 = getelementptr inbounds i8, i8* %.6, i64 32
  %3 = bitcast i8* %.85 to i8**
  store i8* %.80, i8** %3, align 8
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.else, %.3.endif.if
  %.90 = load %Token.676406*, %Token.676406** %.29, align 8
  %.91 = getelementptr inbounds %Token.676406, %Token.676406* %.90, i64 0, i32 1
  %.92 = load i64, i64* %.91, align 8
  %.93 = icmp eq i64 %.92, 24
  br i1 %.93, label %.3.endif.endif.if, label %.3.endif.endif.else

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.98 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.99 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.98, i64 0, i32 43
  %.100 = load %BlockNode.676438* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)** %.99, align 8
  %.101 = call %BlockNode.676438* %.100(%Parser.676536* %.1)
  %.102 = getelementptr inbounds i8, i8* %.6, i64 24
  %4 = bitcast i8* %.102 to %BlockNode.676438**
  store %BlockNode.676438* %.101, %BlockNode.676438** %4, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.else:                              ; preds = %.3.endif.endif
  %.106 = getelementptr inbounds i8, i8* %.6, i64 40
  %5 = bitcast i8* %.106 to i1*
  store i1 true, i1* %5, align 1
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.else, %.3.endif.endif.if
  ret %FunctionDeclarationNode.676490* %.7
}

define noalias %MethodNode.676494* @Parser_parse_method(%Parser.676536* %.1) {
.3:
  %.6 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.7 = bitcast i8* %.6 to %MethodNode.676494*
  %.8 = bitcast i8* %.6 to %MethodNode_vtable_ty.676495**
  store %MethodNode_vtable_ty.676495* @MethodNode_vtable_data, %MethodNode_vtable_ty.676495** %.8, align 8
  call void @MethodNode_constructor(%MethodNode.676494* %.7)
  %.14 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.15 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.15, i64 0, i32 4
  %.17 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.16, align 8
  %.18 = call %Token.676406* %.17(%Parser.676536* %.1, i64 50)
  %.20 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.20 to %Token.676406**
  store %Token.676406* %.18, %Token.676406** %0, align 8
  %.24 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.25 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.24, i64 0, i32 4
  %.26 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.25, align 8
  %.27 = call %Token.676406* %.26(%Parser.676536* %.1, i64 22)
  %.29 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.30 = load %Token.676406*, %Token.676406** %.29, align 8
  %.31 = getelementptr inbounds %Token.676406, %Token.676406* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33.not = icmp eq i64 %.32, 23
  br i1 %.33.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %1 = bitcast %Token.676406** %.29 to %IdentifierToken.676420**
  %.371 = load %IdentifierToken.676420*, %IdentifierToken.676420** %1, align 8
  %.39 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.371, i64 0, i32 3
  %.40 = load %string.676378*, %string.676378** %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.676378*
  %.42.repack = bitcast i8* %.41 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.42.repack, align 8
  %.42.repack2 = getelementptr inbounds i8, i8* %.41, i64 8
  %2 = bitcast i8* %.42.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.181, i64 0, i64 0), i8** %2, align 8
  %.42.repack3 = getelementptr inbounds i8, i8* %.41, i64 16
  %3 = bitcast i8* %.42.repack3 to i64*
  store i64 4, i64* %3, align 8
  %.42.repack4 = getelementptr inbounds i8, i8* %.41, i64 24
  %4 = bitcast i8* %.42.repack4 to i64*
  store i64 4, i64* %4, align 8
  %.44 = getelementptr inbounds %string.676378, %string.676378* %.40, i64 0, i32 0
  %.45 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.44, align 8
  %.46 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.45, i64 0, i32 4
  %.47 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.46, align 8
  %.48 = call i1 %.47(%string.676378* %.40, %string.676378* %.42)
  br i1 %.48, label %.3.if.if, label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3.if.if, %.3
  %.63 = load %Token.676406*, %Token.676406** %.29, align 8
  %.64 = getelementptr inbounds %Token.676406, %Token.676406* %.63, i64 0, i32 1
  %.65 = load i64, i64* %.64, align 8
  %.66.not = icmp eq i64 %.65, 23
  br i1 %.66.not, label %.3.endif.endif, label %.3.endif.if

.3.if.if:                                         ; preds = %.3.if
  %.51 = getelementptr inbounds i8, i8* %.6, i64 48
  %5 = bitcast i8* %.51 to i1*
  store i1 false, i1* %5, align 1
  %.55 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.56 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.55, i64 0, i32 2
  %.57 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.56, align 8
  call void %.57(%Parser.676536* %.1)
  br label %.3.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.69 = getelementptr inbounds i8, i8* %.6, i64 48
  %6 = bitcast i8* %.69 to i1*
  %.70 = load i1, i1* %6, align 1
  br i1 %.70, label %.3.endif.if.endif, label %.3.endif.if.if

.3.endif.endif:                                   ; preds = %.3.endif, %.3.endif.if.endif
  %.92 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.93 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.92, i64 0, i32 4
  %.94 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.93, align 8
  %.95 = call %Token.676406* %.94(%Parser.676536* %.1, i64 23)
  %.98 = load %Token.676406*, %Token.676406** %.29, align 8
  %.99 = getelementptr inbounds %Token.676406, %Token.676406* %.98, i64 0, i32 1
  %.100 = load i64, i64* %.99, align 8
  %.101 = icmp eq i64 %.100, 0
  br i1 %.101, label %.3.endif.endif.if, label %.3.endif.endif.else

.3.endif.if.if:                                   ; preds = %.3.endif.if
  %.75 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.76 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.75, i64 0, i32 4
  %.77 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.76, align 8
  %.78 = call %Token.676406* %.77(%Parser.676536* %.1, i64 2)
  br label %.3.endif.if.endif

.3.endif.if.endif:                                ; preds = %.3.endif.if, %.3.endif.if.if
  %.82 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.83 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.82, i64 0, i32 46
  %.84 = load void (%Parser.676536*, %"Array<ArgNode>.676492"*)*, void (%Parser.676536*, %"Array<ArgNode>.676492"*)** %.83, align 8
  %.86 = getelementptr inbounds i8, i8* %.6, i64 16
  %7 = bitcast i8* %.86 to %"Array<ArgNode>.676492"**
  %.87 = load %"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"** %7, align 8
  call void %.84(%Parser.676536* %.1, %"Array<ArgNode>.676492"* %.87)
  br label %.3.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %.105 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.106 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.105, i64 0, i32 2
  %.107 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.106, align 8
  call void %.107(%Parser.676536* %.1)
  %.112 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.113 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.112, i64 0, i32 10
  %.114 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.113, align 8
  %.115 = call %TypeNode.676426* %.114(%Parser.676536* %.1)
  %.116 = getelementptr inbounds i8, i8* %.6, i64 40
  %8 = bitcast i8* %.116 to %TypeNode.676426**
  store %TypeNode.676426* %.115, %TypeNode.676426** %8, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.else:                              ; preds = %.3.endif.endif
  %.120 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.121 = bitcast i8* %.120 to %FloRange.676382*
  %.122 = bitcast i8* %.120 to %FloRange_vtable_ty.676383**
  store %FloRange_vtable_ty.676383* @FloRange_vtable_data, %FloRange_vtable_ty.676383** %.122, align 8
  call void @FloRange_constructor(%FloRange.676382* %.121, i64 0, i64 0, i64 0, i64 0)
  %.125 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.126 = bitcast i8* %.125 to %TypeNode.676426*
  %.127 = bitcast i8* %.125 to %TypeNode_vtable_ty.676427**
  store %TypeNode_vtable_ty.676427* @TypeNode_vtable_data, %TypeNode_vtable_ty.676427** %.127, align 8
  call void @TypeNode_constructor(%TypeNode.676426* %.126, i64 12, %FloRange.676382* %.121)
  %.130 = getelementptr inbounds i8, i8* %.6, i64 40
  %9 = bitcast i8* %.130 to i8**
  store i8* %.125, i8** %9, align 8
  br label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif.else, %.3.endif.endif.if
  %.135 = load %Token.676406*, %Token.676406** %.29, align 8
  %.136 = getelementptr inbounds %Token.676406, %Token.676406* %.135, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138 = icmp eq i64 %.137, 24
  br i1 %.138, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.else

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %.143 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.14, align 8
  %.144 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.143, i64 0, i32 43
  %.145 = load %BlockNode.676438* (%Parser.676536*)*, %BlockNode.676438* (%Parser.676536*)** %.144, align 8
  %.146 = call %BlockNode.676438* %.145(%Parser.676536* %.1)
  %.147 = getelementptr inbounds i8, i8* %.6, i64 24
  %10 = bitcast i8* %.147 to %BlockNode.676438**
  store %BlockNode.676438* %.146, %BlockNode.676438** %10, align 8
  br label %.3.endif.endif.endif.endif

.3.endif.endif.endif.else:                        ; preds = %.3.endif.endif.endif
  %.151 = getelementptr inbounds i8, i8* %.6, i64 49
  %11 = bitcast i8* %.151 to i1*
  store i1 true, i1* %11, align 1
  br label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif.else, %.3.endif.endif.endif.if
  ret %MethodNode.676494* %.7
}

; Function Attrs: norecurse nounwind readonly
define i64 @Parser_parse_access_modifier(%Parser.676536* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.3.endif.endif [
    i64 79, label %.3.if
    i64 78, label %.3.if.fold.split
  ]

.3.if.fold.split:                                 ; preds = %.3
  br label %.3.if

.3.if:                                            ; preds = %.3, %.3.if.fold.split, %.3.endif.endif
  %merge = phi i64 [ 1, %.3 ], [ %., %.3.endif.endif ], [ 0, %.3.if.fold.split ]
  ret i64 %merge

.3.endif.endif:                                   ; preds = %.3
  %.26 = icmp eq i64 %.9, 80
  %. = select i1 %.26, i64 2, i64 -1
  br label %.3.if
}

define void @Parser_parse_class_block(%Parser.676536* %.1, %ClassDeclarationNode.676500* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.9, i64 0, i32 4
  %.11 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.10, align 8
  %.12 = call %Token.676406* %.11(%Parser.676536* %.1, i64 24)
  %.15 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.16 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.15, i64 0, i32 5
  %.17 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.16, align 8
  call void %.17(%Parser.676536* %.1)
  %.20 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.21 = load %Token.676406*, %Token.676406** %.20, align 8
  %.22 = getelementptr inbounds %Token.676406, %Token.676406* %.21, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp ne i64 %.23, 25
  %.27 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.28 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.27, i64 0, i32 0
  %.29 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.28, align 8
  %.30 = call i1 %.29(%Parser.676536* %.1)
  %.31 = and i1 %.24, %.30
  br i1 %.31, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.4
  %.153 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 5
  %.122 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 4
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif.endif
  %.35 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.36 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.35, i64 0, i32 49
  %.37 = load i64 (%Parser.676536*)*, i64 (%Parser.676536*)** %.36, align 8
  %.38 = call i64 %.37(%Parser.676536* %.1)
  %access_modifier = alloca i64, align 8
  store i64 %.38, i64* %access_modifier, align 8
  %.41 = icmp slt i64 %.38, 0
  br i1 %.41, label %while.entry.if, label %while.entry.else

while.exit:                                       ; preds = %while.entry.endif.endif, %.4
  %.195 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.196 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.195, i64 0, i32 4
  %.197 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.196, align 8
  %.198 = call %Token.676406* %.197(%Parser.676536* %.1, i64 25)
  ret void

while.entry.if:                                   ; preds = %while.entry
  store i64 1, i64* %access_modifier, align 8
  br label %while.entry.endif

while.entry.else:                                 ; preds = %while.entry
  %.47 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.47, i64 0, i32 2
  %.49 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.48, align 8
  call void %.49(%Parser.676536* %.1)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else, %while.entry.if
  %.54 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.54, i64 0, i32 3
  %.56 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.55, align 8
  %.57 = call %Token.676406* %.56(%Parser.676536* %.1, i64 1)
  %.58 = getelementptr inbounds %Token.676406, %Token.676406* %.57, i64 0, i32 1
  %.59 = load i64, i64* %.58, align 8
  %.60 = icmp eq i64 %.59, 0
  br i1 %.60, label %while.entry.endif.if, label %while.entry.endif.else

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.63 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.64 = bitcast i8* %.63 to %FieldNode.676496*
  %.65 = bitcast i8* %.63 to %FieldNode_vtable_ty.676497**
  store %FieldNode_vtable_ty.676497* @FieldNode_vtable_data, %FieldNode_vtable_ty.676497** %.65, align 8
  call void @FieldNode_constructor(%FieldNode.676496* %.64)
  %field = alloca %FieldNode.676496*, align 8
  %0 = bitcast %FieldNode.676496** %field to i8**
  store i8* %.63, i8** %0, align 8
  %.72 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.72, i64 0, i32 4
  %.74 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.73, align 8
  %.75 = call %Token.676406* %.74(%Parser.676536* %.1, i64 50)
  %.77 = getelementptr inbounds i8, i8* %.63, i64 8
  %1 = bitcast i8* %.77 to %Token.676406**
  store %Token.676406* %.75, %Token.676406** %1, align 8
  %.81 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.82 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.81, i64 0, i32 4
  %.83 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.82, align 8
  %.84 = call %Token.676406* %.83(%Parser.676536* %.1, i64 0)
  %.85 = load %FieldNode.676496*, %FieldNode.676496** %field, align 8
  %.88 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.89 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.88, i64 0, i32 10
  %.90 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.89, align 8
  %.91 = call %TypeNode.676426* %.90(%Parser.676536* %.1)
  %.92 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.85, i64 0, i32 4
  store %TypeNode.676426* %.91, %TypeNode.676426** %.92, align 8
  %.96 = load %Token.676406*, %Token.676406** %.20, align 8
  %.97 = getelementptr inbounds %Token.676406, %Token.676406* %.96, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 35
  br i1 %.99, label %while.entry.endif.if.if, label %while.entry.endif.if.endif

while.entry.endif.else:                           ; preds = %while.entry.endif
  %.133 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.134 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.133, i64 0, i32 3
  %.135 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.134, align 8
  %.136 = call %Token.676406* %.135(%Parser.676536* %.1, i64 1)
  %.137 = getelementptr inbounds %Token.676406, %Token.676406* %.136, i64 0, i32 1
  %.138 = load i64, i64* %.137, align 8
  %.139 = icmp eq i64 %.138, 22
  %.143 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  br i1 %.139, label %while.entry.endif.else.if, label %while.entry.endif.else.else

while.entry.endif.endif:                          ; preds = %while.entry.endif.else.if, %while.entry.endif.if.endif
  %.175 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.176 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.175, i64 0, i32 5
  %.177 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.176, align 8
  call void %.177(%Parser.676536* %.1)
  %.181 = load %Token.676406*, %Token.676406** %.20, align 8
  %.182 = getelementptr inbounds %Token.676406, %Token.676406* %.181, i64 0, i32 1
  %.183 = load i64, i64* %.182, align 8
  %.184 = icmp ne i64 %.183, 25
  %.187 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.188 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.187, i64 0, i32 0
  %.189 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.188, align 8
  %.190 = call i1 %.189(%Parser.676536* %.1)
  %.191 = and i1 %.184, %.190
  br i1 %.191, label %while.entry, label %while.exit

while.entry.endif.if.if:                          ; preds = %while.entry.endif.if
  %.103 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.104 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.103, i64 0, i32 2
  %.105 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.104, align 8
  call void %.105(%Parser.676536* %.1)
  %.110 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.111 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.110, i64 0, i32 36
  %.112 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.111, align 8
  %.113 = call %ExpressionNode.676442* %.112(%Parser.676536* %.1)
  %.114 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.85, i64 0, i32 3
  store %ExpressionNode.676442* %.113, %ExpressionNode.676442** %.114, align 8
  br label %while.entry.endif.if.endif

while.entry.endif.if.endif:                       ; preds = %while.entry.endif.if.if, %while.entry.endif.if
  %.118 = load i64, i64* %access_modifier, align 8
  %.119 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.85, i64 0, i32 2
  store i64 %.118, i64* %.119, align 8
  %.123 = load %"Array<FieldNode>.676503"*, %"Array<FieldNode>.676503"** %.122, align 8
  %.125 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.123, i64 0, i32 0
  %.126 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.125, align 8
  %.127 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.126, i64 0, i32 2
  %.128 = load void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)*, void (%"Array<FieldNode>.676503"*, %FieldNode.676496*)** %.127, align 8
  call void %.128(%"Array<FieldNode>.676503"* %.123, %FieldNode.676496* %.85)
  br label %while.entry.endif.endif

while.entry.endif.else.if:                        ; preds = %while.entry.endif.else
  %.144 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.143, i64 0, i32 48
  %.145 = load %MethodNode.676494* (%Parser.676536*)*, %MethodNode.676494* (%Parser.676536*)** %.144, align 8
  %.146 = call %MethodNode.676494* %.145(%Parser.676536* %.1)
  %.149 = load i64, i64* %access_modifier, align 8
  %.150 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.146, i64 0, i32 4
  store i64 %.149, i64* %.150, align 8
  %.154 = load %"Array<MethodNode>.676504"*, %"Array<MethodNode>.676504"** %.153, align 8
  %.156 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.154, i64 0, i32 0
  %.157 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.156, align 8
  %.158 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.157, i64 0, i32 2
  %.159 = load void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)*, void (%"Array<MethodNode>.676504"*, %MethodNode.676494*)** %.158, align 8
  call void %.159(%"Array<MethodNode>.676504"* %.154, %MethodNode.676494* %.146)
  br label %while.entry.endif.endif

while.entry.endif.else.else:                      ; preds = %while.entry.endif.else
  %.165 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.143, i64 0, i32 1
  %.166 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.165, align 8
  %.167 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.168 = bitcast i8* %.167 to %string.676378*
  %.168.repack = bitcast i8* %.167 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.168.repack, align 8
  %.168.repack1 = getelementptr inbounds i8, i8* %.167, i64 8
  %2 = bitcast i8* %.168.repack1 to i8**
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.182, i64 0, i64 0), i8** %2, align 8
  %.168.repack2 = getelementptr inbounds i8, i8* %.167, i64 16
  %3 = bitcast i8* %.168.repack2 to i64*
  store i64 19, i64* %3, align 8
  %.168.repack3 = getelementptr inbounds i8, i8* %.167, i64 24
  %4 = bitcast i8* %.168.repack3 to i64*
  store i64 19, i64* %4, align 8
  call void %.166(%Parser.676536* %.1, %string.676378* %.168)
  ret void
}

define void @Parser_parse_generic_parameters(%Parser.676536* %.1, %"Array<GenericParameterNode>.676502"* %.2) {
.4:
  %.8 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.9 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.10 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.9, i64 0, i32 2
  %.11 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.10, align 8
  call void %.11(%Parser.676536* %.1)
  %.16 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.17 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.16, i64 0, i32 4
  %.18 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.17, align 8
  %.19 = call %Token.676406* %.18(%Parser.676536* %.1, i64 50)
  %.20 = bitcast %Token.676406* %.19 to %IdentifierToken.676420*
  %.21 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.22 = bitcast i8* %.21 to %GenericParameterNode.676498*
  %.23 = bitcast i8* %.21 to %GenericParameterNode_vtable_ty.676499**
  store %GenericParameterNode_vtable_ty.676499* @GenericParameterNode_vtable_data, %GenericParameterNode_vtable_ty.676499** %.23, align 8
  call void @GenericParameterNode_constructor(%GenericParameterNode.676498* %.22, %IdentifierToken.676420* %.20)
  %.26 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.2, i64 0, i32 0
  %.27 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.26, align 8
  %.28 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.27, i64 0, i32 2
  %.29 = load void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)** %.28, align 8
  call void %.29(%"Array<GenericParameterNode>.676502"* %.2, %GenericParameterNode.676498* %.22)
  %.32 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.33 = load %Token.676406*, %Token.676406** %.32, align 8
  %.34 = getelementptr inbounds %Token.676406, %Token.676406* %.33, i64 0, i32 1
  %.35 = load i64, i64* %.34, align 8
  %.36 = icmp eq i64 %.35, 2
  %.39 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.39, i64 0, i32 0
  %.41 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.40, align 8
  %.42 = call i1 %.41(%Parser.676536* %.1)
  %.43 = and i1 %.36, %.42
  br i1 %.43, label %while.entry, label %while.exit

while.entry:                                      ; preds = %.4, %while.entry
  %.47 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.48 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.47, i64 0, i32 2
  %.49 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.48, align 8
  call void %.49(%Parser.676536* %.1)
  %.54 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.55 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.54, i64 0, i32 4
  %.56 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.55, align 8
  %.57 = call %Token.676406* %.56(%Parser.676536* %.1, i64 50)
  %.58 = bitcast %Token.676406* %.57 to %IdentifierToken.676420*
  %.59 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.60 = bitcast i8* %.59 to %GenericParameterNode.676498*
  %.61 = bitcast i8* %.59 to %GenericParameterNode_vtable_ty.676499**
  store %GenericParameterNode_vtable_ty.676499* @GenericParameterNode_vtable_data, %GenericParameterNode_vtable_ty.676499** %.61, align 8
  call void @GenericParameterNode_constructor(%GenericParameterNode.676498* %.60, %IdentifierToken.676420* %.58)
  %.65 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.26, align 8
  %.66 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)*, void (%"Array<GenericParameterNode>.676502"*, %GenericParameterNode.676498*)** %.66, align 8
  call void %.67(%"Array<GenericParameterNode>.676502"* %.2, %GenericParameterNode.676498* %.60)
  %.71 = load %Token.676406*, %Token.676406** %.32, align 8
  %.72 = getelementptr inbounds %Token.676406, %Token.676406* %.71, i64 0, i32 1
  %.73 = load i64, i64* %.72, align 8
  %.74 = icmp eq i64 %.73, 2
  %.77 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.78 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.77, i64 0, i32 0
  %.79 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.78, align 8
  %.80 = call i1 %.79(%Parser.676536* %.1)
  %.81 = and i1 %.74, %.80
  br i1 %.81, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.4
  %.85 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.8, align 8
  %.86 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.85, i64 0, i32 4
  %.87 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.86, align 8
  %.88 = call %Token.676406* %.87(%Parser.676536* %.1, i64 38)
  ret void
}

define %ClassDeclarationNode.676500* @Parser_parse_class(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.7 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.8 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.7, i64 0, i32 2
  %.9 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.8, align 8
  call void %.9(%Parser.676536* %.1)
  %.13 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.14 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.13, i64 0, i32 4
  %.15 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.14, align 8
  %.16 = call %Token.676406* %.15(%Parser.676536* %.1, i64 50)
  %.17 = bitcast %Token.676406* %.16 to %IdentifierToken.676420*
  %.18 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.19 = bitcast i8* %.18 to %ClassDeclarationNode.676500*
  %.20 = bitcast i8* %.18 to %ClassDeclarationNode_vtable_ty.676501**
  store %ClassDeclarationNode_vtable_ty.676501* @ClassDeclarationNode_vtable_data, %ClassDeclarationNode_vtable_ty.676501** %.20, align 8
  call void @ClassDeclarationNode_constructor(%ClassDeclarationNode.676500* %.19, %IdentifierToken.676420* %.17)
  %.25 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.26 = load %Token.676406*, %Token.676406** %.25, align 8
  %.27 = getelementptr inbounds %Token.676406, %Token.676406* %.26, i64 0, i32 1
  %.28 = load i64, i64* %.27, align 8
  %.29 = icmp eq i64 %.28, 39
  br i1 %.29, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.33 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.34 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.33, i64 0, i32 51
  %.35 = load void (%Parser.676536*, %"Array<GenericParameterNode>.676502"*)*, void (%Parser.676536*, %"Array<GenericParameterNode>.676502"*)** %.34, align 8
  %.37 = getelementptr inbounds i8, i8* %.18, i64 16
  %0 = bitcast i8* %.37 to %"Array<GenericParameterNode>.676502"**
  %.38 = load %"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"** %0, align 8
  call void %.35(%Parser.676536* %.1, %"Array<GenericParameterNode>.676502"* %.38)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.43 = load %Token.676406*, %Token.676406** %.25, align 8
  %.44 = getelementptr inbounds %Token.676406, %Token.676406* %.43, i64 0, i32 1
  %.45 = load i64, i64* %.44, align 8
  %.46 = icmp eq i64 %.45, 22
  br i1 %.46, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.50 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.51 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.50, i64 0, i32 2
  %.52 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.51, align 8
  call void %.52(%Parser.676536* %.1)
  %.57 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.57, i64 0, i32 8
  %.59 = load %RecordTypeNode.676428* (%Parser.676536*)*, %RecordTypeNode.676428* (%Parser.676536*)** %.58, align 8
  %.60 = call %RecordTypeNode.676428* %.59(%Parser.676536* %.1)
  %.61 = getelementptr inbounds i8, i8* %.18, i64 24
  %1 = bitcast i8* %.61 to %RecordTypeNode.676428**
  store %RecordTypeNode.676428* %.60, %RecordTypeNode.676428** %1, align 8
  %.65 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.65, i64 0, i32 4
  %.67 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.66, align 8
  %.68 = call %Token.676406* %.67(%Parser.676536* %.1, i64 23)
  br label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif.if, %.3.endif
  %.72 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.73 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.72, i64 0, i32 5
  %.74 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.73, align 8
  call void %.74(%Parser.676536* %.1)
  %.78 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.6, align 8
  %.79 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.78, i64 0, i32 50
  %.80 = load void (%Parser.676536*, %ClassDeclarationNode.676500*)*, void (%Parser.676536*, %ClassDeclarationNode.676500*)** %.79, align 8
  call void %.80(%Parser.676536* %.1, %ClassDeclarationNode.676500* %.19)
  ret %ClassDeclarationNode.676500* %.19
}

define noalias %ConstDeclarationStatement.676486* @Parser_parse_const_declaration_statement(%Parser.676536* %.1) {
.3:
  %.6 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.7 = load %Token.676406*, %Token.676406** %.6, align 8
  %.8 = getelementptr inbounds %Token.676406, %Token.676406* %.7, i64 0, i32 2
  %.9 = load %FloRange.676382*, %FloRange.676382** %.8, align 8
  %.10 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.11 = bitcast i8* %.10 to %ConstDeclarationStatement.676486*
  %.12 = bitcast i8* %.10 to %ConstDeclarationStatement_vtable_ty.676487**
  store %ConstDeclarationStatement_vtable_ty.676487* @ConstDeclarationStatement_vtable_data, %ConstDeclarationStatement_vtable_ty.676487** %.12, align 8
  call void @ConstDeclarationStatement_constructor(%ConstDeclarationStatement.676486* %.11, %FloRange.676382* %.9)
  %.17 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.18 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.19 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.18, i64 0, i32 2
  %.20 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.19, align 8
  call void %.20(%Parser.676536* %.1)
  %.25 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.26 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.25, i64 0, i32 4
  %.27 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.26, align 8
  %.28 = call %Token.676406* %.27(%Parser.676536* %.1, i64 50)
  %.30 = getelementptr inbounds i8, i8* %.10, i64 24
  %0 = bitcast i8* %.30 to %Token.676406**
  store %Token.676406* %.28, %Token.676406** %0, align 8
  %.34 = load %Token.676406*, %Token.676406** %.6, align 8
  %.35 = getelementptr inbounds %Token.676406, %Token.676406* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 0
  br i1 %.37, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.41 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.42 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.41, i64 0, i32 2
  %.43 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.42, align 8
  call void %.43(%Parser.676536* %.1)
  %.48 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.49 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.48, i64 0, i32 10
  %.50 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.49, align 8
  %.51 = call %TypeNode.676426* %.50(%Parser.676536* %.1)
  %.52 = getelementptr inbounds i8, i8* %.10, i64 32
  %1 = bitcast i8* %.52 to %TypeNode.676426**
  store %TypeNode.676426* %.51, %TypeNode.676426** %1, align 8
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.57 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.58 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.57, i64 0, i32 4
  %.59 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.58, align 8
  %.60 = call %Token.676406* %.59(%Parser.676536* %.1, i64 35)
  %.64 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.17, align 8
  %.65 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.64, i64 0, i32 36
  %.66 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.65, align 8
  %.67 = call %ExpressionNode.676442* %.66(%Parser.676536* %.1)
  %.68 = getelementptr inbounds i8, i8* %.10, i64 40
  %2 = bitcast i8* %.68 to %ExpressionNode.676442**
  store %ExpressionNode.676442* %.67, %ExpressionNode.676442** %2, align 8
  %.72 = getelementptr inbounds i8, i8* %.10, i64 8
  %3 = bitcast i8* %.72 to %FloRange.676382**
  %.73 = load %FloRange.676382*, %FloRange.676382** %3, align 8
  %.77 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.67, i64 0, i32 1
  %.78 = load %FloRange.676382*, %FloRange.676382** %.77, align 8
  %.79 = call %FloRange.676382* @FloRange_merge(%FloRange.676382* %.73, %FloRange.676382* %.78)
  store %FloRange.676382* %.79, %FloRange.676382** %3, align 8
  ret %ConstDeclarationStatement.676486* %.11
}

define noalias %ImportNode.676514* @Parser_parse_import(%Parser.676536* %.1) {
.3:
  %.6 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.7 = bitcast i8* %.6 to %ImportNode.676514*
  %.8 = bitcast i8* %.6 to %ImportNode_vtable_ty.676515**
  store %ImportNode_vtable_ty.676515* @ImportNode_vtable_data, %ImportNode_vtable_ty.676515** %.8, align 8
  call void @ImportNode_constructor(%ImportNode.676514* %.7)
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 2
  %.16 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.15, align 8
  call void %.16(%Parser.676536* %.1)
  %.19 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.20 = load %Token.676406*, %Token.676406** %.19, align 8
  %.21 = getelementptr inbounds %Token.676406, %Token.676406* %.20, i64 0, i32 1
  %.22 = load i64, i64* %.21, align 8
  %.23 = icmp eq i64 %.22, 50
  br i1 %.23, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.26 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.26 to %"Array<IdentifierToken>.676516"**
  %.27 = load %"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"** %0, align 8
  %1 = bitcast %Token.676406** %.19 to %IdentifierToken.676420**
  %.301 = load %IdentifierToken.676420*, %IdentifierToken.676420** %1, align 8
  %.32 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.27, i64 0, i32 0
  %.33 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.32, align 8
  %.34 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.33, i64 0, i32 2
  %.35 = load void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)** %.34, align 8
  call void %.35(%"Array<IdentifierToken>.676516"* %.27, %IdentifierToken.676420* %.301)
  %.39 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.40 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.39, i64 0, i32 2
  %.41 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.40, align 8
  call void %.41(%Parser.676536* %.1)
  %.45 = load %Token.676406*, %Token.676406** %.19, align 8
  %.46 = getelementptr inbounds %Token.676406, %Token.676406* %.45, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  %.48 = icmp eq i64 %.47, 2
  %.51 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.52 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.51, i64 0, i32 0
  %.53 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.52, align 8
  %.54 = call i1 %.53(%Parser.676536* %.1)
  %.55 = and i1 %.48, %.54
  br i1 %.55, label %while.entry, label %while.exit

.3.endif:                                         ; preds = %while.exit, %.3
  %.102 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.103 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.102, i64 0, i32 4
  %.104 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.103, align 8
  %.105 = call %Token.676406* %.104(%Parser.676536* %.1, i64 31)
  %.107 = getelementptr inbounds i8, i8* %.6, i64 16
  %2 = bitcast i8* %.107 to %Token.676406**
  store %Token.676406* %.105, %Token.676406** %2, align 8
  ret %ImportNode.676514* %.7

while.entry:                                      ; preds = %.3.if, %while.entry
  %.59 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.59, i64 0, i32 2
  %.61 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.60, align 8
  call void %.61(%Parser.676536* %.1)
  %.68 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.69 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.68, i64 0, i32 4
  %.70 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.69, align 8
  %.71 = call %Token.676406* %.70(%Parser.676536* %.1, i64 50)
  %.72 = bitcast %Token.676406* %.71 to %IdentifierToken.676420*
  %.74 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.32, align 8
  %.75 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.74, i64 0, i32 2
  %.76 = load void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)*, void (%"Array<IdentifierToken>.676516"*, %IdentifierToken.676420*)** %.75, align 8
  call void %.76(%"Array<IdentifierToken>.676516"* %.27, %IdentifierToken.676420* %.72)
  %.80 = load %Token.676406*, %Token.676406** %.19, align 8
  %.81 = getelementptr inbounds %Token.676406, %Token.676406* %.80, i64 0, i32 1
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp eq i64 %.82, 2
  %.86 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.87 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.86, i64 0, i32 0
  %.88 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.87, align 8
  %.89 = call i1 %.88(%Parser.676536* %.1)
  %.90 = and i1 %.83, %.89
  br i1 %.90, label %while.entry, label %while.exit

while.exit:                                       ; preds = %while.entry, %.3.if
  %.94 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.95 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.94, i64 0, i32 4
  %.96 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.95, align 8
  %.97 = call %Token.676406* %.96(%Parser.676536* %.1, i64 81)
  br label %.3.endif
}

define noalias %EnumNode.676510* @Parser_parse_enum(%Parser.676536* %.1) {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %EnumNode.676510*
  %.8 = bitcast i8* %.6 to %EnumNode_vtable_ty.676511**
  store %EnumNode_vtable_ty.676511* @EnumNode_vtable_data, %EnumNode_vtable_ty.676511** %.8, align 8
  call void @EnumNode_constructor(%EnumNode.676510* %.7)
  %.13 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.14 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.15 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.14, i64 0, i32 2
  %.16 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.15, align 8
  call void %.16(%Parser.676536* %.1)
  %.21 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.22 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.21, i64 0, i32 4
  %.23 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.22, align 8
  %.24 = call %Token.676406* %.23(%Parser.676536* %.1, i64 50)
  %.26 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.26 to %Token.676406**
  store %Token.676406* %.24, %Token.676406** %0, align 8
  %.29 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.30 = load %Token.676406*, %Token.676406** %.29, align 8
  %.31 = getelementptr inbounds %Token.676406, %Token.676406* %.30, i64 0, i32 1
  %.32 = load i64, i64* %.31, align 8
  %.33 = icmp eq i64 %.32, 22
  br i1 %.33, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.37 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.38 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.37, i64 0, i32 2
  %.39 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.38, align 8
  call void %.39(%Parser.676536* %.1)
  %.44 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.45 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.44, i64 0, i32 10
  %.46 = load %TypeNode.676426* (%Parser.676536*)*, %TypeNode.676426* (%Parser.676536*)** %.45, align 8
  %.47 = call %TypeNode.676426* %.46(%Parser.676536* %.1)
  %.48 = getelementptr inbounds i8, i8* %.6, i64 24
  %1 = bitcast i8* %.48 to %TypeNode.676426**
  store %TypeNode.676426* %.47, %TypeNode.676426** %1, align 8
  %.52 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.52, i64 0, i32 4
  %.54 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.53, align 8
  %.55 = call %Token.676406* %.54(%Parser.676536* %.1, i64 23)
  br label %.3.endif

.3.endif:                                         ; preds = %.3.if, %.3
  %.59 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.60 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.59, i64 0, i32 5
  %.61 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.60, align 8
  call void %.61(%Parser.676536* %.1)
  %.65 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.66 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.65, i64 0, i32 4
  %.67 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.66, align 8
  %.68 = call %Token.676406* %.67(%Parser.676536* %.1, i64 24)
  %.71 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.72 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.71, i64 0, i32 5
  %.73 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.72, align 8
  call void %.73(%Parser.676536* %.1)
  %.77 = load %Token.676406*, %Token.676406** %.29, align 8
  %.78 = getelementptr inbounds %Token.676406, %Token.676406* %.77, i64 0, i32 1
  %.79 = load i64, i64* %.78, align 8
  %.80 = icmp eq i64 %.79, 50
  br i1 %.80, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.3.endif
  %.119 = getelementptr inbounds i8, i8* %.6, i64 16
  %2 = bitcast i8* %.119 to %"Array<EnumNodeField>.676512"**
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.84 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.85 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.84, i64 0, i32 4
  %.86 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.85, align 8
  %.87 = call %Token.676406* %.86(%Parser.676536* %.1, i64 50)
  %.88 = bitcast %Token.676406* %.87 to %IdentifierToken.676420*
  %.89 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.90 = bitcast i8* %.89 to %EnumNodeField.676508*
  %.91 = bitcast i8* %.89 to %EnumNodeField_vtable_ty.676509**
  store %EnumNodeField_vtable_ty.676509* @EnumNodeField_vtable_data, %EnumNodeField_vtable_ty.676509** %.91, align 8
  call void @EnumNodeField_constructor(%EnumNodeField.676508* %.90, %IdentifierToken.676420* %.88)
  %enum_field = alloca %EnumNodeField.676508*, align 8
  %3 = bitcast %EnumNodeField.676508** %enum_field to i8**
  store i8* %.89, i8** %3, align 8
  %.97 = load %Token.676406*, %Token.676406** %.29, align 8
  %.98 = getelementptr inbounds %Token.676406, %Token.676406* %.97, i64 0, i32 1
  %.99 = load i64, i64* %.98, align 8
  %.100 = icmp eq i64 %.99, 35
  br i1 %.100, label %while.entry.if, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif, %.3.endif
  %.142 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.143 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.142, i64 0, i32 4
  %.144 = load %Token.676406* (%Parser.676536*, i64)*, %Token.676406* (%Parser.676536*, i64)** %.143, align 8
  %.145 = call %Token.676406* %.144(%Parser.676536* %.1, i64 25)
  ret %EnumNode.676510* %.7

while.entry.if:                                   ; preds = %while.entry
  %.104 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.105 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.104, i64 0, i32 2
  %.106 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.105, align 8
  call void %.106(%Parser.676536* %.1)
  %.108 = load %EnumNodeField.676508*, %EnumNodeField.676508** %enum_field, align 8
  %.111 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.112 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.111, i64 0, i32 36
  %.113 = load %ExpressionNode.676442* (%Parser.676536*)*, %ExpressionNode.676442* (%Parser.676536*)** %.112, align 8
  %.114 = call %ExpressionNode.676442* %.113(%Parser.676536* %.1)
  %.115 = getelementptr inbounds %EnumNodeField.676508, %EnumNodeField.676508* %.108, i64 0, i32 2
  store %ExpressionNode.676442* %.114, %ExpressionNode.676442** %.115, align 8
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if, %while.entry
  %.120 = load %"Array<EnumNodeField>.676512"*, %"Array<EnumNodeField>.676512"** %2, align 8
  %.121 = load %EnumNodeField.676508*, %EnumNodeField.676508** %enum_field, align 8
  %.122 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.120, i64 0, i32 0
  %.123 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.122, align 8
  %.124 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.123, i64 0, i32 2
  %.125 = load void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)*, void (%"Array<EnumNodeField>.676512"*, %EnumNodeField.676508*)** %.124, align 8
  call void %.125(%"Array<EnumNodeField>.676512"* %.120, %EnumNodeField.676508* %.121)
  %.129 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.13, align 8
  %.130 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.129, i64 0, i32 5
  %.131 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.130, align 8
  call void %.131(%Parser.676536* %.1)
  %.135 = load %Token.676406*, %Token.676406** %.29, align 8
  %.136 = getelementptr inbounds %Token.676406, %Token.676406* %.135, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138 = icmp eq i64 %.137, 50
  br i1 %.138, label %while.entry, label %while.exit
}

define noalias %ModuleAST.676520* @Parser_parse(%Parser.676536* %.1, %"Array<Token>.676417"* %.2, %"Array<FloError>.676397"* %.3) {
.5:
  %.11 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 1
  store %"Array<Token>.676417"* %.2, %"Array<Token>.676417"** %.11, align 8
  %.15 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 2
  store %"Array<FloError>.676397"* %.3, %"Array<FloError>.676397"** %.15, align 8
  %.18 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 0
  %.19 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.20 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.19, i64 0, i32 2
  %.21 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.20, align 8
  call void %.21(%Parser.676536* %.1)
  %.24 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = bitcast i8* %.24 to %ModuleAST.676520*
  %.26 = bitcast i8* %.24 to %ModuleAST_vtable_ty.676521**
  store %ModuleAST_vtable_ty.676521* @ModuleAST_vtable_data, %ModuleAST_vtable_ty.676521** %.26, align 8
  call void @ModuleAST_constructor(%ModuleAST.676520* %.25)
  %.32 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.33 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.32, i64 0, i32 5
  %.34 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.33, align 8
  call void %.34(%Parser.676536* %.1)
  %.38 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.39 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.38, i64 0, i32 0
  %.40 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.39, align 8
  %.41 = call i1 %.40(%Parser.676536* %.1)
  br i1 %.41, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.5
  %.44 = getelementptr inbounds %Parser.676536, %Parser.676536* %.1, i64 0, i32 3
  %.167 = getelementptr inbounds i8, i8* %.24, i64 48
  %0 = bitcast i8* %.167 to %"Array<VarDeclarationStatement>.676527"**
  %.145 = getelementptr inbounds i8, i8* %.24, i64 40
  %1 = bitcast i8* %.145 to %"Array<ConstDeclarationStatement>.676526"**
  %.123 = getelementptr inbounds i8, i8* %.24, i64 32
  %2 = bitcast i8* %.123 to %"Array<ImportNode>.676525"**
  %.101 = getelementptr inbounds i8, i8* %.24, i64 24
  %3 = bitcast i8* %.101 to %"Array<EnumNode>.676524"**
  %.79 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.79 to %"Array<ClassDeclarationNode>.676523"**
  %.57 = getelementptr inbounds i8, i8* %.24, i64 8
  %5 = bitcast i8* %.57 to %"Array<FunctionDeclarationNode>.676522"**
  %.204 = getelementptr inbounds i8, i8* %.24, i64 56
  %6 = bitcast i8* %.204 to %"Array<TypeAliasNode>.676528"**
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %.45 = load %Token.676406*, %Token.676406** %.44, align 8
  %.46 = getelementptr inbounds %Token.676406, %Token.676406* %.45, i64 0, i32 1
  %.47 = load i64, i64* %.46, align 8
  switch i64 %.47, label %while.entry.else.else.else.else.else.else [
    i64 73, label %while.entry.if
    i64 82, label %while.entry.else.if
    i64 83, label %while.entry.else.else.if
    i64 77, label %while.entry.else.else.else.if
    i64 54, label %while.entry.else.else.else.else.if
    i64 55, label %while.entry.else.else.else.else.else.if
  ]

while.exit:                                       ; preds = %while.entry.endif, %.5
  ret %ModuleAST.676520* %.25

while.entry.if:                                   ; preds = %while.entry
  %.52 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.53 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.52, i64 0, i32 2
  %.54 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.53, align 8
  call void %.54(%Parser.676536* %.1)
  %.58 = load %"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"** %5, align 8
  %.61 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.62 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.61, i64 0, i32 47
  %.63 = load %FunctionDeclarationNode.676490* (%Parser.676536*)*, %FunctionDeclarationNode.676490* (%Parser.676536*)** %.62, align 8
  %.64 = call %FunctionDeclarationNode.676490* %.63(%Parser.676536* %.1)
  %.65 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.58, i64 0, i32 0
  %.66 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.66, i64 0, i32 2
  %.68 = load void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)*, void (%"Array<FunctionDeclarationNode>.676522"*, %FunctionDeclarationNode.676490*)** %.67, align 8
  call void %.68(%"Array<FunctionDeclarationNode>.676522"* %.58, %FunctionDeclarationNode.676490* %.64)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.else.else.else.else.else.else.if, %while.entry.else.else.else.else.else.else.else, %while.entry.else.else.else.else.else.if, %while.entry.else.else.else.else.if, %while.entry.else.else.else.if, %while.entry.else.else.if, %while.entry.else.if, %while.entry.if
  %.236 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.237 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.236, i64 0, i32 5
  %.238 = load void (%Parser.676536*)*, void (%Parser.676536*)** %.237, align 8
  call void %.238(%Parser.676536* %.1)
  %.242 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.243 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.242, i64 0, i32 0
  %.244 = load i1 (%Parser.676536*)*, i1 (%Parser.676536*)** %.243, align 8
  %.245 = call i1 %.244(%Parser.676536* %.1)
  br i1 %.245, label %while.entry, label %while.exit

while.entry.else.if:                              ; preds = %while.entry
  %.80 = load %"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"** %4, align 8
  %.83 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.84 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.83, i64 0, i32 52
  %.85 = load %ClassDeclarationNode.676500* (%Parser.676536*)*, %ClassDeclarationNode.676500* (%Parser.676536*)** %.84, align 8
  %.86 = call %ClassDeclarationNode.676500* %.85(%Parser.676536* %.1)
  %.87 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.80, i64 0, i32 0
  %.88 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.87, align 8
  %.89 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.88, i64 0, i32 2
  %.90 = load void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)*, void (%"Array<ClassDeclarationNode>.676523"*, %ClassDeclarationNode.676500*)** %.89, align 8
  call void %.90(%"Array<ClassDeclarationNode>.676523"* %.80, %ClassDeclarationNode.676500* %.86)
  br label %while.entry.endif

while.entry.else.else.if:                         ; preds = %while.entry
  %.102 = load %"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"** %3, align 8
  %.105 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.106 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.105, i64 0, i32 55
  %.107 = load %EnumNode.676510* (%Parser.676536*)*, %EnumNode.676510* (%Parser.676536*)** %.106, align 8
  %.108 = call %EnumNode.676510* %.107(%Parser.676536* %.1)
  %.109 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.102, i64 0, i32 0
  %.110 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.109, align 8
  %.111 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.110, i64 0, i32 2
  %.112 = load void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)*, void (%"Array<EnumNode>.676524"*, %EnumNode.676510*)** %.111, align 8
  call void %.112(%"Array<EnumNode>.676524"* %.102, %EnumNode.676510* %.108)
  br label %while.entry.endif

while.entry.else.else.else.if:                    ; preds = %while.entry
  %.124 = load %"Array<ImportNode>.676525"*, %"Array<ImportNode>.676525"** %2, align 8
  %.127 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.128 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.127, i64 0, i32 54
  %.129 = load %ImportNode.676514* (%Parser.676536*)*, %ImportNode.676514* (%Parser.676536*)** %.128, align 8
  %.130 = call %ImportNode.676514* %.129(%Parser.676536* %.1)
  %.131 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.124, i64 0, i32 0
  %.132 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.132, i64 0, i32 2
  %.134 = load void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)*, void (%"Array<ImportNode>.676525"*, %ImportNode.676514*)** %.133, align 8
  call void %.134(%"Array<ImportNode>.676525"* %.124, %ImportNode.676514* %.130)
  br label %while.entry.endif

while.entry.else.else.else.else.if:               ; preds = %while.entry
  %.146 = load %"Array<ConstDeclarationStatement>.676526"*, %"Array<ConstDeclarationStatement>.676526"** %1, align 8
  %.149 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.150 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.149, i64 0, i32 53
  %.151 = load %ConstDeclarationStatement.676486* (%Parser.676536*)*, %ConstDeclarationStatement.676486* (%Parser.676536*)** %.150, align 8
  %.152 = call %ConstDeclarationStatement.676486* %.151(%Parser.676536* %.1)
  %.153 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.146, i64 0, i32 0
  %.154 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.153, align 8
  %.155 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.154, i64 0, i32 2
  %.156 = load void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)*, void (%"Array<ConstDeclarationStatement>.676526"*, %ConstDeclarationStatement.676486*)** %.155, align 8
  call void %.156(%"Array<ConstDeclarationStatement>.676526"* %.146, %ConstDeclarationStatement.676486* %.152)
  br label %while.entry.endif

while.entry.else.else.else.else.else.if:          ; preds = %while.entry
  %.168 = load %"Array<VarDeclarationStatement>.676527"*, %"Array<VarDeclarationStatement>.676527"** %0, align 8
  %.171 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.172 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.171, i64 0, i32 40
  %.173 = load %VarDeclarationStatement.676484* (%Parser.676536*)*, %VarDeclarationStatement.676484* (%Parser.676536*)** %.172, align 8
  %.174 = call %VarDeclarationStatement.676484* %.173(%Parser.676536* %.1)
  %.175 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.168, i64 0, i32 0
  %.176 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.175, align 8
  %.177 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.176, i64 0, i32 2
  %.178 = load void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)*, void (%"Array<VarDeclarationStatement>.676527"*, %VarDeclarationStatement.676484*)** %.177, align 8
  call void %.178(%"Array<VarDeclarationStatement>.676527"* %.168, %VarDeclarationStatement.676484* %.174)
  br label %while.entry.endif

while.entry.else.else.else.else.else.else:        ; preds = %while.entry
  %.186 = icmp eq i64 %.47, 50
  %.191 = getelementptr inbounds %Token.676406, %Token.676406* %.45, i64 1
  %7 = bitcast %Token.676406* %.191 to %string.676378**
  %.192 = load %string.676378*, %string.676378** %7, align 8
  %.193 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.676378*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.194.repack, align 8
  %.194.repack2 = getelementptr inbounds i8, i8* %.193, i64 8
  %8 = bitcast i8* %.194.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.183, i64 0, i64 0), i8** %8, align 8
  %.194.repack3 = getelementptr inbounds i8, i8* %.193, i64 16
  %9 = bitcast i8* %.194.repack3 to i64*
  store i64 4, i64* %9, align 8
  %.194.repack4 = getelementptr inbounds i8, i8* %.193, i64 24
  %10 = bitcast i8* %.194.repack4 to i64*
  store i64 4, i64* %10, align 8
  %.196 = getelementptr inbounds %string.676378, %string.676378* %.192, i64 0, i32 0
  %.197 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.196, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.197, i64 0, i32 4
  %.199 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.198, align 8
  %.200 = call i1 %.199(%string.676378* %.192, %string.676378* %.194)
  %.201 = and i1 %.186, %.200
  br i1 %.201, label %while.entry.else.else.else.else.else.else.if, label %while.entry.else.else.else.else.else.else.else

while.entry.else.else.else.else.else.else.if:     ; preds = %while.entry.else.else.else.else.else.else
  %.205 = load %"Array<TypeAliasNode>.676528"*, %"Array<TypeAliasNode>.676528"** %6, align 8
  %.208 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.209 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.208, i64 0, i32 44
  %.210 = load %TypeAliasNode.676518* (%Parser.676536*)*, %TypeAliasNode.676518* (%Parser.676536*)** %.209, align 8
  %.211 = call %TypeAliasNode.676518* %.210(%Parser.676536* %.1)
  %.212 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.205, i64 0, i32 0
  %.213 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.213, i64 0, i32 2
  %.215 = load void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)*, void (%"Array<TypeAliasNode>.676528"*, %TypeAliasNode.676518*)** %.214, align 8
  call void %.215(%"Array<TypeAliasNode>.676528"* %.205, %TypeAliasNode.676518* %.211)
  br label %while.entry.endif

while.entry.else.else.else.else.else.else.else:   ; preds = %while.entry.else.else.else.else.else.else
  %.220 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.18, align 8
  %.221 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.220, i64 0, i32 1
  %.222 = load void (%Parser.676536*, %string.676378*)*, void (%Parser.676536*, %string.676378*)** %.221, align 8
  %.223 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.224 = bitcast i8* %.223 to %string.676378*
  %.224.repack = bitcast i8* %.223 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.224.repack, align 8
  %.224.repack5 = getelementptr inbounds i8, i8* %.223, i64 8
  %11 = bitcast i8* %.224.repack5 to i8**
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @str.184, i64 0, i64 0), i8** %11, align 8
  %.224.repack6 = getelementptr inbounds i8, i8* %.223, i64 16
  %12 = bitcast i8* %.224.repack6 to i64*
  store i64 79, i64* %12, align 8
  %.224.repack7 = getelementptr inbounds i8, i8* %.223, i64 24
  %13 = bitcast i8* %.224.repack7 to i64*
  store i64 79, i64* %13, align 8
  call void %.222(%Parser.676536* %.1, %string.676378* %.224)
  br label %while.entry.endif
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Type_constructor(%Type.676538* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define noalias %Type.676538* @Type_unknown() local_unnamed_addr #3 {
.2:
  %.3 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.4 = bitcast i8* %.3 to %Type.676538*
  %.5 = bitcast i8* %.3 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.5, align 8
  call void @Type_constructor(%Type.676538* %.4, i64 21)
  ret %Type.676538* %.4
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @BooleanType_constructor(%BooleanType.676540* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %BooleanType.676540* %.1 to %Type.676538*
  call void @Type_constructor(%Type.676538* %.6, i64 0)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PointerType_constructor(%PointerType.676542* nocapture %.1, %Type.676538* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %PointerType.676542* %.1 to %Type.676538*
  call void @Type_constructor(%Type.676538* %.8, i64 15)
  %.12 = getelementptr inbounds %PointerType.676542, %PointerType.676542* %.1, i64 0, i32 2
  store %Type.676538* %.2, %Type.676538** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Type>_constructor"(%"Array<Type>.676546"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %0 = bitcast %Type.676538*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Type>_resize"(%"Array<Type>.676546"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %0 = bitcast %Type.676538*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Type>_swap"(%"Array<Type>.676546"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %.48 = load %Type.676538**, %Type.676538*** %.47, align 8
  %.49 = getelementptr inbounds %Type.676538*, %Type.676538** %.48, i64 %.2
  %4 = bitcast %Type.676538** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Type.676538*, %Type.676538** %.48, i64 %.3
  %5 = bitcast %Type.676538** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Type.676538**, %Type.676538*** %.47, align 8
  %.69 = getelementptr inbounds %Type.676538*, %Type.676538** %.67, i64 %.3
  %6 = bitcast %Type.676538** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Type>___sl__"(%"Array<Type>.676546"* %.1, %Type.676538* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 0
  %.17 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Type>.676546"*)*, void (%"Array<Type>.676546"*)** %.18, align 8
  call void %.19(%"Array<Type>.676546"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %.31 = load %Type.676538**, %Type.676538*** %.30, align 8
  %.33 = getelementptr inbounds %Type.676538*, %Type.676538** %.31, i64 %.24
  store %Type.676538* %.2, %Type.676538** %.33, align 8
  ret void
}

define void @"Array<Type>___setitem__"(%"Array<Type>.676546"* nocapture readonly %.1, i64 %.2, %Type.676538* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %.30 = load %Type.676538**, %Type.676538*** %.29, align 8
  %.32 = getelementptr inbounds %Type.676538*, %Type.676538** %.30, i64 %.2
  store %Type.676538* %.3, %Type.676538** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Type>_append"(%"Array<Type>.676546"* %.1, %Type.676538* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 0
  %.9 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)** %.10, align 8
  call void %.11(%"Array<Type>.676546"* %.1, %Type.676538* %.2)
  ret void
}

define %Type.676538* @"Array<Type>___getitem__"(%"Array<Type>.676546"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %.28 = load %Type.676538**, %Type.676538*** %.27, align 8
  %.29 = getelementptr inbounds %Type.676538*, %Type.676538** %.28, i64 %.2
  %.30 = load %Type.676538*, %Type.676538** %.29, align 8
  ret %Type.676538* %.30

.4.endif:                                         ; preds = %.4
  ret %Type.676538* null
}

define i1 @"Array<Type>___eq__"(%"Array<Type>.676546"* %.1, %"Array<Type>.676546"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.28, i64 0, i32 5
  %.30 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.29, align 8
  %.31 = call %Type.676538* %.30(%"Array<Type>.676546"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.35, i64 0, i32 5
  %.37 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.36, align 8
  %.38 = call %Type.676538* %.37(%"Array<Type>.676546"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Type.676538* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Type.676538* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Type>___in__"(%"Array<Type>.676546"* %.1, %Type.676538* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Type.676538* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.19, i64 0, i32 5
  %.21 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.20, align 8
  %.22 = call %Type.676538* %.21(%"Array<Type>.676546"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Type.676538* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Type>_find"(%"Array<Type>.676546"* nocapture readonly %.1, %Type.676538* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 1
  %.19 = load %Type.676538**, %Type.676538*** %.18, align 8
  %0 = ptrtoint %Type.676538* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Type.676538*, %Type.676538** %.19, i64 %storemerge5
  %1 = bitcast %Type.676538** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Type>_join"(%"Array<Type>.676546"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.185, i64 0, i64 0), i64 5)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.185, i64 0, i64 0), i64 5)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Type>___as_string__"(%"Array<Type>.676546"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1, i64 0, i32 0
  %.7 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Type>.676546"*, %string.676378*)*, %string.676378* (%"Array<Type>.676546"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Type>.676546"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FunctionType_constructor(%FunctionType.676544* nocapture %.1, %"Array<Type>.676546"* %.2, %Type.676538* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %FunctionType.676544* %.1 to %Type.676538*
  call void @Type_constructor(%Type.676538* %.10, i64 17)
  %.14 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.1, i64 0, i32 2
  store %"Array<Type>.676546"* %.2, %"Array<Type>.676546"** %.14, align 8
  %.18 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.1, i64 0, i32 3
  store %Type.676538* %.3, %Type.676538** %.18, align 8
  %.21 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Statement_constructor(%Statement.676550* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %Statement.676550, %Statement.676550* %.1, i64 0, i32 1
  store i64 %.2, i64* %.9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @TypeId_constructor(%TypeId.676552* nocapture %.1, i64 %.2, i64 %.3, i64 %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.1, i64 0, i32 2
  store i64 %.3, i64* %.17, align 8
  %.21 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ClassId_constructor(%ClassId.676554* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ClassId.676554* %.1 to %TypeId.676552*
  call void @TypeId_constructor(%TypeId.676552* %.10, i64 %.2, i64 0, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumId_constructor(%EnumId.676556* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %EnumId.676556* %.1 to %TypeId.676552*
  call void @TypeId_constructor(%TypeId.676552* %.10, i64 %.2, i64 1, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Expression_constructor(%Expression.676558* nocapture %.1, i64 %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %Expression.676558* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.8, i64 8)
  %.12 = getelementptr inbounds %Expression.676558, %Expression.676558* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.15 = getelementptr inbounds %Expression.676558, %Expression.676558* %.1, i64 0, i32 2
  store i1 false, i1* %.15, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ArrayType_constructor(%ArrayType.676560* nocapture %.1, %Type.676538* %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ArrayType.676560* %.1 to %Type.676538*
  call void @Type_constructor(%Type.676538* %.10, i64 16)
  %.14 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.1, i64 0, i32 2
  store %Type.676538* %.2, %Type.676538** %.14, align 8
  %.18 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.1, i64 0, i32 3
  store i64 %.3, i64* %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ObjectType_constructor(%ObjectType.676562* nocapture %.1, %ClassId.676554* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %ObjectType.676562* %.1 to %Type.676538*
  call void @Type_constructor(%Type.676538* %.8, i64 13)
  %.12 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.1, i64 0, i32 2
  store %ClassId.676554* %.2, %ClassId.676554** %.12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumType_constructor(%EnumType.676564* nocapture %.1, %EnumId.676556* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %EnumType.676564* %.1 to %Type.676538*
  call void @Type_constructor(%Type.676538* %.8, i64 14)
  %.12 = getelementptr inbounds %EnumType.676564, %EnumType.676564* %.1, i64 0, i32 2
  store %EnumId.676556* %.2, %EnumId.676556** %.12, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @IntExpression_constructor(%IntExpression.676566* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %IntExpression.676566* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.8, i64 0)
  %.11 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %Type.676538*
  %.13 = bitcast i8* %.11 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.13, align 8
  call void @Type_constructor(%Type.676538* %.12, i64 7)
  %.16 = getelementptr inbounds %IntExpression.676566, %IntExpression.676566* %.1, i64 0, i32 4
  %0 = bitcast %Type.676538** %.16 to i8**
  store i8* %.11, i8** %0, align 8
  %.20 = getelementptr inbounds %IntExpression.676566, %IntExpression.676566* %.1, i64 0, i32 5
  store i64 %.2, i64* %.20, align 8
  %.23 = getelementptr inbounds %IntExpression.676566, %IntExpression.676566* %.1, i64 0, i32 2
  store i1 true, i1* %.23, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @BooleanExpression_constructor(%BooleanExpression.676568* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %BooleanExpression.676568* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.8, i64 4)
  %.11 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %BooleanType.676540*
  %.13 = bitcast i8* %.11 to %BooleanType_vtable_ty.676541**
  store %BooleanType_vtable_ty.676541* @BooleanType_vtable_data, %BooleanType_vtable_ty.676541** %.13, align 8
  call void @BooleanType_constructor(%BooleanType.676540* %.12)
  %.20 = getelementptr inbounds %BooleanExpression.676568, %BooleanExpression.676568* %.1, i64 0, i32 4
  %0 = bitcast %Type.676538** %.20 to i8**
  store i8* %.11, i8** %0, align 8
  %.24 = getelementptr inbounds %BooleanExpression.676568, %BooleanExpression.676568* %.1, i64 0, i32 5
  store i64 %.2, i64* %.24, align 8
  %.27 = getelementptr inbounds %BooleanExpression.676568, %BooleanExpression.676568* %.1, i64 0, i32 2
  store i1 true, i1* %.27, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @FloatExpression_constructor(%FloatExpression.676570* nocapture %.1, double %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %FloatExpression.676570* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.8, i64 1)
  %.11 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.12 = bitcast i8* %.11 to %Type.676538*
  %.13 = bitcast i8* %.11 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.13, align 8
  call void @Type_constructor(%Type.676538* %.12, i64 11)
  %.16 = getelementptr inbounds %FloatExpression.676570, %FloatExpression.676570* %.1, i64 0, i32 4
  %0 = bitcast %Type.676538** %.16 to i8**
  store i8* %.11, i8** %0, align 8
  %.20 = getelementptr inbounds %FloatExpression.676570, %FloatExpression.676570* %.1, i64 0, i32 5
  store double %.2, double* %.20, align 8
  %.23 = getelementptr inbounds %FloatExpression.676570, %FloatExpression.676570* %.1, i64 0, i32 2
  store i1 true, i1* %.23, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Expression>_constructor"(%"Array<Expression>.676574"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %0 = bitcast %Expression.676558*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Expression>_resize"(%"Array<Expression>.676574"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %0 = bitcast %Expression.676558*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Expression>_swap"(%"Array<Expression>.676574"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %.48 = load %Expression.676558**, %Expression.676558*** %.47, align 8
  %.49 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.48, i64 %.2
  %4 = bitcast %Expression.676558** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.48, i64 %.3
  %5 = bitcast %Expression.676558** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Expression.676558**, %Expression.676558*** %.47, align 8
  %.69 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.67, i64 %.3
  %6 = bitcast %Expression.676558** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Expression>___sl__"(%"Array<Expression>.676574"* %.1, %Expression.676558* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 0
  %.17 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Expression>.676574"*)*, void (%"Array<Expression>.676574"*)** %.18, align 8
  call void %.19(%"Array<Expression>.676574"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %.31 = load %Expression.676558**, %Expression.676558*** %.30, align 8
  %.33 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.31, i64 %.24
  store %Expression.676558* %.2, %Expression.676558** %.33, align 8
  ret void
}

define void @"Array<Expression>___setitem__"(%"Array<Expression>.676574"* nocapture readonly %.1, i64 %.2, %Expression.676558* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %.30 = load %Expression.676558**, %Expression.676558*** %.29, align 8
  %.32 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.30, i64 %.2
  store %Expression.676558* %.3, %Expression.676558** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Expression>_append"(%"Array<Expression>.676574"* %.1, %Expression.676558* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 0
  %.9 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.10, align 8
  call void %.11(%"Array<Expression>.676574"* %.1, %Expression.676558* %.2)
  ret void
}

define %Expression.676558* @"Array<Expression>___getitem__"(%"Array<Expression>.676574"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %.28 = load %Expression.676558**, %Expression.676558*** %.27, align 8
  %.29 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.28, i64 %.2
  %.30 = load %Expression.676558*, %Expression.676558** %.29, align 8
  ret %Expression.676558* %.30

.4.endif:                                         ; preds = %.4
  ret %Expression.676558* null
}

define i1 @"Array<Expression>___eq__"(%"Array<Expression>.676574"* %.1, %"Array<Expression>.676574"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.28, i64 0, i32 5
  %.30 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.29, align 8
  %.31 = call %Expression.676558* %.30(%"Array<Expression>.676574"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.35, i64 0, i32 5
  %.37 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.36, align 8
  %.38 = call %Expression.676558* %.37(%"Array<Expression>.676574"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Expression.676558* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Expression.676558* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Expression>___in__"(%"Array<Expression>.676574"* %.1, %Expression.676558* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Expression.676558* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.19, i64 0, i32 5
  %.21 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.20, align 8
  %.22 = call %Expression.676558* %.21(%"Array<Expression>.676574"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Expression.676558* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Expression>_find"(%"Array<Expression>.676574"* nocapture readonly %.1, %Expression.676558* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 1
  %.19 = load %Expression.676558**, %Expression.676558*** %.18, align 8
  %0 = ptrtoint %Expression.676558* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Expression.676558*, %Expression.676558** %.19, i64 %storemerge5
  %1 = bitcast %Expression.676558** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Expression>_join"(%"Array<Expression>.676574"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.186, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.186, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Expression>___as_string__"(%"Array<Expression>.676574"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1, i64 0, i32 0
  %.7 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Expression>.676574"*, %string.676378*)*, %string.676378* (%"Array<Expression>.676574"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Expression>.676574"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @StringExpression_constructor(%StringExpression.676572* nocapture %.1, %string.676378* %.2, %"Array<Expression>.676574"* %.3, %Type.676538* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %StringExpression.676572* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.12, i64 2)
  %.16 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.1, i64 0, i32 6
  store %"Array<Expression>.676574"* %.3, %"Array<Expression>.676574"** %.16, align 8
  %.20 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.1, i64 0, i32 4
  store %Type.676538* %.4, %Type.676538** %.20, align 8
  %.24 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.1, i64 0, i32 5
  store %string.676378* %.2, %string.676378** %.24, align 8
  %.27 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.1, i64 0, i32 2
  store i1 true, i1* %.27, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @NullExpression_constructor(%NullExpression.676576* nocapture %.1, %Type.676538* %.2) local_unnamed_addr #1 {
.4:
  %.8 = bitcast %NullExpression.676576* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.8, i64 5)
  %.12 = getelementptr inbounds %NullExpression.676576, %NullExpression.676576* %.1, i64 0, i32 4
  store %Type.676538* %.2, %Type.676538** %.12, align 8
  %.15 = getelementptr inbounds %NullExpression.676576, %NullExpression.676576* %.1, i64 0, i32 2
  store i1 true, i1* %.15, align 1
  ret void
}

define void @ArrayExpression_constructor(%ArrayExpression.676578* nocapture %.1, %"Array<Expression>.676574"* %.2) local_unnamed_addr {
.4:
  %.8 = bitcast %ArrayExpression.676578* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.8, i64 6)
  %.12 = getelementptr inbounds %ArrayExpression.676578, %ArrayExpression.676578* %.1, i64 0, i32 5
  store %"Array<Expression>.676574"* %.2, %"Array<Expression>.676574"** %.12, align 8
  %.15 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.2, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp sgt i64 %.16, 0
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.21 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.2, i64 0, i32 0
  %.22 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.22, i64 0, i32 5
  %.24 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.23, align 8
  %.25 = call %Expression.676558* %.24(%"Array<Expression>.676574"* %.2, i64 0)
  %.26 = getelementptr inbounds %Expression.676558, %Expression.676558* %.25, i64 0, i32 4
  %.27 = load %Type.676538*, %Type.676538** %.26, align 8
  %.30 = load i64, i64* %.15, align 8
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %ArrayType.676560*
  %.33 = bitcast i8* %.31 to %ArrayType_vtable_ty.676561**
  store %ArrayType_vtable_ty.676561* @ArrayType_vtable_data, %ArrayType_vtable_ty.676561** %.33, align 8
  call void @ArrayType_constructor(%ArrayType.676560* %.32, %Type.676538* %.27, i64 %.30)
  %.37 = getelementptr inbounds %ArrayExpression.676578, %ArrayExpression.676578* %.1, i64 0, i32 4
  %0 = bitcast %Type.676538** %.37 to i8**
  store i8* %.31, i8** %0, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @BinaryExpression_constructor(%BinaryExpression.676580* nocapture %.1, %Expression.676558* %.2, i64 %.3, %Expression.676558* %.4, %Type.676538* %.5, i1 %.6) local_unnamed_addr #1 {
.8:
  %.16 = bitcast %BinaryExpression.676580* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.16, i64 8)
  %.20 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.1, i64 0, i32 5
  store %Expression.676558* %.2, %Expression.676558** %.20, align 8
  %.24 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.1, i64 0, i32 6
  store i64 %.3, i64* %.24, align 8
  %.28 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.1, i64 0, i32 7
  store %Expression.676558* %.4, %Expression.676558** %.28, align 8
  %.32 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.1, i64 0, i32 4
  store %Type.676538* %.5, %Type.676538** %.32, align 8
  %.36 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.1, i64 0, i32 2
  store i1 %.6, i1* %.36, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @UnaryExpression_constructor(%UnaryExpression.676582* nocapture %.1, i64 %.2, %Expression.676558* %.3, %Type.676538* %.4, i1 %.5) local_unnamed_addr #1 {
.7:
  %.14 = bitcast %UnaryExpression.676582* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.14, i64 9)
  %.18 = getelementptr inbounds %UnaryExpression.676582, %UnaryExpression.676582* %.1, i64 0, i32 5
  store i64 %.2, i64* %.18, align 8
  %.22 = getelementptr inbounds %UnaryExpression.676582, %UnaryExpression.676582* %.1, i64 0, i32 6
  store %Expression.676558* %.3, %Expression.676558** %.22, align 8
  %.26 = getelementptr inbounds %UnaryExpression.676582, %UnaryExpression.676582* %.1, i64 0, i32 4
  store %Type.676538* %.4, %Type.676538** %.26, align 8
  %.30 = getelementptr inbounds %UnaryExpression.676582, %UnaryExpression.676582* %.1, i64 0, i32 2
  store i1 %.5, i1* %.30, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @TernaryExpression_constructor(%TernaryExpression.676584* nocapture %.1, %Expression.676558* %.2, %Expression.676558* %.3, %Expression.676558* %.4) local_unnamed_addr #8 {
.6:
  %.12 = bitcast %TernaryExpression.676584* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.12, i64 15)
  %.16 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.1, i64 0, i32 5
  store %Expression.676558* %.2, %Expression.676558** %.16, align 8
  %.20 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.1, i64 0, i32 6
  store %Expression.676558* %.3, %Expression.676558** %.20, align 8
  %.24 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.1, i64 0, i32 7
  store %Expression.676558* %.4, %Expression.676558** %.24, align 8
  %.28 = getelementptr inbounds %Expression.676558, %Expression.676558* %.3, i64 0, i32 4
  %0 = bitcast %Type.676538** %.28 to i64*
  %.291 = load i64, i64* %0, align 8
  %.30 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.1, i64 0, i32 4
  %1 = bitcast %Type.676538** %.30 to i64*
  store i64 %.291, i64* %1, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @TypeCastExpression_constructor(%TypeCastExpression.676586* nocapture %.1, %Expression.676558* %.2, %Type.676538* %.3) local_unnamed_addr #8 {
.5:
  %.10 = bitcast %TypeCastExpression.676586* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.10, i64 10)
  %.14 = getelementptr inbounds %TypeCastExpression.676586, %TypeCastExpression.676586* %.1, i64 0, i32 5
  store %Expression.676558* %.2, %Expression.676558** %.14, align 8
  %.18 = getelementptr inbounds %TypeCastExpression.676586, %TypeCastExpression.676586* %.1, i64 0, i32 4
  store %Type.676538* %.3, %Type.676538** %.18, align 8
  %.22 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 2
  %.23 = load i1, i1* %.22, align 1
  %.24 = getelementptr inbounds %TypeCastExpression.676586, %TypeCastExpression.676586* %.1, i64 0, i32 2
  store i1 %.23, i1* %.24, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @NewExpression_constructor(%NewExpression.676588* nocapture %.1, %Type.676538* %.2, %"Array<Expression>.676574"* %.3, i1 %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %NewExpression.676588* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.12, i64 11)
  %.16 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.1, i64 0, i32 7
  store %Type.676538* %.2, %Type.676538** %.16, align 8
  %.20 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.1, i64 0, i32 6
  store i1 %.4, i1* %.20, align 1
  %.24 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.1, i64 0, i32 5
  store %"Array<Expression>.676574"* %.3, %"Array<Expression>.676574"** %.24, align 8
  %.28 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.1, i64 0, i32 4
  store %Type.676538* %.2, %Type.676538** %.28, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IndexExpression_constructor(%IndexExpression.676590* nocapture %.1, %Expression.676558* %.2, %Expression.676558* %.3, %Type.676538* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %IndexExpression.676590* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.12, i64 13)
  %.16 = getelementptr inbounds %IndexExpression.676590, %IndexExpression.676590* %.1, i64 0, i32 5
  store %Expression.676558* %.2, %Expression.676558** %.16, align 8
  %.20 = getelementptr inbounds %IndexExpression.676590, %IndexExpression.676590* %.1, i64 0, i32 6
  store %Expression.676558* %.3, %Expression.676558** %.20, align 8
  %.24 = getelementptr inbounds %IndexExpression.676590, %IndexExpression.676590* %.1, i64 0, i32 4
  store %Type.676538* %.4, %Type.676538** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @CallExpression_constructor(%CallExpression.676592* nocapture %.1, %Expression.676558* %.2, %"Array<Expression>.676574"* %.3, %Type.676538* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %CallExpression.676592* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.12, i64 14)
  %.16 = getelementptr inbounds %CallExpression.676592, %CallExpression.676592* %.1, i64 0, i32 5
  store %Expression.676558* %.2, %Expression.676558** %.16, align 8
  %.20 = getelementptr inbounds %CallExpression.676592, %CallExpression.676592* %.1, i64 0, i32 6
  store %"Array<Expression>.676574"* %.3, %"Array<Expression>.676574"** %.20, align 8
  %.24 = getelementptr inbounds %CallExpression.676592, %CallExpression.676592* %.1, i64 0, i32 4
  store %Type.676538* %.4, %Type.676538** %.24, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @IntrinsicCall_constructor(%IntrinsicCall.676594* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = bitcast %IntrinsicCall.676594* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.8, i64 16)
  %.12 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.1, i64 0, i32 5
  store i64 %.2, i64* %.12, align 8
  %.16 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.18 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.18 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.20, align 8
  %.22 = getelementptr inbounds i8, i8* %.18, i64 8
  %0 = bitcast i8* %.22 to i8**
  store i8* %.16, i8** %0, align 8
  %.24 = getelementptr inbounds i8, i8* %.18, i64 16
  %1 = bitcast i8* %.24 to i64*
  store i64 0, i64* %1, align 8
  %.26 = getelementptr inbounds i8, i8* %.18, i64 24
  %2 = bitcast i8* %.26 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.1, i64 0, i32 6
  %3 = bitcast %"Array<Expression>.676574"** %.28 to i8**
  store i8* %.18, i8** %3, align 8
  %.31 = call %Type.676538* @Type_unknown()
  %.32 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.1, i64 0, i32 4
  store %Type.676538* %.31, %Type.676538** %.32, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarId_constructor(%VarId.676596* nocapture %.1, i64 %.2, i64 %.3, i64 %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 2
  store i64 %.3, i64* %.17, align 8
  %.21 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @ClassVarId_constructor(%ClassVarId.676598* nocapture %.1, %ClassId.676554* nocapture readonly %.2) local_unnamed_addr #8 {
.4:
  %.8 = bitcast %ClassVarId.676598* %.1 to %VarId.676596*
  %.10 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.2, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  call void @VarId_constructor(%VarId.676596* %.8, i64 3, i64 %.11, i64 %.14)
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @EnumVarId_constructor(%EnumVarId.676600* nocapture %.1, %EnumId.676556* nocapture readonly %.2) local_unnamed_addr #8 {
.4:
  %.8 = bitcast %EnumVarId.676600* %.1 to %VarId.676596*
  %.10 = getelementptr inbounds %EnumId.676556, %EnumId.676556* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %EnumId.676556, %EnumId.676556* %.2, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  call void @VarId_constructor(%VarId.676596* %.8, i64 4, i64 %.11, i64 %.14)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstId_constructor(%ConstId.676602* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ConstId.676602* %.1 to %VarId.676596*
  call void @VarId_constructor(%VarId.676596* %.10, i64 2, i64 %.2, i64 %.3)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @PropId_constructor(%PropId.676604* nocapture %.1, i64 %.2, %TypeId.676552* %.3, i64 %.4) local_unnamed_addr #1 {
.6:
  %.13 = getelementptr inbounds %PropId.676604, %PropId.676604* %.1, i64 0, i32 1
  store i64 %.2, i64* %.13, align 8
  %.17 = getelementptr inbounds %PropId.676604, %PropId.676604* %.1, i64 0, i32 2
  store %TypeId.676552* %.3, %TypeId.676552** %.17, align 8
  %.21 = getelementptr inbounds %PropId.676604, %PropId.676604* %.1, i64 0, i32 3
  store i64 %.4, i64* %.21, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @MemberExpression_constructor(%MemberExpression.676606* nocapture %.1, %Expression.676558* %.2, %PropId.676604* %.3, %Type.676538* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %MemberExpression.676606* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.12, i64 12)
  %.16 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.1, i64 0, i32 5
  store %Expression.676558* %.2, %Expression.676558** %.16, align 8
  %.20 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.1, i64 0, i32 6
  store %PropId.676604* %.3, %PropId.676604** %.20, align 8
  %.24 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.1, i64 0, i32 4
  store %Type.676538* %.4, %Type.676538** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @VarAccessExpression_constructor(%VarAccessExpression.676608* nocapture %.1, %VarId.676596* %.2, %Type.676538* %.3) local_unnamed_addr #8 {
.5:
  %.10 = bitcast %VarAccessExpression.676608* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.10, i64 7)
  %.14 = getelementptr inbounds %VarAccessExpression.676608, %VarAccessExpression.676608* %.1, i64 0, i32 5
  store %VarId.676596* %.2, %VarId.676596** %.14, align 8
  %.18 = getelementptr inbounds %VarAccessExpression.676608, %VarAccessExpression.676608* %.1, i64 0, i32 4
  store %Type.676538* %.3, %Type.676538** %.18, align 8
  %.22 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  %.25 = getelementptr inbounds %VarAccessExpression.676608, %VarAccessExpression.676608* %.1, i64 0, i32 2
  store i1 %.24, i1* %.25, align 1
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Statement>_constructor"(%"Array<Statement>.676612"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %0 = bitcast %Statement.676550*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Statement>_resize"(%"Array<Statement>.676612"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %0 = bitcast %Statement.676550*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Statement>_swap"(%"Array<Statement>.676612"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %.48 = load %Statement.676550**, %Statement.676550*** %.47, align 8
  %.49 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.48, i64 %.2
  %4 = bitcast %Statement.676550** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.48, i64 %.3
  %5 = bitcast %Statement.676550** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Statement.676550**, %Statement.676550*** %.47, align 8
  %.69 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.67, i64 %.3
  %6 = bitcast %Statement.676550** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Statement>___sl__"(%"Array<Statement>.676612"* %.1, %Statement.676550* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 0
  %.17 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Statement>.676612"*)*, void (%"Array<Statement>.676612"*)** %.18, align 8
  call void %.19(%"Array<Statement>.676612"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %.31 = load %Statement.676550**, %Statement.676550*** %.30, align 8
  %.33 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.31, i64 %.24
  store %Statement.676550* %.2, %Statement.676550** %.33, align 8
  ret void
}

define void @"Array<Statement>___setitem__"(%"Array<Statement>.676612"* nocapture readonly %.1, i64 %.2, %Statement.676550* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %.30 = load %Statement.676550**, %Statement.676550*** %.29, align 8
  %.32 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.30, i64 %.2
  store %Statement.676550* %.3, %Statement.676550** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Statement>_append"(%"Array<Statement>.676612"* %.1, %Statement.676550* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 0
  %.9 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Statement>.676612"*, %Statement.676550*)*, void (%"Array<Statement>.676612"*, %Statement.676550*)** %.10, align 8
  call void %.11(%"Array<Statement>.676612"* %.1, %Statement.676550* %.2)
  ret void
}

define %Statement.676550* @"Array<Statement>___getitem__"(%"Array<Statement>.676612"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %.28 = load %Statement.676550**, %Statement.676550*** %.27, align 8
  %.29 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.28, i64 %.2
  %.30 = load %Statement.676550*, %Statement.676550** %.29, align 8
  ret %Statement.676550* %.30

.4.endif:                                         ; preds = %.4
  ret %Statement.676550* null
}

define i1 @"Array<Statement>___eq__"(%"Array<Statement>.676612"* %.1, %"Array<Statement>.676612"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.28, i64 0, i32 5
  %.30 = load %Statement.676550* (%"Array<Statement>.676612"*, i64)*, %Statement.676550* (%"Array<Statement>.676612"*, i64)** %.29, align 8
  %.31 = call %Statement.676550* %.30(%"Array<Statement>.676612"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.35, i64 0, i32 5
  %.37 = load %Statement.676550* (%"Array<Statement>.676612"*, i64)*, %Statement.676550* (%"Array<Statement>.676612"*, i64)** %.36, align 8
  %.38 = call %Statement.676550* %.37(%"Array<Statement>.676612"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Statement.676550* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Statement.676550* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Statement>___in__"(%"Array<Statement>.676612"* %.1, %Statement.676550* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Statement.676550* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.19, i64 0, i32 5
  %.21 = load %Statement.676550* (%"Array<Statement>.676612"*, i64)*, %Statement.676550* (%"Array<Statement>.676612"*, i64)** %.20, align 8
  %.22 = call %Statement.676550* %.21(%"Array<Statement>.676612"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Statement.676550* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Statement>_find"(%"Array<Statement>.676612"* nocapture readonly %.1, %Statement.676550* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 1
  %.19 = load %Statement.676550**, %Statement.676550*** %.18, align 8
  %0 = ptrtoint %Statement.676550* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Statement.676550*, %Statement.676550** %.19, i64 %storemerge5
  %1 = bitcast %Statement.676550** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Statement>_join"(%"Array<Statement>.676612"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.187, i64 0, i64 0), i64 10)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.187, i64 0, i64 0), i64 10)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Statement>___as_string__"(%"Array<Statement>.676612"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.1, i64 0, i32 0
  %.7 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Statement>.676612"*, %string.676378*)*, %string.676378* (%"Array<Statement>.676612"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Statement>.676612"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @Block_constructor(%Block.676610* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Statement>_vtable_ty.676613"**
  store %"Array<Statement>_vtable_ty.676613"* @"Array<Statement>_vtable_data", %"Array<Statement>_vtable_ty.676613"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 1
  %3 = bitcast %"Array<Statement>.676612"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.22 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 2
  store i1 false, i1* %.22, align 1
  %.25 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 3
  store i1 false, i1* %.25, align 1
  %.28 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 4
  store i1 false, i1* %.28, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @IfStatement_constructor(%IfStatement.676614* nocapture %.1, %Expression.676558* %.2, %Block.676610* %.3, %Block.676610* %.4) local_unnamed_addr #1 {
.6:
  %.12 = bitcast %IfStatement.676614* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.12, i64 0)
  %.16 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.1, i64 0, i32 2
  store %Expression.676558* %.2, %Expression.676558** %.16, align 8
  %.20 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.1, i64 0, i32 3
  store %Block.676610* %.3, %Block.676610** %.20, align 8
  %.24 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.1, i64 0, i32 4
  store %Block.676610* %.4, %Block.676610** %.24, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @VarDeclaration_constructor(%VarDeclaration.676616* nocapture %.1, %string.676378* %.2, %VarId.676596* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %VarDeclaration.676616* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.10, i64 1)
  %.14 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.1, i64 0, i32 3
  store %VarId.676596* %.3, %VarId.676596** %.14, align 8
  %.18 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.1, i64 0, i32 2
  store %string.676378* %.2, %string.676378** %.18, align 8
  %.21 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ConstDeclaration_constructor(%ConstDeclaration.676618* nocapture %.1, %string.676378* %.2, %ConstId.676602* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %ConstDeclaration.676618* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.10, i64 2)
  %.14 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.1, i64 0, i32 3
  store %ConstId.676602* %.3, %ConstId.676602** %.14, align 8
  %.18 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.1, i64 0, i32 2
  store %string.676378* %.2, %string.676378** %.18, align 8
  %.21 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.1, i64 0, i32 4
  store i1 false, i1* %.21, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ForStatement_constructor(%ForStatement.676620* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %ForStatement.676620* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.6, i64 3)
  %.9 = getelementptr inbounds %ForStatement.676620, %ForStatement.676620* %.1, i64 0, i32 2
  %0 = bitcast %Statement.676550** %.9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @WhileStatement_constructor(%WhileStatement.676622* nocapture %.1, %Expression.676558* %.2, %Block.676610* %.3) local_unnamed_addr #1 {
.5:
  %.10 = bitcast %WhileStatement.676622* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.10, i64 4)
  %.14 = getelementptr inbounds %WhileStatement.676622, %WhileStatement.676622* %.1, i64 0, i32 2
  store %Expression.676558* %.2, %Expression.676558** %.14, align 8
  %.18 = getelementptr inbounds %WhileStatement.676622, %WhileStatement.676622* %.1, i64 0, i32 3
  store %Block.676610* %.3, %Block.676610** %.18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ReturnStatement_constructor(%ReturnStatement.676624* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %ReturnStatement.676624* %.1 to %Statement.676550*
  call void @Statement_constructor(%Statement.676550* %.6, i64 7)
  %.9 = getelementptr inbounds %ReturnStatement.676624, %ReturnStatement.676624* %.1, i64 0, i32 2
  store %Expression.676558* null, %Expression.676558** %.9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_numeric(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.7.off = add i64 %.7, -1
  %0 = icmp ult i64 %.7.off, 11
  ret i1 %0
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_float(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %0 = and i64 %.7, -4
  %1 = icmp eq i64 %0, 8
  ret i1 %1
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_int(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.7.off = add i64 %.7, -1
  %0 = icmp ult i64 %.7.off, 7
  ret i1 %0
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_bool(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 0
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_i8_ptr(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 15
  br i1 %.8, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.12 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 1
  %0 = bitcast %Type.676538* %.12 to %Type.676538**
  %.13 = load %Type.676538*, %Type.676538** %0, align 8
  %.14 = getelementptr inbounds %Type.676538, %Type.676538* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 2
  ret i1 %.16

.3.endif:                                         ; preds = %.3
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_object(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 13
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_pointer(%Type.676538* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 15
  ret i1 %.8
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_null(%Expression.676558* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Expression.676558, %Expression.676558* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.8 = icmp eq i64 %.7, 5
  ret i1 %.8
}

; Function Attrs: nofree nounwind
define noalias %Expression.676558* @cast_exp_to_type(%Expression.676558* %.1, %Type.676538* %.2) local_unnamed_addr #3 {
.4:
  %.9 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.10 = bitcast i8* %.9 to %TypeCastExpression.676586*
  %.11 = bitcast i8* %.9 to %TypeCastExpression_vtable_ty.676587**
  store %TypeCastExpression_vtable_ty.676587* @TypeCastExpression_vtable_data, %TypeCastExpression_vtable_ty.676587** %.11, align 8
  call void @TypeCastExpression_constructor(%TypeCastExpression.676586* %.10, %Expression.676558* %.1, %Type.676538* %.2)
  %.14 = bitcast i8* %.9 to %Expression.676558*
  ret %Expression.676558* %.14
}

; Function Attrs: norecurse nounwind readonly
define %Type.676538* @max_type(%Type.676538* readonly %.1, %Type.676538* readonly %.2) local_unnamed_addr #4 {
.4:
  %.8 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.13 = icmp sgt i64 %.9, %.12
  %.1..2 = select i1 %.13, %Type.676538* %.1, %Type.676538* %.2
  ret %Type.676538* %.1..2
}

; Function Attrs: nofree nounwind
define void @check_cast_lower_bits(%Expression.676558** nocapture %.1, %Expression.676558** nocapture %.2) local_unnamed_addr #3 {
.4:
  %.9 = load %Expression.676558*, %Expression.676558** %.1, align 8
  %.10 = getelementptr inbounds %Expression.676558, %Expression.676558* %.9, i64 0, i32 4
  %.11 = load %Type.676538*, %Type.676538** %.10, align 8
  %.15 = load %Expression.676558*, %Expression.676558** %.2, align 8
  %.16 = getelementptr inbounds %Expression.676558, %Expression.676558* %.15, i64 0, i32 4
  %.17 = load %Type.676538*, %Type.676538** %.16, align 8
  %.20 = getelementptr inbounds %Type.676538, %Type.676538* %.11, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.23 = getelementptr inbounds %Type.676538, %Type.676538* %.17, i64 0, i32 1
  %.24 = load i64, i64* %.23, align 8
  %.25.not = icmp eq i64 %.21, %.24
  br i1 %.25.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.28 = call i1 @is_float(%Type.676538* %.11)
  %.30 = call i1 @is_int(%Type.676538* %.17)
  %.31 = and i1 %.28, %.30
  br i1 %.31, label %.4.if.if, label %.4.if.else

.4.endif.sink.split:                              ; preds = %.4.if.if, %.4.if.else.else, %.4.if.else.if
  %.1.sink = phi %Expression.676558** [ %.1, %.4.if.else.if ], [ %.2, %.4.if.else.else ], [ %.2, %.4.if.if ]
  %.53.sink = phi %Expression.676558* [ %.53, %.4.if.else.if ], [ %.74, %.4.if.else.else ], [ %.38, %.4.if.if ]
  store %Expression.676558* %.53.sink, %Expression.676558** %.1.sink, align 8
  br label %.4.endif

.4.endif:                                         ; preds = %.4.endif.sink.split, %.4
  ret void

.4.if.if:                                         ; preds = %.4.if
  %.38 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.15, %Type.676538* %.11)
  br label %.4.endif.sink.split

.4.if.else:                                       ; preds = %.4.if
  %.43 = call i1 @is_int(%Type.676538* %.11)
  %.45 = call i1 @is_float(%Type.676538* %.17)
  %.46 = and i1 %.43, %.45
  br i1 %.46, label %.4.if.else.if, label %.4.if.else.else

.4.if.else.if:                                    ; preds = %.4.if.else
  %.53 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.9, %Type.676538* %.17)
  br label %.4.endif.sink.split

.4.if.else.else:                                  ; preds = %.4.if.else
  %.59 = call %Type.676538* @max_type(%Type.676538* %.11, %Type.676538* %.17)
  %.66 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.9, %Type.676538* %.59)
  store %Expression.676558* %.66, %Expression.676558** %.1, align 8
  %.72 = load %Expression.676558*, %Expression.676558** %.2, align 8
  %.74 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.72, %Type.676538* %.59)
  br label %.4.endif.sink.split
}

; Function Attrs: norecurse nounwind readonly
define i1 @check_is_var(%Expression.676558* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Expression.676558, %Expression.676558* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  switch i64 %.7, label %.3.endif.endif [
    i64 7, label %.3.if
    i64 12, label %.3.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.12 = getelementptr inbounds %Expression.676558, %Expression.676558* %.1, i64 1
  %0 = bitcast %Expression.676558* %.12 to %VarId.676596**
  %.13 = load %VarId.676596*, %VarId.676596** %0, align 8
  %.14 = getelementptr inbounds %VarId.676596, %VarId.676596* %.13, i64 0, i32 1
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp eq i64 %.15, 1
  ret i1 %.16

.3.endif.if:                                      ; preds = %.3
  %.25 = getelementptr inbounds %Expression.676558, %Expression.676558* %.1, i64 1, i32 1
  %1 = bitcast i64* %.25 to %PropId.676604**
  %.2612 = load %PropId.676604*, %PropId.676604** %1, align 8
  %.29 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2612, i64 0, i32 1
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 1
  ret i1 %.31

.3.endif.endif:                                   ; preds = %.3
  %.36 = icmp eq i64 %.7, 13
  ret i1 %.36
}

define noalias %string.676378* @dump_type(%Type.676538* nocapture readonly %.1, i1 %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endi...endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 2, label %.4.endif.endif.if
    i64 3, label %.4.endif.endif.endif.if
    i64 4, label %.4.endif.endif.endif.endif.if
    i64 5, label %.4.endif.endif.endif.endif.endif.if
    i64 6, label %.4.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.4.endif.endif.endif.endi...if
    i64 10, label %.4.endif.endif.endif.endi...endif.if
    i64 11, label %.4.endif.endif.endif.endi...endif.endif.if
    i64 12, label %.4.endif.endif.endif.endi...endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %string.676378*
  %.13.repack = bitcast i8* %.12 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.13.repack, align 8
  %.13.repack43 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.13.repack43 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.33, i64 0, i64 0), i8** %0, align 8
  %.13.repack44 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.13.repack44 to i64*
  store i64 4, i64* %1, align 8
  %.13.repack45 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.13.repack45 to i64*
  store i64 4, i64* %2, align 8
  ret %string.676378* %.13

.4.endif.if:                                      ; preds = %.4
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.676378*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.22.repack, align 8
  %.22.repack40 = getelementptr inbounds i8, i8* %.21, i64 8
  %3 = bitcast i8* %.22.repack40 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.34, i64 0, i64 0), i8** %3, align 8
  %.22.repack41 = getelementptr inbounds i8, i8* %.21, i64 16
  %4 = bitcast i8* %.22.repack41 to i64*
  store i64 2, i64* %4, align 8
  %.22.repack42 = getelementptr inbounds i8, i8* %.21, i64 24
  %5 = bitcast i8* %.22.repack42 to i64*
  store i64 2, i64* %5, align 8
  ret %string.676378* %.22

.4.endif.endif.if:                                ; preds = %.4
  %.30 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.31 = bitcast i8* %.30 to %string.676378*
  %.31.repack = bitcast i8* %.30 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.31.repack, align 8
  %.31.repack37 = getelementptr inbounds i8, i8* %.30, i64 8
  %6 = bitcast i8* %.31.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.35, i64 0, i64 0), i8** %6, align 8
  %.31.repack38 = getelementptr inbounds i8, i8* %.30, i64 16
  %7 = bitcast i8* %.31.repack38 to i64*
  store i64 2, i64* %7, align 8
  %.31.repack39 = getelementptr inbounds i8, i8* %.30, i64 24
  %8 = bitcast i8* %.31.repack39 to i64*
  store i64 2, i64* %8, align 8
  ret %string.676378* %.31

.4.endif.endif.endif.if:                          ; preds = %.4
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.676378*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.40.repack, align 8
  %.40.repack34 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack34 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.36, i64 0, i64 0), i8** %9, align 8
  %.40.repack35 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack35 to i64*
  store i64 3, i64* %10, align 8
  %.40.repack36 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack36 to i64*
  store i64 3, i64* %11, align 8
  ret %string.676378* %.40

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.48 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.49 = bitcast i8* %.48 to %string.676378*
  %.49.repack = bitcast i8* %.48 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.49.repack, align 8
  %.49.repack31 = getelementptr inbounds i8, i8* %.48, i64 8
  %12 = bitcast i8* %.49.repack31 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.37, i64 0, i64 0), i8** %12, align 8
  %.49.repack32 = getelementptr inbounds i8, i8* %.48, i64 16
  %13 = bitcast i8* %.49.repack32 to i64*
  store i64 3, i64* %13, align 8
  %.49.repack33 = getelementptr inbounds i8, i8* %.48, i64 24
  %14 = bitcast i8* %.49.repack33 to i64*
  store i64 3, i64* %14, align 8
  ret %string.676378* %.49

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.58.repack, align 8
  %.58.repack28 = getelementptr inbounds i8, i8* %.57, i64 8
  %15 = bitcast i8* %.58.repack28 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.38, i64 0, i64 0), i8** %15, align 8
  %.58.repack29 = getelementptr inbounds i8, i8* %.57, i64 16
  %16 = bitcast i8* %.58.repack29 to i64*
  store i64 3, i64* %16, align 8
  %.58.repack30 = getelementptr inbounds i8, i8* %.57, i64 24
  %17 = bitcast i8* %.58.repack30 to i64*
  store i64 3, i64* %17, align 8
  ret %string.676378* %.58

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4
  %.66 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %string.676378*
  %.67.repack = bitcast i8* %.66 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.67.repack, align 8
  %.67.repack25 = getelementptr inbounds i8, i8* %.66, i64 8
  %18 = bitcast i8* %.67.repack25 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.39, i64 0, i64 0), i8** %18, align 8
  %.67.repack26 = getelementptr inbounds i8, i8* %.66, i64 16
  %19 = bitcast i8* %.67.repack26 to i64*
  store i64 4, i64* %19, align 8
  %.67.repack27 = getelementptr inbounds i8, i8* %.66, i64 24
  %20 = bitcast i8* %.67.repack27 to i64*
  store i64 4, i64* %20, align 8
  ret %string.676378* %.67

.4.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.4
  br i1 %.2, label %true_block, label %false_block

true_block:                                       ; preds = %.4.endif.endif.endif.endif.endif.endif.endif.if
  %.78 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.188, i64 0, i64 0), i64 64)
  %.80 = call i8* @malloc(i64 %.78)
  %.81 = call i64 (i8*, i8*, ...) @sprintf(i8* %.80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.188, i64 0, i64 0), i64 64)
  %.82 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end

false_block:                                      ; preds = %.4.endif.endif.endif.endif.endif.endif.endif.if
  %.93 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.93.sink53 = phi i8* [ %.93, %false_block ], [ %.82, %true_block ]
  %.sink50 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @str.40, i64 0, i64 0), %false_block ], [ %.80, %true_block ]
  %.sink47 = phi i64 [ 3, %false_block ], [ %.78, %true_block ]
  %.94.repack = bitcast i8* %.93.sink53 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.94.repack, align 8
  %.94.repack22 = getelementptr inbounds i8, i8* %.93.sink53, i64 8
  %21 = bitcast i8* %.94.repack22 to i8**
  store i8* %.sink50, i8** %21, align 8
  %.94.repack23 = getelementptr inbounds i8, i8* %.93.sink53, i64 16
  %22 = bitcast i8* %.94.repack23 to i64*
  store i64 %.sink47, i64* %22, align 8
  %.94.repack24 = getelementptr inbounds i8, i8* %.93.sink53, i64 24
  %23 = bitcast i8* %.94.repack24 to i64*
  store i64 %.sink47, i64* %23, align 8
  %.97 = bitcast i8* %.93.sink53 to %string.676378*
  ret %string.676378* %.97

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4
  %.104 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.105 = bitcast i8* %.104 to %string.676378*
  %.105.repack = bitcast i8* %.104 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.105.repack, align 8
  %.105.repack19 = getelementptr inbounds i8, i8* %.104, i64 8
  %24 = bitcast i8* %.105.repack19 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.41, i64 0, i64 0), i8** %24, align 8
  %.105.repack20 = getelementptr inbounds i8, i8* %.104, i64 16
  %25 = bitcast i8* %.105.repack20 to i64*
  store i64 3, i64* %25, align 8
  %.105.repack21 = getelementptr inbounds i8, i8* %.104, i64 24
  %26 = bitcast i8* %.105.repack21 to i64*
  store i64 3, i64* %26, align 8
  ret %string.676378* %.105

.4.endif.endif.endif.endi...if:                   ; preds = %.4
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.676378*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.114.repack, align 8
  %.114.repack16 = getelementptr inbounds i8, i8* %.113, i64 8
  %27 = bitcast i8* %.114.repack16 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.42, i64 0, i64 0), i8** %27, align 8
  %.114.repack17 = getelementptr inbounds i8, i8* %.113, i64 16
  %28 = bitcast i8* %.114.repack17 to i64*
  store i64 3, i64* %28, align 8
  %.114.repack18 = getelementptr inbounds i8, i8* %.113, i64 24
  %29 = bitcast i8* %.114.repack18 to i64*
  store i64 3, i64* %29, align 8
  ret %string.676378* %.114

.4.endif.endif.endif.endi...endif.if:             ; preds = %.4
  %.122 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.123 = bitcast i8* %.122 to %string.676378*
  %.123.repack = bitcast i8* %.122 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.123.repack, align 8
  %.123.repack13 = getelementptr inbounds i8, i8* %.122, i64 8
  %30 = bitcast i8* %.123.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.43, i64 0, i64 0), i8** %30, align 8
  %.123.repack14 = getelementptr inbounds i8, i8* %.122, i64 16
  %31 = bitcast i8* %.123.repack14 to i64*
  store i64 3, i64* %31, align 8
  %.123.repack15 = getelementptr inbounds i8, i8* %.122, i64 24
  %32 = bitcast i8* %.123.repack15 to i64*
  store i64 3, i64* %32, align 8
  ret %string.676378* %.123

.4.endif.endif.endif.endi...endif.endif.if:       ; preds = %.4
  br i1 %.2, label %true_block.1, label %false_block.1

true_block.1:                                     ; preds = %.4.endif.endif.endif.endi...endif.endif.if
  %.134 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.189, i64 0, i64 0), i64 64)
  %.136 = call i8* @malloc(i64 %.134)
  %.137 = call i64 (i8*, i8*, ...) @sprintf(i8* %.136, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.189, i64 0, i64 0), i64 64)
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end.1

false_block.1:                                    ; preds = %.4.endif.endif.endif.endi...endif.endif.if
  %.149 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  br label %end.1

end.1:                                            ; preds = %false_block.1, %true_block.1
  %.149.sink62 = phi i8* [ %.149, %false_block.1 ], [ %.138, %true_block.1 ]
  %.sink59 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @str.44, i64 0, i64 0), %false_block.1 ], [ %.136, %true_block.1 ]
  %.sink56 = phi i64 [ 5, %false_block.1 ], [ %.134, %true_block.1 ]
  %.150.repack = bitcast i8* %.149.sink62 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.150.repack, align 8
  %.150.repack10 = getelementptr inbounds i8, i8* %.149.sink62, i64 8
  %33 = bitcast i8* %.150.repack10 to i8**
  store i8* %.sink59, i8** %33, align 8
  %.150.repack11 = getelementptr inbounds i8, i8* %.149.sink62, i64 16
  %34 = bitcast i8* %.150.repack11 to i64*
  store i64 %.sink56, i64* %34, align 8
  %.150.repack12 = getelementptr inbounds i8, i8* %.149.sink62, i64 24
  %35 = bitcast i8* %.150.repack12 to i64*
  store i64 %.sink56, i64* %35, align 8
  %.153 = bitcast i8* %.149.sink62 to %string.676378*
  ret %string.676378* %.153

.4.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.4
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.676378*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.161.repack, align 8
  %.161.repack7 = getelementptr inbounds i8, i8* %.160, i64 8
  %36 = bitcast i8* %.161.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.45, i64 0, i64 0), i8** %36, align 8
  %.161.repack8 = getelementptr inbounds i8, i8* %.160, i64 16
  %37 = bitcast i8* %.161.repack8 to i64*
  store i64 4, i64* %37, align 8
  %.161.repack9 = getelementptr inbounds i8, i8* %.160, i64 24
  %38 = bitcast i8* %.161.repack9 to i64*
  store i64 4, i64* %38, align 8
  ret %string.676378* %.161

.4.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.4
  %.167 = icmp eq i64 %.9, 18
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.676378*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.170.repack, align 8
  %.170.repack4 = getelementptr inbounds i8, i8* %.169, i64 8
  %39 = bitcast i8* %.170.repack4 to i8**
  br i1 %.167, label %.4.endif.endif.endif.endi...if.1, label %.4.endif.endif.endif.endi...endif.1

.4.endif.endif.endif.endi...if.1:                 ; preds = %.4.endif.endif.endif.endi...endif.endif.endif.endif
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.190, i64 0, i64 0), i8** %39, align 8
  %.170.repack5 = getelementptr inbounds i8, i8* %.169, i64 16
  %40 = bitcast i8* %.170.repack5 to i64*
  store i64 6, i64* %40, align 8
  %.170.repack6 = getelementptr inbounds i8, i8* %.169, i64 24
  %41 = bitcast i8* %.170.repack6 to i64*
  store i64 6, i64* %41, align 8
  ret %string.676378* %.170

.4.endif.endif.endif.endi...endif.1:              ; preds = %.4.endif.endif.endif.endi...endif.endif.endif.endif
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.191, i64 0, i64 0), i8** %39, align 8
  %.174.repack2 = getelementptr inbounds i8, i8* %.169, i64 16
  %42 = bitcast i8* %.174.repack2 to i64*
  store i64 7, i64* %42, align 8
  %.174.repack3 = getelementptr inbounds i8, i8* %.169, i64 24
  %43 = bitcast i8* %.174.repack3 to i64*
  store i64 7, i64* %43, align 8
  ret %string.676378* %.170
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @dump_bin_op(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.2.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 3, label %.3.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
    i64 6, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.3.endif.endif.endif.endi...if
    i64 10, label %.3.endif.endif.endif.endi...endif.if
    i64 11, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 12, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 13, label %.3.endif.endif.endif.endi...if.1
    i64 14, label %.3.endif.endif.endif.endi...endif.1.if
    i64 15, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 16, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 17, label %.3.endif.endif.endif.endi...if.2
    i64 18, label %.3.endif.endif.endif.endi...endif.2.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.676378*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9.repack, align 8
  %.9.repack58 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack58 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.192, i64 0, i64 0), i8** %0, align 8
  %.9.repack59 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack59 to i64*
  store i64 1, i64* %1, align 8
  %.9.repack60 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack60 to i64*
  store i64 1, i64* %2, align 8
  ret %string.676378* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.16.repack, align 8
  %.16.repack55 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack55 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.193, i64 0, i64 0), i8** %3, align 8
  %.16.repack56 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack56 to i64*
  store i64 1, i64* %4, align 8
  %.16.repack57 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack57 to i64*
  store i64 1, i64* %5, align 8
  ret %string.676378* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.676378*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.23.repack, align 8
  %.23.repack52 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack52 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.194, i64 0, i64 0), i8** %6, align 8
  %.23.repack53 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack53 to i64*
  store i64 1, i64* %7, align 8
  %.23.repack54 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack54 to i64*
  store i64 1, i64* %8, align 8
  ret %string.676378* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack49 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack49 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.195, i64 0, i64 0), i8** %9, align 8
  %.30.repack50 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack50 to i64*
  store i64 1, i64* %10, align 8
  %.30.repack51 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack51 to i64*
  store i64 1, i64* %11, align 8
  ret %string.676378* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.676378*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.37.repack, align 8
  %.37.repack46 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack46 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.196, i64 0, i64 0), i8** %12, align 8
  %.37.repack47 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack47 to i64*
  store i64 1, i64* %13, align 8
  %.37.repack48 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack48 to i64*
  store i64 1, i64* %14, align 8
  ret %string.676378* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.676378*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.44.repack, align 8
  %.44.repack43 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack43 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.5, i64 0, i64 0), i8** %15, align 8
  %.44.repack44 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack44 to i64*
  store i64 1, i64* %16, align 8
  %.44.repack45 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack45 to i64*
  store i64 1, i64* %17, align 8
  ret %string.676378* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.51.repack, align 8
  %.51.repack40 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack40 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.197, i64 0, i64 0), i8** %18, align 8
  %.51.repack41 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack41 to i64*
  store i64 1, i64* %19, align 8
  %.51.repack42 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack42 to i64*
  store i64 1, i64* %20, align 8
  ret %string.676378* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.58.repack, align 8
  %.58.repack37 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.198, i64 0, i64 0), i8** %21, align 8
  %.58.repack38 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack38 to i64*
  store i64 2, i64* %22, align 8
  %.58.repack39 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack39 to i64*
  store i64 2, i64* %23, align 8
  ret %string.676378* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.676378*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.65.repack, align 8
  %.65.repack34 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack34 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.199, i64 0, i64 0), i8** %24, align 8
  %.65.repack35 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack35 to i64*
  store i64 1, i64* %25, align 8
  %.65.repack36 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack36 to i64*
  store i64 1, i64* %26, align 8
  ret %string.676378* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.676378*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.72.repack, align 8
  %.72.repack31 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack31 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.200, i64 0, i64 0), i8** %27, align 8
  %.72.repack32 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack32 to i64*
  store i64 2, i64* %28, align 8
  %.72.repack33 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack33 to i64*
  store i64 2, i64* %29, align 8
  ret %string.676378* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.676378*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.79.repack, align 8
  %.79.repack28 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack28 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.201, i64 0, i64 0), i8** %30, align 8
  %.79.repack29 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack29 to i64*
  store i64 2, i64* %31, align 8
  %.79.repack30 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack30 to i64*
  store i64 2, i64* %32, align 8
  ret %string.676378* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.676378*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.86.repack, align 8
  %.86.repack25 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack25 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.202, i64 0, i64 0), i8** %33, align 8
  %.86.repack26 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack26 to i64*
  store i64 2, i64* %34, align 8
  %.86.repack27 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack27 to i64*
  store i64 2, i64* %35, align 8
  ret %string.676378* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.676378*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.93.repack, align 8
  %.93.repack22 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack22 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.203, i64 0, i64 0), i8** %36, align 8
  %.93.repack23 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack23 to i64*
  store i64 2, i64* %37, align 8
  %.93.repack24 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack24 to i64*
  store i64 2, i64* %38, align 8
  ret %string.676378* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.676378*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.100.repack, align 8
  %.100.repack19 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack19 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.204, i64 0, i64 0), i8** %39, align 8
  %.100.repack20 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack20 to i64*
  store i64 2, i64* %40, align 8
  %.100.repack21 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack21 to i64*
  store i64 2, i64* %41, align 8
  ret %string.676378* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.676378*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.107.repack, align 8
  %.107.repack16 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack16 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.27, i64 0, i64 0), i8** %42, align 8
  %.107.repack17 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack17 to i64*
  store i64 2, i64* %43, align 8
  %.107.repack18 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack18 to i64*
  store i64 2, i64* %44, align 8
  ret %string.676378* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.676378*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.114.repack, align 8
  %.114.repack13 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack13 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.26, i64 0, i64 0), i8** %45, align 8
  %.114.repack14 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack14 to i64*
  store i64 3, i64* %46, align 8
  %.114.repack15 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack15 to i64*
  store i64 3, i64* %47, align 8
  ret %string.676378* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.676378*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.121.repack, align 8
  %.121.repack10 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack10 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.28, i64 0, i64 0), i8** %48, align 8
  %.121.repack11 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack11 to i64*
  store i64 3, i64* %49, align 8
  %.121.repack12 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack12 to i64*
  store i64 3, i64* %50, align 8
  ret %string.676378* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.128.repack, align 8
  %.128.repack7 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack7 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.56, i64 0, i64 0), i8** %51, align 8
  %.128.repack8 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack8 to i64*
  store i64 2, i64* %52, align 8
  %.128.repack9 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack9 to i64*
  store i64 2, i64* %53, align 8
  ret %string.676378* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.676378*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.135.repack, align 8
  %.135.repack4 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.205, i64 0, i64 0), i8** %54, align 8
  %.135.repack5 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack5 to i64*
  store i64 1, i64* %55, align 8
  %.135.repack6 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack6 to i64*
  store i64 1, i64* %56, align 8
  ret %string.676378* %.135

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.676378*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.139.repack, align 8
  %.139.repack1 = getelementptr inbounds i8, i8* %.138, i64 8
  %57 = bitcast i8* %.139.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.206, i64 0, i64 0), i8** %57, align 8
  %.139.repack2 = getelementptr inbounds i8, i8* %.138, i64 16
  %58 = bitcast i8* %.139.repack2 to i64*
  store i64 2, i64* %58, align 8
  %.139.repack3 = getelementptr inbounds i8, i8* %.138, i64 24
  %59 = bitcast i8* %.139.repack3 to i64*
  store i64 2, i64* %59, align 8
  ret %string.676378* %.139
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @dump_unary_op(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endif.endif.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 3, label %.3.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.676378*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9.repack, align 8
  %.9.repack19 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack19 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.207, i64 0, i64 0), i8** %0, align 8
  %.9.repack20 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack20 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack21 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack21 to i64*
  store i64 7, i64* %2, align 8
  ret %string.676378* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.16.repack, align 8
  %.16.repack16 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack16 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.208, i64 0, i64 0), i8** %3, align 8
  %.16.repack17 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack17 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack18 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack18 to i64*
  store i64 7, i64* %5, align 8
  ret %string.676378* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.676378*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.23.repack, align 8
  %.23.repack13 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack13 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.209, i64 0, i64 0), i8** %6, align 8
  %.23.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack14 to i64*
  store i64 8, i64* %7, align 8
  %.23.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack15 to i64*
  store i64 8, i64* %8, align 8
  ret %string.676378* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack10 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack10 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.210, i64 0, i64 0), i8** %9, align 8
  %.30.repack11 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack11 to i64*
  store i64 8, i64* %10, align 8
  %.30.repack12 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack12 to i64*
  store i64 8, i64* %11, align 8
  ret %string.676378* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.676378*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.37.repack, align 8
  %.37.repack7 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack7 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.193, i64 0, i64 0), i8** %12, align 8
  %.37.repack8 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack8 to i64*
  store i64 1, i64* %13, align 8
  %.37.repack9 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack9 to i64*
  store i64 1, i64* %14, align 8
  ret %string.676378* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.676378*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.44.repack, align 8
  %.44.repack4 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack4 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.211, i64 0, i64 0), i8** %15, align 8
  %.44.repack5 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack5 to i64*
  store i64 1, i64* %16, align 8
  %.44.repack6 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack6 to i64*
  store i64 1, i64* %17, align 8
  ret %string.676378* %.44

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.676378*
  %.48.repack = bitcast i8* %.47 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.48.repack, align 8
  %.48.repack1 = getelementptr inbounds i8, i8* %.47, i64 8
  %18 = bitcast i8* %.48.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.212, i64 0, i64 0), i8** %18, align 8
  %.48.repack2 = getelementptr inbounds i8, i8* %.47, i64 16
  %19 = bitcast i8* %.48.repack2 to i64*
  store i64 1, i64* %19, align 8
  %.48.repack3 = getelementptr inbounds i8, i8* %.47, i64 24
  %20 = bitcast i8* %.48.repack3 to i64*
  store i64 1, i64* %20, align 8
  ret %string.676378* %.48
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @dump_access(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.676378*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9.repack, align 8
  %.9.repack7 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack7 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.53, i64 0, i64 0), i8** %0, align 8
  %.9.repack8 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack8 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack9 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack9 to i64*
  store i64 7, i64* %2, align 8
  ret %string.676378* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.16.repack, align 8
  %.16.repack4 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack4 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.54, i64 0, i64 0), i8** %3, align 8
  %.16.repack5 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack5 to i64*
  store i64 6, i64* %4, align 8
  %.16.repack6 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack6 to i64*
  store i64 6, i64* %5, align 8
  ret %string.676378* %.16

.3.endif.endif:                                   ; preds = %.3
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.676378*
  %.20.repack = bitcast i8* %.19 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.20.repack, align 8
  %.20.repack1 = getelementptr inbounds i8, i8* %.19, i64 8
  %6 = bitcast i8* %.20.repack1 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.55, i64 0, i64 0), i8** %6, align 8
  %.20.repack2 = getelementptr inbounds i8, i8* %.19, i64 16
  %7 = bitcast i8* %.20.repack2 to i64*
  store i64 9, i64* %7, align 8
  %.20.repack3 = getelementptr inbounds i8, i8* %.19, i64 24
  %8 = bitcast i8* %.20.repack3 to i64*
  store i64 9, i64* %8, align 8
  ret %string.676378* %.20
}

; Function Attrs: norecurse nounwind readnone
define i64 @lower_bin_assign_op(i64 %.1) local_unnamed_addr #6 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif [
    i64 19, label %.3.if
    i64 20, label %.3.endif.if
    i64 21, label %.3.endif.endif.if
    i64 22, label %.3.endif.endif.endif.if
    i64 23, label %.3.endif.endif.endif.endif.if
    i64 24, label %.3.endif.endif.endif.endif.endif.if
    i64 25, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 26, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 28, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
  ]

.3.if:                                            ; preds = %.3, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.endif.if, %.3.endif.endif.endif.endif.if, %.3.endif.endif.endif.if, %.3.endif.endif.if, %.3.endif.if
  %merge = phi i64 [ 0, %.3 ], [ 1, %.3.endif.if ], [ 2, %.3.endif.endif.if ], [ 3, %.3.endif.endif.endif.if ], [ 4, %.3.endif.endif.endif.endif.if ], [ 5, %.3.endif.endif.endif.endif.endif.if ], [ 15, %.3.endif.endif.endif.endif.endif.endif.if ], [ 14, %.3.endif.endif.endif.endif.endif.endif.endif.if ], [ 12, %.3.endif.endif.endif.endif.endif.endif.endif.endif.if ], [ 13, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.3.endif.if:                                      ; preds = %.3
  br label %.3.if

.3.endif.endif.if:                                ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.if:                          ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  br label %.3.if

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3
  br label %.3.if
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @ScopeId_constructor(%ScopeId.676626* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %ScopeId.676626, %ScopeId.676626* %.1, i64 0, i32 1
  store i64 %.2, i64* %.11, align 8
  %.15 = getelementptr inbounds %ScopeId.676626, %ScopeId.676626* %.1, i64 0, i32 2
  store i64 %.3, i64* %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.676635"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, VarId>_set"(%"Bucket<string, VarId>.676635"* nocapture %.1, %string.676378* %.2, %VarId.676596* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.1, i64 0, i32 2
  store %VarId.676596* %.3, %VarId.676596** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.676630"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.676635"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, VarId>.676635"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, VarId>_vtable_ty.676636"**
  store %"Bucket<string, VarId>_vtable_ty.676636"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.676636"** %.26, align 8
  call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.676635"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, VarId>.676635"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, VarId>_hash_fnc"(%"Map<string, VarId>.676630"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, VarId>_resize"(%"Map<string, VarId>.676630"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.676635"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, VarId>.676635"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, VarId>_vtable_ty.676636"**
  store %"Bucket<string, VarId>_vtable_ty.676636"* @"Bucket<string, VarId>_vtable_data", %"Bucket<string, VarId>_vtable_ty.676636"** %.45, align 8
  call void @"Bucket<string, VarId>_constructor"(%"Bucket<string, VarId>.676635"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, VarId>.676635"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, VarId>_set"(%"Map<string, VarId>.676630"* %.1, %string.676378* %.2, %VarId.676596* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, VarId>.676630"*, %string.676378*)*, i64 (%"Map<string, VarId>.676630"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, VarId>.676630"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, VarId>.676630"*)*, void (%"Map<string, VarId>.676630"*)** %.32, align 8
  call void %.33(%"Map<string, VarId>.676630"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.39, i64 %.19
  %.41 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, VarId>_vtable_ty.676636"*, %"Bucket<string, VarId>_vtable_ty.676636"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, VarId>_vtable_ty.676636", %"Bucket<string, VarId>_vtable_ty.676636"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, VarId>.676635"*, %string.676378*, %VarId.676596*)*, void (%"Bucket<string, VarId>.676635"*, %string.676378*, %VarId.676596*)** %.92, align 8
  call void %.93(%"Bucket<string, VarId>.676635"* %.89, %string.676378* %.2, %VarId.676596* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.70, i64 %.65
  %.72 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %VarId.676596* @"Map<string, VarId>_get"(%"Map<string, VarId>.676630"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, VarId>.676630"*, %string.676378*)*, i64 (%"Map<string, VarId>.676630"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, VarId>.676630"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.22, i64 %.17
  %.24 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.54, i64 %.48
  %.56 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %VarId.676596* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.91, i64 0, i32 2
  %.93 = load %VarId.676596*, %VarId.676596** %.92, align 8
  ret %VarId.676596* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, VarId>>_constructor"(%"Array<Bucket<string, VarId>>.676637"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.676635"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, VarId>>_resize"(%"Array<Bucket<string, VarId>>.676637"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, VarId>.676635"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, VarId>>_swap"(%"Array<Bucket<string, VarId>>.676637"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, VarId>.676635"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, VarId>.676635"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, VarId>.676635"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, VarId>>___sl__"(%"Array<Bucket<string, VarId>>.676637"* %.1, %"Bucket<string, VarId>.676635"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, VarId>>.676637"*)*, void (%"Array<Bucket<string, VarId>>.676637"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, VarId>>.676637"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.31, i64 %.24
  store %"Bucket<string, VarId>.676635"* %.2, %"Bucket<string, VarId>.676635"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, VarId>>___setitem__"(%"Array<Bucket<string, VarId>>.676637"* nocapture readonly %.1, i64 %.2, %"Bucket<string, VarId>.676635"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.30, i64 %.2
  store %"Bucket<string, VarId>.676635"* %.3, %"Bucket<string, VarId>.676635"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, VarId>>_append"(%"Array<Bucket<string, VarId>>.676637"* %.1, %"Bucket<string, VarId>.676635"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)*, void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, VarId>>.676637"* %.1, %"Bucket<string, VarId>.676635"* %.2)
  ret void
}

define %"Bucket<string, VarId>.676635"* @"Array<Bucket<string, VarId>>___getitem__"(%"Array<Bucket<string, VarId>>.676637"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.28, i64 %.2
  %.30 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.29, align 8
  ret %"Bucket<string, VarId>.676635"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, VarId>.676635"* null
}

define i1 @"Array<Bucket<string, VarId>>___eq__"(%"Array<Bucket<string, VarId>>.676637"* %.1, %"Array<Bucket<string, VarId>>.676637"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)*, %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, VarId>.676635"* %.30(%"Array<Bucket<string, VarId>>.676637"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)*, %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, VarId>.676635"* %.37(%"Array<Bucket<string, VarId>>.676637"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, VarId>.676635"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, VarId>.676635"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, VarId>>___in__"(%"Array<Bucket<string, VarId>>.676637"* %.1, %"Bucket<string, VarId>.676635"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, VarId>.676635"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)*, %"Bucket<string, VarId>.676635"* (%"Array<Bucket<string, VarId>>.676637"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, VarId>.676635"* %.21(%"Array<Bucket<string, VarId>>.676637"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, VarId>.676635"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, VarId>>_find"(%"Array<Bucket<string, VarId>>.676637"* nocapture readonly %.1, %"Bucket<string, VarId>.676635"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, VarId>.676635"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, VarId>.676635"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, VarId>>_join"(%"Array<Bucket<string, VarId>>.676637"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.213, i64 0, i64 0), i64 22)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str.213, i64 0, i64 0), i64 22)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, VarId>>___as_string__"(%"Array<Bucket<string, VarId>>.676637"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, VarId>>.676637", %"Array<Bucket<string, VarId>>.676637"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, VarId>>.676637"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, VarId>>.676637"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, VarId>>.676637"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, VarId>>.676637"* @"Map<string, VarId>_get_buckets"(%"Map<string, VarId>.676630"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, VarId>>.676637"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, VarId>>_vtable_ty.676638"**
  store %"Array<Bucket<string, VarId>>_vtable_ty.676638"* @"Array<Bucket<string, VarId>>_vtable_data", %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, VarId>.676635"**, %"Bucket<string, VarId>.676635"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, VarId>.676635"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, VarId>.676635"*, align 8
  %4 = bitcast %"Bucket<string, VarId>.676635"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, VarId>.676635"*
  %.36 = getelementptr inbounds %"Bucket<string, VarId>.676635", %"Bucket<string, VarId>.676635"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, VarId>>.676637"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, VarId>.676635"*, %"Bucket<string, VarId>.676635"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, VarId>>_vtable_ty.676638"*, %"Array<Bucket<string, VarId>>_vtable_ty.676638"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, VarId>>_vtable_ty.676638", %"Array<Bucket<string, VarId>>_vtable_ty.676638"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)*, void (%"Array<Bucket<string, VarId>>.676637"*, %"Bucket<string, VarId>.676635"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, VarId>>.676637"* %.9, %"Bucket<string, VarId>.676635"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.676640"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassId>_set"(%"Bucket<string, ClassId>.676640"* nocapture %.1, %string.676378* %.2, %ClassId.676554* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.1, i64 0, i32 2
  store %ClassId.676554* %.3, %ClassId.676554** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, ClassId>_constructor"(%"Map<string, ClassId>.676631"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.676640"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, ClassId>.676640"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, ClassId>_vtable_ty.676641"**
  store %"Bucket<string, ClassId>_vtable_ty.676641"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.676641"** %.26, align 8
  call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.676640"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, ClassId>.676640"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, ClassId>_hash_fnc"(%"Map<string, ClassId>.676631"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, ClassId>_resize"(%"Map<string, ClassId>.676631"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.676640"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, ClassId>.676640"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, ClassId>_vtable_ty.676641"**
  store %"Bucket<string, ClassId>_vtable_ty.676641"* @"Bucket<string, ClassId>_vtable_data", %"Bucket<string, ClassId>_vtable_ty.676641"** %.45, align 8
  call void @"Bucket<string, ClassId>_constructor"(%"Bucket<string, ClassId>.676640"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassId>.676640"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, ClassId>_set"(%"Map<string, ClassId>.676631"* %.1, %string.676378* %.2, %ClassId.676554* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, ClassId>.676631"*, %string.676378*)*, i64 (%"Map<string, ClassId>.676631"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, ClassId>.676631"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, ClassId>.676631"*)*, void (%"Map<string, ClassId>.676631"*)** %.32, align 8
  call void %.33(%"Map<string, ClassId>.676631"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.39, i64 %.19
  %.41 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, ClassId>_vtable_ty.676641"*, %"Bucket<string, ClassId>_vtable_ty.676641"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassId>_vtable_ty.676641", %"Bucket<string, ClassId>_vtable_ty.676641"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, ClassId>.676640"*, %string.676378*, %ClassId.676554*)*, void (%"Bucket<string, ClassId>.676640"*, %string.676378*, %ClassId.676554*)** %.92, align 8
  call void %.93(%"Bucket<string, ClassId>.676640"* %.89, %string.676378* %.2, %ClassId.676554* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.70, i64 %.65
  %.72 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %ClassId.676554* @"Map<string, ClassId>_get"(%"Map<string, ClassId>.676631"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, ClassId>.676631"*, %string.676378*)*, i64 (%"Map<string, ClassId>.676631"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, ClassId>.676631"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.22, i64 %.17
  %.24 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.54, i64 %.48
  %.56 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %ClassId.676554* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.91, i64 0, i32 2
  %.93 = load %ClassId.676554*, %ClassId.676554** %.92, align 8
  ret %ClassId.676554* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, ClassId>>_constructor"(%"Array<Bucket<string, ClassId>>.676642"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.676640"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, ClassId>>_resize"(%"Array<Bucket<string, ClassId>>.676642"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassId>.676640"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, ClassId>>_swap"(%"Array<Bucket<string, ClassId>>.676642"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, ClassId>.676640"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, ClassId>.676640"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, ClassId>.676640"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassId>>___sl__"(%"Array<Bucket<string, ClassId>>.676642"* %.1, %"Bucket<string, ClassId>.676640"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, ClassId>>.676642"*)*, void (%"Array<Bucket<string, ClassId>>.676642"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, ClassId>>.676642"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.31, i64 %.24
  store %"Bucket<string, ClassId>.676640"* %.2, %"Bucket<string, ClassId>.676640"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, ClassId>>___setitem__"(%"Array<Bucket<string, ClassId>>.676642"* nocapture readonly %.1, i64 %.2, %"Bucket<string, ClassId>.676640"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.30, i64 %.2
  store %"Bucket<string, ClassId>.676640"* %.3, %"Bucket<string, ClassId>.676640"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassId>>_append"(%"Array<Bucket<string, ClassId>>.676642"* %.1, %"Bucket<string, ClassId>.676640"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)*, void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, ClassId>>.676642"* %.1, %"Bucket<string, ClassId>.676640"* %.2)
  ret void
}

define %"Bucket<string, ClassId>.676640"* @"Array<Bucket<string, ClassId>>___getitem__"(%"Array<Bucket<string, ClassId>>.676642"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.28, i64 %.2
  %.30 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.29, align 8
  ret %"Bucket<string, ClassId>.676640"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, ClassId>.676640"* null
}

define i1 @"Array<Bucket<string, ClassId>>___eq__"(%"Array<Bucket<string, ClassId>>.676642"* %.1, %"Array<Bucket<string, ClassId>>.676642"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)*, %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, ClassId>.676640"* %.30(%"Array<Bucket<string, ClassId>>.676642"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)*, %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, ClassId>.676640"* %.37(%"Array<Bucket<string, ClassId>>.676642"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, ClassId>.676640"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, ClassId>.676640"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, ClassId>>___in__"(%"Array<Bucket<string, ClassId>>.676642"* %.1, %"Bucket<string, ClassId>.676640"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, ClassId>.676640"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)*, %"Bucket<string, ClassId>.676640"* (%"Array<Bucket<string, ClassId>>.676642"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, ClassId>.676640"* %.21(%"Array<Bucket<string, ClassId>>.676642"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, ClassId>.676640"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, ClassId>>_find"(%"Array<Bucket<string, ClassId>>.676642"* nocapture readonly %.1, %"Bucket<string, ClassId>.676640"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, ClassId>.676640"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassId>.676640"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, ClassId>>_join"(%"Array<Bucket<string, ClassId>>.676642"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.214, i64 0, i64 0), i64 24)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.214, i64 0, i64 0), i64 24)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, ClassId>>___as_string__"(%"Array<Bucket<string, ClassId>>.676642"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, ClassId>>.676642", %"Array<Bucket<string, ClassId>>.676642"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, ClassId>>.676642"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, ClassId>>.676642"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, ClassId>>.676642"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, ClassId>>.676642"* @"Map<string, ClassId>_get_buckets"(%"Map<string, ClassId>.676631"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, ClassId>>.676642"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, ClassId>>_vtable_ty.676643"**
  store %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* @"Array<Bucket<string, ClassId>>_vtable_data", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, ClassId>.676640"**, %"Bucket<string, ClassId>.676640"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, ClassId>.676640"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, ClassId>.676640"*, align 8
  %4 = bitcast %"Bucket<string, ClassId>.676640"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, ClassId>.676640"*
  %.36 = getelementptr inbounds %"Bucket<string, ClassId>.676640", %"Bucket<string, ClassId>.676640"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, ClassId>>.676642"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, ClassId>.676640"*, %"Bucket<string, ClassId>.676640"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, ClassId>>_vtable_ty.676643"*, %"Array<Bucket<string, ClassId>>_vtable_ty.676643"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, ClassId>>_vtable_ty.676643", %"Array<Bucket<string, ClassId>>_vtable_ty.676643"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)*, void (%"Array<Bucket<string, ClassId>>.676642"*, %"Bucket<string, ClassId>.676640"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, ClassId>>.676642"* %.9, %"Bucket<string, ClassId>.676640"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.676645"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, EnumId>_set"(%"Bucket<string, EnumId>.676645"* nocapture %.1, %string.676378* %.2, %EnumId.676556* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.1, i64 0, i32 2
  store %EnumId.676556* %.3, %EnumId.676556** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, EnumId>_constructor"(%"Map<string, EnumId>.676632"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.676645"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, EnumId>.676645"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, EnumId>_vtable_ty.676646"**
  store %"Bucket<string, EnumId>_vtable_ty.676646"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.676646"** %.26, align 8
  call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.676645"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, EnumId>.676645"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, EnumId>_hash_fnc"(%"Map<string, EnumId>.676632"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, EnumId>_resize"(%"Map<string, EnumId>.676632"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.676645"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, EnumId>.676645"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, EnumId>_vtable_ty.676646"**
  store %"Bucket<string, EnumId>_vtable_ty.676646"* @"Bucket<string, EnumId>_vtable_data", %"Bucket<string, EnumId>_vtable_ty.676646"** %.45, align 8
  call void @"Bucket<string, EnumId>_constructor"(%"Bucket<string, EnumId>.676645"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, EnumId>.676645"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, EnumId>_set"(%"Map<string, EnumId>.676632"* %.1, %string.676378* %.2, %EnumId.676556* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, EnumId>.676632"*, %string.676378*)*, i64 (%"Map<string, EnumId>.676632"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, EnumId>.676632"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, EnumId>.676632"*)*, void (%"Map<string, EnumId>.676632"*)** %.32, align 8
  call void %.33(%"Map<string, EnumId>.676632"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.39, i64 %.19
  %.41 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, EnumId>_vtable_ty.676646"*, %"Bucket<string, EnumId>_vtable_ty.676646"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, EnumId>_vtable_ty.676646", %"Bucket<string, EnumId>_vtable_ty.676646"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, EnumId>.676645"*, %string.676378*, %EnumId.676556*)*, void (%"Bucket<string, EnumId>.676645"*, %string.676378*, %EnumId.676556*)** %.92, align 8
  call void %.93(%"Bucket<string, EnumId>.676645"* %.89, %string.676378* %.2, %EnumId.676556* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.70, i64 %.65
  %.72 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %EnumId.676556* @"Map<string, EnumId>_get"(%"Map<string, EnumId>.676632"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, EnumId>.676632"*, %string.676378*)*, i64 (%"Map<string, EnumId>.676632"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, EnumId>.676632"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.22, i64 %.17
  %.24 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.54, i64 %.48
  %.56 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %EnumId.676556* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.91, i64 0, i32 2
  %.93 = load %EnumId.676556*, %EnumId.676556** %.92, align 8
  ret %EnumId.676556* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, EnumId>>_constructor"(%"Array<Bucket<string, EnumId>>.676647"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.676645"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, EnumId>>_resize"(%"Array<Bucket<string, EnumId>>.676647"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, EnumId>.676645"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, EnumId>>_swap"(%"Array<Bucket<string, EnumId>>.676647"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, EnumId>.676645"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, EnumId>.676645"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, EnumId>.676645"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, EnumId>>___sl__"(%"Array<Bucket<string, EnumId>>.676647"* %.1, %"Bucket<string, EnumId>.676645"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, EnumId>>.676647"*)*, void (%"Array<Bucket<string, EnumId>>.676647"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, EnumId>>.676647"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.31, i64 %.24
  store %"Bucket<string, EnumId>.676645"* %.2, %"Bucket<string, EnumId>.676645"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, EnumId>>___setitem__"(%"Array<Bucket<string, EnumId>>.676647"* nocapture readonly %.1, i64 %.2, %"Bucket<string, EnumId>.676645"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.30, i64 %.2
  store %"Bucket<string, EnumId>.676645"* %.3, %"Bucket<string, EnumId>.676645"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, EnumId>>_append"(%"Array<Bucket<string, EnumId>>.676647"* %.1, %"Bucket<string, EnumId>.676645"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)*, void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, EnumId>>.676647"* %.1, %"Bucket<string, EnumId>.676645"* %.2)
  ret void
}

define %"Bucket<string, EnumId>.676645"* @"Array<Bucket<string, EnumId>>___getitem__"(%"Array<Bucket<string, EnumId>>.676647"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.28, i64 %.2
  %.30 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.29, align 8
  ret %"Bucket<string, EnumId>.676645"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, EnumId>.676645"* null
}

define i1 @"Array<Bucket<string, EnumId>>___eq__"(%"Array<Bucket<string, EnumId>>.676647"* %.1, %"Array<Bucket<string, EnumId>>.676647"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)*, %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, EnumId>.676645"* %.30(%"Array<Bucket<string, EnumId>>.676647"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)*, %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, EnumId>.676645"* %.37(%"Array<Bucket<string, EnumId>>.676647"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, EnumId>.676645"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, EnumId>.676645"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, EnumId>>___in__"(%"Array<Bucket<string, EnumId>>.676647"* %.1, %"Bucket<string, EnumId>.676645"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, EnumId>.676645"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)*, %"Bucket<string, EnumId>.676645"* (%"Array<Bucket<string, EnumId>>.676647"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, EnumId>.676645"* %.21(%"Array<Bucket<string, EnumId>>.676647"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, EnumId>.676645"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, EnumId>>_find"(%"Array<Bucket<string, EnumId>>.676647"* nocapture readonly %.1, %"Bucket<string, EnumId>.676645"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, EnumId>.676645"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, EnumId>.676645"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, EnumId>>_join"(%"Array<Bucket<string, EnumId>>.676647"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.215, i64 0, i64 0), i64 23)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.215, i64 0, i64 0), i64 23)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, EnumId>>___as_string__"(%"Array<Bucket<string, EnumId>>.676647"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, EnumId>>.676647", %"Array<Bucket<string, EnumId>>.676647"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, EnumId>>.676647"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, EnumId>>.676647"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, EnumId>>.676647"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, EnumId>>.676647"* @"Map<string, EnumId>_get_buckets"(%"Map<string, EnumId>.676632"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, EnumId>>.676647"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, EnumId>>_vtable_ty.676648"**
  store %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* @"Array<Bucket<string, EnumId>>_vtable_data", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, EnumId>.676645"**, %"Bucket<string, EnumId>.676645"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, EnumId>.676645"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, EnumId>.676645"*, align 8
  %4 = bitcast %"Bucket<string, EnumId>.676645"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, EnumId>.676645"*
  %.36 = getelementptr inbounds %"Bucket<string, EnumId>.676645", %"Bucket<string, EnumId>.676645"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, EnumId>>.676647"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, EnumId>.676645"*, %"Bucket<string, EnumId>.676645"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, EnumId>>_vtable_ty.676648"*, %"Array<Bucket<string, EnumId>>_vtable_ty.676648"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, EnumId>>_vtable_ty.676648", %"Array<Bucket<string, EnumId>>_vtable_ty.676648"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)*, void (%"Array<Bucket<string, EnumId>>.676647"*, %"Bucket<string, EnumId>.676645"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, EnumId>>.676647"* %.9, %"Bucket<string, EnumId>.676645"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.676650"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, Type>_set"(%"Bucket<string, Type>.676650"* nocapture %.1, %string.676378* %.2, %Type.676538* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.1, i64 0, i32 2
  store %Type.676538* %.3, %Type.676538** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, Type>_constructor"(%"Map<string, Type>.676633"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.676650"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, Type>.676650"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, Type>_vtable_ty.676651"**
  store %"Bucket<string, Type>_vtable_ty.676651"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.676651"** %.26, align 8
  call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.676650"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, Type>.676650"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, Type>_hash_fnc"(%"Map<string, Type>.676633"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, Type>_resize"(%"Map<string, Type>.676633"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.676650"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, Type>.676650"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, Type>_vtable_ty.676651"**
  store %"Bucket<string, Type>_vtable_ty.676651"* @"Bucket<string, Type>_vtable_data", %"Bucket<string, Type>_vtable_ty.676651"** %.45, align 8
  call void @"Bucket<string, Type>_constructor"(%"Bucket<string, Type>.676650"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, Type>.676650"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, Type>_set"(%"Map<string, Type>.676633"* %.1, %string.676378* %.2, %Type.676538* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, Type>.676633"*, %string.676378*)*, i64 (%"Map<string, Type>.676633"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, Type>.676633"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, Type>.676633"*)*, void (%"Map<string, Type>.676633"*)** %.32, align 8
  call void %.33(%"Map<string, Type>.676633"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.39, i64 %.19
  %.41 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, Type>_vtable_ty.676651"*, %"Bucket<string, Type>_vtable_ty.676651"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, Type>_vtable_ty.676651", %"Bucket<string, Type>_vtable_ty.676651"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, Type>.676650"*, %string.676378*, %Type.676538*)*, void (%"Bucket<string, Type>.676650"*, %string.676378*, %Type.676538*)** %.92, align 8
  call void %.93(%"Bucket<string, Type>.676650"* %.89, %string.676378* %.2, %Type.676538* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.70, i64 %.65
  %.72 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %Type.676538* @"Map<string, Type>_get"(%"Map<string, Type>.676633"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, Type>.676633"*, %string.676378*)*, i64 (%"Map<string, Type>.676633"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, Type>.676633"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.22, i64 %.17
  %.24 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.54, i64 %.48
  %.56 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %Type.676538* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.91, i64 0, i32 2
  %.93 = load %Type.676538*, %Type.676538** %.92, align 8
  ret %Type.676538* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, Type>>_constructor"(%"Array<Bucket<string, Type>>.676652"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.676650"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, Type>>_resize"(%"Array<Bucket<string, Type>>.676652"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, Type>.676650"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, Type>>_swap"(%"Array<Bucket<string, Type>>.676652"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, Type>.676650"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, Type>.676650"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, Type>.676650"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Type>>___sl__"(%"Array<Bucket<string, Type>>.676652"* %.1, %"Bucket<string, Type>.676650"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, Type>>.676652"*)*, void (%"Array<Bucket<string, Type>>.676652"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, Type>>.676652"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.31, i64 %.24
  store %"Bucket<string, Type>.676650"* %.2, %"Bucket<string, Type>.676650"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, Type>>___setitem__"(%"Array<Bucket<string, Type>>.676652"* nocapture readonly %.1, i64 %.2, %"Bucket<string, Type>.676650"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.30, i64 %.2
  store %"Bucket<string, Type>.676650"* %.3, %"Bucket<string, Type>.676650"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, Type>>_append"(%"Array<Bucket<string, Type>>.676652"* %.1, %"Bucket<string, Type>.676650"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)*, void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, Type>>.676652"* %.1, %"Bucket<string, Type>.676650"* %.2)
  ret void
}

define %"Bucket<string, Type>.676650"* @"Array<Bucket<string, Type>>___getitem__"(%"Array<Bucket<string, Type>>.676652"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.28, i64 %.2
  %.30 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.29, align 8
  ret %"Bucket<string, Type>.676650"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, Type>.676650"* null
}

define i1 @"Array<Bucket<string, Type>>___eq__"(%"Array<Bucket<string, Type>>.676652"* %.1, %"Array<Bucket<string, Type>>.676652"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)*, %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, Type>.676650"* %.30(%"Array<Bucket<string, Type>>.676652"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)*, %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, Type>.676650"* %.37(%"Array<Bucket<string, Type>>.676652"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, Type>.676650"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, Type>.676650"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, Type>>___in__"(%"Array<Bucket<string, Type>>.676652"* %.1, %"Bucket<string, Type>.676650"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, Type>.676650"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)*, %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, Type>.676650"* %.21(%"Array<Bucket<string, Type>>.676652"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, Type>.676650"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, Type>>_find"(%"Array<Bucket<string, Type>>.676652"* nocapture readonly %.1, %"Bucket<string, Type>.676650"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, Type>.676650"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, Type>.676650"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, Type>>_join"(%"Array<Bucket<string, Type>>.676652"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.216, i64 0, i64 0), i64 21)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.216, i64 0, i64 0), i64 21)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, Type>>___as_string__"(%"Array<Bucket<string, Type>>.676652"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, Type>>.676652"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, Type>>.676652"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, Type>>.676652"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, Type>>.676652"* @"Map<string, Type>_get_buckets"(%"Map<string, Type>.676633"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, Type>>.676652"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, Type>>_vtable_ty.676653"**
  store %"Array<Bucket<string, Type>>_vtable_ty.676653"* @"Array<Bucket<string, Type>>_vtable_data", %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, Type>.676650"**, %"Bucket<string, Type>.676650"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, Type>.676650"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, Type>.676650"*, align 8
  %4 = bitcast %"Bucket<string, Type>.676650"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, Type>.676650"*
  %.36 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, Type>>.676652"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, Type>.676650"*, %"Bucket<string, Type>.676650"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)*, void (%"Array<Bucket<string, Type>>.676652"*, %"Bucket<string, Type>.676650"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, Type>>.676652"* %.9, %"Bucket<string, Type>.676650"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @Scope_constructor(%Scope.676628* nocapture %.1, i64 %.2, i64 %.3) local_unnamed_addr #3 {
.5:
  %.12 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.13 = bitcast i8* %.12 to %ScopeId.676626*
  %.14 = bitcast i8* %.12 to %ScopeId_vtable_ty.676627**
  store %ScopeId_vtable_ty.676627* @ScopeId_vtable_data, %ScopeId_vtable_ty.676627** %.14, align 8
  call void @ScopeId_constructor(%ScopeId.676626* %.13, i64 %.2, i64 %.3)
  %.17 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 1
  %0 = bitcast %ScopeId.676626** %.17 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %"Map<string, VarId>.676630"*
  %.22 = bitcast i8* %.20 to %"Map<string, VarId>_vtable_ty.676634"**
  store %"Map<string, VarId>_vtable_ty.676634"* @"Map<string, VarId>_vtable_data", %"Map<string, VarId>_vtable_ty.676634"** %.22, align 8
  call void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.676630"* %.21)
  %.25 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 2
  %1 = bitcast %"Map<string, VarId>.676630"** %.25 to i8**
  store i8* %.20, i8** %1, align 8
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %"Map<string, ClassId>.676631"*
  %.30 = bitcast i8* %.28 to %"Map<string, ClassId>_vtable_ty.676639"**
  store %"Map<string, ClassId>_vtable_ty.676639"* @"Map<string, ClassId>_vtable_data", %"Map<string, ClassId>_vtable_ty.676639"** %.30, align 8
  call void @"Map<string, ClassId>_constructor"(%"Map<string, ClassId>.676631"* %.29)
  %.33 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 3
  %2 = bitcast %"Map<string, ClassId>.676631"** %.33 to i8**
  store i8* %.28, i8** %2, align 8
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %"Map<string, VarId>.676630"*
  %.38 = bitcast i8* %.36 to %"Map<string, VarId>_vtable_ty.676634"**
  store %"Map<string, VarId>_vtable_ty.676634"* @"Map<string, VarId>_vtable_data", %"Map<string, VarId>_vtable_ty.676634"** %.38, align 8
  call void @"Map<string, VarId>_constructor"(%"Map<string, VarId>.676630"* %.37)
  %.41 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 4
  %3 = bitcast %"Map<string, VarId>.676630"** %.41 to i8**
  store i8* %.36, i8** %3, align 8
  %.44 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.45 = bitcast i8* %.44 to %"Map<string, EnumId>.676632"*
  %.46 = bitcast i8* %.44 to %"Map<string, EnumId>_vtable_ty.676644"**
  store %"Map<string, EnumId>_vtable_ty.676644"* @"Map<string, EnumId>_vtable_data", %"Map<string, EnumId>_vtable_ty.676644"** %.46, align 8
  call void @"Map<string, EnumId>_constructor"(%"Map<string, EnumId>.676632"* %.45)
  %.49 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 5
  %4 = bitcast %"Map<string, EnumId>.676632"** %.49 to i8**
  store i8* %.44, i8** %4, align 8
  %.52 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.53 = bitcast i8* %.52 to %"Map<string, Type>.676633"*
  %.54 = bitcast i8* %.52 to %"Map<string, Type>_vtable_ty.676649"**
  store %"Map<string, Type>_vtable_ty.676649"* @"Map<string, Type>_vtable_data", %"Map<string, Type>_vtable_ty.676649"** %.54, align 8
  call void @"Map<string, Type>_constructor"(%"Map<string, Type>.676633"* %.53)
  %.57 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 7
  %5 = bitcast %"Map<string, Type>.676633"** %.57 to i8**
  store i8* %.52, i8** %5, align 8
  %.60 = getelementptr inbounds %Scope.676628, %Scope.676628* %.1, i64 0, i32 6
  store %ScopeId.676626* null, %ScopeId.676626** %.60, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @FunctionArg_constructor(%FunctionArg.676654* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = bitcast %FunctionArg.676654* %.1 to %Expression.676558*
  call void @Expression_constructor(%Expression.676558* %.6, i64 7)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<FunctionArg>_constructor"(%"Array<FunctionArg>.676658"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionArg.676654*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<FunctionArg>_resize"(%"Array<FunctionArg>.676658"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %0 = bitcast %FunctionArg.676654*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<FunctionArg>_swap"(%"Array<FunctionArg>.676658"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %.48 = load %FunctionArg.676654**, %FunctionArg.676654*** %.47, align 8
  %.49 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.48, i64 %.2
  %4 = bitcast %FunctionArg.676654** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.48, i64 %.3
  %5 = bitcast %FunctionArg.676654** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %FunctionArg.676654**, %FunctionArg.676654*** %.47, align 8
  %.69 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.67, i64 %.3
  %6 = bitcast %FunctionArg.676654** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionArg>___sl__"(%"Array<FunctionArg>.676658"* %.1, %FunctionArg.676654* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 0
  %.17 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<FunctionArg>.676658"*)*, void (%"Array<FunctionArg>.676658"*)** %.18, align 8
  call void %.19(%"Array<FunctionArg>.676658"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %.31 = load %FunctionArg.676654**, %FunctionArg.676654*** %.30, align 8
  %.33 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.31, i64 %.24
  store %FunctionArg.676654* %.2, %FunctionArg.676654** %.33, align 8
  ret void
}

define void @"Array<FunctionArg>___setitem__"(%"Array<FunctionArg>.676658"* nocapture readonly %.1, i64 %.2, %FunctionArg.676654* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %.30 = load %FunctionArg.676654**, %FunctionArg.676654*** %.29, align 8
  %.32 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.30, i64 %.2
  store %FunctionArg.676654* %.3, %FunctionArg.676654** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<FunctionArg>_append"(%"Array<FunctionArg>.676658"* %.1, %FunctionArg.676654* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 0
  %.9 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)*, void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)** %.10, align 8
  call void %.11(%"Array<FunctionArg>.676658"* %.1, %FunctionArg.676654* %.2)
  ret void
}

define %FunctionArg.676654* @"Array<FunctionArg>___getitem__"(%"Array<FunctionArg>.676658"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %.28 = load %FunctionArg.676654**, %FunctionArg.676654*** %.27, align 8
  %.29 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.28, i64 %.2
  %.30 = load %FunctionArg.676654*, %FunctionArg.676654** %.29, align 8
  ret %FunctionArg.676654* %.30

.4.endif:                                         ; preds = %.4
  ret %FunctionArg.676654* null
}

define i1 @"Array<FunctionArg>___eq__"(%"Array<FunctionArg>.676658"* %.1, %"Array<FunctionArg>.676658"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.28, i64 0, i32 5
  %.30 = load %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)** %.29, align 8
  %.31 = call %FunctionArg.676654* %.30(%"Array<FunctionArg>.676658"* %.1, i64 %storemerge3)
  %.35 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.35, i64 0, i32 5
  %.37 = load %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)** %.36, align 8
  %.38 = call %FunctionArg.676654* %.37(%"Array<FunctionArg>.676658"* %.2, i64 %storemerge3)
  %0 = ptrtoint %FunctionArg.676654* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %FunctionArg.676654* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<FunctionArg>___in__"(%"Array<FunctionArg>.676658"* %.1, %FunctionArg.676654* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %FunctionArg.676654* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.19, i64 0, i32 5
  %.21 = load %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)** %.20, align 8
  %.22 = call %FunctionArg.676654* %.21(%"Array<FunctionArg>.676658"* %.1, i64 %storemerge4)
  %1 = ptrtoint %FunctionArg.676654* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<FunctionArg>_find"(%"Array<FunctionArg>.676658"* nocapture readonly %.1, %FunctionArg.676654* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 1
  %.19 = load %FunctionArg.676654**, %FunctionArg.676654*** %.18, align 8
  %0 = ptrtoint %FunctionArg.676654* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %FunctionArg.676654*, %FunctionArg.676654** %.19, i64 %storemerge5
  %1 = bitcast %FunctionArg.676654** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<FunctionArg>_join"(%"Array<FunctionArg>.676658"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.217, i64 0, i64 0), i64 12)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.217, i64 0, i64 0), i64 12)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<FunctionArg>___as_string__"(%"Array<FunctionArg>.676658"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.1, i64 0, i32 0
  %.7 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<FunctionArg>.676658"*, %string.676378*)*, %string.676378* (%"Array<FunctionArg>.676658"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<FunctionArg>.676658"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Var_constructor(%Var.676660* nocapture %.1, %Expression.676558* %.2, %Type.676538* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Var.676660, %Var.676660* %.1, i64 0, i32 3
  store %Expression.676558* %.2, %Expression.676558** %.11, align 8
  %.15 = getelementptr inbounds %Var.676660, %Var.676660* %.1, i64 0, i32 1
  store %Type.676538* %.3, %Type.676538** %.15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @Const_constructor(%Const.676662* nocapture %.1, %Expression.676558* %.2, %Type.676538* %.3) local_unnamed_addr #1 {
.5:
  %.11 = getelementptr inbounds %Const.676662, %Const.676662* %.1, i64 0, i32 3
  store %Expression.676558* %.2, %Expression.676558** %.11, align 8
  %.15 = getelementptr inbounds %Const.676662, %Const.676662* %.1, i64 0, i32 1
  store %Type.676538* %.3, %Type.676538** %.15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<ClassField>_constructor"(%"Array<ClassField>.676670"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %0 = bitcast %ClassField.676664*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassField>_resize"(%"Array<ClassField>.676670"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %0 = bitcast %ClassField.676664*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassField>_swap"(%"Array<ClassField>.676670"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %.48 = load %ClassField.676664**, %ClassField.676664*** %.47, align 8
  %.49 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.48, i64 %.2
  %4 = bitcast %ClassField.676664** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.48, i64 %.3
  %5 = bitcast %ClassField.676664** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassField.676664**, %ClassField.676664*** %.47, align 8
  %.69 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.67, i64 %.3
  %6 = bitcast %ClassField.676664** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassField>___sl__"(%"Array<ClassField>.676670"* %.1, %ClassField.676664* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassField>.676670"*)*, void (%"Array<ClassField>.676670"*)** %.18, align 8
  call void %.19(%"Array<ClassField>.676670"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %.31 = load %ClassField.676664**, %ClassField.676664*** %.30, align 8
  %.33 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.31, i64 %.24
  store %ClassField.676664* %.2, %ClassField.676664** %.33, align 8
  ret void
}

define void @"Array<ClassField>___setitem__"(%"Array<ClassField>.676670"* nocapture readonly %.1, i64 %.2, %ClassField.676664* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %.30 = load %ClassField.676664**, %ClassField.676664*** %.29, align 8
  %.32 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.30, i64 %.2
  store %ClassField.676664* %.3, %ClassField.676664** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassField>_append"(%"Array<ClassField>.676670"* %.1, %ClassField.676664* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassField>.676670"*, %ClassField.676664*)*, void (%"Array<ClassField>.676670"*, %ClassField.676664*)** %.10, align 8
  call void %.11(%"Array<ClassField>.676670"* %.1, %ClassField.676664* %.2)
  ret void
}

define %ClassField.676664* @"Array<ClassField>___getitem__"(%"Array<ClassField>.676670"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %.28 = load %ClassField.676664**, %ClassField.676664*** %.27, align 8
  %.29 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.28, i64 %.2
  %.30 = load %ClassField.676664*, %ClassField.676664** %.29, align 8
  ret %ClassField.676664* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassField.676664* null
}

define i1 @"Array<ClassField>___eq__"(%"Array<ClassField>.676670"* %.1, %"Array<ClassField>.676670"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.28, i64 0, i32 5
  %.30 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.29, align 8
  %.31 = call %ClassField.676664* %.30(%"Array<ClassField>.676670"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.35, i64 0, i32 5
  %.37 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.36, align 8
  %.38 = call %ClassField.676664* %.37(%"Array<ClassField>.676670"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassField.676664* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassField.676664* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassField>___in__"(%"Array<ClassField>.676670"* %.1, %ClassField.676664* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassField.676664* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.19, i64 0, i32 5
  %.21 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.20, align 8
  %.22 = call %ClassField.676664* %.21(%"Array<ClassField>.676670"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassField.676664* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassField>_find"(%"Array<ClassField>.676670"* nocapture readonly %.1, %ClassField.676664* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 1
  %.19 = load %ClassField.676664**, %ClassField.676664*** %.18, align 8
  %0 = ptrtoint %ClassField.676664* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassField.676664*, %ClassField.676664** %.19, i64 %storemerge5
  %1 = bitcast %ClassField.676664** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ClassField>_join"(%"Array<ClassField>.676670"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.218, i64 0, i64 0), i64 11)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.218, i64 0, i64 0), i64 11)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ClassField>___as_string__"(%"Array<ClassField>.676670"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ClassField>.676670"*, %string.676378*)*, %string.676378* (%"Array<ClassField>.676670"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ClassField>.676670"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ClassMethod>_constructor"(%"Array<ClassMethod>.676671"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %0 = bitcast %ClassMethod.676666*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassMethod>_resize"(%"Array<ClassMethod>.676671"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %0 = bitcast %ClassMethod.676666*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassMethod>_swap"(%"Array<ClassMethod>.676671"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %.48 = load %ClassMethod.676666**, %ClassMethod.676666*** %.47, align 8
  %.49 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.48, i64 %.2
  %4 = bitcast %ClassMethod.676666** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.48, i64 %.3
  %5 = bitcast %ClassMethod.676666** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassMethod.676666**, %ClassMethod.676666*** %.47, align 8
  %.69 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.67, i64 %.3
  %6 = bitcast %ClassMethod.676666** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassMethod>___sl__"(%"Array<ClassMethod>.676671"* %.1, %ClassMethod.676666* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassMethod>.676671"*)*, void (%"Array<ClassMethod>.676671"*)** %.18, align 8
  call void %.19(%"Array<ClassMethod>.676671"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %.31 = load %ClassMethod.676666**, %ClassMethod.676666*** %.30, align 8
  %.33 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.31, i64 %.24
  store %ClassMethod.676666* %.2, %ClassMethod.676666** %.33, align 8
  ret void
}

define void @"Array<ClassMethod>___setitem__"(%"Array<ClassMethod>.676671"* nocapture readonly %.1, i64 %.2, %ClassMethod.676666* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %.30 = load %ClassMethod.676666**, %ClassMethod.676666*** %.29, align 8
  %.32 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.30, i64 %.2
  store %ClassMethod.676666* %.3, %ClassMethod.676666** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassMethod>_append"(%"Array<ClassMethod>.676671"* %.1, %ClassMethod.676666* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)*, void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)** %.10, align 8
  call void %.11(%"Array<ClassMethod>.676671"* %.1, %ClassMethod.676666* %.2)
  ret void
}

define %ClassMethod.676666* @"Array<ClassMethod>___getitem__"(%"Array<ClassMethod>.676671"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %.28 = load %ClassMethod.676666**, %ClassMethod.676666*** %.27, align 8
  %.29 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.28, i64 %.2
  %.30 = load %ClassMethod.676666*, %ClassMethod.676666** %.29, align 8
  ret %ClassMethod.676666* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassMethod.676666* null
}

define i1 @"Array<ClassMethod>___eq__"(%"Array<ClassMethod>.676671"* %.1, %"Array<ClassMethod>.676671"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.28, i64 0, i32 5
  %.30 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.29, align 8
  %.31 = call %ClassMethod.676666* %.30(%"Array<ClassMethod>.676671"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.35, i64 0, i32 5
  %.37 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.36, align 8
  %.38 = call %ClassMethod.676666* %.37(%"Array<ClassMethod>.676671"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassMethod.676666* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassMethod.676666* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassMethod>___in__"(%"Array<ClassMethod>.676671"* %.1, %ClassMethod.676666* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassMethod.676666* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.19, i64 0, i32 5
  %.21 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.20, align 8
  %.22 = call %ClassMethod.676666* %.21(%"Array<ClassMethod>.676671"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassMethod.676666* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassMethod>_find"(%"Array<ClassMethod>.676671"* nocapture readonly %.1, %ClassMethod.676666* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 1
  %.19 = load %ClassMethod.676666**, %ClassMethod.676666*** %.18, align 8
  %0 = ptrtoint %ClassMethod.676666* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassMethod.676666*, %ClassMethod.676666** %.19, i64 %storemerge5
  %1 = bitcast %ClassMethod.676666** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ClassMethod>_join"(%"Array<ClassMethod>.676671"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.219, i64 0, i64 0), i64 12)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.219, i64 0, i64 0), i64 12)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ClassMethod>___as_string__"(%"Array<ClassMethod>.676671"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ClassMethod>.676671"*, %string.676378*)*, %string.676378* (%"Array<ClassMethod>.676671"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ClassMethod>.676671"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.676676"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, PropId>_set"(%"Bucket<string, PropId>.676676"* nocapture %.1, %string.676378* %.2, %PropId.676604* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.1, i64 0, i32 2
  store %PropId.676604* %.3, %PropId.676604** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.676672"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.676676"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, PropId>.676676"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, PropId>_vtable_ty.676677"**
  store %"Bucket<string, PropId>_vtable_ty.676677"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.676677"** %.26, align 8
  call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.676676"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, PropId>.676676"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, PropId>_hash_fnc"(%"Map<string, PropId>.676672"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, PropId>_resize"(%"Map<string, PropId>.676672"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.676676"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, PropId>.676676"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, PropId>_vtable_ty.676677"**
  store %"Bucket<string, PropId>_vtable_ty.676677"* @"Bucket<string, PropId>_vtable_data", %"Bucket<string, PropId>_vtable_ty.676677"** %.45, align 8
  call void @"Bucket<string, PropId>_constructor"(%"Bucket<string, PropId>.676676"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, PropId>.676676"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, PropId>_set"(%"Map<string, PropId>.676672"* %.1, %string.676378* %.2, %PropId.676604* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, PropId>.676672"*, %string.676378*)*, i64 (%"Map<string, PropId>.676672"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, PropId>.676672"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, PropId>.676672"*)*, void (%"Map<string, PropId>.676672"*)** %.32, align 8
  call void %.33(%"Map<string, PropId>.676672"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.39, i64 %.19
  %.41 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, PropId>_vtable_ty.676677"*, %"Bucket<string, PropId>_vtable_ty.676677"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, PropId>_vtable_ty.676677", %"Bucket<string, PropId>_vtable_ty.676677"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, PropId>.676676"*, %string.676378*, %PropId.676604*)*, void (%"Bucket<string, PropId>.676676"*, %string.676378*, %PropId.676604*)** %.92, align 8
  call void %.93(%"Bucket<string, PropId>.676676"* %.89, %string.676378* %.2, %PropId.676604* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.70, i64 %.65
  %.72 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %PropId.676604* @"Map<string, PropId>_get"(%"Map<string, PropId>.676672"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, PropId>.676672"*, %string.676378*)*, i64 (%"Map<string, PropId>.676672"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, PropId>.676672"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.22, i64 %.17
  %.24 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.54, i64 %.48
  %.56 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %PropId.676604* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.91, i64 0, i32 2
  %.93 = load %PropId.676604*, %PropId.676604** %.92, align 8
  ret %PropId.676604* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, PropId>>_constructor"(%"Array<Bucket<string, PropId>>.676678"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.676676"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, PropId>>_resize"(%"Array<Bucket<string, PropId>>.676678"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, PropId>.676676"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, PropId>>_swap"(%"Array<Bucket<string, PropId>>.676678"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, PropId>.676676"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, PropId>.676676"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, PropId>.676676"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, PropId>>___sl__"(%"Array<Bucket<string, PropId>>.676678"* %.1, %"Bucket<string, PropId>.676676"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, PropId>>.676678"*)*, void (%"Array<Bucket<string, PropId>>.676678"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, PropId>>.676678"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.31, i64 %.24
  store %"Bucket<string, PropId>.676676"* %.2, %"Bucket<string, PropId>.676676"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, PropId>>___setitem__"(%"Array<Bucket<string, PropId>>.676678"* nocapture readonly %.1, i64 %.2, %"Bucket<string, PropId>.676676"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.30, i64 %.2
  store %"Bucket<string, PropId>.676676"* %.3, %"Bucket<string, PropId>.676676"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, PropId>>_append"(%"Array<Bucket<string, PropId>>.676678"* %.1, %"Bucket<string, PropId>.676676"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)*, void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, PropId>>.676678"* %.1, %"Bucket<string, PropId>.676676"* %.2)
  ret void
}

define %"Bucket<string, PropId>.676676"* @"Array<Bucket<string, PropId>>___getitem__"(%"Array<Bucket<string, PropId>>.676678"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.28, i64 %.2
  %.30 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.29, align 8
  ret %"Bucket<string, PropId>.676676"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, PropId>.676676"* null
}

define i1 @"Array<Bucket<string, PropId>>___eq__"(%"Array<Bucket<string, PropId>>.676678"* %.1, %"Array<Bucket<string, PropId>>.676678"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, PropId>.676676"* %.30(%"Array<Bucket<string, PropId>>.676678"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, PropId>.676676"* %.37(%"Array<Bucket<string, PropId>>.676678"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, PropId>.676676"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, PropId>.676676"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, PropId>>___in__"(%"Array<Bucket<string, PropId>>.676678"* %.1, %"Bucket<string, PropId>.676676"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, PropId>.676676"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, PropId>.676676"* %.21(%"Array<Bucket<string, PropId>>.676678"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, PropId>.676676"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, PropId>>_find"(%"Array<Bucket<string, PropId>>.676678"* nocapture readonly %.1, %"Bucket<string, PropId>.676676"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, PropId>.676676"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, PropId>.676676"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, PropId>>_join"(%"Array<Bucket<string, PropId>>.676678"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.220, i64 0, i64 0), i64 23)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.220, i64 0, i64 0), i64 23)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, PropId>>___as_string__"(%"Array<Bucket<string, PropId>>.676678"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, PropId>>.676678"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, PropId>>.676678"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, PropId>>.676678"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, PropId>>.676678"* @"Map<string, PropId>_get_buckets"(%"Map<string, PropId>.676672"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, PropId>>.676678"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, PropId>>_vtable_ty.676679"**
  store %"Array<Bucket<string, PropId>>_vtable_ty.676679"* @"Array<Bucket<string, PropId>>_vtable_data", %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, PropId>.676676"**, %"Bucket<string, PropId>.676676"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, PropId>.676676"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, PropId>.676676"*, align 8
  %4 = bitcast %"Bucket<string, PropId>.676676"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, PropId>.676676"*
  %.36 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, PropId>>.676678"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, PropId>.676676"*, %"Bucket<string, PropId>.676676"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)*, void (%"Array<Bucket<string, PropId>>.676678"*, %"Bucket<string, PropId>.676676"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, PropId>>.676678"* %.9, %"Bucket<string, PropId>.676676"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @EnumField_constructor(%EnumField.676680* nocapture %.1, %string.676378* %.2) local_unnamed_addr #1 {
.4:
  %.9 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.1, i64 0, i32 2
  store %string.676378* %.2, %string.676378** %.9, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<EnumField>_constructor"(%"Array<EnumField>.676684"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %0 = bitcast %EnumField.676680*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumField>_resize"(%"Array<EnumField>.676684"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %0 = bitcast %EnumField.676680*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumField>_swap"(%"Array<EnumField>.676684"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %.48 = load %EnumField.676680**, %EnumField.676680*** %.47, align 8
  %.49 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.48, i64 %.2
  %4 = bitcast %EnumField.676680** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.48, i64 %.3
  %5 = bitcast %EnumField.676680** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumField.676680**, %EnumField.676680*** %.47, align 8
  %.69 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.67, i64 %.3
  %6 = bitcast %EnumField.676680** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumField>___sl__"(%"Array<EnumField>.676684"* %.1, %EnumField.676680* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumField>.676684"*)*, void (%"Array<EnumField>.676684"*)** %.18, align 8
  call void %.19(%"Array<EnumField>.676684"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %.31 = load %EnumField.676680**, %EnumField.676680*** %.30, align 8
  %.33 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.31, i64 %.24
  store %EnumField.676680* %.2, %EnumField.676680** %.33, align 8
  ret void
}

define void @"Array<EnumField>___setitem__"(%"Array<EnumField>.676684"* nocapture readonly %.1, i64 %.2, %EnumField.676680* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %.30 = load %EnumField.676680**, %EnumField.676680*** %.29, align 8
  %.32 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.30, i64 %.2
  store %EnumField.676680* %.3, %EnumField.676680** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumField>_append"(%"Array<EnumField>.676684"* %.1, %EnumField.676680* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumField>.676684"*, %EnumField.676680*)*, void (%"Array<EnumField>.676684"*, %EnumField.676680*)** %.10, align 8
  call void %.11(%"Array<EnumField>.676684"* %.1, %EnumField.676680* %.2)
  ret void
}

define %EnumField.676680* @"Array<EnumField>___getitem__"(%"Array<EnumField>.676684"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %.28 = load %EnumField.676680**, %EnumField.676680*** %.27, align 8
  %.29 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.28, i64 %.2
  %.30 = load %EnumField.676680*, %EnumField.676680** %.29, align 8
  ret %EnumField.676680* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumField.676680* null
}

define i1 @"Array<EnumField>___eq__"(%"Array<EnumField>.676684"* %.1, %"Array<EnumField>.676684"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.28, i64 0, i32 5
  %.30 = load %EnumField.676680* (%"Array<EnumField>.676684"*, i64)*, %EnumField.676680* (%"Array<EnumField>.676684"*, i64)** %.29, align 8
  %.31 = call %EnumField.676680* %.30(%"Array<EnumField>.676684"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.35, i64 0, i32 5
  %.37 = load %EnumField.676680* (%"Array<EnumField>.676684"*, i64)*, %EnumField.676680* (%"Array<EnumField>.676684"*, i64)** %.36, align 8
  %.38 = call %EnumField.676680* %.37(%"Array<EnumField>.676684"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumField.676680* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumField.676680* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumField>___in__"(%"Array<EnumField>.676684"* %.1, %EnumField.676680* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumField.676680* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.19, i64 0, i32 5
  %.21 = load %EnumField.676680* (%"Array<EnumField>.676684"*, i64)*, %EnumField.676680* (%"Array<EnumField>.676684"*, i64)** %.20, align 8
  %.22 = call %EnumField.676680* %.21(%"Array<EnumField>.676684"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumField.676680* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumField>_find"(%"Array<EnumField>.676684"* nocapture readonly %.1, %EnumField.676680* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 1
  %.19 = load %EnumField.676680**, %EnumField.676680*** %.18, align 8
  %0 = ptrtoint %EnumField.676680* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumField.676680*, %EnumField.676680** %.19, i64 %storemerge5
  %1 = bitcast %EnumField.676680** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<EnumField>_join"(%"Array<EnumField>.676684"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.221, i64 0, i64 0), i64 10)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.221, i64 0, i64 0), i64 10)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<EnumField>___as_string__"(%"Array<EnumField>.676684"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<EnumField>.676684"*, %string.676378*)*, %string.676378* (%"Array<EnumField>.676684"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<EnumField>.676684"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @Enum_constructor(%Enum.676682* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<EnumField>_vtable_ty.676685"**
  store %"Array<EnumField>_vtable_ty.676685"* @"Array<EnumField>_vtable_data", %"Array<EnumField>_vtable_ty.676685"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Enum.676682, %Enum.676682* %.1, i64 0, i32 3
  %3 = bitcast %"Array<EnumField>.676684"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<VarDeclaration>_constructor"(%"Array<VarDeclaration>.676688"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclaration.676616*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarDeclaration>_resize"(%"Array<VarDeclaration>.676688"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %0 = bitcast %VarDeclaration.676616*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<VarDeclaration>_swap"(%"Array<VarDeclaration>.676688"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %.48 = load %VarDeclaration.676616**, %VarDeclaration.676616*** %.47, align 8
  %.49 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.48, i64 %.2
  %4 = bitcast %VarDeclaration.676616** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.48, i64 %.3
  %5 = bitcast %VarDeclaration.676616** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %VarDeclaration.676616**, %VarDeclaration.676616*** %.47, align 8
  %.69 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.67, i64 %.3
  %6 = bitcast %VarDeclaration.676616** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclaration>___sl__"(%"Array<VarDeclaration>.676688"* %.1, %VarDeclaration.676616* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarDeclaration>.676688"*)*, void (%"Array<VarDeclaration>.676688"*)** %.18, align 8
  call void %.19(%"Array<VarDeclaration>.676688"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %.31 = load %VarDeclaration.676616**, %VarDeclaration.676616*** %.30, align 8
  %.33 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.31, i64 %.24
  store %VarDeclaration.676616* %.2, %VarDeclaration.676616** %.33, align 8
  ret void
}

define void @"Array<VarDeclaration>___setitem__"(%"Array<VarDeclaration>.676688"* nocapture readonly %.1, i64 %.2, %VarDeclaration.676616* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %.30 = load %VarDeclaration.676616**, %VarDeclaration.676616*** %.29, align 8
  %.32 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.30, i64 %.2
  store %VarDeclaration.676616* %.3, %VarDeclaration.676616** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarDeclaration>_append"(%"Array<VarDeclaration>.676688"* %.1, %VarDeclaration.676616* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)** %.10, align 8
  call void %.11(%"Array<VarDeclaration>.676688"* %.1, %VarDeclaration.676616* %.2)
  ret void
}

define %VarDeclaration.676616* @"Array<VarDeclaration>___getitem__"(%"Array<VarDeclaration>.676688"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %.28 = load %VarDeclaration.676616**, %VarDeclaration.676616*** %.27, align 8
  %.29 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.28, i64 %.2
  %.30 = load %VarDeclaration.676616*, %VarDeclaration.676616** %.29, align 8
  ret %VarDeclaration.676616* %.30

.4.endif:                                         ; preds = %.4
  ret %VarDeclaration.676616* null
}

define i1 @"Array<VarDeclaration>___eq__"(%"Array<VarDeclaration>.676688"* %.1, %"Array<VarDeclaration>.676688"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.28, i64 0, i32 5
  %.30 = load %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)** %.29, align 8
  %.31 = call %VarDeclaration.676616* %.30(%"Array<VarDeclaration>.676688"* %.1, i64 %storemerge3)
  %.35 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.35, i64 0, i32 5
  %.37 = load %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)** %.36, align 8
  %.38 = call %VarDeclaration.676616* %.37(%"Array<VarDeclaration>.676688"* %.2, i64 %storemerge3)
  %0 = ptrtoint %VarDeclaration.676616* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarDeclaration.676616* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarDeclaration>___in__"(%"Array<VarDeclaration>.676688"* %.1, %VarDeclaration.676616* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarDeclaration.676616* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.19, i64 0, i32 5
  %.21 = load %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)** %.20, align 8
  %.22 = call %VarDeclaration.676616* %.21(%"Array<VarDeclaration>.676688"* %.1, i64 %storemerge4)
  %1 = ptrtoint %VarDeclaration.676616* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarDeclaration>_find"(%"Array<VarDeclaration>.676688"* nocapture readonly %.1, %VarDeclaration.676616* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 1
  %.19 = load %VarDeclaration.676616**, %VarDeclaration.676616*** %.18, align 8
  %0 = ptrtoint %VarDeclaration.676616* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarDeclaration.676616*, %VarDeclaration.676616** %.19, i64 %storemerge5
  %1 = bitcast %VarDeclaration.676616** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<VarDeclaration>_join"(%"Array<VarDeclaration>.676688"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.222, i64 0, i64 0), i64 15)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str.222, i64 0, i64 0), i64 15)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<VarDeclaration>___as_string__"(%"Array<VarDeclaration>.676688"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.1, i64 0, i32 0
  %.7 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<VarDeclaration>.676688"*, %string.676378*)*, %string.676378* (%"Array<VarDeclaration>.676688"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<VarDeclaration>.676688"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<VarId>_constructor"(%"Array<VarId>.676689"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %0 = bitcast %VarId.676596*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<VarId>_resize"(%"Array<VarId>.676689"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %0 = bitcast %VarId.676596*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<VarId>_swap"(%"Array<VarId>.676689"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %.48 = load %VarId.676596**, %VarId.676596*** %.47, align 8
  %.49 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.48, i64 %.2
  %4 = bitcast %VarId.676596** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.48, i64 %.3
  %5 = bitcast %VarId.676596** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %VarId.676596**, %VarId.676596*** %.47, align 8
  %.69 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.67, i64 %.3
  %6 = bitcast %VarId.676596** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarId>___sl__"(%"Array<VarId>.676689"* %.1, %VarId.676596* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 0
  %.17 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<VarId>.676689"*)*, void (%"Array<VarId>.676689"*)** %.18, align 8
  call void %.19(%"Array<VarId>.676689"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %.31 = load %VarId.676596**, %VarId.676596*** %.30, align 8
  %.33 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.31, i64 %.24
  store %VarId.676596* %.2, %VarId.676596** %.33, align 8
  ret void
}

define void @"Array<VarId>___setitem__"(%"Array<VarId>.676689"* nocapture readonly %.1, i64 %.2, %VarId.676596* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %.30 = load %VarId.676596**, %VarId.676596*** %.29, align 8
  %.32 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.30, i64 %.2
  store %VarId.676596* %.3, %VarId.676596** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<VarId>_append"(%"Array<VarId>.676689"* %.1, %VarId.676596* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 0
  %.9 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<VarId>.676689"*, %VarId.676596*)*, void (%"Array<VarId>.676689"*, %VarId.676596*)** %.10, align 8
  call void %.11(%"Array<VarId>.676689"* %.1, %VarId.676596* %.2)
  ret void
}

define %VarId.676596* @"Array<VarId>___getitem__"(%"Array<VarId>.676689"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %.28 = load %VarId.676596**, %VarId.676596*** %.27, align 8
  %.29 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.28, i64 %.2
  %.30 = load %VarId.676596*, %VarId.676596** %.29, align 8
  ret %VarId.676596* %.30

.4.endif:                                         ; preds = %.4
  ret %VarId.676596* null
}

define i1 @"Array<VarId>___eq__"(%"Array<VarId>.676689"* %.1, %"Array<VarId>.676689"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.28, i64 0, i32 5
  %.30 = load %VarId.676596* (%"Array<VarId>.676689"*, i64)*, %VarId.676596* (%"Array<VarId>.676689"*, i64)** %.29, align 8
  %.31 = call %VarId.676596* %.30(%"Array<VarId>.676689"* %.1, i64 %storemerge3)
  %.35 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.35, i64 0, i32 5
  %.37 = load %VarId.676596* (%"Array<VarId>.676689"*, i64)*, %VarId.676596* (%"Array<VarId>.676689"*, i64)** %.36, align 8
  %.38 = call %VarId.676596* %.37(%"Array<VarId>.676689"* %.2, i64 %storemerge3)
  %0 = ptrtoint %VarId.676596* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %VarId.676596* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<VarId>___in__"(%"Array<VarId>.676689"* %.1, %VarId.676596* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %VarId.676596* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.19, i64 0, i32 5
  %.21 = load %VarId.676596* (%"Array<VarId>.676689"*, i64)*, %VarId.676596* (%"Array<VarId>.676689"*, i64)** %.20, align 8
  %.22 = call %VarId.676596* %.21(%"Array<VarId>.676689"* %.1, i64 %storemerge4)
  %1 = ptrtoint %VarId.676596* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<VarId>_find"(%"Array<VarId>.676689"* nocapture readonly %.1, %VarId.676596* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 1
  %.19 = load %VarId.676596**, %VarId.676596*** %.18, align 8
  %0 = ptrtoint %VarId.676596* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %VarId.676596*, %VarId.676596** %.19, i64 %storemerge5
  %1 = bitcast %VarId.676596** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<VarId>_join"(%"Array<VarId>.676689"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.223, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.223, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<VarId>___as_string__"(%"Array<VarId>.676689"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.1, i64 0, i32 0
  %.7 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<VarId>.676689"*, %string.676378*)*, %string.676378* (%"Array<VarId>.676689"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<VarId>.676689"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<EnumId>_constructor"(%"Array<EnumId>.676690"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %0 = bitcast %EnumId.676556*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<EnumId>_resize"(%"Array<EnumId>.676690"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %0 = bitcast %EnumId.676556*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<EnumId>_swap"(%"Array<EnumId>.676690"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %.48 = load %EnumId.676556**, %EnumId.676556*** %.47, align 8
  %.49 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.48, i64 %.2
  %4 = bitcast %EnumId.676556** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.48, i64 %.3
  %5 = bitcast %EnumId.676556** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %EnumId.676556**, %EnumId.676556*** %.47, align 8
  %.69 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.67, i64 %.3
  %6 = bitcast %EnumId.676556** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumId>___sl__"(%"Array<EnumId>.676690"* %.1, %EnumId.676556* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 0
  %.17 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<EnumId>.676690"*)*, void (%"Array<EnumId>.676690"*)** %.18, align 8
  call void %.19(%"Array<EnumId>.676690"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %.31 = load %EnumId.676556**, %EnumId.676556*** %.30, align 8
  %.33 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.31, i64 %.24
  store %EnumId.676556* %.2, %EnumId.676556** %.33, align 8
  ret void
}

define void @"Array<EnumId>___setitem__"(%"Array<EnumId>.676690"* nocapture readonly %.1, i64 %.2, %EnumId.676556* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %.30 = load %EnumId.676556**, %EnumId.676556*** %.29, align 8
  %.32 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.30, i64 %.2
  store %EnumId.676556* %.3, %EnumId.676556** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<EnumId>_append"(%"Array<EnumId>.676690"* %.1, %EnumId.676556* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 0
  %.9 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<EnumId>.676690"*, %EnumId.676556*)*, void (%"Array<EnumId>.676690"*, %EnumId.676556*)** %.10, align 8
  call void %.11(%"Array<EnumId>.676690"* %.1, %EnumId.676556* %.2)
  ret void
}

define %EnumId.676556* @"Array<EnumId>___getitem__"(%"Array<EnumId>.676690"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %.28 = load %EnumId.676556**, %EnumId.676556*** %.27, align 8
  %.29 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.28, i64 %.2
  %.30 = load %EnumId.676556*, %EnumId.676556** %.29, align 8
  ret %EnumId.676556* %.30

.4.endif:                                         ; preds = %.4
  ret %EnumId.676556* null
}

define i1 @"Array<EnumId>___eq__"(%"Array<EnumId>.676690"* %.1, %"Array<EnumId>.676690"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.28, i64 0, i32 5
  %.30 = load %EnumId.676556* (%"Array<EnumId>.676690"*, i64)*, %EnumId.676556* (%"Array<EnumId>.676690"*, i64)** %.29, align 8
  %.31 = call %EnumId.676556* %.30(%"Array<EnumId>.676690"* %.1, i64 %storemerge3)
  %.35 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.35, i64 0, i32 5
  %.37 = load %EnumId.676556* (%"Array<EnumId>.676690"*, i64)*, %EnumId.676556* (%"Array<EnumId>.676690"*, i64)** %.36, align 8
  %.38 = call %EnumId.676556* %.37(%"Array<EnumId>.676690"* %.2, i64 %storemerge3)
  %0 = ptrtoint %EnumId.676556* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %EnumId.676556* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<EnumId>___in__"(%"Array<EnumId>.676690"* %.1, %EnumId.676556* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %EnumId.676556* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.19, i64 0, i32 5
  %.21 = load %EnumId.676556* (%"Array<EnumId>.676690"*, i64)*, %EnumId.676556* (%"Array<EnumId>.676690"*, i64)** %.20, align 8
  %.22 = call %EnumId.676556* %.21(%"Array<EnumId>.676690"* %.1, i64 %storemerge4)
  %1 = ptrtoint %EnumId.676556* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<EnumId>_find"(%"Array<EnumId>.676690"* nocapture readonly %.1, %EnumId.676556* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 1
  %.19 = load %EnumId.676556**, %EnumId.676556*** %.18, align 8
  %0 = ptrtoint %EnumId.676556* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %EnumId.676556*, %EnumId.676556** %.19, i64 %storemerge5
  %1 = bitcast %EnumId.676556** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<EnumId>_join"(%"Array<EnumId>.676690"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.224, i64 0, i64 0), i64 7)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.224, i64 0, i64 0), i64 7)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<EnumId>___as_string__"(%"Array<EnumId>.676690"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.1, i64 0, i32 0
  %.7 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<EnumId>.676690"*, %string.676378*)*, %string.676378* (%"Array<EnumId>.676690"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<EnumId>.676690"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ClassId>_constructor"(%"Array<ClassId>.676691"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %0 = bitcast %ClassId.676554*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ClassId>_resize"(%"Array<ClassId>.676691"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %0 = bitcast %ClassId.676554*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ClassId>_swap"(%"Array<ClassId>.676691"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %.48 = load %ClassId.676554**, %ClassId.676554*** %.47, align 8
  %.49 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.48, i64 %.2
  %4 = bitcast %ClassId.676554** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.48, i64 %.3
  %5 = bitcast %ClassId.676554** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ClassId.676554**, %ClassId.676554*** %.47, align 8
  %.69 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.67, i64 %.3
  %6 = bitcast %ClassId.676554** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassId>___sl__"(%"Array<ClassId>.676691"* %.1, %ClassId.676554* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 0
  %.17 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ClassId>.676691"*)*, void (%"Array<ClassId>.676691"*)** %.18, align 8
  call void %.19(%"Array<ClassId>.676691"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %.31 = load %ClassId.676554**, %ClassId.676554*** %.30, align 8
  %.33 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.31, i64 %.24
  store %ClassId.676554* %.2, %ClassId.676554** %.33, align 8
  ret void
}

define void @"Array<ClassId>___setitem__"(%"Array<ClassId>.676691"* nocapture readonly %.1, i64 %.2, %ClassId.676554* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %.30 = load %ClassId.676554**, %ClassId.676554*** %.29, align 8
  %.32 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.30, i64 %.2
  store %ClassId.676554* %.3, %ClassId.676554** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ClassId>_append"(%"Array<ClassId>.676691"* %.1, %ClassId.676554* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 0
  %.9 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ClassId>.676691"*, %ClassId.676554*)*, void (%"Array<ClassId>.676691"*, %ClassId.676554*)** %.10, align 8
  call void %.11(%"Array<ClassId>.676691"* %.1, %ClassId.676554* %.2)
  ret void
}

define %ClassId.676554* @"Array<ClassId>___getitem__"(%"Array<ClassId>.676691"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %.28 = load %ClassId.676554**, %ClassId.676554*** %.27, align 8
  %.29 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.28, i64 %.2
  %.30 = load %ClassId.676554*, %ClassId.676554** %.29, align 8
  ret %ClassId.676554* %.30

.4.endif:                                         ; preds = %.4
  ret %ClassId.676554* null
}

define i1 @"Array<ClassId>___eq__"(%"Array<ClassId>.676691"* %.1, %"Array<ClassId>.676691"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.28, i64 0, i32 5
  %.30 = load %ClassId.676554* (%"Array<ClassId>.676691"*, i64)*, %ClassId.676554* (%"Array<ClassId>.676691"*, i64)** %.29, align 8
  %.31 = call %ClassId.676554* %.30(%"Array<ClassId>.676691"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.35, i64 0, i32 5
  %.37 = load %ClassId.676554* (%"Array<ClassId>.676691"*, i64)*, %ClassId.676554* (%"Array<ClassId>.676691"*, i64)** %.36, align 8
  %.38 = call %ClassId.676554* %.37(%"Array<ClassId>.676691"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ClassId.676554* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ClassId.676554* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ClassId>___in__"(%"Array<ClassId>.676691"* %.1, %ClassId.676554* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ClassId.676554* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.19, i64 0, i32 5
  %.21 = load %ClassId.676554* (%"Array<ClassId>.676691"*, i64)*, %ClassId.676554* (%"Array<ClassId>.676691"*, i64)** %.20, align 8
  %.22 = call %ClassId.676554* %.21(%"Array<ClassId>.676691"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ClassId.676554* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ClassId>_find"(%"Array<ClassId>.676691"* nocapture readonly %.1, %ClassId.676554* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 1
  %.19 = load %ClassId.676554**, %ClassId.676554*** %.18, align 8
  %0 = ptrtoint %ClassId.676554* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ClassId.676554*, %ClassId.676554** %.19, i64 %storemerge5
  %1 = bitcast %ClassId.676554** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ClassId>_join"(%"Array<ClassId>.676691"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.225, i64 0, i64 0), i64 8)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.225, i64 0, i64 0), i64 8)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ClassId>___as_string__"(%"Array<ClassId>.676691"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1, i64 0, i32 0
  %.7 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ClassId>.676691"*, %string.676378*)*, %string.676378* (%"Array<ClassId>.676691"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ClassId>.676691"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @ImportedSymbols_constructor(%ImportedSymbols.676686* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<VarDeclaration>_vtable_ty.676692"**
  store %"Array<VarDeclaration>_vtable_ty.676692"* @"Array<VarDeclaration>_vtable_data", %"Array<VarDeclaration>_vtable_ty.676692"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.1, i64 0, i32 1
  %3 = bitcast %"Array<VarDeclaration>.676688"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.25 to %"Array<VarId>_vtable_ty.676693"**
  store %"Array<VarId>_vtable_ty.676693"* @"Array<VarId>_vtable_data", %"Array<VarId>_vtable_ty.676693"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %4 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %4, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %5 = bitcast i8* %.31 to i64*
  store i64 0, i64* %5, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %6 = bitcast i8* %.33 to i64*
  store i64 8, i64* %6, align 8
  %.35 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.1, i64 0, i32 2
  %7 = bitcast %"Array<VarId>.676689"** %.35 to i8**
  store i8* %.25, i8** %7, align 8
  %.39 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.41 to %"Array<EnumId>_vtable_ty.676694"**
  store %"Array<EnumId>_vtable_ty.676694"* @"Array<EnumId>_vtable_data", %"Array<EnumId>_vtable_ty.676694"** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %8 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %8, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %9 = bitcast i8* %.47 to i64*
  store i64 0, i64* %9, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %10 = bitcast i8* %.49 to i64*
  store i64 8, i64* %10, align 8
  %.51 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.1, i64 0, i32 3
  %11 = bitcast %"Array<EnumId>.676690"** %.51 to i8**
  store i8* %.41, i8** %11, align 8
  %.55 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.57 to %"Array<ClassId>_vtable_ty.676695"**
  store %"Array<ClassId>_vtable_ty.676695"* @"Array<ClassId>_vtable_data", %"Array<ClassId>_vtable_ty.676695"** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %12 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %12, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %13 = bitcast i8* %.63 to i64*
  store i64 0, i64* %13, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %14 = bitcast i8* %.65 to i64*
  store i64 8, i64* %14, align 8
  %.67 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.1, i64 0, i32 4
  %15 = bitcast %"Array<ClassId>.676691"** %.67 to i8**
  store i8* %.57, i8** %15, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Var>_constructor"(%"Array<Var>.676698"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %0 = bitcast %Var.676660*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Var>_resize"(%"Array<Var>.676698"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %0 = bitcast %Var.676660*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Var>_swap"(%"Array<Var>.676698"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %.48 = load %Var.676660**, %Var.676660*** %.47, align 8
  %.49 = getelementptr inbounds %Var.676660*, %Var.676660** %.48, i64 %.2
  %4 = bitcast %Var.676660** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Var.676660*, %Var.676660** %.48, i64 %.3
  %5 = bitcast %Var.676660** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Var.676660**, %Var.676660*** %.47, align 8
  %.69 = getelementptr inbounds %Var.676660*, %Var.676660** %.67, i64 %.3
  %6 = bitcast %Var.676660** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Var>___sl__"(%"Array<Var>.676698"* %.1, %Var.676660* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 0
  %.17 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Var>.676698"*)*, void (%"Array<Var>.676698"*)** %.18, align 8
  call void %.19(%"Array<Var>.676698"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %.31 = load %Var.676660**, %Var.676660*** %.30, align 8
  %.33 = getelementptr inbounds %Var.676660*, %Var.676660** %.31, i64 %.24
  store %Var.676660* %.2, %Var.676660** %.33, align 8
  ret void
}

define void @"Array<Var>___setitem__"(%"Array<Var>.676698"* nocapture readonly %.1, i64 %.2, %Var.676660* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %.30 = load %Var.676660**, %Var.676660*** %.29, align 8
  %.32 = getelementptr inbounds %Var.676660*, %Var.676660** %.30, i64 %.2
  store %Var.676660* %.3, %Var.676660** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Var>_append"(%"Array<Var>.676698"* %.1, %Var.676660* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 0
  %.9 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Var>.676698"*, %Var.676660*)*, void (%"Array<Var>.676698"*, %Var.676660*)** %.10, align 8
  call void %.11(%"Array<Var>.676698"* %.1, %Var.676660* %.2)
  ret void
}

define %Var.676660* @"Array<Var>___getitem__"(%"Array<Var>.676698"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %.28 = load %Var.676660**, %Var.676660*** %.27, align 8
  %.29 = getelementptr inbounds %Var.676660*, %Var.676660** %.28, i64 %.2
  %.30 = load %Var.676660*, %Var.676660** %.29, align 8
  ret %Var.676660* %.30

.4.endif:                                         ; preds = %.4
  ret %Var.676660* null
}

define i1 @"Array<Var>___eq__"(%"Array<Var>.676698"* %.1, %"Array<Var>.676698"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.28, i64 0, i32 5
  %.30 = load %Var.676660* (%"Array<Var>.676698"*, i64)*, %Var.676660* (%"Array<Var>.676698"*, i64)** %.29, align 8
  %.31 = call %Var.676660* %.30(%"Array<Var>.676698"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.35, i64 0, i32 5
  %.37 = load %Var.676660* (%"Array<Var>.676698"*, i64)*, %Var.676660* (%"Array<Var>.676698"*, i64)** %.36, align 8
  %.38 = call %Var.676660* %.37(%"Array<Var>.676698"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Var.676660* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Var.676660* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Var>___in__"(%"Array<Var>.676698"* %.1, %Var.676660* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Var.676660* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.19, i64 0, i32 5
  %.21 = load %Var.676660* (%"Array<Var>.676698"*, i64)*, %Var.676660* (%"Array<Var>.676698"*, i64)** %.20, align 8
  %.22 = call %Var.676660* %.21(%"Array<Var>.676698"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Var.676660* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Var>_find"(%"Array<Var>.676698"* nocapture readonly %.1, %Var.676660* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 1
  %.19 = load %Var.676660**, %Var.676660*** %.18, align 8
  %0 = ptrtoint %Var.676660* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Var.676660*, %Var.676660** %.19, i64 %storemerge5
  %1 = bitcast %Var.676660** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Var>_join"(%"Array<Var>.676698"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.226, i64 0, i64 0), i64 4)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.226, i64 0, i64 0), i64 4)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Var>___as_string__"(%"Array<Var>.676698"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.1, i64 0, i32 0
  %.7 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Var>.676698"*, %string.676378*)*, %string.676378* (%"Array<Var>.676698"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Var>.676698"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Const>_constructor"(%"Array<Const>.676699"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %0 = bitcast %Const.676662*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Const>_resize"(%"Array<Const>.676699"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %0 = bitcast %Const.676662*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Const>_swap"(%"Array<Const>.676699"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %.48 = load %Const.676662**, %Const.676662*** %.47, align 8
  %.49 = getelementptr inbounds %Const.676662*, %Const.676662** %.48, i64 %.2
  %4 = bitcast %Const.676662** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Const.676662*, %Const.676662** %.48, i64 %.3
  %5 = bitcast %Const.676662** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Const.676662**, %Const.676662*** %.47, align 8
  %.69 = getelementptr inbounds %Const.676662*, %Const.676662** %.67, i64 %.3
  %6 = bitcast %Const.676662** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Const>___sl__"(%"Array<Const>.676699"* %.1, %Const.676662* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 0
  %.17 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Const>.676699"*)*, void (%"Array<Const>.676699"*)** %.18, align 8
  call void %.19(%"Array<Const>.676699"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %.31 = load %Const.676662**, %Const.676662*** %.30, align 8
  %.33 = getelementptr inbounds %Const.676662*, %Const.676662** %.31, i64 %.24
  store %Const.676662* %.2, %Const.676662** %.33, align 8
  ret void
}

define void @"Array<Const>___setitem__"(%"Array<Const>.676699"* nocapture readonly %.1, i64 %.2, %Const.676662* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %.30 = load %Const.676662**, %Const.676662*** %.29, align 8
  %.32 = getelementptr inbounds %Const.676662*, %Const.676662** %.30, i64 %.2
  store %Const.676662* %.3, %Const.676662** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Const>_append"(%"Array<Const>.676699"* %.1, %Const.676662* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 0
  %.9 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Const>.676699"*, %Const.676662*)*, void (%"Array<Const>.676699"*, %Const.676662*)** %.10, align 8
  call void %.11(%"Array<Const>.676699"* %.1, %Const.676662* %.2)
  ret void
}

define %Const.676662* @"Array<Const>___getitem__"(%"Array<Const>.676699"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %.28 = load %Const.676662**, %Const.676662*** %.27, align 8
  %.29 = getelementptr inbounds %Const.676662*, %Const.676662** %.28, i64 %.2
  %.30 = load %Const.676662*, %Const.676662** %.29, align 8
  ret %Const.676662* %.30

.4.endif:                                         ; preds = %.4
  ret %Const.676662* null
}

define i1 @"Array<Const>___eq__"(%"Array<Const>.676699"* %.1, %"Array<Const>.676699"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.28, i64 0, i32 5
  %.30 = load %Const.676662* (%"Array<Const>.676699"*, i64)*, %Const.676662* (%"Array<Const>.676699"*, i64)** %.29, align 8
  %.31 = call %Const.676662* %.30(%"Array<Const>.676699"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.35, i64 0, i32 5
  %.37 = load %Const.676662* (%"Array<Const>.676699"*, i64)*, %Const.676662* (%"Array<Const>.676699"*, i64)** %.36, align 8
  %.38 = call %Const.676662* %.37(%"Array<Const>.676699"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Const.676662* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Const.676662* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Const>___in__"(%"Array<Const>.676699"* %.1, %Const.676662* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Const.676662* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.19, i64 0, i32 5
  %.21 = load %Const.676662* (%"Array<Const>.676699"*, i64)*, %Const.676662* (%"Array<Const>.676699"*, i64)** %.20, align 8
  %.22 = call %Const.676662* %.21(%"Array<Const>.676699"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Const.676662* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Const>_find"(%"Array<Const>.676699"* nocapture readonly %.1, %Const.676662* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 1
  %.19 = load %Const.676662**, %Const.676662*** %.18, align 8
  %0 = ptrtoint %Const.676662* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Const.676662*, %Const.676662** %.19, i64 %storemerge5
  %1 = bitcast %Const.676662** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Const>_join"(%"Array<Const>.676699"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.227, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.227, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Const>___as_string__"(%"Array<Const>.676699"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.1, i64 0, i32 0
  %.7 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Const>.676699"*, %string.676378*)*, %string.676378* (%"Array<Const>.676699"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Const>.676699"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Class>_constructor"(%"Array<Class>.676700"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %0 = bitcast %Class.676668*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Class>_resize"(%"Array<Class>.676700"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %0 = bitcast %Class.676668*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Class>_swap"(%"Array<Class>.676700"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %.48 = load %Class.676668**, %Class.676668*** %.47, align 8
  %.49 = getelementptr inbounds %Class.676668*, %Class.676668** %.48, i64 %.2
  %4 = bitcast %Class.676668** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Class.676668*, %Class.676668** %.48, i64 %.3
  %5 = bitcast %Class.676668** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Class.676668**, %Class.676668*** %.47, align 8
  %.69 = getelementptr inbounds %Class.676668*, %Class.676668** %.67, i64 %.3
  %6 = bitcast %Class.676668** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Class>___sl__"(%"Array<Class>.676700"* %.1, %Class.676668* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 0
  %.17 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Class>.676700"*)*, void (%"Array<Class>.676700"*)** %.18, align 8
  call void %.19(%"Array<Class>.676700"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %.31 = load %Class.676668**, %Class.676668*** %.30, align 8
  %.33 = getelementptr inbounds %Class.676668*, %Class.676668** %.31, i64 %.24
  store %Class.676668* %.2, %Class.676668** %.33, align 8
  ret void
}

define void @"Array<Class>___setitem__"(%"Array<Class>.676700"* nocapture readonly %.1, i64 %.2, %Class.676668* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %.30 = load %Class.676668**, %Class.676668*** %.29, align 8
  %.32 = getelementptr inbounds %Class.676668*, %Class.676668** %.30, i64 %.2
  store %Class.676668* %.3, %Class.676668** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Class>_append"(%"Array<Class>.676700"* %.1, %Class.676668* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 0
  %.9 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Class>.676700"*, %Class.676668*)*, void (%"Array<Class>.676700"*, %Class.676668*)** %.10, align 8
  call void %.11(%"Array<Class>.676700"* %.1, %Class.676668* %.2)
  ret void
}

define %Class.676668* @"Array<Class>___getitem__"(%"Array<Class>.676700"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %.28 = load %Class.676668**, %Class.676668*** %.27, align 8
  %.29 = getelementptr inbounds %Class.676668*, %Class.676668** %.28, i64 %.2
  %.30 = load %Class.676668*, %Class.676668** %.29, align 8
  ret %Class.676668* %.30

.4.endif:                                         ; preds = %.4
  ret %Class.676668* null
}

define i1 @"Array<Class>___eq__"(%"Array<Class>.676700"* %.1, %"Array<Class>.676700"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.28, i64 0, i32 5
  %.30 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.29, align 8
  %.31 = call %Class.676668* %.30(%"Array<Class>.676700"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.35, i64 0, i32 5
  %.37 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.36, align 8
  %.38 = call %Class.676668* %.37(%"Array<Class>.676700"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Class.676668* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Class.676668* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Class>___in__"(%"Array<Class>.676700"* %.1, %Class.676668* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Class.676668* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.19, i64 0, i32 5
  %.21 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.20, align 8
  %.22 = call %Class.676668* %.21(%"Array<Class>.676700"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Class.676668* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Class>_find"(%"Array<Class>.676700"* nocapture readonly %.1, %Class.676668* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 1
  %.19 = load %Class.676668**, %Class.676668*** %.18, align 8
  %0 = ptrtoint %Class.676668* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Class.676668*, %Class.676668** %.19, i64 %storemerge5
  %1 = bitcast %Class.676668** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Class>_join"(%"Array<Class>.676700"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.228, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.228, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Class>___as_string__"(%"Array<Class>.676700"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.1, i64 0, i32 0
  %.7 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Class>.676700"*, %string.676378*)*, %string.676378* (%"Array<Class>.676700"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Class>.676700"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Function>_constructor"(%"Array<Function>.676701"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %0 = bitcast %Function.676656*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Function>_resize"(%"Array<Function>.676701"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %0 = bitcast %Function.676656*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Function>_swap"(%"Array<Function>.676701"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %.48 = load %Function.676656**, %Function.676656*** %.47, align 8
  %.49 = getelementptr inbounds %Function.676656*, %Function.676656** %.48, i64 %.2
  %4 = bitcast %Function.676656** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Function.676656*, %Function.676656** %.48, i64 %.3
  %5 = bitcast %Function.676656** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Function.676656**, %Function.676656*** %.47, align 8
  %.69 = getelementptr inbounds %Function.676656*, %Function.676656** %.67, i64 %.3
  %6 = bitcast %Function.676656** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Function>___sl__"(%"Array<Function>.676701"* %.1, %Function.676656* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 0
  %.17 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Function>.676701"*)*, void (%"Array<Function>.676701"*)** %.18, align 8
  call void %.19(%"Array<Function>.676701"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %.31 = load %Function.676656**, %Function.676656*** %.30, align 8
  %.33 = getelementptr inbounds %Function.676656*, %Function.676656** %.31, i64 %.24
  store %Function.676656* %.2, %Function.676656** %.33, align 8
  ret void
}

define void @"Array<Function>___setitem__"(%"Array<Function>.676701"* nocapture readonly %.1, i64 %.2, %Function.676656* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %.30 = load %Function.676656**, %Function.676656*** %.29, align 8
  %.32 = getelementptr inbounds %Function.676656*, %Function.676656** %.30, i64 %.2
  store %Function.676656* %.3, %Function.676656** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Function>_append"(%"Array<Function>.676701"* %.1, %Function.676656* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 0
  %.9 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Function>.676701"*, %Function.676656*)*, void (%"Array<Function>.676701"*, %Function.676656*)** %.10, align 8
  call void %.11(%"Array<Function>.676701"* %.1, %Function.676656* %.2)
  ret void
}

define %Function.676656* @"Array<Function>___getitem__"(%"Array<Function>.676701"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %.28 = load %Function.676656**, %Function.676656*** %.27, align 8
  %.29 = getelementptr inbounds %Function.676656*, %Function.676656** %.28, i64 %.2
  %.30 = load %Function.676656*, %Function.676656** %.29, align 8
  ret %Function.676656* %.30

.4.endif:                                         ; preds = %.4
  ret %Function.676656* null
}

define i1 @"Array<Function>___eq__"(%"Array<Function>.676701"* %.1, %"Array<Function>.676701"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.28, i64 0, i32 5
  %.30 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.29, align 8
  %.31 = call %Function.676656* %.30(%"Array<Function>.676701"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.35, i64 0, i32 5
  %.37 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.36, align 8
  %.38 = call %Function.676656* %.37(%"Array<Function>.676701"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Function.676656* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Function.676656* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Function>___in__"(%"Array<Function>.676701"* %.1, %Function.676656* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Function.676656* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.19, i64 0, i32 5
  %.21 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.20, align 8
  %.22 = call %Function.676656* %.21(%"Array<Function>.676701"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Function.676656* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Function>_find"(%"Array<Function>.676701"* nocapture readonly %.1, %Function.676656* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 1
  %.19 = load %Function.676656**, %Function.676656*** %.18, align 8
  %0 = ptrtoint %Function.676656* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Function.676656*, %Function.676656** %.19, i64 %storemerge5
  %1 = bitcast %Function.676656** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Function>_join"(%"Array<Function>.676701"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.229, i64 0, i64 0), i64 9)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.229, i64 0, i64 0), i64 9)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Function>___as_string__"(%"Array<Function>.676701"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.1, i64 0, i32 0
  %.7 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Function>.676701"*, %string.676378*)*, %string.676378* (%"Array<Function>.676701"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Function>.676701"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Enum>_constructor"(%"Array<Enum>.676702"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %0 = bitcast %Enum.676682*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Enum>_resize"(%"Array<Enum>.676702"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %0 = bitcast %Enum.676682*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Enum>_swap"(%"Array<Enum>.676702"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %.48 = load %Enum.676682**, %Enum.676682*** %.47, align 8
  %.49 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.48, i64 %.2
  %4 = bitcast %Enum.676682** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.48, i64 %.3
  %5 = bitcast %Enum.676682** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Enum.676682**, %Enum.676682*** %.47, align 8
  %.69 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.67, i64 %.3
  %6 = bitcast %Enum.676682** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Enum>___sl__"(%"Array<Enum>.676702"* %.1, %Enum.676682* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 0
  %.17 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Enum>.676702"*)*, void (%"Array<Enum>.676702"*)** %.18, align 8
  call void %.19(%"Array<Enum>.676702"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %.31 = load %Enum.676682**, %Enum.676682*** %.30, align 8
  %.33 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.31, i64 %.24
  store %Enum.676682* %.2, %Enum.676682** %.33, align 8
  ret void
}

define void @"Array<Enum>___setitem__"(%"Array<Enum>.676702"* nocapture readonly %.1, i64 %.2, %Enum.676682* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %.30 = load %Enum.676682**, %Enum.676682*** %.29, align 8
  %.32 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.30, i64 %.2
  store %Enum.676682* %.3, %Enum.676682** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Enum>_append"(%"Array<Enum>.676702"* %.1, %Enum.676682* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 0
  %.9 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Enum>.676702"*, %Enum.676682*)*, void (%"Array<Enum>.676702"*, %Enum.676682*)** %.10, align 8
  call void %.11(%"Array<Enum>.676702"* %.1, %Enum.676682* %.2)
  ret void
}

define %Enum.676682* @"Array<Enum>___getitem__"(%"Array<Enum>.676702"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %.28 = load %Enum.676682**, %Enum.676682*** %.27, align 8
  %.29 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.28, i64 %.2
  %.30 = load %Enum.676682*, %Enum.676682** %.29, align 8
  ret %Enum.676682* %.30

.4.endif:                                         ; preds = %.4
  ret %Enum.676682* null
}

define i1 @"Array<Enum>___eq__"(%"Array<Enum>.676702"* %.1, %"Array<Enum>.676702"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.28, i64 0, i32 5
  %.30 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.29, align 8
  %.31 = call %Enum.676682* %.30(%"Array<Enum>.676702"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.35, i64 0, i32 5
  %.37 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.36, align 8
  %.38 = call %Enum.676682* %.37(%"Array<Enum>.676702"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Enum.676682* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Enum.676682* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Enum>___in__"(%"Array<Enum>.676702"* %.1, %Enum.676682* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Enum.676682* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.19, i64 0, i32 5
  %.21 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.20, align 8
  %.22 = call %Enum.676682* %.21(%"Array<Enum>.676702"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Enum.676682* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Enum>_find"(%"Array<Enum>.676702"* nocapture readonly %.1, %Enum.676682* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 1
  %.19 = load %Enum.676682**, %Enum.676682*** %.18, align 8
  %0 = ptrtoint %Enum.676682* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Enum.676682*, %Enum.676682** %.19, i64 %storemerge5
  %1 = bitcast %Enum.676682** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Enum>_join"(%"Array<Enum>.676702"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.230, i64 0, i64 0), i64 5)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.230, i64 0, i64 0), i64 5)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Enum>___as_string__"(%"Array<Enum>.676702"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.1, i64 0, i32 0
  %.7 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Enum>.676702"*, %string.676378*)*, %string.676378* (%"Array<Enum>.676702"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Enum>.676702"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<Scope>_constructor"(%"Array<Scope>.676703"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %0 = bitcast %Scope.676628*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Scope>_resize"(%"Array<Scope>.676703"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %0 = bitcast %Scope.676628*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Scope>_swap"(%"Array<Scope>.676703"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %.48 = load %Scope.676628**, %Scope.676628*** %.47, align 8
  %.49 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.48, i64 %.2
  %4 = bitcast %Scope.676628** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.48, i64 %.3
  %5 = bitcast %Scope.676628** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Scope.676628**, %Scope.676628*** %.47, align 8
  %.69 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.67, i64 %.3
  %6 = bitcast %Scope.676628** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Scope>___sl__"(%"Array<Scope>.676703"* %.1, %Scope.676628* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 0
  %.17 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Scope>.676703"*)*, void (%"Array<Scope>.676703"*)** %.18, align 8
  call void %.19(%"Array<Scope>.676703"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %.31 = load %Scope.676628**, %Scope.676628*** %.30, align 8
  %.33 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.31, i64 %.24
  store %Scope.676628* %.2, %Scope.676628** %.33, align 8
  ret void
}

define void @"Array<Scope>___setitem__"(%"Array<Scope>.676703"* nocapture readonly %.1, i64 %.2, %Scope.676628* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %.30 = load %Scope.676628**, %Scope.676628*** %.29, align 8
  %.32 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.30, i64 %.2
  store %Scope.676628* %.3, %Scope.676628** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Scope>_append"(%"Array<Scope>.676703"* %.1, %Scope.676628* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 0
  %.9 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Scope>.676703"*, %Scope.676628*)*, void (%"Array<Scope>.676703"*, %Scope.676628*)** %.10, align 8
  call void %.11(%"Array<Scope>.676703"* %.1, %Scope.676628* %.2)
  ret void
}

define %Scope.676628* @"Array<Scope>___getitem__"(%"Array<Scope>.676703"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %.28 = load %Scope.676628**, %Scope.676628*** %.27, align 8
  %.29 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.28, i64 %.2
  %.30 = load %Scope.676628*, %Scope.676628** %.29, align 8
  ret %Scope.676628* %.30

.4.endif:                                         ; preds = %.4
  ret %Scope.676628* null
}

define i1 @"Array<Scope>___eq__"(%"Array<Scope>.676703"* %.1, %"Array<Scope>.676703"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.28, i64 0, i32 5
  %.30 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.29, align 8
  %.31 = call %Scope.676628* %.30(%"Array<Scope>.676703"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.35, i64 0, i32 5
  %.37 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.36, align 8
  %.38 = call %Scope.676628* %.37(%"Array<Scope>.676703"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Scope.676628* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Scope.676628* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Scope>___in__"(%"Array<Scope>.676703"* %.1, %Scope.676628* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Scope.676628* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.19, i64 0, i32 5
  %.21 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.20, align 8
  %.22 = call %Scope.676628* %.21(%"Array<Scope>.676703"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Scope.676628* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Scope>_find"(%"Array<Scope>.676703"* nocapture readonly %.1, %Scope.676628* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 1
  %.19 = load %Scope.676628**, %Scope.676628*** %.18, align 8
  %0 = ptrtoint %Scope.676628* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Scope.676628*, %Scope.676628** %.19, i64 %storemerge5
  %1 = bitcast %Scope.676628** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Scope>_join"(%"Array<Scope>.676703"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.231, i64 0, i64 0), i64 6)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.231, i64 0, i64 0), i64 6)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Scope>___as_string__"(%"Array<Scope>.676703"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.1, i64 0, i32 0
  %.7 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Scope>.676703"*, %string.676378*)*, %string.676378* (%"Array<Scope>.676703"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Scope>.676703"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @"Array<ConstDeclaration>_constructor"(%"Array<ConstDeclaration>.676704"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclaration.676618*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<ConstDeclaration>_resize"(%"Array<ConstDeclaration>.676704"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %0 = bitcast %ConstDeclaration.676618*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<ConstDeclaration>_swap"(%"Array<ConstDeclaration>.676704"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %.48 = load %ConstDeclaration.676618**, %ConstDeclaration.676618*** %.47, align 8
  %.49 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.48, i64 %.2
  %4 = bitcast %ConstDeclaration.676618** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.48, i64 %.3
  %5 = bitcast %ConstDeclaration.676618** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %ConstDeclaration.676618**, %ConstDeclaration.676618*** %.47, align 8
  %.69 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.67, i64 %.3
  %6 = bitcast %ConstDeclaration.676618** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclaration>___sl__"(%"Array<ConstDeclaration>.676704"* %.1, %ConstDeclaration.676618* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 0
  %.17 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<ConstDeclaration>.676704"*)*, void (%"Array<ConstDeclaration>.676704"*)** %.18, align 8
  call void %.19(%"Array<ConstDeclaration>.676704"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %.31 = load %ConstDeclaration.676618**, %ConstDeclaration.676618*** %.30, align 8
  %.33 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.31, i64 %.24
  store %ConstDeclaration.676618* %.2, %ConstDeclaration.676618** %.33, align 8
  ret void
}

define void @"Array<ConstDeclaration>___setitem__"(%"Array<ConstDeclaration>.676704"* nocapture readonly %.1, i64 %.2, %ConstDeclaration.676618* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %.30 = load %ConstDeclaration.676618**, %ConstDeclaration.676618*** %.29, align 8
  %.32 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.30, i64 %.2
  store %ConstDeclaration.676618* %.3, %ConstDeclaration.676618** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<ConstDeclaration>_append"(%"Array<ConstDeclaration>.676704"* %.1, %ConstDeclaration.676618* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 0
  %.9 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)*, void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)** %.10, align 8
  call void %.11(%"Array<ConstDeclaration>.676704"* %.1, %ConstDeclaration.676618* %.2)
  ret void
}

define %ConstDeclaration.676618* @"Array<ConstDeclaration>___getitem__"(%"Array<ConstDeclaration>.676704"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %.28 = load %ConstDeclaration.676618**, %ConstDeclaration.676618*** %.27, align 8
  %.29 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.28, i64 %.2
  %.30 = load %ConstDeclaration.676618*, %ConstDeclaration.676618** %.29, align 8
  ret %ConstDeclaration.676618* %.30

.4.endif:                                         ; preds = %.4
  ret %ConstDeclaration.676618* null
}

define i1 @"Array<ConstDeclaration>___eq__"(%"Array<ConstDeclaration>.676704"* %.1, %"Array<ConstDeclaration>.676704"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.28, i64 0, i32 5
  %.30 = load %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)*, %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)** %.29, align 8
  %.31 = call %ConstDeclaration.676618* %.30(%"Array<ConstDeclaration>.676704"* %.1, i64 %storemerge3)
  %.35 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.35, i64 0, i32 5
  %.37 = load %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)*, %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)** %.36, align 8
  %.38 = call %ConstDeclaration.676618* %.37(%"Array<ConstDeclaration>.676704"* %.2, i64 %storemerge3)
  %0 = ptrtoint %ConstDeclaration.676618* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %ConstDeclaration.676618* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<ConstDeclaration>___in__"(%"Array<ConstDeclaration>.676704"* %.1, %ConstDeclaration.676618* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %ConstDeclaration.676618* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.19, i64 0, i32 5
  %.21 = load %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)*, %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)** %.20, align 8
  %.22 = call %ConstDeclaration.676618* %.21(%"Array<ConstDeclaration>.676704"* %.1, i64 %storemerge4)
  %1 = ptrtoint %ConstDeclaration.676618* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<ConstDeclaration>_find"(%"Array<ConstDeclaration>.676704"* nocapture readonly %.1, %ConstDeclaration.676618* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 1
  %.19 = load %ConstDeclaration.676618**, %ConstDeclaration.676618*** %.18, align 8
  %0 = ptrtoint %ConstDeclaration.676618* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %ConstDeclaration.676618*, %ConstDeclaration.676618** %.19, i64 %storemerge5
  %1 = bitcast %ConstDeclaration.676618** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<ConstDeclaration>_join"(%"Array<ConstDeclaration>.676704"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.232, i64 0, i64 0), i64 17)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.232, i64 0, i64 0), i64 17)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<ConstDeclaration>___as_string__"(%"Array<ConstDeclaration>.676704"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.1, i64 0, i32 0
  %.7 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<ConstDeclaration>.676704"*, %string.676378*)*, %string.676378* (%"Array<ConstDeclaration>.676704"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<ConstDeclaration>.676704"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @Module_constructor(%Module.676696* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Function>_vtable_ty.676708"**
  store %"Array<Function>_vtable_ty.676708"* @"Array<Function>_vtable_data", %"Array<Function>_vtable_ty.676708"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 6
  %3 = bitcast %"Array<Function>.676701"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.25 to %"Array<Var>_vtable_ty.676705"**
  store %"Array<Var>_vtable_ty.676705"* @"Array<Var>_vtable_data", %"Array<Var>_vtable_ty.676705"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %4 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %4, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %5 = bitcast i8* %.31 to i64*
  store i64 0, i64* %5, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %6 = bitcast i8* %.33 to i64*
  store i64 8, i64* %6, align 8
  %.35 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 3
  %7 = bitcast %"Array<Var>.676698"** %.35 to i8**
  store i8* %.25, i8** %7, align 8
  %.39 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.41 to %"Array<Class>_vtable_ty.676707"**
  store %"Array<Class>_vtable_ty.676707"* @"Array<Class>_vtable_data", %"Array<Class>_vtable_ty.676707"** %.43, align 8
  %.45 = getelementptr inbounds i8, i8* %.41, i64 8
  %8 = bitcast i8* %.45 to i8**
  store i8* %.39, i8** %8, align 8
  %.47 = getelementptr inbounds i8, i8* %.41, i64 16
  %9 = bitcast i8* %.47 to i64*
  store i64 0, i64* %9, align 8
  %.49 = getelementptr inbounds i8, i8* %.41, i64 24
  %10 = bitcast i8* %.49 to i64*
  store i64 8, i64* %10, align 8
  %.51 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 5
  %11 = bitcast %"Array<Class>.676700"** %.51 to i8**
  store i8* %.41, i8** %11, align 8
  %.55 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.57 to %"Array<Function>_vtable_ty.676708"**
  store %"Array<Function>_vtable_ty.676708"* @"Array<Function>_vtable_data", %"Array<Function>_vtable_ty.676708"** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %12 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %12, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %13 = bitcast i8* %.63 to i64*
  store i64 0, i64* %13, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %14 = bitcast i8* %.65 to i64*
  store i64 8, i64* %14, align 8
  store i8* %.57, i8** %3, align 8
  %.71 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.75 = bitcast i8* %.73 to %"Array<Enum>_vtable_ty.676709"**
  store %"Array<Enum>_vtable_ty.676709"* @"Array<Enum>_vtable_data", %"Array<Enum>_vtable_ty.676709"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %15 = bitcast i8* %.77 to i8**
  store i8* %.71, i8** %15, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %16 = bitcast i8* %.79 to i64*
  store i64 0, i64* %16, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %17 = bitcast i8* %.81 to i64*
  store i64 8, i64* %17, align 8
  %.83 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 7
  %18 = bitcast %"Array<Enum>.676702"** %.83 to i8**
  store i8* %.73, i8** %18, align 8
  %.87 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<Scope>_vtable_ty.676710"**
  store %"Array<Scope>_vtable_ty.676710"* @"Array<Scope>_vtable_data", %"Array<Scope>_vtable_ty.676710"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %19 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %19, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %20 = bitcast i8* %.95 to i64*
  store i64 0, i64* %20, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %21 = bitcast i8* %.97 to i64*
  store i64 8, i64* %21, align 8
  %.99 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 8
  %22 = bitcast %"Array<Scope>.676703"** %.99 to i8**
  store i8* %.89, i8** %22, align 8
  %.103 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.105 to %"Array<ConstDeclaration>_vtable_ty.676711"**
  store %"Array<ConstDeclaration>_vtable_ty.676711"* @"Array<ConstDeclaration>_vtable_data", %"Array<ConstDeclaration>_vtable_ty.676711"** %.107, align 8
  %.109 = getelementptr inbounds i8, i8* %.105, i64 8
  %23 = bitcast i8* %.109 to i8**
  store i8* %.103, i8** %23, align 8
  %.111 = getelementptr inbounds i8, i8* %.105, i64 16
  %24 = bitcast i8* %.111 to i64*
  store i64 0, i64* %24, align 8
  %.113 = getelementptr inbounds i8, i8* %.105, i64 24
  %25 = bitcast i8* %.113 to i64*
  store i64 8, i64* %25, align 8
  %.115 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 9
  %26 = bitcast %"Array<ConstDeclaration>.676704"** %.115 to i8**
  store i8* %.105, i8** %26, align 8
  %.119 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.121 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.123 = bitcast i8* %.121 to %"Array<VarDeclaration>_vtable_ty.676692"**
  store %"Array<VarDeclaration>_vtable_ty.676692"* @"Array<VarDeclaration>_vtable_data", %"Array<VarDeclaration>_vtable_ty.676692"** %.123, align 8
  %.125 = getelementptr inbounds i8, i8* %.121, i64 8
  %27 = bitcast i8* %.125 to i8**
  store i8* %.119, i8** %27, align 8
  %.127 = getelementptr inbounds i8, i8* %.121, i64 16
  %28 = bitcast i8* %.127 to i64*
  store i64 0, i64* %28, align 8
  %.129 = getelementptr inbounds i8, i8* %.121, i64 24
  %29 = bitcast i8* %.129 to i64*
  store i64 8, i64* %29, align 8
  %.131 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 10
  %30 = bitcast %"Array<VarDeclaration>.676688"** %.131 to i8**
  store i8* %.121, i8** %30, align 8
  %.135 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.137 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.137 to %"Array<Const>_vtable_ty.676706"**
  store %"Array<Const>_vtable_ty.676706"* @"Array<Const>_vtable_data", %"Array<Const>_vtable_ty.676706"** %.139, align 8
  %.141 = getelementptr inbounds i8, i8* %.137, i64 8
  %31 = bitcast i8* %.141 to i8**
  store i8* %.135, i8** %31, align 8
  %.143 = getelementptr inbounds i8, i8* %.137, i64 16
  %32 = bitcast i8* %.143 to i64*
  store i64 0, i64* %32, align 8
  %.145 = getelementptr inbounds i8, i8* %.137, i64 24
  %33 = bitcast i8* %.145 to i64*
  store i64 8, i64* %33, align 8
  %.147 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 4
  %34 = bitcast %"Array<Const>.676699"** %.147 to i8**
  store i8* %.137, i8** %34, align 8
  %.150 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.151 = bitcast i8* %.150 to %ImportedSymbols.676686*
  %.152 = bitcast i8* %.150 to %ImportedSymbols_vtable_ty.676687**
  store %ImportedSymbols_vtable_ty.676687* @ImportedSymbols_vtable_data, %ImportedSymbols_vtable_ty.676687** %.152, align 8
  call void @ImportedSymbols_constructor(%ImportedSymbols.676686* %.151)
  %.155 = getelementptr inbounds %Module.676696, %Module.676696* %.1, i64 0, i32 11
  %35 = bitcast %ImportedSymbols.676686** %.155 to i8**
  store i8* %.150, i8** %35, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<Module>_constructor"(%"Array<Module>.676714"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %0 = bitcast %Module.676696*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Module>_resize"(%"Array<Module>.676714"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %0 = bitcast %Module.676696*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Module>_swap"(%"Array<Module>.676714"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %.48 = load %Module.676696**, %Module.676696*** %.47, align 8
  %.49 = getelementptr inbounds %Module.676696*, %Module.676696** %.48, i64 %.2
  %4 = bitcast %Module.676696** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %Module.676696*, %Module.676696** %.48, i64 %.3
  %5 = bitcast %Module.676696** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %Module.676696**, %Module.676696*** %.47, align 8
  %.69 = getelementptr inbounds %Module.676696*, %Module.676696** %.67, i64 %.3
  %6 = bitcast %Module.676696** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Module>___sl__"(%"Array<Module>.676714"* %.1, %Module.676696* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Module>.676714"*)*, void (%"Array<Module>.676714"*)** %.18, align 8
  call void %.19(%"Array<Module>.676714"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %.31 = load %Module.676696**, %Module.676696*** %.30, align 8
  %.33 = getelementptr inbounds %Module.676696*, %Module.676696** %.31, i64 %.24
  store %Module.676696* %.2, %Module.676696** %.33, align 8
  ret void
}

define void @"Array<Module>___setitem__"(%"Array<Module>.676714"* nocapture readonly %.1, i64 %.2, %Module.676696* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %.30 = load %Module.676696**, %Module.676696*** %.29, align 8
  %.32 = getelementptr inbounds %Module.676696*, %Module.676696** %.30, i64 %.2
  store %Module.676696* %.3, %Module.676696** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Module>_append"(%"Array<Module>.676714"* %.1, %Module.676696* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 0
  %.9 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Module>.676714"*, %Module.676696*)*, void (%"Array<Module>.676714"*, %Module.676696*)** %.10, align 8
  call void %.11(%"Array<Module>.676714"* %.1, %Module.676696* %.2)
  ret void
}

define %Module.676696* @"Array<Module>___getitem__"(%"Array<Module>.676714"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %.28 = load %Module.676696**, %Module.676696*** %.27, align 8
  %.29 = getelementptr inbounds %Module.676696*, %Module.676696** %.28, i64 %.2
  %.30 = load %Module.676696*, %Module.676696** %.29, align 8
  ret %Module.676696* %.30

.4.endif:                                         ; preds = %.4
  ret %Module.676696* null
}

define i1 @"Array<Module>___eq__"(%"Array<Module>.676714"* %.1, %"Array<Module>.676714"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.28, i64 0, i32 5
  %.30 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.29, align 8
  %.31 = call %Module.676696* %.30(%"Array<Module>.676714"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.35, i64 0, i32 5
  %.37 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.36, align 8
  %.38 = call %Module.676696* %.37(%"Array<Module>.676714"* %.2, i64 %storemerge3)
  %0 = ptrtoint %Module.676696* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %Module.676696* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Module>___in__"(%"Array<Module>.676714"* %.1, %Module.676696* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %Module.676696* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.19, i64 0, i32 5
  %.21 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.20, align 8
  %.22 = call %Module.676696* %.21(%"Array<Module>.676714"* %.1, i64 %storemerge4)
  %1 = ptrtoint %Module.676696* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Module>_find"(%"Array<Module>.676714"* nocapture readonly %.1, %Module.676696* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 1
  %.19 = load %Module.676696**, %Module.676696*** %.18, align 8
  %0 = ptrtoint %Module.676696* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %Module.676696*, %Module.676696** %.19, i64 %storemerge5
  %1 = bitcast %Module.676696** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Module>_join"(%"Array<Module>.676714"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.233, i64 0, i64 0), i64 7)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.233, i64 0, i64 0), i64 7)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Module>___as_string__"(%"Array<Module>.676714"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.1, i64 0, i32 0
  %.7 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Module>.676714"*, %string.676378*)*, %string.676378* (%"Array<Module>.676714"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Module>.676714"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree nounwind
define void @Program_constructor(%Program.676712* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.9 to %"Array<Module>_vtable_ty.676715"**
  store %"Array<Module>_vtable_ty.676715"* @"Array<Module>_vtable_data", %"Array<Module>_vtable_ty.676715"** %.11, align 8
  %.13 = getelementptr inbounds i8, i8* %.9, i64 8
  %0 = bitcast i8* %.13 to i8**
  store i8* %.7, i8** %0, align 8
  %.15 = getelementptr inbounds i8, i8* %.9, i64 16
  %1 = bitcast i8* %.15 to i64*
  store i64 0, i64* %1, align 8
  %.17 = getelementptr inbounds i8, i8* %.9, i64 24
  %2 = bitcast i8* %.17 to i64*
  store i64 8, i64* %2, align 8
  %.19 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %3 = bitcast %"Array<Module>.676714"** %.19 to i8**
  store i8* %.9, i8** %3, align 8
  ret void
}

define %Var.676660* @get_var(%Program.676712* nocapture readonly %.1, %VarId.676596* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 5
  %.19 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.18, align 8
  %.20 = call %Module.676696* %.19(%"Array<Module>.676714"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.20, i64 0, i32 3
  %.22 = load %"Array<Var>.676698"*, %"Array<Var>.676698"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.22, i64 0, i32 0
  %.24 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.24, i64 0, i32 5
  %.26 = load %Var.676660* (%"Array<Var>.676698"*, i64)*, %Var.676660* (%"Array<Var>.676698"*, i64)** %.25, align 8
  %.27 = call %Var.676660* %.26(%"Array<Var>.676698"* %.22, i64 %.9)
  ret %Var.676660* %.27
}

define %Const.676662* @get_const(%Program.676712* nocapture readonly %.1, %ConstId.676602* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ConstId.676602, %ConstId.676602* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ConstId.676602, %ConstId.676602* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 5
  %.19 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.18, align 8
  %.20 = call %Module.676696* %.19(%"Array<Module>.676714"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.20, i64 0, i32 4
  %.22 = load %"Array<Const>.676699"*, %"Array<Const>.676699"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.22, i64 0, i32 0
  %.24 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.24, i64 0, i32 5
  %.26 = load %Const.676662* (%"Array<Const>.676699"*, i64)*, %Const.676662* (%"Array<Const>.676699"*, i64)** %.25, align 8
  %.27 = call %Const.676662* %.26(%"Array<Const>.676699"* %.22, i64 %.9)
  ret %Const.676662* %.27
}

define %Function.676656* @get_func(%Program.676712* nocapture readonly %.1, %VarId.676596* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 5
  %.19 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.18, align 8
  %.20 = call %Module.676696* %.19(%"Array<Module>.676714"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.20, i64 0, i32 6
  %.22 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.22, i64 0, i32 0
  %.24 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.24, i64 0, i32 5
  %.26 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.25, align 8
  %.27 = call %Function.676656* %.26(%"Array<Function>.676701"* %.22, i64 %.9)
  ret %Function.676656* %.27
}

define %Scope.676628* @get_scope(%Program.676712* nocapture readonly %.1, %ScopeId.676626* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ScopeId.676626, %ScopeId.676626* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ScopeId.676626, %ScopeId.676626* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 5
  %.19 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.18, align 8
  %.20 = call %Module.676696* %.19(%"Array<Module>.676714"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.20, i64 0, i32 8
  %.22 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.22, i64 0, i32 0
  %.24 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.24, i64 0, i32 5
  %.26 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.25, align 8
  %.27 = call %Scope.676628* %.26(%"Array<Scope>.676703"* %.22, i64 %.9)
  ret %Scope.676628* %.27
}

define %Class.676668* @get_class(%Program.676712* nocapture readonly %.1, %ClassId.676554* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 5
  %.19 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.18, align 8
  %.20 = call %Module.676696* %.19(%"Array<Module>.676714"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.20, i64 0, i32 5
  %.22 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.22, i64 0, i32 0
  %.24 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.24, i64 0, i32 5
  %.26 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.25, align 8
  %.27 = call %Class.676668* %.26(%"Array<Class>.676700"* %.22, i64 %.9)
  ret %Class.676668* %.27
}

define %ClassMethod.676666* @get_method(%Program.676712* nocapture readonly %.1, %PropId.676604* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.12 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.676552** %.12 to %ClassId.676554**
  %.131 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.15 = call %Class.676668* @get_class(%Program.676712* %.1, %ClassId.676554* %.131)
  %.16 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 6
  %.17 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.17, i64 0, i32 0
  %.19 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.19, i64 0, i32 5
  %.21 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.20, align 8
  %.22 = call %ClassMethod.676666* %.21(%"Array<ClassMethod>.676671"* %.17, i64 %.9)
  ret %ClassMethod.676666* %.22
}

define %Enum.676682* @get_enum(%Program.676712* nocapture readonly %.1, %EnumId.676556* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %EnumId.676556, %EnumId.676556* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %EnumId.676556, %EnumId.676556* %.2, i64 0, i32 1
  %.12 = load i64, i64* %.11, align 8
  %.14 = getelementptr inbounds %Program.676712, %Program.676712* %.1, i64 0, i32 1
  %.15 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.15, i64 0, i32 0
  %.17 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.17, i64 0, i32 5
  %.19 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.18, align 8
  %.20 = call %Module.676696* %.19(%"Array<Module>.676714"* %.15, i64 %.12)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.20, i64 0, i32 7
  %.22 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.22, i64 0, i32 0
  %.24 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.24, i64 0, i32 5
  %.26 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.25, align 8
  %.27 = call %Enum.676682* %.26(%"Array<Enum>.676702"* %.22, i64 %.9)
  ret %Enum.676682* %.27
}

define %Type.676538* @get_class_prop_type(%Program.676712* nocapture readonly %.1, %PropId.676604* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.676552** %.9 to %ClassId.676554**
  %.101 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.12 = call %Class.676668* @get_class(%Program.676712* %.1, %ClassId.676554* %.101)
  %.15 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.676666* %.28(%"Array<ClassMethod>.676671"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.29, i64 0, i32 5
  %1 = bitcast %FunctionType.676544** %.30 to %Type.676538**
  %.312 = load %Type.676538*, %Type.676538** %1, align 8
  ret %Type.676538* %.312

.4.endif:                                         ; preds = %.4
  %.38 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 5
  %.39 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.38, align 8
  %.40 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.39, i64 0, i32 0
  %.41 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.41, i64 0, i32 5
  %.43 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.42, align 8
  %.44 = call %ClassField.676664* %.43(%"Array<ClassField>.676670"* %.39, i64 %.21)
  %.45 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.44, i64 0, i32 5
  %.46 = load %Type.676538*, %Type.676538** %.45, align 8
  ret %Type.676538* %.46
}

define i64 @get_class_prop_visibility(%Program.676712* nocapture readonly %.1, %PropId.676604* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.676552** %.9 to %ClassId.676554**
  %.101 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.12 = call %Class.676668* @get_class(%Program.676712* %.1, %ClassId.676554* %.101)
  %.15 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.676666* %.28(%"Array<ClassMethod>.676671"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.29, i64 0, i32 3
  %.31 = load i64, i64* %.30, align 8
  ret i64 %.31

.4.endif:                                         ; preds = %.4
  %.37 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 5
  %.38 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.40, i64 0, i32 5
  %.42 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.41, align 8
  %.43 = call %ClassField.676664* %.42(%"Array<ClassField>.676670"* %.38, i64 %.21)
  %.44 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.43, i64 0, i32 3
  %.45 = load i64, i64* %.44, align 8
  ret i64 %.45
}

define i64 @get_vtable_index(%Program.676712* nocapture readonly %.1, %PropId.676604* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.676552** %.9 to %ClassId.676554**
  %.101 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.12 = call %Class.676668* @get_class(%Program.676712* %.1, %ClassId.676554* %.101)
  %.15 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.676666* %.28(%"Array<ClassMethod>.676671"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.29, i64 0, i32 10
  %.31 = load i64, i64* %.30, align 8
  ret i64 %.31

.4.endif:                                         ; preds = %.4
  %.37 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 5
  %.38 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.40, i64 0, i32 5
  %.42 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.41, align 8
  %.43 = call %ClassField.676664* %.42(%"Array<ClassField>.676670"* %.38, i64 %.21)
  %.44 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.43, i64 0, i32 7
  %.45 = load i64, i64* %.44, align 8
  ret i64 %.45
}

define i1 @is_class_prop_static(%Program.676712* nocapture readonly %.1, %PropId.676604* nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.676552** %.9 to %ClassId.676554**
  %.101 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.12 = call %Class.676668* @get_class(%Program.676712* %.1, %ClassId.676554* %.101)
  %.15 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17 = icmp eq i64 %.16, 0
  %.20 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 3
  %.21 = load i64, i64* %.20, align 8
  br i1 %.17, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 6
  %.24 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.23, align 8
  %.25 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.24, i64 0, i32 0
  %.26 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.26, i64 0, i32 5
  %.28 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.27, align 8
  %.29 = call %ClassMethod.676666* %.28(%"Array<ClassMethod>.676671"* %.24, i64 %.21)
  %.30 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.29, i64 0, i32 2
  %.31 = load i1, i1* %.30, align 1
  ret i1 %.31

.4.endif:                                         ; preds = %.4
  %.37 = getelementptr inbounds %Class.676668, %Class.676668* %.12, i64 0, i32 5
  %.38 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.40, i64 0, i32 5
  %.42 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.41, align 8
  %.43 = call %ClassField.676664* %.42(%"Array<ClassField>.676670"* %.38, i64 %.21)
  %.44 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.43, i64 0, i32 2
  %.45 = load i1, i1* %.44, align 1
  ret i1 %.45
}

define i1 @is_operator_overload_name(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.7 = bitcast i8* %.6 to %string.676378*
  %.7.repack = bitcast i8* %.6 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.7.repack, align 8
  %.7.repack1 = getelementptr inbounds i8, i8* %.6, i64 8
  %0 = bitcast i8* %.7.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.234, i64 0, i64 0), i8** %0, align 8
  %.7.repack2 = getelementptr inbounds i8, i8* %.6, i64 16
  %1 = bitcast i8* %.7.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.7.repack3 = getelementptr inbounds i8, i8* %.6, i64 24
  %2 = bitcast i8* %.7.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.9 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.10 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.10, i64 0, i32 4
  %.12 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.11, align 8
  %.13 = call i1 %.12(%string.676378* %.1, %string.676378* %.7)
  br i1 %.13, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3.endif.endif.endif.endi...endif.4.endif, %.3.endif.endif.endif.endi...endif.4, %.3.endif.endif.endif.endi...endif.3.endif.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif.endif, %.3.endif.endif.endif.endi...endif.3.endif, %.3.endif.endif.endif.endi...endif.3, %.3.endif.endif.endif.endi...endif.2.endif.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif.endif, %.3.endif.endif.endif.endi...endif.2.endif, %.3.endif.endif.endif.endi...endif.2, %.3.endif.endif.endif.endi...endif.1.endif.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif.endif, %.3.endif.endif.endif.endi...endif.1.endif, %.3.endif.endif.endif.endi...endif.1, %.3.endif.endif.endif.endi...endif.endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif.endif, %.3.endif.endif.endif.endi...endif.endif, %.3.endif.endif.endif.endi...endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif.endif, %.3.endif.endif.endif.endif, %.3.endif.endif.endif, %.3.endif.endif, %.3.endif, %.3
  ret i1 true

.3.endif:                                         ; preds = %.3
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.676378*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %3 = bitcast i8* %.18.repack4 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.235, i64 0, i64 0), i8** %3, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %4 = bitcast i8* %.18.repack5 to i64*
  store i64 7, i64* %4, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %5 = bitcast i8* %.18.repack6 to i64*
  store i64 7, i64* %5, align 8
  %.21 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.21, i64 0, i32 4
  %.23 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.22, align 8
  %.24 = call i1 %.23(%string.676378* %.1, %string.676378* %.18)
  br i1 %.24, label %.3.if, label %.3.endif.endif

.3.endif.endif:                                   ; preds = %.3.endif
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.676378*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.29.repack, align 8
  %.29.repack7 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack7 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.236, i64 0, i64 0), i8** %6, align 8
  %.29.repack8 = getelementptr inbounds i8, i8* %.28, i64 16
  %7 = bitcast i8* %.29.repack8 to i64*
  store i64 7, i64* %7, align 8
  %.29.repack9 = getelementptr inbounds i8, i8* %.28, i64 24
  %8 = bitcast i8* %.29.repack9 to i64*
  store i64 7, i64* %8, align 8
  %.32 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.33 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.32, i64 0, i32 4
  %.34 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.33, align 8
  %.35 = call i1 %.34(%string.676378* %.1, %string.676378* %.29)
  br i1 %.35, label %.3.if, label %.3.endif.endif.endif

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.676378*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %9 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.237, i64 0, i64 0), i8** %9, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %10 = bitcast i8* %.40.repack11 to i64*
  store i64 7, i64* %10, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %11 = bitcast i8* %.40.repack12 to i64*
  store i64 7, i64* %11, align 8
  %.43 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.43, i64 0, i32 4
  %.45 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.44, align 8
  %.46 = call i1 %.45(%string.676378* %.1, %string.676378* %.40)
  br i1 %.46, label %.3.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.51.repack, align 8
  %.51.repack13 = getelementptr inbounds i8, i8* %.50, i64 8
  %12 = bitcast i8* %.51.repack13 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.238, i64 0, i64 0), i8** %12, align 8
  %.51.repack14 = getelementptr inbounds i8, i8* %.50, i64 16
  %13 = bitcast i8* %.51.repack14 to i64*
  store i64 7, i64* %13, align 8
  %.51.repack15 = getelementptr inbounds i8, i8* %.50, i64 24
  %14 = bitcast i8* %.51.repack15 to i64*
  store i64 7, i64* %14, align 8
  %.54 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.54, i64 0, i32 4
  %.56 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.55, align 8
  %.57 = call i1 %.56(%string.676378* %.1, %string.676378* %.51)
  br i1 %.57, label %.3.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.676378*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.62.repack, align 8
  %.62.repack16 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack16 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.239, i64 0, i64 0), i8** %15, align 8
  %.62.repack17 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack17 to i64*
  store i64 6, i64* %16, align 8
  %.62.repack18 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack18 to i64*
  store i64 6, i64* %17, align 8
  %.65 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.66 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.65, i64 0, i32 4
  %.67 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.66, align 8
  %.68 = call i1 %.67(%string.676378* %.1, %string.676378* %.62)
  br i1 %.68, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.676378*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.73.repack, align 8
  %.73.repack19 = getelementptr inbounds i8, i8* %.72, i64 8
  %18 = bitcast i8* %.73.repack19 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.240, i64 0, i64 0), i8** %18, align 8
  %.73.repack20 = getelementptr inbounds i8, i8* %.72, i64 16
  %19 = bitcast i8* %.73.repack20 to i64*
  store i64 8, i64* %19, align 8
  %.73.repack21 = getelementptr inbounds i8, i8* %.72, i64 24
  %20 = bitcast i8* %.73.repack21 to i64*
  store i64 8, i64* %20, align 8
  %.76 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.76, i64 0, i32 4
  %.78 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.77, align 8
  %.79 = call i1 %.78(%string.676378* %.1, %string.676378* %.73)
  br i1 %.79, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.3.endif.endif.endif.endif.endif.endif
  %.83 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.84 = bitcast i8* %.83 to %string.676378*
  %.84.repack = bitcast i8* %.83 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.84.repack, align 8
  %.84.repack22 = getelementptr inbounds i8, i8* %.83, i64 8
  %21 = bitcast i8* %.84.repack22 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.241, i64 0, i64 0), i8** %21, align 8
  %.84.repack23 = getelementptr inbounds i8, i8* %.83, i64 16
  %22 = bitcast i8* %.84.repack23 to i64*
  store i64 8, i64* %22, align 8
  %.84.repack24 = getelementptr inbounds i8, i8* %.83, i64 24
  %23 = bitcast i8* %.84.repack24 to i64*
  store i64 8, i64* %23, align 8
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 4
  %.89 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.88, align 8
  %.90 = call i1 %.89(%string.676378* %.1, %string.676378* %.84)
  br i1 %.90, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.676378*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.95.repack, align 8
  %.95.repack25 = getelementptr inbounds i8, i8* %.94, i64 8
  %24 = bitcast i8* %.95.repack25 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.242, i64 0, i64 0), i8** %24, align 8
  %.95.repack26 = getelementptr inbounds i8, i8* %.94, i64 16
  %25 = bitcast i8* %.95.repack26 to i64*
  store i64 8, i64* %25, align 8
  %.95.repack27 = getelementptr inbounds i8, i8* %.94, i64 24
  %26 = bitcast i8* %.95.repack27 to i64*
  store i64 8, i64* %26, align 8
  %.98 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.99 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.98, i64 0, i32 4
  %.100 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.99, align 8
  %.101 = call i1 %.100(%string.676378* %.1, %string.676378* %.95)
  br i1 %.101, label %.3.if, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.676378*
  %.106.repack = bitcast i8* %.105 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.106.repack, align 8
  %.106.repack28 = getelementptr inbounds i8, i8* %.105, i64 8
  %27 = bitcast i8* %.106.repack28 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.243, i64 0, i64 0), i8** %27, align 8
  %.106.repack29 = getelementptr inbounds i8, i8* %.105, i64 16
  %28 = bitcast i8* %.106.repack29 to i64*
  store i64 8, i64* %28, align 8
  %.106.repack30 = getelementptr inbounds i8, i8* %.105, i64 24
  %29 = bitcast i8* %.106.repack30 to i64*
  store i64 8, i64* %29, align 8
  %.109 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.109, i64 0, i32 4
  %.111 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.110, align 8
  %.112 = call i1 %.111(%string.676378* %.1, %string.676378* %.106)
  br i1 %.112, label %.3.if, label %.3.endif.endif.endif.endi...endif

.3.endif.endif.endif.endi...endif:                ; preds = %.3.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.116 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.117 = bitcast i8* %.116 to %string.676378*
  %.117.repack = bitcast i8* %.116 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.117.repack, align 8
  %.117.repack31 = getelementptr inbounds i8, i8* %.116, i64 8
  %30 = bitcast i8* %.117.repack31 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.244, i64 0, i64 0), i8** %30, align 8
  %.117.repack32 = getelementptr inbounds i8, i8* %.116, i64 16
  %31 = bitcast i8* %.117.repack32 to i64*
  store i64 7, i64* %31, align 8
  %.117.repack33 = getelementptr inbounds i8, i8* %.116, i64 24
  %32 = bitcast i8* %.117.repack33 to i64*
  store i64 7, i64* %32, align 8
  %.120 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.120, i64 0, i32 4
  %.122 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.121, align 8
  %.123 = call i1 %.122(%string.676378* %.1, %string.676378* %.117)
  br i1 %.123, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif

.3.endif.endif.endif.endi...endif.endif:          ; preds = %.3.endif.endif.endif.endi...endif
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.128.repack, align 8
  %.128.repack34 = getelementptr inbounds i8, i8* %.127, i64 8
  %33 = bitcast i8* %.128.repack34 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.245, i64 0, i64 0), i8** %33, align 8
  %.128.repack35 = getelementptr inbounds i8, i8* %.127, i64 16
  %34 = bitcast i8* %.128.repack35 to i64*
  store i64 8, i64* %34, align 8
  %.128.repack36 = getelementptr inbounds i8, i8* %.127, i64 24
  %35 = bitcast i8* %.128.repack36 to i64*
  store i64 8, i64* %35, align 8
  %.131 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.132 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.131, i64 0, i32 4
  %.133 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.132, align 8
  %.134 = call i1 %.133(%string.676378* %.1, %string.676378* %.128)
  br i1 %.134, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.3.endif.endif.endif.endi...endif.endif
  %.138 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.139 = bitcast i8* %.138 to %string.676378*
  %.139.repack = bitcast i8* %.138 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.139.repack, align 8
  %.139.repack37 = getelementptr inbounds i8, i8* %.138, i64 8
  %36 = bitcast i8* %.139.repack37 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.246, i64 0, i64 0), i8** %36, align 8
  %.139.repack38 = getelementptr inbounds i8, i8* %.138, i64 16
  %37 = bitcast i8* %.139.repack38 to i64*
  store i64 8, i64* %37, align 8
  %.139.repack39 = getelementptr inbounds i8, i8* %.138, i64 24
  %38 = bitcast i8* %.139.repack39 to i64*
  store i64 8, i64* %38, align 8
  %.142 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.143 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.142, i64 0, i32 4
  %.144 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.143, align 8
  %.145 = call i1 %.144(%string.676378* %.1, %string.676378* %.139)
  br i1 %.145, label %.3.if, label %.3.endif.endif.endif.endi...endif.endif.endif.endif

.3.endif.endif.endif.endi...endif.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.endif.endif
  %.149 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.150 = bitcast i8* %.149 to %string.676378*
  %.150.repack = bitcast i8* %.149 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.150.repack, align 8
  %.150.repack40 = getelementptr inbounds i8, i8* %.149, i64 8
  %39 = bitcast i8* %.150.repack40 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.247, i64 0, i64 0), i8** %39, align 8
  %.150.repack41 = getelementptr inbounds i8, i8* %.149, i64 16
  %40 = bitcast i8* %.150.repack41 to i64*
  store i64 11, i64* %40, align 8
  %.150.repack42 = getelementptr inbounds i8, i8* %.149, i64 24
  %41 = bitcast i8* %.150.repack42 to i64*
  store i64 11, i64* %41, align 8
  %.153 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.153, i64 0, i32 4
  %.155 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.154, align 8
  %.156 = call i1 %.155(%string.676378* %.1, %string.676378* %.150)
  br i1 %.156, label %.3.if, label %.3.endif.endif.endif.endi...endif.1

.3.endif.endif.endif.endi...endif.1:              ; preds = %.3.endif.endif.endif.endi...endif.endif.endif.endif
  %.160 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.161 = bitcast i8* %.160 to %string.676378*
  %.161.repack = bitcast i8* %.160 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.161.repack, align 8
  %.161.repack43 = getelementptr inbounds i8, i8* %.160, i64 8
  %42 = bitcast i8* %.161.repack43 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.248, i64 0, i64 0), i8** %42, align 8
  %.161.repack44 = getelementptr inbounds i8, i8* %.160, i64 16
  %43 = bitcast i8* %.161.repack44 to i64*
  store i64 11, i64* %43, align 8
  %.161.repack45 = getelementptr inbounds i8, i8* %.160, i64 24
  %44 = bitcast i8* %.161.repack45 to i64*
  store i64 11, i64* %44, align 8
  %.164 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.165 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.164, i64 0, i32 4
  %.166 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.165, align 8
  %.167 = call i1 %.166(%string.676378* %.1, %string.676378* %.161)
  br i1 %.167, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif

.3.endif.endif.endif.endi...endif.1.endif:        ; preds = %.3.endif.endif.endif.endi...endif.1
  %.171 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.676378*
  %.172.repack = bitcast i8* %.171 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.172.repack, align 8
  %.172.repack46 = getelementptr inbounds i8, i8* %.171, i64 8
  %45 = bitcast i8* %.172.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.249, i64 0, i64 0), i8** %45, align 8
  %.172.repack47 = getelementptr inbounds i8, i8* %.171, i64 16
  %46 = bitcast i8* %.172.repack47 to i64*
  store i64 6, i64* %46, align 8
  %.172.repack48 = getelementptr inbounds i8, i8* %.171, i64 24
  %47 = bitcast i8* %.172.repack48 to i64*
  store i64 6, i64* %47, align 8
  %.175 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.176 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.175, i64 0, i32 4
  %.177 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.176, align 8
  %.178 = call i1 %.177(%string.676378* %.1, %string.676378* %.172)
  br i1 %.178, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.1.endif
  %.182 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %string.676378*
  %.183.repack = bitcast i8* %.182 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.183.repack, align 8
  %.183.repack49 = getelementptr inbounds i8, i8* %.182, i64 8
  %48 = bitcast i8* %.183.repack49 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.250, i64 0, i64 0), i8** %48, align 8
  %.183.repack50 = getelementptr inbounds i8, i8* %.182, i64 16
  %49 = bitcast i8* %.183.repack50 to i64*
  store i64 6, i64* %49, align 8
  %.183.repack51 = getelementptr inbounds i8, i8* %.182, i64 24
  %50 = bitcast i8* %.183.repack51 to i64*
  store i64 6, i64* %50, align 8
  %.186 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.187 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.186, i64 0, i32 4
  %.188 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.187, align 8
  %.189 = call i1 %.188(%string.676378* %.1, %string.676378* %.183)
  br i1 %.189, label %.3.if, label %.3.endif.endif.endif.endi...endif.1.endif.endif.endif

.3.endif.endif.endif.endi...endif.1.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif
  %.193 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.194 = bitcast i8* %.193 to %string.676378*
  %.194.repack = bitcast i8* %.193 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.194.repack, align 8
  %.194.repack52 = getelementptr inbounds i8, i8* %.193, i64 8
  %51 = bitcast i8* %.194.repack52 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.251, i64 0, i64 0), i8** %51, align 8
  %.194.repack53 = getelementptr inbounds i8, i8* %.193, i64 16
  %52 = bitcast i8* %.194.repack53 to i64*
  store i64 7, i64* %52, align 8
  %.194.repack54 = getelementptr inbounds i8, i8* %.193, i64 24
  %53 = bitcast i8* %.194.repack54 to i64*
  store i64 7, i64* %53, align 8
  %.197 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.197, i64 0, i32 4
  %.199 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.198, align 8
  %.200 = call i1 %.199(%string.676378* %.1, %string.676378* %.194)
  br i1 %.200, label %.3.if, label %.3.endif.endif.endif.endi...endif.2

.3.endif.endif.endif.endi...endif.2:              ; preds = %.3.endif.endif.endif.endi...endif.1.endif.endif.endif
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.676378*
  %.205.repack = bitcast i8* %.204 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.205.repack, align 8
  %.205.repack55 = getelementptr inbounds i8, i8* %.204, i64 8
  %54 = bitcast i8* %.205.repack55 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.252, i64 0, i64 0), i8** %54, align 8
  %.205.repack56 = getelementptr inbounds i8, i8* %.204, i64 16
  %55 = bitcast i8* %.205.repack56 to i64*
  store i64 7, i64* %55, align 8
  %.205.repack57 = getelementptr inbounds i8, i8* %.204, i64 24
  %56 = bitcast i8* %.205.repack57 to i64*
  store i64 7, i64* %56, align 8
  %.208 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.209 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.208, i64 0, i32 4
  %.210 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.209, align 8
  %.211 = call i1 %.210(%string.676378* %.1, %string.676378* %.205)
  br i1 %.211, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif

.3.endif.endif.endif.endi...endif.2.endif:        ; preds = %.3.endif.endif.endif.endi...endif.2
  %.215 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %string.676378*
  %.216.repack = bitcast i8* %.215 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.216.repack, align 8
  %.216.repack58 = getelementptr inbounds i8, i8* %.215, i64 8
  %57 = bitcast i8* %.216.repack58 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.253, i64 0, i64 0), i8** %57, align 8
  %.216.repack59 = getelementptr inbounds i8, i8* %.215, i64 16
  %58 = bitcast i8* %.216.repack59 to i64*
  store i64 6, i64* %58, align 8
  %.216.repack60 = getelementptr inbounds i8, i8* %.215, i64 24
  %59 = bitcast i8* %.216.repack60 to i64*
  store i64 6, i64* %59, align 8
  %.219 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.220 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.219, i64 0, i32 4
  %.221 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.220, align 8
  %.222 = call i1 %.221(%string.676378* %.1, %string.676378* %.216)
  br i1 %.222, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.2.endif
  %.226 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.227 = bitcast i8* %.226 to %string.676378*
  %.227.repack = bitcast i8* %.226 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.227.repack, align 8
  %.227.repack61 = getelementptr inbounds i8, i8* %.226, i64 8
  %60 = bitcast i8* %.227.repack61 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.254, i64 0, i64 0), i8** %60, align 8
  %.227.repack62 = getelementptr inbounds i8, i8* %.226, i64 16
  %61 = bitcast i8* %.227.repack62 to i64*
  store i64 6, i64* %61, align 8
  %.227.repack63 = getelementptr inbounds i8, i8* %.226, i64 24
  %62 = bitcast i8* %.227.repack63 to i64*
  store i64 6, i64* %62, align 8
  %.230 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.231 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.230, i64 0, i32 4
  %.232 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.231, align 8
  %.233 = call i1 %.232(%string.676378* %.1, %string.676378* %.227)
  br i1 %.233, label %.3.if, label %.3.endif.endif.endif.endi...endif.2.endif.endif.endif

.3.endif.endif.endif.endi...endif.2.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif
  %.237 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.238 = bitcast i8* %.237 to %string.676378*
  %.238.repack = bitcast i8* %.237 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.238.repack, align 8
  %.238.repack64 = getelementptr inbounds i8, i8* %.237, i64 8
  %63 = bitcast i8* %.238.repack64 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.255, i64 0, i64 0), i8** %63, align 8
  %.238.repack65 = getelementptr inbounds i8, i8* %.237, i64 16
  %64 = bitcast i8* %.238.repack65 to i64*
  store i64 6, i64* %64, align 8
  %.238.repack66 = getelementptr inbounds i8, i8* %.237, i64 24
  %65 = bitcast i8* %.238.repack66 to i64*
  store i64 6, i64* %65, align 8
  %.241 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.241, i64 0, i32 4
  %.243 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.242, align 8
  %.244 = call i1 %.243(%string.676378* %.1, %string.676378* %.238)
  br i1 %.244, label %.3.if, label %.3.endif.endif.endif.endi...endif.3

.3.endif.endif.endif.endi...endif.3:              ; preds = %.3.endif.endif.endif.endi...endif.2.endif.endif.endif
  %.248 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.249 = bitcast i8* %.248 to %string.676378*
  %.249.repack = bitcast i8* %.248 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.249.repack, align 8
  %.249.repack67 = getelementptr inbounds i8, i8* %.248, i64 8
  %66 = bitcast i8* %.249.repack67 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.256, i64 0, i64 0), i8** %66, align 8
  %.249.repack68 = getelementptr inbounds i8, i8* %.248, i64 16
  %67 = bitcast i8* %.249.repack68 to i64*
  store i64 6, i64* %67, align 8
  %.249.repack69 = getelementptr inbounds i8, i8* %.248, i64 24
  %68 = bitcast i8* %.249.repack69 to i64*
  store i64 6, i64* %68, align 8
  %.252 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.253 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.252, i64 0, i32 4
  %.254 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.253, align 8
  %.255 = call i1 %.254(%string.676378* %.1, %string.676378* %.249)
  br i1 %.255, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif

.3.endif.endif.endif.endi...endif.3.endif:        ; preds = %.3.endif.endif.endif.endi...endif.3
  %.259 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %string.676378*
  %.260.repack = bitcast i8* %.259 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.260.repack, align 8
  %.260.repack70 = getelementptr inbounds i8, i8* %.259, i64 8
  %69 = bitcast i8* %.260.repack70 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.257, i64 0, i64 0), i8** %69, align 8
  %.260.repack71 = getelementptr inbounds i8, i8* %.259, i64 16
  %70 = bitcast i8* %.260.repack71 to i64*
  store i64 6, i64* %70, align 8
  %.260.repack72 = getelementptr inbounds i8, i8* %.259, i64 24
  %71 = bitcast i8* %.260.repack72 to i64*
  store i64 6, i64* %71, align 8
  %.263 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.263, i64 0, i32 4
  %.265 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.264, align 8
  %.266 = call i1 %.265(%string.676378* %.1, %string.676378* %.260)
  br i1 %.266, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.3.endif
  %.270 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.676378*
  %.271.repack = bitcast i8* %.270 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.271.repack, align 8
  %.271.repack73 = getelementptr inbounds i8, i8* %.270, i64 8
  %72 = bitcast i8* %.271.repack73 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.258, i64 0, i64 0), i8** %72, align 8
  %.271.repack74 = getelementptr inbounds i8, i8* %.270, i64 16
  %73 = bitcast i8* %.271.repack74 to i64*
  store i64 6, i64* %73, align 8
  %.271.repack75 = getelementptr inbounds i8, i8* %.270, i64 24
  %74 = bitcast i8* %.271.repack75 to i64*
  store i64 6, i64* %74, align 8
  %.274 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.275 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.274, i64 0, i32 4
  %.276 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.275, align 8
  %.277 = call i1 %.276(%string.676378* %.1, %string.676378* %.271)
  br i1 %.277, label %.3.if, label %.3.endif.endif.endif.endi...endif.3.endif.endif.endif

.3.endif.endif.endif.endi...endif.3.endif.endif.endif: ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif
  %.281 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.282 = bitcast i8* %.281 to %string.676378*
  %.282.repack = bitcast i8* %.281 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.282.repack, align 8
  %.282.repack76 = getelementptr inbounds i8, i8* %.281, i64 8
  %75 = bitcast i8* %.282.repack76 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.259, i64 0, i64 0), i8** %75, align 8
  %.282.repack77 = getelementptr inbounds i8, i8* %.281, i64 16
  %76 = bitcast i8* %.282.repack77 to i64*
  store i64 7, i64* %76, align 8
  %.282.repack78 = getelementptr inbounds i8, i8* %.281, i64 24
  %77 = bitcast i8* %.282.repack78 to i64*
  store i64 7, i64* %77, align 8
  %.285 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.286 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.285, i64 0, i32 4
  %.287 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.286, align 8
  %.288 = call i1 %.287(%string.676378* %.1, %string.676378* %.282)
  br i1 %.288, label %.3.if, label %.3.endif.endif.endif.endi...endif.4

.3.endif.endif.endif.endi...endif.4:              ; preds = %.3.endif.endif.endif.endi...endif.3.endif.endif.endif
  %.292 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.293 = bitcast i8* %.292 to %string.676378*
  %.293.repack = bitcast i8* %.292 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.293.repack, align 8
  %.293.repack79 = getelementptr inbounds i8, i8* %.292, i64 8
  %78 = bitcast i8* %.293.repack79 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.260, i64 0, i64 0), i8** %78, align 8
  %.293.repack80 = getelementptr inbounds i8, i8* %.292, i64 16
  %79 = bitcast i8* %.293.repack80 to i64*
  store i64 7, i64* %79, align 8
  %.293.repack81 = getelementptr inbounds i8, i8* %.292, i64 24
  %80 = bitcast i8* %.293.repack81 to i64*
  store i64 7, i64* %80, align 8
  %.296 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.296, i64 0, i32 4
  %.298 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.297, align 8
  %.299 = call i1 %.298(%string.676378* %.1, %string.676378* %.293)
  br i1 %.299, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif

.3.endif.endif.endif.endi...endif.4.endif:        ; preds = %.3.endif.endif.endif.endi...endif.4
  %.303 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.676378*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.304.repack, align 8
  %.304.repack82 = getelementptr inbounds i8, i8* %.303, i64 8
  %81 = bitcast i8* %.304.repack82 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.261, i64 0, i64 0), i8** %81, align 8
  %.304.repack83 = getelementptr inbounds i8, i8* %.303, i64 16
  %82 = bitcast i8* %.304.repack83 to i64*
  store i64 8, i64* %82, align 8
  %.304.repack84 = getelementptr inbounds i8, i8* %.303, i64 24
  %83 = bitcast i8* %.304.repack84 to i64*
  store i64 8, i64* %83, align 8
  %.307 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.308 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.307, i64 0, i32 4
  %.309 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.308, align 8
  %.310 = call i1 %.309(%string.676378* %.1, %string.676378* %.304)
  br i1 %.310, label %.3.if, label %.3.endif.endif.endif.endi...endif.4.endif.endif

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3.endif.endif.endif.endi...endif.4.endif
  %.314 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.315 = bitcast i8* %.314 to %string.676378*
  %.315.repack = bitcast i8* %.314 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.315.repack, align 8
  %.315.repack85 = getelementptr inbounds i8, i8* %.314, i64 8
  %84 = bitcast i8* %.315.repack85 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.262, i64 0, i64 0), i8** %84, align 8
  %.315.repack86 = getelementptr inbounds i8, i8* %.314, i64 16
  %85 = bitcast i8* %.315.repack86 to i64*
  store i64 8, i64* %85, align 8
  %.315.repack87 = getelementptr inbounds i8, i8* %.314, i64 24
  %86 = bitcast i8* %.315.repack87 to i64*
  store i64 8, i64* %86, align 8
  %.318 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.9, align 8
  %.319 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.318, i64 0, i32 4
  %.320 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.319, align 8
  %.321 = call i1 %.320(%string.676378* %.1, %string.676378* %.315)
  ret i1 %.321
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @bin_op_to_op_overload_name(i64 %.1) local_unnamed_addr #3 {
.3:
  switch i64 %.1, label %.3.endif.endif.endif.endi...endif.4.endif.endif [
    i64 0, label %.3.if
    i64 1, label %.3.endif.if
    i64 2, label %.3.endif.endif.if
    i64 3, label %.3.endif.endif.endif.if
    i64 4, label %.3.endif.endif.endif.endif.if
    i64 5, label %.3.endif.endif.endif.endif.endif.if
    i64 19, label %.3.endif.endif.endif.endif.endif.endif.if
    i64 20, label %.3.endif.endif.endif.endif.endif.endif.endif.if
    i64 21, label %.3.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 22, label %.3.endif.endif.endif.endi...if
    i64 23, label %.3.endif.endif.endif.endi...endif.if
    i64 24, label %.3.endif.endif.endif.endi...endif.endif.if
    i64 6, label %.3.endif.endif.endif.endi...endif.endif.endif.if
    i64 7, label %.3.endif.endif.endif.endi...if.1
    i64 8, label %.3.endif.endif.endif.endi...endif.1.if
    i64 9, label %.3.endif.endif.endif.endi...endif.1.endif.if
    i64 10, label %.3.endif.endif.endif.endi...endif.1.endif.endif.if
    i64 11, label %.3.endif.endif.endif.endi...if.2
    i64 12, label %.3.endif.endif.endif.endi...endif.2.if
    i64 13, label %.3.endif.endif.endif.endi...endif.2.endif.if
    i64 28, label %.3.endif.endif.endif.endi...endif.2.endif.endif.if
    i64 29, label %.3.endif.endif.endif.endi...if.3
    i64 14, label %.3.endif.endif.endif.endi...endif.3.if
    i64 15, label %.3.endif.endif.endif.endi...endif.3.endif.if
    i64 16, label %.3.endif.endif.endif.endi...endif.3.endif.endif.if
    i64 25, label %.3.endif.endif.endif.endi...if.4
    i64 27, label %.3.endif.endif.endif.endi...endif.4.if
    i64 17, label %.3.endif.endif.endif.endi...endif.4.endif.if
  ]

.3.if:                                            ; preds = %.3
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.676378*
  %.9.repack = bitcast i8* %.8 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9.repack, align 8
  %.9.repack82 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.9.repack82 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.235, i64 0, i64 0), i8** %0, align 8
  %.9.repack83 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.9.repack83 to i64*
  store i64 7, i64* %1, align 8
  %.9.repack84 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.9.repack84 to i64*
  store i64 7, i64* %2, align 8
  ret %string.676378* %.9

.3.endif.if:                                      ; preds = %.3
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.16 = bitcast i8* %.15 to %string.676378*
  %.16.repack = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.16.repack, align 8
  %.16.repack79 = getelementptr inbounds i8, i8* %.15, i64 8
  %3 = bitcast i8* %.16.repack79 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.236, i64 0, i64 0), i8** %3, align 8
  %.16.repack80 = getelementptr inbounds i8, i8* %.15, i64 16
  %4 = bitcast i8* %.16.repack80 to i64*
  store i64 7, i64* %4, align 8
  %.16.repack81 = getelementptr inbounds i8, i8* %.15, i64 24
  %5 = bitcast i8* %.16.repack81 to i64*
  store i64 7, i64* %5, align 8
  ret %string.676378* %.16

.3.endif.endif.if:                                ; preds = %.3
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.676378*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.23.repack, align 8
  %.23.repack76 = getelementptr inbounds i8, i8* %.22, i64 8
  %6 = bitcast i8* %.23.repack76 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.237, i64 0, i64 0), i8** %6, align 8
  %.23.repack77 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.23.repack77 to i64*
  store i64 7, i64* %7, align 8
  %.23.repack78 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.23.repack78 to i64*
  store i64 7, i64* %8, align 8
  ret %string.676378* %.23

.3.endif.endif.endif.if:                          ; preds = %.3
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack73 = getelementptr inbounds i8, i8* %.29, i64 8
  %9 = bitcast i8* %.30.repack73 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.238, i64 0, i64 0), i8** %9, align 8
  %.30.repack74 = getelementptr inbounds i8, i8* %.29, i64 16
  %10 = bitcast i8* %.30.repack74 to i64*
  store i64 7, i64* %10, align 8
  %.30.repack75 = getelementptr inbounds i8, i8* %.29, i64 24
  %11 = bitcast i8* %.30.repack75 to i64*
  store i64 7, i64* %11, align 8
  ret %string.676378* %.30

.3.endif.endif.endif.endif.if:                    ; preds = %.3
  %.36 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.37 = bitcast i8* %.36 to %string.676378*
  %.37.repack = bitcast i8* %.36 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.37.repack, align 8
  %.37.repack70 = getelementptr inbounds i8, i8* %.36, i64 8
  %12 = bitcast i8* %.37.repack70 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.260, i64 0, i64 0), i8** %12, align 8
  %.37.repack71 = getelementptr inbounds i8, i8* %.36, i64 16
  %13 = bitcast i8* %.37.repack71 to i64*
  store i64 7, i64* %13, align 8
  %.37.repack72 = getelementptr inbounds i8, i8* %.36, i64 24
  %14 = bitcast i8* %.37.repack72 to i64*
  store i64 7, i64* %14, align 8
  ret %string.676378* %.37

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.676378*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.44.repack, align 8
  %.44.repack67 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack67 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.259, i64 0, i64 0), i8** %15, align 8
  %.44.repack68 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack68 to i64*
  store i64 7, i64* %16, align 8
  %.44.repack69 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack69 to i64*
  store i64 7, i64* %17, align 8
  ret %string.676378* %.44

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.51.repack, align 8
  %.51.repack64 = getelementptr inbounds i8, i8* %.50, i64 8
  %18 = bitcast i8* %.51.repack64 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.240, i64 0, i64 0), i8** %18, align 8
  %.51.repack65 = getelementptr inbounds i8, i8* %.50, i64 16
  %19 = bitcast i8* %.51.repack65 to i64*
  store i64 8, i64* %19, align 8
  %.51.repack66 = getelementptr inbounds i8, i8* %.50, i64 24
  %20 = bitcast i8* %.51.repack66 to i64*
  store i64 8, i64* %20, align 8
  ret %string.676378* %.51

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.58.repack = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.58.repack, align 8
  %.58.repack61 = getelementptr inbounds i8, i8* %.57, i64 8
  %21 = bitcast i8* %.58.repack61 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.241, i64 0, i64 0), i8** %21, align 8
  %.58.repack62 = getelementptr inbounds i8, i8* %.57, i64 16
  %22 = bitcast i8* %.58.repack62 to i64*
  store i64 8, i64* %22, align 8
  %.58.repack63 = getelementptr inbounds i8, i8* %.57, i64 24
  %23 = bitcast i8* %.58.repack63 to i64*
  store i64 8, i64* %23, align 8
  ret %string.676378* %.58

.3.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.3
  %.64 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.65 = bitcast i8* %.64 to %string.676378*
  %.65.repack = bitcast i8* %.64 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.65.repack, align 8
  %.65.repack58 = getelementptr inbounds i8, i8* %.64, i64 8
  %24 = bitcast i8* %.65.repack58 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.242, i64 0, i64 0), i8** %24, align 8
  %.65.repack59 = getelementptr inbounds i8, i8* %.64, i64 16
  %25 = bitcast i8* %.65.repack59 to i64*
  store i64 8, i64* %25, align 8
  %.65.repack60 = getelementptr inbounds i8, i8* %.64, i64 24
  %26 = bitcast i8* %.65.repack60 to i64*
  store i64 8, i64* %26, align 8
  ret %string.676378* %.65

.3.endif.endif.endif.endi...if:                   ; preds = %.3
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.676378*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.72.repack, align 8
  %.72.repack55 = getelementptr inbounds i8, i8* %.71, i64 8
  %27 = bitcast i8* %.72.repack55 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.243, i64 0, i64 0), i8** %27, align 8
  %.72.repack56 = getelementptr inbounds i8, i8* %.71, i64 16
  %28 = bitcast i8* %.72.repack56 to i64*
  store i64 8, i64* %28, align 8
  %.72.repack57 = getelementptr inbounds i8, i8* %.71, i64 24
  %29 = bitcast i8* %.72.repack57 to i64*
  store i64 8, i64* %29, align 8
  ret %string.676378* %.72

.3.endif.endif.endif.endi...endif.if:             ; preds = %.3
  %.78 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.78 to %string.676378*
  %.79.repack = bitcast i8* %.78 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.79.repack, align 8
  %.79.repack52 = getelementptr inbounds i8, i8* %.78, i64 8
  %30 = bitcast i8* %.79.repack52 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.262, i64 0, i64 0), i8** %30, align 8
  %.79.repack53 = getelementptr inbounds i8, i8* %.78, i64 16
  %31 = bitcast i8* %.79.repack53 to i64*
  store i64 8, i64* %31, align 8
  %.79.repack54 = getelementptr inbounds i8, i8* %.78, i64 24
  %32 = bitcast i8* %.79.repack54 to i64*
  store i64 8, i64* %32, align 8
  ret %string.676378* %.79

.3.endif.endif.endif.endi...endif.endif.if:       ; preds = %.3
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.86 = bitcast i8* %.85 to %string.676378*
  %.86.repack = bitcast i8* %.85 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.86.repack, align 8
  %.86.repack49 = getelementptr inbounds i8, i8* %.85, i64 8
  %33 = bitcast i8* %.86.repack49 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.261, i64 0, i64 0), i8** %33, align 8
  %.86.repack50 = getelementptr inbounds i8, i8* %.85, i64 16
  %34 = bitcast i8* %.86.repack50 to i64*
  store i64 8, i64* %34, align 8
  %.86.repack51 = getelementptr inbounds i8, i8* %.85, i64 24
  %35 = bitcast i8* %.86.repack51 to i64*
  store i64 8, i64* %35, align 8
  ret %string.676378* %.86

.3.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.3
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.676378*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.93.repack, align 8
  %.93.repack46 = getelementptr inbounds i8, i8* %.92, i64 8
  %36 = bitcast i8* %.93.repack46 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.263, i64 0, i64 0), i8** %36, align 8
  %.93.repack47 = getelementptr inbounds i8, i8* %.92, i64 16
  %37 = bitcast i8* %.93.repack47 to i64*
  store i64 6, i64* %37, align 8
  %.93.repack48 = getelementptr inbounds i8, i8* %.92, i64 24
  %38 = bitcast i8* %.93.repack48 to i64*
  store i64 6, i64* %38, align 8
  ret %string.676378* %.93

.3.endif.endif.endif.endi...if.1:                 ; preds = %.3
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.676378*
  %.100.repack = bitcast i8* %.99 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.100.repack, align 8
  %.100.repack43 = getelementptr inbounds i8, i8* %.99, i64 8
  %39 = bitcast i8* %.100.repack43 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.258, i64 0, i64 0), i8** %39, align 8
  %.100.repack44 = getelementptr inbounds i8, i8* %.99, i64 16
  %40 = bitcast i8* %.100.repack44 to i64*
  store i64 6, i64* %40, align 8
  %.100.repack45 = getelementptr inbounds i8, i8* %.99, i64 24
  %41 = bitcast i8* %.100.repack45 to i64*
  store i64 6, i64* %41, align 8
  ret %string.676378* %.100

.3.endif.endif.endif.endi...endif.1.if:           ; preds = %.3
  %.106 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.107 = bitcast i8* %.106 to %string.676378*
  %.107.repack = bitcast i8* %.106 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.107.repack, align 8
  %.107.repack40 = getelementptr inbounds i8, i8* %.106, i64 8
  %42 = bitcast i8* %.107.repack40 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.254, i64 0, i64 0), i8** %42, align 8
  %.107.repack41 = getelementptr inbounds i8, i8* %.106, i64 16
  %43 = bitcast i8* %.107.repack41 to i64*
  store i64 6, i64* %43, align 8
  %.107.repack42 = getelementptr inbounds i8, i8* %.106, i64 24
  %44 = bitcast i8* %.107.repack42 to i64*
  store i64 6, i64* %44, align 8
  ret %string.676378* %.107

.3.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.3
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.676378*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.114.repack, align 8
  %.114.repack37 = getelementptr inbounds i8, i8* %.113, i64 8
  %45 = bitcast i8* %.114.repack37 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.257, i64 0, i64 0), i8** %45, align 8
  %.114.repack38 = getelementptr inbounds i8, i8* %.113, i64 16
  %46 = bitcast i8* %.114.repack38 to i64*
  store i64 6, i64* %46, align 8
  %.114.repack39 = getelementptr inbounds i8, i8* %.113, i64 24
  %47 = bitcast i8* %.114.repack39 to i64*
  store i64 6, i64* %47, align 8
  ret %string.676378* %.114

.3.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.3
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.121 = bitcast i8* %.120 to %string.676378*
  %.121.repack = bitcast i8* %.120 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.121.repack, align 8
  %.121.repack34 = getelementptr inbounds i8, i8* %.120, i64 8
  %48 = bitcast i8* %.121.repack34 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.234, i64 0, i64 0), i8** %48, align 8
  %.121.repack35 = getelementptr inbounds i8, i8* %.120, i64 16
  %49 = bitcast i8* %.121.repack35 to i64*
  store i64 6, i64* %49, align 8
  %.121.repack36 = getelementptr inbounds i8, i8* %.120, i64 24
  %50 = bitcast i8* %.121.repack36 to i64*
  store i64 6, i64* %50, align 8
  ret %string.676378* %.121

.3.endif.endif.endif.endi...if.2:                 ; preds = %.3
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.128.repack = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.128.repack, align 8
  %.128.repack31 = getelementptr inbounds i8, i8* %.127, i64 8
  %51 = bitcast i8* %.128.repack31 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.256, i64 0, i64 0), i8** %51, align 8
  %.128.repack32 = getelementptr inbounds i8, i8* %.127, i64 16
  %52 = bitcast i8* %.128.repack32 to i64*
  store i64 6, i64* %52, align 8
  %.128.repack33 = getelementptr inbounds i8, i8* %.127, i64 24
  %53 = bitcast i8* %.128.repack33 to i64*
  store i64 6, i64* %53, align 8
  ret %string.676378* %.128

.3.endif.endif.endif.endi...endif.2.if:           ; preds = %.3
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.676378*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.135.repack, align 8
  %.135.repack28 = getelementptr inbounds i8, i8* %.134, i64 8
  %54 = bitcast i8* %.135.repack28 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.249, i64 0, i64 0), i8** %54, align 8
  %.135.repack29 = getelementptr inbounds i8, i8* %.134, i64 16
  %55 = bitcast i8* %.135.repack29 to i64*
  store i64 6, i64* %55, align 8
  %.135.repack30 = getelementptr inbounds i8, i8* %.134, i64 24
  %56 = bitcast i8* %.135.repack30 to i64*
  store i64 6, i64* %56, align 8
  ret %string.676378* %.135

.3.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.3
  %.141 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.676378*
  %.142.repack = bitcast i8* %.141 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.142.repack, align 8
  %.142.repack25 = getelementptr inbounds i8, i8* %.141, i64 8
  %57 = bitcast i8* %.142.repack25 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.250, i64 0, i64 0), i8** %57, align 8
  %.142.repack26 = getelementptr inbounds i8, i8* %.141, i64 16
  %58 = bitcast i8* %.142.repack26 to i64*
  store i64 6, i64* %58, align 8
  %.142.repack27 = getelementptr inbounds i8, i8* %.141, i64 24
  %59 = bitcast i8* %.142.repack27 to i64*
  store i64 6, i64* %59, align 8
  ret %string.676378* %.142

.3.endif.endif.endif.endi...endif.2.endif.endif.if: ; preds = %.3
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.676378*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.149.repack, align 8
  %.149.repack22 = getelementptr inbounds i8, i8* %.148, i64 8
  %60 = bitcast i8* %.149.repack22 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.251, i64 0, i64 0), i8** %60, align 8
  %.149.repack23 = getelementptr inbounds i8, i8* %.148, i64 16
  %61 = bitcast i8* %.149.repack23 to i64*
  store i64 7, i64* %61, align 8
  %.149.repack24 = getelementptr inbounds i8, i8* %.148, i64 24
  %62 = bitcast i8* %.149.repack24 to i64*
  store i64 7, i64* %62, align 8
  ret %string.676378* %.149

.3.endif.endif.endif.endi...if.3:                 ; preds = %.3
  %.155 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.156 = bitcast i8* %.155 to %string.676378*
  %.156.repack = bitcast i8* %.155 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.156.repack, align 8
  %.156.repack19 = getelementptr inbounds i8, i8* %.155, i64 8
  %63 = bitcast i8* %.156.repack19 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.252, i64 0, i64 0), i8** %63, align 8
  %.156.repack20 = getelementptr inbounds i8, i8* %.155, i64 16
  %64 = bitcast i8* %.156.repack20 to i64*
  store i64 7, i64* %64, align 8
  %.156.repack21 = getelementptr inbounds i8, i8* %.155, i64 24
  %65 = bitcast i8* %.156.repack21 to i64*
  store i64 7, i64* %65, align 8
  ret %string.676378* %.156

.3.endif.endif.endif.endi...endif.3.if:           ; preds = %.3
  %.162 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.676378*
  %.163.repack = bitcast i8* %.162 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.163.repack, align 8
  %.163.repack16 = getelementptr inbounds i8, i8* %.162, i64 8
  %66 = bitcast i8* %.163.repack16 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.239, i64 0, i64 0), i8** %66, align 8
  %.163.repack17 = getelementptr inbounds i8, i8* %.162, i64 16
  %67 = bitcast i8* %.163.repack17 to i64*
  store i64 6, i64* %67, align 8
  %.163.repack18 = getelementptr inbounds i8, i8* %.162, i64 24
  %68 = bitcast i8* %.163.repack18 to i64*
  store i64 6, i64* %68, align 8
  ret %string.676378* %.163

.3.endif.endif.endif.endi...endif.3.endif.if:     ; preds = %.3
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.676378*
  %.170.repack = bitcast i8* %.169 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.170.repack, align 8
  %.170.repack13 = getelementptr inbounds i8, i8* %.169, i64 8
  %69 = bitcast i8* %.170.repack13 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.264, i64 0, i64 0), i8** %69, align 8
  %.170.repack14 = getelementptr inbounds i8, i8* %.169, i64 16
  %70 = bitcast i8* %.170.repack14 to i64*
  store i64 7, i64* %70, align 8
  %.170.repack15 = getelementptr inbounds i8, i8* %.169, i64 24
  %71 = bitcast i8* %.170.repack15 to i64*
  store i64 7, i64* %71, align 8
  ret %string.676378* %.170

.3.endif.endif.endif.endi...endif.3.endif.endif.if: ; preds = %.3
  %.176 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.177 = bitcast i8* %.176 to %string.676378*
  %.177.repack = bitcast i8* %.176 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.177.repack, align 8
  %.177.repack10 = getelementptr inbounds i8, i8* %.176, i64 8
  %72 = bitcast i8* %.177.repack10 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.265, i64 0, i64 0), i8** %72, align 8
  %.177.repack11 = getelementptr inbounds i8, i8* %.176, i64 16
  %73 = bitcast i8* %.177.repack11 to i64*
  store i64 7, i64* %73, align 8
  %.177.repack12 = getelementptr inbounds i8, i8* %.176, i64 24
  %74 = bitcast i8* %.177.repack12 to i64*
  store i64 7, i64* %74, align 8
  ret %string.676378* %.177

.3.endif.endif.endif.endi...if.4:                 ; preds = %.3
  %.183 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.184 = bitcast i8* %.183 to %string.676378*
  %.184.repack = bitcast i8* %.183 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.184.repack, align 8
  %.184.repack7 = getelementptr inbounds i8, i8* %.183, i64 8
  %75 = bitcast i8* %.184.repack7 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.245, i64 0, i64 0), i8** %75, align 8
  %.184.repack8 = getelementptr inbounds i8, i8* %.183, i64 16
  %76 = bitcast i8* %.184.repack8 to i64*
  store i64 8, i64* %76, align 8
  %.184.repack9 = getelementptr inbounds i8, i8* %.183, i64 24
  %77 = bitcast i8* %.184.repack9 to i64*
  store i64 8, i64* %77, align 8
  ret %string.676378* %.184

.3.endif.endif.endif.endi...endif.4.if:           ; preds = %.3
  %.190 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.676378*
  %.191.repack = bitcast i8* %.190 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.191.repack, align 8
  %.191.repack4 = getelementptr inbounds i8, i8* %.190, i64 8
  %78 = bitcast i8* %.191.repack4 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.246, i64 0, i64 0), i8** %78, align 8
  %.191.repack5 = getelementptr inbounds i8, i8* %.190, i64 16
  %79 = bitcast i8* %.191.repack5 to i64*
  store i64 8, i64* %79, align 8
  %.191.repack6 = getelementptr inbounds i8, i8* %.190, i64 24
  %80 = bitcast i8* %.191.repack6 to i64*
  store i64 8, i64* %80, align 8
  ret %string.676378* %.191

.3.endif.endif.endif.endi...endif.4.endif.if:     ; preds = %.3
  %.197 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.198 = bitcast i8* %.197 to %string.676378*
  %.198.repack = bitcast i8* %.197 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.198.repack, align 8
  %.198.repack1 = getelementptr inbounds i8, i8* %.197, i64 8
  %81 = bitcast i8* %.198.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.253, i64 0, i64 0), i8** %81, align 8
  %.198.repack2 = getelementptr inbounds i8, i8* %.197, i64 16
  %82 = bitcast i8* %.198.repack2 to i64*
  store i64 6, i64* %82, align 8
  %.198.repack3 = getelementptr inbounds i8, i8* %.197, i64 24
  %83 = bitcast i8* %.198.repack3 to i64*
  store i64 6, i64* %83, align 8
  ret %string.676378* %.198

.3.endif.endif.endif.endi...endif.4.endif.endif:  ; preds = %.3
  ret %string.676378* null
}

define i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.2) local_unnamed_addr {
.4:
  %.8 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 8, label %.4.endif.endif.if
    i64 9, label %.4.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.14 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %0 = bitcast %Expression.676558* %.14 to i64*
  %.15 = load i64, i64* %0, align 8
  ret i64 %.15

.4.endif.if:                                      ; preds = %.4
  %.24 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %1 = bitcast %Expression.676558* %.24 to double*
  %.25 = load double, double* %1, align 8
  %.26 = fptosi double %.25 to i64
  ret i64 %.26

.4.endif.endif.if:                                ; preds = %.4
  %bin_exp = alloca %BinaryExpression.676580*, align 8
  %2 = bitcast %BinaryExpression.676580** %bin_exp to %Expression.676558**
  store %Expression.676558* %.2, %Expression.676558** %2, align 8
  %3 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1, i32 1
  %.38 = load i64, i64* %3, align 8
  %.39 = icmp eq i64 %.38, 0
  br i1 %.39, label %.4.endif.endif.if.if, label %.4.endif.endif.if.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.if.endif
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 9, label %.4.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.if
  ]

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  %.43 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %4 = bitcast %Expression.676558* %.43 to %Expression.676558**
  %.44 = load %Expression.676558*, %Expression.676558** %4, align 8
  %.45 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.44)
  %.47 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.48 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.47, i64 0, i32 7
  %.49 = load %Expression.676558*, %Expression.676558** %.48, align 8
  %.50 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.49)
  %.51 = add i64 %.50, %.45
  ret i64 %.51

.4.endif.endif.if.endif:                          ; preds = %.4.endif.endif.if
  %5 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1, i32 1
  %.55 = load i64, i64* %5, align 8
  switch i64 %.55, label %.4.endif.endif.endif [
    i64 1, label %.4.endif.endif.if.endif.if
    i64 2, label %.4.endif.endif.if.endif.endif.if
    i64 3, label %.4.endif.endif.if.endif.endif.endif.if
    i64 4, label %.4.endif.endif.if.endif.endif.endif.endif.if
    i64 12, label %.4.endif.endif.if.endif.endif.endif.endif.endif.if
    i64 13, label %.4.endif.endif.if.endif.e...if
    i64 14, label %.4.endif.endif.if.endif.e...endif.if
    i64 15, label %.4.endif.endif.if.endif.e...endif.endif.if
    i64 16, label %.4.endif.endif.if.endif.e...endif.endif.endif.if
  ]

.4.endif.endif.if.endif.if:                       ; preds = %.4.endif.endif.if.endif
  %.60 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %6 = bitcast %Expression.676558* %.60 to %Expression.676558**
  %.61 = load %Expression.676558*, %Expression.676558** %6, align 8
  %.62 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.61)
  %.64 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.65 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.64, i64 0, i32 7
  %.66 = load %Expression.676558*, %Expression.676558** %.65, align 8
  %.67 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.66)
  %.68 = sub i64 %.62, %.67
  ret i64 %.68

.4.endif.endif.if.endif.endif.if:                 ; preds = %.4.endif.endif.if.endif
  %.77 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %7 = bitcast %Expression.676558* %.77 to %Expression.676558**
  %.78 = load %Expression.676558*, %Expression.676558** %7, align 8
  %.79 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.78)
  %.81 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.82 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.81, i64 0, i32 7
  %.83 = load %Expression.676558*, %Expression.676558** %.82, align 8
  %.84 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.83)
  %.85 = mul i64 %.84, %.79
  ret i64 %.85

.4.endif.endif.if.endif.endif.endif.if:           ; preds = %.4.endif.endif.if.endif
  %.94 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %8 = bitcast %Expression.676558* %.94 to %Expression.676558**
  %.95 = load %Expression.676558*, %Expression.676558** %8, align 8
  %.96 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.95)
  %.98 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.99 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.98, i64 0, i32 7
  %.100 = load %Expression.676558*, %Expression.676558** %.99, align 8
  %.101 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.100)
  %.102 = sdiv i64 %.96, %.101
  ret i64 %.102

.4.endif.endif.if.endif.endif.endif.endif.if:     ; preds = %.4.endif.endif.if.endif
  %.111 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %9 = bitcast %Expression.676558* %.111 to %Expression.676558**
  %.112 = load %Expression.676558*, %Expression.676558** %9, align 8
  %.113 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.112)
  %.115 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.116 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.115, i64 0, i32 7
  %.117 = load %Expression.676558*, %Expression.676558** %.116, align 8
  %.118 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.117)
  %.119 = srem i64 %.113, %.118
  ret i64 %.119

.4.endif.endif.if.endif.endif.endif.endif.endif.if: ; preds = %.4.endif.endif.if.endif
  %.128 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %10 = bitcast %Expression.676558* %.128 to %Expression.676558**
  %.129 = load %Expression.676558*, %Expression.676558** %10, align 8
  %.130 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.129)
  %.132 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.133 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.132, i64 0, i32 7
  %.134 = load %Expression.676558*, %Expression.676558** %.133, align 8
  %.135 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.134)
  %.136 = shl i64 %.130, %.135
  ret i64 %.136

.4.endif.endif.if.endif.e...if:                   ; preds = %.4.endif.endif.if.endif
  %.145 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %11 = bitcast %Expression.676558* %.145 to %Expression.676558**
  %.146 = load %Expression.676558*, %Expression.676558** %11, align 8
  %.147 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.146)
  %.149 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.150 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.149, i64 0, i32 7
  %.151 = load %Expression.676558*, %Expression.676558** %.150, align 8
  %.152 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.151)
  %.153 = ashr i64 %.147, %.152
  ret i64 %.153

.4.endif.endif.if.endif.e...endif.if:             ; preds = %.4.endif.endif.if.endif
  %.162 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %12 = bitcast %Expression.676558* %.162 to %Expression.676558**
  %.163 = load %Expression.676558*, %Expression.676558** %12, align 8
  %.164 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.163)
  %.166 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.167 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.166, i64 0, i32 7
  %.168 = load %Expression.676558*, %Expression.676558** %.167, align 8
  %.169 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.168)
  %.170 = or i64 %.169, %.164
  ret i64 %.170

.4.endif.endif.if.endif.e...endif.endif.if:       ; preds = %.4.endif.endif.if.endif
  %.179 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %13 = bitcast %Expression.676558* %.179 to %Expression.676558**
  %.180 = load %Expression.676558*, %Expression.676558** %13, align 8
  %.181 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.180)
  %.183 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.184 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.183, i64 0, i32 7
  %.185 = load %Expression.676558*, %Expression.676558** %.184, align 8
  %.186 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.185)
  %.187 = and i64 %.186, %.181
  ret i64 %.187

.4.endif.endif.if.endif.e...endif.endif.endif.if: ; preds = %.4.endif.endif.if.endif
  %.196 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %14 = bitcast %Expression.676558* %.196 to %Expression.676558**
  %.197 = load %Expression.676558*, %Expression.676558** %14, align 8
  %.198 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.197)
  %.200 = load %BinaryExpression.676580*, %BinaryExpression.676580** %bin_exp, align 8
  %.201 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.200, i64 0, i32 7
  %.202 = load %Expression.676558*, %Expression.676558** %.201, align 8
  %.203 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.202)
  %.204 = xor i64 %.203, %.198
  ret i64 %.204

.4.endif.endif.endif.if:                          ; preds = %.4, %.4.endif.endif.endif
  %.216 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %15 = bitcast %Expression.676558* %.216 to i64*
  %.217 = load i64, i64* %15, align 8
  %.218 = icmp eq i64 %.217, 4
  br i1 %.218, label %.4.endif.endif.endif.if.if, label %.4.endif.endif.endif.if.endif

.4.endif.endif.endif.endif:                       ; preds = %.4.endif.endif.endif.if.endif
  %.243 = icmp eq i64 %.9, 7
  br i1 %.243, label %.4.endif.endif.endif.endif.if, label %.4.endif.endif.endif.endif.endif

.4.endif.endif.endif.if.if:                       ; preds = %.4.endif.endif.endif.if
  %.222 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1, i32 1
  %16 = bitcast i64* %.222 to %Expression.676558**
  %.223 = load %Expression.676558*, %Expression.676558** %16, align 8
  %.224 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.223)
  %.225 = sub i64 0, %.224
  ret i64 %.225

.4.endif.endif.endif.if.endif:                    ; preds = %.4.endif.endif.endif.if
  %.228 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %17 = bitcast %Expression.676558* %.228 to i64*
  %.229 = load i64, i64* %17, align 8
  %.230 = icmp eq i64 %.229, 5
  br i1 %.230, label %.4.endif.endif.endif.if.endif.if, label %.4.endif.endif.endif.endif

.4.endif.endif.endif.if.endif.if:                 ; preds = %.4.endif.endif.endif.if.endif
  %.234 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1, i32 1
  %18 = bitcast i64* %.234 to %Expression.676558**
  %.235 = load %Expression.676558*, %Expression.676558** %18, align 8
  %.236 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.235)
  %.237 = xor i64 %.236, -1
  ret i64 %.237

.4.endif.endif.endif.endif.if:                    ; preds = %.4, %.4.endif.endif.endif, %.4.endif.endif.endif.endif
  %.251 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %19 = bitcast %Expression.676558* %.251 to %ConstId.676602**
  %.2521 = load %ConstId.676602*, %ConstId.676602** %19, align 8
  %.254 = call %Const.676662* @get_const(%Program.676712* %.1, %ConstId.676602* %.2521)
  %.255 = getelementptr inbounds %Const.676662, %Const.676662* %.254, i64 0, i32 3
  %.256 = load %Expression.676558*, %Expression.676558** %.255, align 8
  %.257 = call i64 @evaluate_const_int_expression(%Program.676712* %.1, %Expression.676558* %.256)
  ret i64 %.257

.4.endif.endif.endif.endif.endif:                 ; preds = %.4, %.4.endif.endif.endif, %.4.endif.endif.endif.endif
  ret i64 -99999999
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassDeclarationNode>_constructor"(%"Bucket<string, ClassDeclarationNode>.676720"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, ClassDeclarationNode>_set"(%"Bucket<string, ClassDeclarationNode>.676720"* nocapture %.1, %string.676378* %.2, %ClassDeclarationNode.676500* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.1, i64 0, i32 2
  store %ClassDeclarationNode.676500* %.3, %ClassDeclarationNode.676500** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, ClassDeclarationNode>_constructor"(%"Map<string, ClassDeclarationNode>.676718"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, ClassDeclarationNode>.676720"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"**
  store %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"* @"Bucket<string, ClassDeclarationNode>_vtable_data", %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"** %.26, align 8
  call void @"Bucket<string, ClassDeclarationNode>_constructor"(%"Bucket<string, ClassDeclarationNode>.676720"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, ClassDeclarationNode>_hash_fnc"(%"Map<string, ClassDeclarationNode>.676718"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, ClassDeclarationNode>_resize"(%"Map<string, ClassDeclarationNode>.676718"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, ClassDeclarationNode>.676720"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"**
  store %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"* @"Bucket<string, ClassDeclarationNode>_vtable_data", %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"** %.45, align 8
  call void @"Bucket<string, ClassDeclarationNode>_constructor"(%"Bucket<string, ClassDeclarationNode>.676720"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, ClassDeclarationNode>_set"(%"Map<string, ClassDeclarationNode>.676718"* %.1, %string.676378* %.2, %ClassDeclarationNode.676500* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, i64 (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, ClassDeclarationNode>.676718"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, ClassDeclarationNode>.676718"*)*, void (%"Map<string, ClassDeclarationNode>.676718"*)** %.32, align 8
  call void %.33(%"Map<string, ClassDeclarationNode>.676718"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.39, i64 %.19
  %.41 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"*, %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721", %"Bucket<string, ClassDeclarationNode>_vtable_ty.676721"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, ClassDeclarationNode>.676720"*, %string.676378*, %ClassDeclarationNode.676500*)*, void (%"Bucket<string, ClassDeclarationNode>.676720"*, %string.676378*, %ClassDeclarationNode.676500*)** %.92, align 8
  call void %.93(%"Bucket<string, ClassDeclarationNode>.676720"* %.89, %string.676378* %.2, %ClassDeclarationNode.676500* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.70, i64 %.65
  %.72 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %ClassDeclarationNode.676500* @"Map<string, ClassDeclarationNode>_get"(%"Map<string, ClassDeclarationNode>.676718"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, i64 (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, ClassDeclarationNode>.676718"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.22, i64 %.17
  %.24 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.54, i64 %.48
  %.56 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %ClassDeclarationNode.676500* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.91, i64 0, i32 2
  %.93 = load %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %.92, align 8
  ret %ClassDeclarationNode.676500* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, ClassDeclarationNode>>_constructor"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, ClassDeclarationNode>>_resize"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>_swap"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>___sl__"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, %"Bucket<string, ClassDeclarationNode>.676720"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.31, i64 %.24
  store %"Bucket<string, ClassDeclarationNode>.676720"* %.2, %"Bucket<string, ClassDeclarationNode>.676720"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>___setitem__"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture readonly %.1, i64 %.2, %"Bucket<string, ClassDeclarationNode>.676720"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.30, i64 %.2
  store %"Bucket<string, ClassDeclarationNode>.676720"* %.3, %"Bucket<string, ClassDeclarationNode>.676720"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, ClassDeclarationNode>>_append"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, %"Bucket<string, ClassDeclarationNode>.676720"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, %"Bucket<string, ClassDeclarationNode>.676720"* %.2)
  ret void
}

define %"Bucket<string, ClassDeclarationNode>.676720"* @"Array<Bucket<string, ClassDeclarationNode>>___getitem__"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.28, i64 %.2
  %.30 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.29, align 8
  ret %"Bucket<string, ClassDeclarationNode>.676720"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, ClassDeclarationNode>.676720"* null
}

define i1 @"Array<Bucket<string, ClassDeclarationNode>>___eq__"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)*, %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, ClassDeclarationNode>.676720"* %.30(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)*, %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, ClassDeclarationNode>.676720"* %.37(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, ClassDeclarationNode>.676720"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, ClassDeclarationNode>.676720"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, ClassDeclarationNode>>___in__"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, %"Bucket<string, ClassDeclarationNode>.676720"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, ClassDeclarationNode>.676720"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)*, %"Bucket<string, ClassDeclarationNode>.676720"* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, ClassDeclarationNode>.676720"* %.21(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, ClassDeclarationNode>.676720"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, ClassDeclarationNode>>_find"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture readonly %.1, %"Bucket<string, ClassDeclarationNode>.676720"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, ClassDeclarationNode>.676720"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, ClassDeclarationNode>>_join"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.266, i64 0, i64 0), i64 37)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.266, i64 0, i64 0), i64 37)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, ClassDeclarationNode>>___as_string__"(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>.676722", %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, ClassDeclarationNode>>.676722"* @"Map<string, ClassDeclarationNode>_get_buckets"(%"Map<string, ClassDeclarationNode>.676718"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, ClassDeclarationNode>>.676722"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"**
  store %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* @"Array<Bucket<string, ClassDeclarationNode>>_vtable_data", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, ClassDeclarationNode>.676720"**, %"Bucket<string, ClassDeclarationNode>.676720"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, ClassDeclarationNode>.676720"*, align 8
  %4 = bitcast %"Bucket<string, ClassDeclarationNode>.676720"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, ClassDeclarationNode>.676720"*
  %.36 = getelementptr inbounds %"Bucket<string, ClassDeclarationNode>.676720", %"Bucket<string, ClassDeclarationNode>.676720"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, ClassDeclarationNode>.676720"*, %"Bucket<string, ClassDeclarationNode>.676720"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"*, %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723", %"Array<Bucket<string, ClassDeclarationNode>>_vtable_ty.676723"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)*, void (%"Array<Bucket<string, ClassDeclarationNode>>.676722"*, %"Bucket<string, ClassDeclarationNode>.676720"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.9, %"Bucket<string, ClassDeclarationNode>.676720"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @TypeChecker_constructor(%TypeChecker.676716* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.7 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  store i64 -1, i64* %.7, align 8
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 8
  store i1 false, i1* %.10, align 1
  %.13 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.14 = bitcast i8* %.13 to %Program.676712*
  %.15 = bitcast i8* %.13 to %Program_vtable_ty.676713**
  store %Program_vtable_ty.676713* @Program_vtable_data, %Program_vtable_ty.676713** %.15, align 8
  call void @Program_constructor(%Program.676712* %.14)
  %.18 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %0 = bitcast %Program.676712** %.18 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %"Map<string, ClassDeclarationNode>.676718"*
  %.23 = bitcast i8* %.21 to %"Map<string, ClassDeclarationNode>_vtable_ty.676719"**
  store %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* @"Map<string, ClassDeclarationNode>_vtable_data", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.23, align 8
  call void @"Map<string, ClassDeclarationNode>_constructor"(%"Map<string, ClassDeclarationNode>.676718"* %.22)
  %.26 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 9
  %1 = bitcast %"Map<string, ClassDeclarationNode>.676718"** %.26 to i8**
  store i8* %.21, i8** %1, align 8
  ret void
}

define %Module.676696* @TypeChecker_get_module(%TypeChecker.676716* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.10 = load %Program.676712*, %Program.676712** %.9, align 8
  %.11 = getelementptr inbounds %Program.676712, %Program.676712* %.10, i64 0, i32 1
  %.12 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.12, i64 0, i32 0
  %.14 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.14, i64 0, i32 5
  %.16 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.15, align 8
  %.17 = call %Module.676696* %.16(%"Array<Module>.676714"* %.12, i64 %.2)
  ret %Module.676696* %.17
}

define %Module.676696* @TypeChecker_get_current_module(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.7, i64 0, i32 0
  %.9 = load %Module.676696* (%TypeChecker.676716*, i64)*, %Module.676696* (%TypeChecker.676716*, i64)** %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call %Module.676696* %.9(%TypeChecker.676716* %.1, i64 %.12)
  ret %Module.676696* %.13
}

define %Scope.676628* @TypeChecker_get_current_scope(%TypeChecker.676716* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.7 = load %Program.676712*, %Program.676712** %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %.10 = load %ScopeId.676626*, %ScopeId.676626** %.9, align 8
  %.11 = call %Scope.676628* @get_scope(%Program.676712* %.7, %ScopeId.676626* %.10)
  ret %Scope.676628* %.11
}

define %Scope.676628* @TypeChecker_get_current_module_global_scope(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.7, i64 0, i32 1
  %.9 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.8, align 8
  %.10 = call %Module.676696* %.9(%TypeChecker.676716* %.1)
  %.11 = getelementptr inbounds %Module.676696, %Module.676696* %.10, i64 0, i32 8
  %.12 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.11, align 8
  %.13 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.12, i64 0, i32 0
  %.14 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.13, align 8
  %.15 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.14, i64 0, i32 5
  %.16 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.15, align 8
  %.17 = call %Scope.676628* %.16(%"Array<Scope>.676703"* %.12, i64 0)
  ret %Scope.676628* %.17
}

define %Function.676656* @TypeChecker_get_current_function(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 4
  %.7 = load %VarId.676596*, %VarId.676596** %.6, align 8
  %.8 = getelementptr inbounds %VarId.676596, %VarId.676596* %.7, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.12, i64 0, i32 1
  %.14 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.13, align 8
  %.15 = call %Module.676696* %.14(%TypeChecker.676716* %.1)
  %.16 = getelementptr inbounds %Module.676696, %Module.676696* %.15, i64 0, i32 6
  %.17 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.17, i64 0, i32 0
  %.19 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.19, i64 0, i32 5
  %.21 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.20, align 8
  %.22 = call %Function.676656* %.21(%"Array<Function>.676701"* %.17, i64 %.9)
  ret %Function.676656* %.22
}

define %FunctionType.676544* @TypeChecker_get_current_function_type(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 5
  %0 = bitcast %PropId.676604** %.6 to i64*
  %.71 = load i64, i64* %0, align 8
  %.8 = trunc i64 %.71 to i32
  %.10.not = icmp eq i32 %.8, 0
  br i1 %.10.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.13 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.14 = load %Program.676712*, %Program.676712** %.13, align 8
  %.17 = load %PropId.676604*, %PropId.676604** %.6, align 8
  %.18 = call %Type.676538* @get_class_prop_type(%Program.676712* %.14, %PropId.676604* %.17)
  %.19 = bitcast %Type.676538* %.18 to %FunctionType.676544*
  ret %FunctionType.676544* %.19

.3.endif:                                         ; preds = %.3
  %.22 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.23 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.22, align 8
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.23, i64 0, i32 4
  %.25 = load %Function.676656* (%TypeChecker.676716*)*, %Function.676656* (%TypeChecker.676716*)** %.24, align 8
  %.26 = call %Function.676656* %.25(%TypeChecker.676716* %.1)
  %.27 = getelementptr inbounds %Function.676656, %Function.676656* %.26, i64 0, i32 5
  %.28 = load %FunctionType.676544*, %FunctionType.676544** %.27, align 8
  ret %FunctionType.676544* %.28
}

define %Class.676668* @TypeChecker_get_current_class(%TypeChecker.676716* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.7 = load %Program.676712*, %Program.676712** %.6, align 8
  %.9 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 3
  %.10 = load %ClassId.676554*, %ClassId.676554** %.9, align 8
  %.11 = call %Class.676668* @get_class(%Program.676712* %.7, %ClassId.676554* %.10)
  ret %Class.676668* %.11
}

define %Class.676668* @TypeChecker_get_class_from_var_id(%TypeChecker.676716* %.1, %VarId.676596* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.12, i64 0, i32 0
  %.14 = load %Module.676696* (%TypeChecker.676716*, i64)*, %Module.676696* (%TypeChecker.676716*, i64)** %.13, align 8
  %.16 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = call %Module.676696* %.14(%TypeChecker.676716* %.1, i64 %.17)
  %.19 = getelementptr inbounds %Module.676696, %Module.676696* %.18, i64 0, i32 5
  %.20 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.20, i64 0, i32 0
  %.22 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.22, i64 0, i32 5
  %.24 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.23, align 8
  %.25 = call %Class.676668* %.24(%"Array<Class>.676700"* %.20, i64 %.9)
  ret %Class.676668* %.25
}

define %Enum.676682* @TypeChecker_get_enum_from_var_id(%TypeChecker.676716* %.1, %VarId.676596* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.12 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.11, align 8
  %.13 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.12, i64 0, i32 0
  %.14 = load %Module.676696* (%TypeChecker.676716*, i64)*, %Module.676696* (%TypeChecker.676716*, i64)** %.13, align 8
  %.16 = getelementptr inbounds %VarId.676596, %VarId.676596* %.2, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = call %Module.676696* %.14(%TypeChecker.676716* %.1, i64 %.17)
  %.19 = getelementptr inbounds %Module.676696, %Module.676696* %.18, i64 0, i32 7
  %.20 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.20, i64 0, i32 0
  %.22 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.22, i64 0, i32 5
  %.24 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.23, align 8
  %.25 = call %Enum.676682* %.24(%"Array<Enum>.676702"* %.20, i64 %.9)
  ret %Enum.676682* %.25
}

define i1 @TypeChecker_types_are_eq(%TypeChecker.676716* %.1, %Type.676538* %.2, %Type.676538* %.3) {
.5:
  %.10 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %Type.676538, %Type.676538* %.3, i64 0, i32 1
  %.14 = load i64, i64* %.13, align 8
  %.15.not = icmp eq i64 %.11, %.14
  br i1 %.15.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %for.body, %.5.endif.endif, %.5.endif.endif.endif.endif.if.endif, %.5.endif.endif.endif.endif.if, %.5.endif.if.endif, %.5.endif.if, %.5
  %merge = phi i1 [ false, %.5.endif.if.endif ], [ false, %.5.endif.if ], [ false, %.5 ], [ true, %.5.endif.endif.endif.endif.if ], [ false, %.5.endif.endif.endif.endif.if.endif ], [ true, %.5.endif.endif ], [ false, %for.body ]
  ret i1 %merge

.5.endif:                                         ; preds = %.5
  %.21 = icmp eq i64 %.11, 17
  br i1 %.21, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %t1_fnc_type = alloca %FunctionType.676544*, align 8
  %0 = bitcast %FunctionType.676544** %t1_fnc_type to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %0, align 8
  %t2_fnc_type = alloca %FunctionType.676544*, align 8
  %1 = bitcast %FunctionType.676544** %t2_fnc_type to %Type.676538**
  store %Type.676538* %.3, %Type.676538** %1, align 8
  %.30 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %2 = bitcast %Type.676538* %.30 to %"Array<Type>.676546"**
  %.31 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %2, align 8
  %.32 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.31, i64 0, i32 2
  %.33 = load i64, i64* %.32, align 8
  %.35 = getelementptr inbounds %Type.676538, %Type.676538* %.3, i64 1
  %3 = bitcast %Type.676538* %.35 to %"Array<Type>.676546"**
  %.36 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %3, align 8
  %.37 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.36, i64 0, i32 2
  %.38 = load i64, i64* %.37, align 8
  %.39.not = icmp eq i64 %.33, %.38
  br i1 %.39.not, label %.5.endif.if.endif, label %.5.if

.5.endif.endif:                                   ; preds = %for.cond, %for.cond.preheader, %.5.endif
  %.105 = load i64, i64* %.10, align 8
  switch i64 %.105, label %.5.if [
    i64 16, label %.5.endif.endif.if
    i64 15, label %.5.endif.endif.endif.if
    i64 13, label %.5.endif.endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endif.endif.if
  ]

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.43 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.44 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.43, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.44, i64 0, i32 9
  %.46 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.45, align 8
  %.47 = load %FunctionType.676544*, %FunctionType.676544** %t2_fnc_type, align 8
  %.48 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.47, i64 0, i32 3
  %.49 = load %Type.676538*, %Type.676538** %.48, align 8
  %.50 = load %FunctionType.676544*, %FunctionType.676544** %t1_fnc_type, align 8
  %.51 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.50, i64 0, i32 3
  %.52 = load %Type.676538*, %Type.676538** %.51, align 8
  %.53 = call i1 %.46(%TypeChecker.676716* %.1, %Type.676538* %.49, %Type.676538* %.52)
  br i1 %.53, label %for.cond.preheader, label %.5.if

for.cond.preheader:                               ; preds = %.5.endif.if.endif
  %.62 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.50, i64 0, i32 2
  %.6315 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.62, align 8
  %.6416 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.6315, i64 0, i32 2
  %.6517 = load i64, i64* %.6416, align 8
  %.6618 = icmp sgt i64 %.6517, 0
  br i1 %.6618, label %for.body.lr.ph, label %.5.endif.endif

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.84 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.47, i64 0, i32 2
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.63 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.62, align 8
  %.64 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.63, i64 0, i32 2
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp slt i64 %.99, %.65
  br i1 %.66, label %for.body, label %.5.endif.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %.6320 = phi %"Array<Type>.676546"* [ %.6315, %for.body.lr.ph ], [ %.63, %for.cond ]
  %storemerge19 = phi i64 [ 0, %for.body.lr.ph ], [ %.99, %for.cond ]
  %.70 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.43, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 9
  %.72 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.71, align 8
  %.77 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.6320, i64 0, i32 0
  %.78 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.77, align 8
  %.79 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.78, i64 0, i32 5
  %.80 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.79, align 8
  %.81 = call %Type.676538* %.80(%"Array<Type>.676546"* %.6320, i64 %storemerge19)
  %.85 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.85, i64 0, i32 0
  %.87 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.86, align 8
  %.88 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.87, i64 0, i32 5
  %.89 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.88, align 8
  %.90 = call %Type.676538* %.89(%"Array<Type>.676546"* %.85, i64 %storemerge19)
  %.91 = call i1 %.72(%TypeChecker.676716* %.1, %Type.676538* %.81, %Type.676538* %.90)
  %.99 = add nuw nsw i64 %storemerge19, 1
  br i1 %.91, label %for.cond, label %.5.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %t1_arr_type = alloca %ArrayType.676560*, align 8
  %4 = bitcast %ArrayType.676560** %t1_arr_type to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %4, align 8
  %t2_arr_type = alloca %ArrayType.676560*, align 8
  %5 = bitcast %ArrayType.676560** %t2_arr_type to %Type.676538**
  store %Type.676538* %.3, %Type.676538** %5, align 8
  %6 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1, i32 1
  %.116 = load i64, i64* %6, align 8
  %7 = getelementptr inbounds %Type.676538, %Type.676538* %.3, i64 1, i32 1
  %.119 = load i64, i64* %7, align 8
  %.120 = icmp eq i64 %.116, %.119
  %.122 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.123 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.122, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.123, i64 0, i32 9
  %.125 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.124, align 8
  %.126 = load %ArrayType.676560*, %ArrayType.676560** %t1_arr_type, align 8
  %.127 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.126, i64 0, i32 2
  %.128 = load %Type.676538*, %Type.676538** %.127, align 8
  %.129 = load %ArrayType.676560*, %ArrayType.676560** %t2_arr_type, align 8
  %.130 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.129, i64 0, i32 2
  %.131 = load %Type.676538*, %Type.676538** %.130, align 8
  %.132 = call i1 %.125(%TypeChecker.676716* %.1, %Type.676538* %.128, %Type.676538* %.131)
  %.133 = and i1 %.120, %.132
  ret i1 %.133

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif
  %t1_ptr_type = alloca %PointerType.676542*, align 8
  %8 = bitcast %PointerType.676542** %t1_ptr_type to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %8, align 8
  %t2_ptr_type = alloca %PointerType.676542*, align 8
  %9 = bitcast %PointerType.676542** %t2_ptr_type to %Type.676538**
  store %Type.676538* %.3, %Type.676538** %9, align 8
  %.147 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.148 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.147, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.148, i64 0, i32 9
  %.150 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.149, align 8
  %.151 = load %PointerType.676542*, %PointerType.676542** %t1_ptr_type, align 8
  %.152 = getelementptr inbounds %PointerType.676542, %PointerType.676542* %.151, i64 0, i32 2
  %.153 = load %Type.676538*, %Type.676538** %.152, align 8
  %.154 = load %PointerType.676542*, %PointerType.676542** %t2_ptr_type, align 8
  %.155 = getelementptr inbounds %PointerType.676542, %PointerType.676542* %.154, i64 0, i32 2
  %.156 = load %Type.676538*, %Type.676538** %.155, align 8
  %.157 = call i1 %.150(%TypeChecker.676716* %.1, %Type.676538* %.153, %Type.676538* %.156)
  ret i1 %.157

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif
  %t2_obj_type = alloca %ObjectType.676562*, align 8
  %10 = bitcast %ObjectType.676562** %t2_obj_type to %Type.676538**
  store %Type.676538* %.3, %Type.676538** %10, align 8
  %.171 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %11 = bitcast %Type.676538* %.171 to i64*
  %.17289 = load i64, i64* %11, align 8
  %t1_obj_typeid = alloca %TypeId.676552*, align 8
  %12 = bitcast %TypeId.676552** %t1_obj_typeid to i64*
  store i64 %.17289, i64* %12, align 8
  %.175 = load %ObjectType.676562*, %ObjectType.676562** %t2_obj_type, align 8
  %.176 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.175, i64 0, i32 2
  %13 = bitcast %ClassId.676554** %.176 to i64*
  %.1771011 = load i64, i64* %13, align 8
  %t2_obj_typeid = alloca %TypeId.676552*, align 8
  %14 = bitcast %TypeId.676552** %t2_obj_typeid to i64*
  store i64 %.1771011, i64* %14, align 8
  %.180 = load %TypeId.676552*, %TypeId.676552** %t1_obj_typeid, align 8
  %.181 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.180, i64 0, i32 2
  %.182 = load i64, i64* %.181, align 8
  %.183.cast = inttoptr i64 %.1771011 to %TypeId.676552*
  %.184 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.183.cast, i64 0, i32 2
  %.185 = load i64, i64* %.184, align 8
  %.186 = icmp eq i64 %.182, %.185
  %.188 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.180, i64 0, i32 1
  %.189 = load i64, i64* %.188, align 8
  %.190 = load %TypeId.676552*, %TypeId.676552** %t2_obj_typeid, align 8
  %.191 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.190, i64 0, i32 1
  %.192 = load i64, i64* %.191, align 8
  %.193 = icmp eq i64 %.189, %.192
  %.194 = and i1 %.186, %.193
  %.196 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.180, i64 0, i32 3
  %.197 = load i64, i64* %.196, align 8
  %.199 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.190, i64 0, i32 3
  %.200 = load i64, i64* %.199, align 8
  %.201 = icmp eq i64 %.197, %.200
  %.202 = and i1 %.194, %.201
  br i1 %.202, label %.5.if, label %.5.endif.endif.endif.endif.if.endif

.5.endif.endif.endif.endif.if.endif:              ; preds = %.5.endif.endif.endif.endif.if
  %.206 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.207 = load %Program.676712*, %Program.676712** %.206, align 8
  %15 = bitcast %TypeId.676552** %t2_obj_typeid to %ClassId.676554**
  %.20812 = load %ClassId.676554*, %ClassId.676554** %15, align 8
  %.210 = call %Class.676668* @get_class(%Program.676712* %.207, %ClassId.676554* %.20812)
  %.213 = getelementptr inbounds %Class.676668, %Class.676668* %.210, i64 0, i32 3
  %16 = bitcast %Type.676538** %.213 to i64*
  %.21413 = load i64, i64* %16, align 8
  %.215 = trunc i64 %.21413 to i32
  %.217.not = icmp eq i32 %.215, 0
  br i1 %.217.not, label %.5.if, label %.5.endif.endif.endif.endif.if.endif.if

.5.endif.endif.endif.endif.if.endif.if:           ; preds = %.5.endif.endif.endif.endif.if.endif
  %.220 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.221 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.220, align 8
  %.222 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.221, i64 0, i32 9
  %.223 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.222, align 8
  %.228 = load %Type.676538*, %Type.676538** %.213, align 8
  %.229 = call i1 %.223(%TypeChecker.676716* %.1, %Type.676538* %.2, %Type.676538* %.228)
  ret i1 %.229

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif
  %.244 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %17 = bitcast %Type.676538* %.244 to i64*
  %.24512 = load i64, i64* %17, align 8
  %.249 = getelementptr inbounds %Type.676538, %Type.676538* %.3, i64 1
  %18 = bitcast %Type.676538* %.249 to i64*
  %.2503457 = load i64, i64* %18, align 8
  %.255 = trunc i64 %.24512 to i32
  %.256 = trunc i64 %.2503457 to i32
  %.257 = icmp eq i32 %.255, %.256
  ret i1 %.257
}

define %string.676378* @TypeChecker_dump_type(%TypeChecker.676716* %.1, %Type.676538* %.2) {
.4:
  %.8 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 0, i32 1
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif [
    i64 17, label %.4.if
    i64 15, label %.4.endif.if
    i64 13, label %.4.endif.endif.if
    i64 14, label %.4.endif.endif.endif.if
    i64 16, label %.4.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %fnc_ty = alloca %FunctionType.676544*, align 8
  %0 = bitcast %FunctionType.676544** %fnc_ty to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %0, align 8
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %1 = bitcast i8* %.19 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %1, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %args_tys_str = alloca %string.676378*, align 8
  %2 = bitcast %string.676378** %args_tys_str to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.21, i8 0, i64 16, i1 false)
  store i8* %.15, i8** %2, align 8
  %.301 = load %FunctionType.676544*, %FunctionType.676544** %fnc_ty, align 8
  %.312 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.301, i64 0, i32 2
  %.323 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.312, align 8
  %.334 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.323, i64 0, i32 2
  %.345 = load i64, i64* %.334, align 8
  %.356 = icmp sgt i64 %.345, 0
  %.377 = load %string.676378*, %string.676378** %args_tys_str, align 8
  %.39 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.408 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.39, align 8
  %.419 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.408, i64 0, i32 10
  %.4210 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.419, align 8
  br i1 %.356, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.if
  %.30 = load %FunctionType.676544*, %FunctionType.676544** %fnc_ty, align 8
  %.31 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.30, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.4214 = phi %string.676378* (%TypeChecker.676716*, %Type.676538*)* [ %.4210, %for.body.lr.ph ], [ %.42, %for.body ]
  %.3713 = phi %string.676378* [ %.377, %for.body.lr.ph ], [ %.57, %for.body ]
  %.3212 = phi %"Array<Type>.676546"* [ %.323, %for.body.lr.ph ], [ %.32, %for.body ]
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.63, %for.body ]
  %.47 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.3212, i64 0, i32 0
  %.48 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.47, align 8
  %.49 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.48, i64 0, i32 5
  %.50 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.49, align 8
  %.51 = call %Type.676538* %.50(%"Array<Type>.676546"* %.3212, i64 %storemerge11)
  %.52 = call %string.676378* %.4214(%TypeChecker.676716* %.1, %Type.676538* %.51)
  %.53 = getelementptr inbounds %string.676378, %string.676378* %.3713, i64 0, i32 0
  %.54 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.53, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.54, i64 0, i32 0
  %.56 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.55, align 8
  %.57 = call %string.676378* %.56(%string.676378* %.3713, %string.676378* %.52)
  %.63 = add nuw nsw i64 %storemerge11, 1
  %.32 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.32, i64 0, i32 2
  %.34 = load i64, i64* %.33, align 8
  %.35 = icmp slt i64 %.63, %.34
  %.40 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.39, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.40, i64 0, i32 10
  %.42 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.41, align 8
  br i1 %.35, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  store %string.676378* %.57, %string.676378** %args_tys_str, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4.if
  %.30.lcssa = phi %FunctionType.676544* [ %.30, %for.cond.for.end_crit_edge ], [ %.301, %.4.if ]
  %.37.lcssa = phi %string.676378* [ %.57, %for.cond.for.end_crit_edge ], [ %.377, %.4.if ]
  %.42.lcssa = phi %string.676378* (%TypeChecker.676716*, %Type.676538*)* [ %.42, %for.cond.for.end_crit_edge ], [ %.4210, %.4.if ]
  %.73 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.30.lcssa, i64 0, i32 3
  %.74 = load %Type.676538*, %Type.676538** %.73, align 8
  %.75 = call %string.676378* %.42.lcssa(%TypeChecker.676716* %.1, %Type.676538* %.74)
  %.76 = getelementptr inbounds %string.676378, %string.676378* %.37.lcssa, i64 0, i32 0
  %.77 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.76, align 8
  %.78 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.77, i64 0, i32 11
  %.79 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.78, align 8
  %.80 = call i8* %.79(%string.676378* %.37.lcssa)
  %.81 = getelementptr inbounds %string.676378, %string.676378* %.75, i64 0, i32 0
  %.82 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.81, align 8
  %.83 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.82, i64 0, i32 11
  %.84 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.83, align 8
  %.85 = call i8* %.84(%string.676378* %.75)
  %.87 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.267, i64 0, i64 0), i8* %.80, i8* %.85)
  %.89 = call i8* @malloc(i64 %.87)
  %.90 = call i64 (i8*, i8*, ...) @sprintf(i8* %.89, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.267, i64 0, i64 0), i8* %.80, i8* %.85)
  %.91 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.92 = bitcast i8* %.91 to %string.676378*
  %.93 = bitcast i8* %.91 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.93, align 8
  %.95 = getelementptr inbounds i8, i8* %.91, i64 8
  %3 = bitcast i8* %.95 to i8**
  store i8* %.89, i8** %3, align 8
  %.97 = getelementptr inbounds i8, i8* %.91, i64 16
  %4 = bitcast i8* %.97 to i64*
  store i64 %.87, i64* %4, align 8
  %.99 = getelementptr inbounds i8, i8* %.91, i64 24
  %5 = bitcast i8* %.99 to i64*
  store i64 %.87, i64* %5, align 8
  ret %string.676378* %.92

.4.endif.if:                                      ; preds = %.4
  %.108 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.109 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.108, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.109, i64 0, i32 10
  %.111 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.110, align 8
  %.114 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %6 = bitcast %Type.676538* %.114 to %Type.676538**
  %.115 = load %Type.676538*, %Type.676538** %6, align 8
  %.116 = call %string.676378* %.111(%TypeChecker.676716* %.1, %Type.676538* %.115)
  %.117 = getelementptr inbounds %string.676378, %string.676378* %.116, i64 0, i32 0
  %.118 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.117, align 8
  %.119 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.118, i64 0, i32 11
  %.120 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.119, align 8
  %.121 = call i8* %.120(%string.676378* %.116)
  %.123 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.268, i64 0, i64 0), i8* %.121)
  %.125 = call i8* @malloc(i64 %.123)
  %.126 = call i64 (i8*, i8*, ...) @sprintf(i8* %.125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.268, i64 0, i64 0), i8* %.121)
  %.127 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.128 = bitcast i8* %.127 to %string.676378*
  %.129 = bitcast i8* %.127 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.129, align 8
  %.131 = getelementptr inbounds i8, i8* %.127, i64 8
  %7 = bitcast i8* %.131 to i8**
  store i8* %.125, i8** %7, align 8
  %.133 = getelementptr inbounds i8, i8* %.127, i64 16
  %8 = bitcast i8* %.133 to i64*
  store i64 %.123, i64* %8, align 8
  %.135 = getelementptr inbounds i8, i8* %.127, i64 24
  %9 = bitcast i8* %.135 to i64*
  store i64 %.123, i64* %9, align 8
  ret %string.676378* %.128

.4.endif.endif.if:                                ; preds = %.4
  %.144 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.145 = load %Program.676712*, %Program.676712** %.144, align 8
  %.148 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %10 = bitcast %Type.676538* %.148 to %ClassId.676554**
  %.149 = load %ClassId.676554*, %ClassId.676554** %10, align 8
  %.150 = call %Class.676668* @get_class(%Program.676712* %.145, %ClassId.676554* %.149)
  %.151 = getelementptr inbounds %Class.676668, %Class.676668* %.150, i64 0, i32 2
  %.152 = load %string.676378*, %string.676378** %.151, align 8
  ret %string.676378* %.152

.4.endif.endif.endif.if:                          ; preds = %.4
  %.160 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.161 = load %Program.676712*, %Program.676712** %.160, align 8
  %.164 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %11 = bitcast %Type.676538* %.164 to %EnumId.676556**
  %.165 = load %EnumId.676556*, %EnumId.676556** %11, align 8
  %.166 = call %Enum.676682* @get_enum(%Program.676712* %.161, %EnumId.676556* %.165)
  %.167 = getelementptr inbounds %Enum.676682, %Enum.676682* %.166, i64 0, i32 2
  %.168 = load %string.676378*, %string.676378** %.167, align 8
  ret %string.676378* %.168

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %arr_ty = alloca %ArrayType.676560*, align 8
  %12 = bitcast %ArrayType.676560** %arr_ty to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %12, align 8
  %.179 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.180 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.179, align 8
  %.181 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.180, i64 0, i32 10
  %.182 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.181, align 8
  %.184 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %13 = bitcast %Type.676538* %.184 to %Type.676538**
  %.185 = load %Type.676538*, %Type.676538** %13, align 8
  %.186 = call %string.676378* %.182(%TypeChecker.676716* %.1, %Type.676538* %.185)
  %.187 = load %ArrayType.676560*, %ArrayType.676560** %arr_ty, align 8
  %.188 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.187, i64 0, i32 3
  %.189 = load i64, i64* %.188, align 8
  %.190 = getelementptr inbounds %string.676378, %string.676378* %.186, i64 0, i32 0
  %.191 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.190, align 8
  %.192 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.191, i64 0, i32 11
  %.193 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.192, align 8
  %.194 = call i8* %.193(%string.676378* %.186)
  %.196 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.269, i64 0, i64 0), i8* %.194, i64 %.189)
  %.198 = call i8* @malloc(i64 %.196)
  %.199 = call i64 (i8*, i8*, ...) @sprintf(i8* %.198, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.269, i64 0, i64 0), i8* %.194, i64 %.189)
  %.200 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.201 = bitcast i8* %.200 to %string.676378*
  %.202 = bitcast i8* %.200 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.202, align 8
  %.204 = getelementptr inbounds i8, i8* %.200, i64 8
  %14 = bitcast i8* %.204 to i8**
  store i8* %.198, i8** %14, align 8
  %.206 = getelementptr inbounds i8, i8* %.200, i64 16
  %15 = bitcast i8* %.206 to i64*
  store i64 %.196, i64* %15, align 8
  %.208 = getelementptr inbounds i8, i8* %.200, i64 24
  %16 = bitcast i8* %.208 to i64*
  store i64 %.196, i64* %16, align 8
  ret %string.676378* %.201

.4.endif.endif.endif.endif.endif:                 ; preds = %.4
  %.212 = call %string.676378* @dump_type(%Type.676538* %.2, i1 false)
  ret %string.676378* %.212
}

define %Scope.676628* @TypeChecker_create_scope(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.7, i64 0, i32 1
  %.9 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.8, align 8
  %.10 = call %Module.676696* %.9(%TypeChecker.676716* %.1)
  %.13 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.14 = load i64, i64* %.13, align 8
  %.16 = getelementptr inbounds %Module.676696, %Module.676696* %.10, i64 0, i32 8
  %.17 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.17, i64 0, i32 2
  %.19 = load i64, i64* %.18, align 8
  %.20 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = bitcast i8* %.20 to %Scope.676628*
  %.22 = bitcast i8* %.20 to %Scope_vtable_ty.676629**
  store %Scope_vtable_ty.676629* @Scope_vtable_data, %Scope_vtable_ty.676629** %.22, align 8
  call void @Scope_constructor(%Scope.676628* %.21, i64 %.14, i64 %.19)
  %.28 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.16, align 8
  %.30 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.28, i64 0, i32 0
  %.31 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.30, align 8
  %.32 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.31, i64 0, i32 2
  %.33 = load void (%"Array<Scope>.676703"*, %Scope.676628*)*, void (%"Array<Scope>.676703"*, %Scope.676628*)** %.32, align 8
  call void %.33(%"Array<Scope>.676703"* %.28, %Scope.676628* %.21)
  ret %Scope.676628* %.21
}

define i1 @TypeChecker_is_constant_in_scope(%TypeChecker.676716* %.1, %string.676378* %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.10 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.9, align 8
  %.11 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.10, i64 0, i32 13
  %.12 = load %VarId.676596* (%TypeChecker.676716*, %string.676378*)*, %VarId.676596* (%TypeChecker.676716*, %string.676378*)** %.11, align 8
  %.14 = call %VarId.676596* %.12(%TypeChecker.676716* %.1, %string.676378* %.2)
  %0 = ptrtoint %VarId.676596* %.14 to i64
  %.17 = trunc i64 %0 to i32
  %.19.not = icmp eq i32 %.17, 0
  br i1 %.19.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.22 = getelementptr inbounds %VarId.676596, %VarId.676596* %.14, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 2
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %is_constant.0 = phi i1 [ %.24, %.4.if ], [ false, %.4 ]
  ret i1 %is_constant.0
}

define %VarId.676596* @TypeChecker_get_var_from_current_scope(%TypeChecker.676716* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 2
  %.11 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.10, align 8
  %.12 = call %Scope.676628* %.11(%TypeChecker.676716* %.1)
  %.15 = getelementptr inbounds %Scope.676628, %Scope.676628* %.12, i64 0, i32 2
  %.16 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.15, align 8
  %.17 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.16, i64 0, i32 0
  %.18 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.17, align 8
  %.19 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.18, i64 0, i32 3
  %.20 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.19, align 8
  %.22 = call %VarId.676596* %.20(%"Map<string, VarId>.676630"* %.16, %string.676378* %.2)
  %.25 = getelementptr inbounds %Scope.676628, %Scope.676628* %.12, i64 0, i32 6
  %0 = bitcast %ScopeId.676626** %.25 to i64*
  %.261 = load i64, i64* %0, align 8
  %.27 = trunc i64 %.261 to i32
  %.29 = icmp ne i32 %.27, 0
  %1 = ptrtoint %VarId.676596* %.22 to i64
  %.31 = trunc i64 %1 to i32
  %.33 = icmp eq i32 %.31, 0
  %.34 = and i1 %.29, %.33
  br i1 %.34, label %while.entry.preheader, label %while.exit

while.entry.preheader:                            ; preds = %.4
  %.37 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %while.entry.endif
  %current_scope.0 = phi %Scope.676628* [ %.42, %while.entry.endif ], [ %.12, %while.entry.preheader ]
  %.38 = load %Program.676712*, %Program.676712** %.37, align 8
  %.40 = getelementptr inbounds %Scope.676628, %Scope.676628* %current_scope.0, i64 0, i32 6
  %.41 = load %ScopeId.676626*, %ScopeId.676626** %.40, align 8
  %.42 = call %Scope.676628* @get_scope(%Program.676712* %.38, %ScopeId.676626* %.41)
  %.45 = getelementptr inbounds %Scope.676628, %Scope.676628* %.42, i64 0, i32 2
  %.46 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.45, align 8
  %.47 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.46, i64 0, i32 0
  %.48 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.47, align 8
  %.49 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.48, i64 0, i32 3
  %.50 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.49, align 8
  %.52 = call %VarId.676596* %.50(%"Map<string, VarId>.676630"* %.46, %string.676378* %.2)
  %2 = ptrtoint %VarId.676596* %.52 to i64
  %.55 = trunc i64 %2 to i32
  %.57 = icmp eq i32 %.55, 0
  br i1 %.57, label %while.entry.if, label %while.entry.endif

while.exit:                                       ; preds = %while.entry.endif, %.4
  %value.0 = phi %VarId.676596* [ %.22, %.4 ], [ %value.1, %while.entry.endif ]
  ret %VarId.676596* %value.0

while.entry.if:                                   ; preds = %while.entry
  %.60 = getelementptr inbounds %Scope.676628, %Scope.676628* %.42, i64 0, i32 4
  %.61 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.60, align 8
  %.62 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.61, i64 0, i32 0
  %.63 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.62, align 8
  %.64 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.63, i64 0, i32 3
  %.65 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.64, align 8
  %.67 = call %VarId.676596* %.65(%"Map<string, VarId>.676630"* %.61, %string.676378* %.2)
  br label %while.entry.endif

while.entry.endif:                                ; preds = %while.entry.if, %while.entry
  %value.1 = phi %VarId.676596* [ %.67, %while.entry.if ], [ %.52, %while.entry ]
  %.71 = getelementptr inbounds %Scope.676628, %Scope.676628* %.42, i64 0, i32 6
  %3 = bitcast %ScopeId.676626** %.71 to i64*
  %.722 = load i64, i64* %3, align 8
  %.73 = trunc i64 %.722 to i32
  %.75 = icmp ne i32 %.73, 0
  %4 = ptrtoint %VarId.676596* %value.1 to i64
  %.77 = trunc i64 %4 to i32
  %.79 = icmp eq i32 %.77, 0
  %.80 = and i1 %.75, %.79
  br i1 %.80, label %while.entry, label %while.exit
}

define %Type.676538* @TypeChecker_get_type_from_current_scope(%TypeChecker.676716* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 2
  %.11 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.10, align 8
  %.12 = call %Scope.676628* %.11(%TypeChecker.676716* %.1)
  %.168 = getelementptr inbounds %Scope.676628, %Scope.676628* %.12, i64 0, i32 7
  %.179 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.168, align 8
  %.1810 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.179, i64 0, i32 0
  %.1911 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.1810, align 8
  %.2012 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.1911, i64 0, i32 3
  %.2113 = load %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)*, %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)** %.2012, align 8
  %.2314 = call %Type.676538* %.2113(%"Map<string, Type>.676633"* %.179, %string.676378* %.2)
  %0 = ptrtoint %Type.676538* %.2314 to i64
  %.2615 = trunc i64 %0 to i32
  %.28.not16 = icmp eq i32 %.2615, 0
  br i1 %.28.not16, label %while.entry.endif.lr.ph, label %while.entry.if

while.entry.endif.lr.ph:                          ; preds = %.4
  %.87 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  br label %while.entry.endif

while.entry.if:                                   ; preds = %while.entry.endif.endif.endif.endif, %.4
  %.23.lcssa = phi %Type.676538* [ %.2314, %.4 ], [ %.23, %while.entry.endif.endif.endif.endif ]
  ret %Type.676538* %.23.lcssa

while.entry.endif:                                ; preds = %while.entry.endif.lr.ph, %while.entry.endif.endif.endif.endif
  %current_scope.017 = phi %Scope.676628* [ %.12, %while.entry.endif.lr.ph ], [ %.92, %while.entry.endif.endif.endif.endif ]
  %.33 = getelementptr inbounds %Scope.676628, %Scope.676628* %current_scope.017, i64 0, i32 3
  %.34 = load %"Map<string, ClassId>.676631"*, %"Map<string, ClassId>.676631"** %.33, align 8
  %.35 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.34, i64 0, i32 0
  %.36 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.35, align 8
  %.37 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.36, i64 0, i32 3
  %.38 = load %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)*, %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)** %.37, align 8
  %.40 = call %ClassId.676554* %.38(%"Map<string, ClassId>.676631"* %.34, %string.676378* %.2)
  %1 = ptrtoint %ClassId.676554* %.40 to i64
  %.43 = trunc i64 %1 to i32
  %.45.not = icmp eq i32 %.43, 0
  br i1 %.45.not, label %while.entry.endif.endif, label %while.entry.endif.if

while.entry.endif.if:                             ; preds = %while.entry.endif
  %.48 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.49 = bitcast i8* %.48 to %ObjectType.676562*
  %.50 = bitcast i8* %.48 to %ObjectType_vtable_ty.676563**
  store %ObjectType_vtable_ty.676563* @ObjectType_vtable_data, %ObjectType_vtable_ty.676563** %.50, align 8
  call void @ObjectType_constructor(%ObjectType.676562* %.49, %ClassId.676554* %.40)
  %.53 = bitcast i8* %.48 to %Type.676538*
  ret %Type.676538* %.53

while.entry.endif.endif:                          ; preds = %while.entry.endif
  %.56 = getelementptr inbounds %Scope.676628, %Scope.676628* %current_scope.017, i64 0, i32 5
  %.57 = load %"Map<string, EnumId>.676632"*, %"Map<string, EnumId>.676632"** %.56, align 8
  %.58 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.57, i64 0, i32 0
  %.59 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.58, align 8
  %.60 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.59, i64 0, i32 3
  %.61 = load %EnumId.676556* (%"Map<string, EnumId>.676632"*, %string.676378*)*, %EnumId.676556* (%"Map<string, EnumId>.676632"*, %string.676378*)** %.60, align 8
  %.63 = call %EnumId.676556* %.61(%"Map<string, EnumId>.676632"* %.57, %string.676378* %.2)
  %2 = ptrtoint %EnumId.676556* %.63 to i64
  %.66 = trunc i64 %2 to i32
  %.68.not = icmp eq i32 %.66, 0
  br i1 %.68.not, label %while.entry.endif.endif.endif, label %while.entry.endif.endif.if

while.entry.endif.endif.if:                       ; preds = %while.entry.endif.endif
  %.71 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.72 = bitcast i8* %.71 to %EnumType.676564*
  %.73 = bitcast i8* %.71 to %EnumType_vtable_ty.676565**
  store %EnumType_vtable_ty.676565* @EnumType_vtable_data, %EnumType_vtable_ty.676565** %.73, align 8
  call void @EnumType_constructor(%EnumType.676564* %.72, %EnumId.676556* %.63)
  %.76 = bitcast i8* %.71 to %Type.676538*
  ret %Type.676538* %.76

while.entry.endif.endif.endif:                    ; preds = %while.entry.endif.endif
  %.79 = getelementptr inbounds %Scope.676628, %Scope.676628* %current_scope.017, i64 0, i32 6
  %3 = bitcast %ScopeId.676626** %.79 to i64*
  %.801 = load i64, i64* %3, align 8
  %.81 = trunc i64 %.801 to i32
  %.83 = icmp eq i32 %.81, 0
  br i1 %.83, label %while.entry.endif.endif.endif.if, label %while.entry.endif.endif.endif.endif

while.entry.endif.endif.endif.if:                 ; preds = %while.entry.endif.endif.endif
  %.95 = call %Type.676538* @Type_unknown()
  ret %Type.676538* %.95

while.entry.endif.endif.endif.endif:              ; preds = %while.entry.endif.endif.endif
  %.88 = load %Program.676712*, %Program.676712** %.87, align 8
  %.91 = load %ScopeId.676626*, %ScopeId.676626** %.79, align 8
  %.92 = call %Scope.676628* @get_scope(%Program.676712* %.88, %ScopeId.676626* %.91)
  %.16 = getelementptr inbounds %Scope.676628, %Scope.676628* %.92, i64 0, i32 7
  %.17 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.16, align 8
  %.18 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.17, i64 0, i32 0
  %.19 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.18, align 8
  %.20 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.19, i64 0, i32 3
  %.21 = load %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)*, %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)** %.20, align 8
  %.23 = call %Type.676538* %.21(%"Map<string, Type>.676633"* %.17, %string.676378* %.2)
  %4 = ptrtoint %Type.676538* %.23 to i64
  %.26 = trunc i64 %4 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %while.entry.endif, label %while.entry.if
}

define %Scope.676628* @TypeChecker_create_child_scope_within_current_scope(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.7, i64 0, i32 11
  %.9 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.8, align 8
  %.10 = call %Scope.676628* %.9(%TypeChecker.676716* %.1)
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.676626** %.14 to i64*
  %.151 = load i64, i64* %0, align 8
  %.16 = getelementptr inbounds %Scope.676628, %Scope.676628* %.10, i64 0, i32 6
  %1 = bitcast %ScopeId.676626** %.16 to i64*
  store i64 %.151, i64* %1, align 8
  ret %Scope.676628* %.10
}

define void @TypeChecker_error(%TypeChecker.676716* nocapture readonly %.1, i64 %.2, %string.676378* %.3, %FloRange.676382* %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 7
  %.13 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.14 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.13, i64 0, i32 6
  %.15 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.14, align 8
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %FloError.676384*
  %.21 = bitcast i8* %.19 to %FloError_vtable_ty.676385**
  store %FloError_vtable_ty.676385* @FloError_vtable_data, %FloError_vtable_ty.676385** %.21, align 8
  call void @FloError_constructor(%FloError.676384* %.20, i64 %.2, %string.676378* %.3, %FloRange.676382* %.4)
  %.24 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.15, i64 0, i32 0
  %.25 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.24, align 8
  %.26 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.25, i64 0, i32 2
  %.27 = load void (%"Array<FloError>.676397"*, %FloError.676384*)*, void (%"Array<FloError>.676397"*, %FloError.676384*)** %.26, align 8
  call void %.27(%"Array<FloError>.676397"* %.15, %FloError.676384* %.20)
  ret void
}

; Function Attrs: norecurse nounwind readonly
define i1 @TypeChecker_has_errored(%TypeChecker.676716* nocapture readonly %.1) #4 {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 7
  %.7 = load %Compiler.676394*, %Compiler.676394** %.6, align 8
  %.8 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.7, i64 0, i32 6
  %.9 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.9, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.12 = icmp sgt i64 %.11, 0
  ret i1 %.12
}

define %Program.676712* @TypeChecker_check(%TypeChecker.676716* %.1, %ModuleAST.676520* %.2, %Compiler.676394* %.3, %string.676378* %.4) {
.6:
  %.13 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 7
  store %Compiler.676394* %.3, %Compiler.676394** %.13, align 8
  %.16 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.17 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.16, align 8
  %.18 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.17, i64 0, i32 20
  %.19 = load void (%TypeChecker.676716*)*, void (%TypeChecker.676716*)** %.18, align 8
  call void %.19(%TypeChecker.676716* %.1)
  %.23 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.16, align 8
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.23, i64 0, i32 17
  %.25 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.24, align 8
  %.26 = call i1 %.25(%TypeChecker.676716* %.1)
  br i1 %.26, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  ret %Program.676712* null

.6.endif:                                         ; preds = %.6
  %.31 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.16, align 8
  %.32 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.31, i64 0, i32 19
  %.33 = load %Module.676696* (%TypeChecker.676716*, %ModuleAST.676520*, %string.676378*)*, %Module.676696* (%TypeChecker.676716*, %ModuleAST.676520*, %string.676378*)** %.32, align 8
  %.36 = call %Module.676696* %.33(%TypeChecker.676716* %.1, %ModuleAST.676520* %.2, %string.676378* %.4)
  %.38 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.39 = load %Program.676712*, %Program.676712** %.38, align 8
  ret %Program.676712* %.39
}

define %Module.676696* @TypeChecker_check_module(%TypeChecker.676716* %.1, %ModuleAST.676520* nocapture readonly %.2, %string.676378* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.676626** %.14 to i64*
  %.151 = load i64, i64* %0, align 8
  %.18 = call dereferenceable_or_null(96) i8* @malloc(i64 96)
  %.19 = bitcast i8* %.18 to %Module.676696*
  %.20 = bitcast i8* %.18 to %Module_vtable_ty.676697**
  store %Module_vtable_ty.676697* @Module_vtable_data, %Module_vtable_ty.676697** %.20, align 8
  call void @Module_constructor(%Module.676696* %.19)
  %.26 = getelementptr inbounds i8, i8* %.18, i64 16
  %1 = bitcast i8* %.26 to %string.676378**
  store %string.676378* %.3, %string.676378** %1, align 8
  %.30 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.31 = load %Program.676712*, %Program.676712** %.30, align 8
  %.32 = getelementptr inbounds %Program.676712, %Program.676712* %.31, i64 0, i32 1
  %.33 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.32, align 8
  %.34 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.33, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  store i64 %.35, i64* %.10, align 8
  %.42 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.32, align 8
  %.44 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.42, i64 0, i32 0
  %.45 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.44, align 8
  %.46 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.45, i64 0, i32 2
  %.47 = load void (%"Array<Module>.676714"*, %Module.676696*)*, void (%"Array<Module>.676714"*, %Module.676696*)** %.46, align 8
  call void %.47(%"Array<Module>.676714"* %.42, %Module.676696* %.19)
  %.50 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.51 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.52 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.51, i64 0, i32 11
  %.53 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.52, align 8
  %.54 = call %Scope.676628* %.53(%TypeChecker.676716* %.1)
  %.58 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.59 = bitcast i8* %.58 to %ConstId.676602*
  %.60 = bitcast i8* %.58 to %ConstId_vtable_ty.676603**
  store %ConstId_vtable_ty.676603* @ConstId_vtable_data, %ConstId_vtable_ty.676603** %.60, align 8
  call void @ConstId_constructor(%ConstId.676602* %.59, i64 -1, i64 -1)
  %.65 = getelementptr inbounds %Scope.676628, %Scope.676628* %.54, i64 0, i32 2
  %.66 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.65, align 8
  %.67 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.66, i64 0, i32 0
  %.68 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.67, align 8
  %.69 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.68, i64 0, i32 2
  %.70 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.69, align 8
  %.71 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.72 = bitcast i8* %.71 to %string.676378*
  %.72.repack = bitcast i8* %.71 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.72.repack, align 8
  %.72.repack2 = getelementptr inbounds i8, i8* %.71, i64 8
  %2 = bitcast i8* %.72.repack2 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.270, i64 0, i64 0), i8** %2, align 8
  %.72.repack3 = getelementptr inbounds i8, i8* %.71, i64 16
  %3 = bitcast i8* %.72.repack3 to i64*
  store i64 4, i64* %3, align 8
  %.72.repack4 = getelementptr inbounds i8, i8* %.71, i64 24
  %4 = bitcast i8* %.72.repack4 to i64*
  store i64 4, i64* %4, align 8
  %.75 = bitcast i8* %.58 to %VarId.676596*
  call void %.70(%"Map<string, VarId>.676630"* %.66, %string.676378* %.72, %VarId.676596* %.75)
  %.79 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.65, align 8
  %.80 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.79, i64 0, i32 0
  %.81 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.80, align 8
  %.82 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.81, i64 0, i32 2
  %.83 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.82, align 8
  %.84 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.85 = bitcast i8* %.84 to %string.676378*
  %.85.repack = bitcast i8* %.84 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.85.repack, align 8
  %.85.repack5 = getelementptr inbounds i8, i8* %.84, i64 8
  %5 = bitcast i8* %.85.repack5 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.271, i64 0, i64 0), i8** %5, align 8
  %.85.repack6 = getelementptr inbounds i8, i8* %.84, i64 16
  %6 = bitcast i8* %.85.repack6 to i64*
  store i64 5, i64* %6, align 8
  %.85.repack7 = getelementptr inbounds i8, i8* %.84, i64 24
  %7 = bitcast i8* %.85.repack7 to i64*
  store i64 5, i64* %7, align 8
  call void %.83(%"Map<string, VarId>.676630"* %.79, %string.676378* %.85, %VarId.676596* %.75)
  %.92 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.65, align 8
  %.93 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.92, i64 0, i32 0
  %.94 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.93, align 8
  %.95 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.94, i64 0, i32 2
  %.96 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.95, align 8
  %.97 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.98 = bitcast i8* %.97 to %string.676378*
  %.98.repack = bitcast i8* %.97 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.98.repack, align 8
  %.98.repack8 = getelementptr inbounds i8, i8* %.97, i64 8
  %8 = bitcast i8* %.98.repack8 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.272, i64 0, i64 0), i8** %8, align 8
  %.98.repack9 = getelementptr inbounds i8, i8* %.97, i64 16
  %9 = bitcast i8* %.98.repack9 to i64*
  store i64 4, i64* %9, align 8
  %.98.repack10 = getelementptr inbounds i8, i8* %.97, i64 24
  %10 = bitcast i8* %.98.repack10 to i64*
  store i64 4, i64* %10, align 8
  call void %.96(%"Map<string, VarId>.676630"* %.92, %string.676378* %.98, %VarId.676596* %.75)
  %.105 = getelementptr inbounds %Scope.676628, %Scope.676628* %.54, i64 0, i32 1
  %11 = bitcast %ScopeId.676626** %.105 to i64*
  %.10611 = load i64, i64* %11, align 8
  store i64 %.10611, i64* %0, align 8
  %.111 = load i64, i64* %.10, align 8
  %.112 = icmp sgt i64 %.111, 0
  br i1 %.112, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.116 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.117 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.116, i64 0, i32 32
  %.118 = load void (%TypeChecker.676716*, %Module.676696*)*, void (%TypeChecker.676716*, %Module.676696*)** %.117, align 8
  %.121 = load %Program.676712*, %Program.676712** %.30, align 8
  %.122 = getelementptr inbounds %Program.676712, %Program.676712* %.121, i64 0, i32 1
  %.123 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.122, align 8
  %.124 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.123, i64 0, i32 0
  %.125 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.124, align 8
  %.126 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.125, i64 0, i32 5
  %.127 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.126, align 8
  %.128 = call %Module.676696* %.127(%"Array<Module>.676714"* %.123, i64 0)
  call void %.118(%TypeChecker.676716* %.1, %Module.676696* %.128)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.135 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 3
  %i = alloca i64, align 8
  %12 = bitcast %ClassId.676554** %.135 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  store i64 0, i64* %i, align 8
  %.145 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 4
  %.14684 = load %"Array<ImportNode>.676525"*, %"Array<ImportNode>.676525"** %.145, align 8
  %.14785 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.14684, i64 0, i32 2
  %.14886 = load i64, i64* %.14785, align 8
  %.14987 = icmp sgt i64 %.14886, 0
  br i1 %.14987, label %for.body, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body.endif, %.5.endif
  store i64 0, i64* %i, align 8
  %.186 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 3
  %.18777 = load %"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"** %.186, align 8
  %.18878 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.18777, i64 0, i32 2
  %.18979 = load i64, i64* %.18878, align 8
  %.19080 = icmp sgt i64 %.18979, 0
  br i1 %.19080, label %for.body.1, label %for.cond.2.preheader

for.body:                                         ; preds = %.5.endif, %for.body.endif
  %.14689 = phi %"Array<ImportNode>.676525"* [ %.146, %for.body.endif ], [ %.14684, %.5.endif ]
  %storemerge88 = phi i64 [ %.178, %for.body.endif ], [ 0, %.5.endif ]
  %.153 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.154 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.153, i64 0, i32 33
  %.155 = load void (%TypeChecker.676716*, %ImportNode.676514*)*, void (%TypeChecker.676716*, %ImportNode.676514*)** %.154, align 8
  %.160 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.14689, i64 0, i32 0
  %.161 = load %"Array<ImportNode>_vtable_ty.676532"*, %"Array<ImportNode>_vtable_ty.676532"** %.160, align 8
  %.162 = getelementptr inbounds %"Array<ImportNode>_vtable_ty.676532", %"Array<ImportNode>_vtable_ty.676532"* %.161, i64 0, i32 5
  %.163 = load %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)*, %ImportNode.676514* (%"Array<ImportNode>.676525"*, i64)** %.162, align 8
  %.164 = call %ImportNode.676514* %.163(%"Array<ImportNode>.676525"* %.14689, i64 %storemerge88)
  call void %.155(%TypeChecker.676716* %.1, %ImportNode.676514* %.164)
  %.168 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.169 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.168, i64 0, i32 17
  %.170 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.169, align 8
  %.171 = call i1 %.170(%TypeChecker.676716* %.1)
  br i1 %.171, label %for.body.if, label %for.body.endif

for.body.if:                                      ; preds = %for.body, %for.end.6, %for.end.2
  ret %Module.676696* null

for.body.endif:                                   ; preds = %for.body
  %.177 = load i64, i64* %i, align 8
  %.178 = add i64 %.177, 1
  store i64 %.178, i64* %i, align 8
  %.146 = load %"Array<ImportNode>.676525"*, %"Array<ImportNode>.676525"** %.145, align 8
  %.147 = getelementptr inbounds %"Array<ImportNode>.676525", %"Array<ImportNode>.676525"* %.146, i64 0, i32 2
  %.148 = load i64, i64* %.147, align 8
  %.149 = icmp slt i64 %.178, %.148
  br i1 %.149, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  store i64 0, i64* %i, align 8
  %.219 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 2
  %.22067 = load %"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"** %.219, align 8
  %.22168 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.22067, i64 0, i32 2
  %.22269 = load i64, i64* %.22168, align 8
  %.22370 = icmp sgt i64 %.22269, 0
  %.22771 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  br i1 %.22370, label %for.body.2, label %for.end.2

for.body.1:                                       ; preds = %for.cond.1.preheader, %for.body.1
  %.18782 = phi %"Array<EnumNode>.676524"* [ %.187, %for.body.1 ], [ %.18777, %for.cond.1.preheader ]
  %storemerge1281 = phi i64 [ %.211, %for.body.1 ], [ 0, %for.cond.1.preheader ]
  %.194 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.195 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.194, i64 0, i32 35
  %.196 = load void (%TypeChecker.676716*, %EnumNode.676510*)*, void (%TypeChecker.676716*, %EnumNode.676510*)** %.195, align 8
  %.201 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.18782, i64 0, i32 0
  %.202 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.201, align 8
  %.203 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.202, i64 0, i32 5
  %.204 = load %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)*, %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)** %.203, align 8
  %.205 = call %EnumNode.676510* %.204(%"Array<EnumNode>.676524"* %.18782, i64 %storemerge1281)
  call void %.196(%TypeChecker.676716* %.1, %EnumNode.676510* %.205)
  %.210 = load i64, i64* %i, align 8
  %.211 = add i64 %.210, 1
  store i64 %.211, i64* %i, align 8
  %.187 = load %"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"** %.186, align 8
  %.188 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.187, i64 0, i32 2
  %.189 = load i64, i64* %.188, align 8
  %.190 = icmp slt i64 %.211, %.189
  br i1 %.190, label %for.body.1, label %for.cond.2.preheader

for.body.2:                                       ; preds = %for.cond.2.preheader, %for.body.2
  %.22774 = phi %TypeChecker_vtable_ty.676717* [ %.227, %for.body.2 ], [ %.22771, %for.cond.2.preheader ]
  %.22073 = phi %"Array<ClassDeclarationNode>.676523"* [ %.220, %for.body.2 ], [ %.22067, %for.cond.2.preheader ]
  %storemerge1372 = phi i64 [ %.244, %for.body.2 ], [ 0, %for.cond.2.preheader ]
  %.228 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.22774, i64 0, i32 36
  %.229 = load void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)** %.228, align 8
  %.234 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.22073, i64 0, i32 0
  %.235 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.234, align 8
  %.236 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.235, i64 0, i32 5
  %.237 = load %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)*, %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)** %.236, align 8
  %.238 = call %ClassDeclarationNode.676500* %.237(%"Array<ClassDeclarationNode>.676523"* %.22073, i64 %storemerge1372)
  call void %.229(%TypeChecker.676716* %.1, %ClassDeclarationNode.676500* %.238)
  %.243 = load i64, i64* %i, align 8
  %.244 = add i64 %.243, 1
  store i64 %.244, i64* %i, align 8
  %.220 = load %"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"** %.219, align 8
  %.221 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.220, i64 0, i32 2
  %.222 = load i64, i64* %.221, align 8
  %.223 = icmp slt i64 %.244, %.222
  %.227 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  br i1 %.223, label %for.body.2, label %for.end.2

for.end.2:                                        ; preds = %for.body.2, %for.cond.2.preheader
  %.227.lcssa = phi %TypeChecker_vtable_ty.676717* [ %.22771, %for.cond.2.preheader ], [ %.227, %for.body.2 ]
  %.250 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.227.lcssa, i64 0, i32 17
  %.251 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.250, align 8
  %.252 = call i1 %.251(%TypeChecker.676716* %.1)
  br i1 %.252, label %for.body.if, label %for.cond.3.preheader

for.cond.3.preheader:                             ; preds = %for.end.2
  store i64 0, i64* %i, align 8
  %.260 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 7
  %.26161 = load %"Array<TypeAliasNode>.676528"*, %"Array<TypeAliasNode>.676528"** %.260, align 8
  %.26262 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.26161, i64 0, i32 2
  %.26363 = load i64, i64* %.26262, align 8
  %.26464 = icmp sgt i64 %.26363, 0
  br i1 %.26464, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.339 = getelementptr inbounds %Scope.676628, %Scope.676628* %.54, i64 0, i32 7
  br label %for.body.3

for.cond.4.preheader:                             ; preds = %for.body.3.endif, %for.cond.3.preheader
  store i64 0, i64* %i, align 8
  %.360 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 5
  %.36155 = load %"Array<ConstDeclarationStatement>.676526"*, %"Array<ConstDeclarationStatement>.676526"** %.360, align 8
  %.36256 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.36155, i64 0, i32 2
  %.36357 = load i64, i64* %.36256, align 8
  %.36458 = icmp sgt i64 %.36357, 0
  br i1 %.36458, label %for.body.4, label %for.cond.5.preheader

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3.endif
  %.26166 = phi %"Array<TypeAliasNode>.676528"* [ %.26161, %for.body.3.lr.ph ], [ %.261, %for.body.3.endif ]
  %storemerge1465 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.352, %for.body.3.endif ]
  %.270 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.26166, i64 0, i32 0
  %.271 = load %"Array<TypeAliasNode>_vtable_ty.676535"*, %"Array<TypeAliasNode>_vtable_ty.676535"** %.270, align 8
  %.272 = getelementptr inbounds %"Array<TypeAliasNode>_vtable_ty.676535", %"Array<TypeAliasNode>_vtable_ty.676535"* %.271, i64 0, i32 5
  %.273 = load %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)*, %TypeAliasNode.676518* (%"Array<TypeAliasNode>.676528"*, i64)** %.272, align 8
  %.274 = call %TypeAliasNode.676518* %.273(%"Array<TypeAliasNode>.676528"* %.26166, i64 %storemerge1465)
  %.278 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.279 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.278, i64 0, i32 44
  %.280 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.279, align 8
  %.282 = getelementptr inbounds %TypeAliasNode.676518, %TypeAliasNode.676518* %.274, i64 0, i32 2
  %.283 = load %TypeNode.676426*, %TypeNode.676426** %.282, align 8
  %.284 = call %Type.676538* %.280(%TypeChecker.676716* %.1, %TypeNode.676426* %.283)
  %.287 = getelementptr inbounds %TypeAliasNode.676518, %TypeAliasNode.676518* %.274, i64 0, i32 1
  %.2882122 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.287, align 8
  %.291 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.2882122, i64 0, i32 3
  %13 = bitcast %string.676378** %.291 to i64*
  %.29223 = load i64, i64* %13, align 8
  %alias_name = alloca %string.676378*, align 8
  %14 = bitcast %string.676378** %alias_name to i64*
  store i64 %.29223, i64* %14, align 8
  %.296 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.297 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.296, i64 0, i32 14
  %.298 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.297, align 8
  %.299.cast = inttoptr i64 %.29223 to %string.676378*
  %.300 = call %Type.676538* %.298(%TypeChecker.676716* %.1, %string.676378* %.299.cast)
  %.301 = getelementptr inbounds %Type.676538, %Type.676538* %.300, i64 0, i32 1
  %.302 = load i64, i64* %.301, align 8
  %.303.not = icmp eq i64 %.302, 21
  br i1 %.303.not, label %for.body.3.endif, label %for.body.3.if

for.body.3.if:                                    ; preds = %for.body.3
  %.307 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.308 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.307, i64 0, i32 16
  %.309 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.308, align 8
  %.310 = load %string.676378*, %string.676378** %alias_name, align 8
  %.311 = getelementptr inbounds %string.676378, %string.676378* %.310, i64 0, i32 0
  %.312 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.311, align 8
  %.313 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.312, i64 0, i32 11
  %.314 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.313, align 8
  %.315 = call i8* %.314(%string.676378* %.310)
  %.317 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.273, i64 0, i64 0), i8* %.315)
  %.319 = call i8* @malloc(i64 %.317)
  %.320 = call i64 (i8*, i8*, ...) @sprintf(i8* %.319, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.273, i64 0, i64 0), i8* %.315)
  %.321 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.322 = bitcast i8* %.321 to %string.676378*
  %.323 = bitcast i8* %.321 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.323, align 8
  %.325 = getelementptr inbounds i8, i8* %.321, i64 8
  %15 = bitcast i8* %.325 to i8**
  store i8* %.319, i8** %15, align 8
  %.327 = getelementptr inbounds i8, i8* %.321, i64 16
  %16 = bitcast i8* %.327 to i64*
  store i64 %.317, i64* %16, align 8
  %.329 = getelementptr inbounds i8, i8* %.321, i64 24
  %17 = bitcast i8* %.329 to i64*
  store i64 %.317, i64* %17, align 8
  %.333 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.287, align 8
  %.334 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.333, i64 0, i32 2
  %.335 = load %FloRange.676382*, %FloRange.676382** %.334, align 8
  call void %.309(%TypeChecker.676716* %.1, i64 1, %string.676378* %.322, %FloRange.676382* %.335)
  ret %Module.676696* null

for.body.3.endif:                                 ; preds = %for.body.3
  %.340 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.339, align 8
  %.341 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.340, i64 0, i32 0
  %.342 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.341, align 8
  %.343 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.342, i64 0, i32 2
  %.344 = load void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)*, void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)** %.343, align 8
  %.345 = load %string.676378*, %string.676378** %alias_name, align 8
  call void %.344(%"Map<string, Type>.676633"* %.340, %string.676378* %.345, %Type.676538* %.284)
  %.351 = load i64, i64* %i, align 8
  %.352 = add i64 %.351, 1
  store i64 %.352, i64* %i, align 8
  %.261 = load %"Array<TypeAliasNode>.676528"*, %"Array<TypeAliasNode>.676528"** %.260, align 8
  %.262 = getelementptr inbounds %"Array<TypeAliasNode>.676528", %"Array<TypeAliasNode>.676528"* %.261, i64 0, i32 2
  %.263 = load i64, i64* %.262, align 8
  %.264 = icmp slt i64 %.352, %.263
  br i1 %.264, label %for.body.3, label %for.cond.4.preheader

for.cond.5.preheader:                             ; preds = %for.body.4, %for.cond.4.preheader
  store i64 0, i64* %i, align 8
  %.393 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 6
  %.39449 = load %"Array<VarDeclarationStatement>.676527"*, %"Array<VarDeclarationStatement>.676527"** %.393, align 8
  %.39550 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.39449, i64 0, i32 2
  %.39651 = load i64, i64* %.39550, align 8
  %.39752 = icmp sgt i64 %.39651, 0
  br i1 %.39752, label %for.body.5, label %for.cond.6.preheader

for.body.4:                                       ; preds = %for.cond.4.preheader, %for.body.4
  %.36160 = phi %"Array<ConstDeclarationStatement>.676526"* [ %.361, %for.body.4 ], [ %.36155, %for.cond.4.preheader ]
  %storemerge1559 = phi i64 [ %.385, %for.body.4 ], [ 0, %for.cond.4.preheader ]
  %.368 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.369 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.368, i64 0, i32 24
  %.370 = load void (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)*, void (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)** %.369, align 8
  %.375 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.36160, i64 0, i32 0
  %.376 = load %"Array<ConstDeclarationStatement>_vtable_ty.676533"*, %"Array<ConstDeclarationStatement>_vtable_ty.676533"** %.375, align 8
  %.377 = getelementptr inbounds %"Array<ConstDeclarationStatement>_vtable_ty.676533", %"Array<ConstDeclarationStatement>_vtable_ty.676533"* %.376, i64 0, i32 5
  %.378 = load %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)*, %ConstDeclarationStatement.676486* (%"Array<ConstDeclarationStatement>.676526"*, i64)** %.377, align 8
  %.379 = call %ConstDeclarationStatement.676486* %.378(%"Array<ConstDeclarationStatement>.676526"* %.36160, i64 %storemerge1559)
  call void %.370(%TypeChecker.676716* %.1, %ConstDeclarationStatement.676486* %.379)
  %.384 = load i64, i64* %i, align 8
  %.385 = add i64 %.384, 1
  store i64 %.385, i64* %i, align 8
  %.361 = load %"Array<ConstDeclarationStatement>.676526"*, %"Array<ConstDeclarationStatement>.676526"** %.360, align 8
  %.362 = getelementptr inbounds %"Array<ConstDeclarationStatement>.676526", %"Array<ConstDeclarationStatement>.676526"* %.361, i64 0, i32 2
  %.363 = load i64, i64* %.362, align 8
  %.364 = icmp slt i64 %.385, %.363
  br i1 %.364, label %for.body.4, label %for.cond.5.preheader

for.cond.6.preheader:                             ; preds = %for.body.5, %for.cond.5.preheader
  store i64 0, i64* %i, align 8
  %.426 = getelementptr inbounds %ModuleAST.676520, %ModuleAST.676520* %.2, i64 0, i32 1
  %.42740 = load %"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"** %.426, align 8
  %.42841 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.42740, i64 0, i32 2
  %.42942 = load i64, i64* %.42841, align 8
  %.43043 = icmp sgt i64 %.42942, 0
  %.43444 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  br i1 %.43043, label %for.body.6, label %for.end.6

for.body.5:                                       ; preds = %for.cond.5.preheader, %for.body.5
  %.39454 = phi %"Array<VarDeclarationStatement>.676527"* [ %.394, %for.body.5 ], [ %.39449, %for.cond.5.preheader ]
  %storemerge1653 = phi i64 [ %.418, %for.body.5 ], [ 0, %for.cond.5.preheader ]
  %.401 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.402 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.401, i64 0, i32 25
  %.403 = load void (%TypeChecker.676716*, %VarDeclarationStatement.676484*)*, void (%TypeChecker.676716*, %VarDeclarationStatement.676484*)** %.402, align 8
  %.408 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.39454, i64 0, i32 0
  %.409 = load %"Array<VarDeclarationStatement>_vtable_ty.676534"*, %"Array<VarDeclarationStatement>_vtable_ty.676534"** %.408, align 8
  %.410 = getelementptr inbounds %"Array<VarDeclarationStatement>_vtable_ty.676534", %"Array<VarDeclarationStatement>_vtable_ty.676534"* %.409, i64 0, i32 5
  %.411 = load %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)*, %VarDeclarationStatement.676484* (%"Array<VarDeclarationStatement>.676527"*, i64)** %.410, align 8
  %.412 = call %VarDeclarationStatement.676484* %.411(%"Array<VarDeclarationStatement>.676527"* %.39454, i64 %storemerge1653)
  call void %.403(%TypeChecker.676716* %.1, %VarDeclarationStatement.676484* %.412)
  %.417 = load i64, i64* %i, align 8
  %.418 = add i64 %.417, 1
  store i64 %.418, i64* %i, align 8
  %.394 = load %"Array<VarDeclarationStatement>.676527"*, %"Array<VarDeclarationStatement>.676527"** %.393, align 8
  %.395 = getelementptr inbounds %"Array<VarDeclarationStatement>.676527", %"Array<VarDeclarationStatement>.676527"* %.394, i64 0, i32 2
  %.396 = load i64, i64* %.395, align 8
  %.397 = icmp slt i64 %.418, %.396
  br i1 %.397, label %for.body.5, label %for.cond.6.preheader

for.body.6:                                       ; preds = %for.cond.6.preheader, %for.body.6
  %.43447 = phi %TypeChecker_vtable_ty.676717* [ %.434, %for.body.6 ], [ %.43444, %for.cond.6.preheader ]
  %.42746 = phi %"Array<FunctionDeclarationNode>.676522"* [ %.427, %for.body.6 ], [ %.42740, %for.cond.6.preheader ]
  %storemerge1745 = phi i64 [ %.451, %for.body.6 ], [ 0, %for.cond.6.preheader ]
  %.435 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.43447, i64 0, i32 37
  %.436 = load void (%TypeChecker.676716*, %FunctionDeclarationNode.676490*)*, void (%TypeChecker.676716*, %FunctionDeclarationNode.676490*)** %.435, align 8
  %.441 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.42746, i64 0, i32 0
  %.442 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.441, align 8
  %.443 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.442, i64 0, i32 5
  %.444 = load %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)*, %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)** %.443, align 8
  %.445 = call %FunctionDeclarationNode.676490* %.444(%"Array<FunctionDeclarationNode>.676522"* %.42746, i64 %storemerge1745)
  call void %.436(%TypeChecker.676716* %.1, %FunctionDeclarationNode.676490* %.445)
  %.450 = load i64, i64* %i, align 8
  %.451 = add i64 %.450, 1
  store i64 %.451, i64* %i, align 8
  %.427 = load %"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"** %.426, align 8
  %.428 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.427, i64 0, i32 2
  %.429 = load i64, i64* %.428, align 8
  %.430 = icmp slt i64 %.451, %.429
  %.434 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  br i1 %.430, label %for.body.6, label %for.end.6

for.end.6:                                        ; preds = %for.body.6, %for.cond.6.preheader
  %.434.lcssa = phi %TypeChecker_vtable_ty.676717* [ %.43444, %for.cond.6.preheader ], [ %.434, %for.body.6 ]
  %.457 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.434.lcssa, i64 0, i32 17
  %.458 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.457, align 8
  %.459 = call i1 %.458(%TypeChecker.676716* %.1)
  br i1 %.459, label %for.body.if, label %for.cond.7.preheader

for.cond.7.preheader:                             ; preds = %for.end.6
  store i64 0, i64* %i, align 8
  %.46834 = load %"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"** %.219, align 8
  %.46935 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.46834, i64 0, i32 2
  %.47036 = load i64, i64* %.46935, align 8
  %.47137 = icmp sgt i64 %.47036, 0
  br i1 %.47137, label %for.body.7, label %for.cond.8.preheader

for.cond.8.preheader:                             ; preds = %for.body.7, %for.cond.7.preheader
  store i64 0, i64* %i, align 8
  %.50129 = load %"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"** %.186, align 8
  %.50230 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.50129, i64 0, i32 2
  %.50331 = load i64, i64* %.50230, align 8
  %.50432 = icmp sgt i64 %.50331, 0
  br i1 %.50432, label %for.body.8.lr.ph, label %for.cond.9.preheader

for.body.8.lr.ph:                                 ; preds = %for.cond.8.preheader
  %.513 = getelementptr inbounds i8, i8* %.18, i64 56
  %18 = bitcast i8* %.513 to %"Array<Enum>.676702"**
  br label %for.body.8

for.body.7:                                       ; preds = %for.cond.7.preheader, %for.body.7
  %.46839 = phi %"Array<ClassDeclarationNode>.676523"* [ %.468, %for.body.7 ], [ %.46834, %for.cond.7.preheader ]
  %storemerge1838 = phi i64 [ %.492, %for.body.7 ], [ 0, %for.cond.7.preheader ]
  %.475 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.476 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.475, i64 0, i32 42
  %.477 = load void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)** %.476, align 8
  %.482 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.46839, i64 0, i32 0
  %.483 = load %"Array<ClassDeclarationNode>_vtable_ty.676530"*, %"Array<ClassDeclarationNode>_vtable_ty.676530"** %.482, align 8
  %.484 = getelementptr inbounds %"Array<ClassDeclarationNode>_vtable_ty.676530", %"Array<ClassDeclarationNode>_vtable_ty.676530"* %.483, i64 0, i32 5
  %.485 = load %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)*, %ClassDeclarationNode.676500* (%"Array<ClassDeclarationNode>.676523"*, i64)** %.484, align 8
  %.486 = call %ClassDeclarationNode.676500* %.485(%"Array<ClassDeclarationNode>.676523"* %.46839, i64 %storemerge1838)
  call void %.477(%TypeChecker.676716* %.1, %ClassDeclarationNode.676500* %.486)
  %.491 = load i64, i64* %i, align 8
  %.492 = add i64 %.491, 1
  store i64 %.492, i64* %i, align 8
  %.468 = load %"Array<ClassDeclarationNode>.676523"*, %"Array<ClassDeclarationNode>.676523"** %.219, align 8
  %.469 = getelementptr inbounds %"Array<ClassDeclarationNode>.676523", %"Array<ClassDeclarationNode>.676523"* %.468, i64 0, i32 2
  %.470 = load i64, i64* %.469, align 8
  %.471 = icmp slt i64 %.492, %.470
  br i1 %.471, label %for.body.7, label %for.cond.8.preheader

for.cond.9.preheader:                             ; preds = %for.body.8, %for.cond.8.preheader
  store i64 0, i64* %i, align 8
  %.54324 = load %"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"** %.426, align 8
  %.54425 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.54324, i64 0, i32 2
  %.54526 = load i64, i64* %.54425, align 8
  %.54627 = icmp sgt i64 %.54526, 0
  br i1 %.54627, label %for.body.9.lr.ph, label %for.end.9

for.body.9.lr.ph:                                 ; preds = %for.cond.9.preheader
  %.555 = getelementptr inbounds i8, i8* %.18, i64 48
  %19 = bitcast i8* %.555 to %"Array<Function>.676701"**
  br label %for.body.9

for.body.8:                                       ; preds = %for.body.8.lr.ph, %for.body.8
  %storemerge1933 = phi i64 [ 0, %for.body.8.lr.ph ], [ %.534, %for.body.8 ]
  %.508 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.509 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.508, i64 0, i32 38
  %.510 = load void (%TypeChecker.676716*, %Enum.676682*, %EnumNode.676510*)*, void (%TypeChecker.676716*, %Enum.676682*, %EnumNode.676510*)** %.509, align 8
  %.514 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %18, align 8
  %.515 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.514, i64 0, i32 0
  %.516 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.515, align 8
  %.517 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.516, i64 0, i32 5
  %.518 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.517, align 8
  %.519 = call %Enum.676682* %.518(%"Array<Enum>.676702"* %.514, i64 %storemerge1933)
  %.520 = load i64, i64* %i, align 8
  %.523 = load %"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"** %.186, align 8
  %.524 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.523, i64 0, i32 0
  %.525 = load %"Array<EnumNode>_vtable_ty.676531"*, %"Array<EnumNode>_vtable_ty.676531"** %.524, align 8
  %.526 = getelementptr inbounds %"Array<EnumNode>_vtable_ty.676531", %"Array<EnumNode>_vtable_ty.676531"* %.525, i64 0, i32 5
  %.527 = load %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)*, %EnumNode.676510* (%"Array<EnumNode>.676524"*, i64)** %.526, align 8
  %.528 = call %EnumNode.676510* %.527(%"Array<EnumNode>.676524"* %.523, i64 %.520)
  call void %.510(%TypeChecker.676716* %.1, %Enum.676682* %.519, %EnumNode.676510* %.528)
  %.533 = load i64, i64* %i, align 8
  %.534 = add i64 %.533, 1
  store i64 %.534, i64* %i, align 8
  %.501 = load %"Array<EnumNode>.676524"*, %"Array<EnumNode>.676524"** %.186, align 8
  %.502 = getelementptr inbounds %"Array<EnumNode>.676524", %"Array<EnumNode>.676524"* %.501, i64 0, i32 2
  %.503 = load i64, i64* %.502, align 8
  %.504 = icmp slt i64 %.534, %.503
  br i1 %.504, label %for.body.8, label %for.cond.9.preheader

for.body.9:                                       ; preds = %for.body.9.lr.ph, %for.body.9
  %storemerge2028 = phi i64 [ 0, %for.body.9.lr.ph ], [ %.576, %for.body.9 ]
  %.550 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.551 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.550, i64 0, i32 43
  %.552 = load void (%TypeChecker.676716*, %Function.676656*, %FunctionDeclarationNode.676490*)*, void (%TypeChecker.676716*, %Function.676656*, %FunctionDeclarationNode.676490*)** %.551, align 8
  %.556 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %19, align 8
  %.557 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.556, i64 0, i32 0
  %.558 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.557, align 8
  %.559 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.558, i64 0, i32 5
  %.560 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.559, align 8
  %.561 = call %Function.676656* %.560(%"Array<Function>.676701"* %.556, i64 %storemerge2028)
  %.562 = load i64, i64* %i, align 8
  %.565 = load %"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"** %.426, align 8
  %.566 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.565, i64 0, i32 0
  %.567 = load %"Array<FunctionDeclarationNode>_vtable_ty.676529"*, %"Array<FunctionDeclarationNode>_vtable_ty.676529"** %.566, align 8
  %.568 = getelementptr inbounds %"Array<FunctionDeclarationNode>_vtable_ty.676529", %"Array<FunctionDeclarationNode>_vtable_ty.676529"* %.567, i64 0, i32 5
  %.569 = load %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)*, %FunctionDeclarationNode.676490* (%"Array<FunctionDeclarationNode>.676522"*, i64)** %.568, align 8
  %.570 = call %FunctionDeclarationNode.676490* %.569(%"Array<FunctionDeclarationNode>.676522"* %.565, i64 %.562)
  call void %.552(%TypeChecker.676716* %.1, %Function.676656* %.561, %FunctionDeclarationNode.676490* %.570)
  %.575 = load i64, i64* %i, align 8
  %.576 = add i64 %.575, 1
  store i64 %.576, i64* %i, align 8
  %.543 = load %"Array<FunctionDeclarationNode>.676522"*, %"Array<FunctionDeclarationNode>.676522"** %.426, align 8
  %.544 = getelementptr inbounds %"Array<FunctionDeclarationNode>.676522", %"Array<FunctionDeclarationNode>.676522"* %.543, i64 0, i32 2
  %.545 = load i64, i64* %.544, align 8
  %.546 = icmp slt i64 %.576, %.545
  br i1 %.546, label %for.body.9, label %for.end.9

for.end.9:                                        ; preds = %for.body.9, %for.cond.9.preheader
  store i64 %.151, i64* %0, align 8
  store i64 %.11, i64* %.10, align 8
  ret %Module.676696* %.19
}

define void @TypeChecker_include_builtins(%TypeChecker.676716* %.1) {
.3:
  %.6 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.7 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.6, align 8
  %.8 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.7, i64 0, i32 34
  %.9 = load %Module.676696* (%TypeChecker.676716*, %string.676378*, %FloRange.676382*)*, %Module.676696* (%TypeChecker.676716*, %string.676378*, %FloRange.676382*)** %.8, align 8
  %.11 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 7
  %.12 = load %Compiler.676394*, %Compiler.676394** %.11, align 8
  %.13 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.12, i64 0, i32 4
  %.14 = load %string.676378*, %string.676378** %.13, align 8
  %.15 = call %Module.676696* %.9(%TypeChecker.676716* %.1, %string.676378* %.14, %FloRange.676382* null)
  ret void
}

define %Type.676538* @TypeChecker_create_generic_instance_in_module(%TypeChecker.676716* %.1, %string.676378* %.2, %"Array<Type>.676546"* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 9
  %.11 = load %"Map<string, ClassDeclarationNode>.676718"*, %"Map<string, ClassDeclarationNode>.676718"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.13, i64 0, i32 3
  %.15 = load %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)** %.14, align 8
  %.17 = call %ClassDeclarationNode.676500* %.15(%"Map<string, ClassDeclarationNode>.676718"* %.11, %string.676378* %.2)
  %0 = ptrtoint %ClassDeclarationNode.676500* %.17 to i64
  %.20 = trunc i64 %0 to i32
  %.22 = icmp eq i32 %.20, 0
  br i1 %.22, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %for.end, %.5
  %merge = phi %Type.676538* [ null, %.5 ], [ %.228, %for.end ]
  ret %Type.676538* %merge

.5.endif:                                         ; preds = %.5
  %.26 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.17, i64 0, i32 2
  %1 = bitcast %"Array<GenericParameterNode>.676502"** %.26 to i64*
  %.273 = load i64, i64* %1, align 8
  %generic_params = alloca %"Array<GenericParameterNode>.676502"*, align 8
  %2 = bitcast %"Array<GenericParameterNode>.676502"** %generic_params to i64*
  store i64 %.273, i64* %2, align 8
  %.29.cast = inttoptr i64 %.273 to %"Array<GenericParameterNode>.676502"*
  %.30 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.29.cast, i64 0, i32 2
  %.31 = load i64, i64* %.30, align 8
  %.33 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.3, i64 0, i32 2
  %.34 = load i64, i64* %.33, align 8
  %.35.not = icmp eq i64 %.31, %.34
  br i1 %.35.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.39 = load %"Map<string, ClassDeclarationNode>.676718"*, %"Map<string, ClassDeclarationNode>.676718"** %.10, align 8
  %.40 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.39, i64 0, i32 0
  %.41 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.40, align 8
  %.42 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.41, i64 0, i32 4
  %.43 = load %"Array<Bucket<string, ClassDeclarationNode>>.676722"* (%"Map<string, ClassDeclarationNode>.676718"*)*, %"Array<Bucket<string, ClassDeclarationNode>>.676722"* (%"Map<string, ClassDeclarationNode>.676718"*)** %.42, align 8
  %.44 = call %"Array<Bucket<string, ClassDeclarationNode>>.676722"* %.43(%"Map<string, ClassDeclarationNode>.676718"* %.39)
  %.47 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.48, i64 0, i32 16
  %.50 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.49, align 8
  %.51 = load %"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"** %generic_params, align 8
  %.52 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.51, i64 0, i32 2
  %.53 = load i64, i64* %.52, align 8
  %.56 = load i64, i64* %.33, align 8
  %.58 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.274, i64 0, i64 0), i64 %.53, i64 %.56)
  %.60 = call i8* @malloc(i64 %.58)
  %.61 = call i64 (i8*, i8*, ...) @sprintf(i8* %.60, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.274, i64 0, i64 0), i64 %.53, i64 %.56)
  %.62 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.676378*
  %.64 = bitcast i8* %.62 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.64, align 8
  %.66 = getelementptr inbounds i8, i8* %.62, i64 8
  %3 = bitcast i8* %.66 to i8**
  store i8* %.60, i8** %3, align 8
  %.68 = getelementptr inbounds i8, i8* %.62, i64 16
  %4 = bitcast i8* %.68 to i64*
  store i64 %.58, i64* %4, align 8
  %.70 = getelementptr inbounds i8, i8* %.62, i64 24
  %5 = bitcast i8* %.70 to i64*
  store i64 %.58, i64* %5, align 8
  call void %.50(%TypeChecker.676716* %.1, i64 5, %string.676378* %.63, %FloRange.676382* null)
  ret %Type.676538* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.75 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.76 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.75, align 8
  %.77 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.76, i64 0, i32 15
  %.78 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.77, align 8
  %.79 = call %Scope.676628* %.78(%TypeChecker.676716* %.1)
  %.81 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.83 = bitcast i8* %.81 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.83, align 8
  %.85 = getelementptr inbounds i8, i8* %.81, i64 8
  %6 = bitcast i8* %.85 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %6, align 8
  %.87 = getelementptr inbounds i8, i8* %.81, i64 16
  %param_strings = alloca %string.676378*, align 8
  %7 = bitcast %string.676378** %param_strings to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.87, i8 0, i64 16, i1 false)
  store i8* %.81, i8** %7, align 8
  %.9613 = load %"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"** %generic_params, align 8
  %.9714 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.9613, i64 0, i32 2
  %.9815 = load i64, i64* %.9714, align 8
  %.9916 = icmp sgt i64 %.9815, 0
  br i1 %.9916, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif.endif
  %.121 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.3, i64 0, i32 0
  %.172 = getelementptr inbounds %Scope.676628, %Scope.676628* %.79, i64 0, i32 7
  %.96 = load %"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"** %generic_params, align 8
  %.97 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.96, i64 0, i32 2
  %param_strings.promoted = load %string.676378*, %string.676378** %param_strings, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %.16821 = phi %string.676378* [ %param_strings.promoted, %for.body.lr.ph ], [ %.16820, %for.body.endif ]
  %.9719 = phi i64* [ %.9714, %for.body.lr.ph ], [ %.97, %for.body.endif ]
  %.9618 = phi %"Array<GenericParameterNode>.676502"* [ %.9613, %for.body.lr.ph ], [ %.96, %for.body.endif ]
  %storemerge17 = phi i64 [ 0, %for.body.lr.ph ], [ %.191, %for.body.endif ]
  %.103 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.9618, i64 0, i32 0
  %.104 = load %"Array<GenericParameterNode>_vtable_ty.676505"*, %"Array<GenericParameterNode>_vtable_ty.676505"** %.103, align 8
  %.105 = getelementptr inbounds %"Array<GenericParameterNode>_vtable_ty.676505", %"Array<GenericParameterNode>_vtable_ty.676505"* %.104, i64 0, i32 5
  %.106 = load %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)*, %GenericParameterNode.676498* (%"Array<GenericParameterNode>.676502"*, i64)** %.105, align 8
  %.107 = call %GenericParameterNode.676498* %.106(%"Array<GenericParameterNode>.676502"* %.9618, i64 %storemerge17)
  %.108 = getelementptr inbounds %GenericParameterNode.676498, %GenericParameterNode.676498* %.107, i64 0, i32 1
  %.109 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.108, align 8
  %.110 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.109, i64 0, i32 3
  %8 = bitcast %string.676378** %.110 to i64*
  %.1119 = load i64, i64* %8, align 8
  %param_name = alloca %string.676378*, align 8
  %9 = bitcast %string.676378** %param_name to i64*
  store i64 %.1119, i64* %9, align 8
  %.116 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.75, align 8
  %.117 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.116, i64 0, i32 10
  %.118 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.117, align 8
  %.122 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.121, align 8
  %.123 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.122, i64 0, i32 5
  %.124 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.123, align 8
  %.125 = call %Type.676538* %.124(%"Array<Type>.676546"* %.3, i64 %storemerge17)
  %.126 = call %string.676378* %.118(%TypeChecker.676716* %.1, %Type.676538* %.125)
  %.127 = getelementptr inbounds %string.676378, %string.676378* %.126, i64 0, i32 0
  %.128 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.127, align 8
  %.129 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.128, i64 0, i32 11
  %.130 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.129, align 8
  %.131 = call i8* %.130(%string.676378* %.126)
  %.133 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.275, i64 0, i64 0), i8* %.131)
  %.135 = call i8* @malloc(i64 %.133)
  %.136 = call i64 (i8*, i8*, ...) @sprintf(i8* %.135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.275, i64 0, i64 0), i8* %.131)
  %.137 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.138 = bitcast i8* %.137 to %string.676378*
  %.139 = bitcast i8* %.137 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.139, align 8
  %.141 = getelementptr inbounds i8, i8* %.137, i64 8
  %10 = bitcast i8* %.141 to i8**
  store i8* %.135, i8** %10, align 8
  %.143 = getelementptr inbounds i8, i8* %.137, i64 16
  %11 = bitcast i8* %.143 to i64*
  store i64 %.133, i64* %11, align 8
  %.145 = getelementptr inbounds i8, i8* %.137, i64 24
  %12 = bitcast i8* %.145 to i64*
  store i64 %.133, i64* %12, align 8
  %.147 = getelementptr inbounds %string.676378, %string.676378* %.16821, i64 0, i32 0
  %.148 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.147, align 8
  %.149 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.148, i64 0, i32 0
  %.150 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.149, align 8
  %.151 = call %string.676378* %.150(%string.676378* %.16821, %string.676378* %.138)
  %.156 = load i64, i64* %.9719, align 8
  %.157 = add i64 %.156, -1
  %.158 = icmp slt i64 %storemerge17, %.157
  br i1 %.158, label %for.body.if, label %for.body.endif

for.cond.for.end_crit_edge:                       ; preds = %for.body.endif
  store %string.676378* %.16820, %string.676378** %param_strings, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.5.endif.endif
  %.195 = load %string.676378*, %string.676378** %param_strings, align 8
  %.196 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.197 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.196, align 8
  %.198 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.197, i64 0, i32 11
  %.199 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.198, align 8
  %.200 = call i8* %.199(%string.676378* %.2)
  %.201 = getelementptr inbounds %string.676378, %string.676378* %.195, i64 0, i32 0
  %.202 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.201, align 8
  %.203 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.202, i64 0, i32 11
  %.204 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.203, align 8
  %.205 = call i8* %.204(%string.676378* %.195)
  %.207 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.276, i64 0, i64 0), i8* %.200, i8* %.205)
  %.209 = call i8* @malloc(i64 %.207)
  %.210 = call i64 (i8*, i8*, ...) @sprintf(i8* %.209, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.276, i64 0, i64 0), i8* %.200, i8* %.205)
  %.211 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.213 = bitcast i8* %.211 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.213, align 8
  %.215 = getelementptr inbounds i8, i8* %.211, i64 8
  %13 = bitcast i8* %.215 to i8**
  store i8* %.209, i8** %13, align 8
  %.217 = getelementptr inbounds i8, i8* %.211, i64 16
  %14 = bitcast i8* %.217 to i64*
  store i64 %.207, i64* %14, align 8
  %.219 = getelementptr inbounds i8, i8* %.211, i64 24
  %15 = bitcast i8* %.219 to i64*
  store i64 %.207, i64* %15, align 8
  %instantiated_generic_name = alloca %string.676378*, align 8
  %16 = bitcast %string.676378** %instantiated_generic_name to i8**
  store i8* %.211, i8** %16, align 8
  %.224 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.75, align 8
  %.225 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.224, i64 0, i32 14
  %.226 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.225, align 8
  %.227.cast = bitcast i8* %.211 to %string.676378*
  %.228 = call %Type.676538* %.226(%TypeChecker.676716* %.1, %string.676378* %.227.cast)
  %.231 = getelementptr inbounds %Type.676538, %Type.676538* %.228, i64 0, i32 1
  %.232 = load i64, i64* %.231, align 8
  %.233.not = icmp eq i64 %.232, 21
  br i1 %.233.not, label %for.end.endif, label %.5.if

for.body.if:                                      ; preds = %for.body
  %.161 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.162 = bitcast i8* %.161 to %string.676378*
  %.162.repack = bitcast i8* %.161 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.162.repack, align 8
  %.162.repack10 = getelementptr inbounds i8, i8* %.161, i64 8
  %17 = bitcast i8* %.162.repack10 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %17, align 8
  %.162.repack11 = getelementptr inbounds i8, i8* %.161, i64 16
  %18 = bitcast i8* %.162.repack11 to i64*
  store i64 2, i64* %18, align 8
  %.162.repack12 = getelementptr inbounds i8, i8* %.161, i64 24
  %19 = bitcast i8* %.162.repack12 to i64*
  store i64 2, i64* %19, align 8
  %.164 = getelementptr inbounds %string.676378, %string.676378* %.151, i64 0, i32 0
  %.165 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.164, align 8
  %.166 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.165, i64 0, i32 0
  %.167 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.166, align 8
  %.168 = call %string.676378* %.167(%string.676378* %.151, %string.676378* %.162)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.16820 = phi %string.676378* [ %.168, %for.body.if ], [ %.151, %for.body ]
  %.173 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.172, align 8
  %.174 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.173, i64 0, i32 0
  %.175 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.174, align 8
  %.176 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.175, i64 0, i32 2
  %.177 = load void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)*, void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)** %.176, align 8
  %.178 = load %string.676378*, %string.676378** %param_name, align 8
  %.182 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.121, align 8
  %.183 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.182, i64 0, i32 5
  %.184 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.183, align 8
  %.185 = call %Type.676538* %.184(%"Array<Type>.676546"* %.3, i64 %storemerge17)
  call void %.177(%"Map<string, Type>.676633"* %.173, %string.676378* %.178, %Type.676538* %.185)
  %.191 = add nuw nsw i64 %storemerge17, 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp slt i64 %.191, %.98
  br i1 %.99, label %for.body, label %for.cond.for.end_crit_edge

for.end.endif:                                    ; preds = %for.end
  %.237 = load %string.676378*, %string.676378** %instantiated_generic_name, align 8
  %.239 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.17, i64 0, i32 1
  %.240 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.239, align 8
  %.241 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.240, i64 0, i32 2
  %.242 = load %FloRange.676382*, %FloRange.676382** %.241, align 8
  %.243 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.244 = bitcast i8* %.243 to %IdentifierToken.676420*
  %.245 = bitcast i8* %.243 to %IdentifierToken_vtable_ty.676421**
  store %IdentifierToken_vtable_ty.676421* @IdentifierToken_vtable_data, %IdentifierToken_vtable_ty.676421** %.245, align 8
  call void @IdentifierToken_constructor(%IdentifierToken.676420* %.244, %string.676378* %.237, %FloRange.676382* %.242)
  %.250 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.251 = bitcast i8* %.250 to %ClassDeclarationNode.676500*
  %.252 = bitcast i8* %.250 to %ClassDeclarationNode_vtable_ty.676501**
  store %ClassDeclarationNode_vtable_ty.676501* @ClassDeclarationNode_vtable_data, %ClassDeclarationNode_vtable_ty.676501** %.252, align 8
  call void @ClassDeclarationNode_constructor(%ClassDeclarationNode.676500* %.251, %IdentifierToken.676420* %.244)
  %instantiated_generic_class = alloca %ClassDeclarationNode.676500*, align 8
  %20 = bitcast %ClassDeclarationNode.676500** %instantiated_generic_class to i8**
  store i8* %.250, i8** %20, align 8
  %.258 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.17, i64 0, i32 3
  %21 = bitcast %RecordTypeNode.676428** %.258 to i64*
  %.2594 = load i64, i64* %21, align 8
  %.260 = getelementptr inbounds i8, i8* %.250, i64 24
  %22 = bitcast i8* %.260 to i64*
  store i64 %.2594, i64* %22, align 8
  %.262 = load %ClassDeclarationNode.676500*, %ClassDeclarationNode.676500** %instantiated_generic_class, align 8
  %.264 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.17, i64 0, i32 4
  %23 = bitcast %"Array<FieldNode>.676503"** %.264 to i64*
  %.2655 = load i64, i64* %23, align 8
  %.266 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.262, i64 0, i32 4
  %24 = bitcast %"Array<FieldNode>.676503"** %.266 to i64*
  store i64 %.2655, i64* %24, align 8
  %.270 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.17, i64 0, i32 5
  %25 = bitcast %"Array<MethodNode>.676504"** %.270 to i64*
  %.2716 = load i64, i64* %25, align 8
  %.272 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.262, i64 0, i32 5
  %26 = bitcast %"Array<MethodNode>.676504"** %.272 to i64*
  store i64 %.2716, i64* %26, align 8
  %.276 = getelementptr inbounds %Scope.676628, %Scope.676628* %.79, i64 0, i32 1
  %27 = bitcast %ScopeId.676626** %.276 to i64*
  %.2777 = load i64, i64* %27, align 8
  %.278 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %28 = bitcast %ScopeId.676626** %.278 to i64*
  store i64 %.2777, i64* %28, align 8
  %.282 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.75, align 8
  %.283 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.282, i64 0, i32 36
  %.284 = load void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)** %.283, align 8
  call void %.284(%TypeChecker.676716* %.1, %ClassDeclarationNode.676500* %.262)
  %.289 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.75, align 8
  %.290 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.289, i64 0, i32 42
  %.291 = load void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %ClassDeclarationNode.676500*)** %.290, align 8
  call void %.291(%TypeChecker.676716* %.1, %ClassDeclarationNode.676500* %.262)
  %.296 = getelementptr inbounds %Scope.676628, %Scope.676628* %.79, i64 0, i32 6
  %29 = bitcast %ScopeId.676626** %.296 to i64*
  %.2978 = load i64, i64* %29, align 8
  store i64 %.2978, i64* %28, align 8
  %.302 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.75, align 8
  %.303 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.302, i64 0, i32 14
  %.304 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.303, align 8
  %.306 = call %Type.676538* %.304(%TypeChecker.676716* %.1, %string.676378* %.237)
  ret %Type.676538* %.306
}

define %Var.676660* @TypeChecker_declare_var_within_current_scope(%TypeChecker.676716* %.1, %string.676378* %.2, %Expression.676558* %.3, %Type.676538* %.4) {
.6:
  %.13 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %Var.676660*
  %.15 = bitcast i8* %.13 to %Var_vtable_ty.676661**
  store %Var_vtable_ty.676661* @Var_vtable_data, %Var_vtable_ty.676661** %.15, align 8
  call void @Var_constructor(%Var.676660* %.14, %Expression.676558* %.3, %Type.676538* %.4)
  %.20 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.21, i64 0, i32 1
  %.23 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.22, align 8
  %.24 = call %Module.676696* %.23(%TypeChecker.676716* %.1)
  %.28 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.28, i64 0, i32 2
  %.30 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.29, align 8
  %.31 = call %Scope.676628* %.30(%TypeChecker.676716* %.1)
  %.34 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  %.37 = getelementptr inbounds %Module.676696, %Module.676696* %.24, i64 0, i32 3
  %.38 = load %"Array<Var>.676698"*, %"Array<Var>.676698"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.38, i64 0, i32 2
  %.40 = load i64, i64* %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %VarId.676596*
  %.43 = bitcast i8* %.41 to %VarId_vtable_ty.676597**
  store %VarId_vtable_ty.676597* @VarId_vtable_data, %VarId_vtable_ty.676597** %.43, align 8
  call void @VarId_constructor(%VarId.676596* %.42, i64 1, i64 %.35, i64 %.40)
  %.49 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.49 to i8**
  store i8* %.41, i8** %0, align 8
  %.53 = load %"Array<Var>.676698"*, %"Array<Var>.676698"** %.37, align 8
  %.55 = getelementptr inbounds %"Array<Var>.676698", %"Array<Var>.676698"* %.53, i64 0, i32 0
  %.56 = load %"Array<Var>_vtable_ty.676705"*, %"Array<Var>_vtable_ty.676705"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Var>_vtable_ty.676705", %"Array<Var>_vtable_ty.676705"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<Var>.676698"*, %Var.676660*)*, void (%"Array<Var>.676698"*, %Var.676660*)** %.57, align 8
  call void %.58(%"Array<Var>.676698"* %.53, %Var.676660* %.14)
  %.61 = getelementptr inbounds %Scope.676628, %Scope.676628* %.31, i64 0, i32 2
  %.62 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.61, align 8
  %.63 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.62, i64 0, i32 0
  %.64 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.63, align 8
  %.65 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.64, i64 0, i32 2
  %.66 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.65, align 8
  call void %.66(%"Map<string, VarId>.676630"* %.62, %string.676378* %.2, %VarId.676596* %.42)
  ret %Var.676660* %.14
}

define %Const.676662* @TypeChecker_declare_const_within_current_scope(%TypeChecker.676716* %.1, %string.676378* %.2, %Expression.676558* %.3, %Type.676538* %.4) {
.6:
  %.13 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %Const.676662*
  %.15 = bitcast i8* %.13 to %Const_vtable_ty.676663**
  store %Const_vtable_ty.676663* @Const_vtable_data, %Const_vtable_ty.676663** %.15, align 8
  call void @Const_constructor(%Const.676662* %.14, %Expression.676558* %.3, %Type.676538* %.4)
  %.20 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.21, i64 0, i32 1
  %.23 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.22, align 8
  %.24 = call %Module.676696* %.23(%TypeChecker.676716* %.1)
  %.28 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.29 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.28, i64 0, i32 2
  %.30 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.29, align 8
  %.31 = call %Scope.676628* %.30(%TypeChecker.676716* %.1)
  %.34 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.35 = load i64, i64* %.34, align 8
  %.37 = getelementptr inbounds %Module.676696, %Module.676696* %.24, i64 0, i32 4
  %.38 = load %"Array<Const>.676699"*, %"Array<Const>.676699"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.38, i64 0, i32 2
  %.40 = load i64, i64* %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %ConstId.676602*
  %.43 = bitcast i8* %.41 to %ConstId_vtable_ty.676603**
  store %ConstId_vtable_ty.676603* @ConstId_vtable_data, %ConstId_vtable_ty.676603** %.43, align 8
  call void @ConstId_constructor(%ConstId.676602* %.42, i64 %.35, i64 %.40)
  %.49 = getelementptr inbounds i8, i8* %.13, i64 16
  %0 = bitcast i8* %.49 to i8**
  store i8* %.41, i8** %0, align 8
  %.53 = load %"Array<Const>.676699"*, %"Array<Const>.676699"** %.37, align 8
  %.55 = getelementptr inbounds %"Array<Const>.676699", %"Array<Const>.676699"* %.53, i64 0, i32 0
  %.56 = load %"Array<Const>_vtable_ty.676706"*, %"Array<Const>_vtable_ty.676706"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Const>_vtable_ty.676706", %"Array<Const>_vtable_ty.676706"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<Const>.676699"*, %Const.676662*)*, void (%"Array<Const>.676699"*, %Const.676662*)** %.57, align 8
  call void %.58(%"Array<Const>.676699"* %.53, %Const.676662* %.14)
  %.61 = getelementptr inbounds %Scope.676628, %Scope.676628* %.31, i64 0, i32 2
  %.62 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.61, align 8
  %.63 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.62, i64 0, i32 0
  %.64 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.63, align 8
  %.65 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.64, i64 0, i32 2
  %.66 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.65, align 8
  %.69 = bitcast i8* %.41 to %VarId.676596*
  call void %.66(%"Map<string, VarId>.676630"* %.62, %string.676378* %.2, %VarId.676596* %.69)
  ret %Const.676662* %.14
}

define void @TypeChecker_declare_global_const(%TypeChecker.676716* %.1, %ConstDeclarationStatement.676486* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 74
  %.11 = load %ConstDeclaration.676618* (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)*, %ConstDeclaration.676618* (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)** %.10, align 8
  %.13 = call %ConstDeclaration.676618* %.11(%TypeChecker.676716* %.1, %ConstDeclarationStatement.676486* %.2)
  %.16 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.13, i64 0, i32 4
  store i1 true, i1* %.16, align 1
  %.20 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.21 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.20, i64 0, i32 1
  %.22 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.21, align 8
  %.23 = call %Module.676696* %.22(%TypeChecker.676716* %.1)
  %.24 = getelementptr inbounds %Module.676696, %Module.676696* %.23, i64 0, i32 9
  %.25 = load %"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"** %.24, align 8
  %.27 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.25, i64 0, i32 0
  %.28 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.28, i64 0, i32 2
  %.30 = load void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)*, void (%"Array<ConstDeclaration>.676704"*, %ConstDeclaration.676618*)** %.29, align 8
  call void %.30(%"Array<ConstDeclaration>.676704"* %.25, %ConstDeclaration.676618* %.13)
  ret void
}

define void @TypeChecker_declare_global_var(%TypeChecker.676716* %.1, %VarDeclarationStatement.676484* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 73
  %.11 = load %VarDeclaration.676616* (%TypeChecker.676716*, %VarDeclarationStatement.676484*)*, %VarDeclaration.676616* (%TypeChecker.676716*, %VarDeclarationStatement.676484*)** %.10, align 8
  %.13 = call %VarDeclaration.676616* %.11(%TypeChecker.676716* %.1, %VarDeclarationStatement.676484* %.2)
  %.17 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.18 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.17, i64 0, i32 17
  %.19 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.18, align 8
  %.20 = call i1 %.19(%TypeChecker.676716* %.1)
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.24 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.25 = load %Program.676712*, %Program.676712** %.24, align 8
  %.27 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.13, i64 0, i32 3
  %.28 = load %VarId.676596*, %VarId.676596** %.27, align 8
  %.29 = call %Var.676660* @get_var(%Program.676712* %.25, %VarId.676596* %.28)
  %.30 = getelementptr inbounds %Var.676660, %Var.676660* %.29, i64 0, i32 3
  %.31 = load %Expression.676558*, %Expression.676558** %.30, align 8
  %.32 = getelementptr inbounds %Expression.676558, %Expression.676558* %.31, i64 0, i32 2
  %.33 = load i1, i1* %.32, align 1
  br i1 %.33, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.38 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.38, i64 0, i32 16
  %.40 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.39, align 8
  %.41 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.42 = bitcast i8* %.41 to %string.676378*
  %.42.repack = bitcast i8* %.41 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.42.repack, align 8
  %.42.repack1 = getelementptr inbounds i8, i8* %.41, i64 8
  %0 = bitcast i8* %.42.repack1 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.277, i64 0, i64 0), i8** %0, align 8
  %.42.repack2 = getelementptr inbounds i8, i8* %.41, i64 16
  %1 = bitcast i8* %.42.repack2 to i64*
  store i64 54, i64* %1, align 8
  %.42.repack3 = getelementptr inbounds i8, i8* %.41, i64 24
  %2 = bitcast i8* %.42.repack3 to i64*
  store i64 54, i64* %2, align 8
  %.45 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.2, i64 0, i32 5
  %.46 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.45, align 8
  %.47 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.46, i64 0, i32 1
  %.48 = load %FloRange.676382*, %FloRange.676382** %.47, align 8
  call void %.40(%TypeChecker.676716* %.1, i64 4, %string.676378* %.42, %FloRange.676382* %.48)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.52 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.13, i64 0, i32 4
  store i1 true, i1* %.52, align 1
  %.56 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.56, i64 0, i32 1
  %.58 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.57, align 8
  %.59 = call %Module.676696* %.58(%TypeChecker.676716* %.1)
  %.60 = getelementptr inbounds %Module.676696, %Module.676696* %.59, i64 0, i32 10
  %.61 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.60, align 8
  %.63 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.61, i64 0, i32 0
  %.64 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.64, i64 0, i32 2
  %.66 = load void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)** %.65, align 8
  call void %.66(%"Array<VarDeclaration>.676688"* %.61, %VarDeclaration.676616* %.13)
  ret void
}

define void @TypeChecker_add_imported_var_to_module(%TypeChecker.676716* %.1, %string.676378* %.2, %VarId.676596* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 3
  %.13 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.12, align 8
  %.14 = call %Scope.676628* %.13(%TypeChecker.676716* %.1)
  %.18 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.18, i64 0, i32 1
  %.20 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.19, align 8
  %.21 = call %Module.676696* %.20(%TypeChecker.676716* %.1)
  %.24 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 2
  %.25 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.27, i64 0, i32 2
  %.29 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.28, align 8
  call void %.29(%"Map<string, VarId>.676630"* %.25, %string.676378* %.2, %VarId.676596* %.3)
  %.34 = getelementptr inbounds %Module.676696, %Module.676696* %.21, i64 0, i32 11
  %.35 = load %ImportedSymbols.676686*, %ImportedSymbols.676686** %.34, align 8
  %.36 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.35, i64 0, i32 1
  %.37 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.36, align 8
  %.40 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.41 = bitcast i8* %.40 to %VarDeclaration.676616*
  %.42 = bitcast i8* %.40 to %VarDeclaration_vtable_ty.676617**
  store %VarDeclaration_vtable_ty.676617* @VarDeclaration_vtable_data, %VarDeclaration_vtable_ty.676617** %.42, align 8
  call void @VarDeclaration_constructor(%VarDeclaration.676616* %.41, %string.676378* %.2, %VarId.676596* %.3)
  %.45 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.37, i64 0, i32 0
  %.46 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.45, align 8
  %.47 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.46, i64 0, i32 2
  %.48 = load void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)*, void (%"Array<VarDeclaration>.676688"*, %VarDeclaration.676616*)** %.47, align 8
  call void %.48(%"Array<VarDeclaration>.676688"* %.37, %VarDeclaration.676616* %.41)
  ret void
}

define void @TypeChecker_add_imported_fnc_to_module(%TypeChecker.676716* %.1, %string.676378* %.2, %VarId.676596* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 3
  %.13 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.12, align 8
  %.14 = call %Scope.676628* %.13(%TypeChecker.676716* %.1)
  %.18 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.18, i64 0, i32 1
  %.20 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.19, align 8
  %.21 = call %Module.676696* %.20(%TypeChecker.676716* %.1)
  %.24 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 4
  %.25 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.27, i64 0, i32 2
  %.29 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.28, align 8
  call void %.29(%"Map<string, VarId>.676630"* %.25, %string.676378* %.2, %VarId.676596* %.3)
  %.34 = getelementptr inbounds %Module.676696, %Module.676696* %.21, i64 0, i32 11
  %.35 = load %ImportedSymbols.676686*, %ImportedSymbols.676686** %.34, align 8
  %.36 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.35, i64 0, i32 2
  %.37 = load %"Array<VarId>.676689"*, %"Array<VarId>.676689"** %.36, align 8
  %.39 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.37, i64 0, i32 0
  %.40 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.40, i64 0, i32 2
  %.42 = load void (%"Array<VarId>.676689"*, %VarId.676596*)*, void (%"Array<VarId>.676689"*, %VarId.676596*)** %.41, align 8
  call void %.42(%"Array<VarId>.676689"* %.37, %VarId.676596* %.3)
  ret void
}

define void @TypeChecker_add_imported_class_to_module(%TypeChecker.676716* %.1, %string.676378* %.2, %ClassId.676554* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 3
  %.13 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.12, align 8
  %.14 = call %Scope.676628* %.13(%TypeChecker.676716* %.1)
  %.18 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.18, i64 0, i32 1
  %.20 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.19, align 8
  %.21 = call %Module.676696* %.20(%TypeChecker.676716* %.1)
  %.24 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 3
  %.25 = load %"Map<string, ClassId>.676631"*, %"Map<string, ClassId>.676631"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.27, i64 0, i32 2
  %.29 = load void (%"Map<string, ClassId>.676631"*, %string.676378*, %ClassId.676554*)*, void (%"Map<string, ClassId>.676631"*, %string.676378*, %ClassId.676554*)** %.28, align 8
  call void %.29(%"Map<string, ClassId>.676631"* %.25, %string.676378* %.2, %ClassId.676554* %.3)
  %.34 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 2
  %.35 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.34, align 8
  %.36 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.35, i64 0, i32 0
  %.37 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.36, align 8
  %.38 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.37, i64 0, i32 2
  %.39 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.38, align 8
  %.42 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %ClassVarId.676598*
  %.44 = bitcast i8* %.42 to %ClassVarId_vtable_ty.676599**
  store %ClassVarId_vtable_ty.676599* @ClassVarId_vtable_data, %ClassVarId_vtable_ty.676599** %.44, align 8
  call void @ClassVarId_constructor(%ClassVarId.676598* %.43, %ClassId.676554* %.3)
  %.47 = bitcast i8* %.42 to %VarId.676596*
  call void %.39(%"Map<string, VarId>.676630"* %.35, %string.676378* %.2, %VarId.676596* %.47)
  %.50 = getelementptr inbounds %Module.676696, %Module.676696* %.21, i64 0, i32 11
  %.51 = load %ImportedSymbols.676686*, %ImportedSymbols.676686** %.50, align 8
  %.52 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.51, i64 0, i32 4
  %.53 = load %"Array<ClassId>.676691"*, %"Array<ClassId>.676691"** %.52, align 8
  %.55 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.53, i64 0, i32 0
  %.56 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<ClassId>.676691"*, %ClassId.676554*)*, void (%"Array<ClassId>.676691"*, %ClassId.676554*)** %.57, align 8
  call void %.58(%"Array<ClassId>.676691"* %.53, %ClassId.676554* %.3)
  ret void
}

define void @TypeChecker_add_imported_enum_to_module(%TypeChecker.676716* %.1, %string.676378* %.2, %EnumId.676556* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 3
  %.13 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.12, align 8
  %.14 = call %Scope.676628* %.13(%TypeChecker.676716* %.1)
  %.18 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.18, i64 0, i32 1
  %.20 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.19, align 8
  %.21 = call %Module.676696* %.20(%TypeChecker.676716* %.1)
  %.24 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 5
  %.25 = load %"Map<string, EnumId>.676632"*, %"Map<string, EnumId>.676632"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.27, i64 0, i32 2
  %.29 = load void (%"Map<string, EnumId>.676632"*, %string.676378*, %EnumId.676556*)*, void (%"Map<string, EnumId>.676632"*, %string.676378*, %EnumId.676556*)** %.28, align 8
  call void %.29(%"Map<string, EnumId>.676632"* %.25, %string.676378* %.2, %EnumId.676556* %.3)
  %.34 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 2
  %.35 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.34, align 8
  %.36 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.35, i64 0, i32 0
  %.37 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.36, align 8
  %.38 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.37, i64 0, i32 2
  %.39 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.38, align 8
  %.42 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %EnumVarId.676600*
  %.44 = bitcast i8* %.42 to %EnumVarId_vtable_ty.676601**
  store %EnumVarId_vtable_ty.676601* @EnumVarId_vtable_data, %EnumVarId_vtable_ty.676601** %.44, align 8
  call void @EnumVarId_constructor(%EnumVarId.676600* %.43, %EnumId.676556* %.3)
  %.47 = bitcast i8* %.42 to %VarId.676596*
  call void %.39(%"Map<string, VarId>.676630"* %.35, %string.676378* %.2, %VarId.676596* %.47)
  %.50 = getelementptr inbounds %Module.676696, %Module.676696* %.21, i64 0, i32 11
  %.51 = load %ImportedSymbols.676686*, %ImportedSymbols.676686** %.50, align 8
  %.52 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.51, i64 0, i32 3
  %.53 = load %"Array<EnumId>.676690"*, %"Array<EnumId>.676690"** %.52, align 8
  %.55 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.53, i64 0, i32 0
  %.56 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.56, i64 0, i32 2
  %.58 = load void (%"Array<EnumId>.676690"*, %EnumId.676556*)*, void (%"Array<EnumId>.676690"*, %EnumId.676556*)** %.57, align 8
  call void %.58(%"Array<EnumId>.676690"* %.53, %EnumId.676556* %.3)
  ret void
}

define void @TypeChecker_add_imported_typealias_to_module(%TypeChecker.676716* %.1, %string.676378* %.2, %Type.676538* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 3
  %.13 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.12, align 8
  %.14 = call %Scope.676628* %.13(%TypeChecker.676716* %.1)
  %.18 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.18, i64 0, i32 1
  %.20 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.19, align 8
  %.21 = call %Module.676696* %.20(%TypeChecker.676716* %.1)
  %.24 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 7
  %.25 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.27, i64 0, i32 2
  %.29 = load void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)*, void (%"Map<string, Type>.676633"*, %string.676378*, %Type.676538*)** %.28, align 8
  call void %.29(%"Map<string, Type>.676633"* %.25, %string.676378* %.2, %Type.676538* %.3)
  ret void
}

define noalias %FunctionType.676544* @TypeChecker_init_function_signature(%TypeChecker.676716* %.1, %"Array<ArgNode>.676492"* %.2, %TypeNode.676426* %.3, %"Array<FunctionArg>.676658"* %.4) {
.6:
  %.12 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.14 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Array<Type>.676546"*
  %.16 = bitcast i8* %.14 to %"Array<Type>_vtable_ty.676547"**
  store %"Array<Type>_vtable_ty.676547"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.676547"** %.16, align 8
  %.18 = getelementptr inbounds i8, i8* %.14, i64 8
  %0 = bitcast i8* %.18 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.20 to i64*
  store i64 0, i64* %1, align 8
  %.22 = getelementptr inbounds i8, i8* %.14, i64 24
  %2 = bitcast i8* %.22 to i64*
  store i64 8, i64* %2, align 8
  %.30 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.2, i64 0, i32 2
  %.319 = load i64, i64* %.30, align 8
  %.3210 = icmp sgt i64 %.319, 0
  br i1 %.3210, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.36 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.2, i64 0, i32 0
  %.69 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.88 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.184 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.4, i64 0, i32 0
  %.194 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.223, %for.body.endif.endif ]
  %.37 = load %"Array<ArgNode>_vtable_ty.676493"*, %"Array<ArgNode>_vtable_ty.676493"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ArgNode>_vtable_ty.676493", %"Array<ArgNode>_vtable_ty.676493"* %.37, i64 0, i32 5
  %.39 = load %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)*, %ArgNode.676488* (%"Array<ArgNode>.676492"*, i64)** %.38, align 8
  %.40 = call %ArgNode.676488* %.39(%"Array<ArgNode>.676492"* %.2, i64 %storemerge11)
  %.42 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.43 = bitcast i8* %.42 to %FunctionArg.676654*
  %.44 = bitcast i8* %.42 to %FunctionArg_vtable_ty.676655**
  store %FunctionArg_vtable_ty.676655* @FunctionArg_vtable_data, %FunctionArg_vtable_ty.676655** %.44, align 8
  call void @FunctionArg_constructor(%FunctionArg.676654* %.43)
  %fnc_arg = alloca %FunctionArg.676654*, align 8
  %3 = bitcast %FunctionArg.676654** %fnc_arg to i8**
  store i8* %.42, i8** %3, align 8
  %.50 = getelementptr inbounds %ArgNode.676488, %ArgNode.676488* %.40, i64 0, i32 1
  %.51 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.50, align 8
  %.52 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.51, i64 0, i32 3
  %4 = bitcast %string.676378** %.52 to i64*
  %.531 = load i64, i64* %4, align 8
  %.54 = getelementptr inbounds i8, i8* %.42, i64 48
  %5 = bitcast i8* %.54 to i64*
  store i64 %.531, i64* %5, align 8
  %.56 = load %FunctionArg.676654*, %FunctionArg.676654** %fnc_arg, align 8
  %.57 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.56, i64 0, i32 7
  store %Expression.676558* null, %Expression.676558** %.57, align 8
  %.59 = call %Type.676538* @Type_unknown()
  %arg_type = alloca %Type.676538*, align 8
  store %Type.676538* %.59, %Type.676538** %arg_type, align 8
  %.62 = getelementptr inbounds %ArgNode.676488, %ArgNode.676488* %.40, i64 0, i32 2
  %6 = bitcast %TypeNode.676426** %.62 to i64*
  %.632 = load i64, i64* %6, align 8
  %.64 = trunc i64 %.632 to i32
  %.66.not = icmp eq i32 %.64, 0
  br i1 %.66.not, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif.endif, %.6
  %.227 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.228 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.227, align 8
  %.229 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.228, i64 0, i32 44
  %.230 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.229, align 8
  %.232 = call %Type.676538* %.230(%TypeChecker.676716* %.1, %TypeNode.676426* %.3)
  %.236 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.237 = bitcast i8* %.236 to %FunctionType.676544*
  %.238 = bitcast i8* %.236 to %FunctionType_vtable_ty.676545**
  store %FunctionType_vtable_ty.676545* @FunctionType_vtable_data, %FunctionType_vtable_ty.676545** %.238, align 8
  call void @FunctionType_constructor(%FunctionType.676544* %.237, %"Array<Type>.676546"* %.15, %Type.676538* %.232)
  ret %FunctionType.676544* %.237

for.body.if:                                      ; preds = %for.body
  %.70 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 44
  %.72 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.71, align 8
  %.75 = load %TypeNode.676426*, %TypeNode.676426** %.62, align 8
  %.76 = call %Type.676538* %.72(%TypeChecker.676716* %.1, %TypeNode.676426* %.75)
  store %Type.676538* %.76, %Type.676538** %arg_type, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.80 = getelementptr inbounds %ArgNode.676488, %ArgNode.676488* %.40, i64 0, i32 3
  %7 = bitcast %ExpressionNode.676442** %.80 to i64*
  %.813 = load i64, i64* %7, align 8
  %.82 = trunc i64 %.813 to i32
  %.84.not = icmp eq i32 %.82, 0
  br i1 %.84.not, label %for.body.endif.endif, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.89 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.88, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.89, i64 0, i32 70
  %.91 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.90, align 8
  %.92 = load %Type.676538*, %Type.676538** %arg_type, align 8
  %.95 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.80, align 8
  %.96 = call %Expression.676558* %.91(%TypeChecker.676716* %.1, %Type.676538* %.92, %ExpressionNode.676442* %.95)
  store %Expression.676558* %.96, %Expression.676558** %.57, align 8
  %.100 = getelementptr inbounds %Type.676538, %Type.676538* %.92, i64 0, i32 1
  %.101 = load i64, i64* %.100, align 8
  %.102 = icmp eq i64 %.101, 21
  br i1 %.102, label %for.body.endif.if.if, label %for.body.endif.if.else

for.body.endif.endif:                             ; preds = %for.body.endif.if.else.if, %for.body.endif.if.else, %for.body.endif.if.if, %for.body.endif
  %.185 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.184, align 8
  %.186 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.185, i64 0, i32 2
  %.187 = load void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)*, void (%"Array<FunctionArg>.676658"*, %FunctionArg.676654*)** %.186, align 8
  call void %.187(%"Array<FunctionArg>.676658"* %.4, %FunctionArg.676654* %.56)
  %8 = bitcast %Type.676538** %arg_type to i64*
  %.1904 = load i64, i64* %8, align 8
  %.191 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.56, i64 0, i32 4
  %9 = bitcast %Type.676538** %.191 to i64*
  store i64 %.1904, i64* %9, align 8
  %.195 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.194, align 8
  %.196 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.195, i64 0, i32 22
  %.197 = load %Var.676660* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)*, %Var.676660* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)** %.196, align 8
  %.199 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.56, i64 0, i32 6
  %.200 = load %string.676378*, %string.676378** %.199, align 8
  %.2015.cast = bitcast %FunctionArg.676654* %.56 to %Expression.676558*
  %.203 = load %Type.676538*, %Type.676538** %arg_type, align 8
  %.204 = call %Var.676660* %.197(%TypeChecker.676716* %.1, %string.676378* %.200, %Expression.676558* %.2015.cast, %Type.676538* %.203)
  %.208 = getelementptr inbounds %Var.676660, %Var.676660* %.204, i64 0, i32 2
  %10 = bitcast %VarId.676596** %.208 to i64*
  %.2096 = load i64, i64* %10, align 8
  %.210 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.56, i64 0, i32 5
  %11 = bitcast %VarId.676596** %.210 to i64*
  store i64 %.2096, i64* %11, align 8
  %.215 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.16, align 8
  %.216 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.215, i64 0, i32 2
  %.217 = load void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)** %.216, align 8
  call void %.217(%"Array<Type>.676546"* %.15, %Type.676538* %.203)
  %.223 = add nuw nsw i64 %storemerge11, 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.223, %.31
  br i1 %.32, label %for.body, label %for.end

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.107 = getelementptr inbounds %Expression.676558, %Expression.676558* %.96, i64 0, i32 4
  %12 = bitcast %Type.676538** %.107 to i64*
  %.1087 = load i64, i64* %12, align 8
  %13 = bitcast %Type.676538** %arg_type to i64*
  store i64 %.1087, i64* %13, align 8
  br label %for.body.endif.endif

for.body.endif.if.else:                           ; preds = %for.body.endif.if
  %.113 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.88, align 8
  %.114 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.113, i64 0, i32 9
  %.115 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.114, align 8
  %.120 = getelementptr inbounds %Expression.676558, %Expression.676558* %.96, i64 0, i32 4
  %.121 = load %Type.676538*, %Type.676538** %.120, align 8
  %.122 = call i1 %.115(%TypeChecker.676716* %.1, %Type.676538* %.92, %Type.676538* %.121)
  br i1 %.122, label %for.body.endif.endif, label %for.body.endif.if.else.if

for.body.endif.if.else.if:                        ; preds = %for.body.endif.if.else
  %.127 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.88, align 8
  %.128 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.127, i64 0, i32 16
  %.129 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.128, align 8
  %.133 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.127, i64 0, i32 10
  %.134 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.133, align 8
  %.136 = call %string.676378* %.134(%TypeChecker.676716* %.1, %Type.676538* %.92)
  %.139 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.88, align 8
  %.140 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.139, i64 0, i32 10
  %.141 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.140, align 8
  %.144 = load %Expression.676558*, %Expression.676558** %.57, align 8
  %.145 = getelementptr inbounds %Expression.676558, %Expression.676558* %.144, i64 0, i32 4
  %.146 = load %Type.676538*, %Type.676538** %.145, align 8
  %.147 = call %string.676378* %.141(%TypeChecker.676716* %.1, %Type.676538* %.146)
  %.148 = getelementptr inbounds %string.676378, %string.676378* %.136, i64 0, i32 0
  %.149 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.148, align 8
  %.150 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.149, i64 0, i32 11
  %.151 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.150, align 8
  %.152 = call i8* %.151(%string.676378* %.136)
  %.153 = getelementptr inbounds %string.676378, %string.676378* %.147, i64 0, i32 0
  %.154 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.153, align 8
  %.155 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.154, i64 0, i32 11
  %.156 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.155, align 8
  %.157 = call i8* %.156(%string.676378* %.147)
  %.159 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.278, i64 0, i64 0), i8* %.152, i8* %.157)
  %.161 = call i8* @malloc(i64 %.159)
  %.162 = call i64 (i8*, i8*, ...) @sprintf(i8* %.161, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.278, i64 0, i64 0), i8* %.152, i8* %.157)
  %.163 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.164 = bitcast i8* %.163 to %string.676378*
  %.165 = bitcast i8* %.163 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.165, align 8
  %.167 = getelementptr inbounds i8, i8* %.163, i64 8
  %14 = bitcast i8* %.167 to i8**
  store i8* %.161, i8** %14, align 8
  %.169 = getelementptr inbounds i8, i8* %.163, i64 16
  %15 = bitcast i8* %.169 to i64*
  store i64 %.159, i64* %15, align 8
  %.171 = getelementptr inbounds i8, i8* %.163, i64 24
  %16 = bitcast i8* %.171 to i64*
  store i64 %.159, i64* %16, align 8
  %.175 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.80, align 8
  %.176 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.175, i64 0, i32 1
  %.177 = load %FloRange.676382*, %FloRange.676382** %.176, align 8
  call void %.129(%TypeChecker.676716* %.1, i64 5, %string.676378* %.164, %FloRange.676382* %.177)
  br label %for.body.endif.endif
}

define void @TypeChecker_import_all_from_module(%TypeChecker.676716* %.1, %Module.676696* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 8
  %.9 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.9, i64 0, i32 0
  %.11 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.11, i64 0, i32 5
  %.13 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.12, align 8
  %.14 = call %Scope.676628* %.13(%"Array<Scope>.676703"* %.9, i64 0)
  %.21 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 10
  %.2245 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.21, align 8
  %.2346 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.2245, i64 0, i32 2
  %.2447 = load i64, i64* %.2346, align 8
  %.2548 = icmp sgt i64 %.2447, 0
  br i1 %.2548, label %for.body.lr.ph, label %for.cond.1.preheader

for.body.lr.ph:                                   ; preds = %.4
  %.38 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body

for.cond.1.preheader:                             ; preds = %for.body, %.4
  %.61 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 9
  %.6239 = load %"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"** %.61, align 8
  %.6340 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.6239, i64 0, i32 2
  %.6441 = load i64, i64* %.6340, align 8
  %.6542 = icmp sgt i64 %.6441, 0
  br i1 %.6542, label %for.body.1.lr.ph, label %for.cond.2.preheader

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.78 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body.1

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.2250 = phi %"Array<VarDeclaration>.676688"* [ %.2245, %for.body.lr.ph ], [ %.22, %for.body ]
  %storemerge49 = phi i64 [ 0, %for.body.lr.ph ], [ %.53, %for.body ]
  %.31 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.2250, i64 0, i32 0
  %.32 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.32, i64 0, i32 5
  %.34 = load %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)** %.33, align 8
  %.35 = call %VarDeclaration.676616* %.34(%"Array<VarDeclaration>.676688"* %.2250, i64 %storemerge49)
  %.39 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.39, i64 0, i32 26
  %.41 = load void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)** %.40, align 8
  %.43 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.35, i64 0, i32 2
  %.44 = load %string.676378*, %string.676378** %.43, align 8
  %.46 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.35, i64 0, i32 3
  %.47 = load %VarId.676596*, %VarId.676596** %.46, align 8
  call void %.41(%TypeChecker.676716* %.1, %string.676378* %.44, %VarId.676596* %.47)
  %.53 = add nuw nsw i64 %storemerge49, 1
  %.22 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.21, align 8
  %.23 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.22, i64 0, i32 2
  %.24 = load i64, i64* %.23, align 8
  %.25 = icmp slt i64 %.53, %.24
  br i1 %.25, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.102 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 6
  %.10333 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.102, align 8
  %.10434 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.10333, i64 0, i32 2
  %.10535 = load i64, i64* %.10434, align 8
  %.10636 = icmp sgt i64 %.10535, 0
  br i1 %.10636, label %for.body.2.lr.ph, label %for.cond.3.preheader

for.body.2.lr.ph:                                 ; preds = %for.cond.2.preheader
  %.119 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body.2

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.6244 = phi %"Array<ConstDeclaration>.676704"* [ %.6239, %for.body.1.lr.ph ], [ %.62, %for.body.1 ]
  %storemerge143 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.94, %for.body.1 ]
  %.71 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.6244, i64 0, i32 0
  %.72 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.71, align 8
  %.73 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.72, i64 0, i32 5
  %.74 = load %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)*, %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)** %.73, align 8
  %.75 = call %ConstDeclaration.676618* %.74(%"Array<ConstDeclaration>.676704"* %.6244, i64 %storemerge143)
  %.79 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.78, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.79, i64 0, i32 26
  %.81 = load void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)** %.80, align 8
  %.83 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.75, i64 0, i32 2
  %.84 = load %string.676378*, %string.676378** %.83, align 8
  %.86 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.75, i64 0, i32 3
  %0 = bitcast %ConstId.676602** %.86 to %VarId.676596**
  %.876 = load %VarId.676596*, %VarId.676596** %0, align 8
  call void %.81(%TypeChecker.676716* %.1, %string.676378* %.84, %VarId.676596* %.876)
  %.94 = add nuw nsw i64 %storemerge143, 1
  %.62 = load %"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"** %.61, align 8
  %.63 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.62, i64 0, i32 2
  %.64 = load i64, i64* %.63, align 8
  %.65 = icmp slt i64 %.94, %.64
  br i1 %.65, label %for.body.1, label %for.cond.2.preheader

for.cond.3.preheader:                             ; preds = %for.body.2, %for.cond.2.preheader
  %.142 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 5
  %.14327 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.142, align 8
  %.14428 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.14327, i64 0, i32 2
  %.14529 = load i64, i64* %.14428, align 8
  %.14630 = icmp sgt i64 %.14529, 0
  br i1 %.14630, label %for.body.3.lr.ph, label %for.cond.4.preheader

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.159 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body.3

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %.10338 = phi %"Array<Function>.676701"* [ %.10333, %for.body.2.lr.ph ], [ %.103, %for.body.2 ]
  %storemerge237 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.134, %for.body.2 ]
  %.112 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.10338, i64 0, i32 0
  %.113 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.112, align 8
  %.114 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.113, i64 0, i32 5
  %.115 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.114, align 8
  %.116 = call %Function.676656* %.115(%"Array<Function>.676701"* %.10338, i64 %storemerge237)
  %.120 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.119, align 8
  %.121 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.120, i64 0, i32 27
  %.122 = load void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)** %.121, align 8
  %.124 = getelementptr inbounds %Function.676656, %Function.676656* %.116, i64 0, i32 2
  %.125 = load %string.676378*, %string.676378** %.124, align 8
  %.127 = getelementptr inbounds %Function.676656, %Function.676656* %.116, i64 0, i32 1
  %.128 = load %VarId.676596*, %VarId.676596** %.127, align 8
  call void %.122(%TypeChecker.676716* %.1, %string.676378* %.125, %VarId.676596* %.128)
  %.134 = add nuw nsw i64 %storemerge237, 1
  %.103 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.102, align 8
  %.104 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.103, i64 0, i32 2
  %.105 = load i64, i64* %.104, align 8
  %.106 = icmp slt i64 %.134, %.105
  br i1 %.106, label %for.body.2, label %for.cond.3.preheader

for.cond.4.preheader:                             ; preds = %for.body.3, %for.cond.3.preheader
  %.182 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 7
  %.18321 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.182, align 8
  %.18422 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.18321, i64 0, i32 2
  %.18523 = load i64, i64* %.18422, align 8
  %.18624 = icmp sgt i64 %.18523, 0
  br i1 %.18624, label %for.body.4.lr.ph, label %for.end.4

for.body.4.lr.ph:                                 ; preds = %for.cond.4.preheader
  %.199 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body.4

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3
  %.14332 = phi %"Array<Class>.676700"* [ %.14327, %for.body.3.lr.ph ], [ %.143, %for.body.3 ]
  %storemerge331 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.174, %for.body.3 ]
  %.152 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.14332, i64 0, i32 0
  %.153 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.152, align 8
  %.154 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.153, i64 0, i32 5
  %.155 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.154, align 8
  %.156 = call %Class.676668* %.155(%"Array<Class>.676700"* %.14332, i64 %storemerge331)
  %.160 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.159, align 8
  %.161 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.160, i64 0, i32 28
  %.162 = load void (%TypeChecker.676716*, %string.676378*, %ClassId.676554*)*, void (%TypeChecker.676716*, %string.676378*, %ClassId.676554*)** %.161, align 8
  %.164 = getelementptr inbounds %Class.676668, %Class.676668* %.156, i64 0, i32 2
  %.165 = load %string.676378*, %string.676378** %.164, align 8
  %.167 = getelementptr inbounds %Class.676668, %Class.676668* %.156, i64 0, i32 1
  %.168 = load %ClassId.676554*, %ClassId.676554** %.167, align 8
  call void %.162(%TypeChecker.676716* %.1, %string.676378* %.165, %ClassId.676554* %.168)
  %.174 = add nuw nsw i64 %storemerge331, 1
  %.143 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.142, align 8
  %.144 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.143, i64 0, i32 2
  %.145 = load i64, i64* %.144, align 8
  %.146 = icmp slt i64 %.174, %.145
  br i1 %.146, label %for.body.3, label %for.cond.4.preheader

for.body.4:                                       ; preds = %for.body.4.lr.ph, %for.body.4
  %.18326 = phi %"Array<Enum>.676702"* [ %.18321, %for.body.4.lr.ph ], [ %.183, %for.body.4 ]
  %storemerge425 = phi i64 [ 0, %for.body.4.lr.ph ], [ %.214, %for.body.4 ]
  %.192 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.18326, i64 0, i32 0
  %.193 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.192, align 8
  %.194 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.193, i64 0, i32 5
  %.195 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.194, align 8
  %.196 = call %Enum.676682* %.195(%"Array<Enum>.676702"* %.18326, i64 %storemerge425)
  %.200 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.199, align 8
  %.201 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.200, i64 0, i32 29
  %.202 = load void (%TypeChecker.676716*, %string.676378*, %EnumId.676556*)*, void (%TypeChecker.676716*, %string.676378*, %EnumId.676556*)** %.201, align 8
  %.204 = getelementptr inbounds %Enum.676682, %Enum.676682* %.196, i64 0, i32 2
  %.205 = load %string.676378*, %string.676378** %.204, align 8
  %.207 = getelementptr inbounds %Enum.676682, %Enum.676682* %.196, i64 0, i32 1
  %.208 = load %EnumId.676556*, %EnumId.676556** %.207, align 8
  call void %.202(%TypeChecker.676716* %.1, %string.676378* %.205, %EnumId.676556* %.208)
  %.214 = add nuw nsw i64 %storemerge425, 1
  %.183 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.182, align 8
  %.184 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.183, i64 0, i32 2
  %.185 = load i64, i64* %.184, align 8
  %.186 = icmp slt i64 %.214, %.185
  br i1 %.186, label %for.body.4, label %for.end.4

for.end.4:                                        ; preds = %for.body.4, %for.cond.4.preheader
  %.218 = getelementptr inbounds %Scope.676628, %Scope.676628* %.14, i64 0, i32 7
  %.219 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.218, align 8
  %.220 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.219, i64 0, i32 0
  %.221 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.220, align 8
  %.222 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.221, i64 0, i32 4
  %.223 = load %"Array<Bucket<string, Type>>.676652"* (%"Map<string, Type>.676633"*)*, %"Array<Bucket<string, Type>>.676652"* (%"Map<string, Type>.676633"*)** %.222, align 8
  %.224 = call %"Array<Bucket<string, Type>>.676652"* %.223(%"Map<string, Type>.676633"* %.219)
  %.231 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.224, i64 0, i32 2
  %.23218 = load i64, i64* %.231, align 8
  %.23319 = icmp sgt i64 %.23218, 0
  br i1 %.23319, label %for.body.5.lr.ph, label %for.end.5

for.body.5.lr.ph:                                 ; preds = %for.end.4
  %.237 = getelementptr inbounds %"Array<Bucket<string, Type>>.676652", %"Array<Bucket<string, Type>>.676652"* %.224, i64 0, i32 0
  %.244 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body.5

for.body.5:                                       ; preds = %for.body.5.lr.ph, %for.body.5
  %storemerge520 = phi i64 [ 0, %for.body.5.lr.ph ], [ %.259, %for.body.5 ]
  %.238 = load %"Array<Bucket<string, Type>>_vtable_ty.676653"*, %"Array<Bucket<string, Type>>_vtable_ty.676653"** %.237, align 8
  %.239 = getelementptr inbounds %"Array<Bucket<string, Type>>_vtable_ty.676653", %"Array<Bucket<string, Type>>_vtable_ty.676653"* %.238, i64 0, i32 5
  %.240 = load %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)*, %"Bucket<string, Type>.676650"* (%"Array<Bucket<string, Type>>.676652"*, i64)** %.239, align 8
  %.241 = call %"Bucket<string, Type>.676650"* %.240(%"Array<Bucket<string, Type>>.676652"* %.224, i64 %storemerge520)
  %.245 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.244, align 8
  %.246 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.245, i64 0, i32 30
  %.247 = load void (%TypeChecker.676716*, %string.676378*, %Type.676538*)*, void (%TypeChecker.676716*, %string.676378*, %Type.676538*)** %.246, align 8
  %.249 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.241, i64 0, i32 1
  %.250 = load %string.676378*, %string.676378** %.249, align 8
  %.252 = getelementptr inbounds %"Bucket<string, Type>.676650", %"Bucket<string, Type>.676650"* %.241, i64 0, i32 2
  %.253 = load %Type.676538*, %Type.676538** %.252, align 8
  call void %.247(%TypeChecker.676716* %.1, %string.676378* %.250, %Type.676538* %.253)
  %.259 = add nuw nsw i64 %storemerge520, 1
  %.232 = load i64, i64* %.231, align 8
  %.233 = icmp slt i64 %.259, %.232
  br i1 %.233, label %for.body.5, label %for.end.5

for.end.5:                                        ; preds = %for.body.5, %for.end.4
  ret void
}

define void @TypeChecker_check_module_import(%TypeChecker.676716* %.1, %ImportNode.676514* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ImportNode.676514, %ImportNode.676514* %.2, i64 0, i32 2
  %.9 = load %StrToken.676414*, %StrToken.676414** %.8, align 8
  %.10 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.9, i64 0, i32 4
  %.11 = load %"Array<Array<Token>>.676416"*, %"Array<Array<Token>>.676416"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Array<Token>>.676416", %"Array<Array<Token>>.676416"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp sgt i64 %.13, 0
  br i1 %.14, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.17 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.18 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.17, align 8
  %.19 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.18, i64 0, i32 16
  %.20 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.19, align 8
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %string.676378*
  %.22.repack = bitcast i8* %.21 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.22.repack, align 8
  %.22.repack4 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.22.repack4 to i8**
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.279, i64 0, i64 0), i8** %0, align 8
  %.22.repack5 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.22.repack5 to i64*
  store i64 51, i64* %1, align 8
  %.22.repack6 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.22.repack6 to i64*
  store i64 51, i64* %2, align 8
  %.27 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.9, i64 0, i32 2
  %.28 = load %FloRange.676382*, %FloRange.676382** %.27, align 8
  call void %.20(%TypeChecker.676716* %.1, i64 4, %string.676378* %.22, %FloRange.676382* %.28)
  ret void

.4.endif:                                         ; preds = %.4
  %.34 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.9, i64 0, i32 3
  %3 = bitcast %string.676378** %.34 to i64*
  %.351 = load i64, i64* %3, align 8
  %path = alloca %string.676378*, align 8
  %4 = bitcast %string.676378** %path to i64*
  store i64 %.351, i64* %4, align 8
  %.38 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.39 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.39, i64 0, i32 34
  %.41 = load %Module.676696* (%TypeChecker.676716*, %string.676378*, %FloRange.676382*)*, %Module.676696* (%TypeChecker.676716*, %string.676378*, %FloRange.676382*)** %.40, align 8
  %.42.cast = inttoptr i64 %.351 to %string.676378*
  %.46 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.9, i64 0, i32 2
  %.47 = load %FloRange.676382*, %FloRange.676382** %.46, align 8
  %.48 = call %Module.676696* %.41(%TypeChecker.676716* %.1, %string.676378* %.42.cast, %FloRange.676382* %.47)
  %.52 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.52, i64 0, i32 17
  %.54 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.53, align 8
  %.55 = call i1 %.54(%TypeChecker.676716* %.1)
  br i1 %.55, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %for.incr, %for.cond.preheader, %.4.endif.endif.else, %.4.endif
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.59 = getelementptr inbounds %Module.676696, %Module.676696* %.48, i64 0, i32 8
  %.60 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.59, align 8
  %.61 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.60, i64 0, i32 0
  %.62 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.61, align 8
  %.63 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.62, i64 0, i32 5
  %.64 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.63, align 8
  %.65 = call %Scope.676628* %.64(%"Array<Scope>.676703"* %.60, i64 0)
  %.68 = getelementptr inbounds %ImportNode.676514, %ImportNode.676514* %.2, i64 0, i32 1
  %.69 = load %"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.69, i64 0, i32 2
  %.71 = load i64, i64* %.70, align 8
  %.72 = icmp sgt i64 %.71, 0
  br i1 %.72, label %for.cond.preheader, label %.4.endif.endif.else

for.cond.preheader:                               ; preds = %.4.endif.endif
  %.809 = load %"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"** %.68, align 8
  %.8110 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.809, i64 0, i32 2
  %.8211 = load i64, i64* %.8110, align 8
  %.8312 = icmp sgt i64 %.8211, 0
  br i1 %.8312, label %for.body.lr.ph, label %.4.endif.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.100 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 9
  %.121 = getelementptr inbounds %Scope.676628, %Scope.676628* %.65, i64 0, i32 3
  %.145 = getelementptr inbounds %Scope.676628, %Scope.676628* %.65, i64 0, i32 5
  %.169 = getelementptr inbounds %Scope.676628, %Scope.676628* %.65, i64 0, i32 2
  %.193 = getelementptr inbounds %Scope.676628, %Scope.676628* %.65, i64 0, i32 4
  %.217 = getelementptr inbounds %Scope.676628, %Scope.676628* %.65, i64 0, i32 7
  br label %for.body

.4.endif.endif.else:                              ; preds = %.4.endif.endif
  %.295 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.296 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.295, i64 0, i32 32
  %.297 = load void (%TypeChecker.676716*, %Module.676696*)*, void (%TypeChecker.676716*, %Module.676696*)** %.296, align 8
  call void %.297(%TypeChecker.676716* %.1, %Module.676696* %.48)
  br label %.4.endif.if

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %.8015 = phi %"Array<IdentifierToken>.676516"* [ %.809, %for.body.lr.ph ], [ %.80, %for.incr ]
  %storemerge13 = phi i64 [ 0, %for.body.lr.ph ], [ %.289, %for.incr ]
  %.89 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.8015, i64 0, i32 0
  %.90 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.89, align 8
  %.91 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.90, i64 0, i32 5
  %.92 = load %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)*, %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)** %.91, align 8
  %.93 = call %IdentifierToken.676420* %.92(%"Array<IdentifierToken>.676516"* %.8015, i64 %storemerge13)
  %.94 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.93, i64 0, i32 3
  %5 = bitcast %string.676378** %.94 to i64*
  %.952 = load i64, i64* %5, align 8
  %name_to_import = alloca %string.676378*, align 8
  %6 = bitcast %string.676378** %name_to_import to i64*
  store i64 %.952, i64* %6, align 8
  %.101 = load %"Map<string, ClassDeclarationNode>.676718"*, %"Map<string, ClassDeclarationNode>.676718"** %.100, align 8
  %.102 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.101, i64 0, i32 0
  %.103 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.102, align 8
  %.104 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.103, i64 0, i32 3
  %.105 = load %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)** %.104, align 8
  %.106.cast = inttoptr i64 %.952 to %string.676378*
  %.107 = call %ClassDeclarationNode.676500* %.105(%"Map<string, ClassDeclarationNode>.676718"* %.101, %string.676378* %.106.cast)
  %7 = ptrtoint %ClassDeclarationNode.676500* %.107 to i64
  %.108 = trunc i64 %7 to i32
  %.110.not = icmp eq i32 %.108, 0
  br i1 %.110.not, label %for.body.endif, label %for.body.if

for.incr:                                         ; preds = %for.body.endif.endif.endif.endif.endif.if, %for.body.endif.endif.endif.endif.if, %for.body.endif.endif.endif.if, %for.body.endif.endif.if, %for.body.endif.if
  %.289 = add nuw nsw i64 %storemerge13, 1
  %.80 = load %"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"** %.68, align 8
  %.81 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.80, i64 0, i32 2
  %.82 = load i64, i64* %.81, align 8
  %.83 = icmp slt i64 %.289, %.82
  br i1 %.83, label %for.body, label %.4.endif.if

for.body.if:                                      ; preds = %for.body
  %.114 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.114, i64 0, i32 32
  %.116 = load void (%TypeChecker.676716*, %Module.676696*)*, void (%TypeChecker.676716*, %Module.676696*)** %.115, align 8
  call void %.116(%TypeChecker.676716* %.1, %Module.676696* %.48)
  ret void

for.body.endif:                                   ; preds = %for.body
  %.122 = load %"Map<string, ClassId>.676631"*, %"Map<string, ClassId>.676631"** %.121, align 8
  %.123 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.122, i64 0, i32 0
  %.124 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.123, align 8
  %.125 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.124, i64 0, i32 3
  %.126 = load %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)*, %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)** %.125, align 8
  %.127 = load %string.676378*, %string.676378** %name_to_import, align 8
  %.128 = call %ClassId.676554* %.126(%"Map<string, ClassId>.676631"* %.122, %string.676378* %.127)
  %8 = ptrtoint %ClassId.676554* %.128 to i64
  %.131 = trunc i64 %8 to i32
  %.133.not = icmp eq i32 %.131, 0
  br i1 %.133.not, label %for.body.endif.endif, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.137 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.138 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.137, i64 0, i32 28
  %.139 = load void (%TypeChecker.676716*, %string.676378*, %ClassId.676554*)*, void (%TypeChecker.676716*, %string.676378*, %ClassId.676554*)** %.138, align 8
  call void %.139(%TypeChecker.676716* %.1, %string.676378* %.106.cast, %ClassId.676554* %.128)
  br label %for.incr

for.body.endif.endif:                             ; preds = %for.body.endif
  %.146 = load %"Map<string, EnumId>.676632"*, %"Map<string, EnumId>.676632"** %.145, align 8
  %.147 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.146, i64 0, i32 0
  %.148 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.147, align 8
  %.149 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.148, i64 0, i32 3
  %.150 = load %EnumId.676556* (%"Map<string, EnumId>.676632"*, %string.676378*)*, %EnumId.676556* (%"Map<string, EnumId>.676632"*, %string.676378*)** %.149, align 8
  %.152 = call %EnumId.676556* %.150(%"Map<string, EnumId>.676632"* %.146, %string.676378* %.127)
  %9 = ptrtoint %EnumId.676556* %.152 to i64
  %.155 = trunc i64 %9 to i32
  %.157.not = icmp eq i32 %.155, 0
  br i1 %.157.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.161 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.162 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.161, i64 0, i32 29
  %.163 = load void (%TypeChecker.676716*, %string.676378*, %EnumId.676556*)*, void (%TypeChecker.676716*, %string.676378*, %EnumId.676556*)** %.162, align 8
  call void %.163(%TypeChecker.676716* %.1, %string.676378* %.106.cast, %EnumId.676556* %.152)
  br label %for.incr

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif
  %.170 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.169, align 8
  %.171 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.170, i64 0, i32 0
  %.172 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.171, align 8
  %.173 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.172, i64 0, i32 3
  %.174 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.173, align 8
  %.176 = call %VarId.676596* %.174(%"Map<string, VarId>.676630"* %.170, %string.676378* %.127)
  %10 = ptrtoint %VarId.676596* %.176 to i64
  %.179 = trunc i64 %10 to i32
  %.181.not = icmp eq i32 %.179, 0
  br i1 %.181.not, label %for.body.endif.endif.endif.endif, label %for.body.endif.endif.endif.if

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif.endif.endif
  %.185 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.186 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.185, i64 0, i32 26
  %.187 = load void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)** %.186, align 8
  call void %.187(%TypeChecker.676716* %.1, %string.676378* %.106.cast, %VarId.676596* %.176)
  br label %for.incr

for.body.endif.endif.endif.endif:                 ; preds = %for.body.endif.endif.endif
  %.194 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.193, align 8
  %.195 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.194, i64 0, i32 0
  %.196 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.195, align 8
  %.197 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.196, i64 0, i32 3
  %.198 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.197, align 8
  %.200 = call %VarId.676596* %.198(%"Map<string, VarId>.676630"* %.194, %string.676378* %.127)
  %11 = ptrtoint %VarId.676596* %.200 to i64
  %.203 = trunc i64 %11 to i32
  %.205.not = icmp eq i32 %.203, 0
  br i1 %.205.not, label %for.body.endif.endif.endif.endif.endif, label %for.body.endif.endif.endif.endif.if

for.body.endif.endif.endif.endif.if:              ; preds = %for.body.endif.endif.endif.endif
  %.209 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  %.210 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.209, i64 0, i32 27
  %.211 = load void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)*, void (%TypeChecker.676716*, %string.676378*, %VarId.676596*)** %.210, align 8
  call void %.211(%TypeChecker.676716* %.1, %string.676378* %.106.cast, %VarId.676596* %.200)
  br label %for.incr

for.body.endif.endif.endif.endif.endif:           ; preds = %for.body.endif.endif.endif.endif
  %.218 = load %"Map<string, Type>.676633"*, %"Map<string, Type>.676633"** %.217, align 8
  %.219 = getelementptr inbounds %"Map<string, Type>.676633", %"Map<string, Type>.676633"* %.218, i64 0, i32 0
  %.220 = load %"Map<string, Type>_vtable_ty.676649"*, %"Map<string, Type>_vtable_ty.676649"** %.219, align 8
  %.221 = getelementptr inbounds %"Map<string, Type>_vtable_ty.676649", %"Map<string, Type>_vtable_ty.676649"* %.220, i64 0, i32 3
  %.222 = load %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)*, %Type.676538* (%"Map<string, Type>.676633"*, %string.676378*)** %.221, align 8
  %.224 = call %Type.676538* %.222(%"Map<string, Type>.676633"* %.218, %string.676378* %.127)
  %12 = ptrtoint %Type.676538* %.224 to i64
  %.227 = trunc i64 %12 to i32
  %.229.not = icmp eq i32 %.227, 0
  %.242 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.38, align 8
  br i1 %.229.not, label %for.body.endif.endif.endif.endif.endif.else, label %for.body.endif.endif.endif.endif.endif.if

for.body.endif.endif.endif.endif.endif.if:        ; preds = %for.body.endif.endif.endif.endif.endif
  %.234 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.242, i64 0, i32 30
  %.235 = load void (%TypeChecker.676716*, %string.676378*, %Type.676538*)*, void (%TypeChecker.676716*, %string.676378*, %Type.676538*)** %.234, align 8
  call void %.235(%TypeChecker.676716* %.1, %string.676378* %.106.cast, %Type.676538* %.224)
  br label %for.incr

for.body.endif.endif.endif.endif.endif.else:      ; preds = %for.body.endif.endif.endif.endif.endif
  %.243 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.242, i64 0, i32 16
  %.244 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.243, align 8
  %.246 = load %string.676378*, %string.676378** %path, align 8
  %.247 = getelementptr inbounds %string.676378, %string.676378* %.127, i64 0, i32 0
  %.248 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.247, align 8
  %.249 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.248, i64 0, i32 11
  %.250 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.249, align 8
  %.251 = call i8* %.250(%string.676378* %.127)
  %.252 = getelementptr inbounds %string.676378, %string.676378* %.246, i64 0, i32 0
  %.253 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.252, align 8
  %.254 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.253, i64 0, i32 11
  %.255 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.254, align 8
  %.256 = call i8* %.255(%string.676378* %.246)
  %.258 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.280, i64 0, i64 0), i8* %.251, i8* %.256)
  %.260 = call i8* @malloc(i64 %.258)
  %.261 = call i64 (i8*, i8*, ...) @sprintf(i8* %.260, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.280, i64 0, i64 0), i8* %.251, i8* %.256)
  %.262 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.263 = bitcast i8* %.262 to %string.676378*
  %.264 = bitcast i8* %.262 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.264, align 8
  %.266 = getelementptr inbounds i8, i8* %.262, i64 8
  %13 = bitcast i8* %.266 to i8**
  store i8* %.260, i8** %13, align 8
  %.268 = getelementptr inbounds i8, i8* %.262, i64 16
  %14 = bitcast i8* %.268 to i64*
  store i64 %.258, i64* %14, align 8
  %.270 = getelementptr inbounds i8, i8* %.262, i64 24
  %15 = bitcast i8* %.270 to i64*
  store i64 %.258, i64* %15, align 8
  %.275 = load %"Array<IdentifierToken>.676516"*, %"Array<IdentifierToken>.676516"** %.68, align 8
  %.276 = getelementptr inbounds %"Array<IdentifierToken>.676516", %"Array<IdentifierToken>.676516"* %.275, i64 0, i32 0
  %.277 = load %"Array<IdentifierToken>_vtable_ty.676517"*, %"Array<IdentifierToken>_vtable_ty.676517"** %.276, align 8
  %.278 = getelementptr inbounds %"Array<IdentifierToken>_vtable_ty.676517", %"Array<IdentifierToken>_vtable_ty.676517"* %.277, i64 0, i32 5
  %.279 = load %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)*, %IdentifierToken.676420* (%"Array<IdentifierToken>.676516"*, i64)** %.278, align 8
  %.280 = call %IdentifierToken.676420* %.279(%"Array<IdentifierToken>.676516"* %.275, i64 %storemerge13)
  %.281 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.280, i64 0, i32 2
  %.282 = load %FloRange.676382*, %FloRange.676382** %.281, align 8
  call void %.244(%TypeChecker.676716* %.1, i64 1, %string.676378* %.263, %FloRange.676382* %.282)
  ret void
}

define %Module.676696* @TypeChecker_lex_and_parse_typecheck_file(%TypeChecker.676716* %.1, %string.676378* %.2, %FloRange.676382* %.3) {
.5:
  %.12 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 7
  %.13 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.14 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.13, i64 0, i32 1
  %.15 = load %FileId.676390*, %FileId.676390** %.14, align 8
  %0 = ptrtoint %FloRange.676382* %.3 to i64
  %.18 = trunc i64 %0 to i32
  %.20 = icmp ne i32 %.18, 0
  %.22 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.23 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.24 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.23, i64 0, i32 13
  %.25 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.24, align 8
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.676378*
  %.27.repack = bitcast i8* %.26 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.27.repack, align 8
  %.27.repack1 = getelementptr inbounds i8, i8* %.26, i64 8
  %1 = bitcast i8* %.27.repack1 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.281, i64 0, i64 0), i8** %1, align 8
  %.27.repack2 = getelementptr inbounds i8, i8* %.26, i64 16
  %2 = bitcast i8* %.27.repack2 to i64*
  store i64 1, i64* %2, align 8
  %.27.repack3 = getelementptr inbounds i8, i8* %.26, i64 24
  %3 = bitcast i8* %.27.repack3 to i64*
  store i64 1, i64* %3, align 8
  %.29 = call i1 %.25(%string.676378* %.2, %string.676378* %.27)
  %.30 = xor i1 %.29, true
  %.31 = and i1 %.20, %.30
  br i1 %.31, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.34 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.35 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.34, align 8
  %.36 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.35, i64 0, i32 1
  %.37 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.36, align 8
  %.38 = call %Module.676696* %.37(%TypeChecker.676716* %.1)
  %.39 = getelementptr inbounds %Module.676696, %Module.676696* %.38, i64 0, i32 2
  %.40 = load %string.676378*, %string.676378** %.39, align 8
  %.41 = call %string.676378* @Path_dirname(%string.676378* %.40)
  %.43 = call %string.676378* @Path_join(%string.676378* %.41, %string.676378* %.2)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %filepath.0 = phi %string.676378* [ %.43, %.5.if ], [ %.2, %.5 ]
  %.48 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.49 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.48, i64 0, i32 0
  %.50 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.49, align 8
  %.51 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.50, i64 0, i32 1
  %.52 = load %FileId.676390* (%Compiler.676394*, %string.676378*)*, %FileId.676390* (%Compiler.676394*, %string.676378*)** %.51, align 8
  %.54 = call %FileId.676390* %.52(%Compiler.676394* %.48, %string.676378* %filepath.0)
  %.57 = getelementptr inbounds %FileId.676390, %FileId.676390* %.54, i64 0, i32 1
  %.58 = load i64, i64* %.57, align 8
  %.60 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.61 = load %Program.676712*, %Program.676712** %.60, align 8
  %.62 = getelementptr inbounds %Program.676712, %Program.676712* %.61, i64 0, i32 1
  %.63 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.62, align 8
  %.64 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.63, i64 0, i32 2
  %.65 = load i64, i64* %.64, align 8
  %.66 = icmp slt i64 %.58, %.65
  br i1 %.66, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.69 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.70 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 0
  %.72 = load %Module.676696* (%TypeChecker.676716*, i64)*, %Module.676696* (%TypeChecker.676716*, i64)** %.71, align 8
  %.76 = call %Module.676696* %.72(%TypeChecker.676716* %.1, i64 %.58)
  ret %Module.676696* %.76

.5.endif.endif:                                   ; preds = %.5.endif
  %.80 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.81 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.80, i64 0, i32 0
  %.82 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.81, align 8
  %.83 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.82, i64 0, i32 2
  %.84 = load i1 (%Compiler.676394*, %FileId.676390*)*, i1 (%Compiler.676394*, %FileId.676390*)** %.83, align 8
  %.86 = call i1 %.84(%Compiler.676394* %.80, %FileId.676390* %.54)
  br i1 %.86, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.90 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.91 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.90, align 8
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.91, i64 0, i32 16
  %.93 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.92, align 8
  %.96 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.22, align 8
  %.97 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.96, i64 0, i32 11
  %.98 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.97, align 8
  %.99 = call i8* %.98(%string.676378* %.2)
  %.101 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.282, i64 0, i64 0), i8* %.99)
  %.103 = call i8* @malloc(i64 %.101)
  %.104 = call i64 (i8*, i8*, ...) @sprintf(i8* %.103, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.282, i64 0, i64 0), i8* %.99)
  %.105 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.105 to %string.676378*
  %.107 = bitcast i8* %.105 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.107, align 8
  %.109 = getelementptr inbounds i8, i8* %.105, i64 8
  %4 = bitcast i8* %.109 to i8**
  store i8* %.103, i8** %4, align 8
  %.111 = getelementptr inbounds i8, i8* %.105, i64 16
  %5 = bitcast i8* %.111 to i64*
  store i64 %.101, i64* %5, align 8
  %.113 = getelementptr inbounds i8, i8* %.105, i64 24
  %6 = bitcast i8* %.113 to i64*
  store i64 %.101, i64* %6, align 8
  call void %.93(%TypeChecker.676716* %.1, i64 3, %string.676378* %.106, %FloRange.676382* %.3)
  ret %Module.676696* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.118 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.119 = bitcast i8* %.118 to %Lexer.676422*
  %.120 = bitcast i8* %.118 to %Lexer_vtable_ty.676423**
  store %Lexer_vtable_ty.676423* @Lexer_vtable_data, %Lexer_vtable_ty.676423** %.120, align 8
  call void @Lexer_constructor(%Lexer.676422* %.119)
  %.126 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.120, align 8
  %.127 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.126, i64 0, i32 22
  %.128 = load %"Array<Token>.676417"* (%Lexer.676422*, %string.676378*, %"Array<FloError>.676397"*)*, %"Array<Token>.676417"* (%Lexer.676422*, %string.676378*, %"Array<FloError>.676397"*)** %.127, align 8
  %.131 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.132 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.131, i64 0, i32 3
  %.133 = load %string.676378*, %string.676378** %.132, align 8
  %.137 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.131, i64 0, i32 6
  %.138 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.137, align 8
  %.139 = call %"Array<Token>.676417"* %.128(%Lexer.676422* %.119, %string.676378* %.133, %"Array<FloError>.676397"* %.138)
  %.142 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.143 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.142, align 8
  %.144 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.143, i64 0, i32 17
  %.145 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.144, align 8
  %.146 = call i1 %.145(%TypeChecker.676716* %.1)
  br i1 %.146, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif.endif.endif, %.5.endif.endif.endif.endif, %.5.endif.endif.endif
  ret %Module.676696* null

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.149 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.150 = bitcast i8* %.149 to %Parser.676536*
  %.151 = bitcast i8* %.149 to %Parser_vtable_ty.676537**
  store %Parser_vtable_ty.676537* @Parser_vtable_data, %Parser_vtable_ty.676537** %.151, align 8
  call void @Parser_constructor(%Parser.676536* %.150)
  %.157 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.151, align 8
  %.158 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.157, i64 0, i32 56
  %.159 = load %ModuleAST.676520* (%Parser.676536*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*)*, %ModuleAST.676520* (%Parser.676536*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*)** %.158, align 8
  %.163 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.164 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.163, i64 0, i32 6
  %.165 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.164, align 8
  %.166 = call %ModuleAST.676520* %.159(%Parser.676536* %.150, %"Array<Token>.676417"* %.139, %"Array<FloError>.676397"* %.165)
  %.170 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.142, align 8
  %.171 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.170, i64 0, i32 17
  %.172 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.171, align 8
  %.173 = call i1 %.172(%TypeChecker.676716* %.1)
  br i1 %.173, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.178 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.142, align 8
  %.179 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.178, i64 0, i32 19
  %.180 = load %Module.676696* (%TypeChecker.676716*, %ModuleAST.676520*, %string.676378*)*, %Module.676696* (%TypeChecker.676716*, %ModuleAST.676520*, %string.676378*)** %.179, align 8
  %.183 = call %Module.676696* %.180(%TypeChecker.676716* %.1, %ModuleAST.676520* %.166, %string.676378* %filepath.0)
  %.187 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.142, align 8
  %.188 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.187, i64 0, i32 17
  %.189 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.188, align 8
  %.190 = call i1 %.189(%TypeChecker.676716* %.1)
  br i1 %.190, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif
  %.195 = load %Compiler.676394*, %Compiler.676394** %.12, align 8
  %.196 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.195, i64 0, i32 0
  %.197 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.196, align 8
  %.198 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.197, i64 0, i32 2
  %.199 = load i1 (%Compiler.676394*, %FileId.676390*)*, i1 (%Compiler.676394*, %FileId.676390*)** %.198, align 8
  %.201 = call i1 %.199(%Compiler.676394* %.195, %FileId.676390* %.15)
  ret %Module.676696* %.183
}

define void @TypeChecker_declare_enum_within_current_scope(%TypeChecker.676716* %.1, %EnumNode.676510* nocapture readonly %.2) {
.4:
  %.7 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.8 = bitcast i8* %.7 to %Enum.676682*
  %.9 = bitcast i8* %.7 to %Enum_vtable_ty.676683**
  store %Enum_vtable_ty.676683* @Enum_vtable_data, %Enum_vtable_ty.676683** %.9, align 8
  call void @Enum_constructor(%Enum.676682* %.8)
  %.14 = getelementptr inbounds %EnumNode.676510, %EnumNode.676510* %.2, i64 0, i32 1
  %.15 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.14, align 8
  %.16 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.15, i64 0, i32 3
  %.17 = load %string.676378*, %string.676378** %.16, align 8
  %.20 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.21, i64 0, i32 2
  %.23 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.22, align 8
  %.24 = call %Scope.676628* %.23(%TypeChecker.676716* %.1)
  %.28 = getelementptr inbounds i8, i8* %.7, i64 16
  %0 = bitcast i8* %.28 to %string.676378**
  store %string.676378* %.17, %string.676378** %0, align 8
  %.32 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.32, i64 0, i32 14
  %.34 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.33, align 8
  %.36 = call %Type.676538* %.34(%TypeChecker.676716* %.1, %string.676378* %.17)
  %.37 = getelementptr inbounds %Type.676538, %Type.676538* %.36, i64 0, i32 1
  %.38 = load i64, i64* %.37, align 8
  %.39.not = icmp eq i64 %.38, 21
  br i1 %.39.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.43 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.43, i64 0, i32 16
  %.45 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.44, align 8
  %.47 = getelementptr inbounds %string.676378, %string.676378* %.17, i64 0, i32 0
  %.48 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.48, i64 0, i32 11
  %.50 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.49, align 8
  %.51 = call i8* %.50(%string.676378* %.17)
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.273, i64 0, i64 0), i8* %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.273, i64 0, i64 0), i8* %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %1 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %1, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %2 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %2, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %3 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %3, align 8
  %.69 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.14, align 8
  %.70 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.69, i64 0, i32 2
  %.71 = load %FloRange.676382*, %FloRange.676382** %.70, align 8
  call void %.45(%TypeChecker.676716* %.1, i64 1, %string.676378* %.58, %FloRange.676382* %.71)
  ret void

.4.endif:                                         ; preds = %.4
  %.75 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.76 = bitcast i8* %.75 to %"Map<string, PropId>.676672"*
  %.77 = bitcast i8* %.75 to %"Map<string, PropId>_vtable_ty.676675"**
  store %"Map<string, PropId>_vtable_ty.676675"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.676675"** %.77, align 8
  call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.676672"* %.76)
  %.821.cast = ptrtoint i8* %.75 to i64
  %.83 = getelementptr inbounds i8, i8* %.7, i64 32
  %4 = bitcast i8* %.83 to i64*
  store i64 %.821.cast, i64* %4, align 8
  %.87 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.91 = bitcast i8* %.89 to %"Array<EnumField>_vtable_ty.676685"**
  store %"Array<EnumField>_vtable_ty.676685"* @"Array<EnumField>_vtable_data", %"Array<EnumField>_vtable_ty.676685"** %.91, align 8
  %.93 = getelementptr inbounds i8, i8* %.89, i64 8
  %5 = bitcast i8* %.93 to i8**
  store i8* %.87, i8** %5, align 8
  %.95 = getelementptr inbounds i8, i8* %.89, i64 16
  %6 = bitcast i8* %.95 to i64*
  store i64 0, i64* %6, align 8
  %.97 = getelementptr inbounds i8, i8* %.89, i64 24
  %7 = bitcast i8* %.97 to i64*
  store i64 8, i64* %7, align 8
  %.99 = getelementptr inbounds i8, i8* %.7, i64 24
  %8 = bitcast i8* %.99 to i8**
  store i8* %.89, i8** %8, align 8
  %.103 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.104 = load i64, i64* %.103, align 8
  %.107 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.108 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.107, i64 0, i32 1
  %.109 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.108, align 8
  %.110 = call %Module.676696* %.109(%TypeChecker.676716* %.1)
  %.111 = getelementptr inbounds %Module.676696, %Module.676696* %.110, i64 0, i32 7
  %.112 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.111, align 8
  %.113 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.112, i64 0, i32 2
  %.114 = load i64, i64* %.113, align 8
  %.115 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.115 to %EnumId.676556*
  %.117 = bitcast i8* %.115 to %EnumId_vtable_ty.676557**
  store %EnumId_vtable_ty.676557* @EnumId_vtable_data, %EnumId_vtable_ty.676557** %.117, align 8
  call void @EnumId_constructor(%EnumId.676556* %.116, i64 %.104, i64 %.114)
  %.120 = getelementptr inbounds i8, i8* %.7, i64 8
  %9 = bitcast i8* %.120 to i8**
  store i8* %.115, i8** %9, align 8
  %.124 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.125 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.124, i64 0, i32 1
  %.126 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.125, align 8
  %.127 = call %Module.676696* %.126(%TypeChecker.676716* %.1)
  %.128 = getelementptr inbounds %Module.676696, %Module.676696* %.127, i64 0, i32 7
  %.129 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.128, align 8
  %.131 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.129, i64 0, i32 0
  %.132 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.131, align 8
  %.133 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.132, i64 0, i32 2
  %.134 = load void (%"Array<Enum>.676702"*, %Enum.676682*)*, void (%"Array<Enum>.676702"*, %Enum.676682*)** %.133, align 8
  call void %.134(%"Array<Enum>.676702"* %.129, %Enum.676682* %.8)
  %.137 = getelementptr inbounds %Scope.676628, %Scope.676628* %.24, i64 0, i32 5
  %.138 = load %"Map<string, EnumId>.676632"*, %"Map<string, EnumId>.676632"** %.137, align 8
  %.139 = getelementptr inbounds %"Map<string, EnumId>.676632", %"Map<string, EnumId>.676632"* %.138, i64 0, i32 0
  %.140 = load %"Map<string, EnumId>_vtable_ty.676644"*, %"Map<string, EnumId>_vtable_ty.676644"** %.139, align 8
  %.141 = getelementptr inbounds %"Map<string, EnumId>_vtable_ty.676644", %"Map<string, EnumId>_vtable_ty.676644"* %.140, i64 0, i32 2
  %.142 = load void (%"Map<string, EnumId>.676632"*, %string.676378*, %EnumId.676556*)*, void (%"Map<string, EnumId>.676632"*, %string.676378*, %EnumId.676556*)** %.141, align 8
  %.145 = load %string.676378*, %string.676378** %0, align 8
  %10 = bitcast i8* %.120 to %EnumId.676556**
  %.148 = load %EnumId.676556*, %EnumId.676556** %10, align 8
  call void %.142(%"Map<string, EnumId>.676632"* %.138, %string.676378* %.145, %EnumId.676556* %.148)
  %.151 = getelementptr inbounds %Scope.676628, %Scope.676628* %.24, i64 0, i32 2
  %.152 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.151, align 8
  %.153 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.152, i64 0, i32 0
  %.154 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.153, align 8
  %.155 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.154, i64 0, i32 2
  %.156 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.155, align 8
  %.159 = load %string.676378*, %string.676378** %0, align 8
  %.162 = load %EnumId.676556*, %EnumId.676556** %10, align 8
  %.163 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.164 = bitcast i8* %.163 to %EnumVarId.676600*
  %.165 = bitcast i8* %.163 to %EnumVarId_vtable_ty.676601**
  store %EnumVarId_vtable_ty.676601* @EnumVarId_vtable_data, %EnumVarId_vtable_ty.676601** %.165, align 8
  call void @EnumVarId_constructor(%EnumVarId.676600* %.164, %EnumId.676556* %.162)
  %.168 = bitcast i8* %.163 to %VarId.676596*
  call void %.156(%"Map<string, VarId>.676630"* %.152, %string.676378* %.159, %VarId.676596* %.168)
  ret void
}

define void @TypeChecker_declare_class_within_module(%TypeChecker.676716* %.1, %ClassDeclarationNode.676500* %.2) {
.4:
  %.8 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 1
  %.9 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.9, i64 0, i32 3
  %.11 = load %string.676378*, %string.676378** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.15, i64 0, i32 14
  %.17 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.16, align 8
  %.19 = call %Type.676538* %.17(%TypeChecker.676716* %.1, %string.676378* %.11)
  %.20 = getelementptr inbounds %Type.676538, %Type.676538* %.19, i64 0, i32 1
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp ne i64 %.21, 21
  %.24 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 9
  %.25 = load %"Map<string, ClassDeclarationNode>.676718"*, %"Map<string, ClassDeclarationNode>.676718"** %.24, align 8
  %.26 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.25, i64 0, i32 0
  %.27 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.26, align 8
  %.28 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.27, i64 0, i32 3
  %.29 = load %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)*, %ClassDeclarationNode.676500* (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*)** %.28, align 8
  %.31 = call %ClassDeclarationNode.676500* %.29(%"Map<string, ClassDeclarationNode>.676718"* %.25, %string.676378* %.11)
  %0 = ptrtoint %ClassDeclarationNode.676500* %.31 to i64
  %.32 = trunc i64 %0 to i32
  %.34 = icmp ne i32 %.32, 0
  %.35 = or i1 %.22, %.34
  br i1 %.35, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.39 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.40 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.39, i64 0, i32 16
  %.41 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.40, align 8
  %.43 = getelementptr inbounds %string.676378, %string.676378* %.11, i64 0, i32 0
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 11
  %.46 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.45, align 8
  %.47 = call i8* %.46(%string.676378* %.11)
  %.49 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.273, i64 0, i64 0), i8* %.47)
  %.51 = call i8* @malloc(i64 %.49)
  %.52 = call i64 (i8*, i8*, ...) @sprintf(i8* %.51, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.273, i64 0, i64 0), i8* %.47)
  %.53 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.54 = bitcast i8* %.53 to %string.676378*
  %.55 = bitcast i8* %.53 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds i8, i8* %.53, i64 8
  %1 = bitcast i8* %.57 to i8**
  store i8* %.51, i8** %1, align 8
  %.59 = getelementptr inbounds i8, i8* %.53, i64 16
  %2 = bitcast i8* %.59 to i64*
  store i64 %.49, i64* %2, align 8
  %.61 = getelementptr inbounds i8, i8* %.53, i64 24
  %3 = bitcast i8* %.61 to i64*
  store i64 %.49, i64* %3, align 8
  %.65 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.66 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.65, i64 0, i32 2
  %.67 = load %FloRange.676382*, %FloRange.676382** %.66, align 8
  call void %.41(%TypeChecker.676716* %.1, i64 1, %string.676378* %.54, %FloRange.676382* %.67)
  ret void

.4.endif:                                         ; preds = %.4
  %.71 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 2
  %.72 = load %"Array<GenericParameterNode>.676502"*, %"Array<GenericParameterNode>.676502"** %.71, align 8
  %.73 = getelementptr inbounds %"Array<GenericParameterNode>.676502", %"Array<GenericParameterNode>.676502"* %.72, i64 0, i32 2
  %.74 = load i64, i64* %.73, align 8
  %.75 = icmp sgt i64 %.74, 0
  br i1 %.75, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.79 = load %"Map<string, ClassDeclarationNode>.676718"*, %"Map<string, ClassDeclarationNode>.676718"** %.24, align 8
  %.80 = getelementptr inbounds %"Map<string, ClassDeclarationNode>.676718", %"Map<string, ClassDeclarationNode>.676718"* %.79, i64 0, i32 0
  %.81 = load %"Map<string, ClassDeclarationNode>_vtable_ty.676719"*, %"Map<string, ClassDeclarationNode>_vtable_ty.676719"** %.80, align 8
  %.82 = getelementptr inbounds %"Map<string, ClassDeclarationNode>_vtable_ty.676719", %"Map<string, ClassDeclarationNode>_vtable_ty.676719"* %.81, i64 0, i32 2
  %.83 = load void (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*, %ClassDeclarationNode.676500*)*, void (%"Map<string, ClassDeclarationNode>.676718"*, %string.676378*, %ClassDeclarationNode.676500*)** %.82, align 8
  call void %.83(%"Map<string, ClassDeclarationNode>.676718"* %.79, %string.676378* %.11, %ClassDeclarationNode.676500* %.2)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.89 = call dereferenceable_or_null(96) i8* @malloc(i64 96)
  %.91 = bitcast i8* %.89 to %Class_vtable_ty.676669**
  store %Class_vtable_ty.676669* @Class_vtable_data, %Class_vtable_ty.676669** %.91, align 8
  %.98 = getelementptr inbounds i8, i8* %.89, i64 72
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.98, i8 0, i64 16, i1 false)
  %.102 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.104 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.106 = bitcast i8* %.104 to %"Array<ClassField>_vtable_ty.676673"**
  store %"Array<ClassField>_vtable_ty.676673"* @"Array<ClassField>_vtable_data", %"Array<ClassField>_vtable_ty.676673"** %.106, align 8
  %.108 = getelementptr inbounds i8, i8* %.104, i64 8
  %4 = bitcast i8* %.108 to i8**
  store i8* %.102, i8** %4, align 8
  %.110 = getelementptr inbounds i8, i8* %.104, i64 16
  %5 = bitcast i8* %.110 to i64*
  store i64 0, i64* %5, align 8
  %.112 = getelementptr inbounds i8, i8* %.104, i64 24
  %6 = bitcast i8* %.112 to i64*
  store i64 8, i64* %6, align 8
  %.114 = getelementptr inbounds i8, i8* %.89, i64 40
  %7 = bitcast i8* %.114 to i8**
  store i8* %.104, i8** %7, align 8
  %.118 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.120 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.122 = bitcast i8* %.120 to %"Array<ClassMethod>_vtable_ty.676674"**
  store %"Array<ClassMethod>_vtable_ty.676674"* @"Array<ClassMethod>_vtable_data", %"Array<ClassMethod>_vtable_ty.676674"** %.122, align 8
  %.124 = getelementptr inbounds i8, i8* %.120, i64 8
  %8 = bitcast i8* %.124 to i8**
  store i8* %.118, i8** %8, align 8
  %.126 = getelementptr inbounds i8, i8* %.120, i64 16
  %9 = bitcast i8* %.126 to i64*
  store i64 0, i64* %9, align 8
  %.128 = getelementptr inbounds i8, i8* %.120, i64 24
  %10 = bitcast i8* %.128 to i64*
  store i64 8, i64* %10, align 8
  %.130 = getelementptr inbounds i8, i8* %.89, i64 48
  %11 = bitcast i8* %.130 to i8**
  store i8* %.120, i8** %11, align 8
  %.133 = getelementptr inbounds i8, i8* %.89, i64 88
  %12 = bitcast i8* %.133 to i1*
  store i1 false, i1* %12, align 1
  %.136 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.137 = bitcast i8* %.136 to %"Map<string, PropId>.676672"*
  %.138 = bitcast i8* %.136 to %"Map<string, PropId>_vtable_ty.676675"**
  store %"Map<string, PropId>_vtable_ty.676675"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.676675"** %.138, align 8
  call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.676672"* %.137)
  %prop_map = alloca %"Map<string, PropId>.676672"*, align 8
  %13 = bitcast %"Map<string, PropId>.676672"** %prop_map to i8**
  store i8* %.136, i8** %13, align 8
  %.143 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.144 = bitcast i8* %.143 to %"Map<string, PropId>.676672"*
  %.145 = bitcast i8* %.143 to %"Map<string, PropId>_vtable_ty.676675"**
  store %"Map<string, PropId>_vtable_ty.676675"* @"Map<string, PropId>_vtable_data", %"Map<string, PropId>_vtable_ty.676675"** %.145, align 8
  call void @"Map<string, PropId>_constructor"(%"Map<string, PropId>.676672"* %.144)
  %static_prop_map = alloca %"Map<string, PropId>.676672"*, align 8
  %14 = bitcast %"Map<string, PropId>.676672"** %static_prop_map to i8**
  store i8* %.143, i8** %14, align 8
  %.151 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.152 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.151, i64 0, i32 3
  %.153 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.152, align 8
  %.154 = call %Scope.676628* %.153(%TypeChecker.676716* %.1)
  %.157 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 3
  %15 = bitcast %RecordTypeNode.676428** %.157 to i64*
  %.1581 = load i64, i64* %15, align 8
  %.159 = trunc i64 %.1581 to i32
  %.161.not = icmp eq i32 %.159, 0
  br i1 %.161.not, label %.4.endif.endif.else, label %.4.endif.endif.if

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %.166 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.166, i64 0, i32 44
  %.168 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.167, align 8
  %16 = bitcast %RecordTypeNode.676428** %.157 to %TypeNode.676426**
  %.1714 = load %TypeNode.676426*, %TypeNode.676426** %16, align 8
  %.173 = call %Type.676538* %.168(%TypeChecker.676716* %.1, %TypeNode.676426* %.1714)
  %.174 = getelementptr inbounds i8, i8* %.89, i64 24
  %17 = bitcast i8* %.174 to %Type.676538**
  store %Type.676538* %.173, %Type.676538** %17, align 8
  %.178 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.179 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.178, i64 0, i32 17
  %.180 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.179, align 8
  %.181 = call i1 %.180(%TypeChecker.676716* %.1)
  br i1 %.181, label %.4.endif.endif.if.if, label %.4.endif.endif.endif

.4.endif.endif.else:                              ; preds = %.4.endif.endif
  %.186 = getelementptr inbounds i8, i8* %.89, i64 24
  %18 = bitcast i8* %.186 to %Type.676538**
  store %Type.676538* null, %Type.676538** %18, align 8
  br label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif.if, %.4.endif.endif.else
  %.100.cast = bitcast i8* %.89 to %Class.676668*
  %19 = bitcast %"Map<string, PropId>.676672"** %prop_map to i64*
  %.1902 = load i64, i64* %19, align 8
  %.191 = getelementptr inbounds i8, i8* %.89, i64 56
  %20 = bitcast i8* %.191 to i64*
  store i64 %.1902, i64* %20, align 8
  %21 = bitcast %"Map<string, PropId>.676672"** %static_prop_map to i64*
  %.1943 = load i64, i64* %21, align 8
  %.195 = getelementptr inbounds i8, i8* %.89, i64 64
  %22 = bitcast i8* %.195 to i64*
  store i64 %.1943, i64* %22, align 8
  %.199 = getelementptr inbounds i8, i8* %.89, i64 16
  %23 = bitcast i8* %.199 to %string.676378**
  store %string.676378* %.11, %string.676378** %23, align 8
  %.203 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.204 = load i64, i64* %.203, align 8
  %.207 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.208 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.207, i64 0, i32 1
  %.209 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.208, align 8
  %.210 = call %Module.676696* %.209(%TypeChecker.676716* %.1)
  %.211 = getelementptr inbounds %Module.676696, %Module.676696* %.210, i64 0, i32 5
  %.212 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.211, align 8
  %.213 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.212, i64 0, i32 2
  %.214 = load i64, i64* %.213, align 8
  %.215 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.216 = bitcast i8* %.215 to %ClassId.676554*
  %.217 = bitcast i8* %.215 to %ClassId_vtable_ty.676555**
  store %ClassId_vtable_ty.676555* @ClassId_vtable_data, %ClassId_vtable_ty.676555** %.217, align 8
  call void @ClassId_constructor(%ClassId.676554* %.216, i64 %.204, i64 %.214)
  %.220 = getelementptr inbounds i8, i8* %.89, i64 8
  %24 = bitcast i8* %.220 to %ClassId.676554**
  %25 = bitcast i8* %.220 to i8**
  store i8* %.215, i8** %25, align 8
  %.224 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.225 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.224, i64 0, i32 1
  %.226 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.225, align 8
  %.227 = call %Module.676696* %.226(%TypeChecker.676716* %.1)
  %.228 = getelementptr inbounds %Module.676696, %Module.676696* %.227, i64 0, i32 5
  %.229 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.228, align 8
  %.231 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.229, i64 0, i32 0
  %.232 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.231, align 8
  %.233 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.232, i64 0, i32 2
  %.234 = load void (%"Array<Class>.676700"*, %Class.676668*)*, void (%"Array<Class>.676700"*, %Class.676668*)** %.233, align 8
  call void %.234(%"Array<Class>.676700"* %.229, %Class.676668* %.100.cast)
  %.237 = getelementptr inbounds %Scope.676628, %Scope.676628* %.154, i64 0, i32 3
  %.238 = load %"Map<string, ClassId>.676631"*, %"Map<string, ClassId>.676631"** %.237, align 8
  %.239 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.238, i64 0, i32 0
  %.240 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.239, align 8
  %.241 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.240, i64 0, i32 2
  %.242 = load void (%"Map<string, ClassId>.676631"*, %string.676378*, %ClassId.676554*)*, void (%"Map<string, ClassId>.676631"*, %string.676378*, %ClassId.676554*)** %.241, align 8
  %.246 = load %ClassId.676554*, %ClassId.676554** %24, align 8
  call void %.242(%"Map<string, ClassId>.676631"* %.238, %string.676378* %.11, %ClassId.676554* %.246)
  %.249 = getelementptr inbounds %Scope.676628, %Scope.676628* %.154, i64 0, i32 2
  %.250 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.249, align 8
  %.251 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.250, i64 0, i32 0
  %.252 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.251, align 8
  %.253 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.252, i64 0, i32 2
  %.254 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.253, align 8
  %.258 = load %ClassId.676554*, %ClassId.676554** %24, align 8
  %.259 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.260 = bitcast i8* %.259 to %ClassVarId.676598*
  %.261 = bitcast i8* %.259 to %ClassVarId_vtable_ty.676599**
  store %ClassVarId_vtable_ty.676599* @ClassVarId_vtable_data, %ClassVarId_vtable_ty.676599** %.261, align 8
  call void @ClassVarId_constructor(%ClassVarId.676598* %.260, %ClassId.676554* %.258)
  %.264 = bitcast i8* %.259 to %VarId.676596*
  call void %.254(%"Map<string, VarId>.676630"* %.250, %string.676378* %.11, %VarId.676596* %.264)
  ret void

.4.endif.endif.if.if:                             ; preds = %.4.endif.endif.if
  ret void
}

define void @TypeChecker_declare_function_within_current_scope(%TypeChecker.676716* %.1, %FunctionDeclarationNode.676490* nocapture readonly %.2) {
.4:
  %.7 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = bitcast i8* %.7 to %Function_vtable_ty.676657**
  store %Function_vtable_ty.676657* @Function_vtable_data, %Function_vtable_ty.676657** %.9, align 8
  %.14 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.2, i64 0, i32 5
  %.15 = load i1, i1* %.14, align 1
  %.16 = getelementptr inbounds i8, i8* %.7, i64 56
  %0 = bitcast i8* %.16 to i1*
  store i1 %.15, i1* %0, align 1
  %.19 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.2, i64 0, i32 1
  %.20 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.19, align 8
  %.21 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.20, i64 0, i32 3
  %.22 = load %string.676378*, %string.676378** %.21, align 8
  %.26 = getelementptr inbounds i8, i8* %.7, i64 16
  %1 = bitcast i8* %.26 to %string.676378**
  store %string.676378* %.22, %string.676378** %1, align 8
  %.29 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.30 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.31 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.30, i64 0, i32 12
  %.32 = load i1 (%TypeChecker.676716*, %string.676378*)*, i1 (%TypeChecker.676716*, %string.676378*)** %.31, align 8
  %.34 = call i1 %.32(%TypeChecker.676716* %.1, %string.676378* %.22)
  %.38 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  br i1 %.34, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.38, i64 0, i32 16
  %.40 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.39, align 8
  %.42 = getelementptr inbounds %string.676378, %string.676378* %.22, i64 0, i32 0
  %.43 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.42, align 8
  %.44 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.43, i64 0, i32 11
  %.45 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.44, align 8
  %.46 = call i8* %.45(%string.676378* %.22)
  %.48 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.283, i64 0, i64 0), i8* %.46)
  %.50 = call i8* @malloc(i64 %.48)
  %.51 = call i64 (i8*, i8*, ...) @sprintf(i8* %.50, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.283, i64 0, i64 0), i8* %.46)
  %.52 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.53 = bitcast i8* %.52 to %string.676378*
  %.54 = bitcast i8* %.52 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.54, align 8
  %.56 = getelementptr inbounds i8, i8* %.52, i64 8
  %2 = bitcast i8* %.56 to i8**
  store i8* %.50, i8** %2, align 8
  %.58 = getelementptr inbounds i8, i8* %.52, i64 16
  %3 = bitcast i8* %.58 to i64*
  store i64 %.48, i64* %3, align 8
  %.60 = getelementptr inbounds i8, i8* %.52, i64 24
  %4 = bitcast i8* %.60 to i64*
  store i64 %.48, i64* %4, align 8
  %.64 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.19, align 8
  %.65 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.64, i64 0, i32 2
  %.66 = load %FloRange.676382*, %FloRange.676382** %.65, align 8
  call void %.40(%TypeChecker.676716* %.1, i64 1, %string.676378* %.53, %FloRange.676382* %.66)
  ret void

.4.endif:                                         ; preds = %.4
  %.72 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.38, i64 0, i32 14
  %.73 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.72, align 8
  %.75 = call %Type.676538* %.73(%TypeChecker.676716* %.1, %string.676378* %.22)
  %.76 = getelementptr inbounds %Type.676538, %Type.676538* %.75, i64 0, i32 1
  %.77 = load i64, i64* %.76, align 8
  %.78.not = icmp eq i64 %.77, 21
  %.115 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  br i1 %.78.not, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.83 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.115, i64 0, i32 16
  %.84 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.83, align 8
  %.86 = getelementptr inbounds %string.676378, %string.676378* %.22, i64 0, i32 0
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 11
  %.89 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.88, align 8
  %.90 = call i8* %.89(%string.676378* %.22)
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.284, i64 0, i64 0), i8* %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.284, i64 0, i64 0), i8* %.90)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.676378*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %5 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %5, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %6 = bitcast i8* %.102 to i64*
  store i64 %.92, i64* %6, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %7 = bitcast i8* %.104 to i64*
  store i64 %.92, i64* %7, align 8
  %.108 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.19, align 8
  %.109 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.108, i64 0, i32 2
  %.110 = load %FloRange.676382*, %FloRange.676382** %.109, align 8
  call void %.84(%TypeChecker.676716* %.1, i64 1, %string.676378* %.97, %FloRange.676382* %.110)
  ret void

.4.endif.endif:                                   ; preds = %.4.endif
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.115, i64 0, i32 15
  %.117 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.116, align 8
  %.118 = call %Scope.676628* %.117(%TypeChecker.676716* %.1)
  %.122 = getelementptr inbounds %Scope.676628, %Scope.676628* %.118, i64 0, i32 1
  %8 = bitcast %ScopeId.676626** %.122 to i64*
  %.1231 = load i64, i64* %8, align 8
  %.124 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %9 = bitcast %ScopeId.676626** %.124 to i64*
  store i64 %.1231, i64* %9, align 8
  %.128 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.130 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.132 = bitcast i8* %.130 to %"Array<FunctionArg>_vtable_ty.676659"**
  store %"Array<FunctionArg>_vtable_ty.676659"* @"Array<FunctionArg>_vtable_data", %"Array<FunctionArg>_vtable_ty.676659"** %.132, align 8
  %.134 = getelementptr inbounds i8, i8* %.130, i64 8
  %10 = bitcast i8* %.134 to i8**
  store i8* %.128, i8** %10, align 8
  %.136 = getelementptr inbounds i8, i8* %.130, i64 16
  %11 = bitcast i8* %.136 to i64*
  store i64 0, i64* %11, align 8
  %.138 = getelementptr inbounds i8, i8* %.130, i64 24
  %12 = bitcast i8* %.138 to i64*
  store i64 8, i64* %12, align 8
  %.140 = getelementptr inbounds i8, i8* %.7, i64 24
  %13 = bitcast i8* %.140 to i8**
  store i8* %.130, i8** %13, align 8
  %.145 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.146 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.145, i64 0, i32 31
  %.147 = load %FunctionType.676544* (%TypeChecker.676716*, %"Array<ArgNode>.676492"*, %TypeNode.676426*, %"Array<FunctionArg>.676658"*)*, %FunctionType.676544* (%TypeChecker.676716*, %"Array<ArgNode>.676492"*, %TypeNode.676426*, %"Array<FunctionArg>.676658"*)** %.146, align 8
  %.149 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.2, i64 0, i32 2
  %.150 = load %"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"** %.149, align 8
  %.152 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.2, i64 0, i32 4
  %.153 = load %TypeNode.676426*, %TypeNode.676426** %.152, align 8
  %14 = bitcast i8* %.140 to %"Array<FunctionArg>.676658"**
  %.156 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %14, align 8
  %.157 = call %FunctionType.676544* %.147(%TypeChecker.676716* %.1, %"Array<ArgNode>.676492"* %.150, %TypeNode.676426* %.153, %"Array<FunctionArg>.676658"* %.156)
  %.158 = getelementptr inbounds i8, i8* %.7, i64 40
  %15 = bitcast i8* %.158 to %FunctionType.676544**
  store %FunctionType.676544* %.157, %FunctionType.676544** %15, align 8
  %.162 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.163 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.162, i64 0, i32 17
  %.164 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.163, align 8
  %.165 = call i1 %.164(%TypeChecker.676716* %.1)
  br i1 %.165, label %.4.endif.endif.if, label %.4.endif.endif.endif

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  ret void

.4.endif.endif.endif:                             ; preds = %.4.endif.endif
  %.8 = bitcast i8* %.7 to %Function.676656*
  %.170 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 2
  %.171 = load i64, i64* %.170, align 8
  %.174 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.175 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.174, i64 0, i32 1
  %.176 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.175, align 8
  %.177 = call %Module.676696* %.176(%TypeChecker.676716* %.1)
  %.178 = getelementptr inbounds %Module.676696, %Module.676696* %.177, i64 0, i32 6
  %.179 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.178, align 8
  %.180 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.179, i64 0, i32 2
  %.181 = load i64, i64* %.180, align 8
  %.182 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.183 = bitcast i8* %.182 to %VarId.676596*
  %.184 = bitcast i8* %.182 to %VarId_vtable_ty.676597**
  store %VarId_vtable_ty.676597* @VarId_vtable_data, %VarId_vtable_ty.676597** %.184, align 8
  call void @VarId_constructor(%VarId.676596* %.183, i64 0, i64 %.171, i64 %.181)
  %.187 = getelementptr inbounds i8, i8* %.7, i64 8
  %16 = bitcast i8* %.187 to i8**
  store i8* %.182, i8** %16, align 8
  %.191 = getelementptr inbounds %Scope.676628, %Scope.676628* %.118, i64 0, i32 6
  %17 = bitcast %ScopeId.676626** %.191 to i64*
  %.1922 = load i64, i64* %17, align 8
  store i64 %.1922, i64* %9, align 8
  %.1983 = load i64, i64* %8, align 8
  %.199 = getelementptr inbounds i8, i8* %.7, i64 48
  %18 = bitcast i8* %.199 to i64*
  store i64 %.1983, i64* %18, align 8
  %.203 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.204 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.203, i64 0, i32 1
  %.205 = load %Module.676696* (%TypeChecker.676716*)*, %Module.676696* (%TypeChecker.676716*)** %.204, align 8
  %.206 = call %Module.676696* %.205(%TypeChecker.676716* %.1)
  %.207 = getelementptr inbounds %Module.676696, %Module.676696* %.206, i64 0, i32 6
  %.208 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.207, align 8
  %.210 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.208, i64 0, i32 0
  %.211 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.210, align 8
  %.212 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.211, i64 0, i32 2
  %.213 = load void (%"Array<Function>.676701"*, %Function.676656*)*, void (%"Array<Function>.676701"*, %Function.676656*)** %.212, align 8
  call void %.213(%"Array<Function>.676701"* %.208, %Function.676656* %.8)
  %.217 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.218 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.217, i64 0, i32 2
  %.219 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.218, align 8
  %.220 = call %Scope.676628* %.219(%TypeChecker.676716* %.1)
  %.221 = getelementptr inbounds %Scope.676628, %Scope.676628* %.220, i64 0, i32 4
  %.222 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.221, align 8
  %.223 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.222, i64 0, i32 0
  %.224 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.223, align 8
  %.225 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.224, i64 0, i32 2
  %.226 = load void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)*, void (%"Map<string, VarId>.676630"*, %string.676378*, %VarId.676596*)** %.225, align 8
  %.229 = load %string.676378*, %string.676378** %1, align 8
  %19 = bitcast i8* %.187 to %VarId.676596**
  %.232 = load %VarId.676596*, %VarId.676596** %19, align 8
  call void %.226(%"Map<string, VarId>.676630"* %.222, %string.676378* %.229, %VarId.676596* %.232)
  ret void
}

define void @TypeChecker_check_enum_body(%TypeChecker.676716* %.1, %Enum.676682* nocapture readonly %.2, %EnumNode.676510* nocapture readonly %.3) {
.5:
  %.11 = getelementptr inbounds %EnumNode.676510, %EnumNode.676510* %.3, i64 0, i32 3
  %0 = bitcast %TypeNode.676426** %.11 to i64*
  %.122 = load i64, i64* %0, align 8
  %.13 = trunc i64 %.122 to i32
  %.15 = icmp eq i32 %.13, 0
  br i1 %.15, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.17 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.18 = bitcast i8* %.17 to %Type.676538*
  %.19 = bitcast i8* %.17 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.19, align 8
  call void @Type_constructor(%Type.676538* %.18, i64 7)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.25 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.26 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.25, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.26, i64 0, i32 44
  %.28 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.27, align 8
  %.31 = load %TypeNode.676426*, %TypeNode.676426** %.11, align 8
  %.32 = call %Type.676538* %.28(%TypeChecker.676716* %.1, %TypeNode.676426* %.31)
  %.35 = call i1 @is_int(%Type.676538* %.32)
  br i1 %.35, label %.5.endif, label %.5.else.if

.5.endif:                                         ; preds = %.5.else.if, %.5.else, %.5.if
  %enum_variant.0 = phi %Type.676538* [ %.18, %.5.if ], [ %.32, %.5.else ], [ %.32, %.5.else.if ]
  %next_enum_value = alloca i64, align 8
  store i64 0, i64* %next_enum_value, align 8
  %.84 = getelementptr inbounds %EnumNode.676510, %EnumNode.676510* %.3, i64 0, i32 2
  %.8514 = load %"Array<EnumNodeField>.676512"*, %"Array<EnumNodeField>.676512"** %.84, align 8
  %.8615 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.8514, i64 0, i32 2
  %.8716 = load i64, i64* %.8615, align 8
  %.8817 = icmp sgt i64 %.8716, 0
  br i1 %.8817, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.115 = getelementptr inbounds %Enum.676682, %Enum.676682* %.2, i64 0, i32 1
  %1 = bitcast %EnumId.676556** %.115 to %TypeId.676552**
  %.135 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.238 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.270 = getelementptr inbounds %Enum.676682, %Enum.676682* %.2, i64 0, i32 4
  %.282 = getelementptr inbounds %Enum.676682, %Enum.676682* %.2, i64 0, i32 3
  %next_enum_value.promoted = load i64, i64* %next_enum_value, align 8
  br label %for.body

.5.else.if:                                       ; preds = %.5.else
  %.40 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.25, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.40, i64 0, i32 16
  %.42 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.41, align 8
  %.46 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.40, i64 0, i32 10
  %.47 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.46, align 8
  %.49 = call %string.676378* %.47(%TypeChecker.676716* %.1, %Type.676538* %.32)
  %.50 = getelementptr inbounds %string.676378, %string.676378* %.49, i64 0, i32 0
  %.51 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.50, align 8
  %.52 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.51, i64 0, i32 11
  %.53 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.52, align 8
  %.54 = call i8* %.53(%string.676378* %.49)
  %.56 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.285, i64 0, i64 0), i8* %.54)
  %.58 = call i8* @malloc(i64 %.56)
  %.59 = call i64 (i8*, i8*, ...) @sprintf(i8* %.58, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.285, i64 0, i64 0), i8* %.54)
  %.60 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.61 = bitcast i8* %.60 to %string.676378*
  %.62 = bitcast i8* %.60 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.62, align 8
  %.64 = getelementptr inbounds i8, i8* %.60, i64 8
  %2 = bitcast i8* %.64 to i8**
  store i8* %.58, i8** %2, align 8
  %.66 = getelementptr inbounds i8, i8* %.60, i64 16
  %3 = bitcast i8* %.66 to i64*
  store i64 %.56, i64* %3, align 8
  %.68 = getelementptr inbounds i8, i8* %.60, i64 24
  %4 = bitcast i8* %.68 to i64*
  store i64 %.56, i64* %4, align 8
  %.72 = load %TypeNode.676426*, %TypeNode.676426** %.11, align 8
  %.73 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.72, i64 0, i32 1
  %.74 = load %FloRange.676382*, %FloRange.676382** %.73, align 8
  call void %.42(%TypeChecker.676716* %.1, i64 5, %string.676378* %.61, %FloRange.676382* %.74)
  br label %.5.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge620 = phi i64 [ %next_enum_value.promoted, %for.body.lr.ph ], [ %storemerge6, %for.body.endif ]
  %.8519 = phi %"Array<EnumNodeField>.676512"* [ %.8514, %for.body.lr.ph ], [ %.85, %for.body.endif ]
  %storemerge18 = phi i64 [ 0, %for.body.lr.ph ], [ %.294, %for.body.endif ]
  %.94 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.8519, i64 0, i32 0
  %.95 = load %"Array<EnumNodeField>_vtable_ty.676513"*, %"Array<EnumNodeField>_vtable_ty.676513"** %.94, align 8
  %.96 = getelementptr inbounds %"Array<EnumNodeField>_vtable_ty.676513", %"Array<EnumNodeField>_vtable_ty.676513"* %.95, i64 0, i32 5
  %.97 = load %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)*, %EnumNodeField.676508* (%"Array<EnumNodeField>.676512"*, i64)** %.96, align 8
  %.98 = call %EnumNodeField.676508* %.97(%"Array<EnumNodeField>.676512"* %.8519, i64 %storemerge18)
  %.101 = getelementptr inbounds %EnumNodeField.676508, %EnumNodeField.676508* %.98, i64 0, i32 1
  %.102 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.101, align 8
  %.103 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.102, i64 0, i32 3
  %5 = bitcast %string.676378** %.103 to i64*
  %.1043 = load i64, i64* %5, align 8
  %enum_name = alloca %string.676378*, align 8
  %6 = bitcast %string.676378** %enum_name to i64*
  store i64 %.1043, i64* %6, align 8
  %.106.cast = inttoptr i64 %.1043 to %string.676378*
  %.107 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.108 = bitcast i8* %.107 to %EnumField.676680*
  %.109 = bitcast i8* %.107 to %EnumField_vtable_ty.676681**
  store %EnumField_vtable_ty.676681* @EnumField_vtable_data, %EnumField_vtable_ty.676681** %.109, align 8
  call void @EnumField_constructor(%EnumField.676680* %.108, %string.676378* %.106.cast)
  %enum_field = alloca %EnumField.676680*, align 8
  %7 = bitcast %EnumField.676680** %enum_field to i8**
  store i8* %.107, i8** %7, align 8
  %.1164 = load %TypeId.676552*, %TypeId.676552** %1, align 8
  %.119 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.120 = bitcast i8* %.119 to %PropId.676604*
  %.121 = bitcast i8* %.119 to %PropId_vtable_ty.676605**
  store %PropId_vtable_ty.676605* @PropId_vtable_data, %PropId_vtable_ty.676605** %.121, align 8
  call void @PropId_constructor(%PropId.676604* %.120, i64 1, %TypeId.676552* %.1164, i64 %storemerge18)
  %.124 = getelementptr inbounds i8, i8* %.107, i64 8
  %8 = bitcast i8* %.124 to i8**
  store i8* %.119, i8** %8, align 8
  %.127 = getelementptr inbounds %EnumNodeField.676508, %EnumNodeField.676508* %.98, i64 0, i32 2
  %9 = bitcast %ExpressionNode.676442** %.127 to i64*
  %.1285 = load i64, i64* %9, align 8
  %.129 = trunc i64 %.1285 to i32
  %.131.not = icmp eq i32 %.129, 0
  %.247 = load %EnumField.676680*, %EnumField.676680** %enum_field, align 8
  br i1 %.131.not, label %for.body.else, label %for.body.if

for.cond.for.end_crit_edge:                       ; preds = %for.body.endif
  store i64 %storemerge6, i64* %next_enum_value, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.5.endif
  ret void

for.body.if:                                      ; preds = %for.body
  %.136 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.135, align 8
  %.137 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.136, i64 0, i32 70
  %.138 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.137, align 8
  %.142 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.127, align 8
  %.143 = call %Expression.676558* %.138(%TypeChecker.676716* %.1, %Type.676538* %enum_variant.0, %ExpressionNode.676442* %.142)
  %.144 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.247, i64 0, i32 3
  store %Expression.676558* %.143, %Expression.676558** %.144, align 8
  %.149 = getelementptr inbounds %Expression.676558, %Expression.676558* %.143, i64 0, i32 2
  %.150 = load i1, i1* %.149, align 1
  %.170 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.135, align 8
  br i1 %.150, label %for.body.if.endif, label %for.body.if.if

for.body.else:                                    ; preds = %for.body
  %.249 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.250 = bitcast i8* %.249 to %IntExpression.676566*
  %.251 = bitcast i8* %.249 to %IntExpression_vtable_ty.676567**
  store %IntExpression_vtable_ty.676567* @IntExpression_vtable_data, %IntExpression_vtable_ty.676567** %.251, align 8
  call void @IntExpression_constructor(%IntExpression.676566* %.250, i64 %storemerge620)
  %.255 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.247, i64 0, i32 3
  %10 = bitcast %Expression.676558** %.255 to i8**
  store i8* %.249, i8** %10, align 8
  %.261 = getelementptr inbounds i8, i8* %.249, i64 32
  %11 = bitcast i8* %.261 to %Type.676538**
  store %Type.676538* %enum_variant.0, %Type.676538** %11, align 8
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if.endif.endif, %for.body.else
  %storemerge6.in = phi i64 [ %storemerge620, %for.body.else ], [ %.243, %for.body.if.endif.endif ]
  %storemerge6 = add i64 %storemerge6.in, 1
  %.271 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.270, align 8
  %.272 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.271, i64 0, i32 0
  %.273 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.272, align 8
  %.274 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.273, i64 0, i32 2
  %.275 = load void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)** %.274, align 8
  %.276 = load %string.676378*, %string.676378** %enum_name, align 8
  %.278 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.247, i64 0, i32 1
  %.279 = load %PropId.676604*, %PropId.676604** %.278, align 8
  call void %.275(%"Map<string, PropId>.676672"* %.271, %string.676378* %.276, %PropId.676604* %.279)
  %.283 = load %"Array<EnumField>.676684"*, %"Array<EnumField>.676684"** %.282, align 8
  %.285 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.283, i64 0, i32 0
  %.286 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.285, align 8
  %.287 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.286, i64 0, i32 2
  %.288 = load void (%"Array<EnumField>.676684"*, %EnumField.676680*)*, void (%"Array<EnumField>.676684"*, %EnumField.676680*)** %.287, align 8
  call void %.288(%"Array<EnumField>.676684"* %.283, %EnumField.676680* %.247)
  %.294 = add nuw nsw i64 %storemerge18, 1
  %.85 = load %"Array<EnumNodeField>.676512"*, %"Array<EnumNodeField>.676512"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<EnumNodeField>.676512", %"Array<EnumNodeField>.676512"* %.85, i64 0, i32 2
  %.87 = load i64, i64* %.86, align 8
  %.88 = icmp slt i64 %.294, %.87
  br i1 %.88, label %for.body, label %for.cond.for.end_crit_edge

for.body.if.if:                                   ; preds = %for.body.if
  store i64 %storemerge620, i64* %next_enum_value, align 8
  %.156 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.170, i64 0, i32 16
  %.157 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.156, align 8
  %.158 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.159 = bitcast i8* %.158 to %string.676378*
  %.159.repack = bitcast i8* %.158 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.159.repack, align 8
  %.159.repack7 = getelementptr inbounds i8, i8* %.158, i64 8
  %12 = bitcast i8* %.159.repack7 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.286, i64 0, i64 0), i8** %12, align 8
  %.159.repack8 = getelementptr inbounds i8, i8* %.158, i64 16
  %13 = bitcast i8* %.159.repack8 to i64*
  store i64 37, i64* %13, align 8
  %.159.repack9 = getelementptr inbounds i8, i8* %.158, i64 24
  %14 = bitcast i8* %.159.repack9 to i64*
  store i64 37, i64* %14, align 8
  %.163 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.127, align 8
  %.164 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.163, i64 0, i32 1
  %.165 = load %FloRange.676382*, %FloRange.676382** %.164, align 8
  call void %.157(%TypeChecker.676716* %.1, i64 5, %string.676378* %.159, %FloRange.676382* %.165)
  ret void

for.body.if.endif:                                ; preds = %for.body.if
  %.171 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.170, i64 0, i32 9
  %.172 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.171, align 8
  %.177 = getelementptr inbounds %Expression.676558, %Expression.676558* %.143, i64 0, i32 4
  %.178 = load %Type.676538*, %Type.676538** %.177, align 8
  %.179 = call i1 %.172(%TypeChecker.676716* %.1, %Type.676538* %enum_variant.0, %Type.676538* %.178)
  br i1 %.179, label %for.body.if.endif.endif, label %for.body.if.endif.if

for.body.if.endif.if:                             ; preds = %for.body.if.endif
  store i64 %storemerge620, i64* %next_enum_value, align 8
  %.135.le = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.184 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.135.le, align 8
  %.185 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.184, i64 0, i32 16
  %.186 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.185, align 8
  %.190 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.184, i64 0, i32 10
  %.191 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.190, align 8
  %.193 = call %string.676378* %.191(%TypeChecker.676716* %.1, %Type.676538* %enum_variant.0)
  %.196 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.135.le, align 8
  %.197 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.196, i64 0, i32 10
  %.198 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.197, align 8
  %.201 = load %Expression.676558*, %Expression.676558** %.144, align 8
  %.202 = getelementptr inbounds %Expression.676558, %Expression.676558* %.201, i64 0, i32 4
  %.203 = load %Type.676538*, %Type.676538** %.202, align 8
  %.204 = call %string.676378* %.198(%TypeChecker.676716* %.1, %Type.676538* %.203)
  %.205 = getelementptr inbounds %string.676378, %string.676378* %.193, i64 0, i32 0
  %.206 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.205, align 8
  %.207 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.206, i64 0, i32 11
  %.208 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.207, align 8
  %.209 = call i8* %.208(%string.676378* %.193)
  %.210 = getelementptr inbounds %string.676378, %string.676378* %.204, i64 0, i32 0
  %.211 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.210, align 8
  %.212 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.211, i64 0, i32 11
  %.213 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.212, align 8
  %.214 = call i8* %.213(%string.676378* %.204)
  %.216 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.287, i64 0, i64 0), i8* %.209, i8* %.214)
  %.218 = call i8* @malloc(i64 %.216)
  %.219 = call i64 (i8*, i8*, ...) @sprintf(i8* %.218, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.287, i64 0, i64 0), i8* %.209, i8* %.214)
  %.220 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.221 = bitcast i8* %.220 to %string.676378*
  %.222 = bitcast i8* %.220 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.222, align 8
  %.224 = getelementptr inbounds i8, i8* %.220, i64 8
  %15 = bitcast i8* %.224 to i8**
  store i8* %.218, i8** %15, align 8
  %.226 = getelementptr inbounds i8, i8* %.220, i64 16
  %16 = bitcast i8* %.226 to i64*
  store i64 %.216, i64* %16, align 8
  %.228 = getelementptr inbounds i8, i8* %.220, i64 24
  %17 = bitcast i8* %.228 to i64*
  store i64 %.216, i64* %17, align 8
  %.232 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.127, align 8
  %.233 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.232, i64 0, i32 1
  %.234 = load %FloRange.676382*, %FloRange.676382** %.233, align 8
  call void %.186(%TypeChecker.676716* %.1, i64 5, %string.676378* %.221, %FloRange.676382* %.234)
  ret void

for.body.if.endif.endif:                          ; preds = %for.body.if.endif
  %.239 = load %Program.676712*, %Program.676712** %.238, align 8
  %.242 = load %Expression.676558*, %Expression.676558** %.144, align 8
  %.243 = call i64 @evaluate_const_int_expression(%Program.676712* %.239, %Expression.676558* %.242)
  br label %for.body.endif
}

define void @TypeChecker_declare_class_fields(%TypeChecker.676716* %.1, %Class.676668* nocapture readonly %.2, %ClassDeclarationNode.676500* nocapture readonly %.3) {
.5:
  %.18 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.3, i64 0, i32 4
  %.1925 = load %"Array<FieldNode>.676503"*, %"Array<FieldNode>.676503"** %.18, align 8
  %.2026 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1925, i64 0, i32 2
  %.2127 = load i64, i64* %.2026, align 8
  %.2228 = icmp sgt i64 %.2127, 0
  br i1 %.2228, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.10 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 10
  %.11 = load i64, i64* %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.83 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.676554** %.83 to %TypeId.676552**
  %.96 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.119 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 7
  %1 = bitcast %ClassId.676554** %.83 to i64*
  %.189 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.453 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 8
  %.491 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif.endif
  %.1931 = phi %"Array<FieldNode>.676503"* [ %.1925, %for.body.lr.ph ], [ %.19, %for.body.endif.endif.endif.endif ]
  %current_vtable_index.030 = phi i64 [ %.11, %for.body.lr.ph ], [ %current_vtable_index.1, %for.body.endif.endif.endif.endif ]
  %storemerge29 = phi i64 [ 0, %for.body.lr.ph ], [ %.503, %for.body.endif.endif.endif.endif ]
  %.28 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.1931, i64 0, i32 0
  %.29 = load %"Array<FieldNode>_vtable_ty.676506"*, %"Array<FieldNode>_vtable_ty.676506"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<FieldNode>_vtable_ty.676506", %"Array<FieldNode>_vtable_ty.676506"* %.29, i64 0, i32 5
  %.31 = load %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)*, %FieldNode.676496* (%"Array<FieldNode>.676503"*, i64)** %.30, align 8
  %.32 = call %FieldNode.676496* %.31(%"Array<FieldNode>.676503"* %.1931, i64 %storemerge29)
  %.34 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.36 = bitcast i8* %.34 to %ClassField_vtable_ty.676665**
  store %ClassField_vtable_ty.676665* @ClassField_vtable_data, %ClassField_vtable_ty.676665** %.36, align 8
  %field = alloca %ClassField.676664*, align 8
  %2 = bitcast %ClassField.676664** %field to i8**
  store i8* %.34, i8** %2, align 8
  %.41 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.32, i64 0, i32 1
  %.42 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.41, align 8
  %.43 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.42, i64 0, i32 3
  %3 = bitcast %string.676378** %.43 to i64*
  %.441 = load i64, i64* %3, align 8
  %.45 = getelementptr inbounds i8, i8* %.34, i64 32
  %4 = bitcast i8* %.45 to i64*
  store i64 %.441, i64* %4, align 8
  %.47 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.48 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.47, i64 0, i32 4
  %.49 = load %string.676378*, %string.676378** %.48, align 8
  %.50 = call i1 @is_operator_overload_name(%string.676378* %.49)
  br i1 %.50, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif.endif, %for.body.endif, %for.body.endif.endif.endif.if, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.54 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.53, align 8
  %.55 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.54, i64 0, i32 16
  %.56 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.55, align 8
  %.57 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.58 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.57, i64 0, i32 4
  %.59 = load %string.676378*, %string.676378** %.58, align 8
  %.60 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.61 = bitcast i8* %.60 to %string.676378*
  %.61.repack = bitcast i8* %.60 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.61.repack, align 8
  %.61.repack9 = getelementptr inbounds i8, i8* %.60, i64 8
  %5 = bitcast i8* %.61.repack9 to i8**
  store i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.288, i64 0, i64 0), i8** %5, align 8
  %.61.repack10 = getelementptr inbounds i8, i8* %.60, i64 16
  %6 = bitcast i8* %.61.repack10 to i64*
  store i64 75, i64* %6, align 8
  %.61.repack11 = getelementptr inbounds i8, i8* %.60, i64 24
  %7 = bitcast i8* %.61.repack11 to i64*
  store i64 75, i64* %7, align 8
  %.63 = getelementptr inbounds %string.676378, %string.676378* %.59, i64 0, i32 0
  %.64 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.63, align 8
  %.65 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.64, i64 0, i32 0
  %.66 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.65, align 8
  %.67 = call %string.676378* %.66(%string.676378* %.59, %string.676378* %.61)
  %.70 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.41, align 8
  %.71 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.70, i64 0, i32 2
  %.72 = load %FloRange.676382*, %FloRange.676382** %.71, align 8
  call void %.56(%TypeChecker.676716* %.1, i64 1, %string.676378* %.67, %FloRange.676382* %.72)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.75 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.77 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.32, i64 0, i32 2
  %.78 = load i64, i64* %.77, align 8
  %.79 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.75, i64 0, i32 3
  store i64 %.78, i64* %.79, align 8
  %.842 = load %TypeId.676552*, %TypeId.676552** %0, align 8
  %.87 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.88 = bitcast i8* %.87 to %PropId.676604*
  %.89 = bitcast i8* %.87 to %PropId_vtable_ty.676605**
  store %PropId_vtable_ty.676605* @PropId_vtable_data, %PropId_vtable_ty.676605** %.89, align 8
  call void @PropId_constructor(%PropId.676604* %.88, i64 1, %TypeId.676552* %.842, i64 %storemerge29)
  %.92 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.75, i64 0, i32 1
  %8 = bitcast %PropId.676604** %.92 to i8**
  store i8* %.87, i8** %8, align 8
  %.94 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.97 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.97, i64 0, i32 44
  %.99 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.98, align 8
  %.101 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.32, i64 0, i32 4
  %.102 = load %TypeNode.676426*, %TypeNode.676426** %.101, align 8
  %.103 = call %Type.676538* %.99(%TypeChecker.676716* %.1, %TypeNode.676426* %.102)
  %.104 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.94, i64 0, i32 5
  store %Type.676538* %.103, %Type.676538** %.104, align 8
  %.106 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.108 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.106, i64 0, i32 7
  store i64 %current_vtable_index.030, i64* %.108, align 8
  %.112 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.113 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.112, i64 0, i32 17
  %.114 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.113, align 8
  %.115 = call i1 %.114(%TypeChecker.676716* %.1)
  br i1 %.115, label %for.end, label %for.body.endif.endif

for.body.endif.endif:                             ; preds = %for.body.endif
  %.120 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.119, align 8
  %.121 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.120, i64 0, i32 0
  %.122 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.121, align 8
  %.123 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.122, i64 0, i32 3
  %.124 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.123, align 8
  %.125 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.126 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.125, i64 0, i32 4
  %.127 = load %string.676378*, %string.676378** %.126, align 8
  %.128 = call %PropId.676604* %.124(%"Map<string, PropId>.676672"* %.120, %string.676378* %.127)
  %9 = ptrtoint %PropId.676604* %.128 to i64
  %.131 = trunc i64 %9 to i32
  %.133.not = icmp eq i32 %.131, 0
  br i1 %.133.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.136 = getelementptr inbounds %PropId.676604, %PropId.676604* %.128, i64 0, i32 2
  %10 = bitcast %TypeId.676552** %.136 to i64*
  %.1377 = load i64, i64* %10, align 8
  %.1408 = load i64, i64* %1, align 8
  %.141 = trunc i64 %.1377 to i32
  %.142 = trunc i64 %.1408 to i32
  %.143 = icmp eq i32 %.141, %.142
  br i1 %.143, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.if.endif.endif, %for.body.endif.endif
  %.325 = getelementptr inbounds %FieldNode.676496, %FieldNode.676496* %.32, i64 0, i32 3
  %11 = bitcast %ExpressionNode.676442** %.325 to i64*
  %.3263 = load i64, i64* %11, align 8
  %.327 = trunc i64 %.3263 to i32
  %.329.not = icmp eq i32 %.327, 0
  %.467 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  br i1 %.329.not, label %for.body.endif.endif.endif.else, label %for.body.endif.endif.endif.if

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.147 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.148 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.147, i64 0, i32 16
  %.149 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.148, align 8
  %.150 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.151 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.150, i64 0, i32 4
  %.152 = load %string.676378*, %string.676378** %.151, align 8
  %.154 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.155 = load %string.676378*, %string.676378** %.154, align 8
  %.156 = getelementptr inbounds %string.676378, %string.676378* %.152, i64 0, i32 0
  %.157 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.156, align 8
  %.158 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.157, i64 0, i32 11
  %.159 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.158, align 8
  %.160 = call i8* %.159(%string.676378* %.152)
  %.161 = getelementptr inbounds %string.676378, %string.676378* %.155, i64 0, i32 0
  %.162 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.161, align 8
  %.163 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.162, i64 0, i32 11
  %.164 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.163, align 8
  %.165 = call i8* %.164(%string.676378* %.155)
  %.167 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.289, i64 0, i64 0), i8* %.160, i8* %.165)
  %.169 = call i8* @malloc(i64 %.167)
  %.170 = call i64 (i8*, i8*, ...) @sprintf(i8* %.169, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.289, i64 0, i64 0), i8* %.160, i8* %.165)
  %.171 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.676378*
  %.173 = bitcast i8* %.171 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.173, align 8
  %.175 = getelementptr inbounds i8, i8* %.171, i64 8
  %12 = bitcast i8* %.175 to i8**
  store i8* %.169, i8** %12, align 8
  %.177 = getelementptr inbounds i8, i8* %.171, i64 16
  %13 = bitcast i8* %.177 to i64*
  store i64 %.167, i64* %13, align 8
  %.179 = getelementptr inbounds i8, i8* %.171, i64 24
  %14 = bitcast i8* %.179 to i64*
  store i64 %.167, i64* %14, align 8
  %.183 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.41, align 8
  %.184 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.183, i64 0, i32 2
  %.185 = load %FloRange.676382*, %FloRange.676382** %.184, align 8
  call void %.149(%TypeChecker.676716* %.1, i64 1, %string.676378* %.172, %FloRange.676382* %.185)
  ret void

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if
  %.190 = load %Program.676712*, %Program.676712** %.189, align 8
  %.192 = call %Type.676538* @get_class_prop_type(%Program.676712* %.190, %PropId.676604* %.128)
  %.196 = load %Program.676712*, %Program.676712** %.189, align 8
  %.198 = call i64 @get_class_prop_visibility(%Program.676712* %.196, %PropId.676604* %.128)
  %.202 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.203 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.202, i64 0, i32 9
  %.204 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.203, align 8
  %.206 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.207 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.206, i64 0, i32 5
  %.208 = load %Type.676538*, %Type.676538** %.207, align 8
  %.209 = call i1 %.204(%TypeChecker.676716* %.1, %Type.676538* %.192, %Type.676538* %.208)
  br i1 %.209, label %for.body.endif.endif.if.endif.endif, label %for.body.endif.endif.if.endif.if

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.214 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.215 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.214, i64 0, i32 16
  %.216 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.215, align 8
  %.217 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.218 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.217, i64 0, i32 4
  %.219 = load %string.676378*, %string.676378** %.218, align 8
  %.221 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.222 = load %string.676378*, %string.676378** %.221, align 8
  %.226 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.214, i64 0, i32 10
  %.227 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.226, align 8
  %.229 = call %string.676378* %.227(%TypeChecker.676716* %.1, %Type.676538* %.192)
  %.230 = getelementptr inbounds %string.676378, %string.676378* %.219, i64 0, i32 0
  %.231 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.230, align 8
  %.232 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.231, i64 0, i32 11
  %.233 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.232, align 8
  %.234 = call i8* %.233(%string.676378* %.219)
  %.235 = getelementptr inbounds %string.676378, %string.676378* %.222, i64 0, i32 0
  %.236 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.235, align 8
  %.237 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.236, i64 0, i32 11
  %.238 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.237, align 8
  %.239 = call i8* %.238(%string.676378* %.222)
  %.240 = getelementptr inbounds %string.676378, %string.676378* %.229, i64 0, i32 0
  %.241 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.240, align 8
  %.242 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.241, i64 0, i32 11
  %.243 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.242, align 8
  %.244 = call i8* %.243(%string.676378* %.229)
  %.246 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @str.290, i64 0, i64 0), i8* %.234, i8* %.239, i8* %.244)
  %.248 = call i8* @malloc(i64 %.246)
  %.249 = call i64 (i8*, i8*, ...) @sprintf(i8* %.248, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @str.290, i64 0, i64 0), i8* %.234, i8* %.239, i8* %.244)
  %.250 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.251 = bitcast i8* %.250 to %string.676378*
  %.252 = bitcast i8* %.250 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.252, align 8
  %.254 = getelementptr inbounds i8, i8* %.250, i64 8
  %15 = bitcast i8* %.254 to i8**
  store i8* %.248, i8** %15, align 8
  %.256 = getelementptr inbounds i8, i8* %.250, i64 16
  %16 = bitcast i8* %.256 to i64*
  store i64 %.246, i64* %16, align 8
  %.258 = getelementptr inbounds i8, i8* %.250, i64 24
  %17 = bitcast i8* %.258 to i64*
  store i64 %.246, i64* %17, align 8
  %.262 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.41, align 8
  %.263 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.262, i64 0, i32 2
  %.264 = load %FloRange.676382*, %FloRange.676382** %.263, align 8
  call void %.216(%TypeChecker.676716* %.1, i64 5, %string.676378* %.251, %FloRange.676382* %.264)
  ret void

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif
  %.267 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.268 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.267, i64 0, i32 3
  %.269 = load i64, i64* %.268, align 8
  %.271.not = icmp eq i64 %.269, %.198
  br i1 %.271.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if.endif.endif.if

for.body.endif.endif.if.endif.endif.if:           ; preds = %for.body.endif.endif.if.endif.endif
  %.275 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.276 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.275, i64 0, i32 16
  %.277 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.276, align 8
  %.279 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.267, i64 0, i32 4
  %.280 = load %string.676378*, %string.676378** %.279, align 8
  %.282 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.283 = load %string.676378*, %string.676378** %.282, align 8
  %.285 = call %string.676378* @dump_access(i64 %.198)
  %.286 = getelementptr inbounds %string.676378, %string.676378* %.280, i64 0, i32 0
  %.287 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.286, align 8
  %.288 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.287, i64 0, i32 11
  %.289 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.288, align 8
  %.290 = call i8* %.289(%string.676378* %.280)
  %.291 = getelementptr inbounds %string.676378, %string.676378* %.283, i64 0, i32 0
  %.292 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.291, align 8
  %.293 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.292, i64 0, i32 11
  %.294 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.293, align 8
  %.295 = call i8* %.294(%string.676378* %.283)
  %.296 = getelementptr inbounds %string.676378, %string.676378* %.285, i64 0, i32 0
  %.297 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.296, align 8
  %.298 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.297, i64 0, i32 11
  %.299 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.298, align 8
  %.300 = call i8* %.299(%string.676378* %.285)
  %.302 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.291, i64 0, i64 0), i8* %.290, i8* %.295, i8* %.300)
  %.304 = call i8* @malloc(i64 %.302)
  %.305 = call i64 (i8*, i8*, ...) @sprintf(i8* %.304, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.291, i64 0, i64 0), i8* %.290, i8* %.295, i8* %.300)
  %.306 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.307 = bitcast i8* %.306 to %string.676378*
  %.308 = bitcast i8* %.306 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.308, align 8
  %.310 = getelementptr inbounds i8, i8* %.306, i64 8
  %18 = bitcast i8* %.310 to i8**
  store i8* %.304, i8** %18, align 8
  %.312 = getelementptr inbounds i8, i8* %.306, i64 16
  %19 = bitcast i8* %.312 to i64*
  store i64 %.302, i64* %19, align 8
  %.314 = getelementptr inbounds i8, i8* %.306, i64 24
  %20 = bitcast i8* %.314 to i64*
  store i64 %.302, i64* %20, align 8
  %.318 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.41, align 8
  %.319 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.318, i64 0, i32 2
  %.320 = load %FloRange.676382*, %FloRange.676382** %.319, align 8
  call void %.277(%TypeChecker.676716* %.1, i64 4, %string.676378* %.307, %FloRange.676382* %.320)
  ret void

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif.endif.endif
  %.334 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.335 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.334, i64 0, i32 70
  %.336 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.335, align 8
  %.338 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.467, i64 0, i32 5
  %.339 = load %Type.676538*, %Type.676538** %.338, align 8
  %.342 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.325, align 8
  %.343 = call %Expression.676558* %.336(%TypeChecker.676716* %.1, %Type.676538* %.339, %ExpressionNode.676442* %.342)
  %.344 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.467, i64 0, i32 6
  store %Expression.676558* %.343, %Expression.676558** %.344, align 8
  %.348 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.349 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.348, i64 0, i32 17
  %.350 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.349, align 8
  %.351 = call i1 %.350(%TypeChecker.676716* %.1)
  br i1 %.351, label %for.end, label %for.body.endif.endif.endif.if.endif

for.body.endif.endif.endif.else:                  ; preds = %for.body.endif.endif.endif
  %.468 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.467, i64 0, i32 2
  store i1 false, i1* %.468, align 1
  %.472 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.119, align 8
  %.473 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.472, i64 0, i32 0
  %.474 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.473, align 8
  %.475 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.474, i64 0, i32 2
  %.476 = load void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)** %.475, align 8
  %.478 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.467, i64 0, i32 4
  %.479 = load %string.676378*, %string.676378** %.478, align 8
  %.481 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.467, i64 0, i32 1
  %.482 = load %PropId.676604*, %PropId.676604** %.481, align 8
  call void %.476(%"Map<string, PropId>.676672"* %.472, %string.676378* %.479, %PropId.676604* %.482)
  %.487 = add i64 %current_vtable_index.030, 1
  br label %for.body.endif.endif.endif.endif

for.body.endif.endif.endif.endif:                 ; preds = %for.body.endif.endif.endif.if.endif.endif.endif, %for.body.endif.endif.endif.else
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.030, %for.body.endif.endif.endif.if.endif.endif.endif ], [ %.487, %for.body.endif.endif.endif.else ]
  %.492 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.491, align 8
  %.493 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.494 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.492, i64 0, i32 0
  %.495 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.494, align 8
  %.496 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.495, i64 0, i32 2
  %.497 = load void (%"Array<ClassField>.676670"*, %ClassField.676664*)*, void (%"Array<ClassField>.676670"*, %ClassField.676664*)** %.496, align 8
  call void %.497(%"Array<ClassField>.676670"* %.492, %ClassField.676664* %.493)
  %.503 = add nuw nsw i64 %storemerge29, 1
  %.19 = load %"Array<FieldNode>.676503"*, %"Array<FieldNode>.676503"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<FieldNode>.676503", %"Array<FieldNode>.676503"* %.19, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp slt i64 %.503, %.21
  br i1 %.22, label %for.body, label %for.end

for.body.endif.endif.endif.if.endif:              ; preds = %for.body.endif.endif.endif.if
  %.356 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.357 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.356, i64 0, i32 9
  %.358 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.357, align 8
  %.359 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.360 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.359, i64 0, i32 5
  %.361 = load %Type.676538*, %Type.676538** %.360, align 8
  %.363 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.359, i64 0, i32 6
  %.364 = load %Expression.676558*, %Expression.676558** %.363, align 8
  %.365 = getelementptr inbounds %Expression.676558, %Expression.676558* %.364, i64 0, i32 4
  %.366 = load %Type.676538*, %Type.676538** %.365, align 8
  %.367 = call i1 %.358(%TypeChecker.676716* %.1, %Type.676538* %.361, %Type.676538* %.366)
  br i1 %.367, label %for.body.endif.endif.endif.if.endif.endif, label %for.body.endif.endif.endif.if.endif.if

for.body.endif.endif.endif.if.endif.if:           ; preds = %for.body.endif.endif.endif.if.endif
  %.372 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.373 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.372, i64 0, i32 16
  %.374 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.373, align 8
  %.378 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.372, i64 0, i32 10
  %.379 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.378, align 8
  %.380 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.381 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.380, i64 0, i32 5
  %.382 = load %Type.676538*, %Type.676538** %.381, align 8
  %.383 = call %string.676378* %.379(%TypeChecker.676716* %.1, %Type.676538* %.382)
  %.386 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.387 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.386, i64 0, i32 10
  %.388 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.387, align 8
  %.389 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.390 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.389, i64 0, i32 6
  %.391 = load %Expression.676558*, %Expression.676558** %.390, align 8
  %.392 = getelementptr inbounds %Expression.676558, %Expression.676558* %.391, i64 0, i32 4
  %.393 = load %Type.676538*, %Type.676538** %.392, align 8
  %.394 = call %string.676378* %.388(%TypeChecker.676716* %.1, %Type.676538* %.393)
  %.395 = getelementptr inbounds %string.676378, %string.676378* %.383, i64 0, i32 0
  %.396 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.395, align 8
  %.397 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.396, i64 0, i32 11
  %.398 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.397, align 8
  %.399 = call i8* %.398(%string.676378* %.383)
  %.400 = getelementptr inbounds %string.676378, %string.676378* %.394, i64 0, i32 0
  %.401 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.400, align 8
  %.402 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.401, i64 0, i32 11
  %.403 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.402, align 8
  %.404 = call i8* %.403(%string.676378* %.394)
  %.406 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.292, i64 0, i64 0), i8* %.399, i8* %.404)
  %.408 = call i8* @malloc(i64 %.406)
  %.409 = call i64 (i8*, i8*, ...) @sprintf(i8* %.408, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.292, i64 0, i64 0), i8* %.399, i8* %.404)
  %.410 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.411 = bitcast i8* %.410 to %string.676378*
  %.412 = bitcast i8* %.410 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.412, align 8
  %.414 = getelementptr inbounds i8, i8* %.410, i64 8
  %21 = bitcast i8* %.414 to i8**
  store i8* %.408, i8** %21, align 8
  %.416 = getelementptr inbounds i8, i8* %.410, i64 16
  %22 = bitcast i8* %.416 to i64*
  store i64 %.406, i64* %22, align 8
  %.418 = getelementptr inbounds i8, i8* %.410, i64 24
  %23 = bitcast i8* %.418 to i64*
  store i64 %.406, i64* %23, align 8
  %.422 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.325, align 8
  %.423 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.422, i64 0, i32 1
  %.424 = load %FloRange.676382*, %FloRange.676382** %.423, align 8
  call void %.374(%TypeChecker.676716* %.1, i64 5, %string.676378* %.411, %FloRange.676382* %.424)
  br label %for.body.endif.endif.endif.if.endif.endif

for.body.endif.endif.endif.if.endif.endif:        ; preds = %for.body.endif.endif.endif.if.endif, %for.body.endif.endif.endif.if.endif.if
  %.427 = load %ClassField.676664*, %ClassField.676664** %field, align 8
  %.428 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.427, i64 0, i32 6
  %.429 = load %Expression.676558*, %Expression.676558** %.428, align 8
  %.430 = getelementptr inbounds %Expression.676558, %Expression.676558* %.429, i64 0, i32 2
  %.431 = load i1, i1* %.430, align 1
  br i1 %.431, label %for.body.endif.endif.endif.if.endif.endif.endif, label %for.body.endif.endif.endif.if.endif.endif.if

for.body.endif.endif.endif.if.endif.endif.if:     ; preds = %for.body.endif.endif.endif.if.endif.endif
  %.436 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.96, align 8
  %.437 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.436, i64 0, i32 16
  %.438 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.437, align 8
  %.439 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.440 = bitcast i8* %.439 to %string.676378*
  %.440.repack = bitcast i8* %.439 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.440.repack, align 8
  %.440.repack4 = getelementptr inbounds i8, i8* %.439, i64 8
  %24 = bitcast i8* %.440.repack4 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.293, i64 0, i64 0), i8** %24, align 8
  %.440.repack5 = getelementptr inbounds i8, i8* %.439, i64 16
  %25 = bitcast i8* %.440.repack5 to i64*
  store i64 45, i64* %25, align 8
  %.440.repack6 = getelementptr inbounds i8, i8* %.439, i64 24
  %26 = bitcast i8* %.440.repack6 to i64*
  store i64 45, i64* %26, align 8
  %.444 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.325, align 8
  %.445 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.444, i64 0, i32 1
  %.446 = load %FloRange.676382*, %FloRange.676382** %.445, align 8
  call void %.438(%TypeChecker.676716* %.1, i64 4, %string.676378* %.440, %FloRange.676382* %.446)
  ret void

for.body.endif.endif.endif.if.endif.endif.endif:  ; preds = %for.body.endif.endif.endif.if.endif.endif
  %.450 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.427, i64 0, i32 2
  store i1 true, i1* %.450, align 1
  %.454 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.453, align 8
  %.455 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.454, i64 0, i32 0
  %.456 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.455, align 8
  %.457 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.456, i64 0, i32 2
  %.458 = load void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)** %.457, align 8
  %.460 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.427, i64 0, i32 4
  %.461 = load %string.676378*, %string.676378** %.460, align 8
  %.463 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.427, i64 0, i32 1
  %.464 = load %PropId.676604*, %PropId.676604** %.463, align 8
  call void %.458(%"Map<string, PropId>.676672"* %.454, %string.676378* %.461, %PropId.676604* %.464)
  br label %for.body.endif.endif.endif.endif
}

define void @TypeChecker_declare_class_methods(%TypeChecker.676716* %.1, %Class.676668* nocapture %.2, %ClassDeclarationNode.676500* nocapture readonly %.3) {
.5:
  %.18 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.3, i64 0, i32 5
  %.1973 = load %"Array<MethodNode>.676504"*, %"Array<MethodNode>.676504"** %.18, align 8
  %.2074 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1973, i64 0, i32 2
  %.2175 = load i64, i64* %.2074, align 8
  %.2276 = icmp sgt i64 %.2175, 0
  br i1 %.2276, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.10 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 9
  %.11 = load i64, i64* %.10, align 8
  %.50 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.60 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %0 = bitcast %ScopeId.676626** %.60 to i64*
  %.217 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 7
  %.235 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 1
  %1 = bitcast %ClassId.676554** %.235 to i64*
  %.283 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.430 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 1
  %2 = bitcast %ClassId.676554** %.430 to %TypeId.676552**
  %.539 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 4
  %3 = bitcast %PropId.676604** %.539 to i64*
  %.492 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 8
  %.612 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif
  %.1979 = phi %"Array<MethodNode>.676504"* [ %.1973, %for.body.lr.ph ], [ %.19, %for.body.endif.endif.endif ]
  %current_vtable_index.078 = phi i64 [ %.11, %for.body.lr.ph ], [ %current_vtable_index.1, %for.body.endif.endif.endif ]
  %storemerge77 = phi i64 [ 0, %for.body.lr.ph ], [ %.630, %for.body.endif.endif.endif ]
  %.24 = call dereferenceable_or_null(88) i8* @malloc(i64 88)
  %.26 = bitcast i8* %.24 to %ClassMethod_vtable_ty.676667**
  store %ClassMethod_vtable_ty.676667* @ClassMethod_vtable_data, %ClassMethod_vtable_ty.676667** %.26, align 8
  %method = alloca %ClassMethod.676666*, align 8
  %4 = bitcast %ClassMethod.676666** %method to i8**
  store i8* %.24, i8** %4, align 8
  %.33 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.1979, i64 0, i32 0
  %.34 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.34, i64 0, i32 5
  %.36 = load %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)*, %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)** %.35, align 8
  %.37 = call %MethodNode.676494* %.36(%"Array<MethodNode>.676504"* %.1979, i64 %storemerge77)
  %.40 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 1
  %.41 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.42 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.41, i64 0, i32 3
  %5 = bitcast %string.676378** %.42 to i64*
  %.437 = load i64, i64* %5, align 8
  %name = alloca %string.676378*, align 8
  %6 = bitcast %string.676378** %name to i64*
  store i64 %.437, i64* %6, align 8
  %.45 = load %ClassMethod.676666*, %ClassMethod.676666** %method, align 8
  %.47 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 4
  %7 = bitcast %string.676378** %.47 to i64*
  store i64 %.437, i64* %7, align 8
  %.51 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.52 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.51, i64 0, i32 15
  %.53 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.52, align 8
  %.54 = call %Scope.676628* %.53(%TypeChecker.676716* %.1)
  %.58 = getelementptr inbounds %Scope.676628, %Scope.676628* %.54, i64 0, i32 1
  %8 = bitcast %ScopeId.676626** %.58 to i64*
  %.5910 = load i64, i64* %8, align 8
  store i64 %.5910, i64* %0, align 8
  %.64 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.66 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.68 = bitcast i8* %.66 to %"Array<FunctionArg>_vtable_ty.676659"**
  store %"Array<FunctionArg>_vtable_ty.676659"* @"Array<FunctionArg>_vtable_data", %"Array<FunctionArg>_vtable_ty.676659"** %.68, align 8
  %.70 = getelementptr inbounds i8, i8* %.66, i64 8
  %9 = bitcast i8* %.70 to i8**
  store i8* %.64, i8** %9, align 8
  %.72 = getelementptr inbounds i8, i8* %.66, i64 16
  %10 = bitcast i8* %.72 to i64*
  store i64 0, i64* %10, align 8
  %.74 = getelementptr inbounds i8, i8* %.66, i64 24
  %11 = bitcast i8* %.74 to i64*
  store i64 8, i64* %11, align 8
  %.76 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 7
  %12 = bitcast %"Array<FunctionArg>.676658"** %.76 to i8**
  store i8* %.66, i8** %12, align 8
  %.78 = load %string.676378*, %string.676378** %name, align 8
  %.79 = call i1 @is_operator_overload_name(%string.676378* %.78)
  br i1 %.79, label %for.body.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif, %.5
  ret void

for.body.if:                                      ; preds = %for.body
  %.82 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.83 = bitcast i8* %.82 to %string.676378*
  %.83.repack = bitcast i8* %.82 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.83.repack, align 8
  %.83.repack39 = getelementptr inbounds i8, i8* %.82, i64 8
  %13 = bitcast i8* %.83.repack39 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.248, i64 0, i64 0), i8** %13, align 8
  %.83.repack40 = getelementptr inbounds i8, i8* %.82, i64 16
  %14 = bitcast i8* %.83.repack40 to i64*
  store i64 11, i64* %14, align 8
  %.83.repack41 = getelementptr inbounds i8, i8* %.82, i64 24
  %15 = bitcast i8* %.83.repack41 to i64*
  store i64 11, i64* %15, align 8
  %.85 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.86 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.85, align 8
  %.87 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.86, i64 0, i32 4
  %.88 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.87, align 8
  %.89 = call i1 %.88(%string.676378* %.78, %string.676378* %.83)
  %. = select i1 %.89, i64 2, i64 1
  %.96 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 2
  %.97 = load %"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"** %.96, align 8
  %.98 = getelementptr inbounds %"Array<ArgNode>.676492", %"Array<ArgNode>.676492"* %.97, i64 0, i32 2
  %.99 = load i64, i64* %.98, align 8
  %.101.not = icmp eq i64 %.99, %.
  br i1 %.101.not, label %end.endif, label %end.if

for.body.endif:                                   ; preds = %end.endif, %for.body
  %.182 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 7
  %.183 = load i1, i1* %.182, align 1
  %.184 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 8
  store i1 %.183, i1* %.184, align 1
  %.188 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 6
  %.189 = load i1, i1* %.188, align 1
  %.190 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 2
  store i1 %.189, i1* %.190, align 1
  %.194 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 4
  %.195 = load i64, i64* %.194, align 8
  %.196 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 3
  store i64 %.195, i64* %.196, align 8
  %.201 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.202 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.201, i64 0, i32 31
  %.203 = load %FunctionType.676544* (%TypeChecker.676716*, %"Array<ArgNode>.676492"*, %TypeNode.676426*, %"Array<FunctionArg>.676658"*)*, %FunctionType.676544* (%TypeChecker.676716*, %"Array<ArgNode>.676492"*, %TypeNode.676426*, %"Array<FunctionArg>.676658"*)** %.202, align 8
  %.205 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 2
  %.206 = load %"Array<ArgNode>.676492"*, %"Array<ArgNode>.676492"** %.205, align 8
  %.208 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 5
  %.209 = load %TypeNode.676426*, %TypeNode.676426** %.208, align 8
  %.212 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.76, align 8
  %.213 = call %FunctionType.676544* %.203(%TypeChecker.676716* %.1, %"Array<ArgNode>.676492"* %.206, %TypeNode.676426* %.209, %"Array<FunctionArg>.676658"* %.212)
  %.214 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 5
  store %FunctionType.676544* %.213, %FunctionType.676544** %.214, align 8
  %.218 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.217, align 8
  %.219 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.218, i64 0, i32 0
  %.220 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.219, align 8
  %.221 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.220, i64 0, i32 3
  %.222 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.221, align 8
  %.224 = call %PropId.676604* %.222(%"Map<string, PropId>.676672"* %.218, %string.676378* %.78)
  %16 = ptrtoint %PropId.676604* %.224 to i64
  %.227 = trunc i64 %16 to i32
  %.229.not = icmp eq i32 %.227, 0
  br i1 %.229.not, label %for.body.endif.endif, label %for.body.endif.if

end.if:                                           ; preds = %for.body.if
  %.85.le81 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.105 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.105, i64 0, i32 16
  %.107 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.106, align 8
  %.116 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.85.le81, align 8
  %.117 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.116, i64 0, i32 11
  %.118 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.117, align 8
  %.119 = call i8* %.118(%string.676378* %.78)
  %.121 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.294, i64 0, i64 0), i64 %., i8* %.119, i64 %.99)
  %.123 = call i8* @malloc(i64 %.121)
  %.124 = call i64 (i8*, i8*, ...) @sprintf(i8* %.123, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @str.294, i64 0, i64 0), i64 %., i8* %.119, i64 %.99)
  %.125 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.126 = bitcast i8* %.125 to %string.676378*
  %.127 = bitcast i8* %.125 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.127, align 8
  %.129 = getelementptr inbounds i8, i8* %.125, i64 8
  %17 = bitcast i8* %.129 to i8**
  store i8* %.123, i8** %17, align 8
  %.131 = getelementptr inbounds i8, i8* %.125, i64 16
  %18 = bitcast i8* %.131 to i64*
  store i64 %.121, i64* %18, align 8
  %.133 = getelementptr inbounds i8, i8* %.125, i64 24
  %19 = bitcast i8* %.133 to i64*
  store i64 %.121, i64* %19, align 8
  %.137 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.138 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.137, i64 0, i32 2
  %.139 = load %FloRange.676382*, %FloRange.676382** %.138, align 8
  call void %.107(%TypeChecker.676716* %.1, i64 4, %string.676378* %.126, %FloRange.676382* %.139)
  ret void

end.endif:                                        ; preds = %for.body.if
  %.143 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.37, i64 0, i32 6
  %.144 = load i1, i1* %.143, align 1
  br i1 %.144, label %end.endif.if, label %for.body.endif

end.endif.if:                                     ; preds = %end.endif
  %.85.le = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.148 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.149 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.148, i64 0, i32 16
  %.150 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.149, align 8
  %.153 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.85.le, align 8
  %.154 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.153, i64 0, i32 11
  %.155 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.154, align 8
  %.156 = call i8* %.155(%string.676378* %.78)
  %.158 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.295, i64 0, i64 0), i8* %.156)
  %.160 = call i8* @malloc(i64 %.158)
  %.161 = call i64 (i8*, i8*, ...) @sprintf(i8* %.160, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.295, i64 0, i64 0), i8* %.156)
  %.162 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.162 to %string.676378*
  %.164 = bitcast i8* %.162 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.164, align 8
  %.166 = getelementptr inbounds i8, i8* %.162, i64 8
  %20 = bitcast i8* %.166 to i8**
  store i8* %.160, i8** %20, align 8
  %.168 = getelementptr inbounds i8, i8* %.162, i64 16
  %21 = bitcast i8* %.168 to i64*
  store i64 %.158, i64* %21, align 8
  %.170 = getelementptr inbounds i8, i8* %.162, i64 24
  %22 = bitcast i8* %.170 to i64*
  store i64 %.158, i64* %22, align 8
  %.174 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.175 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.174, i64 0, i32 2
  %.176 = load %FloRange.676382*, %FloRange.676382** %.175, align 8
  call void %.150(%TypeChecker.676716* %.1, i64 4, %string.676378* %.163, %FloRange.676382* %.176)
  ret void

for.body.endif.if:                                ; preds = %for.body.endif
  %.232 = getelementptr inbounds %PropId.676604, %PropId.676604* %.224, i64 0, i32 2
  %23 = bitcast %TypeId.676552** %.232 to i64*
  %.23336 = load i64, i64* %23, align 8
  %.23637 = load i64, i64* %1, align 8
  %.237 = trunc i64 %.23336 to i32
  %.238 = trunc i64 %.23637 to i32
  %.239 = icmp eq i32 %.237, %.238
  br i1 %.239, label %for.body.endif.if.if, label %for.body.endif.if.endif

for.body.endif.endif:                             ; preds = %for.body.endif, %for.body.endif.if.endif.endif.endif
  %.419.sink = phi i64 [ %.419, %for.body.endif.if.endif.endif.endif ], [ %current_vtable_index.078, %for.body.endif ]
  %.420 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 10
  store i64 %.419.sink, i64* %.420, align 8
  %.43111 = load %TypeId.676552*, %TypeId.676552** %2, align 8
  %.434 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.435 = bitcast i8* %.434 to %PropId.676604*
  %.436 = bitcast i8* %.434 to %PropId_vtable_ty.676605**
  store %PropId_vtable_ty.676605* @PropId_vtable_data, %PropId_vtable_ty.676605** %.436, align 8
  call void @PropId_constructor(%PropId.676604* %.435, i64 0, %TypeId.676552* %.43111, i64 %storemerge77)
  %.439 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 1
  %24 = bitcast %PropId.676604** %.439 to i8**
  store i8* %.434, i8** %24, align 8
  %.443 = load i1, i1* %.188, align 1
  br i1 %.443, label %for.body.endif.endif.if, label %for.body.endif.endif.else

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.243 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.244 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.243, i64 0, i32 16
  %.245 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.244, align 8
  %.248 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.249 = load %string.676378*, %string.676378** %.248, align 8
  %.250 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.251 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.250, align 8
  %.252 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.251, i64 0, i32 11
  %.253 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.252, align 8
  %.254 = call i8* %.253(%string.676378* %.78)
  %.255 = getelementptr inbounds %string.676378, %string.676378* %.249, i64 0, i32 0
  %.256 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.255, align 8
  %.257 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.256, i64 0, i32 11
  %.258 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.257, align 8
  %.259 = call i8* %.258(%string.676378* %.249)
  %.261 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.296, i64 0, i64 0), i8* %.254, i8* %.259)
  %.263 = call i8* @malloc(i64 %.261)
  %.264 = call i64 (i8*, i8*, ...) @sprintf(i8* %.263, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.296, i64 0, i64 0), i8* %.254, i8* %.259)
  %.265 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.266 = bitcast i8* %.265 to %string.676378*
  %.267 = bitcast i8* %.265 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.267, align 8
  %.269 = getelementptr inbounds i8, i8* %.265, i64 8
  %25 = bitcast i8* %.269 to i8**
  store i8* %.263, i8** %25, align 8
  %.271 = getelementptr inbounds i8, i8* %.265, i64 16
  %26 = bitcast i8* %.271 to i64*
  store i64 %.261, i64* %26, align 8
  %.273 = getelementptr inbounds i8, i8* %.265, i64 24
  %27 = bitcast i8* %.273 to i64*
  store i64 %.261, i64* %27, align 8
  %.277 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.278 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.277, i64 0, i32 2
  %.279 = load %FloRange.676382*, %FloRange.676382** %.278, align 8
  call void %.245(%TypeChecker.676716* %.1, i64 1, %string.676378* %.266, %FloRange.676382* %.279)
  ret void

for.body.endif.if.endif:                          ; preds = %for.body.endif.if
  %.284 = load %Program.676712*, %Program.676712** %.283, align 8
  %.286 = call %Type.676538* @get_class_prop_type(%Program.676712* %.284, %PropId.676604* %.224)
  %.290 = load %Program.676712*, %Program.676712** %.283, align 8
  %.292 = call i64 @get_class_prop_visibility(%Program.676712* %.290, %PropId.676604* %.224)
  %.296 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.297 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.296, i64 0, i32 9
  %.298 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.297, align 8
  %28 = bitcast %FunctionType.676544** %.214 to %Type.676538**
  %.30238 = load %Type.676538*, %Type.676538** %28, align 8
  %.304 = call i1 %.298(%TypeChecker.676716* %.1, %Type.676538* %.286, %Type.676538* %.30238)
  br i1 %.304, label %for.body.endif.if.endif.endif, label %for.body.endif.if.endif.if

for.body.endif.if.endif.if:                       ; preds = %for.body.endif.if.endif
  %.309 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.310 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.309, i64 0, i32 16
  %.311 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.310, align 8
  %.314 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.315 = load %string.676378*, %string.676378** %.314, align 8
  %.319 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.309, i64 0, i32 10
  %.320 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.319, align 8
  %.322 = call %string.676378* %.320(%TypeChecker.676716* %.1, %Type.676538* %.286)
  %.323 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.324 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.323, align 8
  %.325 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.324, i64 0, i32 11
  %.326 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.325, align 8
  %.327 = call i8* %.326(%string.676378* %.78)
  %.328 = getelementptr inbounds %string.676378, %string.676378* %.315, i64 0, i32 0
  %.329 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.328, align 8
  %.330 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.329, i64 0, i32 11
  %.331 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.330, align 8
  %.332 = call i8* %.331(%string.676378* %.315)
  %.333 = getelementptr inbounds %string.676378, %string.676378* %.322, i64 0, i32 0
  %.334 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.333, align 8
  %.335 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.334, i64 0, i32 11
  %.336 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.335, align 8
  %.337 = call i8* %.336(%string.676378* %.322)
  %.339 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @str.297, i64 0, i64 0), i8* %.327, i8* %.332, i8* %.337)
  %.341 = call i8* @malloc(i64 %.339)
  %.342 = call i64 (i8*, i8*, ...) @sprintf(i8* %.341, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @str.297, i64 0, i64 0), i8* %.327, i8* %.332, i8* %.337)
  %.343 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.344 = bitcast i8* %.343 to %string.676378*
  %.345 = bitcast i8* %.343 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.345, align 8
  %.347 = getelementptr inbounds i8, i8* %.343, i64 8
  %29 = bitcast i8* %.347 to i8**
  store i8* %.341, i8** %29, align 8
  %.349 = getelementptr inbounds i8, i8* %.343, i64 16
  %30 = bitcast i8* %.349 to i64*
  store i64 %.339, i64* %30, align 8
  %.351 = getelementptr inbounds i8, i8* %.343, i64 24
  %31 = bitcast i8* %.351 to i64*
  store i64 %.339, i64* %31, align 8
  %.355 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.356 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.355, i64 0, i32 2
  %.357 = load %FloRange.676382*, %FloRange.676382** %.356, align 8
  call void %.311(%TypeChecker.676716* %.1, i64 5, %string.676378* %.344, %FloRange.676382* %.357)
  ret void

for.body.endif.if.endif.endif:                    ; preds = %for.body.endif.if.endif
  %.362 = load i64, i64* %.196, align 8
  %.364.not = icmp eq i64 %.362, %.292
  br i1 %.364.not, label %for.body.endif.if.endif.endif.endif, label %for.body.endif.if.endif.endif.if

for.body.endif.if.endif.endif.if:                 ; preds = %for.body.endif.if.endif.endif
  %.368 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.369 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.368, i64 0, i32 16
  %.370 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.369, align 8
  %.373 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.374 = load %string.676378*, %string.676378** %.373, align 8
  %.376 = call %string.676378* @dump_access(i64 %.292)
  %.377 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.378 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.377, align 8
  %.379 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.378, i64 0, i32 11
  %.380 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.379, align 8
  %.381 = call i8* %.380(%string.676378* %.78)
  %.382 = getelementptr inbounds %string.676378, %string.676378* %.374, i64 0, i32 0
  %.383 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.382, align 8
  %.384 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.383, i64 0, i32 11
  %.385 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.384, align 8
  %.386 = call i8* %.385(%string.676378* %.374)
  %.387 = getelementptr inbounds %string.676378, %string.676378* %.376, i64 0, i32 0
  %.388 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.387, align 8
  %.389 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.388, i64 0, i32 11
  %.390 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.389, align 8
  %.391 = call i8* %.390(%string.676378* %.376)
  %.393 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.298, i64 0, i64 0), i8* %.381, i8* %.386, i8* %.391)
  %.395 = call i8* @malloc(i64 %.393)
  %.396 = call i64 (i8*, i8*, ...) @sprintf(i8* %.395, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.298, i64 0, i64 0), i8* %.381, i8* %.386, i8* %.391)
  %.397 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.398 = bitcast i8* %.397 to %string.676378*
  %.399 = bitcast i8* %.397 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.399, align 8
  %.401 = getelementptr inbounds i8, i8* %.397, i64 8
  %32 = bitcast i8* %.401 to i8**
  store i8* %.395, i8** %32, align 8
  %.403 = getelementptr inbounds i8, i8* %.397, i64 16
  %33 = bitcast i8* %.403 to i64*
  store i64 %.393, i64* %33, align 8
  %.405 = getelementptr inbounds i8, i8* %.397, i64 24
  %34 = bitcast i8* %.405 to i64*
  store i64 %.393, i64* %34, align 8
  %.409 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.410 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.409, i64 0, i32 2
  %.411 = load %FloRange.676382*, %FloRange.676382** %.410, align 8
  call void %.370(%TypeChecker.676716* %.1, i64 4, %string.676378* %.398, %FloRange.676382* %.411)
  ret void

for.body.endif.if.endif.endif.endif:              ; preds = %for.body.endif.if.endif.endif
  %.417 = load %Program.676712*, %Program.676712** %.283, align 8
  %.419 = call i64 @get_vtable_index(%Program.676712* %.417, %PropId.676604* %.224)
  br label %for.body.endif.endif

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.447 = load i1, i1* %.182, align 1
  br i1 %.447, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.else:                        ; preds = %for.body.endif.endif
  %.506 = load %string.676378*, %string.676378** %.47, align 8
  %.507 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.508 = bitcast i8* %.507 to %string.676378*
  %.508.repack = bitcast i8* %.507 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.508.repack, align 8
  %.508.repack12 = getelementptr inbounds i8, i8* %.507, i64 8
  %35 = bitcast i8* %.508.repack12 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.300, i64 0, i64 0), i8** %35, align 8
  %.508.repack13 = getelementptr inbounds i8, i8* %.507, i64 16
  %36 = bitcast i8* %.508.repack13 to i64*
  store i64 11, i64* %36, align 8
  %.508.repack14 = getelementptr inbounds i8, i8* %.507, i64 24
  %37 = bitcast i8* %.508.repack14 to i64*
  store i64 11, i64* %37, align 8
  %.510 = getelementptr inbounds %string.676378, %string.676378* %.506, i64 0, i32 0
  %.511 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.510, align 8
  %.512 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.511, i64 0, i32 4
  %.513 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.512, align 8
  %.514 = call i1 %.513(%string.676378* %.506, %string.676378* %.508)
  br i1 %.514, label %for.body.endif.endif.else.if, label %for.body.endif.endif.else.else

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.else.endif, %for.body.endif.endif.if.endif.endif
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.078, %for.body.endif.endif.if.endif.endif ], [ %current_vtable_index.2, %for.body.endif.endif.else.endif ]
  %.60818 = load i64, i64* %8, align 8
  %.609 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 9
  %38 = bitcast %ScopeId.676626** %.609 to i64*
  store i64 %.60818, i64* %38, align 8
  %.613 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.612, align 8
  %.615 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.613, i64 0, i32 0
  %.616 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.615, align 8
  %.617 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.616, i64 0, i32 2
  %.618 = load void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)*, void (%"Array<ClassMethod>.676671"*, %ClassMethod.676666*)** %.617, align 8
  call void %.618(%"Array<ClassMethod>.676671"* %.613, %ClassMethod.676666* %.45)
  %.622 = getelementptr inbounds %Scope.676628, %Scope.676628* %.54, i64 0, i32 6
  %39 = bitcast %ScopeId.676626** %.622 to i64*
  %.62319 = load i64, i64* %39, align 8
  store i64 %.62319, i64* %0, align 8
  %.630 = add nuw nsw i64 %storemerge77, 1
  %.19 = load %"Array<MethodNode>.676504"*, %"Array<MethodNode>.676504"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.19, i64 0, i32 2
  %.21 = load i64, i64* %.20, align 8
  %.22 = icmp slt i64 %.630, %.21
  br i1 %.22, label %for.body, label %for.end

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.451 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.452 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.451, i64 0, i32 16
  %.453 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.452, align 8
  %.454 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.455 = bitcast i8* %.454 to %string.676378*
  %.455.repack = bitcast i8* %.454 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.455.repack, align 8
  %.455.repack33 = getelementptr inbounds i8, i8* %.454, i64 8
  %40 = bitcast i8* %.455.repack33 to i8**
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.299, i64 0, i64 0), i8** %40, align 8
  %.455.repack34 = getelementptr inbounds i8, i8* %.454, i64 16
  %41 = bitcast i8* %.455.repack34 to i64*
  store i64 31, i64* %41, align 8
  %.455.repack35 = getelementptr inbounds i8, i8* %.454, i64 24
  %42 = bitcast i8* %.455.repack35 to i64*
  store i64 31, i64* %42, align 8
  %.459 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.460 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.459, i64 0, i32 2
  %.461 = load %FloRange.676382*, %FloRange.676382** %.460, align 8
  call void %.453(%TypeChecker.676716* %.1, i64 4, %string.676378* %.455, %FloRange.676382* %.461)
  ret void

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if
  %.466 = load %string.676378*, %string.676378** %.47, align 8
  %.467 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.468 = bitcast i8* %.467 to %string.676378*
  %.468.repack = bitcast i8* %.467 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.468.repack, align 8
  %.468.repack27 = getelementptr inbounds i8, i8* %.467, i64 8
  %43 = bitcast i8* %.468.repack27 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.300, i64 0, i64 0), i8** %43, align 8
  %.468.repack28 = getelementptr inbounds i8, i8* %.467, i64 16
  %44 = bitcast i8* %.468.repack28 to i64*
  store i64 11, i64* %44, align 8
  %.468.repack29 = getelementptr inbounds i8, i8* %.467, i64 24
  %45 = bitcast i8* %.468.repack29 to i64*
  store i64 11, i64* %45, align 8
  %.470 = getelementptr inbounds %string.676378, %string.676378* %.466, i64 0, i32 0
  %.471 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.470, align 8
  %.472 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.471, i64 0, i32 4
  %.473 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.472, align 8
  %.474 = call i1 %.473(%string.676378* %.466, %string.676378* %.468)
  br i1 %.474, label %for.body.endif.endif.if.endif.if, label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.478 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.479 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.478, i64 0, i32 16
  %.480 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.479, align 8
  %.481 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.482 = bitcast i8* %.481 to %string.676378*
  %.482.repack = bitcast i8* %.481 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.482.repack, align 8
  %.482.repack30 = getelementptr inbounds i8, i8* %.481, i64 8
  %46 = bitcast i8* %.482.repack30 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.301, i64 0, i64 0), i8** %46, align 8
  %.482.repack31 = getelementptr inbounds i8, i8* %.481, i64 16
  %47 = bitcast i8* %.482.repack31 to i64*
  store i64 33, i64* %47, align 8
  %.482.repack32 = getelementptr inbounds i8, i8* %.481, i64 24
  %48 = bitcast i8* %.482.repack32 to i64*
  store i64 33, i64* %48, align 8
  %.486 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.487 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.486, i64 0, i32 2
  %.488 = load %FloRange.676382*, %FloRange.676382** %.487, align 8
  call void %.480(%TypeChecker.676716* %.1, i64 4, %string.676378* %.482, %FloRange.676382* %.488)
  ret void

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif
  %.493 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.492, align 8
  %.494 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.493, i64 0, i32 0
  %.495 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.494, align 8
  %.496 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.495, i64 0, i32 2
  %.497 = load void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)** %.496, align 8
  %.501 = load %PropId.676604*, %PropId.676604** %.439, align 8
  call void %.497(%"Map<string, PropId>.676672"* %.493, %string.676378* %.78, %PropId.676604* %.501)
  br label %for.body.endif.endif.endif

for.body.endif.endif.else.if:                     ; preds = %for.body.endif.endif.else
  %.518 = load i1, i1* %.182, align 1
  br i1 %.518, label %for.body.endif.endif.else.if.if, label %for.body.endif.endif.else.if.endif

for.body.endif.endif.else.else:                   ; preds = %for.body.endif.endif.else
  %.544 = load i64, i64* %.196, align 8
  %.545.not = icmp eq i64 %.544, 0
  br i1 %.545.not, label %for.body.endif.endif.else.else.else, label %for.body.endif.endif.else.else.if

for.body.endif.endif.else.endif:                  ; preds = %for.body.endif.endif.else.else.endif, %for.body.endif.endif.else.if.endif
  %current_vtable_index.2 = phi i64 [ %current_vtable_index.078, %for.body.endif.endif.else.if.endif ], [ %current_vtable_index.3, %for.body.endif.endif.else.else.endif ]
  %.588 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.589 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.588, i64 0, i32 23
  %.590 = load %Const.676662* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)*, %Const.676662* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)** %.589, align 8
  %.591 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.592 = bitcast i8* %.591 to %string.676378*
  %.592.repack = bitcast i8* %.591 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.592.repack, align 8
  %.592.repack15 = getelementptr inbounds i8, i8* %.591, i64 8
  %49 = bitcast i8* %.592.repack15 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.181, i64 0, i64 0), i8** %49, align 8
  %.592.repack16 = getelementptr inbounds i8, i8* %.591, i64 16
  %50 = bitcast i8* %.592.repack16 to i64*
  store i64 4, i64* %50, align 8
  %.592.repack17 = getelementptr inbounds i8, i8* %.591, i64 24
  %51 = bitcast i8* %.592.repack17 to i64*
  store i64 4, i64* %51, align 8
  %.596 = load %ClassId.676554*, %ClassId.676554** %.430, align 8
  %.597 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.598 = bitcast i8* %.597 to %ObjectType.676562*
  %.599 = bitcast i8* %.597 to %ObjectType_vtable_ty.676563**
  store %ObjectType_vtable_ty.676563* @ObjectType_vtable_data, %ObjectType_vtable_ty.676563** %.599, align 8
  call void @ObjectType_constructor(%ObjectType.676562* %.598, %ClassId.676554* %.596)
  %.602 = bitcast i8* %.597 to %Type.676538*
  %.603 = call %Const.676662* %.590(%TypeChecker.676716* %.1, %string.676378* %.592, %Expression.676558* null, %Type.676538* %.602)
  br label %for.body.endif.endif.endif

for.body.endif.endif.else.if.if:                  ; preds = %for.body.endif.endif.else.if
  %.522 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.523 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.522, i64 0, i32 16
  %.524 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.523, align 8
  %.525 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.526 = bitcast i8* %.525 to %string.676378*
  %.526.repack = bitcast i8* %.525 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.526.repack, align 8
  %.526.repack24 = getelementptr inbounds i8, i8* %.525, i64 8
  %52 = bitcast i8* %.526.repack24 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.302, i64 0, i64 0), i8** %52, align 8
  %.526.repack25 = getelementptr inbounds i8, i8* %.525, i64 16
  %53 = bitcast i8* %.526.repack25 to i64*
  store i64 35, i64* %53, align 8
  %.526.repack26 = getelementptr inbounds i8, i8* %.525, i64 24
  %54 = bitcast i8* %.526.repack26 to i64*
  store i64 35, i64* %54, align 8
  %.530 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.531 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.530, i64 0, i32 2
  %.532 = load %FloRange.676382*, %FloRange.676382** %.531, align 8
  call void %.524(%TypeChecker.676716* %.1, i64 4, %string.676378* %.526, %FloRange.676382* %.532)
  ret void

for.body.endif.endif.else.if.endif:               ; preds = %for.body.endif.endif.else.if
  %55 = bitcast %PropId.676604** %.439 to i64*
  %.53823 = load i64, i64* %55, align 8
  store i64 %.53823, i64* %3, align 8
  br label %for.body.endif.endif.else.endif

for.body.endif.endif.else.else.if:                ; preds = %for.body.endif.endif.else.else
  %.550 = add i64 %current_vtable_index.078, 1
  br label %for.body.endif.endif.else.else.endif

for.body.endif.endif.else.else.else:              ; preds = %for.body.endif.endif.else.else
  %.555 = load i1, i1* %.182, align 1
  br i1 %.555, label %for.body.endif.endif.else.else.else.if, label %for.body.endif.endif.else.else.endif

for.body.endif.endif.else.else.endif:             ; preds = %for.body.endif.endif.else.else.else, %for.body.endif.endif.else.else.if
  %current_vtable_index.3 = phi i64 [ %.550, %for.body.endif.endif.else.else.if ], [ %current_vtable_index.078, %for.body.endif.endif.else.else.else ]
  %.575 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.217, align 8
  %.576 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.575, i64 0, i32 0
  %.577 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.576, align 8
  %.578 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.577, i64 0, i32 2
  %.579 = load void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)** %.578, align 8
  %.583 = load %PropId.676604*, %PropId.676604** %.439, align 8
  call void %.579(%"Map<string, PropId>.676672"* %.575, %string.676378* %.78, %PropId.676604* %.583)
  br label %for.body.endif.endif.else.endif

for.body.endif.endif.else.else.else.if:           ; preds = %for.body.endif.endif.else.else.else
  %.559 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.50, align 8
  %.560 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.559, i64 0, i32 16
  %.561 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.560, align 8
  %.562 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.563 = bitcast i8* %.562 to %string.676378*
  %.563.repack = bitcast i8* %.562 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.563.repack, align 8
  %.563.repack20 = getelementptr inbounds i8, i8* %.562, i64 8
  %56 = bitcast i8* %.563.repack20 to i8**
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @str.303, i64 0, i64 0), i8** %56, align 8
  %.563.repack21 = getelementptr inbounds i8, i8* %.562, i64 16
  %57 = bitcast i8* %.563.repack21 to i64*
  store i64 58, i64* %57, align 8
  %.563.repack22 = getelementptr inbounds i8, i8* %.562, i64 24
  %58 = bitcast i8* %.563.repack22 to i64*
  store i64 58, i64* %58, align 8
  %.567 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.40, align 8
  %.568 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.567, i64 0, i32 2
  %.569 = load %FloRange.676382*, %FloRange.676382** %.568, align 8
  call void %.561(%TypeChecker.676716* %.1, i64 4, %string.676378* %.563, %FloRange.676382* %.569)
  ret void
}

define void @TypeChecker_add_inherited_props_to_class(%TypeChecker.676716* %.1, %Class.676668* nocapture %.2, %ClassDeclarationNode.676500* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 3
  %0 = bitcast %Type.676538** %.10 to %ObjectType.676562**
  %.112 = load %ObjectType.676562*, %ObjectType.676562** %0, align 8
  %.15 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.112, i64 0, i32 1
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.16, 13
  br i1 %.17.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.20 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.21 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.20, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.21, i64 0, i32 16
  %.23 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.22, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.21, i64 0, i32 10
  %.28 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.27, align 8
  %.30 = bitcast %ObjectType.676562* %.112 to %Type.676538*
  %.31 = call %string.676378* %.28(%TypeChecker.676716* %.1, %Type.676538* %.30)
  %.32 = getelementptr inbounds %string.676378, %string.676378* %.31, i64 0, i32 0
  %.33 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.32, align 8
  %.34 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.33, i64 0, i32 11
  %.35 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.34, align 8
  %.36 = call i8* %.35(%string.676378* %.31)
  %.38 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.304, i64 0, i64 0), i8* %.36)
  %.40 = call i8* @malloc(i64 %.38)
  %.41 = call i64 (i8*, i8*, ...) @sprintf(i8* %.40, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.304, i64 0, i64 0), i8* %.36)
  %.42 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.43 = bitcast i8* %.42 to %string.676378*
  %.44 = bitcast i8* %.42 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.44, align 8
  %.46 = getelementptr inbounds i8, i8* %.42, i64 8
  %1 = bitcast i8* %.46 to i8**
  store i8* %.40, i8** %1, align 8
  %.48 = getelementptr inbounds i8, i8* %.42, i64 16
  %2 = bitcast i8* %.48 to i64*
  store i64 %.38, i64* %2, align 8
  %.50 = getelementptr inbounds i8, i8* %.42, i64 24
  %3 = bitcast i8* %.50 to i64*
  store i64 %.38, i64* %3, align 8
  %.53 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.3, i64 0, i32 3
  %.54 = load %RecordTypeNode.676428*, %RecordTypeNode.676428** %.53, align 8
  %.55 = getelementptr inbounds %RecordTypeNode.676428, %RecordTypeNode.676428* %.54, i64 0, i32 1
  %.56 = load %FloRange.676382*, %FloRange.676382** %.55, align 8
  call void %.23(%TypeChecker.676716* %.1, i64 5, %string.676378* %.43, %FloRange.676382* %.56)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.60 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.112, i64 0, i32 2
  %.6134 = load %ClassId.676554*, %ClassId.676554** %.60, align 8
  %.64 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.65 = load %Program.676712*, %Program.676712** %.64, align 8
  %.67 = call %Class.676668* @get_class(%Program.676712* %.65, %ClassId.676554* %.6134)
  %.70 = getelementptr inbounds %Class.676668, %Class.676668* %.67, i64 0, i32 7
  %.71 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.70, align 8
  %.72 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.71, i64 0, i32 0
  %.73 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.72, align 8
  %.74 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.73, i64 0, i32 4
  %.75 = load %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)*, %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)** %.74, align 8
  %.76 = call %"Array<Bucket<string, PropId>>.676678"* %.75(%"Map<string, PropId>.676672"* %.71)
  %.83 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.76, i64 0, i32 2
  %.848 = load i64, i64* %.83, align 8
  %.859 = icmp sgt i64 %.848, 0
  br i1 %.859, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif
  %.89 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.76, i64 0, i32 0
  %.114 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 7
  %.158 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 10
  %.171 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge10 = phi i64 [ 0, %for.body.lr.ph ], [ %.193, %for.incr ]
  %.90 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.89, align 8
  %.91 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.90, i64 0, i32 5
  %.92 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.91, align 8
  %.93 = call %"Bucket<string, PropId>.676676"* %.92(%"Array<Bucket<string, PropId>>.676678"* %.76, i64 %storemerge10)
  %.94 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.93, i64 0, i32 1
  %4 = bitcast %string.676378** %.94 to i64*
  %.955 = load i64, i64* %4, align 8
  %parent_prop_name = alloca %string.676378*, align 8
  %5 = bitcast %string.676378** %parent_prop_name to i64*
  store i64 %.955, i64* %5, align 8
  %.100 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.89, align 8
  %.101 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.100, i64 0, i32 5
  %.102 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.101, align 8
  %.103 = call %"Bucket<string, PropId>.676676"* %.102(%"Array<Bucket<string, PropId>>.676678"* %.76, i64 %storemerge10)
  %.104 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.103, i64 0, i32 2
  %6 = bitcast %PropId.676604** %.104 to i64*
  %.1056 = load i64, i64* %6, align 8
  %parent_prop_id = alloca %PropId.676604*, align 8
  %7 = bitcast %PropId.676604** %parent_prop_id to i64*
  store i64 %.1056, i64* %7, align 8
  %.109 = load %Program.676712*, %Program.676712** %.64, align 8
  %.110.cast = inttoptr i64 %.1056 to %PropId.676604*
  %.111 = call %Type.676538* @get_class_prop_type(%Program.676712* %.109, %PropId.676604* %.110.cast)
  %.115 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.114, align 8
  %.116 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.115, i64 0, i32 0
  %.117 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.116, align 8
  %.118 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.117, i64 0, i32 3
  %.119 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.118, align 8
  %.120 = load %string.676378*, %string.676378** %parent_prop_name, align 8
  %.121 = call %PropId.676604* %.119(%"Map<string, PropId>.676672"* %.115, %string.676378* %.120)
  %child_prop_id = alloca %PropId.676604*, align 8
  store %PropId.676604* %.121, %PropId.676604** %child_prop_id, align 8
  %.125 = load %Program.676712*, %Program.676712** %.64, align 8
  %.126 = load %PropId.676604*, %PropId.676604** %parent_prop_id, align 8
  %.127 = call i64 @get_class_prop_visibility(%Program.676712* %.125, %PropId.676604* %.126)
  %.131 = load %Program.676712*, %Program.676712** %.64, align 8
  %.133 = call i1 @is_class_prop_static(%Program.676712* %.131, %PropId.676604* %.126)
  br i1 %.133, label %for.incr, label %for.body.endif

for.incr:                                         ; preds = %for.body.endif.endif, %for.body.endif.endif.if.endif.endif, %for.body.endif, %for.body
  %.193 = add nuw nsw i64 %storemerge10, 1
  %.84 = load i64, i64* %.83, align 8
  %.85 = icmp slt i64 %.193, %.84
  br i1 %.85, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.5.endif
  ret void

for.body.endif:                                   ; preds = %for.body
  %.139 = icmp eq i64 %.127, 0
  %.141 = getelementptr inbounds %Type.676538, %Type.676538* %.111, i64 0, i32 1
  %.142 = load i64, i64* %.141, align 8
  %.143 = icmp eq i64 %.142, 17
  %.144 = and i1 %.139, %.143
  br i1 %.144, label %for.incr, label %for.body.endif.endif

for.body.endif.endif:                             ; preds = %for.body.endif
  %8 = bitcast %PropId.676604** %child_prop_id to i64*
  %.1477 = load i64, i64* %8, align 8
  %.148 = trunc i64 %.1477 to i32
  %.150 = icmp eq i32 %.148, 0
  br i1 %.150, label %for.body.endif.endif.if, label %for.incr

for.body.endif.endif.if:                          ; preds = %for.body.endif.endif
  %.153 = getelementptr inbounds %PropId.676604, %PropId.676604* %.126, i64 0, i32 1
  %.154 = load i64, i64* %.153, align 8
  %.155 = icmp eq i64 %.154, 1
  br i1 %.155, label %for.body.endif.endif.if.if, label %for.body.endif.endif.if.endif

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.159 = load i64, i64* %.158, align 8
  %.160 = add i64 %.159, 1
  store i64 %.160, i64* %.158, align 8
  br label %for.body.endif.endif.if.endif

for.body.endif.endif.if.endif:                    ; preds = %for.body.endif.endif.if.if, %for.body.endif.endif.if
  %.167 = load i64, i64* %.153, align 8
  %.168 = icmp eq i64 %.167, 0
  br i1 %.168, label %for.body.endif.endif.if.endif.if, label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.if:                 ; preds = %for.body.endif.endif.if.endif
  %.172 = load i64, i64* %.171, align 8
  %.173 = add i64 %.172, 1
  store i64 %.173, i64* %.171, align 8
  br label %for.body.endif.endif.if.endif.endif

for.body.endif.endif.if.endif.endif:              ; preds = %for.body.endif.endif.if.endif.if, %for.body.endif.endif.if.endif
  %.180 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.114, align 8
  %.181 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.180, i64 0, i32 0
  %.182 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.181, align 8
  %.183 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.182, i64 0, i32 2
  %.184 = load void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)*, void (%"Map<string, PropId>.676672"*, %string.676378*, %PropId.676604*)** %.183, align 8
  call void %.184(%"Map<string, PropId>.676672"* %.180, %string.676378* %.120, %PropId.676604* %.126)
  br label %for.incr
}

define void @TypeChecker_check_class_body(%TypeChecker.676716* %.1, %ClassDeclarationNode.676500* %.2) {
.4:
  %.8 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 1
  %.9 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.9, i64 0, i32 3
  %.11 = load %string.676378*, %string.676378** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.15, i64 0, i32 14
  %.17 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.16, align 8
  %.19 = call %Type.676538* %.17(%TypeChecker.676716* %.1, %string.676378* %.11)
  %.22 = getelementptr inbounds %Type.676538, %Type.676538* %.19, i64 0, i32 1
  %.23 = load i64, i64* %.22, align 8
  %.24 = icmp eq i64 %.23, 21
  br i1 %.24, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %for.body.1.endif, %.4.endif.endif.endif, %.4.endif.endif, %.4
  ret void

.4.endif:                                         ; preds = %.4
  %.29 = getelementptr inbounds %Type.676538, %Type.676538* %.19, i64 1
  %0 = bitcast %Type.676538* %.29 to %ClassId.676554**
  %.3056 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.33 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.34 = load %Program.676712*, %Program.676712** %.33, align 8
  %.36 = call %Class.676668* @get_class(%Program.676712* %.34, %ClassId.676554* %.3056)
  %.40 = getelementptr inbounds %Class.676668, %Class.676668* %.36, i64 0, i32 1
  %1 = bitcast %ClassId.676554** %.40 to i64*
  %.417 = load i64, i64* %1, align 8
  %.42 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 3
  %2 = bitcast %ClassId.676554** %.42 to i64*
  store i64 %.417, i64* %2, align 8
  %.45 = getelementptr inbounds %Class.676668, %Class.676668* %.36, i64 0, i32 3
  %3 = bitcast %Type.676538** %.45 to i64*
  %.468 = load i64, i64* %3, align 8
  %.47 = trunc i64 %.468 to i32
  %.49.not = icmp eq i32 %.47, 0
  br i1 %.49.not, label %.4.endif.endif, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.53 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.54 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.53, i64 0, i32 41
  %.55 = load void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)** %.54, align 8
  call void %.55(%TypeChecker.676716* %.1, %Class.676668* %.36, %ClassDeclarationNode.676500* %.2)
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif, %.4.endif.if
  %.62 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.63 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.62, i64 0, i32 39
  %.64 = load void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)** %.63, align 8
  call void %.64(%TypeChecker.676716* %.1, %Class.676668* %.36, %ClassDeclarationNode.676500* %.2)
  %.70 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 17
  %.72 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.71, align 8
  %.73 = call i1 %.72(%TypeChecker.676716* %.1)
  br i1 %.73, label %.4.if, label %.4.endif.endif.endif

.4.endif.endif.endif:                             ; preds = %.4.endif.endif
  %.78 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.79 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.78, i64 0, i32 40
  %.80 = load void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)*, void (%TypeChecker.676716*, %Class.676668*, %ClassDeclarationNode.676500*)** %.79, align 8
  call void %.80(%TypeChecker.676716* %.1, %Class.676668* %.36, %ClassDeclarationNode.676500* %.2)
  %.86 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.87 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.86, i64 0, i32 17
  %.88 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.87, align 8
  %.89 = call i1 %.88(%TypeChecker.676716* %.1)
  br i1 %.89, label %.4.if, label %.4.endif.endif.endif.endif

.4.endif.endif.endif.endif:                       ; preds = %.4.endif.endif.endif
  %.93 = getelementptr inbounds %Class.676668, %Class.676668* %.36, i64 0, i32 7
  %.94 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.93, align 8
  %.95 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.94, i64 0, i32 0
  %.96 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.95, align 8
  %.97 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.96, i64 0, i32 4
  %.98 = load %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)*, %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)** %.97, align 8
  %.99 = call %"Array<Bucket<string, PropId>>.676678"* %.98(%"Map<string, PropId>.676672"* %.94)
  %.106 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.99, i64 0, i32 2
  %.10726 = load i64, i64* %.106, align 8
  %.10827 = icmp sgt i64 %.10726, 0
  br i1 %.10827, label %for.body.lr.ph, label %for.entry.1

for.body.lr.ph:                                   ; preds = %.4.endif.endif.endif.endif
  %.112 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.99, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge28 = phi i64 [ 0, %for.body.lr.ph ], [ %.194, %for.body.endif ]
  %.113 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.112, align 8
  %.114 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.113, i64 0, i32 5
  %.115 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.114, align 8
  %.116 = call %"Bucket<string, PropId>.676676"* %.115(%"Array<Bucket<string, PropId>>.676678"* %.99, i64 %storemerge28)
  %.117 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.116, i64 0, i32 2
  %4 = bitcast %PropId.676604** %.117 to i64*
  %.11816 = load i64, i64* %4, align 8
  %prop_id = alloca %PropId.676604*, align 8
  %5 = bitcast %PropId.676604** %prop_id to i64*
  store i64 %.11816, i64* %5, align 8
  %.123 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.112, align 8
  %.124 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.123, i64 0, i32 5
  %.125 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.124, align 8
  %.126 = call %"Bucket<string, PropId>.676676"* %.125(%"Array<Bucket<string, PropId>>.676678"* %.99, i64 %storemerge28)
  %.127 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.126, i64 0, i32 1
  %6 = bitcast %string.676378** %.127 to i64*
  %.12817 = load i64, i64* %6, align 8
  %prop_name = alloca %string.676378*, align 8
  %7 = bitcast %string.676378** %prop_name to i64*
  store i64 %.12817, i64* %7, align 8
  %.130 = load %PropId.676604*, %PropId.676604** %prop_id, align 8
  %.131 = getelementptr inbounds %PropId.676604, %PropId.676604* %.130, i64 0, i32 1
  %.132 = load i64, i64* %.131, align 8
  %.133 = icmp eq i64 %.132, 0
  br i1 %.133, label %for.body.if, label %for.body.endif

for.body.if:                                      ; preds = %for.body
  %.137 = load %Program.676712*, %Program.676712** %.33, align 8
  %.139 = call %ClassMethod.676666* @get_method(%Program.676712* %.137, %PropId.676604* %.130)
  %.142 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.139, i64 0, i32 8
  %.143 = load i1, i1* %.142, align 1
  br i1 %.143, label %for.body.if.if, label %for.body.endif

for.body.endif:                                   ; preds = %for.body.if, %for.body
  %.194 = add nuw nsw i64 %storemerge28, 1
  %.107 = load i64, i64* %.106, align 8
  %.108 = icmp slt i64 %.194, %.107
  br i1 %.108, label %for.body, label %for.entry.1

for.body.if.if:                                   ; preds = %for.body.if
  %.146 = getelementptr inbounds %Class.676668, %Class.676668* %.36, i64 0, i32 4
  %8 = bitcast %PropId.676604** %.146 to i64*
  %.14718 = load i64, i64* %8, align 8
  %.148 = trunc i64 %.14718 to i32
  %.150.not = icmp eq i32 %.148, 0
  br i1 %.150.not, label %for.body.if.if.endif, label %for.body.if.if.if

for.body.if.if.if:                                ; preds = %for.body.if.if
  %.154 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.155 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.154, i64 0, i32 16
  %.156 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.155, align 8
  %.157 = load %string.676378*, %string.676378** %prop_name, align 8
  %.158 = getelementptr inbounds %string.676378, %string.676378* %.157, i64 0, i32 0
  %.159 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.158, align 8
  %.160 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.159, i64 0, i32 11
  %.161 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.160, align 8
  %.162 = call i8* %.161(%string.676378* %.157)
  %.164 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @str.305, i64 0, i64 0), i8* %.162)
  %.166 = call i8* @malloc(i64 %.164)
  %.167 = call i64 (i8*, i8*, ...) @sprintf(i8* %.166, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @str.305, i64 0, i64 0), i8* %.162)
  %.168 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.169 = bitcast i8* %.168 to %string.676378*
  %.170 = bitcast i8* %.168 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.170, align 8
  %.172 = getelementptr inbounds i8, i8* %.168, i64 8
  %9 = bitcast i8* %.172 to i8**
  store i8* %.166, i8** %9, align 8
  %.174 = getelementptr inbounds i8, i8* %.168, i64 16
  %10 = bitcast i8* %.174 to i64*
  store i64 %.164, i64* %10, align 8
  %.176 = getelementptr inbounds i8, i8* %.168, i64 24
  %11 = bitcast i8* %.176 to i64*
  store i64 %.164, i64* %11, align 8
  %.180 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.181 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.180, i64 0, i32 2
  %.182 = load %FloRange.676382*, %FloRange.676382** %.181, align 8
  call void %.156(%TypeChecker.676716* %.1, i64 4, %string.676378* %.169, %FloRange.676382* %.182)
  ret void

for.body.if.if.endif:                             ; preds = %for.body.if.if
  %.186 = getelementptr inbounds %Class.676668, %Class.676668* %.36, i64 0, i32 11
  store i1 true, i1* %.186, align 1
  br label %for.entry.1

for.entry.1:                                      ; preds = %for.body.endif, %.4.endif.endif.endif.endif, %for.body.if.if.endif
  %.202 = getelementptr inbounds %Class.676668, %Class.676668* %.36, i64 0, i32 6
  %.20320 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.202, align 8
  %.20421 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.20320, i64 0, i32 2
  %.20522 = load i64, i64* %.20421, align 8
  %.20623 = icmp sgt i64 %.20522, 0
  br i1 %.20623, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.entry.1
  %.222 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 5
  %12 = bitcast %PropId.676604** %.222 to i64*
  %.226 = getelementptr inbounds %ClassDeclarationNode.676500, %ClassDeclarationNode.676500* %.2, i64 0, i32 5
  %.238 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %13 = bitcast %ScopeId.676626** %.238 to i64*
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.incr.1
  %.20325 = phi %"Array<ClassMethod>.676671"* [ %.20320, %for.body.1.lr.ph ], [ %.203, %for.incr.1 ]
  %storemerge924 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.333, %for.incr.1 ]
  %.212 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.20325, i64 0, i32 0
  %.213 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.213, i64 0, i32 5
  %.215 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.214, align 8
  %.216 = call %ClassMethod.676666* %.215(%"Array<ClassMethod>.676671"* %.20325, i64 %storemerge924)
  %.220 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.216, i64 0, i32 1
  %14 = bitcast %PropId.676604** %.220 to i64*
  %.22110 = load i64, i64* %14, align 8
  store i64 %.22110, i64* %12, align 8
  %.227 = load %"Array<MethodNode>.676504"*, %"Array<MethodNode>.676504"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<MethodNode>.676504", %"Array<MethodNode>.676504"* %.227, i64 0, i32 0
  %.229 = load %"Array<MethodNode>_vtable_ty.676507"*, %"Array<MethodNode>_vtable_ty.676507"** %.228, align 8
  %.230 = getelementptr inbounds %"Array<MethodNode>_vtable_ty.676507", %"Array<MethodNode>_vtable_ty.676507"* %.229, i64 0, i32 5
  %.231 = load %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)*, %MethodNode.676494* (%"Array<MethodNode>.676504"*, i64)** %.230, align 8
  %.232 = call %MethodNode.676494* %.231(%"Array<MethodNode>.676504"* %.227, i64 %storemerge924)
  %.236 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.216, i64 0, i32 9
  %15 = bitcast %ScopeId.676626** %.236 to i64*
  %.23711 = load i64, i64* %15, align 8
  store i64 %.23711, i64* %13, align 8
  %.241 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.216, i64 0, i32 8
  %.242 = load i1, i1* %.241, align 1
  br i1 %.242, label %for.incr.1, label %for.body.1.endif

for.incr.1:                                       ; preds = %for.body.1, %for.body.1.endif.endif.endif
  %.333 = add nuw nsw i64 %storemerge924, 1
  %.203 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.202, align 8
  %.204 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.203, i64 0, i32 2
  %.205 = load i64, i64* %.204, align 8
  %.206 = icmp slt i64 %.333, %.205
  br i1 %.206, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.incr.1, %for.entry.1
  store %ClassId.676554* null, %ClassId.676554** %.42, align 8
  ret void

for.body.1.endif:                                 ; preds = %for.body.1
  %.248 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.249 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.248, i64 0, i32 81
  %.250 = load %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)** %.249, align 8
  %.252 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.232, i64 0, i32 3
  %.253 = load %BlockNode.676438*, %BlockNode.676438** %.252, align 8
  %.254 = call %Block.676610* %.250(%TypeChecker.676716* %.1, %BlockNode.676438* %.253)
  %.255 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.216, i64 0, i32 6
  store %Block.676610* %.254, %Block.676610** %.255, align 8
  %.259 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.260 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.259, i64 0, i32 17
  %.261 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.260, align 8
  %.262 = call i1 %.261(%TypeChecker.676716* %.1)
  br i1 %.262, label %.4.if, label %for.body.1.endif.endif

for.body.1.endif.endif:                           ; preds = %for.body.1.endif
  %.267 = load %Block.676610*, %Block.676610** %.255, align 8
  %.268 = getelementptr inbounds %Block.676610, %Block.676610* %.267, i64 0, i32 2
  %.269 = load i1, i1* %.268, align 1
  br i1 %.269, label %for.body.1.endif.endif.endif, label %for.body.1.endif.endif.if

for.body.1.endif.endif.if:                        ; preds = %for.body.1.endif.endif
  %.273 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.216, i64 0, i32 5
  %.274 = load %FunctionType.676544*, %FunctionType.676544** %.273, align 8
  %.275 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.274, i64 0, i32 3
  %.276 = load %Type.676538*, %Type.676538** %.275, align 8
  %.277 = getelementptr inbounds %Type.676538, %Type.676538* %.276, i64 0, i32 1
  %.278 = load i64, i64* %.277, align 8
  %.279 = icmp eq i64 %.278, 12
  br i1 %.279, label %for.body.1.endif.endif.if.if, label %for.body.1.endif.endif.if.else

for.body.1.endif.endif.endif:                     ; preds = %for.body.1.endif.endif, %for.body.1.endif.endif.if.if
  store %PropId.676604* null, %PropId.676604** %.222, align 8
  %.320 = load %Program.676712*, %Program.676712** %.33, align 8
  %.323 = load %ScopeId.676626*, %ScopeId.676626** %.236, align 8
  %.324 = call %Scope.676628* @get_scope(%Program.676712* %.320, %ScopeId.676626* %.323)
  %.325 = getelementptr inbounds %Scope.676628, %Scope.676628* %.324, i64 0, i32 6
  %16 = bitcast %ScopeId.676626** %.325 to i64*
  %.32612 = load i64, i64* %16, align 8
  store i64 %.32612, i64* %13, align 8
  br label %for.incr.1

for.body.1.endif.endif.if.if:                     ; preds = %for.body.1.endif.endif.if
  %.284 = getelementptr inbounds %Block.676610, %Block.676610* %.267, i64 0, i32 1
  %.285 = load %"Array<Statement>.676612"*, %"Array<Statement>.676612"** %.284, align 8
  %.286 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.287 = bitcast i8* %.286 to %ReturnStatement.676624*
  %.288 = bitcast i8* %.286 to %ReturnStatement_vtable_ty.676625**
  store %ReturnStatement_vtable_ty.676625* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.676625** %.288, align 8
  call void @ReturnStatement_constructor(%ReturnStatement.676624* %.287)
  %.291 = bitcast i8* %.286 to %Statement.676550*
  %.292 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.285, i64 0, i32 0
  %.293 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.292, align 8
  %.294 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.293, i64 0, i32 2
  %.295 = load void (%"Array<Statement>.676612"*, %Statement.676550*)*, void (%"Array<Statement>.676612"*, %Statement.676550*)** %.294, align 8
  call void %.295(%"Array<Statement>.676612"* %.285, %Statement.676550* %.291)
  br label %for.body.1.endif.endif.endif

for.body.1.endif.endif.if.else:                   ; preds = %for.body.1.endif.endif.if
  %.300 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.301 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.300, i64 0, i32 16
  %.302 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.301, align 8
  %.303 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.304 = bitcast i8* %.303 to %string.676378*
  %.304.repack = bitcast i8* %.303 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.304.repack, align 8
  %.304.repack13 = getelementptr inbounds i8, i8* %.303, i64 8
  %17 = bitcast i8* %.304.repack13 to i8**
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.306, i64 0, i64 0), i8** %17, align 8
  %.304.repack14 = getelementptr inbounds i8, i8* %.303, i64 16
  %18 = bitcast i8* %.304.repack14 to i64*
  store i64 38, i64* %18, align 8
  %.304.repack15 = getelementptr inbounds i8, i8* %.303, i64 24
  %19 = bitcast i8* %.304.repack15 to i64*
  store i64 38, i64* %19, align 8
  %.307 = getelementptr inbounds %MethodNode.676494, %MethodNode.676494* %.232, i64 0, i32 5
  %.308 = load %TypeNode.676426*, %TypeNode.676426** %.307, align 8
  %.309 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.308, i64 0, i32 1
  %.310 = load %FloRange.676382*, %FloRange.676382** %.309, align 8
  call void %.302(%TypeChecker.676716* %.1, i64 4, %string.676378* %.304, %FloRange.676382* %.310)
  ret void
}

define void @TypeChecker_check_function_body(%TypeChecker.676716* %.1, %Function.676656* nocapture %.2, %FunctionDeclarationNode.676490* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 7
  %.11 = load i1, i1* %.10, align 1
  br i1 %.11, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif, %.5
  ret void

.5.endif:                                         ; preds = %.5
  %.20 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 1
  %0 = bitcast %VarId.676596** %.20 to i64*
  %.212 = load i64, i64* %0, align 8
  %.22 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 4
  %1 = bitcast %VarId.676596** %.22 to i64*
  store i64 %.212, i64* %1, align 8
  %.30 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 6
  %2 = bitcast %ScopeId.676626** %.30 to i64*
  %.314 = load i64, i64* %2, align 8
  %.32 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %3 = bitcast %ScopeId.676626** %.32 to i64*
  store i64 %.314, i64* %3, align 8
  %.36 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.37 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.36, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.37, i64 0, i32 81
  %.39 = load %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)** %.38, align 8
  %.41 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.3, i64 0, i32 3
  %.42 = load %BlockNode.676438*, %BlockNode.676438** %.41, align 8
  %.43 = call %Block.676610* %.39(%TypeChecker.676716* %.1, %BlockNode.676438* %.42)
  %.44 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 4
  store %Block.676610* %.43, %Block.676610** %.44, align 8
  %.48 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.36, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.48, i64 0, i32 17
  %.50 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.49, align 8
  %.51 = call i1 %.50(%TypeChecker.676716* %.1)
  br i1 %.51, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.56 = load %Block.676610*, %Block.676610** %.44, align 8
  %.57 = getelementptr inbounds %Block.676610, %Block.676610* %.56, i64 0, i32 2
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.62 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 5
  %.63 = load %FunctionType.676544*, %FunctionType.676544** %.62, align 8
  %.64 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.63, i64 0, i32 3
  %.65 = load %Type.676538*, %Type.676538** %.64, align 8
  %.66 = getelementptr inbounds %Type.676538, %Type.676538* %.65, i64 0, i32 1
  %.67 = load i64, i64* %.66, align 8
  %.68 = icmp eq i64 %.67, 12
  br i1 %.68, label %.5.endif.endif.if.if, label %.5.endif.endif.if.else

.5.endif.endif.endif:                             ; preds = %.5.endif.endif, %.5.endif.endif.if.if
  %.105 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.106 = load %Program.676712*, %Program.676712** %.105, align 8
  %.109 = load %ScopeId.676626*, %ScopeId.676626** %.30, align 8
  %.110 = call %Scope.676628* @get_scope(%Program.676712* %.106, %ScopeId.676626* %.109)
  %.111 = getelementptr inbounds %Scope.676628, %Scope.676628* %.110, i64 0, i32 6
  %4 = bitcast %ScopeId.676626** %.111 to i64*
  %.1125 = load i64, i64* %4, align 8
  store i64 %.1125, i64* %3, align 8
  ret void

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.73 = getelementptr inbounds %Block.676610, %Block.676610* %.56, i64 0, i32 1
  %.74 = load %"Array<Statement>.676612"*, %"Array<Statement>.676612"** %.73, align 8
  %.75 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.76 = bitcast i8* %.75 to %ReturnStatement.676624*
  %.77 = bitcast i8* %.75 to %ReturnStatement_vtable_ty.676625**
  store %ReturnStatement_vtable_ty.676625* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.676625** %.77, align 8
  call void @ReturnStatement_constructor(%ReturnStatement.676624* %.76)
  %.80 = bitcast i8* %.75 to %Statement.676550*
  %.81 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.74, i64 0, i32 0
  %.82 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.81, align 8
  %.83 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.82, i64 0, i32 2
  %.84 = load void (%"Array<Statement>.676612"*, %Statement.676550*)*, void (%"Array<Statement>.676612"*, %Statement.676550*)** %.83, align 8
  call void %.84(%"Array<Statement>.676612"* %.74, %Statement.676550* %.80)
  br label %.5.endif.endif.endif

.5.endif.endif.if.else:                           ; preds = %.5.endif.endif.if
  %.89 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.36, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.89, i64 0, i32 16
  %.91 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.90, align 8
  %.92 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.93 = bitcast i8* %.92 to %string.676378*
  %.93.repack = bitcast i8* %.92 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.93.repack, align 8
  %.93.repack6 = getelementptr inbounds i8, i8* %.92, i64 8
  %5 = bitcast i8* %.93.repack6 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.307, i64 0, i64 0), i8** %5, align 8
  %.93.repack7 = getelementptr inbounds i8, i8* %.92, i64 16
  %6 = bitcast i8* %.93.repack7 to i64*
  store i64 40, i64* %6, align 8
  %.93.repack8 = getelementptr inbounds i8, i8* %.92, i64 24
  %7 = bitcast i8* %.93.repack8 to i64*
  store i64 40, i64* %7, align 8
  %.96 = getelementptr inbounds %FunctionDeclarationNode.676490, %FunctionDeclarationNode.676490* %.3, i64 0, i32 4
  %.97 = load %TypeNode.676426*, %TypeNode.676426** %.96, align 8
  %.98 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.97, i64 0, i32 1
  %.99 = load %FloRange.676382*, %FloRange.676382** %.98, align 8
  call void %.91(%TypeChecker.676716* %.1, i64 4, %string.676378* %.93, %FloRange.676382* %.99)
  ret void
}

define %Type.676538* @TypeChecker_check_type(%TypeChecker.676716* %.1, %TypeNode.676426* %.2) {
.4:
  %.8 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.10 = icmp eq i64 %.9, 0
  br i1 %.10, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.12 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.13 = bitcast i8* %.12 to %Type.676538*
  %.14 = bitcast i8* %.12 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.14, align 8
  call void @Type_constructor(%Type.676538* %.13, i64 0)
  ret %Type.676538* %.13

.4.endif:                                         ; preds = %.4
  %.20.off = add i64 %.9, -1
  %0 = icmp ult i64 %.20.off, 11
  br i1 %0, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.31 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.32 = bitcast i8* %.31 to %Type.676538*
  %.33 = bitcast i8* %.31 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.33, align 8
  call void @Type_constructor(%Type.676538* %.32, i64 %.9)
  ret %Type.676538* %.32

.4.endif.endif:                                   ; preds = %.4.endif
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif.endif [
    i64 12, label %.4.endif.endif.if
    i64 15, label %.4.endif.endif.endif.if
    i64 16, label %.4.endif.endif.endif.endif.if
    i64 17, label %.4.endif.endif.endif.endif.endif.if
    i64 18, label %.4.endif.endif.endif.endif.endif.endif.if
  ]

.4.endif.endif.if:                                ; preds = %.4.endif.endif
  %.42 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.43 = bitcast i8* %.42 to %Type.676538*
  %.44 = bitcast i8* %.42 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.44, align 8
  call void @Type_constructor(%Type.676538* %.43, i64 12)
  ret %Type.676538* %.43

.4.endif.endif.endif.if:                          ; preds = %.4.endif.endif
  %.54 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.55 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.54, align 8
  %.56 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.55, i64 0, i32 44
  %.57 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.56, align 8
  %.60 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.2, i64 1
  %1 = bitcast %TypeNode.676426* %.60 to %TypeNode.676426**
  %.61 = load %TypeNode.676426*, %TypeNode.676426** %1, align 8
  %.62 = call %Type.676538* %.57(%TypeChecker.676716* %.1, %TypeNode.676426* %.61)
  %.63 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.64 = bitcast i8* %.63 to %PointerType.676542*
  %.65 = bitcast i8* %.63 to %PointerType_vtable_ty.676543**
  store %PointerType_vtable_ty.676543* @PointerType_vtable_data, %PointerType_vtable_ty.676543** %.65, align 8
  call void @PointerType_constructor(%PointerType.676542* %.64, %Type.676538* %.62)
  %.68 = bitcast i8* %.63 to %Type.676538*
  ret %Type.676538* %.68

.4.endif.endif.endif.endif.if:                    ; preds = %.4.endif.endif
  %array_node = alloca %ArrayTypeNode.676444*, align 8
  %2 = bitcast %ArrayTypeNode.676444** %array_node to %TypeNode.676426**
  store %TypeNode.676426* %.2, %TypeNode.676426** %2, align 8
  %.79 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.80 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.79, align 8
  %.81 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.80, i64 0, i32 70
  %.82 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.81, align 8
  %.83 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.84 = bitcast i8* %.83 to %Type.676538*
  %.85 = bitcast i8* %.83 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.85, align 8
  call void @Type_constructor(%Type.676538* %.84, i64 7)
  %.88 = load %ArrayTypeNode.676444*, %ArrayTypeNode.676444** %array_node, align 8
  %.89 = getelementptr inbounds %ArrayTypeNode.676444, %ArrayTypeNode.676444* %.88, i64 0, i32 4
  %.90 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.89, align 8
  %.91 = call %Expression.676558* %.82(%TypeChecker.676716* %.1, %Type.676538* %.84, %ExpressionNode.676442* %.90)
  %.94 = getelementptr inbounds %Expression.676558, %Expression.676558* %.91, i64 0, i32 4
  %.95 = load %Type.676538*, %Type.676538** %.94, align 8
  %.96 = call i1 @is_int(%Type.676538* %.95)
  br i1 %.96, label %.4.endif.endif.endif.endif.if.endif, label %.4.endif.endif.endif.endif.if.if

.4.endif.endif.endif.endif.if.if:                 ; preds = %.4.endif.endif.endif.endif.if
  %.101 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.79, align 8
  %.102 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.101, i64 0, i32 16
  %.103 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.102, align 8
  %.104 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.105 = bitcast i8* %.104 to %string.676378*
  %.105.repack = bitcast i8* %.104 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.105.repack, align 8
  %.105.repack11 = getelementptr inbounds i8, i8* %.104, i64 8
  %3 = bitcast i8* %.105.repack11 to i8**
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.308, i64 0, i64 0), i8** %3, align 8
  %.105.repack12 = getelementptr inbounds i8, i8* %.104, i64 16
  %4 = bitcast i8* %.105.repack12 to i64*
  store i64 16, i64* %4, align 8
  %.105.repack13 = getelementptr inbounds i8, i8* %.104, i64 24
  %5 = bitcast i8* %.105.repack13 to i64*
  store i64 16, i64* %5, align 8
  %.109 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.89, align 8
  %.110 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.109, i64 0, i32 1
  %.111 = load %FloRange.676382*, %FloRange.676382** %.110, align 8
  call void %.103(%TypeChecker.676716* %.1, i64 4, %string.676378* %.105, %FloRange.676382* %.111)
  ret %Type.676538* null

.4.endif.endif.endif.endif.if.endif:              ; preds = %.4.endif.endif.endif.endif.if
  %.115 = getelementptr inbounds %Expression.676558, %Expression.676558* %.91, i64 0, i32 2
  %.116 = load i1, i1* %.115, align 1
  br i1 %.116, label %.4.endif.endif.endif.endif.if.endif.endif, label %.4.endif.endif.endif.endif.if.endif.if

.4.endif.endif.endif.endif.if.endif.if:           ; preds = %.4.endif.endif.endif.endif.if.endif
  %.121 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.79, align 8
  %.122 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.121, i64 0, i32 16
  %.123 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.122, align 8
  %.124 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.125 = bitcast i8* %.124 to %string.676378*
  %.125.repack = bitcast i8* %.124 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.125.repack, align 8
  %.125.repack8 = getelementptr inbounds i8, i8* %.124, i64 8
  %6 = bitcast i8* %.125.repack8 to i8**
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.309, i64 0, i64 0), i8** %6, align 8
  %.125.repack9 = getelementptr inbounds i8, i8* %.124, i64 16
  %7 = bitcast i8* %.125.repack9 to i64*
  store i64 30, i64* %7, align 8
  %.125.repack10 = getelementptr inbounds i8, i8* %.124, i64 24
  %8 = bitcast i8* %.125.repack10 to i64*
  store i64 30, i64* %8, align 8
  %.129 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.89, align 8
  %.130 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.129, i64 0, i32 1
  %.131 = load %FloRange.676382*, %FloRange.676382** %.130, align 8
  call void %.123(%TypeChecker.676716* %.1, i64 4, %string.676378* %.125, %FloRange.676382* %.131)
  ret %Type.676538* null

.4.endif.endif.endif.endif.if.endif.endif:        ; preds = %.4.endif.endif.endif.endif.if.endif
  %.135 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.136 = load %Program.676712*, %Program.676712** %.135, align 8
  %.138 = call i64 @evaluate_const_int_expression(%Program.676712* %.136, %Expression.676558* %.91)
  %.141 = icmp slt i64 %.138, 0
  %.145 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.79, align 8
  br i1 %.141, label %.4.endif.endif.endif.endif.if.endif.endif.if, label %.4.endif.endif.endif.endif.if.endif.endif.endif

.4.endif.endif.endif.endif.if.endif.endif.if:     ; preds = %.4.endif.endif.endif.endif.if.endif.endif
  %.146 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.145, i64 0, i32 16
  %.147 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.146, align 8
  %.148 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.149 = bitcast i8* %.148 to %string.676378*
  %.149.repack = bitcast i8* %.148 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.149.repack, align 8
  %.149.repack5 = getelementptr inbounds i8, i8* %.148, i64 8
  %9 = bitcast i8* %.149.repack5 to i8**
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.310, i64 0, i64 0), i8** %9, align 8
  %.149.repack6 = getelementptr inbounds i8, i8* %.148, i64 16
  %10 = bitcast i8* %.149.repack6 to i64*
  store i64 31, i64* %10, align 8
  %.149.repack7 = getelementptr inbounds i8, i8* %.148, i64 24
  %11 = bitcast i8* %.149.repack7 to i64*
  store i64 31, i64* %11, align 8
  %.153 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.89, align 8
  %.154 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.153, i64 0, i32 1
  %.155 = load %FloRange.676382*, %FloRange.676382** %.154, align 8
  call void %.147(%TypeChecker.676716* %.1, i64 4, %string.676378* %.149, %FloRange.676382* %.155)
  ret %Type.676538* null

.4.endif.endif.endif.endif.if.endif.endif.endif:  ; preds = %.4.endif.endif.endif.endif.if.endif.endif
  %.161 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.145, i64 0, i32 44
  %.162 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.161, align 8
  %.164 = getelementptr inbounds %ArrayTypeNode.676444, %ArrayTypeNode.676444* %.88, i64 0, i32 3
  %.165 = load %TypeNode.676426*, %TypeNode.676426** %.164, align 8
  %.166 = call %Type.676538* %.162(%TypeChecker.676716* %.1, %TypeNode.676426* %.165)
  %.170 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.171 = bitcast i8* %.170 to %ArrayType.676560*
  %.172 = bitcast i8* %.170 to %ArrayType_vtable_ty.676561**
  store %ArrayType_vtable_ty.676561* @ArrayType_vtable_data, %ArrayType_vtable_ty.676561** %.172, align 8
  call void @ArrayType_constructor(%ArrayType.676560* %.171, %Type.676538* %.166, i64 %.138)
  %.175 = bitcast i8* %.170 to %Type.676538*
  ret %Type.676538* %.175

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4.endif.endif
  %fnc_node = alloca %FunctionTypeNode.676432*, align 8
  %12 = bitcast %FunctionTypeNode.676432** %fnc_node to %TypeNode.676426**
  store %TypeNode.676426* %.2, %TypeNode.676426** %12, align 8
  %.186 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.188 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.190 = bitcast i8* %.188 to %"Array<Type>_vtable_ty.676547"**
  store %"Array<Type>_vtable_ty.676547"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.676547"** %.190, align 8
  %.192 = getelementptr inbounds i8, i8* %.188, i64 8
  %13 = bitcast i8* %.192 to i8**
  store i8* %.186, i8** %13, align 8
  %.194 = getelementptr inbounds i8, i8* %.188, i64 16
  %14 = bitcast i8* %.194 to i64*
  store i64 0, i64* %14, align 8
  %.196 = getelementptr inbounds i8, i8* %.188, i64 24
  %15 = bitcast i8* %.196 to i64*
  store i64 8, i64* %15, align 8
  %arg_types = alloca %"Array<Type>.676546"*, align 8
  %16 = bitcast %"Array<Type>.676546"** %arg_types to i8**
  store i8* %.188, i8** %16, align 8
  %.20314 = load %FunctionTypeNode.676432*, %FunctionTypeNode.676432** %fnc_node, align 8
  %.20415 = getelementptr inbounds %FunctionTypeNode.676432, %FunctionTypeNode.676432* %.20314, i64 0, i32 3
  %.20516 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %.20415, align 8
  %.20617 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.20516, i64 0, i32 2
  %.20718 = load i64, i64* %.20617, align 8
  %.20819 = icmp sgt i64 %.20718, 0
  br i1 %.20819, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.endif.endif.endif.endif.endif.if
  %.210 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %arg_types, align 8
  %.212 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.226 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.210, i64 0, i32 0
  %.203 = load %FunctionTypeNode.676432*, %FunctionTypeNode.676432** %fnc_node, align 8
  %.204 = getelementptr inbounds %FunctionTypeNode.676432, %FunctionTypeNode.676432* %.203, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.20521 = phi %"Array<TypeNode>.676430"* [ %.20516, %for.body.lr.ph ], [ %.205, %for.body ]
  %storemerge420 = phi i64 [ 0, %for.body.lr.ph ], [ %.235, %for.body ]
  %.213 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.212, align 8
  %.214 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.213, i64 0, i32 44
  %.215 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.214, align 8
  %.220 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.20521, i64 0, i32 0
  %.221 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.220, align 8
  %.222 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.221, i64 0, i32 5
  %.223 = load %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)*, %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)** %.222, align 8
  %.224 = call %TypeNode.676426* %.223(%"Array<TypeNode>.676430"* %.20521, i64 %storemerge420)
  %.225 = call %Type.676538* %.215(%TypeChecker.676716* %.1, %TypeNode.676426* %.224)
  %.227 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.227, i64 0, i32 2
  %.229 = load void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)** %.228, align 8
  call void %.229(%"Array<Type>.676546"* %.210, %Type.676538* %.225)
  %.235 = add nuw nsw i64 %storemerge420, 1
  %.205 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %.204, align 8
  %.206 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.205, i64 0, i32 2
  %.207 = load i64, i64* %.206, align 8
  %.208 = icmp slt i64 %.235, %.207
  br i1 %.208, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.endif.endif.endif.endif.endif.if
  %.203.lcssa = phi %FunctionTypeNode.676432* [ %.20314, %.4.endif.endif.endif.endif.endif.if ], [ %.203, %for.body ]
  %.239 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.240 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.239, align 8
  %.241 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.240, i64 0, i32 44
  %.242 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.241, align 8
  %.244 = getelementptr inbounds %FunctionTypeNode.676432, %FunctionTypeNode.676432* %.203.lcssa, i64 0, i32 4
  %.245 = load %TypeNode.676426*, %TypeNode.676426** %.244, align 8
  %.246 = call %Type.676538* %.242(%TypeChecker.676716* %.1, %TypeNode.676426* %.245)
  %.248 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %arg_types, align 8
  %.250 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.251 = bitcast i8* %.250 to %FunctionType.676544*
  %.252 = bitcast i8* %.250 to %FunctionType_vtable_ty.676545**
  store %FunctionType_vtable_ty.676545* @FunctionType_vtable_data, %FunctionType_vtable_ty.676545** %.252, align 8
  call void @FunctionType_constructor(%FunctionType.676544* %.251, %"Array<Type>.676546"* %.248, %Type.676538* %.246)
  %.255 = bitcast i8* %.250 to %Type.676538*
  ret %Type.676538* %.255

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4.endif.endif
  %record_type = alloca %RecordTypeNode.676428*, align 8
  %17 = bitcast %RecordTypeNode.676428** %record_type to %TypeNode.676426**
  store %TypeNode.676426* %.2, %TypeNode.676426** %17, align 8
  %.266 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.268 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.270 = bitcast i8* %.268 to %"Array<Type>_vtable_ty.676547"**
  store %"Array<Type>_vtable_ty.676547"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.676547"** %.270, align 8
  %.272 = getelementptr inbounds i8, i8* %.268, i64 8
  %18 = bitcast i8* %.272 to i8**
  store i8* %.266, i8** %18, align 8
  %.274 = getelementptr inbounds i8, i8* %.268, i64 16
  %19 = bitcast i8* %.274 to i64*
  store i64 0, i64* %19, align 8
  %.276 = getelementptr inbounds i8, i8* %.268, i64 24
  %20 = bitcast i8* %.276 to i64*
  store i64 8, i64* %20, align 8
  %types = alloca %"Array<Type>.676546"*, align 8
  %21 = bitcast %"Array<Type>.676546"** %types to i8**
  store i8* %.268, i8** %21, align 8
  %.279 = load %RecordTypeNode.676428*, %RecordTypeNode.676428** %record_type, align 8
  %.280 = getelementptr inbounds %RecordTypeNode.676428, %RecordTypeNode.676428* %.279, i64 0, i32 3
  %22 = bitcast %IdentifierToken.676420** %.280 to i64*
  %.2811 = load i64, i64* %22, align 8
  %identifer_tok = alloca %IdentifierToken.676420*, align 8
  %23 = bitcast %IdentifierToken.676420** %identifer_tok to i64*
  store i64 %.2811, i64* %23, align 8
  %.284 = getelementptr inbounds %RecordTypeNode.676428, %RecordTypeNode.676428* %.279, i64 0, i32 4
  %.285 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %.284, align 8
  %.286 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.285, i64 0, i32 2
  %.287 = load i64, i64* %.286, align 8
  %.288 = icmp sgt i64 %.287, 0
  br i1 %.288, label %for.cond.1.preheader, label %.4.endif.endif.endif.endif.endif.endif.if.endif

for.cond.1.preheader:                             ; preds = %.4.endif.endif.endif.endif.endif.endif.if
  %.29622 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %.284, align 8
  %.29723 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.29622, i64 0, i32 2
  %.29824 = load i64, i64* %.29723, align 8
  %.29925 = icmp sgt i64 %.29824, 0
  br i1 %.29925, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.301 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %types, align 8
  %.303 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.317 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.301, i64 0, i32 0
  br label %for.body.1

.4.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.4.endif.endif
  %.429 = call %Type.676538* @Type_unknown()
  ret %Type.676538* %.429

.4.endif.endif.endif.endif.endif.endif.if.endif:  ; preds = %for.end.1.endif.endif, %.4.endif.endif.endif.endif.endif.endif.if
  %.380 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.381 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.380, align 8
  %.382 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.381, i64 0, i32 14
  %.383 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.382, align 8
  %.384 = load %IdentifierToken.676420*, %IdentifierToken.676420** %identifer_tok, align 8
  %.385 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.384, i64 0, i32 3
  %.386 = load %string.676378*, %string.676378** %.385, align 8
  %.387 = call %Type.676538* %.383(%TypeChecker.676716* %.1, %string.676378* %.386)
  %.390 = getelementptr inbounds %Type.676538, %Type.676538* %.387, i64 0, i32 1
  %.391 = load i64, i64* %.390, align 8
  %.392 = icmp eq i64 %.391, 21
  br i1 %.392, label %.4.endif.endif.endif.endif.endif.endif.if.endif.if, label %for.end.1.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.29627 = phi %"Array<TypeNode>.676430"* [ %.29622, %for.body.1.lr.ph ], [ %.296, %for.body.1 ]
  %storemerge26 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.326, %for.body.1 ]
  %.304 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.303, align 8
  %.305 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.304, i64 0, i32 44
  %.306 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.305, align 8
  %.311 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.29627, i64 0, i32 0
  %.312 = load %"Array<TypeNode>_vtable_ty.676431"*, %"Array<TypeNode>_vtable_ty.676431"** %.311, align 8
  %.313 = getelementptr inbounds %"Array<TypeNode>_vtable_ty.676431", %"Array<TypeNode>_vtable_ty.676431"* %.312, i64 0, i32 5
  %.314 = load %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)*, %TypeNode.676426* (%"Array<TypeNode>.676430"*, i64)** %.313, align 8
  %.315 = call %TypeNode.676426* %.314(%"Array<TypeNode>.676430"* %.29627, i64 %storemerge26)
  %.316 = call %Type.676538* %.306(%TypeChecker.676716* %.1, %TypeNode.676426* %.315)
  %.318 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.317, align 8
  %.319 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.318, i64 0, i32 2
  %.320 = load void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)** %.319, align 8
  call void %.320(%"Array<Type>.676546"* %.301, %Type.676538* %.316)
  %.326 = add nuw nsw i64 %storemerge26, 1
  %.296 = load %"Array<TypeNode>.676430"*, %"Array<TypeNode>.676430"** %.284, align 8
  %.297 = getelementptr inbounds %"Array<TypeNode>.676430", %"Array<TypeNode>.676430"* %.296, i64 0, i32 2
  %.298 = load i64, i64* %.297, align 8
  %.299 = icmp slt i64 %.326, %.298
  br i1 %.299, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.cond.1.preheader
  %.330 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.331 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.330, align 8
  %.332 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.331, i64 0, i32 17
  %.333 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.332, align 8
  %.334 = call i1 %.333(%TypeChecker.676716* %.1)
  br i1 %.334, label %for.end.1.if, label %for.end.1.endif

for.end.1.if:                                     ; preds = %.4.endif.endif.endif.endif.endif.endif.if.endif, %for.end.1.endif.endif, %for.end.1
  %merge = phi %Type.676538* [ null, %for.end.1 ], [ %.346, %for.end.1.endif.endif ], [ %.387, %.4.endif.endif.endif.endif.endif.endif.if.endif ]
  ret %Type.676538* %merge

for.end.1.endif:                                  ; preds = %for.end.1
  %.339 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.330, align 8
  %.340 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.339, i64 0, i32 21
  %.341 = load %Type.676538* (%TypeChecker.676716*, %string.676378*, %"Array<Type>.676546"*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*, %"Array<Type>.676546"*)** %.340, align 8
  %.342 = load %IdentifierToken.676420*, %IdentifierToken.676420** %identifer_tok, align 8
  %.343 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.342, i64 0, i32 3
  %.344 = load %string.676378*, %string.676378** %.343, align 8
  %.345 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %types, align 8
  %.346 = call %Type.676538* %.341(%TypeChecker.676716* %.1, %string.676378* %.344, %"Array<Type>.676546"* %.345)
  %generic_type = alloca %Type.676538*, align 8
  store %Type.676538* %.346, %Type.676538** %generic_type, align 8
  %.350 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.330, align 8
  %.351 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.350, i64 0, i32 17
  %.352 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.351, align 8
  %.353 = call i1 %.352(%TypeChecker.676716* %.1)
  br i1 %.353, label %for.end.1.endif.if, label %for.end.1.endif.endif

for.end.1.endif.if:                               ; preds = %for.end.1.endif
  %.356 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 7
  %.357 = load %Compiler.676394*, %Compiler.676394** %.356, align 8
  %.358 = getelementptr inbounds %Compiler.676394, %Compiler.676394* %.357, i64 0, i32 6
  %.359 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %.358, align 8
  %.360 = getelementptr inbounds %"Array<FloError>.676397", %"Array<FloError>.676397"* %.359, i64 0, i32 0
  %.361 = load %"Array<FloError>_vtable_ty.676400"*, %"Array<FloError>_vtable_ty.676400"** %.360, align 8
  %.362 = getelementptr inbounds %"Array<FloError>_vtable_ty.676400", %"Array<FloError>_vtable_ty.676400"* %.361, i64 0, i32 5
  %.363 = load %FloError.676384* (%"Array<FloError>.676397"*, i64)*, %FloError.676384* (%"Array<FloError>.676397"*, i64)** %.362, align 8
  %.364 = call %FloError.676384* %.363(%"Array<FloError>.676397"* %.359, i64 0)
  %.366 = getelementptr inbounds %TypeNode.676426, %TypeNode.676426* %.2, i64 0, i32 1
  %24 = bitcast %FloRange.676382** %.366 to i64*
  %.3673 = load i64, i64* %24, align 8
  %.368 = getelementptr inbounds %FloError.676384, %FloError.676384* %.364, i64 0, i32 3
  %25 = bitcast %FloRange.676382** %.368 to i64*
  store i64 %.3673, i64* %25, align 8
  br label %for.end.1.endif.endif

for.end.1.endif.endif:                            ; preds = %for.end.1.endif.if, %for.end.1.endif
  %26 = bitcast %Type.676538** %generic_type to i64*
  %.3712 = load i64, i64* %26, align 8
  %.372 = trunc i64 %.3712 to i32
  %.374.not = icmp eq i32 %.372, 0
  br i1 %.374.not, label %.4.endif.endif.endif.endif.endif.endif.if.endif, label %for.end.1.if

.4.endif.endif.endif.endif.endif.endif.if.endif.if: ; preds = %.4.endif.endif.endif.endif.endif.endif.if.endif
  %.396 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.380, align 8
  %.397 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.396, i64 0, i32 16
  %.398 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.397, align 8
  %.401 = load %string.676378*, %string.676378** %.385, align 8
  %.402 = getelementptr inbounds %string.676378, %string.676378* %.401, i64 0, i32 0
  %.403 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.402, align 8
  %.404 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.403, i64 0, i32 11
  %.405 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.404, align 8
  %.406 = call i8* %.405(%string.676378* %.401)
  %.408 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.311, i64 0, i64 0), i8* %.406)
  %.410 = call i8* @malloc(i64 %.408)
  %.411 = call i64 (i8*, i8*, ...) @sprintf(i8* %.410, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.311, i64 0, i64 0), i8* %.406)
  %.412 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.413 = bitcast i8* %.412 to %string.676378*
  %.414 = bitcast i8* %.412 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.414, align 8
  %.416 = getelementptr inbounds i8, i8* %.412, i64 8
  %27 = bitcast i8* %.416 to i8**
  store i8* %.410, i8** %27, align 8
  %.418 = getelementptr inbounds i8, i8* %.412, i64 16
  %28 = bitcast i8* %.418 to i64*
  store i64 %.408, i64* %28, align 8
  %.420 = getelementptr inbounds i8, i8* %.412, i64 24
  %29 = bitcast i8* %.420 to i64*
  store i64 %.408, i64* %29, align 8
  %.423 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.384, i64 0, i32 2
  %.424 = load %FloRange.676382*, %FloRange.676382** %.423, align 8
  call void %.398(%TypeChecker.676716* %.1, i64 5, %string.676378* %.413, %FloRange.676382* %.424)
  ret %Type.676538* null
}

define %ArrayExpression.676578* @TypeChecker_check_array_expression(%TypeChecker.676716* %.1, %Type.676538* nocapture readonly %.2, %ArrayExpressionNode.676458* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 17
  %.13 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.12, align 8
  %.14 = call i1 %.13(%TypeChecker.676716* %.1)
  br i1 %.14, label %.5.if, label %.5.endif

.5.if.loopexit:                                   ; preds = %for.body
  store i1 %.14718, i1* %is_constant, align 1
  br label %.5.if

.5.if:                                            ; preds = %.5.if.loopexit, %.5.endif.endif.if, %.5
  ret %ArrayExpression.676578* null

.5.endif:                                         ; preds = %.5
  %.18 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.20 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 0, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 8, i64* %2, align 8
  %elements = alloca %"Array<Expression>.676574"*, align 8
  %3 = bitcast %"Array<Expression>.676574"** %elements to i8**
  store i8* %.20, i8** %3, align 8
  %.31 = call %Type.676538* @Type_unknown()
  %element_type = alloca %Type.676538*, align 8
  store %Type.676538* %.31, %Type.676538** %element_type, align 8
  %is_constant = alloca i1, align 1
  store i1 true, i1* %is_constant, align 1
  %.35 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 16
  br i1 %.37, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.41 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %4 = bitcast %Type.676538* %.41 to i64*
  %.428 = load i64, i64* %4, align 8
  %5 = bitcast %Type.676538** %element_type to i64*
  store i64 %.428, i64* %5, align 8
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif.if, %.5.endif
  %.46 = getelementptr inbounds %ArrayExpressionNode.676458, %ArrayExpressionNode.676458* %.3, i64 0, i32 4
  %.47 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.47, i64 0, i32 2
  %.49 = load i64, i64* %.48, align 8
  %.50 = icmp sgt i64 %.49, 0
  br i1 %.50, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.52 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %elements, align 8
  %.55 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.56 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.55, i64 0, i32 70
  %.57 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.56, align 8
  %.58 = load %Type.676538*, %Type.676538** %element_type, align 8
  %.62 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.47, i64 0, i32 0
  %.63 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.62, align 8
  %.64 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.63, i64 0, i32 5
  %.65 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.64, align 8
  %.66 = call %ExpressionNode.676442* %.65(%"Array<ExpressionNode>.676454"* %.47, i64 0)
  %.67 = call %Expression.676558* %.57(%TypeChecker.676716* %.1, %Type.676538* %.58, %ExpressionNode.676442* %.66)
  %.68 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.52, i64 0, i32 0
  %.69 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.69, i64 0, i32 2
  %.71 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.70, align 8
  call void %.71(%"Array<Expression>.676574"* %.52, %Expression.676558* %.67)
  %.75 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.76 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.75, i64 0, i32 17
  %.77 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.76, align 8
  %.78 = call i1 %.77(%TypeChecker.676716* %.1)
  br i1 %.78, label %.5.if, label %.5.endif.endif.if.endif

for.cond..5.endif.endif.endif.loopexit_crit_edge: ; preds = %for.body.endif.if
  store i1 %.147, i1* %is_constant, align 1
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %for.entry, %for.cond..5.endif.endif.endif.loopexit_crit_edge, %.5.endif.endif
  %.235 = load %Type.676538*, %Type.676538** %element_type, align 8
  %.236 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %elements, align 8
  %.237 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.236, i64 0, i32 2
  %.238 = load i64, i64* %.237, align 8
  %.239 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.240 = bitcast i8* %.239 to %ArrayType.676560*
  %.241 = bitcast i8* %.239 to %ArrayType_vtable_ty.676561**
  store %ArrayType_vtable_ty.676561* @ArrayType_vtable_data, %ArrayType_vtable_ty.676561** %.241, align 8
  call void @ArrayType_constructor(%ArrayType.676560* %.240, %Type.676538* %.235, i64 %.238)
  %array_type = alloca %Type.676538*, align 8
  %6 = bitcast %Type.676538** %array_type to i8**
  store i8* %.239, i8** %6, align 8
  %.247 = getelementptr inbounds i8, i8* %.239, i64 8
  %7 = bitcast i8* %.247 to i64*
  %.248 = load i64, i64* %7, align 8
  %.249.not = icmp eq i64 %.248, 16
  br i1 %.249.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.82 = getelementptr inbounds %Type.676538, %Type.676538* %.58, i64 0, i32 1
  %.83 = load i64, i64* %.82, align 8
  %.84 = icmp eq i64 %.83, 21
  br i1 %.84, label %.5.endif.endif.if.endif.if, label %for.entry

.5.endif.endif.if.endif.if:                       ; preds = %.5.endif.endif.if.endif
  %.89 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.68, align 8
  %.90 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.89, i64 0, i32 5
  %.91 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.90, align 8
  %.92 = call %Expression.676558* %.91(%"Array<Expression>.676574"* %.52, i64 0)
  %.93 = getelementptr inbounds %Expression.676558, %Expression.676558* %.92, i64 0, i32 2
  %.94 = load i1, i1* %.93, align 1
  store i1 %.94, i1* %is_constant, align 1
  %.99 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.68, align 8
  %.100 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.99, i64 0, i32 5
  %.101 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.100, align 8
  %.102 = call %Expression.676558* %.101(%"Array<Expression>.676574"* %.52, i64 0)
  %.103 = getelementptr inbounds %Expression.676558, %Expression.676558* %.102, i64 0, i32 4
  %8 = bitcast %Type.676538** %.103 to i64*
  %.1047 = load i64, i64* %8, align 8
  %9 = bitcast %Type.676538** %element_type to i64*
  store i64 %.1047, i64* %9, align 8
  br label %for.entry

for.entry:                                        ; preds = %.5.endif.endif.if.endif, %.5.endif.endif.if.endif.if
  %.11312 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.46, align 8
  %.11413 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.11312, i64 0, i32 2
  %.11514 = load i64, i64* %.11413, align 8
  %.11615 = icmp sgt i64 %.11514, 1
  br i1 %.11615, label %for.body.lr.ph, label %.5.endif.endif.endif

for.body.lr.ph:                                   ; preds = %for.entry
  %.123 = load %Type.676538*, %Type.676538** %element_type, align 8
  %is_constant.promoted = load i1, i1* %is_constant, align 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.if
  %.14718 = phi i1 [ %is_constant.promoted, %for.body.lr.ph ], [ %.147, %for.body.endif.if ]
  %.11317 = phi %"Array<ExpressionNode>.676454"* [ %.11312, %for.body.lr.ph ], [ %.113, %for.body.endif.if ]
  %storemerge16 = phi i64 [ 1, %for.body.lr.ph ], [ %.231, %for.body.endif.if ]
  %.120 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.121 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.120, i64 0, i32 70
  %.122 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.121, align 8
  %.128 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.11317, i64 0, i32 0
  %.129 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.128, align 8
  %.130 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.129, i64 0, i32 5
  %.131 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.130, align 8
  %.132 = call %ExpressionNode.676442* %.131(%"Array<ExpressionNode>.676454"* %.11317, i64 %storemerge16)
  %.133 = call %Expression.676558* %.122(%TypeChecker.676716* %.1, %Type.676538* %.123, %ExpressionNode.676442* %.132)
  %.137 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.138 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.137, i64 0, i32 17
  %.139 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.138, align 8
  %.140 = call i1 %.139(%TypeChecker.676716* %.1)
  br i1 %.140, label %.5.if.loopexit, label %for.body.endif

for.body.endif:                                   ; preds = %for.body
  %.145 = getelementptr inbounds %Expression.676558, %Expression.676558* %.133, i64 0, i32 2
  %.146 = load i1, i1* %.145, align 1
  %.147 = and i1 %.14718, %.146
  %.151 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.152 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.151, i64 0, i32 9
  %.153 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.152, align 8
  %.156 = getelementptr inbounds %Expression.676558, %Expression.676558* %.133, i64 0, i32 4
  %.157 = load %Type.676538*, %Type.676538** %.156, align 8
  %.158 = call i1 %.153(%TypeChecker.676716* %.1, %Type.676538* %.123, %Type.676538* %.157)
  br i1 %.158, label %for.body.endif.if, label %for.body.endif.else

for.body.endif.if:                                ; preds = %for.body.endif
  %.163 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.68, align 8
  %.164 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.163, i64 0, i32 2
  %.165 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.164, align 8
  call void %.165(%"Array<Expression>.676574"* %.52, %Expression.676558* %.133)
  %.231 = add nuw nsw i64 %storemerge16, 1
  %.113 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.46, align 8
  %.114 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.113, i64 0, i32 2
  %.115 = load i64, i64* %.114, align 8
  %.116 = icmp slt i64 %.231, %.115
  br i1 %.116, label %for.body, label %for.cond..5.endif.endif.endif.loopexit_crit_edge

for.body.endif.else:                              ; preds = %for.body.endif
  store i1 %.147, i1* %is_constant, align 1
  %.170 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.171 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.170, i64 0, i32 16
  %.172 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.171, align 8
  %.176 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.170, i64 0, i32 10
  %.177 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.176, align 8
  %.179 = call %string.676378* %.177(%TypeChecker.676716* %.1, %Type.676538* %.123)
  %.182 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.183 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.182, i64 0, i32 10
  %.184 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.183, align 8
  %.187 = load %Type.676538*, %Type.676538** %.156, align 8
  %.188 = call %string.676378* %.184(%TypeChecker.676716* %.1, %Type.676538* %.187)
  %.189 = getelementptr inbounds %string.676378, %string.676378* %.179, i64 0, i32 0
  %.190 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.189, align 8
  %.191 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.190, i64 0, i32 11
  %.192 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.191, align 8
  %.193 = call i8* %.192(%string.676378* %.179)
  %.194 = getelementptr inbounds %string.676378, %string.676378* %.188, i64 0, i32 0
  %.195 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.194, align 8
  %.196 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.195, i64 0, i32 11
  %.197 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.196, align 8
  %.198 = call i8* %.197(%string.676378* %.188)
  %.200 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.312, i64 0, i64 0), i8* %.193, i8* %.198)
  %.202 = call i8* @malloc(i64 %.200)
  %.203 = call i64 (i8*, i8*, ...) @sprintf(i8* %.202, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.312, i64 0, i64 0), i8* %.193, i8* %.198)
  %.204 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.205 = bitcast i8* %.204 to %string.676378*
  %.206 = bitcast i8* %.204 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.206, align 8
  %.208 = getelementptr inbounds i8, i8* %.204, i64 8
  %10 = bitcast i8* %.208 to i8**
  store i8* %.202, i8** %10, align 8
  %.210 = getelementptr inbounds i8, i8* %.204, i64 16
  %11 = bitcast i8* %.210 to i64*
  store i64 %.200, i64* %11, align 8
  %.212 = getelementptr inbounds i8, i8* %.204, i64 24
  %12 = bitcast i8* %.212 to i64*
  store i64 %.200, i64* %12, align 8
  %.217 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.46, align 8
  %.218 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.217, i64 0, i32 0
  %.219 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.218, align 8
  %.220 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.219, i64 0, i32 5
  %.221 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.220, align 8
  %.222 = call %ExpressionNode.676442* %.221(%"Array<ExpressionNode>.676454"* %.217, i64 %storemerge16)
  %.223 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.222, i64 0, i32 1
  %.224 = load %FloRange.676382*, %FloRange.676382** %.223, align 8
  call void %.172(%TypeChecker.676716* %.1, i64 5, %string.676378* %.205, %FloRange.676382* %.224)
  ret %ArrayExpression.676578* null

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.253 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.254 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.253, i64 0, i32 21
  %.255 = load %Type.676538* (%TypeChecker.676716*, %string.676378*, %"Array<Type>.676546"*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*, %"Array<Type>.676546"*)** %.254, align 8
  %.256 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.257 = bitcast i8* %.256 to %string.676378*
  %.257.repack = bitcast i8* %.256 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.257.repack, align 8
  %.257.repack2 = getelementptr inbounds i8, i8* %.256, i64 8
  %13 = bitcast i8* %.257.repack2 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.178, i64 0, i64 0), i8** %13, align 8
  %.257.repack3 = getelementptr inbounds i8, i8* %.256, i64 16
  %14 = bitcast i8* %.257.repack3 to i64*
  store i64 5, i64* %14, align 8
  %.257.repack4 = getelementptr inbounds i8, i8* %.256, i64 24
  %15 = bitcast i8* %.257.repack4 to i64*
  store i64 5, i64* %15, align 8
  %16 = bitcast %Type.676538** %element_type to i64*
  %.2595 = load i64, i64* %16, align 8
  %.261 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %17 = bitcast i8* %.261 to i64*
  store i64 %.2595, i64* %17, align 8
  %.265 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.266 = bitcast i8* %.265 to %"Array<Type>.676546"*
  %.267 = bitcast i8* %.265 to %"Array<Type>_vtable_ty.676547"**
  store %"Array<Type>_vtable_ty.676547"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.676547"** %.267, align 8
  %.269 = getelementptr inbounds i8, i8* %.265, i64 8
  %18 = bitcast i8* %.269 to i8**
  store i8* %.261, i8** %18, align 8
  %.271 = getelementptr inbounds i8, i8* %.265, i64 16
  %19 = bitcast i8* %.271 to i64*
  store i64 1, i64* %19, align 8
  %.273 = getelementptr inbounds i8, i8* %.265, i64 24
  %20 = bitcast i8* %.273 to i64*
  store i64 8, i64* %20, align 8
  %.275 = call %Type.676538* %.255(%TypeChecker.676716* %.1, %string.676378* %.257, %"Array<Type>.676546"* %.266)
  %generic_array_type = alloca %Type.676538*, align 8
  store %Type.676538* %.275, %Type.676538** %generic_array_type, align 8
  %21 = ptrtoint %Type.676538* %.275 to i64
  %.278 = trunc i64 %21 to i32
  %.280.not = icmp eq i32 %.278, 0
  br i1 %.280.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if.if

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if.if, %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.288 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.289 = bitcast i8* %.288 to %ArrayExpression.676578*
  %.290 = bitcast i8* %.288 to %ArrayExpression_vtable_ty.676579**
  store %ArrayExpression_vtable_ty.676579* @ArrayExpression_vtable_data, %ArrayExpression_vtable_ty.676579** %.290, align 8
  call void @ArrayExpression_constructor(%ArrayExpression.676578* %.289, %"Array<Expression>.676574"* %.236)
  %arr_exp = alloca %ArrayExpression.676578*, align 8
  %22 = bitcast %ArrayExpression.676578** %arr_exp to i8**
  store i8* %.288, i8** %22, align 8
  %.295 = load i1, i1* %is_constant, align 1
  %.296 = getelementptr inbounds i8, i8* %.288, i64 16
  %23 = bitcast i8* %.296 to i1*
  store i1 %.295, i1* %23, align 1
  %24 = bitcast %Type.676538** %array_type to i64*
  %.2991 = load i64, i64* %24, align 8
  %.300 = getelementptr inbounds i8, i8* %.288, i64 32
  %25 = bitcast i8* %.300 to i64*
  store i64 %.2991, i64* %25, align 8
  %.302 = load %ArrayExpression.676578*, %ArrayExpression.676578** %arr_exp, align 8
  ret %ArrayExpression.676578* %.302

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %26 = bitcast %Type.676538** %generic_array_type to i64*
  %.2826 = load i64, i64* %26, align 8
  %27 = bitcast %Type.676538** %array_type to i64*
  store i64 %.2826, i64* %27, align 8
  store i1 false, i1* %is_constant, align 1
  br label %.5.endif.endif.endif.endif
}

define noalias %Expression.676558* @TypeChecker_check_var_access_expr(%TypeChecker.676716* %.1, %Type.676538* %.2, %VarAccessExpressionNode.676456* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %VarAccessExpressionNode.676456, %VarAccessExpressionNode.676456* %.3, i64 0, i32 4
  %.11 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.10, align 8
  %.12 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.11, i64 0, i32 3
  %.13 = load %string.676378*, %string.676378** %.12, align 8
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.676378*
  %.17.repack = bitcast i8* %.16 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.17.repack, align 8
  %.17.repack1 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.17.repack1 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.270, i64 0, i64 0), i8** %0, align 8
  %.17.repack2 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.17.repack2 to i64*
  store i64 4, i64* %1, align 8
  %.17.repack3 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.17.repack3 to i64*
  store i64 4, i64* %2, align 8
  %.19 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.20 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.19, align 8
  %.21 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.20, i64 0, i32 4
  %.22 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.21, align 8
  %.23 = call i1 %.22(%string.676378* %.13, %string.676378* %.17)
  br i1 %.23, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.26 = bitcast i8* %.25 to %BooleanExpression.676568*
  %.27 = bitcast i8* %.25 to %BooleanExpression_vtable_ty.676569**
  store %BooleanExpression_vtable_ty.676569* @BooleanExpression_vtable_data, %BooleanExpression_vtable_ty.676569** %.27, align 8
  call void @BooleanExpression_constructor(%BooleanExpression.676568* %.26, i64 1)
  %.30 = bitcast i8* %.25 to %Expression.676558*
  ret %Expression.676558* %.30

.5.endif:                                         ; preds = %.5
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.676378*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.34.repack, align 8
  %.34.repack4 = getelementptr inbounds i8, i8* %.33, i64 8
  %3 = bitcast i8* %.34.repack4 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.271, i64 0, i64 0), i8** %3, align 8
  %.34.repack5 = getelementptr inbounds i8, i8* %.33, i64 16
  %4 = bitcast i8* %.34.repack5 to i64*
  store i64 5, i64* %4, align 8
  %.34.repack6 = getelementptr inbounds i8, i8* %.33, i64 24
  %5 = bitcast i8* %.34.repack6 to i64*
  store i64 5, i64* %5, align 8
  %.37 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.19, align 8
  %.38 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.37, i64 0, i32 4
  %.39 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.38, align 8
  %.40 = call i1 %.39(%string.676378* %.13, %string.676378* %.34)
  br i1 %.40, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.42 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.43 = bitcast i8* %.42 to %BooleanExpression.676568*
  %.44 = bitcast i8* %.42 to %BooleanExpression_vtable_ty.676569**
  store %BooleanExpression_vtable_ty.676569* @BooleanExpression_vtable_data, %BooleanExpression_vtable_ty.676569** %.44, align 8
  call void @BooleanExpression_constructor(%BooleanExpression.676568* %.43, i64 0)
  %.47 = bitcast i8* %.42 to %Expression.676558*
  ret %Expression.676558* %.47

.5.endif.endif:                                   ; preds = %.5.endif
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.51.repack = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.51.repack, align 8
  %.51.repack7 = getelementptr inbounds i8, i8* %.50, i64 8
  %6 = bitcast i8* %.51.repack7 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.272, i64 0, i64 0), i8** %6, align 8
  %.51.repack8 = getelementptr inbounds i8, i8* %.50, i64 16
  %7 = bitcast i8* %.51.repack8 to i64*
  store i64 4, i64* %7, align 8
  %.51.repack9 = getelementptr inbounds i8, i8* %.50, i64 24
  %8 = bitcast i8* %.51.repack9 to i64*
  store i64 4, i64* %8, align 8
  %.54 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.19, align 8
  %.55 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.54, i64 0, i32 4
  %.56 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.55, align 8
  %.57 = call i1 %.56(%string.676378* %.13, %string.676378* %.51)
  br i1 %.57, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.60 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.61 = bitcast i8* %.60 to %NullExpression.676576*
  %.62 = bitcast i8* %.60 to %NullExpression_vtable_ty.676577**
  store %NullExpression_vtable_ty.676577* @NullExpression_vtable_data, %NullExpression_vtable_ty.676577** %.62, align 8
  call void @NullExpression_constructor(%NullExpression.676576* %.61, %Type.676538* %.2)
  %.65 = bitcast i8* %.60 to %Expression.676558*
  ret %Expression.676558* %.65

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.68 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.69 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.68, align 8
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.69, i64 0, i32 2
  %.71 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.70, align 8
  %.72 = call %Scope.676628* %.71(%TypeChecker.676716* %.1)
  %.76 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.68, align 8
  %.77 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.76, i64 0, i32 13
  %.78 = load %VarId.676596* (%TypeChecker.676716*, %string.676378*)*, %VarId.676596* (%TypeChecker.676716*, %string.676378*)** %.77, align 8
  %.80 = call %VarId.676596* %.78(%TypeChecker.676716* %.1, %string.676378* %.13)
  %resolved = alloca %VarId.676596*, align 8
  store %VarId.676596* %.80, %VarId.676596** %resolved, align 8
  %.82 = call %Type.676538* @Type_unknown()
  %var_ty = alloca %Type.676538*, align 8
  store %Type.676538* %.82, %Type.676538** %var_ty, align 8
  %9 = ptrtoint %VarId.676596* %.80 to i64
  %.85 = trunc i64 %9 to i32
  %.87.not = icmp eq i32 %.85, 0
  br i1 %.87.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %10 = bitcast %VarId.676596** %resolved to i64*
  %.8910 = load i64, i64* %10, align 8
  %var_id = alloca %VarId.676596*, align 8
  %11 = bitcast %VarId.676596** %var_id to i64*
  store i64 %.8910, i64* %11, align 8
  %.91.cast = inttoptr i64 %.8910 to %VarId.676596*
  %.92 = getelementptr inbounds %VarId.676596, %VarId.676596* %.91.cast, i64 0, i32 1
  %.93 = load i64, i64* %.92, align 8
  %.94 = icmp eq i64 %.93, 0
  br i1 %.94, label %.5.endif.endif.endif.if.if, label %.5.endif.endif.endif.if.else

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.166 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.68, align 8
  %.167 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.166, i64 0, i32 16
  %.168 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.167, align 8
  %.171 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.19, align 8
  %.172 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.171, i64 0, i32 11
  %.173 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.172, align 8
  %.174 = call i8* %.173(%string.676378* %.13)
  %.176 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.313, i64 0, i64 0), i8* %.174)
  %.178 = call i8* @malloc(i64 %.176)
  %.179 = call i64 (i8*, i8*, ...) @sprintf(i8* %.178, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.313, i64 0, i64 0), i8* %.174)
  %.180 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.181 = bitcast i8* %.180 to %string.676378*
  %.182 = bitcast i8* %.180 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.182, align 8
  %.184 = getelementptr inbounds i8, i8* %.180, i64 8
  %12 = bitcast i8* %.184 to i8**
  store i8* %.178, i8** %12, align 8
  %.186 = getelementptr inbounds i8, i8* %.180, i64 16
  %13 = bitcast i8* %.186 to i64*
  store i64 %.176, i64* %13, align 8
  %.188 = getelementptr inbounds i8, i8* %.180, i64 24
  %14 = bitcast i8* %.188 to i64*
  store i64 %.176, i64* %14, align 8
  %.191 = getelementptr inbounds %VarAccessExpressionNode.676456, %VarAccessExpressionNode.676456* %.3, i64 0, i32 1
  %.192 = load %FloRange.676382*, %FloRange.676382** %.191, align 8
  call void %.168(%TypeChecker.676716* %.1, i64 1, %string.676378* %.181, %FloRange.676382* %.192)
  ret %Expression.676558* null

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.97 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.98 = load %Program.676712*, %Program.676712** %.97, align 8
  %.99 = load %VarId.676596*, %VarId.676596** %var_id, align 8
  %.100 = call %Function.676656* @get_func(%Program.676712* %.98, %VarId.676596* %.99)
  %.101 = getelementptr inbounds %Function.676656, %Function.676656* %.100, i64 0, i32 5
  %15 = bitcast %FunctionType.676544** %.101 to i64*
  %.1021415 = load i64, i64* %15, align 8
  %16 = bitcast %Type.676538** %var_ty to i64*
  store i64 %.1021415, i64* %16, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else:                     ; preds = %.5.endif.endif.endif.if
  %.106 = load %VarId.676596*, %VarId.676596** %var_id, align 8
  %.107 = getelementptr inbounds %VarId.676596, %VarId.676596* %.106, i64 0, i32 1
  %.108 = load i64, i64* %.107, align 8
  switch i64 %.108, label %.5.endif.endif.endif.if.else.else.else [
    i64 1, label %.5.endif.endif.endif.if.else.if
    i64 2, label %.5.endif.endif.endif.if.else.else.if
  ]

.5.endif.endif.endif.if.endif:                    ; preds = %.5.endif.endif.endif.if.else.else.else, %.5.endif.endif.endif.if.else.else.else.if, %.5.endif.endif.endif.if.else.else.if, %.5.endif.endif.endif.if.else.if, %.5.endif.endif.endif.if.if
  %.155 = load %VarId.676596*, %VarId.676596** %var_id, align 8
  %.156 = load %Type.676538*, %Type.676538** %var_ty, align 8
  %.157 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.158 = bitcast i8* %.157 to %VarAccessExpression.676608*
  %.159 = bitcast i8* %.157 to %VarAccessExpression_vtable_ty.676609**
  store %VarAccessExpression_vtable_ty.676609* @VarAccessExpression_vtable_data, %VarAccessExpression_vtable_ty.676609** %.159, align 8
  call void @VarAccessExpression_constructor(%VarAccessExpression.676608* %.158, %VarId.676596* %.155, %Type.676538* %.156)
  %.162 = bitcast i8* %.157 to %Expression.676558*
  ret %Expression.676558* %.162

.5.endif.endif.endif.if.else.if:                  ; preds = %.5.endif.endif.endif.if.else
  %.112 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.113 = load %Program.676712*, %Program.676712** %.112, align 8
  %.115 = call %Var.676660* @get_var(%Program.676712* %.113, %VarId.676596* %.106)
  %.116 = getelementptr inbounds %Var.676660, %Var.676660* %.115, i64 0, i32 1
  %17 = bitcast %Type.676538** %.116 to i64*
  %.11713 = load i64, i64* %17, align 8
  %18 = bitcast %Type.676538** %var_ty to i64*
  store i64 %.11713, i64* %18, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.if:             ; preds = %.5.endif.endif.endif.if.else
  %.126 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.127 = load %Program.676712*, %Program.676712** %.126, align 8
  %19 = bitcast %VarId.676596** %var_id to %ConstId.676602**
  %.12811 = load %ConstId.676602*, %ConstId.676602** %19, align 8
  %.130 = call %Const.676662* @get_const(%Program.676712* %.127, %ConstId.676602* %.12811)
  %.131 = getelementptr inbounds %Const.676662, %Const.676662* %.130, i64 0, i32 1
  %20 = bitcast %Type.676538** %.131 to i64*
  %.13212 = load i64, i64* %20, align 8
  %21 = bitcast %Type.676538** %var_ty to i64*
  store i64 %.13212, i64* %21, align 8
  br label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.else:           ; preds = %.5.endif.endif.endif.if.else
  %22 = add i64 %.108, -3
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %.5.endif.endif.endif.if.else.else.else.if, label %.5.endif.endif.endif.if.endif

.5.endif.endif.endif.if.else.else.else.if:        ; preds = %.5.endif.endif.endif.if.else.else.else
  %.145 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.146 = bitcast i8* %.145 to %Type.676538*
  %.147 = bitcast i8* %.145 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.147, align 8
  call void @Type_constructor(%Type.676538* %.146, i64 18)
  %24 = bitcast %Type.676538** %var_ty to i8**
  store i8* %.145, i8** %24, align 8
  br label %.5.endif.endif.endif.if.endif
}

define %Expression.676558* @TypeChecker_check_assignment(%TypeChecker.676716* %.1, %Expression.676558* %.2, %Expression.676558* %.3, %BinaryExpressionNode.676470* %.4) {
.6:
  %.12 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.4, i64 0, i32 5
  %.13 = load i64, i64* %.12, align 8
  %.16.not = icmp eq i64 %.13, 18
  br i1 %.16.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  %.19 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 4
  %.20 = load %Type.676538*, %Type.676538** %.19, align 8
  %.21 = call i1 @is_object(%Type.676538* %.20)
  br i1 %.21, label %.6.if.if, label %.6.if.endif

.6.endif:                                         ; preds = %.6, %.6.if.endif
  %right.0 = phi %Expression.676558* [ %.62, %.6.if.endif ], [ %.3, %.6 ]
  %.66 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 4
  %.67 = load %Type.676538*, %Type.676538** %.66, align 8
  %.68 = getelementptr inbounds %Type.676538, %Type.676538* %.67, i64 0, i32 1
  %.69 = load i64, i64* %.68, align 8
  %.70 = icmp eq i64 %.69, 18
  br i1 %.70, label %.6.endif.if, label %.6.endif.endif

.6.if.if:                                         ; preds = %.6.if
  %.24 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.25 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.24, align 8
  %.26 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.25, i64 0, i32 48
  %.27 = load %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)** %.26, align 8
  %.30 = call %Expression.676558* %.27(%TypeChecker.676716* %.1, %Expression.676558* %.2, %BinaryExpressionNode.676470* %.4)
  %0 = ptrtoint %Expression.676558* %.30 to i64
  %.33 = trunc i64 %0 to i32
  %.35 = icmp ne i32 %.33, 0
  %.38 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.24, align 8
  %.39 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.38, i64 0, i32 17
  %.40 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.39, align 8
  %.41 = call i1 %.40(%TypeChecker.676716* %.1)
  %.42 = or i1 %.35, %.41
  br i1 %.42, label %.6.if.if.if, label %.6.if.endif

.6.if.endif:                                      ; preds = %.6.if.if, %.6.if
  %.49 = call i64 @lower_bin_assign_op(i64 %.13)
  store i64 %.49, i64* %.12, align 8
  %.53 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.54 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.53, align 8
  %.55 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.54, i64 0, i32 51
  %.56 = load %BinaryExpression.676580* (%TypeChecker.676716*, %Type.676538*, %BinaryExpressionNode.676470*)*, %BinaryExpression.676580* (%TypeChecker.676716*, %Type.676538*, %BinaryExpressionNode.676470*)** %.55, align 8
  %.59 = load %Type.676538*, %Type.676538** %.19, align 8
  %.61 = call %BinaryExpression.676580* %.56(%TypeChecker.676716* %.1, %Type.676538* %.59, %BinaryExpressionNode.676470* %.4)
  %.62 = bitcast %BinaryExpression.676580* %.61 to %Expression.676558*
  br label %.6.endif

.6.if.if.if:                                      ; preds = %.6.if.if
  ret %Expression.676558* %.30

.6.endif.if:                                      ; preds = %.6.endif
  %.73 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.74 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.73, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.74, i64 0, i32 16
  %.76 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.75, align 8
  %.77 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.78 = bitcast i8* %.77 to %string.676378*
  %.78.repack = bitcast i8* %.77 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.78.repack, align 8
  %.78.repack4 = getelementptr inbounds i8, i8* %.77, i64 8
  %1 = bitcast i8* %.78.repack4 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.314, i64 0, i64 0), i8** %1, align 8
  %.78.repack5 = getelementptr inbounds i8, i8* %.77, i64 16
  %2 = bitcast i8* %.78.repack5 to i64*
  store i64 33, i64* %2, align 8
  %.78.repack6 = getelementptr inbounds i8, i8* %.77, i64 24
  %3 = bitcast i8* %.78.repack6 to i64*
  store i64 33, i64* %3, align 8
  %.81 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.4, i64 0, i32 1
  %.82 = load %FloRange.676382*, %FloRange.676382** %.81, align 8
  call void %.76(%TypeChecker.676716* %.1, i64 5, %string.676378* %.78, %FloRange.676382* %.82)
  ret %Expression.676558* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.86 = call i1 @check_is_var(%Expression.676558* %.2)
  %.103 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.104 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  br i1 %.86, label %.6.endif.endif.endif, label %.6.endif.endif.if

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.92 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.104, i64 0, i32 16
  %.93 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.92, align 8
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.676378*
  %.95.repack = bitcast i8* %.94 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.95.repack, align 8
  %.95.repack1 = getelementptr inbounds i8, i8* %.94, i64 8
  %4 = bitcast i8* %.95.repack1 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.315, i64 0, i64 0), i8** %4, align 8
  %.95.repack2 = getelementptr inbounds i8, i8* %.94, i64 16
  %5 = bitcast i8* %.95.repack2 to i64*
  store i64 35, i64* %5, align 8
  %.95.repack3 = getelementptr inbounds i8, i8* %.94, i64 24
  %6 = bitcast i8* %.95.repack3 to i64*
  store i64 35, i64* %6, align 8
  %.98 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.4, i64 0, i32 1
  %.99 = load %FloRange.676382*, %FloRange.676382** %.98, align 8
  call void %.93(%TypeChecker.676716* %.1, i64 5, %string.676378* %.95, %FloRange.676382* %.99)
  ret %Expression.676558* null

.6.endif.endif.endif:                             ; preds = %.6.endif.endif
  %.105 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.104, i64 0, i32 9
  %.106 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.105, align 8
  %.111 = getelementptr inbounds %Expression.676558, %Expression.676558* %right.0, i64 0, i32 4
  %.112 = load %Type.676538*, %Type.676538** %.111, align 8
  %.113 = call i1 %.106(%TypeChecker.676716* %.1, %Type.676538* %.67, %Type.676538* %.112)
  br i1 %.113, label %.6.endif.endif.endif.endif, label %.6.endif.endif.endif.if

.6.endif.endif.endif.if:                          ; preds = %.6.endif.endif.endif
  %.118 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.119 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.118, i64 0, i32 16
  %.120 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.119, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.118, i64 0, i32 10
  %.125 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.124, align 8
  %.128 = load %Type.676538*, %Type.676538** %.111, align 8
  %.129 = call %string.676378* %.125(%TypeChecker.676716* %.1, %Type.676538* %.128)
  %.132 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.133 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.132, i64 0, i32 10
  %.134 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.133, align 8
  %.137 = load %Type.676538*, %Type.676538** %.66, align 8
  %.138 = call %string.676378* %.134(%TypeChecker.676716* %.1, %Type.676538* %.137)
  %.139 = getelementptr inbounds %string.676378, %string.676378* %.129, i64 0, i32 0
  %.140 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.139, align 8
  %.141 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.140, i64 0, i32 11
  %.142 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.141, align 8
  %.143 = call i8* %.142(%string.676378* %.129)
  %.144 = getelementptr inbounds %string.676378, %string.676378* %.138, i64 0, i32 0
  %.145 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.144, align 8
  %.146 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.145, i64 0, i32 11
  %.147 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.146, align 8
  %.148 = call i8* %.147(%string.676378* %.138)
  %.150 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.316, i64 0, i64 0), i8* %.143, i8* %.148)
  %.152 = call i8* @malloc(i64 %.150)
  %.153 = call i64 (i8*, i8*, ...) @sprintf(i8* %.152, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.316, i64 0, i64 0), i8* %.143, i8* %.148)
  %.154 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.155 = bitcast i8* %.154 to %string.676378*
  %.156 = bitcast i8* %.154 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.156, align 8
  %.158 = getelementptr inbounds i8, i8* %.154, i64 8
  %7 = bitcast i8* %.158 to i8**
  store i8* %.152, i8** %7, align 8
  %.160 = getelementptr inbounds i8, i8* %.154, i64 16
  %8 = bitcast i8* %.160 to i64*
  store i64 %.150, i64* %8, align 8
  %.162 = getelementptr inbounds i8, i8* %.154, i64 24
  %9 = bitcast i8* %.162 to i64*
  store i64 %.150, i64* %9, align 8
  %.165 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.4, i64 0, i32 1
  %.166 = load %FloRange.676382*, %FloRange.676382** %.165, align 8
  call void %.120(%TypeChecker.676716* %.1, i64 5, %string.676378* %.155, %FloRange.676382* %.166)
  ret %Expression.676558* null

.6.endif.endif.endif.endif:                       ; preds = %.6.endif.endif.endif
  %.173 = load %Type.676538*, %Type.676538** %.111, align 8
  %.174 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.175 = bitcast i8* %.174 to %BinaryExpression.676580*
  %.176 = bitcast i8* %.174 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.176, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.175, %Expression.676558* %.2, i64 18, %Expression.676558* %right.0, %Type.676538* %.173, i1 false)
  %.179 = bitcast i8* %.174 to %Expression.676558*
  ret %Expression.676558* %.179
}

define noalias %Expression.676558* @TypeChecker_check_object_bin_assign(%TypeChecker.676716* %.1, %Expression.676558* %.2, %BinaryExpressionNode.676470* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 4
  %0 = bitcast %Type.676538** %.10 to %ObjectType.676562**
  %.1110 = load %ObjectType.676562*, %ObjectType.676562** %0, align 8
  %.15 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 5
  %.16 = load i64, i64* %.15, align 8
  %.19 = call %string.676378* @bin_op_to_op_overload_name(i64 %.16)
  %.22 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.23 = load %Program.676712*, %Program.676712** %.22, align 8
  %.25 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.1110, i64 0, i32 2
  %.26 = load %ClassId.676554*, %ClassId.676554** %.25, align 8
  %.27 = call %Class.676668* @get_class(%Program.676712* %.23, %ClassId.676554* %.26)
  %.30 = getelementptr inbounds %Class.676668, %Class.676668* %.27, i64 0, i32 7
  %.31 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.31, i64 0, i32 0
  %.33 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.32, align 8
  %.34 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.33, i64 0, i32 3
  %.35 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.34, align 8
  %.37 = call %PropId.676604* %.35(%"Map<string, PropId>.676672"* %.31, %string.676378* %.19)
  %1 = ptrtoint %PropId.676604* %.37 to i64
  %.40 = trunc i64 %1 to i32
  %.42 = icmp eq i32 %.40, 0
  br i1 %.42, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif, %.5
  ret %Expression.676558* null

.5.endif:                                         ; preds = %.5
  %.47 = load %Program.676712*, %Program.676712** %.22, align 8
  %.49 = call %Type.676538* @get_class_prop_type(%Program.676712* %.47, %PropId.676604* %.37)
  %method_type = alloca %FunctionType.676544*, align 8
  %2 = bitcast %FunctionType.676544** %method_type to %Type.676538**
  store %Type.676538* %.49, %Type.676538** %2, align 8
  %.53 = getelementptr inbounds %Type.676538, %Type.676538* %.49, i64 1
  %3 = bitcast %Type.676538* %.53 to %"Array<Type>.676546"**
  %.54 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %3, align 8
  %.55 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.54, i64 0, i32 0
  %.56 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.56, i64 0, i32 5
  %.58 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.57, align 8
  %.59 = call %Type.676538* %.58(%"Array<Type>.676546"* %.54, i64 0)
  %.62 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.63 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.62, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.63, i64 0, i32 70
  %.65 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.64, align 8
  %.68 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 6
  %.69 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.68, align 8
  %.70 = call %Expression.676558* %.65(%TypeChecker.676716* %.1, %Type.676538* %.59, %ExpressionNode.676442* %.69)
  %right = alloca %Expression.676558*, align 8
  store %Expression.676558* %.70, %Expression.676558** %right, align 8
  %.74 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.62, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.74, i64 0, i32 17
  %.76 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.75, align 8
  %.77 = call i1 %.76(%TypeChecker.676716* %.1)
  br i1 %.77, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.82 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.62, align 8
  %.83 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.82, i64 0, i32 9
  %.84 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.83, align 8
  %.87 = getelementptr inbounds %Expression.676558, %Expression.676558* %.70, i64 0, i32 4
  %.88 = load %Type.676538*, %Type.676538** %.87, align 8
  %.89 = call i1 %.84(%TypeChecker.676716* %.1, %Type.676538* %.59, %Type.676538* %.88)
  br i1 %.89, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.94 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.62, align 8
  %.95 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.94, i64 0, i32 16
  %.96 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.95, align 8
  %.100 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.94, i64 0, i32 10
  %.101 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.100, align 8
  %.103 = call %string.676378* %.101(%TypeChecker.676716* %.1, %Type.676538* %.59)
  %.106 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.62, align 8
  %.107 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.106, i64 0, i32 10
  %.108 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.107, align 8
  %.111 = load %Type.676538*, %Type.676538** %.87, align 8
  %.112 = call %string.676378* %.108(%TypeChecker.676716* %.1, %Type.676538* %.111)
  %.113 = getelementptr inbounds %string.676378, %string.676378* %.103, i64 0, i32 0
  %.114 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.113, align 8
  %.115 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.114, i64 0, i32 11
  %.116 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.115, align 8
  %.117 = call i8* %.116(%string.676378* %.103)
  %.118 = getelementptr inbounds %string.676378, %string.676378* %.112, i64 0, i32 0
  %.119 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.118, align 8
  %.120 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.119, i64 0, i32 11
  %.121 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.120, align 8
  %.122 = call i8* %.121(%string.676378* %.112)
  %.124 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.117, i8* %.122)
  %.126 = call i8* @malloc(i64 %.124)
  %.127 = call i64 (i8*, i8*, ...) @sprintf(i8* %.126, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.117, i8* %.122)
  %.128 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.129 = bitcast i8* %.128 to %string.676378*
  %.130 = bitcast i8* %.128 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.130, align 8
  %.132 = getelementptr inbounds i8, i8* %.128, i64 8
  %4 = bitcast i8* %.132 to i8**
  store i8* %.126, i8** %4, align 8
  %.134 = getelementptr inbounds i8, i8* %.128, i64 16
  %5 = bitcast i8* %.134 to i64*
  store i64 %.124, i64* %5, align 8
  %.136 = getelementptr inbounds i8, i8* %.128, i64 24
  %6 = bitcast i8* %.136 to i64*
  store i64 %.124, i64* %6, align 8
  %.140 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.68, align 8
  %.141 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.140, i64 0, i32 1
  %.142 = load %FloRange.676382*, %FloRange.676382** %.141, align 8
  call void %.96(%TypeChecker.676716* %.1, i64 5, %string.676378* %.129, %FloRange.676382* %.142)
  ret %Expression.676558* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.149 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.150 = bitcast i8* %.149 to %MemberExpression.676606*
  %.151 = bitcast i8* %.149 to %MemberExpression_vtable_ty.676607**
  store %MemberExpression_vtable_ty.676607* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.676607** %.151, align 8
  call void @MemberExpression_constructor(%MemberExpression.676606* %.150, %Expression.676558* %.2, %PropId.676604* %.37, %Type.676538* %.49)
  %member_exp = alloca %MemberExpression.676606*, align 8
  %7 = bitcast %MemberExpression.676606** %member_exp to i8**
  store i8* %.149, i8** %7, align 8
  %8 = bitcast %Expression.676558** %right to i64*
  %.15512 = load i64, i64* %8, align 8
  %.157 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %9 = bitcast i8* %.157 to i64*
  store i64 %.15512, i64* %9, align 8
  %.161 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.163 = bitcast i8* %.161 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.163, align 8
  %.165 = getelementptr inbounds i8, i8* %.161, i64 8
  %10 = bitcast i8* %.165 to i8**
  store i8* %.157, i8** %10, align 8
  %.167 = getelementptr inbounds i8, i8* %.161, i64 16
  %11 = bitcast i8* %.167 to i64*
  store i64 1, i64* %11, align 8
  %.169 = getelementptr inbounds i8, i8* %.161, i64 24
  %12 = bitcast i8* %.169 to i64*
  store i64 8, i64* %12, align 8
  %13 = bitcast %MemberExpression.676606** %member_exp to %Expression.676558**
  %.17213 = load %Expression.676558*, %Expression.676558** %13, align 8
  %.174.cast = bitcast i8* %.161 to %"Array<Expression>.676574"*
  %.175 = load %FunctionType.676544*, %FunctionType.676544** %method_type, align 8
  %.176 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.175, i64 0, i32 3
  %.177 = load %Type.676538*, %Type.676538** %.176, align 8
  %.178 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.179 = bitcast i8* %.178 to %CallExpression.676592*
  %.180 = bitcast i8* %.178 to %CallExpression_vtable_ty.676593**
  store %CallExpression_vtable_ty.676593* @CallExpression_vtable_data, %CallExpression_vtable_ty.676593** %.180, align 8
  call void @CallExpression_constructor(%CallExpression.676592* %.179, %Expression.676558* %.17213, %"Array<Expression>.676574"* %.174.cast, %Type.676538* %.177)
  %.183 = bitcast i8* %.178 to %Expression.676558*
  ret %Expression.676558* %.183
}

define noalias %Expression.676558* @TypeChecker_check_object_binary_expr(%TypeChecker.676716* %.1, %Expression.676558* %.2, %BinaryExpressionNode.676470* nocapture readonly %.3, %Expression.676558* %.4) {
.6:
  %.12 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 4
  %0 = bitcast %Type.676538** %.12 to %ObjectType.676562**
  %.131 = load %ObjectType.676562*, %ObjectType.676562** %0, align 8
  %.17 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 5
  %.18 = load i64, i64* %.17, align 8
  %.21 = call %string.676378* @bin_op_to_op_overload_name(i64 %.18)
  %1 = ptrtoint %string.676378* %.21 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, 0
  br i1 %.26, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.29 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.30 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.29, align 8
  %.31 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.30, i64 0, i32 16
  %.32 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.31, align 8
  %.34 = call %string.676378* @dump_bin_op(i64 %.18)
  %.35 = getelementptr inbounds %string.676378, %string.676378* %.34, i64 0, i32 0
  %.36 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.35, align 8
  %.37 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.36, i64 0, i32 11
  %.38 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.37, align 8
  %.39 = call i8* %.38(%string.676378* %.34)
  %.41 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.318, i64 0, i64 0), i8* %.39)
  %.43 = call i8* @malloc(i64 %.41)
  %.44 = call i64 (i8*, i8*, ...) @sprintf(i8* %.43, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.318, i64 0, i64 0), i8* %.39)
  %.45 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.46 = bitcast i8* %.45 to %string.676378*
  %.47 = bitcast i8* %.45 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.47, align 8
  %.49 = getelementptr inbounds i8, i8* %.45, i64 8
  %2 = bitcast i8* %.49 to i8**
  store i8* %.43, i8** %2, align 8
  %.51 = getelementptr inbounds i8, i8* %.45, i64 16
  %3 = bitcast i8* %.51 to i64*
  store i64 %.41, i64* %3, align 8
  %.53 = getelementptr inbounds i8, i8* %.45, i64 24
  %4 = bitcast i8* %.53 to i64*
  store i64 %.41, i64* %4, align 8
  %.56 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 1
  %.57 = load %FloRange.676382*, %FloRange.676382** %.56, align 8
  call void %.32(%TypeChecker.676716* %.1, i64 4, %string.676378* %.46, %FloRange.676382* %.57)
  ret %Expression.676558* null

.6.endif:                                         ; preds = %.6
  %.61 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.62 = load %Program.676712*, %Program.676712** %.61, align 8
  %.64 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.131, i64 0, i32 2
  %.65 = load %ClassId.676554*, %ClassId.676554** %.64, align 8
  %.66 = call %Class.676668* @get_class(%Program.676712* %.62, %ClassId.676554* %.65)
  %.69 = getelementptr inbounds %Class.676668, %Class.676668* %.66, i64 0, i32 7
  %.70 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.69, align 8
  %.71 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.70, i64 0, i32 0
  %.72 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.71, align 8
  %.73 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.72, i64 0, i32 3
  %.74 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.73, align 8
  %.76 = call %PropId.676604* %.74(%"Map<string, PropId>.676672"* %.70, %string.676378* %.21)
  %5 = ptrtoint %PropId.676604* %.76 to i64
  %.79 = trunc i64 %5 to i32
  %.81 = icmp eq i32 %.79, 0
  br i1 %.81, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  %6 = and i64 %.18, -2
  %7 = icmp eq i64 %6, 10
  br i1 %7, label %.6.endif.if.if, label %.6.endif.if.endif

.6.endif.endif:                                   ; preds = %.6.endif
  %.153 = load %Program.676712*, %Program.676712** %.61, align 8
  %.155 = call %Type.676538* @get_class_prop_type(%Program.676712* %.153, %PropId.676604* %.76)
  %method_type = alloca %FunctionType.676544*, align 8
  %8 = bitcast %FunctionType.676544** %method_type to %Type.676538**
  store %Type.676538* %.155, %Type.676538** %8, align 8
  %.159 = getelementptr inbounds %Type.676538, %Type.676538* %.155, i64 1
  %9 = bitcast %Type.676538* %.159 to %"Array<Type>.676546"**
  %.160 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %9, align 8
  %.161 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.160, i64 0, i32 0
  %.162 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.161, align 8
  %.163 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.162, i64 0, i32 5
  %.164 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.163, align 8
  %.165 = call %Type.676538* %.164(%"Array<Type>.676546"* %.160, i64 0)
  %10 = ptrtoint %Expression.676558* %.4 to i64
  %.168 = trunc i64 %10 to i32
  %.170 = icmp eq i32 %.168, 0
  br i1 %.170, label %.6.endif.endif.if, label %.6.endif.endif.endif

.6.endif.if.if:                                   ; preds = %.6.endif.if
  %.92 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.93 = bitcast i8* %.92 to %BooleanType.676540*
  %.94 = bitcast i8* %.92 to %BooleanType_vtable_ty.676541**
  store %BooleanType_vtable_ty.676541* @BooleanType_vtable_data, %BooleanType_vtable_ty.676541** %.94, align 8
  call void @BooleanType_constructor(%BooleanType.676540* %.93)
  %.97 = bitcast i8* %.92 to %Type.676538*
  %.98 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.99 = bitcast i8* %.98 to %BinaryExpression.676580*
  %.100 = bitcast i8* %.98 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.100, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.99, %Expression.676558* %.2, i64 %.18, %Expression.676558* %.4, %Type.676538* %.97, i1 false)
  %.103 = bitcast i8* %.98 to %Expression.676558*
  ret %Expression.676558* %.103

.6.endif.if.endif:                                ; preds = %.6.endif.if
  %.106 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.107 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.106, align 8
  %.108 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.107, i64 0, i32 16
  %.109 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.108, align 8
  %.111 = call %string.676378* @dump_bin_op(i64 %.18)
  %.113 = getelementptr inbounds %Class.676668, %Class.676668* %.66, i64 0, i32 2
  %.114 = load %string.676378*, %string.676378** %.113, align 8
  %.116 = getelementptr inbounds %string.676378, %string.676378* %.111, i64 0, i32 0
  %.117 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.116, align 8
  %.118 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.117, i64 0, i32 11
  %.119 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.118, align 8
  %.120 = call i8* %.119(%string.676378* %.111)
  %.121 = getelementptr inbounds %string.676378, %string.676378* %.114, i64 0, i32 0
  %.122 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.121, align 8
  %.123 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.122, i64 0, i32 11
  %.124 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.123, align 8
  %.125 = call i8* %.124(%string.676378* %.114)
  %.126 = getelementptr inbounds %string.676378, %string.676378* %.21, i64 0, i32 0
  %.127 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.126, align 8
  %.128 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.127, i64 0, i32 11
  %.129 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.128, align 8
  %.130 = call i8* %.129(%string.676378* %.21)
  %.132 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @str.319, i64 0, i64 0), i8* %.120, i8* %.125, i8* %.130)
  %.134 = call i8* @malloc(i64 %.132)
  %.135 = call i64 (i8*, i8*, ...) @sprintf(i8* %.134, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @str.319, i64 0, i64 0), i8* %.120, i8* %.125, i8* %.130)
  %.136 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.137 = bitcast i8* %.136 to %string.676378*
  %.138 = bitcast i8* %.136 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.138, align 8
  %.140 = getelementptr inbounds i8, i8* %.136, i64 8
  %11 = bitcast i8* %.140 to i8**
  store i8* %.134, i8** %11, align 8
  %.142 = getelementptr inbounds i8, i8* %.136, i64 16
  %12 = bitcast i8* %.142 to i64*
  store i64 %.132, i64* %12, align 8
  %.144 = getelementptr inbounds i8, i8* %.136, i64 24
  %13 = bitcast i8* %.144 to i64*
  store i64 %.132, i64* %13, align 8
  %.147 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 1
  %.148 = load %FloRange.676382*, %FloRange.676382** %.147, align 8
  call void %.109(%TypeChecker.676716* %.1, i64 1, %string.676378* %.137, %FloRange.676382* %.148)
  ret %Expression.676558* null

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.173 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.174 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.173, align 8
  %.175 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.174, i64 0, i32 70
  %.176 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.175, align 8
  %.179 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 6
  %.180 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.179, align 8
  %.181 = call %Expression.676558* %.176(%TypeChecker.676716* %.1, %Type.676538* %.165, %ExpressionNode.676442* %.180)
  br label %.6.endif.endif.endif

.6.endif.endif.endif:                             ; preds = %.6.endif.endif.if, %.6.endif.endif
  %right.0 = phi %Expression.676558* [ %.181, %.6.endif.endif.if ], [ %.4, %.6.endif.endif ]
  %.185 = call i1 @is_null(%Expression.676558* %right.0)
  %14 = and i64 %.18, -2
  %15 = icmp eq i64 %14, 10
  %.191 = and i1 %15, %.185
  br i1 %.191, label %.6.endif.endif.endif.if, label %.6.endif.endif.endif.endif

.6.endif.endif.endif.if:                          ; preds = %.6.endif.endif.endif
  %.196 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.197 = bitcast i8* %.196 to %BooleanType.676540*
  %.198 = bitcast i8* %.196 to %BooleanType_vtable_ty.676541**
  store %BooleanType_vtable_ty.676541* @BooleanType_vtable_data, %BooleanType_vtable_ty.676541** %.198, align 8
  call void @BooleanType_constructor(%BooleanType.676540* %.197)
  %.201 = bitcast i8* %.196 to %Type.676538*
  %.202 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.203 = bitcast i8* %.202 to %BinaryExpression.676580*
  %.204 = bitcast i8* %.202 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.204, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.203, %Expression.676558* %.2, i64 %.18, %Expression.676558* %right.0, %Type.676538* %.201, i1 false)
  %.207 = bitcast i8* %.202 to %Expression.676558*
  ret %Expression.676558* %.207

.6.endif.endif.endif.endif:                       ; preds = %.6.endif.endif.endif
  %.210 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.211 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.210, align 8
  %.212 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.211, i64 0, i32 9
  %.213 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.212, align 8
  %.216 = getelementptr inbounds %Expression.676558, %Expression.676558* %right.0, i64 0, i32 4
  %.217 = load %Type.676538*, %Type.676538** %.216, align 8
  %.218 = call i1 %.213(%TypeChecker.676716* %.1, %Type.676538* %.165, %Type.676538* %.217)
  br i1 %.218, label %.6.endif.endif.endif.endif.endif, label %.6.endif.endif.endif.endif.if

.6.endif.endif.endif.endif.if:                    ; preds = %.6.endif.endif.endif.endif
  %.223 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.210, align 8
  %.224 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.223, i64 0, i32 16
  %.225 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.224, align 8
  %.229 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.223, i64 0, i32 10
  %.230 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.229, align 8
  %.232 = call %string.676378* %.230(%TypeChecker.676716* %.1, %Type.676538* %.165)
  %.235 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.210, align 8
  %.236 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.235, i64 0, i32 10
  %.237 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.236, align 8
  %.240 = load %Type.676538*, %Type.676538** %.216, align 8
  %.241 = call %string.676378* %.237(%TypeChecker.676716* %.1, %Type.676538* %.240)
  %.242 = getelementptr inbounds %string.676378, %string.676378* %.232, i64 0, i32 0
  %.243 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.242, align 8
  %.244 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.243, i64 0, i32 11
  %.245 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.244, align 8
  %.246 = call i8* %.245(%string.676378* %.232)
  %.247 = getelementptr inbounds %string.676378, %string.676378* %.241, i64 0, i32 0
  %.248 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.247, align 8
  %.249 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.248, i64 0, i32 11
  %.250 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.249, align 8
  %.251 = call i8* %.250(%string.676378* %.241)
  %.253 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.246, i8* %.251)
  %.255 = call i8* @malloc(i64 %.253)
  %.256 = call i64 (i8*, i8*, ...) @sprintf(i8* %.255, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.246, i8* %.251)
  %.257 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.258 = bitcast i8* %.257 to %string.676378*
  %.259 = bitcast i8* %.257 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.259, align 8
  %.261 = getelementptr inbounds i8, i8* %.257, i64 8
  %16 = bitcast i8* %.261 to i8**
  store i8* %.255, i8** %16, align 8
  %.263 = getelementptr inbounds i8, i8* %.257, i64 16
  %17 = bitcast i8* %.263 to i64*
  store i64 %.253, i64* %17, align 8
  %.265 = getelementptr inbounds i8, i8* %.257, i64 24
  %18 = bitcast i8* %.265 to i64*
  store i64 %.253, i64* %18, align 8
  %.268 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 6
  %.269 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.268, align 8
  %.270 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.269, i64 0, i32 1
  %.271 = load %FloRange.676382*, %FloRange.676382** %.270, align 8
  call void %.225(%TypeChecker.676716* %.1, i64 5, %string.676378* %.258, %FloRange.676382* %.271)
  ret %Expression.676558* null

.6.endif.endif.endif.endif.endif:                 ; preds = %.6.endif.endif.endif.endif
  %.278 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.279 = bitcast i8* %.278 to %MemberExpression.676606*
  %.280 = bitcast i8* %.278 to %MemberExpression_vtable_ty.676607**
  store %MemberExpression_vtable_ty.676607* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.676607** %.280, align 8
  call void @MemberExpression_constructor(%MemberExpression.676606* %.279, %Expression.676558* %.2, %PropId.676604* %.76, %Type.676538* %.155)
  %member_exp = alloca %MemberExpression.676606*, align 8
  %19 = bitcast %MemberExpression.676606** %member_exp to i8**
  store i8* %.278, i8** %19, align 8
  %.286 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %.287 = bitcast i8* %.286 to %Expression.676558**
  store %Expression.676558* %right.0, %Expression.676558** %.287, align 8
  %.290 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.292 = bitcast i8* %.290 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.292, align 8
  %.294 = getelementptr inbounds i8, i8* %.290, i64 8
  %20 = bitcast i8* %.294 to i8**
  store i8* %.286, i8** %20, align 8
  %.296 = getelementptr inbounds i8, i8* %.290, i64 16
  %21 = bitcast i8* %.296 to i64*
  store i64 1, i64* %21, align 8
  %.298 = getelementptr inbounds i8, i8* %.290, i64 24
  %22 = bitcast i8* %.298 to i64*
  store i64 8, i64* %22, align 8
  %23 = bitcast %MemberExpression.676606** %member_exp to %Expression.676558**
  %.3013 = load %Expression.676558*, %Expression.676558** %23, align 8
  %.303.cast = bitcast i8* %.290 to %"Array<Expression>.676574"*
  %.304 = load %FunctionType.676544*, %FunctionType.676544** %method_type, align 8
  %.305 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.304, i64 0, i32 3
  %.306 = load %Type.676538*, %Type.676538** %.305, align 8
  %.307 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.308 = bitcast i8* %.307 to %CallExpression.676592*
  %.309 = bitcast i8* %.307 to %CallExpression_vtable_ty.676593**
  store %CallExpression_vtable_ty.676593* @CallExpression_vtable_data, %CallExpression_vtable_ty.676593** %.309, align 8
  call void @CallExpression_constructor(%CallExpression.676592* %.308, %Expression.676558* %.3013, %"Array<Expression>.676574"* %.303.cast, %Type.676538* %.306)
  %.312 = bitcast i8* %.307 to %Expression.676558*
  ret %Expression.676558* %.312
}

define noalias %Expression.676558* @TypeChecker_check_object_setitem_expr(%TypeChecker.676716* %.1, %Expression.676558* %.2, %BinaryExpressionNode.676470* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 4
  %0 = bitcast %Type.676538** %.10 to %ObjectType.676562**
  %.116 = load %ObjectType.676562*, %ObjectType.676562** %0, align 8
  %.15 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 4
  %1 = bitcast %ExpressionNode.676442** %.15 to %ExpressionIndexNode.676462**
  %.1610 = load %ExpressionIndexNode.676462*, %ExpressionIndexNode.676462** %1, align 8
  %.20 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.21 = load %Program.676712*, %Program.676712** %.20, align 8
  %.23 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.116, i64 0, i32 2
  %.24 = load %ClassId.676554*, %ClassId.676554** %.23, align 8
  %.25 = call %Class.676668* @get_class(%Program.676712* %.21, %ClassId.676554* %.24)
  %.28 = getelementptr inbounds %Class.676668, %Class.676668* %.25, i64 0, i32 7
  %.29 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.28, align 8
  %.30 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.29, i64 0, i32 0
  %.31 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.31, i64 0, i32 3
  %.33 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.32, align 8
  %.34 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %string.676378*
  %.35.repack = bitcast i8* %.34 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.35.repack, align 8
  %.35.repack11 = getelementptr inbounds i8, i8* %.34, i64 8
  %2 = bitcast i8* %.35.repack11 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.248, i64 0, i64 0), i8** %2, align 8
  %.35.repack12 = getelementptr inbounds i8, i8* %.34, i64 16
  %3 = bitcast i8* %.35.repack12 to i64*
  store i64 11, i64* %3, align 8
  %.35.repack13 = getelementptr inbounds i8, i8* %.34, i64 24
  %4 = bitcast i8* %.35.repack13 to i64*
  store i64 11, i64* %4, align 8
  %.37 = call %PropId.676604* %.33(%"Map<string, PropId>.676672"* %.29, %string.676378* %.35)
  %5 = ptrtoint %PropId.676604* %.37 to i64
  %.40 = trunc i64 %5 to i32
  %.42 = icmp eq i32 %.40, 0
  br i1 %.42, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.45 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.46 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.45, align 8
  %.47 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.46, i64 0, i32 16
  %.48 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.47, align 8
  %.50 = getelementptr inbounds %Class.676668, %Class.676668* %.25, i64 0, i32 2
  %.51 = load %string.676378*, %string.676378** %.50, align 8
  %.52 = getelementptr inbounds %string.676378, %string.676378* %.51, i64 0, i32 0
  %.53 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.52, align 8
  %.54 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.53, i64 0, i32 11
  %.55 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.54, align 8
  %.56 = call i8* %.55(%string.676378* %.51)
  %.58 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @str.320, i64 0, i64 0), i8* %.56)
  %.60 = call i8* @malloc(i64 %.58)
  %.61 = call i64 (i8*, i8*, ...) @sprintf(i8* %.60, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @str.320, i64 0, i64 0), i8* %.56)
  %.62 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.676378*
  %.64 = bitcast i8* %.62 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.64, align 8
  %.66 = getelementptr inbounds i8, i8* %.62, i64 8
  %6 = bitcast i8* %.66 to i8**
  store i8* %.60, i8** %6, align 8
  %.68 = getelementptr inbounds i8, i8* %.62, i64 16
  %7 = bitcast i8* %.68 to i64*
  store i64 %.58, i64* %7, align 8
  %.70 = getelementptr inbounds i8, i8* %.62, i64 24
  %8 = bitcast i8* %.70 to i64*
  store i64 %.58, i64* %8, align 8
  %.73 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.1610, i64 0, i32 1
  %.74 = load %FloRange.676382*, %FloRange.676382** %.73, align 8
  call void %.48(%TypeChecker.676716* %.1, i64 4, %string.676378* %.63, %FloRange.676382* %.74)
  ret %Expression.676558* null

.5.endif:                                         ; preds = %.5
  %.79 = load %Program.676712*, %Program.676712** %.20, align 8
  %.81 = call %Type.676538* @get_class_prop_type(%Program.676712* %.79, %PropId.676604* %.37)
  %method_type = alloca %FunctionType.676544*, align 8
  %9 = bitcast %FunctionType.676544** %method_type to %Type.676538**
  store %Type.676538* %.81, %Type.676538** %9, align 8
  %.85 = getelementptr inbounds %Type.676538, %Type.676538* %.81, i64 1
  %10 = bitcast %Type.676538* %.85 to %"Array<Type>.676546"**
  %.86 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %10, align 8
  %.87 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.86, i64 0, i32 0
  %.88 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.87, align 8
  %.89 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.88, i64 0, i32 5
  %.90 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.89, align 8
  %.91 = call %Type.676538* %.90(%"Array<Type>.676546"* %.86, i64 0)
  %.93 = load %FunctionType.676544*, %FunctionType.676544** %method_type, align 8
  %.94 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.93, i64 0, i32 2
  %.95 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.94, align 8
  %.96 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.95, i64 0, i32 0
  %.97 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.96, align 8
  %.98 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.97, i64 0, i32 5
  %.99 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.98, align 8
  %.100 = call %Type.676538* %.99(%"Array<Type>.676546"* %.95, i64 1)
  %.103 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.104 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.105 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.104, i64 0, i32 17
  %.106 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.105, align 8
  %.107 = call i1 %.106(%TypeChecker.676716* %.1)
  br i1 %.107, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif.endif.endif, %.5.endif
  ret %Expression.676558* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.112 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.113 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.112, i64 0, i32 70
  %.114 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.113, align 8
  %.117 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.1610, i64 0, i32 5
  %.118 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.117, align 8
  %.119 = call %Expression.676558* %.114(%TypeChecker.676716* %.1, %Type.676538* %.91, %ExpressionNode.676442* %.118)
  %index = alloca %Expression.676558*, align 8
  store %Expression.676558* %.119, %Expression.676558** %index, align 8
  %.123 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.124 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.123, i64 0, i32 9
  %.125 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.124, align 8
  %.128 = getelementptr inbounds %Expression.676558, %Expression.676558* %.119, i64 0, i32 4
  %.129 = load %Type.676538*, %Type.676538** %.128, align 8
  %.130 = call i1 %.125(%TypeChecker.676716* %.1, %Type.676538* %.91, %Type.676538* %.129)
  %.188 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  br i1 %.130, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.136 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.188, i64 0, i32 16
  %.137 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.136, align 8
  %.141 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.188, i64 0, i32 10
  %.142 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.141, align 8
  %.144 = call %string.676378* %.142(%TypeChecker.676716* %.1, %Type.676538* %.91)
  %.147 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.148 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.147, i64 0, i32 10
  %.149 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.148, align 8
  %.152 = load %Type.676538*, %Type.676538** %.128, align 8
  %.153 = call %string.676378* %.149(%TypeChecker.676716* %.1, %Type.676538* %.152)
  %.154 = getelementptr inbounds %string.676378, %string.676378* %.144, i64 0, i32 0
  %.155 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.154, align 8
  %.156 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.155, i64 0, i32 11
  %.157 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.156, align 8
  %.158 = call i8* %.157(%string.676378* %.144)
  %.159 = getelementptr inbounds %string.676378, %string.676378* %.153, i64 0, i32 0
  %.160 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.159, align 8
  %.161 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.160, i64 0, i32 11
  %.162 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.161, align 8
  %.163 = call i8* %.162(%string.676378* %.153)
  %.165 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.158, i8* %.163)
  %.167 = call i8* @malloc(i64 %.165)
  %.168 = call i64 (i8*, i8*, ...) @sprintf(i8* %.167, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.158, i8* %.163)
  %.169 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.170 = bitcast i8* %.169 to %string.676378*
  %.171 = bitcast i8* %.169 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.171, align 8
  %.173 = getelementptr inbounds i8, i8* %.169, i64 8
  %11 = bitcast i8* %.173 to i8**
  store i8* %.167, i8** %11, align 8
  %.175 = getelementptr inbounds i8, i8* %.169, i64 16
  %12 = bitcast i8* %.175 to i64*
  store i64 %.165, i64* %12, align 8
  %.177 = getelementptr inbounds i8, i8* %.169, i64 24
  %13 = bitcast i8* %.177 to i64*
  store i64 %.165, i64* %13, align 8
  %.181 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.117, align 8
  %.182 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.181, i64 0, i32 1
  %.183 = load %FloRange.676382*, %FloRange.676382** %.182, align 8
  call void %.137(%TypeChecker.676716* %.1, i64 5, %string.676378* %.170, %FloRange.676382* %.183)
  ret %Expression.676558* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.189 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.188, i64 0, i32 70
  %.190 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.189, align 8
  %.193 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 6
  %.194 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.193, align 8
  %.195 = call %Expression.676558* %.190(%TypeChecker.676716* %.1, %Type.676538* %.100, %ExpressionNode.676442* %.194)
  %value = alloca %Expression.676558*, align 8
  store %Expression.676558* %.195, %Expression.676558** %value, align 8
  %.199 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.200 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.199, i64 0, i32 17
  %.201 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.200, align 8
  %.202 = call i1 %.201(%TypeChecker.676716* %.1)
  br i1 %.202, label %.5.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.207 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.208 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.207, i64 0, i32 9
  %.209 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.208, align 8
  %.213 = load %Type.676538*, %Type.676538** %.128, align 8
  %.214 = call i1 %.209(%TypeChecker.676716* %.1, %Type.676538* %.91, %Type.676538* %.213)
  br i1 %.214, label %.5.endif.endif.endif.endif.endif, label %.5.endif.endif.endif.endif.if

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.219 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.220 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.219, i64 0, i32 16
  %.221 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.220, align 8
  %.225 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.219, i64 0, i32 10
  %.226 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.225, align 8
  %.228 = call %string.676378* %.226(%TypeChecker.676716* %.1, %Type.676538* %.100)
  %.231 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.103, align 8
  %.232 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.231, i64 0, i32 10
  %.233 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.232, align 8
  %.235 = getelementptr inbounds %Expression.676558, %Expression.676558* %.195, i64 0, i32 4
  %.236 = load %Type.676538*, %Type.676538** %.235, align 8
  %.237 = call %string.676378* %.233(%TypeChecker.676716* %.1, %Type.676538* %.236)
  %.238 = getelementptr inbounds %string.676378, %string.676378* %.228, i64 0, i32 0
  %.239 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.238, align 8
  %.240 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.239, i64 0, i32 11
  %.241 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.240, align 8
  %.242 = call i8* %.241(%string.676378* %.228)
  %.243 = getelementptr inbounds %string.676378, %string.676378* %.237, i64 0, i32 0
  %.244 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.243, align 8
  %.245 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.244, i64 0, i32 11
  %.246 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.245, align 8
  %.247 = call i8* %.246(%string.676378* %.237)
  %.249 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.242, i8* %.247)
  %.251 = call i8* @malloc(i64 %.249)
  %.252 = call i64 (i8*, i8*, ...) @sprintf(i8* %.251, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.242, i8* %.247)
  %.253 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.254 = bitcast i8* %.253 to %string.676378*
  %.255 = bitcast i8* %.253 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.255, align 8
  %.257 = getelementptr inbounds i8, i8* %.253, i64 8
  %14 = bitcast i8* %.257 to i8**
  store i8* %.251, i8** %14, align 8
  %.259 = getelementptr inbounds i8, i8* %.253, i64 16
  %15 = bitcast i8* %.259 to i64*
  store i64 %.249, i64* %15, align 8
  %.261 = getelementptr inbounds i8, i8* %.253, i64 24
  %16 = bitcast i8* %.261 to i64*
  store i64 %.249, i64* %16, align 8
  %.265 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.193, align 8
  %.266 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.265, i64 0, i32 1
  %.267 = load %FloRange.676382*, %FloRange.676382** %.266, align 8
  call void %.221(%TypeChecker.676716* %.1, i64 5, %string.676378* %.254, %FloRange.676382* %.267)
  ret %Expression.676558* null

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.274 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.275 = bitcast i8* %.274 to %MemberExpression.676606*
  %.276 = bitcast i8* %.274 to %MemberExpression_vtable_ty.676607**
  store %MemberExpression_vtable_ty.676607* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.676607** %.276, align 8
  call void @MemberExpression_constructor(%MemberExpression.676606* %.275, %Expression.676558* %.2, %PropId.676604* %.37, %Type.676538* %.81)
  %member_expr = alloca %MemberExpression.676606*, align 8
  %17 = bitcast %MemberExpression.676606** %member_expr to i8**
  store i8* %.274, i8** %17, align 8
  %18 = bitcast %Expression.676558** %index to i64*
  %.28015 = load i64, i64* %18, align 8
  %19 = bitcast %Expression.676558** %value to i64*
  %.28116 = load i64, i64* %19, align 8
  %.283 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %20 = bitcast i8* %.283 to i64*
  store i64 %.28015, i64* %20, align 8
  %.287 = getelementptr inbounds i8, i8* %.283, i64 8
  %21 = bitcast i8* %.287 to i64*
  store i64 %.28116, i64* %21, align 8
  %.289 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.291 = bitcast i8* %.289 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.291, align 8
  %.293 = getelementptr inbounds i8, i8* %.289, i64 8
  %22 = bitcast i8* %.293 to i8**
  store i8* %.283, i8** %22, align 8
  %.295 = getelementptr inbounds i8, i8* %.289, i64 16
  %23 = bitcast i8* %.295 to i64*
  store i64 2, i64* %23, align 8
  %.297 = getelementptr inbounds i8, i8* %.289, i64 24
  %24 = bitcast i8* %.297 to i64*
  store i64 16, i64* %24, align 8
  %25 = bitcast %MemberExpression.676606** %member_expr to %Expression.676558**
  %.30017 = load %Expression.676558*, %Expression.676558** %25, align 8
  %.302.cast = bitcast i8* %.289 to %"Array<Expression>.676574"*
  %.304 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.93, i64 0, i32 3
  %.305 = load %Type.676538*, %Type.676538** %.304, align 8
  %.306 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.307 = bitcast i8* %.306 to %CallExpression.676592*
  %.308 = bitcast i8* %.306 to %CallExpression_vtable_ty.676593**
  store %CallExpression_vtable_ty.676593* @CallExpression_vtable_data, %CallExpression_vtable_ty.676593** %.308, align 8
  call void @CallExpression_constructor(%CallExpression.676592* %.307, %Expression.676558* %.30017, %"Array<Expression>.676574"* %.302.cast, %Type.676538* %.305)
  %.311 = bitcast i8* %.306 to %Expression.676558*
  ret %Expression.676558* %.311
}

define %BinaryExpression.676580* @TypeChecker_check_bin_expr(%TypeChecker.676716* %.1, %Type.676538* %.2, %BinaryExpressionNode.676470* %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.11.off = add i64 %.11, -18
  %0 = icmp ult i64 %.11.off, 12
  %.20 = icmp eq i64 %.11, 18
  %.22 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 4
  %.23 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.22, align 8
  %.24 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.23, i64 0, i32 3
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp eq i64 %.25, 13
  %.27 = and i1 %.20, %.26
  br i1 %.27, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.30 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.31 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.30, align 8
  %.32 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.31, i64 0, i32 70
  %.33 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.32, align 8
  %.34 = call %Type.676538* @Type_unknown()
  %1 = bitcast %ExpressionNode.676442** %.22 to %ExpressionIndexNode.676462**
  %.3713 = load %ExpressionIndexNode.676462*, %ExpressionIndexNode.676462** %1, align 8
  %.39 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.3713, i64 0, i32 4
  %.40 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.39, align 8
  %.41 = call %Expression.676558* %.33(%TypeChecker.676716* %.1, %Type.676538* %.34, %ExpressionNode.676442* %.40)
  %.44 = getelementptr inbounds %Expression.676558, %Expression.676558* %.41, i64 0, i32 4
  %.45 = load %Type.676538*, %Type.676538** %.44, align 8
  %.46 = call i1 @is_object(%Type.676538* %.45)
  br i1 %.46, label %.5.if.if, label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.60 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.61 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.62 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.61, i64 0, i32 70
  %.63 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.62, align 8
  %.67 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.22, align 8
  %.68 = call %Expression.676558* %.63(%TypeChecker.676716* %.1, %Type.676538* %.2, %ExpressionNode.676442* %.67)
  %left = alloca %Expression.676558*, align 8
  store %Expression.676558* %.68, %Expression.676558** %left, align 8
  %.72 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.73 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.72, i64 0, i32 17
  %.74 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.73, align 8
  %.75 = call i1 %.74(%TypeChecker.676716* %.1)
  br i1 %.75, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.50 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.30, align 8
  %.51 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.50, i64 0, i32 50
  %.52 = load %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*)** %.51, align 8
  %.55 = call %Expression.676558* %.52(%TypeChecker.676716* %.1, %Expression.676558* %.41, %BinaryExpressionNode.676470* %.3)
  %.56 = bitcast %Expression.676558* %.55 to %BinaryExpression.676580*
  ret %BinaryExpression.676580* %.56

.5.endif.if:                                      ; preds = %.5.endif.endif.endif.endif.endif, %.5.endif.endif.endif, %.5.endif
  ret %BinaryExpression.676580* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.78 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.79 = getelementptr inbounds %Expression.676558, %Expression.676558* %.78, i64 0, i32 4
  %.80 = load %Type.676538*, %Type.676538** %.79, align 8
  %.81 = call i1 @is_object(%Type.676538* %.80)
  %.83 = xor i1 %0, true
  %.84 = and i1 %.81, %.83
  %.88 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  br i1 %.84, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.89 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.88, i64 0, i32 49
  %.90 = load %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*, %Expression.676558*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*, %Expression.676558*)** %.89, align 8
  %.93 = call %Expression.676558* %.90(%TypeChecker.676716* %.1, %Expression.676558* %.78, %BinaryExpressionNode.676470* %.3, %Expression.676558* null)
  %.94 = bitcast %Expression.676558* %.93 to %BinaryExpression.676580*
  ret %BinaryExpression.676580* %.94

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.99 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.88, i64 0, i32 70
  %.100 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.99, align 8
  %.105 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 6
  %.106 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.105, align 8
  %.107 = call %Expression.676558* %.100(%TypeChecker.676716* %.1, %Type.676538* %.80, %ExpressionNode.676442* %.106)
  %right = alloca %Expression.676558*, align 8
  store %Expression.676558* %.107, %Expression.676558** %right, align 8
  %.111 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.112 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.111, i64 0, i32 17
  %.113 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.112, align 8
  %.114 = call i1 %.113(%TypeChecker.676716* %.1)
  br i1 %.114, label %.5.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.117 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.118 = getelementptr inbounds %Expression.676558, %Expression.676558* %.117, i64 0, i32 4
  %.119 = load %Type.676538*, %Type.676538** %.118, align 8
  %.120 = call i1 @is_object(%Type.676538* %.119)
  %.122 = icmp eq i64 %.11, 17
  %.123 = and i1 %.122, %.120
  %.127 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  br i1 %.123, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.128 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.127, i64 0, i32 49
  %.129 = load %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*, %Expression.676558*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %BinaryExpressionNode.676470*, %Expression.676558*)** %.128, align 8
  %.132 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.133 = call %Expression.676558* %.129(%TypeChecker.676716* %.1, %Expression.676558* %.117, %BinaryExpressionNode.676470* %.3, %Expression.676558* %.132)
  %.134 = bitcast %Expression.676558* %.133 to %BinaryExpression.676580*
  ret %BinaryExpression.676580* %.134

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.139 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.127, i64 0, i32 17
  %.140 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.139, align 8
  %.141 = call i1 %.140(%TypeChecker.676716* %.1)
  br i1 %.141, label %.5.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif
  %.144 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.145 = getelementptr inbounds %Expression.676558, %Expression.676558* %.144, i64 0, i32 2
  %.146 = load i1, i1* %.145, align 1
  %.147 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.148 = getelementptr inbounds %Expression.676558, %Expression.676558* %.147, i64 0, i32 2
  %.149 = load i1, i1* %.148, align 1
  %.150 = and i1 %.146, %.149
  br i1 %0, label %.5.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.156 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.157 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.156, i64 0, i32 47
  %.158 = load %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %Expression.676558*, %BinaryExpressionNode.676470*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %Expression.676558*, %BinaryExpressionNode.676470*)** %.157, align 8
  %.162 = call %Expression.676558* %.158(%TypeChecker.676716* %.1, %Expression.676558* %.144, %Expression.676558* %.147, %BinaryExpressionNode.676470* %.3)
  %.163 = bitcast %Expression.676558* %.162 to %BinaryExpression.676580*
  ret %BinaryExpression.676580* %.163

.5.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.166 = getelementptr inbounds %Expression.676558, %Expression.676558* %.144, i64 0, i32 4
  %.167 = load %Type.676538*, %Type.676538** %.166, align 8
  %.168 = getelementptr inbounds %Type.676538, %Type.676538* %.167, i64 0, i32 1
  %.169 = load i64, i64* %.168, align 8
  %.170 = icmp eq i64 %.169, 21
  %.172 = getelementptr inbounds %Expression.676558, %Expression.676558* %.147, i64 0, i32 4
  %.173 = load %Type.676538*, %Type.676538** %.172, align 8
  %.174 = getelementptr inbounds %Type.676538, %Type.676538* %.173, i64 0, i32 1
  %.175 = load i64, i64* %.174, align 8
  %.176 = icmp ne i64 %.175, 21
  %.177 = and i1 %.170, %.176
  br i1 %.177, label %.5.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %2 = bitcast %Type.676538** %.172 to i64*
  %.18212 = load i64, i64* %2, align 8
  %3 = bitcast %Type.676538** %.166 to i64*
  store i64 %.18212, i64* %3, align 8
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif
  %.188 = load %Type.676538*, %Type.676538** %.166, align 8
  %.189 = call i1 @is_numeric(%Type.676538* %.188)
  %.192 = load %Type.676538*, %Type.676538** %.172, align 8
  %.193 = call i1 @is_numeric(%Type.676538* %.192)
  %.194 = and i1 %.189, %.193
  br i1 %.194, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.else

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.197 = icmp eq i64 %.11, 5
  br i1 %.197, label %.5.endif.endif.endif.endi...if, label %.5.endif.endif.endif.endi...endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.else: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.326 = call i1 @is_bool(%Type.676538* %.188)
  %.330 = call i1 @is_bool(%Type.676538* %.192)
  %.331 = and i1 %.326, %.330
  %4 = and i64 %.11, -2
  %5 = icmp eq i64 %4, 14
  %or.cond = and i1 %5, %.331
  br i1 %or.cond, label %.5.endif.endif.endif.endi...if.1.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.else, %.5.endif.endif.endif.endi...endif.endif
  %.11.off1 = add i64 %.11, -6
  %6 = icmp ult i64 %.11.off1, 6
  br i1 %6, label %.5.endif.endif.endif.endi...if.2, label %.5.endif.endif.endif.endi...endif.2

.5.endif.endif.endif.endi...if:                   ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
  %.202 = call i1 @is_int(%Type.676538* %.188)
  br i1 %.202, label %.5.endif.endif.endif.endi...if.if, label %.5.endif.endif.endif.endi...if.endif

.5.endif.endif.endif.endi...endif:                ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
  %7 = icmp ult i64 %.11, 10
  br i1 %7, label %.5.endif.endif.endif.endi...endif.if, label %.5.endif.endif.endif.endi...endif.endif

.5.endif.endif.endif.endi...if.if:                ; preds = %.5.endif.endif.endif.endi...if
  %.205 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.206 = bitcast i8* %.205 to %Type.676538*
  %.207 = bitcast i8* %.205 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.207, align 8
  call void @Type_constructor(%Type.676538* %.206, i64 11)
  %.210 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.144, %Type.676538* %.206)
  store %Expression.676558* %.210, %Expression.676558** %left, align 8
  br label %.5.endif.endif.endif.endi...if.endif

.5.endif.endif.endif.endi...if.endif:             ; preds = %.5.endif.endif.endif.endi...if.if, %.5.endif.endif.endif.endi...if
  %.213 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.214 = getelementptr inbounds %Expression.676558, %Expression.676558* %.213, i64 0, i32 4
  %.215 = load %Type.676538*, %Type.676538** %.214, align 8
  %.216 = call i1 @is_int(%Type.676538* %.215)
  br i1 %.216, label %.5.endif.endif.endif.endi...if.endif.if, label %.5.endif.endif.endif.endi...if.endif.endif

.5.endif.endif.endif.endi...if.endif.if:          ; preds = %.5.endif.endif.endif.endi...if.endif
  %.219 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.220 = bitcast i8* %.219 to %Type.676538*
  %.221 = bitcast i8* %.219 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.221, align 8
  call void @Type_constructor(%Type.676538* %.220, i64 11)
  %.224 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.213, %Type.676538* %.220)
  store %Expression.676558* %.224, %Expression.676558** %right, align 8
  br label %.5.endif.endif.endif.endi...if.endif.endif

.5.endif.endif.endif.endi...if.endif.endif:       ; preds = %.5.endif.endif.endif.endi...if.endif.if, %.5.endif.endif.endif.endi...if.endif
  %.227 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.229 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.231 = getelementptr inbounds %Expression.676558, %Expression.676558* %.227, i64 0, i32 4
  %.232 = load %Type.676538*, %Type.676538** %.231, align 8
  %.233 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.234 = bitcast i8* %.233 to %BinaryExpression.676580*
  %.235 = bitcast i8* %.233 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.235, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.234, %Expression.676558* %.227, i64 %.11, %Expression.676558* %.229, %Type.676538* %.232, i1 false)
  ret %BinaryExpression.676580* %.234

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5.endif.endif.endif.endi...endif
  call void @check_cast_lower_bits(%Expression.676558** nonnull %left, %Expression.676558** nonnull %right)
  %.246 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.247 = getelementptr inbounds %Expression.676558, %Expression.676558* %.246, i64 0, i32 4
  %8 = bitcast %Type.676538** %.247 to i64*
  %.24811 = load i64, i64* %8, align 8
  %exp_type = alloca %Type.676538*, align 8
  %9 = bitcast %Type.676538** %exp_type to i64*
  store i64 %.24811, i64* %9, align 8
  %.251 = icmp sgt i64 %.11, 5
  br i1 %.251, label %.5.endif.endif.endif.endi...endif.if.if, label %.5.endif.endif.endif.endi...endif.if.endif

.5.endif.endif.endif.endi...endif.endif:          ; preds = %.5.endif.endif.endif.endi...endif
  %.11.off10 = add i64 %.11, -12
  %10 = icmp ult i64 %.11.off10, 5
  br i1 %10, label %.5.endif.endif.endif.endi...endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endi...endif.if.if:          ; preds = %.5.endif.endif.endif.endi...endif.if
  %.256 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.257 = bitcast i8* %.256 to %BooleanType.676540*
  %.258 = bitcast i8* %.256 to %BooleanType_vtable_ty.676541**
  store %BooleanType_vtable_ty.676541* @BooleanType_vtable_data, %BooleanType_vtable_ty.676541** %.258, align 8
  call void @BooleanType_constructor(%BooleanType.676540* %.257)
  %11 = bitcast %Type.676538** %exp_type to i8**
  store i8* %.256, i8** %11, align 8
  br label %.5.endif.endif.endif.endi...endif.if.endif

.5.endif.endif.endif.endi...endif.if.endif:       ; preds = %.5.endif.endif.endif.endi...endif.if.if, %.5.endif.endif.endif.endi...endif.if
  %.264 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.266 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.267 = load %Type.676538*, %Type.676538** %exp_type, align 8
  %.269 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.270 = bitcast i8* %.269 to %BinaryExpression.676580*
  %.271 = bitcast i8* %.269 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.271, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.270, %Expression.676558* %.264, i64 %.11, %Expression.676558* %.266, %Type.676538* %.267, i1 %.150)
  ret %BinaryExpression.676580* %.270

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5.endif.endif.endif.endi...endif.endif
  %.284 = call i1 @is_float(%Type.676538* %.188)
  br i1 %.284, label %.5.endif.endif.endif.endi...endif.endif.if.if, label %.5.endif.endif.endif.endi...endif.endif.if.endif

.5.endif.endif.endif.endi...endif.endif.if.if:    ; preds = %.5.endif.endif.endif.endi...endif.endif.if
  %.287 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.288 = bitcast i8* %.287 to %Type.676538*
  %.289 = bitcast i8* %.287 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.289, align 8
  call void @Type_constructor(%Type.676538* %.288, i64 7)
  %.292 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.144, %Type.676538* %.288)
  store %Expression.676558* %.292, %Expression.676558** %left, align 8
  br label %.5.endif.endif.endif.endi...endif.endif.if.endif

.5.endif.endif.endif.endi...endif.endif.if.endif: ; preds = %.5.endif.endif.endif.endi...endif.endif.if.if, %.5.endif.endif.endif.endi...endif.endif.if
  %.295 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.296 = getelementptr inbounds %Expression.676558, %Expression.676558* %.295, i64 0, i32 4
  %.297 = load %Type.676538*, %Type.676538** %.296, align 8
  %.298 = call i1 @is_float(%Type.676538* %.297)
  br i1 %.298, label %.5.endif.endif.endif.endi...endif.endif.if.endif.if, label %.5.endif.endif.endif.endi...endif.endif.if.endif.endif

.5.endif.endif.endif.endi...endif.endif.if.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.endif.if.endif
  %.301 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.302 = bitcast i8* %.301 to %Type.676538*
  %.303 = bitcast i8* %.301 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.303, align 8
  call void @Type_constructor(%Type.676538* %.302, i64 7)
  %.306 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.295, %Type.676538* %.302)
  store %Expression.676558* %.306, %Expression.676558** %right, align 8
  br label %.5.endif.endif.endif.endi...endif.endif.if.endif.endif

.5.endif.endif.endif.endi...endif.endif.if.endif.endif: ; preds = %.5.endif.endif.endif.endi...endif.endif.if.endif.if, %.5.endif.endif.endif.endi...endif.endif.if.endif
  %.309 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.311 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.313 = getelementptr inbounds %Expression.676558, %Expression.676558* %.309, i64 0, i32 4
  %.314 = load %Type.676538*, %Type.676538** %.313, align 8
  %.316 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.317 = bitcast i8* %.316 to %BinaryExpression.676580*
  %.318 = bitcast i8* %.316 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.318, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.317, %Expression.676558* %.309, i64 %.11, %Expression.676558* %.311, %Type.676538* %.314, i1 %.150)
  ret %BinaryExpression.676580* %.317

.5.endif.endif.endif.endi...if.1.if:              ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.else
  %.346 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.347 = bitcast i8* %.346 to %BinaryExpression.676580*
  %.348 = bitcast i8* %.346 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.348, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.347, %Expression.676558* %.144, i64 %.11, %Expression.676558* %.147, %Type.676538* %.188, i1 %.150)
  ret %BinaryExpression.676580* %.347

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %.361 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.362 = bitcast i8* %.361 to %BooleanType.676540*
  %.363 = bitcast i8* %.361 to %BooleanType_vtable_ty.676541**
  store %BooleanType_vtable_ty.676541* @BooleanType_vtable_data, %BooleanType_vtable_ty.676541** %.363, align 8
  call void @BooleanType_constructor(%BooleanType.676540* %.362)
  %.367 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.369 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.3708.cast = bitcast i8* %.361 to %Type.676538*
  %.373 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.374 = bitcast i8* %.373 to %BinaryExpression.676580*
  %.375 = bitcast i8* %.373 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.375, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.374, %Expression.676558* %.367, i64 %.11, %Expression.676558* %.369, %Type.676538* %.3708.cast, i1 %.150)
  ret %BinaryExpression.676580* %.374

.5.endif.endif.endif.endi...endif.2:              ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif
  %12 = icmp ult i64 %.11, 2
  %.387 = call i1 @is_pointer(%Type.676538* %.188)
  %.388 = and i1 %12, %.387
  %.392 = getelementptr inbounds %Type.676538, %Type.676538* %.192, i64 0, i32 1
  %.393 = load i64, i64* %.392, align 8
  %.394 = icmp eq i64 %.393, 7
  %.395 = and i1 %.388, %.394
  br i1 %.395, label %.5.endif.endif.endif.endi...endif.2.if, label %.5.endif.endif.endif.endi...endif.2.endif

.5.endif.endif.endif.endi...endif.2.if:           ; preds = %.5.endif.endif.endif.endi...endif.2
  %.403 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.404 = bitcast i8* %.403 to %BinaryExpression.676580*
  %.405 = bitcast i8* %.403 to %BinaryExpression_vtable_ty.676581**
  store %BinaryExpression_vtable_ty.676581* @BinaryExpression_vtable_data, %BinaryExpression_vtable_ty.676581** %.405, align 8
  call void @BinaryExpression_constructor(%BinaryExpression.676580* %.404, %Expression.676558* %.144, i64 %.11, %Expression.676558* %.147, %Type.676538* %.188, i1 false)
  ret %BinaryExpression.676580* %.404

.5.endif.endif.endif.endi...endif.2.endif:        ; preds = %.5.endif.endif.endif.endi...endif.2
  %.410 = icmp eq i64 %.11, 30
  %.414 = getelementptr inbounds %Type.676538, %Type.676538* %.188, i64 0, i32 1
  %.415 = load i64, i64* %.414, align 8
  %.416 = icmp eq i64 %.415, 7
  %.417 = and i1 %.410, %.416
  %.424 = and i1 %.394, %.417
  br i1 %.424, label %.5.endif.endif.endif.endi...endif.2.endif.if, label %.5.endif.endif.endif.endi...endif.2.endif.endif

.5.endif.endif.endif.endi...endif.2.endif.if:     ; preds = %.5.endif.endif.endif.endi...endif.2.endif
  %.427 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.428 = load %Program.676712*, %Program.676712** %.427, align 8
  %.429 = getelementptr inbounds %Program.676712, %Program.676712* %.428, i64 0, i32 1
  %.430 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.429, align 8
  %.431 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.430, i64 0, i32 0
  %.432 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.431, align 8
  %.433 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.432, i64 0, i32 5
  %.434 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.433, align 8
  %.435 = call %Module.676696* %.434(%"Array<Module>.676714"* %.430, i64 0)
  %.436 = getelementptr inbounds %Module.676696, %Module.676696* %.435, i64 0, i32 8
  %.437 = load %"Array<Scope>.676703"*, %"Array<Scope>.676703"** %.436, align 8
  %.438 = getelementptr inbounds %"Array<Scope>.676703", %"Array<Scope>.676703"* %.437, i64 0, i32 0
  %.439 = load %"Array<Scope>_vtable_ty.676710"*, %"Array<Scope>_vtable_ty.676710"** %.438, align 8
  %.440 = getelementptr inbounds %"Array<Scope>_vtable_ty.676710", %"Array<Scope>_vtable_ty.676710"* %.439, i64 0, i32 5
  %.441 = load %Scope.676628* (%"Array<Scope>.676703"*, i64)*, %Scope.676628* (%"Array<Scope>.676703"*, i64)** %.440, align 8
  %.442 = call %Scope.676628* %.441(%"Array<Scope>.676703"* %.437, i64 0)
  %.443 = getelementptr inbounds %Scope.676628, %Scope.676628* %.442, i64 0, i32 3
  %.444 = load %"Map<string, ClassId>.676631"*, %"Map<string, ClassId>.676631"** %.443, align 8
  %.445 = getelementptr inbounds %"Map<string, ClassId>.676631", %"Map<string, ClassId>.676631"* %.444, i64 0, i32 0
  %.446 = load %"Map<string, ClassId>_vtable_ty.676639"*, %"Map<string, ClassId>_vtable_ty.676639"** %.445, align 8
  %.447 = getelementptr inbounds %"Map<string, ClassId>_vtable_ty.676639", %"Map<string, ClassId>_vtable_ty.676639"* %.446, i64 0, i32 3
  %.448 = load %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)*, %ClassId.676554* (%"Map<string, ClassId>.676631"*, %string.676378*)** %.447, align 8
  %.449 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.450 = bitcast i8* %.449 to %string.676378*
  %.450.repack = bitcast i8* %.449 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.450.repack, align 8
  %.450.repack2 = getelementptr inbounds i8, i8* %.449, i64 8
  %13 = bitcast i8* %.450.repack2 to i8**
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.321, i64 0, i64 0), i8** %13, align 8
  %.450.repack3 = getelementptr inbounds i8, i8* %.449, i64 16
  %14 = bitcast i8* %.450.repack3 to i64*
  store i64 5, i64* %14, align 8
  %.450.repack4 = getelementptr inbounds i8, i8* %.449, i64 24
  %15 = bitcast i8* %.450.repack4 to i64*
  store i64 5, i64* %15, align 8
  %.452 = call %ClassId.676554* %.448(%"Map<string, ClassId>.676631"* %.444, %string.676378* %.450)
  %.455 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.456 = bitcast i8* %.455 to %ObjectType.676562*
  %.457 = bitcast i8* %.455 to %ObjectType_vtable_ty.676563**
  store %ObjectType_vtable_ty.676563* @ObjectType_vtable_data, %ObjectType_vtable_ty.676563** %.457, align 8
  call void @ObjectType_constructor(%ObjectType.676562* %.456, %ClassId.676554* %.452)
  %.4615.cast = bitcast i8* %.455 to %Type.676538*
  %16 = bitcast %Expression.676558** %left to i64*
  %.4636 = load i64, i64* %16, align 8
  %17 = bitcast %Expression.676558** %right to i64*
  %.4647 = load i64, i64* %17, align 8
  %.466 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %18 = bitcast i8* %.466 to i64*
  store i64 %.4636, i64* %18, align 8
  %.470 = getelementptr inbounds i8, i8* %.466, i64 8
  %19 = bitcast i8* %.470 to i64*
  store i64 %.4647, i64* %19, align 8
  %.472 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.473 = bitcast i8* %.472 to %"Array<Expression>.676574"*
  %.474 = bitcast i8* %.472 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.474, align 8
  %.476 = getelementptr inbounds i8, i8* %.472, i64 8
  %20 = bitcast i8* %.476 to i8**
  store i8* %.466, i8** %20, align 8
  %.478 = getelementptr inbounds i8, i8* %.472, i64 16
  %21 = bitcast i8* %.478 to i64*
  store i64 2, i64* %21, align 8
  %.480 = getelementptr inbounds i8, i8* %.472, i64 24
  %22 = bitcast i8* %.480 to i64*
  store i64 16, i64* %22, align 8
  %.482 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.483 = bitcast i8* %.482 to %NewExpression.676588*
  %.484 = bitcast i8* %.482 to %NewExpression_vtable_ty.676589**
  store %NewExpression_vtable_ty.676589* @NewExpression_vtable_data, %NewExpression_vtable_ty.676589** %.484, align 8
  call void @NewExpression_constructor(%NewExpression.676588* %.483, %Type.676538* %.4615.cast, %"Array<Expression>.676574"* %.473, i1 true)
  %.487 = bitcast i8* %.482 to %BinaryExpression.676580*
  ret %BinaryExpression.676580* %.487

.5.endif.endif.endif.endi...endif.2.endif.endif:  ; preds = %.5.endif.endif.endif.endi...endif.2.endif
  %.491 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.492 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.491, i64 0, i32 16
  %.493 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.492, align 8
  %.495 = call %string.676378* @dump_bin_op(i64 %.11)
  %.498 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.499 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.498, i64 0, i32 10
  %.500 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.499, align 8
  %.501 = load %Expression.676558*, %Expression.676558** %left, align 8
  %.502 = getelementptr inbounds %Expression.676558, %Expression.676558* %.501, i64 0, i32 4
  %.503 = load %Type.676538*, %Type.676538** %.502, align 8
  %.504 = call %string.676378* %.500(%TypeChecker.676716* %.1, %Type.676538* %.503)
  %.507 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.60, align 8
  %.508 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.507, i64 0, i32 10
  %.509 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.508, align 8
  %.510 = load %Expression.676558*, %Expression.676558** %right, align 8
  %.511 = getelementptr inbounds %Expression.676558, %Expression.676558* %.510, i64 0, i32 4
  %.512 = load %Type.676538*, %Type.676538** %.511, align 8
  %.513 = call %string.676378* %.509(%TypeChecker.676716* %.1, %Type.676538* %.512)
  %.514 = getelementptr inbounds %string.676378, %string.676378* %.495, i64 0, i32 0
  %.515 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.514, align 8
  %.516 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.515, i64 0, i32 11
  %.517 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.516, align 8
  %.518 = call i8* %.517(%string.676378* %.495)
  %.519 = getelementptr inbounds %string.676378, %string.676378* %.504, i64 0, i32 0
  %.520 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.519, align 8
  %.521 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.520, i64 0, i32 11
  %.522 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.521, align 8
  %.523 = call i8* %.522(%string.676378* %.504)
  %.524 = getelementptr inbounds %string.676378, %string.676378* %.513, i64 0, i32 0
  %.525 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.524, align 8
  %.526 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.525, i64 0, i32 11
  %.527 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.526, align 8
  %.528 = call i8* %.527(%string.676378* %.513)
  %.530 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.322, i64 0, i64 0), i8* %.518, i8* %.523, i8* %.528)
  %.532 = call i8* @malloc(i64 %.530)
  %.533 = call i64 (i8*, i8*, ...) @sprintf(i8* %.532, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.322, i64 0, i64 0), i8* %.518, i8* %.523, i8* %.528)
  %.534 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.535 = bitcast i8* %.534 to %string.676378*
  %.536 = bitcast i8* %.534 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.536, align 8
  %.538 = getelementptr inbounds i8, i8* %.534, i64 8
  %23 = bitcast i8* %.538 to i8**
  store i8* %.532, i8** %23, align 8
  %.540 = getelementptr inbounds i8, i8* %.534, i64 16
  %24 = bitcast i8* %.540 to i64*
  store i64 %.530, i64* %24, align 8
  %.542 = getelementptr inbounds i8, i8* %.534, i64 24
  %25 = bitcast i8* %.542 to i64*
  store i64 %.530, i64* %25, align 8
  %.545 = getelementptr inbounds %BinaryExpressionNode.676470, %BinaryExpressionNode.676470* %.3, i64 0, i32 1
  %.546 = load %FloRange.676382*, %FloRange.676382** %.545, align 8
  call void %.493(%TypeChecker.676716* %.1, i64 5, %string.676378* %.535, %FloRange.676382* %.546)
  ret %BinaryExpression.676580* null
}

define noalias %UnaryExpression.676582* @TypeChecker_check_unary_expr(%TypeChecker.676716* %.1, %Type.676538* %.2, %UnaryExpressionNode.676474* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %UnaryExpressionNode.676474, %UnaryExpressionNode.676474* %.3, i64 0, i32 4
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.15, i64 0, i32 70
  %.17 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.16, align 8
  %.20 = getelementptr inbounds %UnaryExpressionNode.676474, %UnaryExpressionNode.676474* %.3, i64 0, i32 5
  %.21 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.20, align 8
  %.22 = call %Expression.676558* %.17(%TypeChecker.676716* %.1, %Type.676538* %.2, %ExpressionNode.676442* %.21)
  %.26 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.26, i64 0, i32 17
  %.28 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.27, align 8
  %.29 = call i1 %.28(%TypeChecker.676716* %.1)
  br i1 %.29, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %UnaryExpression.676582* null

.5.endif:                                         ; preds = %.5
  %.33 = getelementptr inbounds %Expression.676558, %Expression.676558* %.22, i64 0, i32 4
  %0 = bitcast %Type.676538** %.33 to i64*
  %.341 = load i64, i64* %0, align 8
  %ty = alloca %Type.676538*, align 8
  %1 = bitcast %Type.676538** %ty to i64*
  store i64 %.341, i64* %1, align 8
  %.37 = getelementptr inbounds %Expression.676558, %Expression.676558* %.22, i64 0, i32 2
  %.38 = load i1, i1* %.37, align 1
  switch i64 %.11, label %.5.endif.endif.endif [
    i64 4, label %.5.endif.if
    i64 5, label %.5.endif.endif.if
  ]

.5.endif.if:                                      ; preds = %.5.endif
  %.43 = load %Type.676538*, %Type.676538** %ty, align 8
  %.44 = call i1 @is_numeric(%Type.676538* %.43)
  br i1 %.44, label %.5.endif.if.if, label %.5.endif.if.endif

.5.endif.if.if:                                   ; preds = %.5.endif.if
  %.50 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.51 = bitcast i8* %.50 to %UnaryExpression.676582*
  %.52 = bitcast i8* %.50 to %UnaryExpression_vtable_ty.676583**
  store %UnaryExpression_vtable_ty.676583* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.676583** %.52, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.676582* %.51, i64 %.11, %Expression.676558* %.22, %Type.676538* %.43, i1 %.38)
  ret %UnaryExpression.676582* %.51

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.58 = icmp eq i64 %.11, 5
  br i1 %.58, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif, %.5.endif.if.endif
  %.60 = load %Type.676538*, %Type.676538** %ty, align 8
  %.61 = call i1 @is_bool(%Type.676538* %.60)
  %.63 = call i1 @is_numeric(%Type.676538* %.60)
  %.64 = or i1 %.61, %.63
  br i1 %.64, label %.5.endif.endif.if.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.if, %.5.endif, %.5.endif.if.endif
  %2 = icmp ult i64 %.11, 4
  br i1 %2, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.70 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.71 = bitcast i8* %.70 to %UnaryExpression.676582*
  %.72 = bitcast i8* %.70 to %UnaryExpression_vtable_ty.676583**
  store %UnaryExpression_vtable_ty.676583* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.676583** %.72, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.676582* %.71, i64 %.11, %Expression.676558* %.22, %Type.676538* %.60, i1 %.38)
  ret %UnaryExpression.676582* %.71

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.83 = load %Type.676538*, %Type.676538** %ty, align 8
  %.84 = call i1 @is_numeric(%Type.676538* %.83)
  %.86 = call i1 @is_pointer(%Type.676538* %.83)
  %.87 = or i1 %.84, %.86
  br i1 %.87, label %.5.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.138 = icmp eq i64 %.11, 6
  br i1 %.138, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.if.if:                       ; preds = %.5.endif.endif.endif.if
  %.90 = call i1 @check_is_var(%Expression.676558* %.22)
  br i1 %.90, label %.5.endif.endif.endif.if.if.endif, label %.5.endif.endif.endif.if.if.if

.5.endif.endif.endif.if.if.if:                    ; preds = %.5.endif.endif.endif.if.if
  %.95 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.96 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.95, i64 0, i32 16
  %.97 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.96, align 8
  %.99 = call %string.676378* @dump_unary_op(i64 %.11)
  %.100 = getelementptr inbounds %string.676378, %string.676378* %.99, i64 0, i32 0
  %.101 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.100, align 8
  %.102 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.101, i64 0, i32 11
  %.103 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.102, align 8
  %.104 = call i8* %.103(%string.676378* %.99)
  %.106 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.323, i64 0, i64 0), i8* %.104)
  %.108 = call i8* @malloc(i64 %.106)
  %.109 = call i64 (i8*, i8*, ...) @sprintf(i8* %.108, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.323, i64 0, i64 0), i8* %.104)
  %.110 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.111 = bitcast i8* %.110 to %string.676378*
  %.112 = bitcast i8* %.110 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.112, align 8
  %.114 = getelementptr inbounds i8, i8* %.110, i64 8
  %3 = bitcast i8* %.114 to i8**
  store i8* %.108, i8** %3, align 8
  %.116 = getelementptr inbounds i8, i8* %.110, i64 16
  %4 = bitcast i8* %.116 to i64*
  store i64 %.106, i64* %4, align 8
  %.118 = getelementptr inbounds i8, i8* %.110, i64 24
  %5 = bitcast i8* %.118 to i64*
  store i64 %.106, i64* %5, align 8
  %.122 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.20, align 8
  %.123 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.122, i64 0, i32 1
  %.124 = load %FloRange.676382*, %FloRange.676382** %.123, align 8
  call void %.97(%TypeChecker.676716* %.1, i64 4, %string.676378* %.111, %FloRange.676382* %.124)
  ret %UnaryExpression.676582* null

.5.endif.endif.endif.if.if.endif:                 ; preds = %.5.endif.endif.endif.if.if
  %.130 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.131 = bitcast i8* %.130 to %UnaryExpression.676582*
  %.132 = bitcast i8* %.130 to %UnaryExpression_vtable_ty.676583**
  store %UnaryExpression_vtable_ty.676583* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.676583** %.132, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.676582* %.131, i64 %.11, %Expression.676558* %.22, %Type.676538* %.83, i1 false)
  ret %UnaryExpression.676582* %.131

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.141 = call i1 @check_is_var(%Expression.676558* %.22)
  br i1 %.141, label %.5.endif.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.163 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.164 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.163, i64 0, i32 16
  %.165 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.164, align 8
  %.167 = call %string.676378* @dump_unary_op(i64 %.11)
  %.170 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.171 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.170, i64 0, i32 10
  %.172 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.171, align 8
  %.173 = load %Type.676538*, %Type.676538** %ty, align 8
  %.174 = call %string.676378* %.172(%TypeChecker.676716* %.1, %Type.676538* %.173)
  %.175 = getelementptr inbounds %string.676378, %string.676378* %.167, i64 0, i32 0
  %.176 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.175, align 8
  %.177 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.176, i64 0, i32 11
  %.178 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.177, align 8
  %.179 = call i8* %.178(%string.676378* %.167)
  %.180 = getelementptr inbounds %string.676378, %string.676378* %.174, i64 0, i32 0
  %.181 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.180, align 8
  %.182 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.181, i64 0, i32 11
  %.183 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.182, align 8
  %.184 = call i8* %.183(%string.676378* %.174)
  %.186 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.324, i64 0, i64 0), i8* %.179, i8* %.184)
  %.188 = call i8* @malloc(i64 %.186)
  %.189 = call i64 (i8*, i8*, ...) @sprintf(i8* %.188, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.324, i64 0, i64 0), i8* %.179, i8* %.184)
  %.190 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.191 = bitcast i8* %.190 to %string.676378*
  %.192 = bitcast i8* %.190 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.192, align 8
  %.194 = getelementptr inbounds i8, i8* %.190, i64 8
  %6 = bitcast i8* %.194 to i8**
  store i8* %.188, i8** %6, align 8
  %.196 = getelementptr inbounds i8, i8* %.190, i64 16
  %7 = bitcast i8* %.196 to i64*
  store i64 %.186, i64* %7, align 8
  %.198 = getelementptr inbounds i8, i8* %.190, i64 24
  %8 = bitcast i8* %.198 to i64*
  store i64 %.186, i64* %8, align 8
  %.201 = getelementptr inbounds %UnaryExpressionNode.676474, %UnaryExpressionNode.676474* %.3, i64 0, i32 1
  %.202 = load %FloRange.676382*, %FloRange.676382** %.201, align 8
  call void %.165(%TypeChecker.676716* %.1, i64 5, %string.676378* %.191, %FloRange.676382* %.202)
  ret %UnaryExpression.676582* null

.5.endif.endif.endif.endif.if.if:                 ; preds = %.5.endif.endif.endif.endif.if
  %.147 = load %Type.676538*, %Type.676538** %.33, align 8
  %.148 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.149 = bitcast i8* %.148 to %PointerType.676542*
  %.150 = bitcast i8* %.148 to %PointerType_vtable_ty.676543**
  store %PointerType_vtable_ty.676543* @PointerType_vtable_data, %PointerType_vtable_ty.676543** %.150, align 8
  call void @PointerType_constructor(%PointerType.676542* %.149, %Type.676538* %.147)
  %.153 = bitcast i8* %.148 to %Type.676538*
  %.154 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.155 = bitcast i8* %.154 to %UnaryExpression.676582*
  %.156 = bitcast i8* %.154 to %UnaryExpression_vtable_ty.676583**
  store %UnaryExpression_vtable_ty.676583* @UnaryExpression_vtable_data, %UnaryExpression_vtable_ty.676583** %.156, align 8
  call void @UnaryExpression_constructor(%UnaryExpression.676582* %.155, i64 %.11, %Expression.676558* %.22, %Type.676538* %.153, i1 false)
  ret %UnaryExpression.676582* %.155
}

define noalias %TypeCastExpression.676586* @TypeChecker_check_typecast_expr(%TypeChecker.676716* %.1, %TypeCastExpressionNode.676468* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 70
  %.11 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.10, align 8
  %.12 = call %Type.676538* @Type_unknown()
  %.14 = getelementptr inbounds %TypeCastExpressionNode.676468, %TypeCastExpressionNode.676468* %.2, i64 0, i32 4
  %.15 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.14, align 8
  %.16 = call %Expression.676558* %.11(%TypeChecker.676716* %.1, %Type.676538* %.12, %ExpressionNode.676442* %.15)
  %.20 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.21 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.20, i64 0, i32 44
  %.22 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.21, align 8
  %.24 = getelementptr inbounds %TypeCastExpressionNode.676468, %TypeCastExpressionNode.676468* %.2, i64 0, i32 5
  %.25 = load %TypeNode.676426*, %TypeNode.676426** %.24, align 8
  %.26 = call %Type.676538* %.22(%TypeChecker.676716* %.1, %TypeNode.676426* %.25)
  %.30 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.31 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.30, i64 0, i32 17
  %.32 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.31, align 8
  %.33 = call i1 %.32(%TypeChecker.676716* %.1)
  br i1 %.33, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret %TypeCastExpression.676586* null

.4.endif:                                         ; preds = %.4
  %.38 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.39 = bitcast i8* %.38 to %TypeCastExpression.676586*
  %.40 = bitcast i8* %.38 to %TypeCastExpression_vtable_ty.676587**
  store %TypeCastExpression_vtable_ty.676587* @TypeCastExpression_vtable_data, %TypeCastExpression_vtable_ty.676587** %.40, align 8
  call void @TypeCastExpression_constructor(%TypeCastExpression.676586* %.39, %Expression.676558* %.16, %Type.676538* %.26)
  ret %TypeCastExpression.676586* %.39
}

define noalias %string.676378* @TypeChecker_check_constructor_call(%TypeChecker.676716* %.1, %ClassId.676554* nocapture readonly %.2, %"Array<ExpressionNode>.676454"* %.3, %"Array<Expression>.676574"** nocapture %.4) {
.6:
  %.12 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.13 = load %Program.676712*, %Program.676712** %.12, align 8
  %.15 = call %Class.676668* @get_class(%Program.676712* %.13, %ClassId.676554* %.2)
  %.18 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 4
  %.19 = load %PropId.676604*, %PropId.676604** %.18, align 8
  %0 = ptrtoint %PropId.676604* %.19 to i64
  %.22 = trunc i64 %0 to i32
  %.24 = icmp eq i32 %.22, 0
  br i1 %.24, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.676378*
  %.27.repack = bitcast i8* %.26 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.27.repack, align 8
  %.27.repack3 = getelementptr inbounds i8, i8* %.26, i64 8
  %1 = bitcast i8* %.27.repack3 to i8**
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.325, i64 0, i64 0), i8** %1, align 8
  %.27.repack4 = getelementptr inbounds i8, i8* %.26, i64 16
  %2 = bitcast i8* %.27.repack4 to i64*
  store i64 44, i64* %2, align 8
  %.27.repack5 = getelementptr inbounds i8, i8* %.26, i64 24
  %3 = bitcast i8* %.27.repack5 to i64*
  store i64 44, i64* %3, align 8
  ret %string.676378* %.27

.6.endif:                                         ; preds = %.6
  %.31 = getelementptr inbounds %PropId.676604, %PropId.676604* %.19, i64 0, i32 3
  %.32 = load i64, i64* %.31, align 8
  %.34 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 6
  %.35 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.35, i64 0, i32 0
  %.37 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.36, align 8
  %.38 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.37, i64 0, i32 5
  %.39 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.38, align 8
  %.40 = call %ClassMethod.676666* %.39(%"Array<ClassMethod>.676671"* %.35, i64 %.32)
  %.43 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.40, i64 0, i32 5
  %4 = bitcast %FunctionType.676544** %.43 to i64*
  %.441 = load i64, i64* %4, align 8
  %construct_type = alloca %FunctionType.676544*, align 8
  %5 = bitcast %FunctionType.676544** %construct_type to i64*
  store i64 %.441, i64* %5, align 8
  %.47 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.48, i64 0, i32 62
  %.50 = load %"Array<Expression>.676574"* (%TypeChecker.676716*, %FunctionType.676544*, %"Array<FunctionArg>.676658"*, %"Array<ExpressionNode>.676454"*)*, %"Array<Expression>.676574"* (%TypeChecker.676716*, %FunctionType.676544*, %"Array<FunctionArg>.676658"*, %"Array<ExpressionNode>.676454"*)** %.49, align 8
  %.51.cast = inttoptr i64 %.441 to %FunctionType.676544*
  %.53 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.40, i64 0, i32 7
  %.54 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.53, align 8
  %.56 = call %"Array<Expression>.676574"* %.50(%TypeChecker.676716* %.1, %FunctionType.676544* %.51.cast, %"Array<FunctionArg>.676658"* %.54, %"Array<ExpressionNode>.676454"* %.3)
  %checked_args = alloca %"Array<Expression>.676574"*, align 8
  store %"Array<Expression>.676574"* %.56, %"Array<Expression>.676574"** %checked_args, align 8
  %.60 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.60, i64 0, i32 17
  %.62 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.61, align 8
  %.63 = call i1 %.62(%TypeChecker.676716* %.1)
  br i1 %.63, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  ret %string.676378* null

.6.endif.endif:                                   ; preds = %.6.endif
  %.68 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.69 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.68, i64 0, i32 63
  %.70 = load i64 (%TypeChecker.676716*, %FunctionType.676544*, %"Array<Expression>.676574"*)*, i64 (%TypeChecker.676716*, %FunctionType.676544*, %"Array<Expression>.676574"*)** %.69, align 8
  %.71 = load %FunctionType.676544*, %FunctionType.676544** %construct_type, align 8
  %.73 = call i64 %.70(%TypeChecker.676716* %.1, %FunctionType.676544* %.71, %"Array<Expression>.676574"* %.56)
  %.77 = icmp sgt i64 %.73, -2
  br i1 %.77, label %.6.endif.endif.if, label %.6.endif.endif.endif

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.81 = icmp eq i64 %.73, -1
  br i1 %.81, label %.6.endif.endif.if.if, label %.6.endif.endif.if.else

.6.endif.endif.endif:                             ; preds = %.6.endif.endif
  %6 = bitcast %"Array<Expression>.676574"** %checked_args to i64*
  %.1662 = load i64, i64* %6, align 8
  %7 = bitcast %"Array<Expression>.676574"** %.4 to i64*
  store i64 %.1662, i64* %7, align 8
  ret %string.676378* null

.6.endif.endif.if.if:                             ; preds = %.6.endif.endif.if
  %.84 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.71, i64 0, i32 2
  %.85 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.84, align 8
  %.86 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.85, i64 0, i32 2
  %.87 = load i64, i64* %.86, align 8
  %.89 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.3, i64 0, i32 2
  %.90 = load i64, i64* %.89, align 8
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.326, i64 0, i64 0), i64 %.87, i64 %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.326, i64 0, i64 0), i64 %.87, i64 %.90)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.676378*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %8 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %8, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %9 = bitcast i8* %.102 to i64*
  store i64 %.92, i64* %9, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %10 = bitcast i8* %.104 to i64*
  store i64 %.92, i64* %10, align 8
  ret %string.676378* %.97

.6.endif.endif.if.else:                           ; preds = %.6.endif.endif.if
  %.109 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.109, i64 0, i32 10
  %.111 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.110, align 8
  %.114 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.71, i64 0, i32 2
  %.115 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.114, align 8
  %.116 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.115, i64 0, i32 0
  %.117 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.116, align 8
  %.118 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.117, i64 0, i32 5
  %.119 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.118, align 8
  %.120 = call %Type.676538* %.119(%"Array<Type>.676546"* %.115, i64 %.73)
  %.121 = call %string.676378* %.111(%TypeChecker.676716* %.1, %Type.676538* %.120)
  %.124 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.125 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.124, i64 0, i32 10
  %.126 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.125, align 8
  %.129 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.56, i64 0, i32 0
  %.130 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.129, align 8
  %.131 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.130, i64 0, i32 5
  %.132 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.131, align 8
  %.133 = call %Expression.676558* %.132(%"Array<Expression>.676574"* %.56, i64 %.73)
  %.134 = getelementptr inbounds %Expression.676558, %Expression.676558* %.133, i64 0, i32 4
  %.135 = load %Type.676538*, %Type.676538** %.134, align 8
  %.136 = call %string.676378* %.126(%TypeChecker.676716* %.1, %Type.676538* %.135)
  %.138 = getelementptr inbounds %string.676378, %string.676378* %.121, i64 0, i32 0
  %.139 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.138, align 8
  %.140 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.139, i64 0, i32 11
  %.141 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.140, align 8
  %.142 = call i8* %.141(%string.676378* %.121)
  %.143 = getelementptr inbounds %string.676378, %string.676378* %.136, i64 0, i32 0
  %.144 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.143, align 8
  %.145 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.144, i64 0, i32 11
  %.146 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.145, align 8
  %.147 = call i8* %.146(%string.676378* %.136)
  %.149 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.327, i64 0, i64 0), i8* %.142, i8* %.147, i64 %.73)
  %.151 = call i8* @malloc(i64 %.149)
  %.152 = call i64 (i8*, i8*, ...) @sprintf(i8* %.151, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.327, i64 0, i64 0), i8* %.142, i8* %.147, i64 %.73)
  %.153 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.154 = bitcast i8* %.153 to %string.676378*
  %.155 = bitcast i8* %.153 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.155, align 8
  %.157 = getelementptr inbounds i8, i8* %.153, i64 8
  %11 = bitcast i8* %.157 to i8**
  store i8* %.151, i8** %11, align 8
  %.159 = getelementptr inbounds i8, i8* %.153, i64 16
  %12 = bitcast i8* %.159 to i64*
  store i64 %.149, i64* %12, align 8
  %.161 = getelementptr inbounds i8, i8* %.153, i64 24
  %13 = bitcast i8* %.161 to i64*
  store i64 %.149, i64* %13, align 8
  ret %string.676378* %.154
}

define noalias %NewExpression.676588* @TypeChecker_check_new_expr(%TypeChecker.676716* %.1, %NewExpressionNode.676460* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 44
  %.11 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.10, align 8
  %.13 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.2, i64 0, i32 4
  %.14 = load %TypeNode.676426*, %TypeNode.676426** %.13, align 8
  %.15 = call %Type.676538* %.11(%TypeChecker.676716* %.1, %TypeNode.676426* %.14)
  %.20 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.22 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.24, align 8
  %.26 = getelementptr inbounds i8, i8* %.22, i64 8
  %0 = bitcast i8* %.26 to i8**
  store i8* %.20, i8** %0, align 8
  %.28 = getelementptr inbounds i8, i8* %.22, i64 16
  %1 = bitcast i8* %.28 to i64*
  store i64 0, i64* %1, align 8
  %.30 = getelementptr inbounds i8, i8* %.22, i64 24
  %2 = bitcast i8* %.30 to i64*
  store i64 8, i64* %2, align 8
  %args = alloca %"Array<Expression>.676574"*, align 8
  %3 = bitcast %"Array<Expression>.676574"** %args to i8**
  store i8* %.22, i8** %3, align 8
  %.35 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.36 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.35, i64 0, i32 17
  %.37 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.36, align 8
  %.38 = call i1 %.37(%TypeChecker.676716* %.1)
  br i1 %.38, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  ret %NewExpression.676588* null

.4.endif:                                         ; preds = %.4
  %.42 = getelementptr inbounds %Type.676538, %Type.676538* %.15, i64 0, i32 1
  %.43 = load i64, i64* %.42, align 8
  switch i64 %.43, label %.4.endif.endif [
    i64 13, label %.4.endif.if
    i64 15, label %.4.endif.else.if
  ]

.4.endif.if:                                      ; preds = %.4.endif
  %.48 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.48, i64 0, i32 54
  %.50 = load %string.676378* (%TypeChecker.676716*, %ClassId.676554*, %"Array<ExpressionNode>.676454"*, %"Array<Expression>.676574"**)*, %string.676378* (%TypeChecker.676716*, %ClassId.676554*, %"Array<ExpressionNode>.676454"*, %"Array<Expression>.676574"**)** %.49, align 8
  %.53 = getelementptr inbounds %Type.676538, %Type.676538* %.15, i64 1
  %4 = bitcast %Type.676538* %.53 to %ClassId.676554**
  %.54 = load %ClassId.676554*, %ClassId.676554** %4, align 8
  %.56 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.2, i64 0, i32 6
  %.57 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.56, align 8
  %.58 = call %string.676378* %.50(%TypeChecker.676716* %.1, %ClassId.676554* %.54, %"Array<ExpressionNode>.676454"* %.57, %"Array<Expression>.676574"** nonnull %args)
  %5 = ptrtoint %string.676378* %.58 to i64
  %.61 = trunc i64 %5 to i32
  %.63.not = icmp eq i32 %.61, 0
  br i1 %.63.not, label %.4.endif.endif, label %.4.endif.if.if

.4.endif.endif:                                   ; preds = %.4.endif, %.4.endif.else.if.endif.endif, %.4.endif.if
  %.218 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %args, align 8
  %.220 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.2, i64 0, i32 5
  %.221 = load i1, i1* %.220, align 1
  %.222 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.223 = bitcast i8* %.222 to %NewExpression.676588*
  %.224 = bitcast i8* %.222 to %NewExpression_vtable_ty.676589**
  store %NewExpression_vtable_ty.676589* @NewExpression_vtable_data, %NewExpression_vtable_ty.676589** %.224, align 8
  call void @NewExpression_constructor(%NewExpression.676588* %.223, %Type.676538* %.15, %"Array<Expression>.676574"* %.218, i1 %.221)
  ret %NewExpression.676588* %.223

.4.endif.if.if:                                   ; preds = %.4.endif.if
  %.67 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.68 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.67, i64 0, i32 16
  %.69 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.68, align 8
  %.72 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.2, i64 0, i32 1
  %.73 = load %FloRange.676382*, %FloRange.676382** %.72, align 8
  call void %.69(%TypeChecker.676716* %.1, i64 4, %string.676378* %.58, %FloRange.676382* %.73)
  ret %NewExpression.676588* null

.4.endif.else.if:                                 ; preds = %.4.endif
  %.83 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.2, i64 0, i32 6
  %.84 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.83, align 8
  %.85 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.84, i64 0, i32 2
  %.86 = load i64, i64* %.85, align 8
  %.89.not = icmp eq i64 %.86, 1
  br i1 %.89.not, label %.4.endif.else.if.endif, label %.4.endif.else.if.if

.4.endif.else.if.if:                              ; preds = %.4.endif.else.if
  %.93 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.94 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.93, i64 0, i32 16
  %.95 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.94, align 8
  %.98 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.328, i64 0, i64 0), i64 %.86)
  %.100 = call i8* @malloc(i64 %.98)
  %.101 = call i64 (i8*, i8*, ...) @sprintf(i8* %.100, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.328, i64 0, i64 0), i64 %.86)
  %.102 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.103 = bitcast i8* %.102 to %string.676378*
  %.104 = bitcast i8* %.102 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.104, align 8
  %.106 = getelementptr inbounds i8, i8* %.102, i64 8
  %6 = bitcast i8* %.106 to i8**
  store i8* %.100, i8** %6, align 8
  %.108 = getelementptr inbounds i8, i8* %.102, i64 16
  %7 = bitcast i8* %.108 to i64*
  store i64 %.98, i64* %7, align 8
  %.110 = getelementptr inbounds i8, i8* %.102, i64 24
  %8 = bitcast i8* %.110 to i64*
  store i64 %.98, i64* %8, align 8
  %.113 = getelementptr inbounds %NewExpressionNode.676460, %NewExpressionNode.676460* %.2, i64 0, i32 1
  %.114 = load %FloRange.676382*, %FloRange.676382** %.113, align 8
  call void %.95(%TypeChecker.676716* %.1, i64 4, %string.676378* %.103, %FloRange.676382* %.114)
  ret %NewExpression.676588* null

.4.endif.else.if.endif:                           ; preds = %.4.endif.else.if
  %.117 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.118 = bitcast i8* %.117 to %Type.676538*
  %.119 = bitcast i8* %.117 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.119, align 8
  call void @Type_constructor(%Type.676538* %.118, i64 7)
  %int_ty = alloca %Type.676538*, align 8
  %9 = bitcast %Type.676538** %int_ty to i8**
  store i8* %.117, i8** %9, align 8
  %.125 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.126 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.125, i64 0, i32 70
  %.127 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.126, align 8
  %.131 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.83, align 8
  %.132 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.131, i64 0, i32 0
  %.133 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.132, align 8
  %.134 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.133, i64 0, i32 5
  %.135 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.134, align 8
  %.136 = call %ExpressionNode.676442* %.135(%"Array<ExpressionNode>.676454"* %.131, i64 0)
  %.137 = call %Expression.676558* %.127(%TypeChecker.676716* %.1, %Type.676538* %.118, %ExpressionNode.676442* %.136)
  %.141 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.142 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.141, i64 0, i32 9
  %.143 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.142, align 8
  %.144 = load %Type.676538*, %Type.676538** %int_ty, align 8
  %.146 = getelementptr inbounds %Expression.676558, %Expression.676558* %.137, i64 0, i32 4
  %.147 = load %Type.676538*, %Type.676538** %.146, align 8
  %.148 = call i1 %.143(%TypeChecker.676716* %.1, %Type.676538* %.144, %Type.676538* %.147)
  br i1 %.148, label %.4.endif.else.if.endif.endif, label %.4.endif.else.if.endif.if

.4.endif.else.if.endif.if:                        ; preds = %.4.endif.else.if.endif
  %.153 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.154 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.153, i64 0, i32 16
  %.155 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.154, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.153, i64 0, i32 10
  %.160 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.159, align 8
  %.162 = call %string.676378* %.160(%TypeChecker.676716* %.1, %Type.676538* %.144)
  %.166 = getelementptr inbounds %string.676378, %string.676378* %.162, i64 0, i32 0
  %.167 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.166, align 8
  %.168 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.167, i64 0, i32 11
  %.169 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.168, align 8
  %.170 = call i8* %.169(%string.676378* %.162)
  %.171 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.172 = bitcast i8* %.171 to %string.676378*
  %.173 = bitcast i8* %.171 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.173, align 8
  call void @string_constructor(%string.676378* %.172, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.185, i64 0, i64 0), i64 5)
  %.177 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.173, align 8
  %.178 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.177, i64 0, i32 11
  %.179 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.178, align 8
  %.180 = call i8* %.179(%string.676378* %.172)
  %.182 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @str.329, i64 0, i64 0), i8* %.170, i8* %.180)
  %.184 = call i8* @malloc(i64 %.182)
  %.185 = call i64 (i8*, i8*, ...) @sprintf(i8* %.184, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @str.329, i64 0, i64 0), i8* %.170, i8* %.180)
  %.186 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.187 = bitcast i8* %.186 to %string.676378*
  %.188 = bitcast i8* %.186 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.188, align 8
  %.190 = getelementptr inbounds i8, i8* %.186, i64 8
  %10 = bitcast i8* %.190 to i8**
  store i8* %.184, i8** %10, align 8
  %.192 = getelementptr inbounds i8, i8* %.186, i64 16
  %11 = bitcast i8* %.192 to i64*
  store i64 %.182, i64* %11, align 8
  %.194 = getelementptr inbounds i8, i8* %.186, i64 24
  %12 = bitcast i8* %.194 to i64*
  store i64 %.182, i64* %12, align 8
  %.198 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.83, align 8
  %.199 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.198, i64 0, i32 0
  %.200 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.199, align 8
  %.201 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.200, i64 0, i32 5
  %.202 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.201, align 8
  %.203 = call %ExpressionNode.676442* %.202(%"Array<ExpressionNode>.676454"* %.198, i64 0)
  %.204 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.203, i64 0, i32 1
  %.205 = load %FloRange.676382*, %FloRange.676382** %.204, align 8
  call void %.155(%TypeChecker.676716* %.1, i64 4, %string.676378* %.187, %FloRange.676382* %.205)
  ret %NewExpression.676588* null

.4.endif.else.if.endif.endif:                     ; preds = %.4.endif.else.if.endif
  %.208 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %args, align 8
  %.210 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.208, i64 0, i32 0
  %.211 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.210, align 8
  %.212 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.211, i64 0, i32 2
  %.213 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.212, align 8
  call void %.213(%"Array<Expression>.676574"* %.208, %Expression.676558* %.137)
  br label %.4.endif.endif
}

define noalias %string.676378* @TypeChecker_check_member_access(%TypeChecker.676716* nocapture readonly %.1, %PropId.676604* nocapture readonly %.2) {
.4:
  %.9 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.10 = load %Program.676712*, %Program.676712** %.9, align 8
  %.12 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 2
  %0 = bitcast %TypeId.676552** %.12 to %ClassId.676554**
  %.131 = load %ClassId.676554*, %ClassId.676554** %0, align 8
  %.15 = call %Class.676668* @get_class(%Program.676712* %.10, %ClassId.676554* %.131)
  %.29 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 1
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 0
  %.34 = getelementptr inbounds %PropId.676604, %PropId.676604* %.2, i64 0, i32 3
  %.35 = load i64, i64* %.34, align 8
  br i1 %.31, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.37 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 6
  %.38 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.38, i64 0, i32 0
  %.40 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.40, i64 0, i32 5
  %.42 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.41, align 8
  %.43 = call %ClassMethod.676666* %.42(%"Array<ClassMethod>.676671"* %.38, i64 %.35)
  %.46 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.43, i64 0, i32 3
  %.50 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.43, i64 0, i32 4
  br label %.4.endif

.4.else:                                          ; preds = %.4
  %.58 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 5
  %.59 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.59, i64 0, i32 0
  %.61 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.60, align 8
  %.62 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.61, i64 0, i32 5
  %.63 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.62, align 8
  %.64 = call %ClassField.676664* %.63(%"Array<ClassField>.676670"* %.59, i64 %.35)
  %.67 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.64, i64 0, i32 3
  %.71 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.64, i64 0, i32 4
  br label %.4.endif

.4.endif:                                         ; preds = %.4.else, %.4.if
  %visibility.0.in = phi i64* [ %.46, %.4.if ], [ %.67, %.4.else ]
  %member_name.0.in = phi %string.676378** [ %.50, %.4.if ], [ %.71, %.4.else ]
  %member_name.0 = load %string.676378*, %string.676378** %member_name.0.in, align 8
  %visibility.0 = load i64, i64* %visibility.0.in, align 8
  %.76 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 3
  %1 = bitcast %ClassId.676554** %.76 to i64*
  %.772 = load i64, i64* %1, align 8
  %.78 = trunc i64 %.772 to i32
  %.80.not = icmp eq i32 %.78, 0
  br i1 %.80.not, label %.4.endif.else, label %.4.endif.if

.4.endif.if:                                      ; preds = %.4.endif
  %.84 = load %ClassId.676554*, %ClassId.676554** %.76, align 8
  %.85 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.84, i64 0, i32 1
  %.86 = load i64, i64* %.85, align 8
  %.88 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 1
  %.89 = load %ClassId.676554*, %ClassId.676554** %.88, align 8
  %.90 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.89, i64 0, i32 1
  %.91 = load i64, i64* %.90, align 8
  %.92 = icmp ne i64 %.86, %.91
  %.96 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.89, i64 0, i32 3
  %.97 = load i64, i64* %.96, align 8
  %.101 = getelementptr inbounds %ClassId.676554, %ClassId.676554* %.84, i64 0, i32 3
  %.102 = load i64, i64* %.101, align 8
  %.103 = icmp ne i64 %.97, %.102
  %.104 = or i1 %.92, %.103
  %.107 = icmp eq i64 %visibility.0, 0
  %or.cond = and i1 %.107, %.104
  br i1 %or.cond, label %.4.endif.if.if.if, label %.4.endif.endif

.4.endif.else:                                    ; preds = %.4.endif
  %.142.not = icmp eq i64 %visibility.0, 1
  br i1 %.142.not, label %.4.endif.endif, label %.4.endif.else.if

.4.endif.endif:                                   ; preds = %.4.endif.else, %.4.endif.if
  ret %string.676378* null

.4.endif.if.if.if:                                ; preds = %.4.endif.if
  %.111 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 2
  %.112 = load %string.676378*, %string.676378** %.111, align 8
  %.113 = getelementptr inbounds %string.676378, %string.676378* %member_name.0, i64 0, i32 0
  %.114 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.113, align 8
  %.115 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.114, i64 0, i32 11
  %.116 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.115, align 8
  %.117 = call i8* %.116(%string.676378* %member_name.0)
  %.118 = getelementptr inbounds %string.676378, %string.676378* %.112, i64 0, i32 0
  %.119 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.118, align 8
  %.120 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.119, i64 0, i32 11
  %.121 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.120, align 8
  %.122 = call i8* %.121(%string.676378* %.112)
  %.124 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.330, i64 0, i64 0), i8* %.117, i8* %.122)
  %.126 = call i8* @malloc(i64 %.124)
  %.127 = call i64 (i8*, i8*, ...) @sprintf(i8* %.126, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @str.330, i64 0, i64 0), i8* %.117, i8* %.122)
  %.128 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.129 = bitcast i8* %.128 to %string.676378*
  %.130 = bitcast i8* %.128 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.130, align 8
  %.132 = getelementptr inbounds i8, i8* %.128, i64 8
  %2 = bitcast i8* %.132 to i8**
  store i8* %.126, i8** %2, align 8
  %.134 = getelementptr inbounds i8, i8* %.128, i64 16
  %3 = bitcast i8* %.134 to i64*
  store i64 %.124, i64* %3, align 8
  %.136 = getelementptr inbounds i8, i8* %.128, i64 24
  %4 = bitcast i8* %.136 to i64*
  store i64 %.124, i64* %4, align 8
  ret %string.676378* %.129

.4.endif.else.if:                                 ; preds = %.4.endif.else
  %.146 = call %string.676378* @dump_access(i64 %visibility.0)
  %.148 = getelementptr inbounds %Class.676668, %Class.676668* %.15, i64 0, i32 2
  %.149 = load %string.676378*, %string.676378** %.148, align 8
  %.150 = getelementptr inbounds %string.676378, %string.676378* %member_name.0, i64 0, i32 0
  %.151 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.150, align 8
  %.152 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.151, i64 0, i32 11
  %.153 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.152, align 8
  %.154 = call i8* %.153(%string.676378* %member_name.0)
  %.155 = getelementptr inbounds %string.676378, %string.676378* %.146, i64 0, i32 0
  %.156 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.155, align 8
  %.157 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.156, i64 0, i32 11
  %.158 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.157, align 8
  %.159 = call i8* %.158(%string.676378* %.146)
  %.160 = getelementptr inbounds %string.676378, %string.676378* %.149, i64 0, i32 0
  %.161 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.160, align 8
  %.162 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.161, i64 0, i32 11
  %.163 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.162, align 8
  %.164 = call i8* %.163(%string.676378* %.149)
  %.166 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.331, i64 0, i64 0), i8* %.154, i8* %.159, i8* %.164)
  %.168 = call i8* @malloc(i64 %.166)
  %.169 = call i64 (i8*, i8*, ...) @sprintf(i8* %.168, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @str.331, i64 0, i64 0), i8* %.154, i8* %.159, i8* %.164)
  %.170 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.171 = bitcast i8* %.170 to %string.676378*
  %.172 = bitcast i8* %.170 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.172, align 8
  %.174 = getelementptr inbounds i8, i8* %.170, i64 8
  %5 = bitcast i8* %.174 to i8**
  store i8* %.168, i8** %5, align 8
  %.176 = getelementptr inbounds i8, i8* %.170, i64 16
  %6 = bitcast i8* %.176 to i64*
  store i64 %.166, i64* %6, align 8
  %.178 = getelementptr inbounds i8, i8* %.170, i64 24
  %7 = bitcast i8* %.178 to i64*
  store i64 %.166, i64* %7, align 8
  ret %string.676378* %.171
}

define %MemberExpression.676606* @TypeChecker_check_member_expr(%TypeChecker.676716* %.1, %Type.676538* nocapture readnone %.2, %MemberExpressionNode.676464* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 70
  %.13 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.12, align 8
  %.14 = call %Type.676538* @Type_unknown()
  %.16 = getelementptr inbounds %MemberExpressionNode.676464, %MemberExpressionNode.676464* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.16, align 8
  %.18 = call %Expression.676558* %.13(%TypeChecker.676716* %.1, %Type.676538* %.14, %ExpressionNode.676442* %.17)
  %.22 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.22, i64 0, i32 17
  %.24 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.23, align 8
  %.25 = call i1 %.24(%TypeChecker.676716* %.1)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  ret %MemberExpression.676606* null

.5.endif:                                         ; preds = %.5
  %.29 = getelementptr inbounds %Expression.676558, %Expression.676558* %.18, i64 0, i32 4
  %0 = bitcast %Type.676538** %.29 to i64*
  %.308 = load i64, i64* %0, align 8
  %prop_owner_type = alloca %Type.676538*, align 8
  %1 = bitcast %Type.676538** %prop_owner_type to i64*
  store i64 %.308, i64* %1, align 8
  %.33 = getelementptr inbounds %MemberExpressionNode.676464, %MemberExpressionNode.676464* %.3, i64 0, i32 5
  %.34 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.35 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.34, i64 0, i32 3
  %2 = bitcast %string.676378** %.35 to i64*
  %.3610 = load i64, i64* %2, align 8
  %prop_name = alloca %string.676378*, align 8
  %3 = bitcast %string.676378** %prop_name to i64*
  store i64 %.3610, i64* %3, align 8
  %.38 = call %Type.676538* @Type_unknown()
  %prop_ty = alloca %Type.676538*, align 8
  store %Type.676538* %.38, %Type.676538** %prop_ty, align 8
  %prop_id = alloca %PropId.676604*, align 8
  store %PropId.676604* null, %PropId.676604** %prop_id, align 8
  %.43 = load %Type.676538*, %Type.676538** %prop_owner_type, align 8
  %.44 = getelementptr inbounds %Type.676538, %Type.676538* %.43, i64 0, i32 1
  %.45 = load i64, i64* %.44, align 8
  switch i64 %.45, label %.5.endif.else.else [
    i64 13, label %.5.endif.if
    i64 18, label %.5.endif.else.if
  ]

.5.endif.if:                                      ; preds = %.5.endif
  %.49 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.50 = load %Program.676712*, %Program.676712** %.49, align 8
  %4 = bitcast %Type.676538** %prop_owner_type to %ObjectType.676562**
  %.5128 = load %ObjectType.676562*, %ObjectType.676562** %4, align 8
  %.53 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.5128, i64 0, i32 2
  %.54 = load %ClassId.676554*, %ClassId.676554** %.53, align 8
  %.55 = call %Class.676668* @get_class(%Program.676712* %.50, %ClassId.676554* %.54)
  %.58 = getelementptr inbounds %Class.676668, %Class.676668* %.55, i64 0, i32 7
  %.59 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.58, align 8
  %.60 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.59, i64 0, i32 0
  %.61 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.60, align 8
  %.62 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.61, i64 0, i32 3
  %.63 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.62, align 8
  %.64 = load %string.676378*, %string.676378** %prop_name, align 8
  %.65 = call %PropId.676604* %.63(%"Map<string, PropId>.676672"* %.59, %string.676378* %.64)
  store %PropId.676604* %.65, %PropId.676604** %prop_id, align 8
  %5 = ptrtoint %PropId.676604* %.65 to i64
  %.68 = trunc i64 %5 to i32
  %.70 = icmp eq i32 %.68, 0
  %.74 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  br i1 %.70, label %.5.endif.if.if, label %.5.endif.if.endif

.5.endif.endif:                                   ; preds = %.5.endif.else.if.if.endif.endif, %.5.endif.else.if.else.endif, %.5.endif.if.endif.endif
  %.502 = load %PropId.676604*, %PropId.676604** %prop_id, align 8
  %.503 = load %Type.676538*, %Type.676538** %prop_ty, align 8
  %.504 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.505 = bitcast i8* %.504 to %MemberExpression.676606*
  %.506 = bitcast i8* %.504 to %MemberExpression_vtable_ty.676607**
  store %MemberExpression_vtable_ty.676607* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.676607** %.506, align 8
  call void @MemberExpression_constructor(%MemberExpression.676606* %.505, %Expression.676558* %.18, %PropId.676604* %.502, %Type.676538* %.503)
  ret %MemberExpression.676606* %.505

.5.endif.if.if:                                   ; preds = %.5.endif.if
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.74, i64 0, i32 16
  %.76 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.75, align 8
  %.79 = getelementptr inbounds %Class.676668, %Class.676668* %.55, i64 0, i32 2
  %.80 = load %string.676378*, %string.676378** %.79, align 8
  %.81 = getelementptr inbounds %string.676378, %string.676378* %.64, i64 0, i32 0
  %.82 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.81, align 8
  %.83 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.82, i64 0, i32 11
  %.84 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.83, align 8
  %.85 = call i8* %.84(%string.676378* %.64)
  %.86 = getelementptr inbounds %string.676378, %string.676378* %.80, i64 0, i32 0
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 11
  %.89 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.88, align 8
  %.90 = call i8* %.89(%string.676378* %.80)
  %.92 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.332, i64 0, i64 0), i8* %.85, i8* %.90)
  %.94 = call i8* @malloc(i64 %.92)
  %.95 = call i64 (i8*, i8*, ...) @sprintf(i8* %.94, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.332, i64 0, i64 0), i8* %.85, i8* %.90)
  %.96 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.97 = bitcast i8* %.96 to %string.676378*
  %.98 = bitcast i8* %.96 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.98, align 8
  %.100 = getelementptr inbounds i8, i8* %.96, i64 8
  %6 = bitcast i8* %.100 to i8**
  store i8* %.94, i8** %6, align 8
  %.102 = getelementptr inbounds i8, i8* %.96, i64 16
  %7 = bitcast i8* %.102 to i64*
  store i64 %.92, i64* %7, align 8
  %.104 = getelementptr inbounds i8, i8* %.96, i64 24
  %8 = bitcast i8* %.104 to i64*
  store i64 %.92, i64* %8, align 8
  %.108 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.109 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.108, i64 0, i32 2
  %.110 = load %FloRange.676382*, %FloRange.676382** %.109, align 8
  call void %.76(%TypeChecker.676716* %.1, i64 1, %string.676378* %.97, %FloRange.676382* %.110)
  ret %MemberExpression.676606* null

.5.endif.if.endif:                                ; preds = %.5.endif.if
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.74, i64 0, i32 56
  %.117 = load %string.676378* (%TypeChecker.676716*, %PropId.676604*)*, %string.676378* (%TypeChecker.676716*, %PropId.676604*)** %.116, align 8
  %.119 = call %string.676378* %.117(%TypeChecker.676716* %.1, %PropId.676604* %.65)
  %9 = ptrtoint %string.676378* %.119 to i64
  %.122 = trunc i64 %9 to i32
  %.124.not = icmp eq i32 %.122, 0
  br i1 %.124.not, label %.5.endif.if.endif.endif, label %.5.endif.if.endif.if

.5.endif.if.endif.if:                             ; preds = %.5.endif.if.endif
  %.128 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.129 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.128, i64 0, i32 16
  %.130 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.129, align 8
  %.134 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.135 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.134, i64 0, i32 2
  %.136 = load %FloRange.676382*, %FloRange.676382** %.135, align 8
  call void %.130(%TypeChecker.676716* %.1, i64 4, %string.676378* %.119, %FloRange.676382* %.136)
  ret %MemberExpression.676606* null

.5.endif.if.endif.endif:                          ; preds = %.5.endif.if.endif
  %.141 = load %Program.676712*, %Program.676712** %.49, align 8
  %.143 = call %Type.676538* @get_class_prop_type(%Program.676712* %.141, %PropId.676604* %.65)
  store %Type.676538* %.143, %Type.676538** %prop_ty, align 8
  br label %.5.endif.endif

.5.endif.else.if:                                 ; preds = %.5.endif
  %.153 = getelementptr inbounds %Expression.676558, %Expression.676558* %.18, i64 1
  %10 = bitcast %Expression.676558* %.153 to i64*
  %.15427 = load i64, i64* %10, align 8
  %var_id = alloca %VarId.676596*, align 8
  %11 = bitcast %VarId.676596** %var_id to i64*
  store i64 %.15427, i64* %11, align 8
  %.156.cast = inttoptr i64 %.15427 to %VarId.676596*
  %.157 = getelementptr inbounds %VarId.676596, %VarId.676596* %.156.cast, i64 0, i32 1
  %.158 = load i64, i64* %.157, align 8
  %.159 = icmp eq i64 %.158, 3
  %.163 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  br i1 %.159, label %.5.endif.else.if.if, label %.5.endif.else.if.else

.5.endif.else.else:                               ; preds = %.5.endif
  %.335 = call i1 @is_pointer(%Type.676538* %.43)
  br i1 %.335, label %.5.endif.else.else.if, label %.5.endif.else.else.else

.5.endif.else.if.if:                              ; preds = %.5.endif.else.if
  %.164 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.163, i64 0, i32 7
  %.165 = load %Class.676668* (%TypeChecker.676716*, %VarId.676596*)*, %Class.676668* (%TypeChecker.676716*, %VarId.676596*)** %.164, align 8
  %.166 = load %VarId.676596*, %VarId.676596** %var_id, align 8
  %.167 = call %Class.676668* %.165(%TypeChecker.676716* %.1, %VarId.676596* %.166)
  %.170 = getelementptr inbounds %Class.676668, %Class.676668* %.167, i64 0, i32 8
  %.171 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.170, align 8
  %.172 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.171, i64 0, i32 0
  %.173 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.172, align 8
  %.174 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.173, i64 0, i32 3
  %.175 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.174, align 8
  %.176 = load %string.676378*, %string.676378** %prop_name, align 8
  %.177 = call %PropId.676604* %.175(%"Map<string, PropId>.676672"* %.171, %string.676378* %.176)
  store %PropId.676604* %.177, %PropId.676604** %prop_id, align 8
  %12 = ptrtoint %PropId.676604* %.177 to i64
  %.180 = trunc i64 %12 to i32
  %.182 = icmp eq i32 %.180, 0
  %.186 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  br i1 %.182, label %.5.endif.else.if.if.if, label %.5.endif.else.if.if.endif

.5.endif.else.if.else:                            ; preds = %.5.endif.else.if
  %.261 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.163, i64 0, i32 8
  %.262 = load %Enum.676682* (%TypeChecker.676716*, %VarId.676596*)*, %Enum.676682* (%TypeChecker.676716*, %VarId.676596*)** %.261, align 8
  %.263 = load %VarId.676596*, %VarId.676596** %var_id, align 8
  %.264 = call %Enum.676682* %.262(%TypeChecker.676716* %.1, %VarId.676596* %.263)
  %.267 = getelementptr inbounds %Enum.676682, %Enum.676682* %.264, i64 0, i32 4
  %.268 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.267, align 8
  %.269 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.268, i64 0, i32 0
  %.270 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.269, align 8
  %.271 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.270, i64 0, i32 3
  %.272 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.271, align 8
  %.273 = load %string.676378*, %string.676378** %prop_name, align 8
  %.274 = call %PropId.676604* %.272(%"Map<string, PropId>.676672"* %.268, %string.676378* %.273)
  store %PropId.676604* %.274, %PropId.676604** %prop_id, align 8
  %13 = ptrtoint %PropId.676604* %.274 to i64
  %.277 = trunc i64 %13 to i32
  %.279 = icmp eq i32 %.277, 0
  br i1 %.279, label %.5.endif.else.if.else.if, label %.5.endif.else.if.else.endif

.5.endif.else.if.if.if:                           ; preds = %.5.endif.else.if.if
  %.187 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.186, i64 0, i32 16
  %.188 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.187, align 8
  %.191 = getelementptr inbounds %Class.676668, %Class.676668* %.167, i64 0, i32 2
  %.192 = load %string.676378*, %string.676378** %.191, align 8
  %.193 = getelementptr inbounds %string.676378, %string.676378* %.176, i64 0, i32 0
  %.194 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.193, align 8
  %.195 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.194, i64 0, i32 11
  %.196 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.195, align 8
  %.197 = call i8* %.196(%string.676378* %.176)
  %.198 = getelementptr inbounds %string.676378, %string.676378* %.192, i64 0, i32 0
  %.199 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.198, align 8
  %.200 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.199, i64 0, i32 11
  %.201 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.200, align 8
  %.202 = call i8* %.201(%string.676378* %.192)
  %.204 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.333, i64 0, i64 0), i8* %.197, i8* %.202)
  %.206 = call i8* @malloc(i64 %.204)
  %.207 = call i64 (i8*, i8*, ...) @sprintf(i8* %.206, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.333, i64 0, i64 0), i8* %.197, i8* %.202)
  %.208 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.209 = bitcast i8* %.208 to %string.676378*
  %.210 = bitcast i8* %.208 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.210, align 8
  %.212 = getelementptr inbounds i8, i8* %.208, i64 8
  %14 = bitcast i8* %.212 to i8**
  store i8* %.206, i8** %14, align 8
  %.214 = getelementptr inbounds i8, i8* %.208, i64 16
  %15 = bitcast i8* %.214 to i64*
  store i64 %.204, i64* %15, align 8
  %.216 = getelementptr inbounds i8, i8* %.208, i64 24
  %16 = bitcast i8* %.216 to i64*
  store i64 %.204, i64* %16, align 8
  %.220 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.221 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.220, i64 0, i32 2
  %.222 = load %FloRange.676382*, %FloRange.676382** %.221, align 8
  call void %.188(%TypeChecker.676716* %.1, i64 1, %string.676378* %.209, %FloRange.676382* %.222)
  ret %MemberExpression.676606* null

.5.endif.else.if.if.endif:                        ; preds = %.5.endif.else.if.if
  %.228 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.186, i64 0, i32 56
  %.229 = load %string.676378* (%TypeChecker.676716*, %PropId.676604*)*, %string.676378* (%TypeChecker.676716*, %PropId.676604*)** %.228, align 8
  %.231 = call %string.676378* %.229(%TypeChecker.676716* %.1, %PropId.676604* %.177)
  %17 = ptrtoint %string.676378* %.231 to i64
  %.234 = trunc i64 %17 to i32
  %.236.not = icmp eq i32 %.234, 0
  br i1 %.236.not, label %.5.endif.else.if.if.endif.endif, label %.5.endif.else.if.if.endif.if

.5.endif.else.if.if.endif.if:                     ; preds = %.5.endif.else.if.if.endif
  %.240 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.241 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.240, i64 0, i32 16
  %.242 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.241, align 8
  %.246 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.247 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.246, i64 0, i32 2
  %.248 = load %FloRange.676382*, %FloRange.676382** %.247, align 8
  call void %.242(%TypeChecker.676716* %.1, i64 4, %string.676378* %.231, %FloRange.676382* %.248)
  ret %MemberExpression.676606* null

.5.endif.else.if.if.endif.endif:                  ; preds = %.5.endif.else.if.if.endif
  %.252 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.253 = load %Program.676712*, %Program.676712** %.252, align 8
  %.255 = call %Type.676538* @get_class_prop_type(%Program.676712* %.253, %PropId.676604* %.177)
  store %Type.676538* %.255, %Type.676538** %prop_ty, align 8
  br label %.5.endif.endif

.5.endif.else.if.else.if:                         ; preds = %.5.endif.else.if.else
  %.283 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.284 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.283, i64 0, i32 16
  %.285 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.284, align 8
  %.288 = getelementptr inbounds %Enum.676682, %Enum.676682* %.264, i64 0, i32 2
  %.289 = load %string.676378*, %string.676378** %.288, align 8
  %.290 = getelementptr inbounds %string.676378, %string.676378* %.273, i64 0, i32 0
  %.291 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.290, align 8
  %.292 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.291, i64 0, i32 11
  %.293 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.292, align 8
  %.294 = call i8* %.293(%string.676378* %.273)
  %.295 = getelementptr inbounds %string.676378, %string.676378* %.289, i64 0, i32 0
  %.296 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.295, align 8
  %.297 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.296, i64 0, i32 11
  %.298 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.297, align 8
  %.299 = call i8* %.298(%string.676378* %.289)
  %.301 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.334, i64 0, i64 0), i8* %.294, i8* %.299)
  %.303 = call i8* @malloc(i64 %.301)
  %.304 = call i64 (i8*, i8*, ...) @sprintf(i8* %.303, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @str.334, i64 0, i64 0), i8* %.294, i8* %.299)
  %.305 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.306 = bitcast i8* %.305 to %string.676378*
  %.307 = bitcast i8* %.305 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.307, align 8
  %.309 = getelementptr inbounds i8, i8* %.305, i64 8
  %18 = bitcast i8* %.309 to i8**
  store i8* %.303, i8** %18, align 8
  %.311 = getelementptr inbounds i8, i8* %.305, i64 16
  %19 = bitcast i8* %.311 to i64*
  store i64 %.301, i64* %19, align 8
  %.313 = getelementptr inbounds i8, i8* %.305, i64 24
  %20 = bitcast i8* %.313 to i64*
  store i64 %.301, i64* %20, align 8
  %.317 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.318 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.317, i64 0, i32 2
  %.319 = load %FloRange.676382*, %FloRange.676382** %.318, align 8
  call void %.285(%TypeChecker.676716* %.1, i64 1, %string.676378* %.306, %FloRange.676382* %.319)
  ret %MemberExpression.676606* null

.5.endif.else.if.else.endif:                      ; preds = %.5.endif.else.if.else
  %.323 = getelementptr inbounds %Enum.676682, %Enum.676682* %.264, i64 0, i32 1
  %.324 = load %EnumId.676556*, %EnumId.676556** %.323, align 8
  %.325 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.326 = bitcast i8* %.325 to %EnumType.676564*
  %.327 = bitcast i8* %.325 to %EnumType_vtable_ty.676565**
  store %EnumType_vtable_ty.676565* @EnumType_vtable_data, %EnumType_vtable_ty.676565** %.327, align 8
  call void @EnumType_constructor(%EnumType.676564* %.326, %EnumId.676556* %.324)
  %21 = bitcast %Type.676538** %prop_ty to i8**
  store i8* %.325, i8** %21, align 8
  br label %.5.endif.endif

.5.endif.else.else.if:                            ; preds = %.5.endif.else.else
  %mem_intrinsic = alloca i64, align 8
  store i64 0, i64* %mem_intrinsic, align 8
  %.338 = load %string.676378*, %string.676378** %prop_name, align 8
  %.339 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.340 = bitcast i8* %.339 to %string.676378*
  %.340.repack = bitcast i8* %.339 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.340.repack, align 8
  %.340.repack11 = getelementptr inbounds i8, i8* %.339, i64 8
  %22 = bitcast i8* %.340.repack11 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.335, i64 0, i64 0), i8** %22, align 8
  %.340.repack12 = getelementptr inbounds i8, i8* %.339, i64 16
  %23 = bitcast i8* %.340.repack12 to i64*
  store i64 9, i64* %23, align 8
  %.340.repack13 = getelementptr inbounds i8, i8* %.339, i64 24
  %24 = bitcast i8* %.340.repack13 to i64*
  store i64 9, i64* %24, align 8
  %.342 = getelementptr inbounds %string.676378, %string.676378* %.338, i64 0, i32 0
  %.343 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.342, align 8
  %.344 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.343, i64 0, i32 4
  %.345 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.344, align 8
  %.346 = call i1 %.345(%string.676378* %.338, %string.676378* %.340)
  br i1 %.346, label %.5.endif.else.else.if.if, label %.5.endif.else.else.if.else

.5.endif.else.else.else:                          ; preds = %.5.endif.else.else
  %.456 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.457 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.456, i64 0, i32 16
  %.458 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.457, align 8
  %.459 = load %string.676378*, %string.676378** %prop_name, align 8
  %.463 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.456, i64 0, i32 10
  %.464 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.463, align 8
  %.466 = call %string.676378* %.464(%TypeChecker.676716* %.1, %Type.676538* %.43)
  %.467 = getelementptr inbounds %string.676378, %string.676378* %.459, i64 0, i32 0
  %.468 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.467, align 8
  %.469 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.468, i64 0, i32 11
  %.470 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.469, align 8
  %.471 = call i8* %.470(%string.676378* %.459)
  %.472 = getelementptr inbounds %string.676378, %string.676378* %.466, i64 0, i32 0
  %.473 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.472, align 8
  %.474 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.473, i64 0, i32 11
  %.475 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.474, align 8
  %.476 = call i8* %.475(%string.676378* %.466)
  %.478 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.341, i64 0, i64 0), i8* %.471, i8* %.476)
  %.480 = call i8* @malloc(i64 %.478)
  %.481 = call i64 (i8*, i8*, ...) @sprintf(i8* %.480, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.341, i64 0, i64 0), i8* %.471, i8* %.476)
  %.482 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.483 = bitcast i8* %.482 to %string.676378*
  %.484 = bitcast i8* %.482 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.484, align 8
  %.486 = getelementptr inbounds i8, i8* %.482, i64 8
  %25 = bitcast i8* %.486 to i8**
  store i8* %.480, i8** %25, align 8
  %.488 = getelementptr inbounds i8, i8* %.482, i64 16
  %26 = bitcast i8* %.488 to i64*
  store i64 %.478, i64* %26, align 8
  %.490 = getelementptr inbounds i8, i8* %.482, i64 24
  %27 = bitcast i8* %.490 to i64*
  store i64 %.478, i64* %27, align 8
  %.494 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.16, align 8
  %.495 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.494, i64 0, i32 1
  %.496 = load %FloRange.676382*, %FloRange.676382** %.495, align 8
  call void %.458(%TypeChecker.676716* %.1, i64 4, %string.676378* %.483, %FloRange.676382* %.496)
  ret %MemberExpression.676606* null

.5.endif.else.else.if.if:                         ; preds = %.5.endif.else.else.if
  store i64 0, i64* %mem_intrinsic, align 8
  br label %.5.endif.else.else.if.endif

.5.endif.else.else.if.else:                       ; preds = %.5.endif.else.else.if
  %.351 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.352 = bitcast i8* %.351 to %string.676378*
  %.352.repack = bitcast i8* %.351 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.352.repack, align 8
  %.352.repack14 = getelementptr inbounds i8, i8* %.351, i64 8
  %28 = bitcast i8* %.352.repack14 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.336, i64 0, i64 0), i8** %28, align 8
  %.352.repack15 = getelementptr inbounds i8, i8* %.351, i64 16
  %29 = bitcast i8* %.352.repack15 to i64*
  store i64 9, i64* %29, align 8
  %.352.repack16 = getelementptr inbounds i8, i8* %.351, i64 24
  %30 = bitcast i8* %.352.repack16 to i64*
  store i64 9, i64* %30, align 8
  %.355 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.342, align 8
  %.356 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.355, i64 0, i32 4
  %.357 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.356, align 8
  %.358 = call i1 %.357(%string.676378* %.338, %string.676378* %.352)
  br i1 %.358, label %.5.endif.else.else.if.else.if, label %.5.endif.else.else.if.else.else

.5.endif.else.else.if.endif:                      ; preds = %.5.endif.else.else.if.else.else.else.if, %.5.endif.else.else.if.else.else.else.else.if, %.5.endif.else.else.if.else.else.if, %.5.endif.else.else.if.else.if, %.5.endif.else.else.if.if
  %.435 = load i64, i64* %mem_intrinsic, align 8
  %.436 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.437 = bitcast i8* %.436 to %IntrinsicCall.676594*
  %.438 = bitcast i8* %.436 to %IntrinsicCall_vtable_ty.676595**
  store %IntrinsicCall_vtable_ty.676595* @IntrinsicCall_vtable_data, %IntrinsicCall_vtable_ty.676595** %.438, align 8
  call void @IntrinsicCall_constructor(%IntrinsicCall.676594* %.437, i64 %.435)
  %intrinsic_call = alloca %IntrinsicCall.676594*, align 8
  %31 = bitcast %IntrinsicCall.676594** %intrinsic_call to i8**
  store i8* %.436, i8** %31, align 8
  %.443 = getelementptr inbounds i8, i8* %.436, i64 48
  %32 = bitcast i8* %.443 to %"Array<Expression>.676574"**
  %.444 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %32, align 8
  %.446 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.444, i64 0, i32 0
  %.447 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.446, align 8
  %.448 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.447, i64 0, i32 2
  %.449 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.448, align 8
  call void %.449(%"Array<Expression>.676574"* %.444, %Expression.676558* %.18)
  %33 = bitcast %IntrinsicCall.676594** %intrinsic_call to %MemberExpression.676606**
  %.45126 = load %MemberExpression.676606*, %MemberExpression.676606** %33, align 8
  ret %MemberExpression.676606* %.45126

.5.endif.else.else.if.else.if:                    ; preds = %.5.endif.else.else.if.else
  store i64 1, i64* %mem_intrinsic, align 8
  br label %.5.endif.else.else.if.endif

.5.endif.else.else.if.else.else:                  ; preds = %.5.endif.else.else.if.else
  %.363 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.364 = bitcast i8* %.363 to %string.676378*
  %.364.repack = bitcast i8* %.363 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.364.repack, align 8
  %.364.repack17 = getelementptr inbounds i8, i8* %.363, i64 8
  %34 = bitcast i8* %.364.repack17 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.337, i64 0, i64 0), i8** %34, align 8
  %.364.repack18 = getelementptr inbounds i8, i8* %.363, i64 16
  %35 = bitcast i8* %.364.repack18 to i64*
  store i64 9, i64* %35, align 8
  %.364.repack19 = getelementptr inbounds i8, i8* %.363, i64 24
  %36 = bitcast i8* %.364.repack19 to i64*
  store i64 9, i64* %36, align 8
  %.367 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.342, align 8
  %.368 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.367, i64 0, i32 4
  %.369 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.368, align 8
  %.370 = call i1 %.369(%string.676378* %.338, %string.676378* %.364)
  br i1 %.370, label %.5.endif.else.else.if.else.else.if, label %.5.endif.else.else.if.else.else.else

.5.endif.else.else.if.else.else.if:               ; preds = %.5.endif.else.else.if.else.else
  store i64 2, i64* %mem_intrinsic, align 8
  br label %.5.endif.else.else.if.endif

.5.endif.else.else.if.else.else.else:             ; preds = %.5.endif.else.else.if.else.else
  %.375 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.376 = bitcast i8* %.375 to %string.676378*
  %.376.repack = bitcast i8* %.375 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.376.repack, align 8
  %.376.repack20 = getelementptr inbounds i8, i8* %.375, i64 8
  %37 = bitcast i8* %.376.repack20 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.338, i64 0, i64 0), i8** %37, align 8
  %.376.repack21 = getelementptr inbounds i8, i8* %.375, i64 16
  %38 = bitcast i8* %.376.repack21 to i64*
  store i64 6, i64* %38, align 8
  %.376.repack22 = getelementptr inbounds i8, i8* %.375, i64 24
  %39 = bitcast i8* %.376.repack22 to i64*
  store i64 6, i64* %39, align 8
  %.379 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.342, align 8
  %.380 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.379, i64 0, i32 4
  %.381 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.380, align 8
  %.382 = call i1 %.381(%string.676378* %.338, %string.676378* %.376)
  br i1 %.382, label %.5.endif.else.else.if.else.else.else.if, label %.5.endif.else.else.if.else.else.else.else

.5.endif.else.else.if.else.else.else.if:          ; preds = %.5.endif.else.else.if.else.else.else
  store i64 3, i64* %mem_intrinsic, align 8
  br label %.5.endif.else.else.if.endif

.5.endif.else.else.if.else.else.else.else:        ; preds = %.5.endif.else.else.if.else.else.else
  %.387 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.388 = bitcast i8* %.387 to %string.676378*
  %.388.repack = bitcast i8* %.387 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.388.repack, align 8
  %.388.repack23 = getelementptr inbounds i8, i8* %.387, i64 8
  %40 = bitcast i8* %.388.repack23 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.339, i64 0, i64 0), i8** %40, align 8
  %.388.repack24 = getelementptr inbounds i8, i8* %.387, i64 16
  %41 = bitcast i8* %.388.repack24 to i64*
  store i64 7, i64* %41, align 8
  %.388.repack25 = getelementptr inbounds i8, i8* %.387, i64 24
  %42 = bitcast i8* %.388.repack25 to i64*
  store i64 7, i64* %42, align 8
  %.391 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.342, align 8
  %.392 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.391, i64 0, i32 4
  %.393 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.392, align 8
  %.394 = call i1 %.393(%string.676378* %.338, %string.676378* %.388)
  br i1 %.394, label %.5.endif.else.else.if.else.else.else.else.if, label %.5.endif.else.else.if.else.else.else.else.else

.5.endif.else.else.if.else.else.else.else.if:     ; preds = %.5.endif.else.else.if.else.else.else.else
  store i64 4, i64* %mem_intrinsic, align 8
  br label %.5.endif.else.else.if.endif

.5.endif.else.else.if.else.else.else.else.else:   ; preds = %.5.endif.else.else.if.else.else.else.else
  %.400 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.401 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.400, i64 0, i32 16
  %.402 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.401, align 8
  %.405 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.342, align 8
  %.406 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.405, i64 0, i32 11
  %.407 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.406, align 8
  %.408 = call i8* %.407(%string.676378* %.338)
  %.410 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.340, i64 0, i64 0), i8* %.408)
  %.412 = call i8* @malloc(i64 %.410)
  %.413 = call i64 (i8*, i8*, ...) @sprintf(i8* %.412, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.340, i64 0, i64 0), i8* %.408)
  %.414 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.415 = bitcast i8* %.414 to %string.676378*
  %.416 = bitcast i8* %.414 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.416, align 8
  %.418 = getelementptr inbounds i8, i8* %.414, i64 8
  %43 = bitcast i8* %.418 to i8**
  store i8* %.412, i8** %43, align 8
  %.420 = getelementptr inbounds i8, i8* %.414, i64 16
  %44 = bitcast i8* %.420 to i64*
  store i64 %.410, i64* %44, align 8
  %.422 = getelementptr inbounds i8, i8* %.414, i64 24
  %45 = bitcast i8* %.422 to i64*
  store i64 %.410, i64* %45, align 8
  %.426 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.33, align 8
  %.427 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.426, i64 0, i32 2
  %.428 = load %FloRange.676382*, %FloRange.676382** %.427, align 8
  call void %.402(%TypeChecker.676716* %.1, i64 1, %string.676378* %.415, %FloRange.676382* %.428)
  ret %MemberExpression.676606* null
}

define noalias %TernaryExpression.676584* @TypeChecker_check_ternary_expr(%TypeChecker.676716* %.1, %Type.676538* %.2, %TernaryExpressionNode.676472* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 71
  %.13 = load %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)** %.12, align 8
  %.15 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.3, i64 0, i32 4
  %.16 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.15, align 8
  %.17 = call %Expression.676558* %.13(%TypeChecker.676716* %.1, %ExpressionNode.676442* %.16)
  %.21 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.22 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.21, i64 0, i32 17
  %.23 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.22, align 8
  %.24 = call i1 %.23(%TypeChecker.676716* %.1)
  br i1 %.24, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif.endif, %.5.endif, %.5
  ret %TernaryExpression.676584* null

.5.endif:                                         ; preds = %.5
  %.29 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.29, i64 0, i32 70
  %.31 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.30, align 8
  %.34 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.3, i64 0, i32 5
  %.35 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.34, align 8
  %.36 = call %Expression.676558* %.31(%TypeChecker.676716* %.1, %Type.676538* %.2, %ExpressionNode.676442* %.35)
  %.40 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.41 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.40, i64 0, i32 17
  %.42 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.41, align 8
  %.43 = call i1 %.42(%TypeChecker.676716* %.1)
  br i1 %.43, label %.5.if, label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif
  %.47 = getelementptr inbounds %Expression.676558, %Expression.676558* %.36, i64 0, i32 4
  %0 = bitcast %Type.676538** %.47 to i64*
  %.481 = load i64, i64* %0, align 8
  %is_true_ty = alloca %Type.676538*, align 8
  %1 = bitcast %Type.676538** %is_true_ty to i64*
  store i64 %.481, i64* %1, align 8
  %.52 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.52, i64 0, i32 70
  %.54 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.53, align 8
  %.55.cast = inttoptr i64 %.481 to %Type.676538*
  %.57 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.3, i64 0, i32 6
  %.58 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.57, align 8
  %.59 = call %Expression.676558* %.54(%TypeChecker.676716* %.1, %Type.676538* %.55.cast, %ExpressionNode.676442* %.58)
  %.63 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.63, i64 0, i32 17
  %.65 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.64, align 8
  %.66 = call i1 %.65(%TypeChecker.676716* %.1)
  br i1 %.66, label %.5.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.70 = getelementptr inbounds %Expression.676558, %Expression.676558* %.59, i64 0, i32 4
  %2 = bitcast %Type.676538** %.70 to i64*
  %.712 = load i64, i64* %2, align 8
  %is_false_ty = alloca %Type.676538*, align 8
  %3 = bitcast %Type.676538** %is_false_ty to i64*
  store i64 %.712, i64* %3, align 8
  %.75 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.76 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.75, i64 0, i32 9
  %.77 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.76, align 8
  %.78 = load %Type.676538*, %Type.676538** %is_true_ty, align 8
  %.79.cast = inttoptr i64 %.712 to %Type.676538*
  %.80 = call i1 %.77(%TypeChecker.676716* %.1, %Type.676538* %.78, %Type.676538* %.79.cast)
  br i1 %.80, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.85 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.85, i64 0, i32 16
  %.87 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.86, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.85, i64 0, i32 10
  %.92 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.91, align 8
  %.94 = call %string.676378* %.92(%TypeChecker.676716* %.1, %Type.676538* %.78)
  %.97 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.97, i64 0, i32 10
  %.99 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.98, align 8
  %.100 = load %Type.676538*, %Type.676538** %is_false_ty, align 8
  %.101 = call %string.676378* %.99(%TypeChecker.676716* %.1, %Type.676538* %.100)
  %.102 = getelementptr inbounds %string.676378, %string.676378* %.94, i64 0, i32 0
  %.103 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.102, align 8
  %.104 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.103, i64 0, i32 11
  %.105 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.104, align 8
  %.106 = call i8* %.105(%string.676378* %.94)
  %.107 = getelementptr inbounds %string.676378, %string.676378* %.101, i64 0, i32 0
  %.108 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.107, align 8
  %.109 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.108, i64 0, i32 11
  %.110 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.109, align 8
  %.111 = call i8* %.110(%string.676378* %.101)
  %.113 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.342, i64 0, i64 0), i8* %.106, i8* %.111)
  %.115 = call i8* @malloc(i64 %.113)
  %.116 = call i64 (i8*, i8*, ...) @sprintf(i8* %.115, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.342, i64 0, i64 0), i8* %.106, i8* %.111)
  %.117 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.118 = bitcast i8* %.117 to %string.676378*
  %.119 = bitcast i8* %.117 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.119, align 8
  %.121 = getelementptr inbounds i8, i8* %.117, i64 8
  %4 = bitcast i8* %.121 to i8**
  store i8* %.115, i8** %4, align 8
  %.123 = getelementptr inbounds i8, i8* %.117, i64 16
  %5 = bitcast i8* %.123 to i64*
  store i64 %.113, i64* %5, align 8
  %.125 = getelementptr inbounds i8, i8* %.117, i64 24
  %6 = bitcast i8* %.125 to i64*
  store i64 %.113, i64* %6, align 8
  %.128 = getelementptr inbounds %TernaryExpressionNode.676472, %TernaryExpressionNode.676472* %.3, i64 0, i32 1
  %.129 = load %FloRange.676382*, %FloRange.676382** %.128, align 8
  call void %.87(%TypeChecker.676716* %.1, i64 5, %string.676378* %.118, %FloRange.676382* %.129)
  ret %TernaryExpression.676584* null

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.135 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.136 = bitcast i8* %.135 to %TernaryExpression.676584*
  %.137 = bitcast i8* %.135 to %TernaryExpression_vtable_ty.676585**
  store %TernaryExpression_vtable_ty.676585* @TernaryExpression_vtable_data, %TernaryExpression_vtable_ty.676585** %.137, align 8
  call void @TernaryExpression_constructor(%TernaryExpression.676584* %.136, %Expression.676558* %.17, %Expression.676558* %.36, %Expression.676558* %.59)
  ret %TernaryExpression.676584* %.136
}

define noalias %Expression.676558* @TypeChecker_check_object_index_expr(%TypeChecker.676716* %.1, %Expression.676558* %.2, %ExpressionIndexNode.676462* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 4
  %0 = bitcast %Type.676538** %.10 to %ObjectType.676562**
  %.111 = load %ObjectType.676562*, %ObjectType.676562** %0, align 8
  %.15 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.16 = load %Program.676712*, %Program.676712** %.15, align 8
  %.18 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.111, i64 0, i32 2
  %.19 = load %ClassId.676554*, %ClassId.676554** %.18, align 8
  %.20 = call %Class.676668* @get_class(%Program.676712* %.16, %ClassId.676554* %.19)
  %.23 = getelementptr inbounds %Class.676668, %Class.676668* %.20, i64 0, i32 7
  %.24 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.23, align 8
  %.25 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.24, i64 0, i32 0
  %.26 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.25, align 8
  %.27 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.26, i64 0, i32 3
  %.28 = load %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)*, %PropId.676604* (%"Map<string, PropId>.676672"*, %string.676378*)** %.27, align 8
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack2 = getelementptr inbounds i8, i8* %.29, i64 8
  %1 = bitcast i8* %.30.repack2 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.247, i64 0, i64 0), i8** %1, align 8
  %.30.repack3 = getelementptr inbounds i8, i8* %.29, i64 16
  %2 = bitcast i8* %.30.repack3 to i64*
  store i64 11, i64* %2, align 8
  %.30.repack4 = getelementptr inbounds i8, i8* %.29, i64 24
  %3 = bitcast i8* %.30.repack4 to i64*
  store i64 11, i64* %3, align 8
  %.32 = call %PropId.676604* %.28(%"Map<string, PropId>.676672"* %.24, %string.676378* %.30)
  %4 = ptrtoint %PropId.676604* %.32 to i64
  %.35 = trunc i64 %4 to i32
  %.37 = icmp eq i32 %.35, 0
  br i1 %.37, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.40 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.41 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.40, align 8
  %.42 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.41, i64 0, i32 16
  %.43 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.42, align 8
  %.45 = getelementptr inbounds %Class.676668, %Class.676668* %.20, i64 0, i32 2
  %.46 = load %string.676378*, %string.676378** %.45, align 8
  %.47 = getelementptr inbounds %string.676378, %string.676378* %.46, i64 0, i32 0
  %.48 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.48, i64 0, i32 11
  %.50 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.49, align 8
  %.51 = call i8* %.50(%string.676378* %.46)
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @str.343, i64 0, i64 0), i8* %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @str.343, i64 0, i64 0), i8* %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %5 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %5, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %6 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %6, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %7 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %7, align 8
  %.68 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.3, i64 0, i32 1
  %.69 = load %FloRange.676382*, %FloRange.676382** %.68, align 8
  call void %.43(%TypeChecker.676716* %.1, i64 4, %string.676378* %.58, %FloRange.676382* %.69)
  ret %Expression.676558* null

.5.endif:                                         ; preds = %.5
  %.74 = load %Program.676712*, %Program.676712** %.15, align 8
  %.76 = call %Type.676538* @get_class_prop_type(%Program.676712* %.74, %PropId.676604* %.32)
  %method_type = alloca %FunctionType.676544*, align 8
  %8 = bitcast %FunctionType.676544** %method_type to %Type.676538**
  store %Type.676538* %.76, %Type.676538** %8, align 8
  %.80 = getelementptr inbounds %Type.676538, %Type.676538* %.76, i64 1
  %9 = bitcast %Type.676538* %.80 to %"Array<Type>.676546"**
  %.81 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %9, align 8
  %.82 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.81, i64 0, i32 0
  %.83 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.82, align 8
  %.84 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.83, i64 0, i32 5
  %.85 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.84, align 8
  %.86 = call %Type.676538* %.85(%"Array<Type>.676546"* %.81, i64 0)
  %.89 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.90 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.89, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.90, i64 0, i32 70
  %.92 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.91, align 8
  %.95 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.3, i64 0, i32 5
  %.96 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.95, align 8
  %.97 = call %Expression.676558* %.92(%TypeChecker.676716* %.1, %Type.676538* %.86, %ExpressionNode.676442* %.96)
  %index = alloca %Expression.676558*, align 8
  store %Expression.676558* %.97, %Expression.676558** %index, align 8
  %.101 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.89, align 8
  %.102 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.101, i64 0, i32 9
  %.103 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.102, align 8
  %.106 = getelementptr inbounds %Expression.676558, %Expression.676558* %.97, i64 0, i32 4
  %.107 = load %Type.676538*, %Type.676538** %.106, align 8
  %.108 = call i1 %.103(%TypeChecker.676716* %.1, %Type.676538* %.86, %Type.676538* %.107)
  br i1 %.108, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.113 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.89, align 8
  %.114 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.113, i64 0, i32 16
  %.115 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.114, align 8
  %.119 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.113, i64 0, i32 10
  %.120 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.119, align 8
  %.122 = call %string.676378* %.120(%TypeChecker.676716* %.1, %Type.676538* %.86)
  %.125 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.89, align 8
  %.126 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.125, i64 0, i32 10
  %.127 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.126, align 8
  %.130 = load %Type.676538*, %Type.676538** %.106, align 8
  %.131 = call %string.676378* %.127(%TypeChecker.676716* %.1, %Type.676538* %.130)
  %.132 = getelementptr inbounds %string.676378, %string.676378* %.122, i64 0, i32 0
  %.133 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.132, align 8
  %.134 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.133, i64 0, i32 11
  %.135 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.134, align 8
  %.136 = call i8* %.135(%string.676378* %.122)
  %.137 = getelementptr inbounds %string.676378, %string.676378* %.131, i64 0, i32 0
  %.138 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.137, align 8
  %.139 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.138, i64 0, i32 11
  %.140 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.139, align 8
  %.141 = call i8* %.140(%string.676378* %.131)
  %.143 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.136, i8* %.141)
  %.145 = call i8* @malloc(i64 %.143)
  %.146 = call i64 (i8*, i8*, ...) @sprintf(i8* %.145, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.317, i64 0, i64 0), i8* %.136, i8* %.141)
  %.147 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.148 = bitcast i8* %.147 to %string.676378*
  %.149 = bitcast i8* %.147 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.149, align 8
  %.151 = getelementptr inbounds i8, i8* %.147, i64 8
  %10 = bitcast i8* %.151 to i8**
  store i8* %.145, i8** %10, align 8
  %.153 = getelementptr inbounds i8, i8* %.147, i64 16
  %11 = bitcast i8* %.153 to i64*
  store i64 %.143, i64* %11, align 8
  %.155 = getelementptr inbounds i8, i8* %.147, i64 24
  %12 = bitcast i8* %.155 to i64*
  store i64 %.143, i64* %12, align 8
  %.159 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.95, align 8
  %.160 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.159, i64 0, i32 1
  %.161 = load %FloRange.676382*, %FloRange.676382** %.160, align 8
  call void %.115(%TypeChecker.676716* %.1, i64 5, %string.676378* %.148, %FloRange.676382* %.161)
  ret %Expression.676558* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.168 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.169 = bitcast i8* %.168 to %MemberExpression.676606*
  %.170 = bitcast i8* %.168 to %MemberExpression_vtable_ty.676607**
  store %MemberExpression_vtable_ty.676607* @MemberExpression_vtable_data, %MemberExpression_vtable_ty.676607** %.170, align 8
  call void @MemberExpression_constructor(%MemberExpression.676606* %.169, %Expression.676558* %.2, %PropId.676604* %.32, %Type.676538* %.76)
  %member_expr = alloca %MemberExpression.676606*, align 8
  %13 = bitcast %MemberExpression.676606** %member_expr to i8**
  store i8* %.168, i8** %13, align 8
  %14 = bitcast %Expression.676558** %index to i64*
  %.1746 = load i64, i64* %14, align 8
  %.176 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %15 = bitcast i8* %.176 to i64*
  store i64 %.1746, i64* %15, align 8
  %.180 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.182 = bitcast i8* %.180 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.182, align 8
  %.184 = getelementptr inbounds i8, i8* %.180, i64 8
  %16 = bitcast i8* %.184 to i8**
  store i8* %.176, i8** %16, align 8
  %.186 = getelementptr inbounds i8, i8* %.180, i64 16
  %17 = bitcast i8* %.186 to i64*
  store i64 1, i64* %17, align 8
  %.188 = getelementptr inbounds i8, i8* %.180, i64 24
  %18 = bitcast i8* %.188 to i64*
  store i64 8, i64* %18, align 8
  %19 = bitcast %MemberExpression.676606** %member_expr to %Expression.676558**
  %.1917 = load %Expression.676558*, %Expression.676558** %19, align 8
  %.193.cast = bitcast i8* %.180 to %"Array<Expression>.676574"*
  %.194 = load %FunctionType.676544*, %FunctionType.676544** %method_type, align 8
  %.195 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.194, i64 0, i32 3
  %.196 = load %Type.676538*, %Type.676538** %.195, align 8
  %.197 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.198 = bitcast i8* %.197 to %CallExpression.676592*
  %.199 = bitcast i8* %.197 to %CallExpression_vtable_ty.676593**
  store %CallExpression_vtable_ty.676593* @CallExpression_vtable_data, %CallExpression_vtable_ty.676593** %.199, align 8
  call void @CallExpression_constructor(%CallExpression.676592* %.198, %Expression.676558* %.1917, %"Array<Expression>.676574"* %.193.cast, %Type.676538* %.196)
  %.202 = bitcast i8* %.197 to %Expression.676558*
  ret %Expression.676558* %.202
}

define %IndexExpression.676590* @TypeChecker_check_index_expr(%TypeChecker.676716* %.1, %Type.676538* nocapture readnone %.2, %ExpressionIndexNode.676462* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 70
  %.13 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.12, align 8
  %.14 = call %Type.676538* @Type_unknown()
  %.16 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.16, align 8
  %.18 = call %Expression.676558* %.13(%TypeChecker.676716* %.1, %Type.676538* %.14, %ExpressionNode.676442* %.17)
  %.21 = getelementptr inbounds %Expression.676558, %Expression.676558* %.18, i64 0, i32 4
  %.22 = load %Type.676538*, %Type.676538** %.21, align 8
  %.23 = call i1 @is_object(%Type.676538* %.22)
  %.27 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  br i1 %.23, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.28 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.27, i64 0, i32 59
  %.29 = load %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %ExpressionIndexNode.676462*)*, %Expression.676558* (%TypeChecker.676716*, %Expression.676558*, %ExpressionIndexNode.676462*)** %.28, align 8
  %.32 = call %Expression.676558* %.29(%TypeChecker.676716* %.1, %Expression.676558* %.18, %ExpressionIndexNode.676462* %.3)
  %.33 = bitcast %Expression.676558* %.32 to %IndexExpression.676590*
  ret %IndexExpression.676590* %.33

.5.endif:                                         ; preds = %.5
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.27, i64 0, i32 70
  %.39 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.38, align 8
  %.40 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.41 = bitcast i8* %.40 to %Type.676538*
  %.42 = bitcast i8* %.40 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.42, align 8
  call void @Type_constructor(%Type.676538* %.41, i64 7)
  %.46 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.3, i64 0, i32 5
  %.47 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.46, align 8
  %.48 = call %Expression.676558* %.39(%TypeChecker.676716* %.1, %Type.676538* %.41, %ExpressionNode.676442* %.47)
  %.52 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.52, i64 0, i32 17
  %.54 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.53, align 8
  %.55 = call i1 %.54(%TypeChecker.676716* %.1)
  br i1 %.55, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  ret %IndexExpression.676590* null

.5.endif.endif:                                   ; preds = %.5.endif
  %.59 = getelementptr inbounds %Expression.676558, %Expression.676558* %.48, i64 0, i32 4
  %.60 = load %Type.676538*, %Type.676538** %.59, align 8
  %.61 = call i1 @is_int(%Type.676538* %.60)
  br i1 %.61, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.66 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.67 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.66, i64 0, i32 16
  %.68 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.67, align 8
  %.69 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.70 = bitcast i8* %.69 to %string.676378*
  %.70.repack = bitcast i8* %.69 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.70.repack, align 8
  %.70.repack6 = getelementptr inbounds i8, i8* %.69, i64 8
  %0 = bitcast i8* %.70.repack6 to i8**
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.344, i64 0, i64 0), i8** %0, align 8
  %.70.repack7 = getelementptr inbounds i8, i8* %.69, i64 16
  %1 = bitcast i8* %.70.repack7 to i64*
  store i64 34, i64* %1, align 8
  %.70.repack8 = getelementptr inbounds i8, i8* %.69, i64 24
  %2 = bitcast i8* %.70.repack8 to i64*
  store i64 34, i64* %2, align 8
  %.74 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.46, align 8
  %.75 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.74, i64 0, i32 1
  %.76 = load %FloRange.676382*, %FloRange.676382** %.75, align 8
  call void %.68(%TypeChecker.676716* %.1, i64 5, %string.676378* %.70, %FloRange.676382* %.76)
  ret %IndexExpression.676590* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.79 = call %Type.676538* @Type_unknown()
  %value_type = alloca %Type.676538*, align 8
  store %Type.676538* %.79, %Type.676538** %value_type, align 8
  %3 = bitcast %Type.676538** %.21 to i64*
  %.831 = load i64, i64* %3, align 8
  %root_type = alloca %Type.676538*, align 8
  %4 = bitcast %Type.676538** %root_type to i64*
  store i64 %.831, i64* %4, align 8
  %.85.cast = inttoptr i64 %.831 to %Type.676538*
  %.86 = getelementptr inbounds %Type.676538, %Type.676538* %.85.cast, i64 0, i32 1
  %.87 = load i64, i64* %.86, align 8
  %.88 = icmp eq i64 %.87, 15
  br i1 %.88, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.else

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %5 = bitcast %Type.676538** %root_type to %PointerType.676542**
  %.904 = load %PointerType.676542*, %PointerType.676542** %5, align 8
  %.92 = getelementptr inbounds %PointerType.676542, %PointerType.676542* %.904, i64 0, i32 2
  %6 = bitcast %Type.676538** %.92 to i64*
  %.935 = load i64, i64* %6, align 8
  %7 = bitcast %Type.676538** %value_type to i64*
  store i64 %.935, i64* %7, align 8
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.else:                        ; preds = %.5.endif.endif.endif
  %.96 = load %Type.676538*, %Type.676538** %root_type, align 8
  %.97 = getelementptr inbounds %Type.676538, %Type.676538* %.96, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 16
  br i1 %.99, label %.5.endif.endif.endif.else.if, label %.5.endif.endif.endif.else.else

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.else.if, %.5.endif.endif.endif.if
  %.147 = load %Type.676538*, %Type.676538** %value_type, align 8
  %.148 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.149 = bitcast i8* %.148 to %IndexExpression.676590*
  %.150 = bitcast i8* %.148 to %IndexExpression_vtable_ty.676591**
  store %IndexExpression_vtable_ty.676591* @IndexExpression_vtable_data, %IndexExpression_vtable_ty.676591** %.150, align 8
  call void @IndexExpression_constructor(%IndexExpression.676590* %.149, %Expression.676558* %.18, %Expression.676558* %.48, %Type.676538* %.147)
  ret %IndexExpression.676590* %.149

.5.endif.endif.endif.else.if:                     ; preds = %.5.endif.endif.endif.else
  %8 = bitcast %Type.676538** %root_type to %ArrayType.676560**
  %.1012 = load %ArrayType.676560*, %ArrayType.676560** %8, align 8
  %.103 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.1012, i64 0, i32 2
  %9 = bitcast %Type.676538** %.103 to i64*
  %.1043 = load i64, i64* %9, align 8
  %10 = bitcast %Type.676538** %value_type to i64*
  store i64 %.1043, i64* %10, align 8
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.else.else:                   ; preds = %.5.endif.endif.endif.else
  %.109 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.110 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.109, i64 0, i32 16
  %.111 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.110, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.109, i64 0, i32 10
  %.116 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.115, align 8
  %.118 = call %string.676378* %.116(%TypeChecker.676716* %.1, %Type.676538* %.96)
  %.119 = getelementptr inbounds %string.676378, %string.676378* %.118, i64 0, i32 0
  %.120 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.119, align 8
  %.121 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.120, i64 0, i32 11
  %.122 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.121, align 8
  %.123 = call i8* %.122(%string.676378* %.118)
  %.125 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.345, i64 0, i64 0), i8* %.123)
  %.127 = call i8* @malloc(i64 %.125)
  %.128 = call i64 (i8*, i8*, ...) @sprintf(i8* %.127, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.345, i64 0, i64 0), i8* %.123)
  %.129 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.130 = bitcast i8* %.129 to %string.676378*
  %.131 = bitcast i8* %.129 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.131, align 8
  %.133 = getelementptr inbounds i8, i8* %.129, i64 8
  %11 = bitcast i8* %.133 to i8**
  store i8* %.127, i8** %11, align 8
  %.135 = getelementptr inbounds i8, i8* %.129, i64 16
  %12 = bitcast i8* %.135 to i64*
  store i64 %.125, i64* %12, align 8
  %.137 = getelementptr inbounds i8, i8* %.129, i64 24
  %13 = bitcast i8* %.137 to i64*
  store i64 %.125, i64* %13, align 8
  %.140 = getelementptr inbounds %ExpressionIndexNode.676462, %ExpressionIndexNode.676462* %.3, i64 0, i32 1
  %.141 = load %FloRange.676382*, %FloRange.676382** %.140, align 8
  call void %.111(%TypeChecker.676716* %.1, i64 5, %string.676378* %.130, %FloRange.676382* %.141)
  ret %IndexExpression.676590* null
}

define %"Array<FunctionArg>.676658"* @TypeChecker_get_func_args_from_expression(%TypeChecker.676716* nocapture readonly %.1, %Expression.676558* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 0, i32 3
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif [
    i64 7, label %.4.if
    i64 12, label %.4.else.if
  ]

.4.if:                                            ; preds = %.4
  %.14 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1
  %0 = bitcast %Expression.676558* %.14 to i64*
  %.153 = load i64, i64* %0, align 8
  %var_id = alloca %VarId.676596*, align 8
  %1 = bitcast %VarId.676596** %var_id to i64*
  store i64 %.153, i64* %1, align 8
  %.17.cast = inttoptr i64 %.153 to %VarId.676596*
  %.18 = getelementptr inbounds %VarId.676596, %VarId.676596* %.17.cast, i64 0, i32 1
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.19, 0
  br i1 %.20, label %.4.if.if, label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  ret %"Array<FunctionArg>.676658"* null

.4.if.if:                                         ; preds = %.4.if
  %.23 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.24 = load %Program.676712*, %Program.676712** %.23, align 8
  %.25 = load %VarId.676596*, %VarId.676596** %var_id, align 8
  %.26 = call %Function.676656* @get_func(%Program.676712* %.24, %VarId.676596* %.25)
  %.27 = getelementptr inbounds %Function.676656, %Function.676656* %.26, i64 0, i32 3
  %.28 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.27, align 8
  ret %"Array<FunctionArg>.676658"* %.28

.4.else.if:                                       ; preds = %.4
  %.38 = getelementptr inbounds %Expression.676558, %Expression.676558* %.2, i64 1, i32 1
  %2 = bitcast i64* %.38 to %PropId.676604**
  %.3912 = load %PropId.676604*, %PropId.676604** %2, align 8
  %.42 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 1
  %.43 = load %Program.676712*, %Program.676712** %.42, align 8
  %.45 = call %ClassMethod.676666* @get_method(%Program.676712* %.43, %PropId.676604* %.3912)
  %.46 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.45, i64 0, i32 7
  %.47 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.46, align 8
  ret %"Array<FunctionArg>.676658"* %.47
}

define %"Array<Expression>.676574"* @TypeChecker_fill_in_call_args(%TypeChecker.676716* %.1, %FunctionType.676544* nocapture readonly %.2, %"Array<FunctionArg>.676658"* %.3, %"Array<ExpressionNode>.676454"* %.4) {
.6:
  %.12 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.14 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Array<Expression>.676574"*
  %.16 = bitcast i8* %.14 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.16, align 8
  %.18 = getelementptr inbounds i8, i8* %.14, i64 8
  %0 = bitcast i8* %.18 to i8**
  store i8* %.12, i8** %0, align 8
  %.20 = getelementptr inbounds i8, i8* %.14, i64 16
  %1 = bitcast i8* %.20 to i64*
  store i64 0, i64* %1, align 8
  %.22 = getelementptr inbounds i8, i8* %.14, i64 24
  %2 = bitcast i8* %.22 to i64*
  store i64 8, i64* %2, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.4, i64 0, i32 2
  %.3111 = load i64, i64* %.30, align 8
  %.3212 = icmp sgt i64 %.3111, 0
  br i1 %.3212, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.35 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.2, i64 0, i32 2
  %.58 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.65 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.4, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %end
  %storemerge13 = phi i64 [ 0, %for.body.lr.ph ], [ %.80, %end ]
  %.36 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.36, i64 0, i32 2
  %.38 = load i64, i64* %.37, align 8
  %.40 = icmp sgt i64 %.38, %storemerge13
  br i1 %.40, label %true_block, label %false_block

for.end:                                          ; preds = %end, %.6
  %.84 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.85 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.84, align 8
  %.86 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.85, i64 0, i32 17
  %.87 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.86, align 8
  %.88 = call i1 %.87(%TypeChecker.676716* %.1)
  %3 = ptrtoint %"Array<FunctionArg>.676658"* %.3 to i64
  %.90 = trunc i64 %3 to i32
  %.92 = icmp eq i32 %.90, 0
  %.93 = or i1 %.92, %.88
  br i1 %.93, label %for.end.if, label %for.end.endif

true_block:                                       ; preds = %for.body
  %.46 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.36, i64 0, i32 0
  %.47 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.47, i64 0, i32 5
  %.49 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.48, align 8
  %.50 = call %Type.676538* %.49(%"Array<Type>.676546"* %.36, i64 %storemerge13)
  br label %end

false_block:                                      ; preds = %for.body
  %.52 = call %Type.676538* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.54 = phi %Type.676538* [ %.50, %true_block ], [ %.52, %false_block ]
  %.59 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.58, align 8
  %.60 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.59, i64 0, i32 70
  %.61 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.60, align 8
  %.66 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.65, align 8
  %.67 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.66, i64 0, i32 5
  %.68 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.67, align 8
  %.69 = call %ExpressionNode.676442* %.68(%"Array<ExpressionNode>.676454"* %.4, i64 %storemerge13)
  %.70 = call %Expression.676558* %.61(%TypeChecker.676716* %.1, %Type.676538* %.54, %ExpressionNode.676442* %.69)
  %.72 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.16, align 8
  %.73 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.72, i64 0, i32 2
  %.74 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.73, align 8
  call void %.74(%"Array<Expression>.676574"* %.15, %Expression.676558* %.70)
  %.80 = add nuw nsw i64 %storemerge13, 1
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.80, %.31
  br i1 %.32, label %for.body, label %for.end

for.end.if:                                       ; preds = %for.body.1.endif, %for.cond.1.preheader, %for.end.endif, %for.end
  ret %"Array<Expression>.676574"* %.15

for.end.endif:                                    ; preds = %for.end
  %.98 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.3, i64 0, i32 2
  %.99 = load i64, i64* %.98, align 8
  %.102 = load i64, i64* %.30, align 8
  %.103 = icmp sgt i64 %.99, %.102
  br i1 %.103, label %for.cond.1.preheader, label %for.end.if

for.cond.1.preheader:                             ; preds = %for.end.endif
  %.1148 = load i64, i64* %.98, align 8
  %.1159 = icmp slt i64 %.102, %.1148
  br i1 %.1159, label %for.body.1.lr.ph, label %for.end.if

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.119 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.3, i64 0, i32 0
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1.endif
  %storemerge110 = phi i64 [ %.102, %for.body.1.lr.ph ], [ %.146, %for.body.1.endif ]
  %.120 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.119, align 8
  %.121 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.120, i64 0, i32 5
  %.122 = load %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)** %.121, align 8
  %.123 = call %FunctionArg.676654* %.122(%"Array<FunctionArg>.676658"* %.3, i64 %storemerge110)
  %.126 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.123, i64 0, i32 7
  %4 = bitcast %Expression.676558** %.126 to i64*
  %.1272 = load i64, i64* %4, align 8
  %.128 = trunc i64 %.1272 to i32
  %.130.not = icmp eq i32 %.128, 0
  br i1 %.130.not, label %for.body.1.endif, label %for.body.1.if

for.body.1.if:                                    ; preds = %for.body.1
  %.135 = load %Expression.676558*, %Expression.676558** %.126, align 8
  %.137 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.16, align 8
  %.138 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.137, i64 0, i32 2
  %.139 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.138, align 8
  call void %.139(%"Array<Expression>.676574"* %.15, %Expression.676558* %.135)
  br label %for.body.1.endif

for.body.1.endif:                                 ; preds = %for.body.1, %for.body.1.if
  %.146 = add nsw i64 %storemerge110, 1
  %.114 = load i64, i64* %.98, align 8
  %.115 = icmp slt i64 %.146, %.114
  br i1 %.115, label %for.body.1, label %for.end.if
}

define i64 @TypeChecker_check_function_call_args_match(%TypeChecker.676716* %.1, %FunctionType.676544* nocapture readonly %.2, %"Array<Expression>.676574"* %.3) {
.5:
  %.10 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.2, i64 0, i32 2
  %.11 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.15 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.3, i64 0, i32 2
  %.16 = load i64, i64* %.15, align 8
  %.17.not = icmp eq i64 %.13, %.16
  br i1 %.17.not, label %for.cond.preheader, label %.5.if

for.cond.preheader:                               ; preds = %.5
  %.271 = load i64, i64* %.15, align 8
  %.282 = icmp sgt i64 %.271, 0
  br i1 %.282, label %for.body.lr.ph, label %.5.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.31 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.46 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.3, i64 0, i32 0
  br label %for.body

.5.if:                                            ; preds = %for.body.endif, %for.body, %for.cond.preheader, %.5
  %merge = phi i64 [ -1, %.5 ], [ -2, %for.cond.preheader ], [ %storemerge3, %for.body ], [ -2, %for.body.endif ]
  ret i64 %merge

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.62, %for.body.endif ]
  %.32 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.32, i64 0, i32 9
  %.34 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.33, align 8
  %.38 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.10, align 8
  %.39 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.38, i64 0, i32 0
  %.40 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.40, i64 0, i32 5
  %.42 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.41, align 8
  %.43 = call %Type.676538* %.42(%"Array<Type>.676546"* %.38, i64 %storemerge3)
  %.47 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.47, i64 0, i32 5
  %.49 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.48, align 8
  %.50 = call %Expression.676558* %.49(%"Array<Expression>.676574"* %.3, i64 %storemerge3)
  %.51 = getelementptr inbounds %Expression.676558, %Expression.676558* %.50, i64 0, i32 4
  %.52 = load %Type.676538*, %Type.676538** %.51, align 8
  %.53 = call i1 %.34(%TypeChecker.676716* %.1, %Type.676538* %.43, %Type.676538* %.52)
  br i1 %.53, label %for.body.endif, label %.5.if

for.body.endif:                                   ; preds = %for.body
  %.62 = add nuw nsw i64 %storemerge3, 1
  %.27 = load i64, i64* %.15, align 8
  %.28 = icmp slt i64 %.62, %.27
  br i1 %.28, label %for.body, label %.5.if
}

define %CallExpression.676592* @TypeChecker_check_call_expr(%TypeChecker.676716* %.1, %Type.676538* nocapture readnone %.2, %CallExpressionNode.676466* %.3) {
.5:
  %.10 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.11 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.12 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.11, i64 0, i32 70
  %.13 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.12, align 8
  %.14 = call %Type.676538* @Type_unknown()
  %.16 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 4
  %.17 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.16, align 8
  %.18 = call %Expression.676558* %.13(%TypeChecker.676716* %.1, %Type.676538* %.14, %ExpressionNode.676442* %.17)
  %.22 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.22, i64 0, i32 17
  %.24 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.23, align 8
  %.25 = call i1 %.24(%TypeChecker.676716* %.1)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5.endif.endif.endif.endif.if.if, %.5.endif.endif.endif.endif.if.else, %.5.endif.endif.endif, %.5
  ret %CallExpression.676592* null

.5.endif:                                         ; preds = %.5
  %.29 = getelementptr inbounds %Expression.676558, %Expression.676558* %.18, i64 0, i32 3
  %.30 = load i64, i64* %.29, align 8
  %.31 = icmp eq i64 %.30, 16
  %.33 = getelementptr inbounds %Expression.676558, %Expression.676558* %.18, i64 0, i32 4
  %.34 = load %Type.676538*, %Type.676538** %.33, align 8
  %.35 = getelementptr inbounds %Type.676538, %Type.676538* %.34, i64 0, i32 1
  %.36 = load i64, i64* %.35, align 8
  %.37 = icmp eq i64 %.36, 21
  %.38 = and i1 %.31, %.37
  br i1 %.38, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.42 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.43 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.42, i64 0, i32 65
  %.44 = load %IntrinsicCall.676594* (%TypeChecker.676716*, %IntrinsicCall.676594*, %CallExpressionNode.676466*)*, %IntrinsicCall.676594* (%TypeChecker.676716*, %IntrinsicCall.676594*, %CallExpressionNode.676466*)** %.43, align 8
  %.46 = bitcast %Expression.676558* %.18 to %IntrinsicCall.676594*
  %.48 = call %IntrinsicCall.676594* %.44(%TypeChecker.676716* %.1, %IntrinsicCall.676594* %.46, %CallExpressionNode.676466* %.3)
  %.49 = bitcast %IntrinsicCall.676594* %.48 to %CallExpression.676592*
  ret %CallExpression.676592* %.49

.5.endif.endif:                                   ; preds = %.5.endif
  %.56.not = icmp eq i64 %.36, 17
  br i1 %.56.not, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.60 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.61 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.60, i64 0, i32 16
  %.62 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.61, align 8
  %.66 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.60, i64 0, i32 10
  %.67 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.66, align 8
  %.71 = call %string.676378* %.67(%TypeChecker.676716* %.1, %Type.676538* %.34)
  %.72 = getelementptr inbounds %string.676378, %string.676378* %.71, i64 0, i32 0
  %.73 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.72, align 8
  %.74 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.73, i64 0, i32 11
  %.75 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.74, align 8
  %.76 = call i8* %.75(%string.676378* %.71)
  %.78 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.346, i64 0, i64 0), i8* %.76)
  %.80 = call i8* @malloc(i64 %.78)
  %.81 = call i64 (i8*, i8*, ...) @sprintf(i8* %.80, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.346, i64 0, i64 0), i8* %.76)
  %.82 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.83 = bitcast i8* %.82 to %string.676378*
  %.84 = bitcast i8* %.82 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.84, align 8
  %.86 = getelementptr inbounds i8, i8* %.82, i64 8
  %0 = bitcast i8* %.86 to i8**
  store i8* %.80, i8** %0, align 8
  %.88 = getelementptr inbounds i8, i8* %.82, i64 16
  %1 = bitcast i8* %.88 to i64*
  store i64 %.78, i64* %1, align 8
  %.90 = getelementptr inbounds i8, i8* %.82, i64 24
  %2 = bitcast i8* %.90 to i64*
  store i64 %.78, i64* %2, align 8
  %.94 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.16, align 8
  %.95 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.94, i64 0, i32 1
  %.96 = load %FloRange.676382*, %FloRange.676382** %.95, align 8
  call void %.62(%TypeChecker.676716* %.1, i64 5, %string.676378* %.83, %FloRange.676382* %.96)
  ret %CallExpression.676592* null

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %3 = bitcast %Type.676538** %.33 to i64*
  %.10112 = load i64, i64* %3, align 8
  %func_ty = alloca %FunctionType.676544*, align 8
  %4 = bitcast %FunctionType.676544** %func_ty to i64*
  store i64 %.10112, i64* %4, align 8
  %.106 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.107 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.106, i64 0, i32 61
  %.108 = load %"Array<FunctionArg>.676658"* (%TypeChecker.676716*, %Expression.676558*)*, %"Array<FunctionArg>.676658"* (%TypeChecker.676716*, %Expression.676558*)** %.107, align 8
  %.110 = call %"Array<FunctionArg>.676658"* %.108(%TypeChecker.676716* %.1, %Expression.676558* %.18)
  %.114 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.115 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.114, i64 0, i32 62
  %.116 = load %"Array<Expression>.676574"* (%TypeChecker.676716*, %FunctionType.676544*, %"Array<FunctionArg>.676658"*, %"Array<ExpressionNode>.676454"*)*, %"Array<Expression>.676574"* (%TypeChecker.676716*, %FunctionType.676544*, %"Array<FunctionArg>.676658"*, %"Array<ExpressionNode>.676454"*)** %.115, align 8
  %.117 = load %FunctionType.676544*, %FunctionType.676544** %func_ty, align 8
  %.120 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 5
  %.121 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.120, align 8
  %.122 = call %"Array<Expression>.676574"* %.116(%TypeChecker.676716* %.1, %FunctionType.676544* %.117, %"Array<FunctionArg>.676658"* %.110, %"Array<ExpressionNode>.676454"* %.121)
  %.126 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.127 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.126, i64 0, i32 17
  %.128 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.127, align 8
  %.129 = call i1 %.128(%TypeChecker.676716* %.1)
  br i1 %.129, label %.5.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.134 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.135 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.134, i64 0, i32 63
  %.136 = load i64 (%TypeChecker.676716*, %FunctionType.676544*, %"Array<Expression>.676574"*)*, i64 (%TypeChecker.676716*, %FunctionType.676544*, %"Array<Expression>.676574"*)** %.135, align 8
  %.139 = call i64 %.136(%TypeChecker.676716* %.1, %FunctionType.676544* %.117, %"Array<Expression>.676574"* %.122)
  %.143 = icmp sgt i64 %.139, -2
  br i1 %.143, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.147 = icmp eq i64 %.139, -1
  %.151 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.152 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.151, i64 0, i32 16
  %.153 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.152, align 8
  br i1 %.147, label %.5.endif.endif.endif.endif.if.if, label %.5.endif.endif.endif.endif.if.else

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.259 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.117, i64 0, i32 3
  %.260 = load %Type.676538*, %Type.676538** %.259, align 8
  %.261 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.262 = bitcast i8* %.261 to %CallExpression.676592*
  %.263 = bitcast i8* %.261 to %CallExpression_vtable_ty.676593**
  store %CallExpression_vtable_ty.676593* @CallExpression_vtable_data, %CallExpression_vtable_ty.676593** %.263, align 8
  call void @CallExpression_constructor(%CallExpression.676592* %.262, %Expression.676558* %.18, %"Array<Expression>.676574"* %.122, %Type.676538* %.260)
  ret %CallExpression.676592* %.262

.5.endif.endif.endif.endif.if.if:                 ; preds = %.5.endif.endif.endif.endif.if
  %.155 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.117, i64 0, i32 2
  %.156 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.155, align 8
  %.157 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.156, i64 0, i32 2
  %.158 = load i64, i64* %.157, align 8
  %.160 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.122, i64 0, i32 2
  %.161 = load i64, i64* %.160, align 8
  %.163 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.347, i64 0, i64 0), i64 %.158, i64 %.161)
  %.165 = call i8* @malloc(i64 %.163)
  %.166 = call i64 (i8*, i8*, ...) @sprintf(i8* %.165, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.347, i64 0, i64 0), i64 %.158, i64 %.161)
  %.167 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.168 = bitcast i8* %.167 to %string.676378*
  %.169 = bitcast i8* %.167 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.169, align 8
  %.171 = getelementptr inbounds i8, i8* %.167, i64 8
  %5 = bitcast i8* %.171 to i8**
  store i8* %.165, i8** %5, align 8
  %.173 = getelementptr inbounds i8, i8* %.167, i64 16
  %6 = bitcast i8* %.173 to i64*
  store i64 %.163, i64* %6, align 8
  %.175 = getelementptr inbounds i8, i8* %.167, i64 24
  %7 = bitcast i8* %.175 to i64*
  store i64 %.163, i64* %7, align 8
  %.178 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 1
  %.179 = load %FloRange.676382*, %FloRange.676382** %.178, align 8
  call void %.153(%TypeChecker.676716* %.1, i64 4, %string.676378* %.168, %FloRange.676382* %.179)
  br label %.5.if

.5.endif.endif.endif.endif.if.else:               ; preds = %.5.endif.endif.endif.endif.if
  %.190 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.151, i64 0, i32 10
  %.191 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.190, align 8
  %.194 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.117, i64 0, i32 2
  %.195 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.194, align 8
  %.196 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.195, i64 0, i32 0
  %.197 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.196, align 8
  %.198 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.197, i64 0, i32 5
  %.199 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.198, align 8
  %.200 = call %Type.676538* %.199(%"Array<Type>.676546"* %.195, i64 %.139)
  %.201 = call %string.676378* %.191(%TypeChecker.676716* %.1, %Type.676538* %.200)
  %.204 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.10, align 8
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.204, i64 0, i32 10
  %.206 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.205, align 8
  %.209 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.122, i64 0, i32 0
  %.210 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.209, align 8
  %.211 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.210, i64 0, i32 5
  %.212 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.211, align 8
  %.213 = call %Expression.676558* %.212(%"Array<Expression>.676574"* %.122, i64 %.139)
  %.214 = getelementptr inbounds %Expression.676558, %Expression.676558* %.213, i64 0, i32 4
  %.215 = load %Type.676538*, %Type.676538** %.214, align 8
  %.216 = call %string.676378* %.206(%TypeChecker.676716* %.1, %Type.676538* %.215)
  %.217 = getelementptr inbounds %string.676378, %string.676378* %.201, i64 0, i32 0
  %.218 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.217, align 8
  %.219 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.218, i64 0, i32 11
  %.220 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.219, align 8
  %.221 = call i8* %.220(%string.676378* %.201)
  %.222 = getelementptr inbounds %string.676378, %string.676378* %.216, i64 0, i32 0
  %.223 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.222, align 8
  %.224 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.223, i64 0, i32 11
  %.225 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.224, align 8
  %.226 = call i8* %.225(%string.676378* %.216)
  %.228 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.348, i64 0, i64 0), i8* %.221, i8* %.226)
  %.230 = call i8* @malloc(i64 %.228)
  %.231 = call i64 (i8*, i8*, ...) @sprintf(i8* %.230, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.348, i64 0, i64 0), i8* %.221, i8* %.226)
  %.232 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.233 = bitcast i8* %.232 to %string.676378*
  %.234 = bitcast i8* %.232 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.234, align 8
  %.236 = getelementptr inbounds i8, i8* %.232, i64 8
  %8 = bitcast i8* %.236 to i8**
  store i8* %.230, i8** %8, align 8
  %.238 = getelementptr inbounds i8, i8* %.232, i64 16
  %9 = bitcast i8* %.238 to i64*
  store i64 %.228, i64* %9, align 8
  %.240 = getelementptr inbounds i8, i8* %.232, i64 24
  %10 = bitcast i8* %.240 to i64*
  store i64 %.228, i64* %10, align 8
  %.245 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.120, align 8
  %.246 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.245, i64 0, i32 0
  %.247 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.246, align 8
  %.248 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.247, i64 0, i32 5
  %.249 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.248, align 8
  %.250 = call %ExpressionNode.676442* %.249(%"Array<ExpressionNode>.676454"* %.245, i64 %.139)
  %.251 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.250, i64 0, i32 1
  %.252 = load %FloRange.676382*, %FloRange.676382** %.251, align 8
  call void %.153(%TypeChecker.676716* %.1, i64 5, %string.676378* %.233, %FloRange.676382* %.252)
  br label %.5.if
}

define %IntrinsicCall.676594* @TypeChecker_check_intrinsic_call(%TypeChecker.676716* %.1, %IntrinsicCall.676594* %.2, %CallExpressionNode.676466* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 5
  %.11 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.10, align 8
  %.18 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.11, i64 0, i32 2
  %.1910 = load i64, i64* %.18, align 8
  %.2011 = icmp sgt i64 %.1910, 0
  br i1 %.2011, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.23 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.2, i64 0, i32 6
  %.26 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.33 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.11, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge12 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.body ]
  %.24 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.23, align 8
  %.27 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.26, align 8
  %.28 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.27, i64 0, i32 70
  %.29 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.28, align 8
  %.30 = call %Type.676538* @Type_unknown()
  %.34 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.34, i64 0, i32 5
  %.36 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.35, align 8
  %.37 = call %ExpressionNode.676442* %.36(%"Array<ExpressionNode>.676454"* %.11, i64 %storemerge12)
  %.38 = call %Expression.676558* %.29(%TypeChecker.676716* %.1, %Type.676538* %.30, %ExpressionNode.676442* %.37)
  %.39 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.24, i64 0, i32 0
  %.40 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.39, align 8
  %.41 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.40, i64 0, i32 2
  %.42 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.41, align 8
  call void %.42(%"Array<Expression>.676574"* %.24, %Expression.676558* %.38)
  %.48 = add nuw nsw i64 %storemerge12, 1
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp slt i64 %.48, %.19
  br i1 %.20, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %.52 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.2, i64 0, i32 5
  %.53 = load i64, i64* %.52, align 8
  %.56 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.2, i64 0, i32 6
  %.57 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.58 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.57, i64 0, i32 0
  %.59 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.59, i64 0, i32 5
  %.61 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.60, align 8
  %.62 = call %Expression.676558* %.61(%"Array<Expression>.676574"* %.57, i64 0)
  %.63 = getelementptr inbounds %Expression.676558, %Expression.676558* %.62, i64 0, i32 4
  %.64 = load %Type.676538*, %Type.676538** %.63, align 8
  %.65 = call i1 @is_pointer(%Type.676538* %.64)
  br i1 %.65, label %for.end.endif, label %for.end.if

for.end.if:                                       ; preds = %for.end
  %.69 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.70 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.69, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 16
  %.72 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.71, align 8
  %.76 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 10
  %.77 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.76, align 8
  %.80 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.81 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.80, i64 0, i32 0
  %.82 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.81, align 8
  %.83 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.82, i64 0, i32 5
  %.84 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.83, align 8
  %.85 = call %Expression.676558* %.84(%"Array<Expression>.676574"* %.80, i64 0)
  %.86 = getelementptr inbounds %Expression.676558, %Expression.676558* %.85, i64 0, i32 4
  %.87 = load %Type.676538*, %Type.676538** %.86, align 8
  %.88 = call %string.676378* %.77(%TypeChecker.676716* %.1, %Type.676538* %.87)
  %.89 = getelementptr inbounds %string.676378, %string.676378* %.88, i64 0, i32 0
  %.90 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.89, align 8
  %.91 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.90, i64 0, i32 11
  %.92 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.91, align 8
  %.93 = call i8* %.92(%string.676378* %.88)
  %.95 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.349, i64 0, i64 0), i8* %.93)
  %.97 = call i8* @malloc(i64 %.95)
  %.98 = call i64 (i8*, i8*, ...) @sprintf(i8* %.97, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.349, i64 0, i64 0), i8* %.93)
  %.99 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.99 to %string.676378*
  %.101 = bitcast i8* %.99 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.101, align 8
  %.103 = getelementptr inbounds i8, i8* %.99, i64 8
  %0 = bitcast i8* %.103 to i8**
  store i8* %.97, i8** %0, align 8
  %.105 = getelementptr inbounds i8, i8* %.99, i64 16
  %1 = bitcast i8* %.105 to i64*
  store i64 %.95, i64* %1, align 8
  %.107 = getelementptr inbounds i8, i8* %.99, i64 24
  %2 = bitcast i8* %.107 to i64*
  store i64 %.95, i64* %2, align 8
  %.110 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 4
  %.111 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.110, align 8
  %.112 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.111, i64 0, i32 1
  %.113 = load %FloRange.676382*, %FloRange.676382** %.112, align 8
  call void %.72(%TypeChecker.676716* %.1, i64 5, %string.676378* %.100, %FloRange.676382* %.113)
  ret %IntrinsicCall.676594* null

for.end.endif:                                    ; preds = %for.end
  switch i64 %.53, label %for.end.endif.endif [
    i64 3, label %for.end.endif.if
    i64 4, label %for.end.endif.else.if
    i64 2, label %for.end.endif.else.if
    i64 1, label %for.end.endif.else.if
    i64 0, label %for.end.endif.else.if
  ]

for.end.endif.if:                                 ; preds = %for.end.endif
  %.121 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.122 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.121, i64 0, i32 2
  %.123 = load i64, i64* %.122, align 8
  %.124.not = icmp eq i64 %.123, 2
  br i1 %.124.not, label %for.end.endif.if.endif, label %for.end.endif.if.if

for.end.endif.endif:                              ; preds = %for.end.endif, %for.end.endif.else.if.endif.endif.endif.endif, %for.end.endif.else.if.endif.endif.endif.endif.if, %for.end.endif.if.endif
  ret %IntrinsicCall.676594* %.2

for.end.endif.if.if:                              ; preds = %for.end.endif.if
  %.127 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.128 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.127, align 8
  %.129 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.128, i64 0, i32 16
  %.130 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.129, align 8
  %.137 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.350, i64 0, i64 0), i64 %.123)
  %.139 = call i8* @malloc(i64 %.137)
  %.140 = call i64 (i8*, i8*, ...) @sprintf(i8* %.139, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.350, i64 0, i64 0), i64 %.123)
  %.141 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.142 = bitcast i8* %.141 to %string.676378*
  %.143 = bitcast i8* %.141 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.143, align 8
  %.145 = getelementptr inbounds i8, i8* %.141, i64 8
  %3 = bitcast i8* %.145 to i8**
  store i8* %.139, i8** %3, align 8
  %.147 = getelementptr inbounds i8, i8* %.141, i64 16
  %4 = bitcast i8* %.147 to i64*
  store i64 %.137, i64* %4, align 8
  %.149 = getelementptr inbounds i8, i8* %.141, i64 24
  %5 = bitcast i8* %.149 to i64*
  store i64 %.137, i64* %5, align 8
  %.152 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 1
  %.153 = load %FloRange.676382*, %FloRange.676382** %.152, align 8
  call void %.130(%TypeChecker.676716* %.1, i64 4, %string.676378* %.142, %FloRange.676382* %.153)
  ret %IntrinsicCall.676594* null

for.end.endif.if.endif:                           ; preds = %for.end.endif.if
  %.160 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.121, i64 0, i32 0
  %.161 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.160, align 8
  %.162 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.161, i64 0, i32 5
  %.163 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.162, align 8
  %.164 = call %Expression.676558* %.163(%"Array<Expression>.676574"* %.121, i64 0)
  %.165 = getelementptr inbounds %Expression.676558, %Expression.676558* %.164, i64 0, i32 4
  %6 = bitcast %Type.676538** %.165 to i64*
  %.1665 = load i64, i64* %6, align 8
  %.167 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.2, i64 0, i32 4
  %7 = bitcast %Type.676538** %.167 to i64*
  store i64 %.1665, i64* %7, align 8
  %.171 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.172 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.171, i64 0, i32 0
  %.173 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.172, align 8
  %.174 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.173, i64 0, i32 5
  %.175 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.174, align 8
  %.176 = call %Expression.676558* %.175(%"Array<Expression>.676574"* %.171, i64 1)
  %.177 = getelementptr inbounds %Expression.676558, %Expression.676558* %.176, i64 0, i32 4
  %.178 = load %Type.676538*, %Type.676538** %.177, align 8
  %.179 = call i1 @is_int(%Type.676538* %.178)
  br i1 %.179, label %for.end.endif.endif, label %for.end.endif.if.endif.if

for.end.endif.if.endif.if:                        ; preds = %for.end.endif.if.endif
  %.183 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.184 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.183, align 8
  %.185 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.184, i64 0, i32 16
  %.186 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.185, align 8
  %.190 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.184, i64 0, i32 10
  %.191 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.190, align 8
  %.194 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.195 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.194, i64 0, i32 0
  %.196 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.195, align 8
  %.197 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.196, i64 0, i32 5
  %.198 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.197, align 8
  %.199 = call %Expression.676558* %.198(%"Array<Expression>.676574"* %.194, i64 1)
  %.200 = getelementptr inbounds %Expression.676558, %Expression.676558* %.199, i64 0, i32 4
  %.201 = load %Type.676538*, %Type.676538** %.200, align 8
  %.202 = call %string.676378* %.191(%TypeChecker.676716* %.1, %Type.676538* %.201)
  %.203 = getelementptr inbounds %string.676378, %string.676378* %.202, i64 0, i32 0
  %.204 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.203, align 8
  %.205 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.204, i64 0, i32 11
  %.206 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.205, align 8
  %.207 = call i8* %.206(%string.676378* %.202)
  %.209 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.351, i64 0, i64 0), i8* %.207)
  %.211 = call i8* @malloc(i64 %.209)
  %.212 = call i64 (i8*, i8*, ...) @sprintf(i8* %.211, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.351, i64 0, i64 0), i8* %.207)
  %.213 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.214 = bitcast i8* %.213 to %string.676378*
  %.215 = bitcast i8* %.213 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.215, align 8
  %.217 = getelementptr inbounds i8, i8* %.213, i64 8
  %8 = bitcast i8* %.217 to i8**
  store i8* %.211, i8** %8, align 8
  %.219 = getelementptr inbounds i8, i8* %.213, i64 16
  %9 = bitcast i8* %.219 to i64*
  store i64 %.209, i64* %9, align 8
  %.221 = getelementptr inbounds i8, i8* %.213, i64 24
  %10 = bitcast i8* %.221 to i64*
  store i64 %.209, i64* %10, align 8
  %.225 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.10, align 8
  %.226 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.225, i64 0, i32 0
  %.227 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.226, align 8
  %.228 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.227, i64 0, i32 5
  %.229 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.228, align 8
  %.230 = call %ExpressionNode.676442* %.229(%"Array<ExpressionNode>.676454"* %.225, i64 0)
  %.231 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.230, i64 0, i32 1
  %.232 = load %FloRange.676382*, %FloRange.676382** %.231, align 8
  call void %.186(%TypeChecker.676716* %.1, i64 5, %string.676378* %.214, %FloRange.676382* %.232)
  ret %IntrinsicCall.676594* null

for.end.endif.else.if:                            ; preds = %for.end.endif, %for.end.endif, %for.end.endif, %for.end.endif
  %.250 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.251 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.250, i64 0, i32 2
  %.252 = load i64, i64* %.251, align 8
  %.253.not = icmp eq i64 %.252, 3
  br i1 %.253.not, label %for.end.endif.else.if.endif, label %for.end.endif.else.if.if

for.end.endif.else.if.if:                         ; preds = %for.end.endif.else.if
  %.256 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.257 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.256, align 8
  %.258 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.257, i64 0, i32 16
  %.259 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.258, align 8
  %.266 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.352, i64 0, i64 0), i64 %.252)
  %.268 = call i8* @malloc(i64 %.266)
  %.269 = call i64 (i8*, i8*, ...) @sprintf(i8* %.268, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.352, i64 0, i64 0), i64 %.252)
  %.270 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.271 = bitcast i8* %.270 to %string.676378*
  %.272 = bitcast i8* %.270 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.272, align 8
  %.274 = getelementptr inbounds i8, i8* %.270, i64 8
  %11 = bitcast i8* %.274 to i8**
  store i8* %.268, i8** %11, align 8
  %.276 = getelementptr inbounds i8, i8* %.270, i64 16
  %12 = bitcast i8* %.276 to i64*
  store i64 %.266, i64* %12, align 8
  %.278 = getelementptr inbounds i8, i8* %.270, i64 24
  %13 = bitcast i8* %.278 to i64*
  store i64 %.266, i64* %13, align 8
  %.281 = getelementptr inbounds %CallExpressionNode.676466, %CallExpressionNode.676466* %.3, i64 0, i32 1
  %.282 = load %FloRange.676382*, %FloRange.676382** %.281, align 8
  call void %.259(%TypeChecker.676716* %.1, i64 4, %string.676378* %.271, %FloRange.676382* %.282)
  ret %IntrinsicCall.676594* null

for.end.endif.else.if.endif:                      ; preds = %for.end.endif.else.if
  %.288 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.250, i64 0, i32 0
  %.289 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.288, align 8
  %.290 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.289, i64 0, i32 5
  %.291 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.290, align 8
  %.292 = call %Expression.676558* %.291(%"Array<Expression>.676574"* %.250, i64 0)
  %.293 = getelementptr inbounds %Expression.676558, %Expression.676558* %.292, i64 0, i32 4
  %14 = bitcast %Type.676538** %.293 to i64*
  %.2941 = load i64, i64* %14, align 8
  %exp_arg2_type = alloca %Type.676538*, align 8
  %15 = bitcast %Type.676538** %exp_arg2_type to i64*
  store i64 %.2941, i64* %15, align 8
  %.298 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.2, i64 0, i32 4
  %16 = bitcast %Type.676538** %.298 to i64*
  store i64 %.2941, i64* %16, align 8
  %.301 = icmp eq i64 %.53, 2
  br i1 %.301, label %for.end.endif.else.if.endif.if, label %for.end.endif.else.if.endif.endif

for.end.endif.else.if.endif.if:                   ; preds = %for.end.endif.else.if.endif
  %17 = bitcast %Type.676538** %exp_arg2_type to %PointerType.676542**
  %.3033 = load %PointerType.676542*, %PointerType.676542** %17, align 8
  %.305 = getelementptr inbounds %PointerType.676542, %PointerType.676542* %.3033, i64 0, i32 2
  %18 = bitcast %Type.676538** %.305 to i64*
  %.3064 = load i64, i64* %18, align 8
  store i64 %.3064, i64* %15, align 8
  br label %for.end.endif.else.if.endif.endif

for.end.endif.else.if.endif.endif:                ; preds = %for.end.endif.else.if.endif.if, %for.end.endif.else.if.endif
  %.310 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.311 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.310, align 8
  %.312 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.311, i64 0, i32 9
  %.313 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.312, align 8
  %.314 = load %Type.676538*, %Type.676538** %exp_arg2_type, align 8
  %.317 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.318 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.317, i64 0, i32 0
  %.319 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.318, align 8
  %.320 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.319, i64 0, i32 5
  %.321 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.320, align 8
  %.322 = call %Expression.676558* %.321(%"Array<Expression>.676574"* %.317, i64 1)
  %.323 = getelementptr inbounds %Expression.676558, %Expression.676558* %.322, i64 0, i32 4
  %.324 = load %Type.676538*, %Type.676538** %.323, align 8
  %.325 = call i1 %.313(%TypeChecker.676716* %.1, %Type.676538* %.314, %Type.676538* %.324)
  br i1 %.325, label %for.end.endif.else.if.endif.endif.endif, label %for.end.endif.else.if.endif.endif.if

for.end.endif.else.if.endif.endif.if:             ; preds = %for.end.endif.else.if.endif.endif
  %.330 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.310, align 8
  %.331 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.330, i64 0, i32 16
  %.332 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.331, align 8
  %.336 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.330, i64 0, i32 10
  %.337 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.336, align 8
  %.339 = call %string.676378* %.337(%TypeChecker.676716* %.1, %Type.676538* %.314)
  %.342 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.310, align 8
  %.343 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.342, i64 0, i32 10
  %.344 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.343, align 8
  %.347 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.348 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.347, i64 0, i32 0
  %.349 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.348, align 8
  %.350 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.349, i64 0, i32 5
  %.351 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.350, align 8
  %.352 = call %Expression.676558* %.351(%"Array<Expression>.676574"* %.347, i64 1)
  %.353 = getelementptr inbounds %Expression.676558, %Expression.676558* %.352, i64 0, i32 4
  %.354 = load %Type.676538*, %Type.676538** %.353, align 8
  %.355 = call %string.676378* %.344(%TypeChecker.676716* %.1, %Type.676538* %.354)
  %.356 = getelementptr inbounds %string.676378, %string.676378* %.339, i64 0, i32 0
  %.357 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.356, align 8
  %.358 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.357, i64 0, i32 11
  %.359 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.358, align 8
  %.360 = call i8* %.359(%string.676378* %.339)
  %.361 = getelementptr inbounds %string.676378, %string.676378* %.355, i64 0, i32 0
  %.362 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.361, align 8
  %.363 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.362, i64 0, i32 11
  %.364 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.363, align 8
  %.365 = call i8* %.364(%string.676378* %.355)
  %.367 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.353, i64 0, i64 0), i8* %.360, i8* %.365)
  %.369 = call i8* @malloc(i64 %.367)
  %.370 = call i64 (i8*, i8*, ...) @sprintf(i8* %.369, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @str.353, i64 0, i64 0), i8* %.360, i8* %.365)
  %.371 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.372 = bitcast i8* %.371 to %string.676378*
  %.373 = bitcast i8* %.371 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.373, align 8
  %.375 = getelementptr inbounds i8, i8* %.371, i64 8
  %19 = bitcast i8* %.375 to i8**
  store i8* %.369, i8** %19, align 8
  %.377 = getelementptr inbounds i8, i8* %.371, i64 16
  %20 = bitcast i8* %.377 to i64*
  store i64 %.367, i64* %20, align 8
  %.379 = getelementptr inbounds i8, i8* %.371, i64 24
  %21 = bitcast i8* %.379 to i64*
  store i64 %.367, i64* %21, align 8
  %.383 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.10, align 8
  %.384 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.383, i64 0, i32 0
  %.385 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.384, align 8
  %.386 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.385, i64 0, i32 5
  %.387 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.386, align 8
  %.388 = call %ExpressionNode.676442* %.387(%"Array<ExpressionNode>.676454"* %.383, i64 0)
  %.389 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.388, i64 0, i32 1
  %.390 = load %FloRange.676382*, %FloRange.676382** %.389, align 8
  call void %.332(%TypeChecker.676716* %.1, i64 5, %string.676378* %.372, %FloRange.676382* %.390)
  ret %IntrinsicCall.676594* null

for.end.endif.else.if.endif.endif.endif:          ; preds = %for.end.endif.else.if.endif.endif
  %.395 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.396 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.395, i64 0, i32 0
  %.397 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.396, align 8
  %.398 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.397, i64 0, i32 5
  %.399 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.398, align 8
  %.400 = call %Expression.676558* %.399(%"Array<Expression>.676574"* %.395, i64 2)
  %.401 = getelementptr inbounds %Expression.676558, %Expression.676558* %.400, i64 0, i32 4
  %.402 = load %Type.676538*, %Type.676538** %.401, align 8
  %.403 = call i1 @is_int(%Type.676538* %.402)
  br i1 %.403, label %for.end.endif.else.if.endif.endif.endif.endif, label %for.end.endif.else.if.endif.endif.endif.if

for.end.endif.else.if.endif.endif.endif.if:       ; preds = %for.end.endif.else.if.endif.endif.endif
  %.408 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.310, align 8
  %.409 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.408, i64 0, i32 16
  %.410 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.409, align 8
  %.414 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.408, i64 0, i32 10
  %.415 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.414, align 8
  %.418 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.56, align 8
  %.419 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.418, i64 0, i32 0
  %.420 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.419, align 8
  %.421 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.420, i64 0, i32 5
  %.422 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.421, align 8
  %.423 = call %Expression.676558* %.422(%"Array<Expression>.676574"* %.418, i64 2)
  %.424 = getelementptr inbounds %Expression.676558, %Expression.676558* %.423, i64 0, i32 4
  %.425 = load %Type.676538*, %Type.676538** %.424, align 8
  %.426 = call %string.676378* %.415(%TypeChecker.676716* %.1, %Type.676538* %.425)
  %.427 = getelementptr inbounds %string.676378, %string.676378* %.426, i64 0, i32 0
  %.428 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.427, align 8
  %.429 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.428, i64 0, i32 11
  %.430 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.429, align 8
  %.431 = call i8* %.430(%string.676378* %.426)
  %.433 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.351, i64 0, i64 0), i8* %.431)
  %.435 = call i8* @malloc(i64 %.433)
  %.436 = call i64 (i8*, i8*, ...) @sprintf(i8* %.435, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.351, i64 0, i64 0), i8* %.431)
  %.437 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.438 = bitcast i8* %.437 to %string.676378*
  %.439 = bitcast i8* %.437 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.439, align 8
  %.441 = getelementptr inbounds i8, i8* %.437, i64 8
  %22 = bitcast i8* %.441 to i8**
  store i8* %.435, i8** %22, align 8
  %.443 = getelementptr inbounds i8, i8* %.437, i64 16
  %23 = bitcast i8* %.443 to i64*
  store i64 %.433, i64* %23, align 8
  %.445 = getelementptr inbounds i8, i8* %.437, i64 24
  %24 = bitcast i8* %.445 to i64*
  store i64 %.433, i64* %24, align 8
  %.449 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.10, align 8
  %.450 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.449, i64 0, i32 0
  %.451 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.450, align 8
  %.452 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.451, i64 0, i32 5
  %.453 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.452, align 8
  %.454 = call %ExpressionNode.676442* %.453(%"Array<ExpressionNode>.676454"* %.449, i64 1)
  %.455 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.454, i64 0, i32 1
  %.456 = load %FloRange.676382*, %FloRange.676382** %.455, align 8
  call void %.410(%TypeChecker.676716* %.1, i64 5, %string.676378* %.438, %FloRange.676382* %.456)
  ret %IntrinsicCall.676594* null

for.end.endif.else.if.endif.endif.endif.endif:    ; preds = %for.end.endif.else.if.endif.endif.endif
  %.460 = icmp eq i64 %.53, 4
  br i1 %.460, label %for.end.endif.else.if.endif.endif.endif.endif.if, label %for.end.endif.endif

for.end.endif.else.if.endif.endif.endif.endif.if: ; preds = %for.end.endif.else.if.endif.endif.endif.endif
  %.463 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.464 = bitcast i8* %.463 to %Type.676538*
  %.465 = bitcast i8* %.463 to %Type_vtable_ty.676539**
  store %Type_vtable_ty.676539* @Type_vtable_data, %Type_vtable_ty.676539** %.465, align 8
  call void @Type_constructor(%Type.676538* %.464, i64 7)
  %25 = bitcast %Type.676538** %.298 to i8**
  store i8* %.463, i8** %25, align 8
  br label %for.end.endif.endif
}

; Function Attrs: nofree nounwind
define noalias %IntExpression.676566* @TypeChecker_check_int_expression(%TypeChecker.676716* nocapture readnone %.1, %Type.676538* %.2, %IntExpressionNode.676446* nocapture readonly %.3) #3 {
.5:
  %.10 = getelementptr inbounds %IntExpressionNode.676446, %IntExpressionNode.676446* %.3, i64 0, i32 4
  %.11 = load %IntToken.676408*, %IntToken.676408** %.10, align 8
  %.12 = getelementptr inbounds %IntToken.676408, %IntToken.676408* %.11, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.15 = bitcast i8* %.14 to %IntExpression.676566*
  %.16 = bitcast i8* %.14 to %IntExpression_vtable_ty.676567**
  store %IntExpression_vtable_ty.676567* @IntExpression_vtable_data, %IntExpression_vtable_ty.676567** %.16, align 8
  call void @IntExpression_constructor(%IntExpression.676566* %.15, i64 %.13)
  %.21 = call i1 @is_int(%Type.676538* %.2)
  br i1 %.21, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = getelementptr inbounds i8, i8* %.14, i64 32
  %0 = bitcast i8* %.25 to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %0, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %IntExpression.676566* %.15
}

; Function Attrs: nofree nounwind
define noalias %FloatExpression.676570* @TypeChecker_check_float_expression(%TypeChecker.676716* nocapture readnone %.1, %Type.676538* %.2, %FloatExpressionNode.676448* nocapture readonly %.3) #3 {
.5:
  %.10 = getelementptr inbounds %FloatExpressionNode.676448, %FloatExpressionNode.676448* %.3, i64 0, i32 4
  %.11 = load %FloatToken.676410*, %FloatToken.676410** %.10, align 8
  %.12 = getelementptr inbounds %FloatToken.676410, %FloatToken.676410* %.11, i64 0, i32 3
  %.13 = load double, double* %.12, align 8
  %.14 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.15 = bitcast i8* %.14 to %FloatExpression.676570*
  %.16 = bitcast i8* %.14 to %FloatExpression_vtable_ty.676571**
  store %FloatExpression_vtable_ty.676571* @FloatExpression_vtable_data, %FloatExpression_vtable_ty.676571** %.16, align 8
  call void @FloatExpression_constructor(%FloatExpression.676570* %.15, double %.13)
  %.21 = call i1 @is_float(%Type.676538* %.2)
  br i1 %.21, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.25 = getelementptr inbounds i8, i8* %.14, i64 32
  %0 = bitcast i8* %.25 to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %0, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %FloatExpression.676570* %.15
}

; Function Attrs: nofree nounwind
define noalias %IntExpression.676566* @TypeChecker_check_char_expression(%TypeChecker.676716* nocapture readnone %.1, %CharExpressionNode.676450* nocapture readonly %.2) #3 {
.4:
  %.8 = getelementptr inbounds %CharExpressionNode.676450, %CharExpressionNode.676450* %.2, i64 0, i32 4
  %.9 = load %CharToken.676412*, %CharToken.676412** %.8, align 8
  %.10 = getelementptr inbounds %CharToken.676412, %CharToken.676412* %.9, i64 0, i32 3
  %.11 = load i8, i8* %.10, align 1
  %.12 = zext i8 %.11 to i64
  %.13 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.14 = bitcast i8* %.13 to %IntExpression.676566*
  %.15 = bitcast i8* %.13 to %IntExpression_vtable_ty.676567**
  store %IntExpression_vtable_ty.676567* @IntExpression_vtable_data, %IntExpression_vtable_ty.676567** %.15, align 8
  call void @IntExpression_constructor(%IntExpression.676566* %.14, i64 %.12)
  %.20 = getelementptr inbounds i8, i8* %.13, i64 32
  %0 = bitcast i8* %.20 to %Type.676538**
  %.21 = load %Type.676538*, %Type.676538** %0, align 8
  %.22 = getelementptr inbounds %Type.676538, %Type.676538* %.21, i64 0, i32 1
  store i64 2, i64* %.22, align 8
  ret %IntExpression.676566* %.14
}

define noalias %StringExpression.676572* @TypeChecker_check_string_expression(%TypeChecker.676716* %.1, %Type.676538* %.2, %StringExpressionNode.676452* nocapture readonly %.3) {
.5:
  %.10 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Array<Expression>.676574"*
  %.14 = bitcast i8* %.12 to %"Array<Expression>_vtable_ty.676575"**
  store %"Array<Expression>_vtable_ty.676575"* @"Array<Expression>_vtable_data", %"Array<Expression>_vtable_ty.676575"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %StringExpressionNode.676452, %StringExpressionNode.676452* %.3, i64 0, i32 5
  %.295 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.28, align 8
  %.306 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.295, i64 0, i32 2
  %.317 = load i64, i64* %.306, align 8
  %.328 = icmp sgt i64 %.317, 0
  br i1 %.328, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.36 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge9 = phi i64 [ 0, %for.body.lr.ph ], [ %.60, %for.body ]
  %.37 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.36, align 8
  %.38 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.37, i64 0, i32 70
  %.39 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.38, align 8
  %.40 = call %Type.676538* @Type_unknown()
  %.44 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.28, align 8
  %.45 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.44, i64 0, i32 0
  %.46 = load %"Array<ExpressionNode>_vtable_ty.676455"*, %"Array<ExpressionNode>_vtable_ty.676455"** %.45, align 8
  %.47 = getelementptr inbounds %"Array<ExpressionNode>_vtable_ty.676455", %"Array<ExpressionNode>_vtable_ty.676455"* %.46, i64 0, i32 5
  %.48 = load %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)*, %ExpressionNode.676442* (%"Array<ExpressionNode>.676454"*, i64)** %.47, align 8
  %.49 = call %ExpressionNode.676442* %.48(%"Array<ExpressionNode>.676454"* %.44, i64 %storemerge9)
  %.50 = call %Expression.676558* %.39(%TypeChecker.676716* %.1, %Type.676538* %.40, %ExpressionNode.676442* %.49)
  %.52 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.14, align 8
  %.53 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.52, i64 0, i32 2
  %.54 = load void (%"Array<Expression>.676574"*, %Expression.676558*)*, void (%"Array<Expression>.676574"*, %Expression.676558*)** %.53, align 8
  call void %.54(%"Array<Expression>.676574"* %.13, %Expression.676558* %.50)
  %.60 = add nuw nsw i64 %storemerge9, 1
  %.29 = load %"Array<ExpressionNode>.676454"*, %"Array<ExpressionNode>.676454"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<ExpressionNode>.676454", %"Array<ExpressionNode>.676454"* %.29, i64 0, i32 2
  %.31 = load i64, i64* %.30, align 8
  %.32 = icmp slt i64 %.60, %.31
  br i1 %.32, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %.64 = call i1 @is_i8_ptr(%Type.676538* %.2)
  br i1 %.64, label %for.end.endif, label %for.end.if

for.end.if:                                       ; preds = %for.end
  %.68 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.69 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.68, align 8
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.69, i64 0, i32 14
  %.71 = load %Type.676538* (%TypeChecker.676716*, %string.676378*)*, %Type.676538* (%TypeChecker.676716*, %string.676378*)** %.70, align 8
  %.72 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.73 = bitcast i8* %.72 to %string.676378*
  %.73.repack = bitcast i8* %.72 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.73.repack, align 8
  %.73.repack1 = getelementptr inbounds i8, i8* %.72, i64 8
  %3 = bitcast i8* %.73.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.354, i64 0, i64 0), i8** %3, align 8
  %.73.repack2 = getelementptr inbounds i8, i8* %.72, i64 16
  %4 = bitcast i8* %.73.repack2 to i64*
  store i64 6, i64* %4, align 8
  %.73.repack3 = getelementptr inbounds i8, i8* %.72, i64 24
  %5 = bitcast i8* %.73.repack3 to i64*
  store i64 6, i64* %5, align 8
  %.75 = call %Type.676538* %.71(%TypeChecker.676716* %.1, %string.676378* %.73)
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end, %for.end.if
  %expected_type.0 = phi %Type.676538* [ %.75, %for.end.if ], [ %.2, %for.end ]
  %.79 = getelementptr inbounds %StringExpressionNode.676452, %StringExpressionNode.676452* %.3, i64 0, i32 4
  %.80 = load %StrToken.676414*, %StrToken.676414** %.79, align 8
  %.81 = getelementptr inbounds %StrToken.676414, %StrToken.676414* %.80, i64 0, i32 3
  %.82 = load %string.676378*, %string.676378** %.81, align 8
  %.85 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.86 = bitcast i8* %.85 to %StringExpression.676572*
  %.87 = bitcast i8* %.85 to %StringExpression_vtable_ty.676573**
  store %StringExpression_vtable_ty.676573* @StringExpression_vtable_data, %StringExpression_vtable_ty.676573** %.87, align 8
  call void @StringExpression_constructor(%StringExpression.676572* %.86, %string.676378* %.82, %"Array<Expression>.676574"* %.13, %Type.676538* %expected_type.0)
  %.93 = getelementptr inbounds i8, i8* %.85, i64 32
  %6 = bitcast i8* %.93 to %Type.676538**
  store %Type.676538* %expected_type.0, %Type.676538** %6, align 8
  ret %StringExpression.676572* %.86
}

define %Expression.676558* @TypeChecker_check_expression(%TypeChecker.676716* %.1, %Type.676538* %.2, %ExpressionNode.676442* %.3) {
.5:
  %.10 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1 [
    i64 0, label %.5.if
    i64 1, label %.5.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.endif.if
    i64 6, label %.5.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 15, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 10, label %.5.endif.endif.endif.endi...if
    i64 11, label %.5.endif.endif.endif.endi...endif.if
    i64 12, label %.5.endif.endif.endif.endi...endif.endif.if
    i64 13, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endi...if.1
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.16 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.15, align 8
  %.17 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.16, i64 0, i32 66
  %.18 = load %IntExpression.676566* (%TypeChecker.676716*, %Type.676538*, %IntExpressionNode.676446*)*, %IntExpression.676566* (%TypeChecker.676716*, %Type.676538*, %IntExpressionNode.676446*)** %.17, align 8
  %.21 = bitcast %ExpressionNode.676442* %.3 to %IntExpressionNode.676446*
  %.22 = call %IntExpression.676566* %.18(%TypeChecker.676716* %.1, %Type.676538* %.2, %IntExpressionNode.676446* %.21)
  %.23 = bitcast %IntExpression.676566* %.22 to %Expression.676558*
  ret %Expression.676558* %.23

.5.endif.if:                                      ; preds = %.5
  %.31 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.32 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.32, i64 0, i32 67
  %.34 = load %FloatExpression.676570* (%TypeChecker.676716*, %Type.676538*, %FloatExpressionNode.676448*)*, %FloatExpression.676570* (%TypeChecker.676716*, %Type.676538*, %FloatExpressionNode.676448*)** %.33, align 8
  %.37 = bitcast %ExpressionNode.676442* %.3 to %FloatExpressionNode.676448*
  %.38 = call %FloatExpression.676570* %.34(%TypeChecker.676716* %.1, %Type.676538* %.2, %FloatExpressionNode.676448* %.37)
  %.39 = bitcast %FloatExpression.676570* %.38 to %Expression.676558*
  ret %Expression.676558* %.39

.5.endif.endif.if:                                ; preds = %.5
  %.47 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.48 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.47, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.48, i64 0, i32 68
  %.50 = load %IntExpression.676566* (%TypeChecker.676716*, %CharExpressionNode.676450*)*, %IntExpression.676566* (%TypeChecker.676716*, %CharExpressionNode.676450*)** %.49, align 8
  %.52 = bitcast %ExpressionNode.676442* %.3 to %CharExpressionNode.676450*
  %.53 = call %IntExpression.676566* %.50(%TypeChecker.676716* %.1, %CharExpressionNode.676450* %.52)
  %.54 = bitcast %IntExpression.676566* %.53 to %Expression.676558*
  ret %Expression.676558* %.54

.5.endif.endif.endif.if:                          ; preds = %.5
  %.62 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.63 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.62, align 8
  %.64 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.63, i64 0, i32 69
  %.65 = load %StringExpression.676572* (%TypeChecker.676716*, %Type.676538*, %StringExpressionNode.676452*)*, %StringExpression.676572* (%TypeChecker.676716*, %Type.676538*, %StringExpressionNode.676452*)** %.64, align 8
  %.68 = bitcast %ExpressionNode.676442* %.3 to %StringExpressionNode.676452*
  %.69 = call %StringExpression.676572* %.65(%TypeChecker.676716* %.1, %Type.676538* %.2, %StringExpressionNode.676452* %.68)
  %.70 = bitcast %StringExpression.676572* %.69 to %Expression.676558*
  ret %Expression.676558* %.70

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.78 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.79 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.78, align 8
  %.80 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.79, i64 0, i32 45
  %.81 = load %ArrayExpression.676578* (%TypeChecker.676716*, %Type.676538*, %ArrayExpressionNode.676458*)*, %ArrayExpression.676578* (%TypeChecker.676716*, %Type.676538*, %ArrayExpressionNode.676458*)** %.80, align 8
  %.84 = bitcast %ExpressionNode.676442* %.3 to %ArrayExpressionNode.676458*
  %.85 = call %ArrayExpression.676578* %.81(%TypeChecker.676716* %.1, %Type.676538* %.2, %ArrayExpressionNode.676458* %.84)
  %.86 = bitcast %ArrayExpression.676578* %.85 to %Expression.676558*
  ret %Expression.676558* %.86

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.94 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.95 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.94, align 8
  %.96 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.95, i64 0, i32 46
  %.97 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %VarAccessExpressionNode.676456*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %VarAccessExpressionNode.676456*)** %.96, align 8
  %.100 = bitcast %ExpressionNode.676442* %.3 to %VarAccessExpressionNode.676456*
  %.101 = call %Expression.676558* %.97(%TypeChecker.676716* %.1, %Type.676538* %.2, %VarAccessExpressionNode.676456* %.100)
  ret %Expression.676558* %.101

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.109 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.110 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.109, align 8
  %.111 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.110, i64 0, i32 51
  %.112 = load %BinaryExpression.676580* (%TypeChecker.676716*, %Type.676538*, %BinaryExpressionNode.676470*)*, %BinaryExpression.676580* (%TypeChecker.676716*, %Type.676538*, %BinaryExpressionNode.676470*)** %.111, align 8
  %.115 = bitcast %ExpressionNode.676442* %.3 to %BinaryExpressionNode.676470*
  %.116 = call %BinaryExpression.676580* %.112(%TypeChecker.676716* %.1, %Type.676538* %.2, %BinaryExpressionNode.676470* %.115)
  %.117 = bitcast %BinaryExpression.676580* %.116 to %Expression.676558*
  ret %Expression.676558* %.117

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.125 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.126 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.125, align 8
  %.127 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.126, i64 0, i32 52
  %.128 = load %UnaryExpression.676582* (%TypeChecker.676716*, %Type.676538*, %UnaryExpressionNode.676474*)*, %UnaryExpression.676582* (%TypeChecker.676716*, %Type.676538*, %UnaryExpressionNode.676474*)** %.127, align 8
  %.131 = bitcast %ExpressionNode.676442* %.3 to %UnaryExpressionNode.676474*
  %.132 = call %UnaryExpression.676582* %.128(%TypeChecker.676716* %.1, %Type.676538* %.2, %UnaryExpressionNode.676474* %.131)
  %.133 = bitcast %UnaryExpression.676582* %.132 to %Expression.676558*
  ret %Expression.676558* %.133

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.141 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.142 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.141, align 8
  %.143 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.142, i64 0, i32 58
  %.144 = load %TernaryExpression.676584* (%TypeChecker.676716*, %Type.676538*, %TernaryExpressionNode.676472*)*, %TernaryExpression.676584* (%TypeChecker.676716*, %Type.676538*, %TernaryExpressionNode.676472*)** %.143, align 8
  %.147 = bitcast %ExpressionNode.676442* %.3 to %TernaryExpressionNode.676472*
  %.148 = call %TernaryExpression.676584* %.144(%TypeChecker.676716* %.1, %Type.676538* %.2, %TernaryExpressionNode.676472* %.147)
  %.149 = bitcast %TernaryExpression.676584* %.148 to %Expression.676558*
  ret %Expression.676558* %.149

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.157 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.158 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.157, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.158, i64 0, i32 53
  %.160 = load %TypeCastExpression.676586* (%TypeChecker.676716*, %TypeCastExpressionNode.676468*)*, %TypeCastExpression.676586* (%TypeChecker.676716*, %TypeCastExpressionNode.676468*)** %.159, align 8
  %.162 = bitcast %ExpressionNode.676442* %.3 to %TypeCastExpressionNode.676468*
  %.163 = call %TypeCastExpression.676586* %.160(%TypeChecker.676716* %.1, %TypeCastExpressionNode.676468* %.162)
  %.164 = bitcast %TypeCastExpression.676586* %.163 to %Expression.676558*
  ret %Expression.676558* %.164

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.172 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.173 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.172, align 8
  %.174 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.173, i64 0, i32 55
  %.175 = load %NewExpression.676588* (%TypeChecker.676716*, %NewExpressionNode.676460*)*, %NewExpression.676588* (%TypeChecker.676716*, %NewExpressionNode.676460*)** %.174, align 8
  %.177 = bitcast %ExpressionNode.676442* %.3 to %NewExpressionNode.676460*
  %.178 = call %NewExpression.676588* %.175(%TypeChecker.676716* %.1, %NewExpressionNode.676460* %.177)
  %.179 = bitcast %NewExpression.676588* %.178 to %Expression.676558*
  ret %Expression.676558* %.179

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5
  %.187 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.188 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.187, align 8
  %.189 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.188, i64 0, i32 57
  %.190 = load %MemberExpression.676606* (%TypeChecker.676716*, %Type.676538*, %MemberExpressionNode.676464*)*, %MemberExpression.676606* (%TypeChecker.676716*, %Type.676538*, %MemberExpressionNode.676464*)** %.189, align 8
  %.193 = bitcast %ExpressionNode.676442* %.3 to %MemberExpressionNode.676464*
  %.194 = call %MemberExpression.676606* %.190(%TypeChecker.676716* %.1, %Type.676538* %.2, %MemberExpressionNode.676464* %.193)
  %.195 = bitcast %MemberExpression.676606* %.194 to %Expression.676558*
  ret %Expression.676558* %.195

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5
  %.203 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.204 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.203, align 8
  %.205 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.204, i64 0, i32 60
  %.206 = load %IndexExpression.676590* (%TypeChecker.676716*, %Type.676538*, %ExpressionIndexNode.676462*)*, %IndexExpression.676590* (%TypeChecker.676716*, %Type.676538*, %ExpressionIndexNode.676462*)** %.205, align 8
  %.209 = bitcast %ExpressionNode.676442* %.3 to %ExpressionIndexNode.676462*
  %.210 = call %IndexExpression.676590* %.206(%TypeChecker.676716* %.1, %Type.676538* %.2, %ExpressionIndexNode.676462* %.209)
  %.211 = bitcast %IndexExpression.676590* %.210 to %Expression.676558*
  ret %Expression.676558* %.211

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5
  %.219 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.220 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.219, align 8
  %.221 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.220, i64 0, i32 64
  %.222 = load %CallExpression.676592* (%TypeChecker.676716*, %Type.676538*, %CallExpressionNode.676466*)*, %CallExpression.676592* (%TypeChecker.676716*, %Type.676538*, %CallExpressionNode.676466*)** %.221, align 8
  %.225 = bitcast %ExpressionNode.676442* %.3 to %CallExpressionNode.676466*
  %.226 = call %CallExpression.676592* %.222(%TypeChecker.676716* %.1, %Type.676538* %.2, %CallExpressionNode.676466* %.225)
  %.227 = bitcast %CallExpression.676592* %.226 to %Expression.676558*
  ret %Expression.676558* %.227

.5.endif.endif.endif.endi...endif.1:              ; preds = %.5
  ret %Expression.676558* null
}

define %Expression.676558* @TypeChecker_check_condition(%TypeChecker.676716* %.1, %ExpressionNode.676442* %.2) {
.4:
  %.7 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.8 = bitcast i8* %.7 to %BooleanType.676540*
  %.9 = bitcast i8* %.7 to %BooleanType_vtable_ty.676541**
  store %BooleanType_vtable_ty.676541* @BooleanType_vtable_data, %BooleanType_vtable_ty.676541** %.9, align 8
  call void @BooleanType_constructor(%BooleanType.676540* %.8)
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.15, i64 0, i32 70
  %.17 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.16, align 8
  %.18 = call %Type.676538* @Type_unknown()
  %.20 = call %Expression.676558* %.17(%TypeChecker.676716* %.1, %Type.676538* %.18, %ExpressionNode.676442* %.2)
  %.24 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.24, i64 0, i32 17
  %.26 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.25, align 8
  %.27 = call i1 %.26(%TypeChecker.676716* %.1)
  br i1 %.27, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %true_block, %.4.endif, %.4
  %merge = phi %Expression.676558* [ null, %.4 ], [ %.39, %true_block ], [ %.20, %.4.endif ]
  ret %Expression.676558* %merge

.4.endif:                                         ; preds = %.4
  %.31 = getelementptr inbounds %Expression.676558, %Expression.676558* %.20, i64 0, i32 4
  %.32 = load %Type.676538*, %Type.676538** %.31, align 8
  %.33 = call i1 @is_bool(%Type.676538* %.32)
  br i1 %.33, label %.4.if, label %true_block

true_block:                                       ; preds = %.4.endif
  %.38 = bitcast i8* %.7 to %Type.676538*
  %.39 = call %Expression.676558* @cast_exp_to_type(%Expression.676558* %.20, %Type.676538* %.38)
  br label %.4.if
}

define noalias %IfStatement.676614* @TypeChecker_check_if_stamement(%TypeChecker.676716* %.1, %IfStatementNode.676476* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 71
  %.11 = load %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)** %.10, align 8
  %.13 = getelementptr inbounds %IfStatementNode.676476, %IfStatementNode.676476* %.2, i64 0, i32 3
  %.14 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.13, align 8
  %.15 = call %Expression.676558* %.11(%TypeChecker.676716* %.1, %ExpressionNode.676442* %.14)
  %.19 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.20 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.19, i64 0, i32 81
  %.21 = load %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)** %.20, align 8
  %.23 = getelementptr inbounds %IfStatementNode.676476, %IfStatementNode.676476* %.2, i64 0, i32 4
  %.24 = load %BlockNode.676438*, %BlockNode.676438** %.23, align 8
  %.25 = call %Block.676610* %.21(%TypeChecker.676716* %.1, %BlockNode.676438* %.24)
  %.28 = getelementptr inbounds %IfStatementNode.676476, %IfStatementNode.676476* %.2, i64 0, i32 5
  %0 = bitcast %BlockNode.676438** %.28 to i64*
  %.291 = load i64, i64* %0, align 8
  %.30 = trunc i64 %.291 to i32
  %.32.not = icmp eq i32 %.30, 0
  br i1 %.32.not, label %end, label %true_block

true_block:                                       ; preds = %.4
  %.36 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.37 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.36, i64 0, i32 81
  %.38 = load %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)** %.37, align 8
  %.41 = load %BlockNode.676438*, %BlockNode.676438** %.28, align 8
  %.42 = call %Block.676610* %.38(%TypeChecker.676716* %.1, %BlockNode.676438* %.41)
  br label %end

end:                                              ; preds = %.4, %true_block
  %.45 = phi %Block.676610* [ %.42, %true_block ], [ null, %.4 ]
  %.50 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.51 = bitcast i8* %.50 to %IfStatement.676614*
  %.52 = bitcast i8* %.50 to %IfStatement_vtable_ty.676615**
  store %IfStatement_vtable_ty.676615* @IfStatement_vtable_data, %IfStatement_vtable_ty.676615** %.52, align 8
  call void @IfStatement_constructor(%IfStatement.676614* %.51, %Expression.676558* %.15, %Block.676610* %.25, %Block.676610* %.45)
  ret %IfStatement.676614* %.51
}

define noalias %VarDeclaration.676616* @TypeChecker_check_var_declaration(%TypeChecker.676716* %.1, %VarDeclarationStatement.676484* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.2, i64 0, i32 3
  %.9 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.9, i64 0, i32 3
  %.11 = load %string.676378*, %string.676378** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.15, i64 0, i32 12
  %.17 = load i1 (%TypeChecker.676716*, %string.676378*)*, i1 (%TypeChecker.676716*, %string.676378*)** %.16, align 8
  %.19 = call i1 %.17(%TypeChecker.676716* %.1, %string.676378* %.11)
  %.23 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.24 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.23, i64 0, i32 16
  %.25 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.24, align 8
  %.27 = getelementptr inbounds %string.676378, %string.676378* %.11, i64 0, i32 0
  %.28 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.27, align 8
  %.29 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.28, i64 0, i32 11
  %.30 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.29, align 8
  %.31 = call i8* %.30(%string.676378* %.11)
  %.33 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.355, i64 0, i64 0), i8* %.31)
  %.35 = call i8* @malloc(i64 %.33)
  %.36 = call i64 (i8*, i8*, ...) @sprintf(i8* %.35, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.355, i64 0, i64 0), i8* %.31)
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  %.41 = getelementptr inbounds i8, i8* %.37, i64 8
  %0 = bitcast i8* %.41 to i8**
  store i8* %.35, i8** %0, align 8
  %.43 = getelementptr inbounds i8, i8* %.37, i64 16
  %1 = bitcast i8* %.43 to i64*
  store i64 %.33, i64* %1, align 8
  %.45 = getelementptr inbounds i8, i8* %.37, i64 24
  %2 = bitcast i8* %.45 to i64*
  store i64 %.33, i64* %2, align 8
  %.49 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.50 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.49, i64 0, i32 2
  %.51 = load %FloRange.676382*, %FloRange.676382** %.50, align 8
  call void %.25(%TypeChecker.676716* %.1, i64 1, %string.676378* %.38, %FloRange.676382* %.51)
  ret %VarDeclaration.676616* null

.4.endif:                                         ; preds = %.4
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.23, i64 0, i32 2
  %.58 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.57, align 8
  %.59 = call %Scope.676628* %.58(%TypeChecker.676716* %.1)
  %.62 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.2, i64 0, i32 4
  %3 = bitcast %TypeNode.676426** %.62 to i64*
  %.631 = load i64, i64* %3, align 8
  %.64 = trunc i64 %.631 to i32
  %.66.not = icmp eq i32 %.64, 0
  br i1 %.66.not, label %false_block, label %true_block

true_block:                                       ; preds = %.4.endif
  %.70 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.71 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.70, i64 0, i32 44
  %.72 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.71, align 8
  %.75 = load %TypeNode.676426*, %TypeNode.676426** %.62, align 8
  %.76 = call %Type.676538* %.72(%TypeChecker.676716* %.1, %TypeNode.676426* %.75)
  br label %end

false_block:                                      ; preds = %.4.endif
  %.78 = call %Type.676538* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.80 = phi %Type.676538* [ %.76, %true_block ], [ %.78, %false_block ]
  %var_type = alloca %Type.676538*, align 8
  store %Type.676538* %.80, %Type.676538** %var_type, align 8
  %.84 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.85 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.84, i64 0, i32 17
  %.86 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.85, align 8
  %.87 = call i1 %.86(%TypeChecker.676716* %.1)
  br i1 %.87, label %end.if, label %end.endif

end.if:                                           ; preds = %end.1, %end
  ret %VarDeclaration.676616* null

end.endif:                                        ; preds = %end
  %.91 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.2, i64 0, i32 5
  %4 = bitcast %ExpressionNode.676442** %.91 to i64*
  %.922 = load i64, i64* %4, align 8
  %.93 = trunc i64 %.922 to i32
  %.95 = icmp eq i32 %.93, 0
  %.97 = getelementptr inbounds %Type.676538, %Type.676538* %.80, i64 0, i32 1
  %.98 = load i64, i64* %.97, align 8
  %.99 = icmp eq i64 %.98, 21
  %.100 = and i1 %.95, %.99
  br i1 %.100, label %end.endif.if, label %end.endif.endif

end.endif.if:                                     ; preds = %end.endif
  %.104 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.105 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.104, i64 0, i32 16
  %.106 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.105, align 8
  %.108 = getelementptr inbounds %string.676378, %string.676378* %.11, i64 0, i32 0
  %.109 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.108, align 8
  %.110 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.109, i64 0, i32 11
  %.111 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.110, align 8
  %.112 = call i8* %.111(%string.676378* %.11)
  %.114 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.356, i64 0, i64 0), i8* %.112)
  %.116 = call i8* @malloc(i64 %.114)
  %.117 = call i64 (i8*, i8*, ...) @sprintf(i8* %.116, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.356, i64 0, i64 0), i8* %.112)
  %.118 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.119 = bitcast i8* %.118 to %string.676378*
  %.120 = bitcast i8* %.118 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.120, align 8
  %.122 = getelementptr inbounds i8, i8* %.118, i64 8
  %5 = bitcast i8* %.122 to i8**
  store i8* %.116, i8** %5, align 8
  %.124 = getelementptr inbounds i8, i8* %.118, i64 16
  %6 = bitcast i8* %.124 to i64*
  store i64 %.114, i64* %6, align 8
  %.126 = getelementptr inbounds i8, i8* %.118, i64 24
  %7 = bitcast i8* %.126 to i64*
  store i64 %.114, i64* %7, align 8
  %.130 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.131 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.130, i64 0, i32 2
  %.132 = load %FloRange.676382*, %FloRange.676382** %.131, align 8
  call void %.106(%TypeChecker.676716* %.1, i64 4, %string.676378* %.119, %FloRange.676382* %.132)
  ret %VarDeclaration.676616* null

end.endif.endif:                                  ; preds = %end.endif
  br i1 %.95, label %end.1, label %true_block.1

true_block.1:                                     ; preds = %end.endif.endif
  %.144 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.145 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.144, i64 0, i32 70
  %.146 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.145, align 8
  %.150 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.91, align 8
  %.151 = call %Expression.676558* %.146(%TypeChecker.676716* %.1, %Type.676538* %.80, %ExpressionNode.676442* %.150)
  br label %end.1

end.1:                                            ; preds = %end.endif.endif, %true_block.1
  %.154 = phi %Expression.676558* [ %.151, %true_block.1 ], [ null, %end.endif.endif ]
  %value = alloca %Expression.676558*, align 8
  store %Expression.676558* %.154, %Expression.676558** %value, align 8
  %.158 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.159 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.158, i64 0, i32 17
  %.160 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.159, align 8
  %.161 = call i1 %.160(%TypeChecker.676716* %.1)
  br i1 %.161, label %end.if, label %end.1.endif

end.1.endif:                                      ; preds = %end.1
  %8 = bitcast %Expression.676558** %value to i64*
  %.1644 = load i64, i64* %8, align 8
  %.165 = trunc i64 %.1644 to i32
  %.167.not = icmp eq i32 %.165, 0
  br i1 %.167.not, label %end.1.endif.endif, label %end.1.endif.if

end.1.endif.if:                                   ; preds = %end.1.endif
  %.170 = call i1 @is_null(%Expression.676558* %.154)
  %.172 = getelementptr inbounds %Expression.676558, %Expression.676558* %.154, i64 0, i32 4
  %.173 = load %Type.676538*, %Type.676538** %.172, align 8
  %.174 = getelementptr inbounds %Type.676538, %Type.676538* %.173, i64 0, i32 1
  %.175 = load i64, i64* %.174, align 8
  %.176 = icmp eq i64 %.175, 21
  %.177 = and i1 %.170, %.176
  br i1 %.177, label %end.1.endif.if.if, label %end.1.endif.if.endif

end.1.endif.endif:                                ; preds = %end.1.endif.if.endif.endif, %end.1.endif.if.endif.endif.if, %end.1.endif
  %.272 = getelementptr inbounds %Scope.676628, %Scope.676628* %.59, i64 0, i32 2
  %.273 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.272, align 8
  %.274 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.273, i64 0, i32 0
  %.275 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.274, align 8
  %.276 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.275, i64 0, i32 3
  %.277 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.276, align 8
  %.279 = call %VarId.676596* %.277(%"Map<string, VarId>.676630"* %.273, %string.676378* %.11)
  %9 = ptrtoint %VarId.676596* %.279 to i64
  %.280 = trunc i64 %9 to i32
  %.282.not = icmp eq i32 %.280, 0
  %.319 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  br i1 %.282.not, label %end.1.endif.endif.endif, label %end.1.endif.endif.if

end.1.endif.if.if:                                ; preds = %end.1.endif.if
  %.181 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.182 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.181, i64 0, i32 16
  %.183 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.182, align 8
  %.184 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.184 to %string.676378*
  %.185.repack = bitcast i8* %.184 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.185.repack, align 8
  %.185.repack6 = getelementptr inbounds i8, i8* %.184, i64 8
  %10 = bitcast i8* %.185.repack6 to i8**
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.357, i64 0, i64 0), i8** %10, align 8
  %.185.repack7 = getelementptr inbounds i8, i8* %.184, i64 16
  %11 = bitcast i8* %.185.repack7 to i64*
  store i64 69, i64* %11, align 8
  %.185.repack8 = getelementptr inbounds i8, i8* %.184, i64 24
  %12 = bitcast i8* %.185.repack8 to i64*
  store i64 69, i64* %12, align 8
  %.188 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.2, i64 0, i32 1
  %.189 = load %FloRange.676382*, %FloRange.676382** %.188, align 8
  call void %.183(%TypeChecker.676716* %.1, i64 5, %string.676378* %.185, %FloRange.676382* %.189)
  ret %VarDeclaration.676616* null

end.1.endif.if.endif:                             ; preds = %end.1.endif.if
  %.194 = load i64, i64* %.97, align 8
  %.195 = icmp ne i64 %.194, 21
  %.198 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.199 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.198, i64 0, i32 9
  %.200 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.199, align 8
  %.205 = call i1 %.200(%TypeChecker.676716* %.1, %Type.676538* %.80, %Type.676538* %.173)
  %.206 = xor i1 %.205, true
  %.207 = and i1 %.195, %.206
  br i1 %.207, label %end.1.endif.if.endif.if, label %end.1.endif.if.endif.endif

end.1.endif.if.endif.if:                          ; preds = %end.1.endif.if.endif
  %.211 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.212 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.211, i64 0, i32 16
  %.213 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.212, align 8
  %.217 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.211, i64 0, i32 10
  %.218 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.217, align 8
  %.220 = call %string.676378* %.218(%TypeChecker.676716* %.1, %Type.676538* %.80)
  %.223 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.224 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.223, i64 0, i32 10
  %.225 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.224, align 8
  %.228 = load %Type.676538*, %Type.676538** %.172, align 8
  %.229 = call %string.676378* %.225(%TypeChecker.676716* %.1, %Type.676538* %.228)
  %.230 = getelementptr inbounds %string.676378, %string.676378* %.220, i64 0, i32 0
  %.231 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.230, align 8
  %.232 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.231, i64 0, i32 11
  %.233 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.232, align 8
  %.234 = call i8* %.233(%string.676378* %.220)
  %.235 = getelementptr inbounds %string.676378, %string.676378* %.229, i64 0, i32 0
  %.236 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.235, align 8
  %.237 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.236, i64 0, i32 11
  %.238 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.237, align 8
  %.239 = call i8* %.238(%string.676378* %.229)
  %.241 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.358, i64 0, i64 0), i8* %.234, i8* %.239)
  %.243 = call i8* @malloc(i64 %.241)
  %.244 = call i64 (i8*, i8*, ...) @sprintf(i8* %.243, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.358, i64 0, i64 0), i8* %.234, i8* %.239)
  %.245 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.246 = bitcast i8* %.245 to %string.676378*
  %.247 = bitcast i8* %.245 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.247, align 8
  %.249 = getelementptr inbounds i8, i8* %.245, i64 8
  %13 = bitcast i8* %.249 to i8**
  store i8* %.243, i8** %13, align 8
  %.251 = getelementptr inbounds i8, i8* %.245, i64 16
  %14 = bitcast i8* %.251 to i64*
  store i64 %.241, i64* %14, align 8
  %.253 = getelementptr inbounds i8, i8* %.245, i64 24
  %15 = bitcast i8* %.253 to i64*
  store i64 %.241, i64* %15, align 8
  %.256 = getelementptr inbounds %VarDeclarationStatement.676484, %VarDeclarationStatement.676484* %.2, i64 0, i32 1
  %.257 = load %FloRange.676382*, %FloRange.676382** %.256, align 8
  call void %.213(%TypeChecker.676716* %.1, i64 5, %string.676378* %.246, %FloRange.676382* %.257)
  ret %VarDeclaration.676616* null

end.1.endif.if.endif.endif:                       ; preds = %end.1.endif.if.endif
  %.262 = load i64, i64* %.97, align 8
  %.263 = icmp eq i64 %.262, 21
  br i1 %.263, label %end.1.endif.if.endif.endif.if, label %end.1.endif.endif

end.1.endif.if.endif.endif.if:                    ; preds = %end.1.endif.if.endif.endif
  %16 = bitcast %Type.676538** %.172 to i64*
  %.2675 = load i64, i64* %16, align 8
  %17 = bitcast %Type.676538** %var_type to i64*
  store i64 %.2675, i64* %17, align 8
  br label %end.1.endif.endif

end.1.endif.endif.if:                             ; preds = %end.1.endif.endif
  %.287 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.319, i64 0, i32 16
  %.288 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.287, align 8
  %.290 = getelementptr inbounds %string.676378, %string.676378* %.11, i64 0, i32 0
  %.291 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.290, align 8
  %.292 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.291, i64 0, i32 11
  %.293 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.292, align 8
  %.294 = call i8* %.293(%string.676378* %.11)
  %.296 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.359, i64 0, i64 0), i8* %.294)
  %.298 = call i8* @malloc(i64 %.296)
  %.299 = call i64 (i8*, i8*, ...) @sprintf(i8* %.298, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.359, i64 0, i64 0), i8* %.294)
  %.300 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.301 = bitcast i8* %.300 to %string.676378*
  %.302 = bitcast i8* %.300 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.302, align 8
  %.304 = getelementptr inbounds i8, i8* %.300, i64 8
  %18 = bitcast i8* %.304 to i8**
  store i8* %.298, i8** %18, align 8
  %.306 = getelementptr inbounds i8, i8* %.300, i64 16
  %19 = bitcast i8* %.306 to i64*
  store i64 %.296, i64* %19, align 8
  %.308 = getelementptr inbounds i8, i8* %.300, i64 24
  %20 = bitcast i8* %.308 to i64*
  store i64 %.296, i64* %20, align 8
  %.312 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.313 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.312, i64 0, i32 2
  %.314 = load %FloRange.676382*, %FloRange.676382** %.313, align 8
  call void %.288(%TypeChecker.676716* %.1, i64 1, %string.676378* %.301, %FloRange.676382* %.314)
  ret %VarDeclaration.676616* null

end.1.endif.endif.endif:                          ; preds = %end.1.endif.endif
  %.320 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.319, i64 0, i32 22
  %.321 = load %Var.676660* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)*, %Var.676660* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)** %.320, align 8
  %.324 = load %Type.676538*, %Type.676538** %var_type, align 8
  %.325 = call %Var.676660* %.321(%TypeChecker.676716* %.1, %string.676378* %.11, %Expression.676558* %.154, %Type.676538* %.324)
  %.329 = getelementptr inbounds %Var.676660, %Var.676660* %.325, i64 0, i32 2
  %.330 = load %VarId.676596*, %VarId.676596** %.329, align 8
  %.331 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.332 = bitcast i8* %.331 to %VarDeclaration.676616*
  %.333 = bitcast i8* %.331 to %VarDeclaration_vtable_ty.676617**
  store %VarDeclaration_vtable_ty.676617* @VarDeclaration_vtable_data, %VarDeclaration_vtable_ty.676617** %.333, align 8
  call void @VarDeclaration_constructor(%VarDeclaration.676616* %.332, %string.676378* %.11, %VarId.676596* %.330)
  ret %VarDeclaration.676616* %.332
}

define noalias %ConstDeclaration.676618* @TypeChecker_check_const_declaration(%TypeChecker.676716* %.1, %ConstDeclarationStatement.676486* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ConstDeclarationStatement.676486, %ConstDeclarationStatement.676486* %.2, i64 0, i32 3
  %.9 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.10 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.9, i64 0, i32 3
  %.11 = load %string.676378*, %string.676378** %.10, align 8
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.15 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.16 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.15, i64 0, i32 2
  %.17 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.16, align 8
  %.18 = call %Scope.676628* %.17(%TypeChecker.676716* %.1)
  %.22 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.23 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.22, i64 0, i32 12
  %.24 = load i1 (%TypeChecker.676716*, %string.676378*)*, i1 (%TypeChecker.676716*, %string.676378*)** %.23, align 8
  %.26 = call i1 %.24(%TypeChecker.676716* %.1, %string.676378* %.11)
  %.28 = getelementptr inbounds %Scope.676628, %Scope.676628* %.18, i64 0, i32 2
  %.29 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.28, align 8
  %.30 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.29, i64 0, i32 0
  %.31 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.30, align 8
  %.32 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.31, i64 0, i32 3
  %.33 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.32, align 8
  %.35 = call %VarId.676596* %.33(%"Map<string, VarId>.676630"* %.29, %string.676378* %.11)
  %0 = ptrtoint %VarId.676596* %.35 to i64
  %.36 = trunc i64 %0 to i32
  %.38 = icmp ne i32 %.36, 0
  %.39 = or i1 %.26, %.38
  br i1 %.39, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.43 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.43, i64 0, i32 16
  %.45 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.44, align 8
  %.47 = getelementptr inbounds %string.676378, %string.676378* %.11, i64 0, i32 0
  %.48 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.47, align 8
  %.49 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.48, i64 0, i32 11
  %.50 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.49, align 8
  %.51 = call i8* %.50(%string.676378* %.11)
  %.53 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.355, i64 0, i64 0), i8* %.51)
  %.55 = call i8* @malloc(i64 %.53)
  %.56 = call i64 (i8*, i8*, ...) @sprintf(i8* %.55, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.355, i64 0, i64 0), i8* %.51)
  %.57 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.58 = bitcast i8* %.57 to %string.676378*
  %.59 = bitcast i8* %.57 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.59, align 8
  %.61 = getelementptr inbounds i8, i8* %.57, i64 8
  %1 = bitcast i8* %.61 to i8**
  store i8* %.55, i8** %1, align 8
  %.63 = getelementptr inbounds i8, i8* %.57, i64 16
  %2 = bitcast i8* %.63 to i64*
  store i64 %.53, i64* %2, align 8
  %.65 = getelementptr inbounds i8, i8* %.57, i64 24
  %3 = bitcast i8* %.65 to i64*
  store i64 %.53, i64* %3, align 8
  %.69 = load %IdentifierToken.676420*, %IdentifierToken.676420** %.8, align 8
  %.70 = getelementptr inbounds %IdentifierToken.676420, %IdentifierToken.676420* %.69, i64 0, i32 2
  %.71 = load %FloRange.676382*, %FloRange.676382** %.70, align 8
  call void %.45(%TypeChecker.676716* %.1, i64 1, %string.676378* %.58, %FloRange.676382* %.71)
  ret %ConstDeclaration.676618* null

.4.endif:                                         ; preds = %.4
  %.75 = getelementptr inbounds %ConstDeclarationStatement.676486, %ConstDeclarationStatement.676486* %.2, i64 0, i32 4
  %4 = bitcast %TypeNode.676426** %.75 to i64*
  %.761 = load i64, i64* %4, align 8
  %.77 = trunc i64 %.761 to i32
  %.79.not = icmp eq i32 %.77, 0
  br i1 %.79.not, label %false_block, label %true_block

true_block:                                       ; preds = %.4.endif
  %.83 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.84 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.83, i64 0, i32 44
  %.85 = load %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)*, %Type.676538* (%TypeChecker.676716*, %TypeNode.676426*)** %.84, align 8
  %.88 = load %TypeNode.676426*, %TypeNode.676426** %.75, align 8
  %.89 = call %Type.676538* %.85(%TypeChecker.676716* %.1, %TypeNode.676426* %.88)
  br label %end

false_block:                                      ; preds = %.4.endif
  %.91 = call %Type.676538* @Type_unknown()
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.93 = phi %Type.676538* [ %.89, %true_block ], [ %.91, %false_block ]
  %.97 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.98 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.97, i64 0, i32 17
  %.99 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.98, align 8
  %.100 = call i1 %.99(%TypeChecker.676716* %.1)
  br i1 %.100, label %end.if, label %end.endif

end.if:                                           ; preds = %end.endif, %end
  ret %ConstDeclaration.676618* null

end.endif:                                        ; preds = %end
  %.105 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.106 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.105, i64 0, i32 70
  %.107 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.106, align 8
  %.110 = getelementptr inbounds %ConstDeclarationStatement.676486, %ConstDeclarationStatement.676486* %.2, i64 0, i32 5
  %.111 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.110, align 8
  %.112 = call %Expression.676558* %.107(%TypeChecker.676716* %.1, %Type.676538* %.93, %ExpressionNode.676442* %.111)
  %.116 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.117 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.116, i64 0, i32 17
  %.118 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.117, align 8
  %.119 = call i1 %.118(%TypeChecker.676716* %.1)
  br i1 %.119, label %end.if, label %end.endif.endif

end.endif.endif:                                  ; preds = %end.endif
  %.123 = getelementptr inbounds %Expression.676558, %Expression.676558* %.112, i64 0, i32 2
  %.124 = load i1, i1* %.123, align 1
  br i1 %.124, label %end.endif.endif.endif, label %end.endif.endif.if

end.endif.endif.if:                               ; preds = %end.endif.endif
  %.129 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.130 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.129, i64 0, i32 16
  %.131 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.130, align 8
  %.132 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.133 = bitcast i8* %.132 to %string.676378*
  %.133.repack = bitcast i8* %.132 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.133.repack, align 8
  %.133.repack6 = getelementptr inbounds i8, i8* %.132, i64 8
  %5 = bitcast i8* %.133.repack6 to i8**
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.360, i64 0, i64 0), i8** %5, align 8
  %.133.repack7 = getelementptr inbounds i8, i8* %.132, i64 16
  %6 = bitcast i8* %.133.repack7 to i64*
  store i64 48, i64* %6, align 8
  %.133.repack8 = getelementptr inbounds i8, i8* %.132, i64 24
  %7 = bitcast i8* %.133.repack8 to i64*
  store i64 48, i64* %7, align 8
  %.137 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.110, align 8
  %.138 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.137, i64 0, i32 1
  %.139 = load %FloRange.676382*, %FloRange.676382** %.138, align 8
  call void %.131(%TypeChecker.676716* %.1, i64 4, %string.676378* %.133, %FloRange.676382* %.139)
  ret %ConstDeclaration.676618* null

end.endif.endif.endif:                            ; preds = %end.endif.endif
  %.143 = call i1 @is_null(%Expression.676558* %.112)
  br i1 %.143, label %end.endif.endif.endif.if, label %end.endif.endif.endif.endif

end.endif.endif.endif.if:                         ; preds = %end.endif.endif.endif
  %.147 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.148 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.147, i64 0, i32 16
  %.149 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.148, align 8
  %.150 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.151 = bitcast i8* %.150 to %string.676378*
  %.151.repack = bitcast i8* %.150 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.151.repack, align 8
  %.151.repack3 = getelementptr inbounds i8, i8* %.150, i64 8
  %8 = bitcast i8* %.151.repack3 to i8**
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @str.357, i64 0, i64 0), i8** %8, align 8
  %.151.repack4 = getelementptr inbounds i8, i8* %.150, i64 16
  %9 = bitcast i8* %.151.repack4 to i64*
  store i64 69, i64* %9, align 8
  %.151.repack5 = getelementptr inbounds i8, i8* %.150, i64 24
  %10 = bitcast i8* %.151.repack5 to i64*
  store i64 69, i64* %10, align 8
  %.154 = getelementptr inbounds %ConstDeclarationStatement.676486, %ConstDeclarationStatement.676486* %.2, i64 0, i32 1
  %.155 = load %FloRange.676382*, %FloRange.676382** %.154, align 8
  call void %.149(%TypeChecker.676716* %.1, i64 5, %string.676378* %.151, %FloRange.676382* %.155)
  ret %ConstDeclaration.676618* null

end.endif.endif.endif.endif:                      ; preds = %end.endif.endif.endif
  %.159 = getelementptr inbounds %Type.676538, %Type.676538* %.93, i64 0, i32 1
  %.160 = load i64, i64* %.159, align 8
  %.161 = icmp ne i64 %.160, 21
  %.164 = getelementptr inbounds %Expression.676558, %Expression.676558* %.112, i64 0, i32 4
  %11 = bitcast %Type.676538** %.164 to i64*
  %.1652 = load i64, i64* %11, align 8
  %12 = ptrtoint %Type.676538* %.93 to i64
  %.166 = trunc i64 %12 to i32
  %.167 = trunc i64 %.1652 to i32
  %.168 = icmp ne i32 %.166, %.167
  %.169 = and i1 %.161, %.168
  %.173 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  br i1 %.169, label %end.endif.endif.endif.endif.if, label %end.endif.endif.endif.endif.endif

end.endif.endif.endif.endif.if:                   ; preds = %end.endif.endif.endif.endif
  %.174 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.173, i64 0, i32 16
  %.175 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.174, align 8
  %.179 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.173, i64 0, i32 10
  %.180 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.179, align 8
  %.182 = call %string.676378* %.180(%TypeChecker.676716* %.1, %Type.676538* %.93)
  %.185 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.14, align 8
  %.186 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.185, i64 0, i32 10
  %.187 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.186, align 8
  %.190 = load %Type.676538*, %Type.676538** %.164, align 8
  %.191 = call %string.676378* %.187(%TypeChecker.676716* %.1, %Type.676538* %.190)
  %.192 = getelementptr inbounds %string.676378, %string.676378* %.182, i64 0, i32 0
  %.193 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.192, align 8
  %.194 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.193, i64 0, i32 11
  %.195 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.194, align 8
  %.196 = call i8* %.195(%string.676378* %.182)
  %.197 = getelementptr inbounds %string.676378, %string.676378* %.191, i64 0, i32 0
  %.198 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.197, align 8
  %.199 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.198, i64 0, i32 11
  %.200 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.199, align 8
  %.201 = call i8* %.200(%string.676378* %.191)
  %.203 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.358, i64 0, i64 0), i8* %.196, i8* %.201)
  %.205 = call i8* @malloc(i64 %.203)
  %.206 = call i64 (i8*, i8*, ...) @sprintf(i8* %.205, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.358, i64 0, i64 0), i8* %.196, i8* %.201)
  %.207 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.208 = bitcast i8* %.207 to %string.676378*
  %.209 = bitcast i8* %.207 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.209, align 8
  %.211 = getelementptr inbounds i8, i8* %.207, i64 8
  %13 = bitcast i8* %.211 to i8**
  store i8* %.205, i8** %13, align 8
  %.213 = getelementptr inbounds i8, i8* %.207, i64 16
  %14 = bitcast i8* %.213 to i64*
  store i64 %.203, i64* %14, align 8
  %.215 = getelementptr inbounds i8, i8* %.207, i64 24
  %15 = bitcast i8* %.215 to i64*
  store i64 %.203, i64* %15, align 8
  %.218 = getelementptr inbounds %ConstDeclarationStatement.676486, %ConstDeclarationStatement.676486* %.2, i64 0, i32 1
  %.219 = load %FloRange.676382*, %FloRange.676382** %.218, align 8
  call void %.175(%TypeChecker.676716* %.1, i64 5, %string.676378* %.208, %FloRange.676382* %.219)
  ret %ConstDeclaration.676618* null

end.endif.endif.endif.endif.endif:                ; preds = %end.endif.endif.endif.endif
  %.225 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.173, i64 0, i32 23
  %.226 = load %Const.676662* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)*, %Const.676662* (%TypeChecker.676716*, %string.676378*, %Expression.676558*, %Type.676538*)** %.225, align 8
  %.231 = load %Type.676538*, %Type.676538** %.164, align 8
  %.232 = call %Const.676662* %.226(%TypeChecker.676716* %.1, %string.676378* %.11, %Expression.676558* %.112, %Type.676538* %.231)
  %.236 = getelementptr inbounds %Const.676662, %Const.676662* %.232, i64 0, i32 2
  %.237 = load %ConstId.676602*, %ConstId.676602** %.236, align 8
  %.238 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.239 = bitcast i8* %.238 to %ConstDeclaration.676618*
  %.240 = bitcast i8* %.238 to %ConstDeclaration_vtable_ty.676619**
  store %ConstDeclaration_vtable_ty.676619* @ConstDeclaration_vtable_data, %ConstDeclaration_vtable_ty.676619** %.240, align 8
  call void @ConstDeclaration_constructor(%ConstDeclaration.676618* %.239, %string.676378* %.11, %ConstId.676602* %.237)
  ret %ConstDeclaration.676618* %.239
}

define noalias %ForStatement.676620* @TypeChecker_check_for_statement(%TypeChecker.676716* %.1, %ForStatementNode.676480* nocapture readonly %.2) {
.4:
  %.7 = call dereferenceable_or_null(48) i8* @malloc(i64 48)
  %.8 = bitcast i8* %.7 to %ForStatement.676620*
  %.9 = bitcast i8* %.7 to %ForStatement_vtable_ty.676621**
  store %ForStatement_vtable_ty.676621* @ForStatement_vtable_data, %ForStatement_vtable_ty.676621** %.9, align 8
  call void @ForStatement_constructor(%ForStatement.676620* %.8)
  %.14 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 8
  %.15 = load i1, i1* %.14, align 1
  %.18 = getelementptr inbounds %ForStatementNode.676480, %ForStatementNode.676480* %.2, i64 0, i32 7
  %.19 = load i64, i64* %.18, align 8
  %.20 = icmp eq i64 %.19, 0
  br i1 %.20, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.23 = getelementptr inbounds %ForStatementNode.676480, %ForStatementNode.676480* %.2, i64 0, i32 3
  %0 = bitcast %StatementNode.676436** %.23 to i64*
  %.241 = load i64, i64* %0, align 8
  %.25 = trunc i64 %.241 to i32
  %.27.not = icmp eq i32 %.25, 0
  br i1 %.27.not, label %.4.if.endif, label %.4.if.if

.4.endif:                                         ; preds = %.4.if.endif.endif.if, %.4.if.endif.endif, %.4
  store i1 true, i1* %.14, align 1
  %.89 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.90 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.89, align 8
  %.91 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.90, i64 0, i32 81
  %.92 = load %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)** %.91, align 8
  %.94 = getelementptr inbounds %ForStatementNode.676480, %ForStatementNode.676480* %.2, i64 0, i32 9
  %.95 = load %BlockNode.676438*, %BlockNode.676438** %.94, align 8
  %.96 = call %Block.676610* %.92(%TypeChecker.676716* %.1, %BlockNode.676438* %.95)
  %.97 = getelementptr inbounds i8, i8* %.7, i64 40
  %1 = bitcast i8* %.97 to %Block.676610**
  store %Block.676610* %.96, %Block.676610** %1, align 8
  store i1 %.15, i1* %.14, align 1
  ret %ForStatement.676620* %.8

.4.if.if:                                         ; preds = %.4.if
  %.31 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.32 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.31, align 8
  %.33 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.32, i64 0, i32 80
  %.34 = load %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)** %.33, align 8
  %.37 = load %StatementNode.676436*, %StatementNode.676436** %.23, align 8
  %.38 = call %Statement.676550* %.34(%TypeChecker.676716* %.1, %StatementNode.676436* %.37)
  %.39 = getelementptr inbounds i8, i8* %.7, i64 16
  %2 = bitcast i8* %.39 to %Statement.676550**
  store %Statement.676550* %.38, %Statement.676550** %2, align 8
  br label %.4.if.endif

.4.if.endif:                                      ; preds = %.4.if, %.4.if.if
  %.43 = getelementptr inbounds %ForStatementNode.676480, %ForStatementNode.676480* %.2, i64 0, i32 4
  %3 = bitcast %ExpressionNode.676442** %.43 to i64*
  %.442 = load i64, i64* %3, align 8
  %.45 = trunc i64 %.442 to i32
  %.47.not = icmp eq i32 %.45, 0
  br i1 %.47.not, label %.4.if.endif.endif, label %.4.if.endif.if

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.51 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.52 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.51, align 8
  %.53 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.52, i64 0, i32 71
  %.54 = load %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)** %.53, align 8
  %.57 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.43, align 8
  %.58 = call %Expression.676558* %.54(%TypeChecker.676716* %.1, %ExpressionNode.676442* %.57)
  %.59 = getelementptr inbounds i8, i8* %.7, i64 24
  %4 = bitcast i8* %.59 to %Expression.676558**
  store %Expression.676558* %.58, %Expression.676558** %4, align 8
  br label %.4.if.endif.endif

.4.if.endif.endif:                                ; preds = %.4.if.endif, %.4.if.endif.if
  %.63 = getelementptr inbounds %ForStatementNode.676480, %ForStatementNode.676480* %.2, i64 0, i32 5
  %5 = bitcast %ExpressionNode.676442** %.63 to i64*
  %.643 = load i64, i64* %5, align 8
  %.65 = trunc i64 %.643 to i32
  %.67.not = icmp eq i32 %.65, 0
  br i1 %.67.not, label %.4.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.71 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.72 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.71, align 8
  %.73 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.72, i64 0, i32 70
  %.74 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.73, align 8
  %.75 = call %Type.676538* @Type_unknown()
  %.78 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.63, align 8
  %.79 = call %Expression.676558* %.74(%TypeChecker.676716* %.1, %Type.676538* %.75, %ExpressionNode.676442* %.78)
  %.80 = getelementptr inbounds i8, i8* %.7, i64 32
  %6 = bitcast i8* %.80 to %Expression.676558**
  store %Expression.676558* %.79, %Expression.676558** %6, align 8
  br label %.4.endif
}

define noalias %WhileStatement.676622* @TypeChecker_check_while_statment(%TypeChecker.676716* %.1, %WhileStatementNode.676478* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 71
  %.11 = load %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %ExpressionNode.676442*)** %.10, align 8
  %.13 = getelementptr inbounds %WhileStatementNode.676478, %WhileStatementNode.676478* %.2, i64 0, i32 3
  %.14 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.13, align 8
  %.15 = call %Expression.676558* %.11(%TypeChecker.676716* %.1, %ExpressionNode.676442* %.14)
  %.18 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 8
  %.19 = load i1, i1* %.18, align 1
  store i1 true, i1* %.18, align 1
  %.26 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.27 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.26, i64 0, i32 81
  %.28 = load %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)*, %Block.676610* (%TypeChecker.676716*, %BlockNode.676438*)** %.27, align 8
  %.30 = getelementptr inbounds %WhileStatementNode.676478, %WhileStatementNode.676478* %.2, i64 0, i32 4
  %.31 = load %BlockNode.676438*, %BlockNode.676438** %.30, align 8
  %.32 = call %Block.676610* %.28(%TypeChecker.676716* %.1, %BlockNode.676438* %.31)
  store i1 %.19, i1* %.18, align 1
  %.40 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %WhileStatement.676622*
  %.42 = bitcast i8* %.40 to %WhileStatement_vtable_ty.676623**
  store %WhileStatement_vtable_ty.676623* @WhileStatement_vtable_data, %WhileStatement_vtable_ty.676623** %.42, align 8
  call void @WhileStatement_constructor(%WhileStatement.676622* %.41, %Expression.676558* %.15, %Block.676610* %.32)
  ret %WhileStatement.676622* %.41
}

define noalias %Statement.676550* @TypeChecker_check_can_break(%TypeChecker.676716* %.1, %StatementNode.676436* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 8
  %.9 = load i1, i1* %.8, align 1
  br i1 %.9, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.14, i64 0, i32 16
  %.16 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.15, align 8
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.676378*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.18.repack, align 8
  %.18.repack1 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack1 to i8**
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.361, i64 0, i64 0), i8** %0, align 8
  %.18.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack2 to i64*
  store i64 29, i64* %1, align 8
  %.18.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack3 to i64*
  store i64 29, i64* %2, align 8
  %.21 = getelementptr inbounds %StatementNode.676436, %StatementNode.676436* %.2, i64 0, i32 1
  %.22 = load %FloRange.676382*, %FloRange.676382** %.21, align 8
  call void %.16(%TypeChecker.676716* %.1, i64 4, %string.676378* %.18, %FloRange.676382* %.22)
  ret %Statement.676550* null

.4.endif:                                         ; preds = %.4
  %.25 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.26 = bitcast i8* %.25 to %Statement.676550*
  %.27 = bitcast i8* %.25 to %Statement_vtable_ty.676551**
  store %Statement_vtable_ty.676551* @Statement_vtable_data, %Statement_vtable_ty.676551** %.27, align 8
  call void @Statement_constructor(%Statement.676550* %.26, i64 6)
  ret %Statement.676550* %.26
}

define noalias %Statement.676550* @TypeChecker_check_can_continue(%TypeChecker.676716* %.1, %StatementNode.676436* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 8
  %.9 = load i1, i1* %.8, align 1
  br i1 %.9, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.14, i64 0, i32 16
  %.16 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.15, align 8
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.676378*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.18.repack, align 8
  %.18.repack1 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.362, i64 0, i64 0), i8** %0, align 8
  %.18.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack2 to i64*
  store i64 32, i64* %1, align 8
  %.18.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack3 to i64*
  store i64 32, i64* %2, align 8
  %.21 = getelementptr inbounds %StatementNode.676436, %StatementNode.676436* %.2, i64 0, i32 1
  %.22 = load %FloRange.676382*, %FloRange.676382** %.21, align 8
  call void %.16(%TypeChecker.676716* %.1, i64 4, %string.676378* %.18, %FloRange.676382* %.22)
  ret %Statement.676550* null

.4.endif:                                         ; preds = %.4
  %.25 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.26 = bitcast i8* %.25 to %Statement.676550*
  %.27 = bitcast i8* %.25 to %Statement_vtable_ty.676551**
  store %Statement_vtable_ty.676551* @Statement_vtable_data, %Statement_vtable_ty.676551** %.27, align 8
  call void @Statement_constructor(%Statement.676550* %.26, i64 5)
  ret %Statement.676550* %.26
}

define noalias %ReturnStatement.676624* @TypeChecker_check_can_return(%TypeChecker.676716* %.1, %ReturnStatementNode.676482* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %ReturnStatementNode.676482, %ReturnStatementNode.676482* %.2, i64 0, i32 3
  %.9 = load %ExpressionNode.676442*, %ExpressionNode.676442** %.8, align 8
  %.12 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.13 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  %.14 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.13, i64 0, i32 5
  %.15 = load %FunctionType.676544* (%TypeChecker.676716*)*, %FunctionType.676544* (%TypeChecker.676716*)** %.14, align 8
  %.16 = call %FunctionType.676544* %.15(%TypeChecker.676716* %.1)
  %.17 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.16, i64 0, i32 3
  %.18 = load %Type.676538*, %Type.676538** %.17, align 8
  %.21 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.22 = bitcast i8* %.21 to %ReturnStatement.676624*
  %.23 = bitcast i8* %.21 to %ReturnStatement_vtable_ty.676625**
  store %ReturnStatement_vtable_ty.676625* @ReturnStatement_vtable_data, %ReturnStatement_vtable_ty.676625** %.23, align 8
  call void @ReturnStatement_constructor(%ReturnStatement.676624* %.22)
  %0 = ptrtoint %ExpressionNode.676442* %.9 to i64
  %.28 = trunc i64 %0 to i32
  %.30.not = icmp eq i32 %.28, 0
  br i1 %.30.not, label %.4.else, label %.4.if

.4.if:                                            ; preds = %.4
  %.34 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  %.35 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.34, i64 0, i32 70
  %.36 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.35, align 8
  %.39 = call %Expression.676558* %.36(%TypeChecker.676716* %.1, %Type.676538* %.18, %ExpressionNode.676442* %.9)
  %rt_value = alloca %Expression.676558*, align 8
  store %Expression.676558* %.39, %Expression.676558** %rt_value, align 8
  %.43 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  %.44 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.43, i64 0, i32 17
  %.45 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.44, align 8
  %.46 = call i1 %.45(%TypeChecker.676716* %.1)
  br i1 %.46, label %.4.endif, label %.4.if.endif

.4.else:                                          ; preds = %.4
  %.136 = getelementptr inbounds %Type.676538, %Type.676538* %.18, i64 0, i32 1
  %.137 = load i64, i64* %.136, align 8
  %.138.not = icmp eq i64 %.137, 12
  br i1 %.138.not, label %.4.endif, label %.4.else.if

.4.endif:                                         ; preds = %.4.else, %.4.if, %.4.if.endif.endif.endif
  %merge = phi %ReturnStatement.676624* [ %.22, %.4.if.endif.endif.endif ], [ null, %.4.if ], [ %.22, %.4.else ]
  ret %ReturnStatement.676624* %merge

.4.if.endif:                                      ; preds = %.4.if
  %.50 = getelementptr inbounds %Type.676538, %Type.676538* %.18, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp eq i64 %.51, 12
  %.56 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  br i1 %.52, label %.4.if.endif.if, label %.4.if.endif.endif

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.57 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.56, i64 0, i32 16
  %.58 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.57, align 8
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.676378*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.60.repack, align 8
  %.60.repack5 = getelementptr inbounds i8, i8* %.59, i64 8
  %1 = bitcast i8* %.60.repack5 to i8**
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.363, i64 0, i64 0), i8** %1, align 8
  %.60.repack6 = getelementptr inbounds i8, i8* %.59, i64 16
  %2 = bitcast i8* %.60.repack6 to i64*
  store i64 54, i64* %2, align 8
  %.60.repack7 = getelementptr inbounds i8, i8* %.59, i64 24
  %3 = bitcast i8* %.60.repack7 to i64*
  store i64 54, i64* %3, align 8
  %.63 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.9, i64 0, i32 1
  %.64 = load %FloRange.676382*, %FloRange.676382** %.63, align 8
  call void %.58(%TypeChecker.676716* %.1, i64 5, %string.676378* %.60, %FloRange.676382* %.64)
  ret %ReturnStatement.676624* null

.4.if.endif.endif:                                ; preds = %.4.if.endif
  %.70 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.56, i64 0, i32 9
  %.71 = load i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)*, i1 (%TypeChecker.676716*, %Type.676538*, %Type.676538*)** %.70, align 8
  %.74 = getelementptr inbounds %Expression.676558, %Expression.676558* %.39, i64 0, i32 4
  %.75 = load %Type.676538*, %Type.676538** %.74, align 8
  %.76 = call i1 %.71(%TypeChecker.676716* %.1, %Type.676538* %.18, %Type.676538* %.75)
  br i1 %.76, label %.4.if.endif.endif.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.81 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  %.82 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.81, i64 0, i32 16
  %.83 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.82, align 8
  %.87 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.81, i64 0, i32 10
  %.88 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.87, align 8
  %.90 = call %string.676378* %.88(%TypeChecker.676716* %.1, %Type.676538* %.18)
  %.93 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  %.94 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.93, i64 0, i32 10
  %.95 = load %string.676378* (%TypeChecker.676716*, %Type.676538*)*, %string.676378* (%TypeChecker.676716*, %Type.676538*)** %.94, align 8
  %.98 = load %Type.676538*, %Type.676538** %.74, align 8
  %.99 = call %string.676378* %.95(%TypeChecker.676716* %.1, %Type.676538* %.98)
  %.100 = getelementptr inbounds %string.676378, %string.676378* %.90, i64 0, i32 0
  %.101 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.100, align 8
  %.102 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.101, i64 0, i32 11
  %.103 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.102, align 8
  %.104 = call i8* %.103(%string.676378* %.90)
  %.105 = getelementptr inbounds %string.676378, %string.676378* %.99, i64 0, i32 0
  %.106 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.105, align 8
  %.107 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.106, i64 0, i32 11
  %.108 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.107, align 8
  %.109 = call i8* %.108(%string.676378* %.99)
  %.111 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.364, i64 0, i64 0), i8* %.104, i8* %.109)
  %.113 = call i8* @malloc(i64 %.111)
  %.114 = call i64 (i8*, i8*, ...) @sprintf(i8* %.113, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @str.364, i64 0, i64 0), i8* %.104, i8* %.109)
  %.115 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.116 = bitcast i8* %.115 to %string.676378*
  %.117 = bitcast i8* %.115 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.117, align 8
  %.119 = getelementptr inbounds i8, i8* %.115, i64 8
  %4 = bitcast i8* %.119 to i8**
  store i8* %.113, i8** %4, align 8
  %.121 = getelementptr inbounds i8, i8* %.115, i64 16
  %5 = bitcast i8* %.121 to i64*
  store i64 %.111, i64* %5, align 8
  %.123 = getelementptr inbounds i8, i8* %.115, i64 24
  %6 = bitcast i8* %.123 to i64*
  store i64 %.111, i64* %6, align 8
  %.126 = getelementptr inbounds %ExpressionNode.676442, %ExpressionNode.676442* %.9, i64 0, i32 1
  %.127 = load %FloRange.676382*, %FloRange.676382** %.126, align 8
  call void %.83(%TypeChecker.676716* %.1, i64 5, %string.676378* %.116, %FloRange.676382* %.127)
  ret %ReturnStatement.676624* null

.4.if.endif.endif.endif:                          ; preds = %.4.if.endif.endif
  %7 = bitcast %Expression.676558** %rt_value to i64*
  %.1314 = load i64, i64* %7, align 8
  %.132 = getelementptr inbounds i8, i8* %.21, i64 16
  %8 = bitcast i8* %.132 to i64*
  store i64 %.1314, i64* %8, align 8
  br label %.4.endif

.4.else.if:                                       ; preds = %.4.else
  %.142 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.12, align 8
  %.143 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.142, i64 0, i32 16
  %.144 = load void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)*, void (%TypeChecker.676716*, i64, %string.676378*, %FloRange.676382*)** %.143, align 8
  %.145 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.146 = bitcast i8* %.145 to %string.676378*
  %.146.repack = bitcast i8* %.145 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.146.repack, align 8
  %.146.repack1 = getelementptr inbounds i8, i8* %.145, i64 8
  %9 = bitcast i8* %.146.repack1 to i8**
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.365, i64 0, i64 0), i8** %9, align 8
  %.146.repack2 = getelementptr inbounds i8, i8* %.145, i64 16
  %10 = bitcast i8* %.146.repack2 to i64*
  store i64 32, i64* %10, align 8
  %.146.repack3 = getelementptr inbounds i8, i8* %.145, i64 24
  %11 = bitcast i8* %.146.repack3 to i64*
  store i64 32, i64* %11, align 8
  %.149 = getelementptr inbounds %ReturnStatementNode.676482, %ReturnStatementNode.676482* %.2, i64 0, i32 1
  %.150 = load %FloRange.676382*, %FloRange.676382** %.149, align 8
  call void %.144(%TypeChecker.676716* %.1, i64 5, %string.676378* %.146, %FloRange.676382* %.150)
  ret %ReturnStatement.676624* null
}

define %Statement.676550* @TypeChecker_check_statement(%TypeChecker.676716* %.1, %StatementNode.676436* %.2) {
.4:
  %.8 = getelementptr inbounds %StatementNode.676436, %StatementNode.676436* %.2, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  switch i64 %.9, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.endif [
    i64 0, label %.4.if
    i64 1, label %.4.endif.if
    i64 2, label %.4.endif.endif.if
    i64 3, label %.4.endif.endif.endif.if
    i64 4, label %.4.endif.endif.endif.endif.if
    i64 5, label %.4.endif.endif.endif.endif.endif.if
    i64 6, label %.4.endif.endif.endif.endif.endif.endif.if
    i64 7, label %.4.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.4.endif.endif.endif.endif.endif.endif.endif.endif.if
  ]

.4.if:                                            ; preds = %.4
  %.13 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.14 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.13, align 8
  %.15 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.14, i64 0, i32 72
  %.16 = load %IfStatement.676614* (%TypeChecker.676716*, %IfStatementNode.676476*)*, %IfStatement.676614* (%TypeChecker.676716*, %IfStatementNode.676476*)** %.15, align 8
  %.18 = bitcast %StatementNode.676436* %.2 to %IfStatementNode.676476*
  %.19 = call %IfStatement.676614* %.16(%TypeChecker.676716* %.1, %IfStatementNode.676476* %.18)
  %.20 = bitcast %IfStatement.676614* %.19 to %Statement.676550*
  ret %Statement.676550* %.20

.4.endif.if:                                      ; preds = %.4
  %.28 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.29 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.28, align 8
  %.30 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.29, i64 0, i32 73
  %.31 = load %VarDeclaration.676616* (%TypeChecker.676716*, %VarDeclarationStatement.676484*)*, %VarDeclaration.676616* (%TypeChecker.676716*, %VarDeclarationStatement.676484*)** %.30, align 8
  %.33 = bitcast %StatementNode.676436* %.2 to %VarDeclarationStatement.676484*
  %.34 = call %VarDeclaration.676616* %.31(%TypeChecker.676716* %.1, %VarDeclarationStatement.676484* %.33)
  %.35 = bitcast %VarDeclaration.676616* %.34 to %Statement.676550*
  ret %Statement.676550* %.35

.4.endif.endif.if:                                ; preds = %.4
  %.43 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.44 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.43, align 8
  %.45 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.44, i64 0, i32 74
  %.46 = load %ConstDeclaration.676618* (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)*, %ConstDeclaration.676618* (%TypeChecker.676716*, %ConstDeclarationStatement.676486*)** %.45, align 8
  %.48 = bitcast %StatementNode.676436* %.2 to %ConstDeclarationStatement.676486*
  %.49 = call %ConstDeclaration.676618* %.46(%TypeChecker.676716* %.1, %ConstDeclarationStatement.676486* %.48)
  %.50 = bitcast %ConstDeclaration.676618* %.49 to %Statement.676550*
  ret %Statement.676550* %.50

.4.endif.endif.endif.if:                          ; preds = %.4
  %.58 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.59 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.58, align 8
  %.60 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.59, i64 0, i32 75
  %.61 = load %ForStatement.676620* (%TypeChecker.676716*, %ForStatementNode.676480*)*, %ForStatement.676620* (%TypeChecker.676716*, %ForStatementNode.676480*)** %.60, align 8
  %.63 = bitcast %StatementNode.676436* %.2 to %ForStatementNode.676480*
  %.64 = call %ForStatement.676620* %.61(%TypeChecker.676716* %.1, %ForStatementNode.676480* %.63)
  %.65 = bitcast %ForStatement.676620* %.64 to %Statement.676550*
  ret %Statement.676550* %.65

.4.endif.endif.endif.endif.if:                    ; preds = %.4
  %.73 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.74 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.73, align 8
  %.75 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.74, i64 0, i32 76
  %.76 = load %WhileStatement.676622* (%TypeChecker.676716*, %WhileStatementNode.676478*)*, %WhileStatement.676622* (%TypeChecker.676716*, %WhileStatementNode.676478*)** %.75, align 8
  %.78 = bitcast %StatementNode.676436* %.2 to %WhileStatementNode.676478*
  %.79 = call %WhileStatement.676622* %.76(%TypeChecker.676716* %.1, %WhileStatementNode.676478* %.78)
  %.80 = bitcast %WhileStatement.676622* %.79 to %Statement.676550*
  ret %Statement.676550* %.80

.4.endif.endif.endif.endif.endif.if:              ; preds = %.4
  %.88 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.89 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.88, align 8
  %.90 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.89, i64 0, i32 78
  %.91 = load %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)** %.90, align 8
  %.93 = call %Statement.676550* %.91(%TypeChecker.676716* %.1, %StatementNode.676436* %.2)
  ret %Statement.676550* %.93

.4.endif.endif.endif.endif.endif.endif.if:        ; preds = %.4
  %.101 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.102 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.101, align 8
  %.103 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.102, i64 0, i32 77
  %.104 = load %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)** %.103, align 8
  %.106 = call %Statement.676550* %.104(%TypeChecker.676716* %.1, %StatementNode.676436* %.2)
  ret %Statement.676550* %.106

.4.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.4
  %.114 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.115 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.114, align 8
  %.116 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.115, i64 0, i32 79
  %.117 = load %ReturnStatement.676624* (%TypeChecker.676716*, %ReturnStatementNode.676482*)*, %ReturnStatement.676624* (%TypeChecker.676716*, %ReturnStatementNode.676482*)** %.116, align 8
  %.119 = bitcast %StatementNode.676436* %.2 to %ReturnStatementNode.676482*
  %.120 = call %ReturnStatement.676624* %.117(%TypeChecker.676716* %.1, %ReturnStatementNode.676482* %.119)
  %.121 = bitcast %ReturnStatement.676624* %.120 to %Statement.676550*
  ret %Statement.676550* %.121

.4.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4
  %.129 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.130 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.129, align 8
  %.131 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.130, i64 0, i32 70
  %.132 = load %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)*, %Expression.676558* (%TypeChecker.676716*, %Type.676538*, %ExpressionNode.676442*)** %.131, align 8
  %.133 = call %Type.676538* @Type_unknown()
  %.135 = bitcast %StatementNode.676436* %.2 to %ExpressionNode.676442*
  %.136 = call %Expression.676558* %.132(%TypeChecker.676716* %.1, %Type.676538* %.133, %ExpressionNode.676442* %.135)
  %.137 = bitcast %Expression.676558* %.136 to %Statement.676550*
  ret %Statement.676550* %.137

.4.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4
  ret %Statement.676550* null
}

define %Block.676610* @TypeChecker_check_block(%TypeChecker.676716* %.1, %BlockNode.676438* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 0
  %.9 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.10 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.9, i64 0, i32 17
  %.11 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.10, align 8
  %.12 = call i1 %.11(%TypeChecker.676716* %.1)
  br i1 %.12, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %for.body, %.4
  ret %Block.676610* null

.4.endif:                                         ; preds = %.4
  %.16 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.17 = bitcast i8* %.16 to %Block.676610*
  %.18 = bitcast i8* %.16 to %Block_vtable_ty.676611**
  store %Block_vtable_ty.676611* @Block_vtable_data, %Block_vtable_ty.676611** %.18, align 8
  call void @Block_constructor(%Block.676610* %.17)
  %block = alloca %Block.676610*, align 8
  %0 = bitcast %Block.676610** %block to i8**
  store i8* %.16, i8** %0, align 8
  %.24 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.25 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.24, i64 0, i32 15
  %.26 = load %Scope.676628* (%TypeChecker.676716*)*, %Scope.676628* (%TypeChecker.676716*)** %.25, align 8
  %.27 = call %Scope.676628* %.26(%TypeChecker.676716* %.1)
  %.31 = getelementptr inbounds %Scope.676628, %Scope.676628* %.27, i64 0, i32 1
  %1 = bitcast %ScopeId.676626** %.31 to i64*
  %.321 = load i64, i64* %1, align 8
  %.33 = getelementptr inbounds %TypeChecker.676716, %TypeChecker.676716* %.1, i64 0, i32 6
  %2 = bitcast %ScopeId.676626** %.33 to i64*
  store i64 %.321, i64* %2, align 8
  %.40 = getelementptr inbounds %BlockNode.676438, %BlockNode.676438* %.2, i64 0, i32 2
  %.419 = load %"Array<StatementNode>.676440"*, %"Array<StatementNode>.676440"** %.40, align 8
  %.4210 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.419, i64 0, i32 2
  %.4311 = load i64, i64* %.4210, align 8
  %.4412 = icmp sgt i64 %.4311, 0
  br i1 %.4412, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4.endif
  %.70 = load %Block.676610*, %Block.676610** %block, align 8
  %.71 = getelementptr inbounds %Block.676610, %Block.676610* %.70, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif.endif.endif.endif.endif
  %.4114 = phi %"Array<StatementNode>.676440"* [ %.419, %for.body.lr.ph ], [ %.41, %for.body.endif.endif.endif.endif.endif ]
  %storemerge13 = phi i64 [ 0, %for.body.lr.ph ], [ %.143, %for.body.endif.endif.endif.endif.endif ]
  %.48 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.49 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.48, i64 0, i32 80
  %.50 = load %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)*, %Statement.676550* (%TypeChecker.676716*, %StatementNode.676436*)** %.49, align 8
  %.55 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.4114, i64 0, i32 0
  %.56 = load %"Array<StatementNode>_vtable_ty.676441"*, %"Array<StatementNode>_vtable_ty.676441"** %.55, align 8
  %.57 = getelementptr inbounds %"Array<StatementNode>_vtable_ty.676441", %"Array<StatementNode>_vtable_ty.676441"* %.56, i64 0, i32 5
  %.58 = load %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)*, %StatementNode.676436* (%"Array<StatementNode>.676440"*, i64)** %.57, align 8
  %.59 = call %StatementNode.676436* %.58(%"Array<StatementNode>.676440"* %.4114, i64 %storemerge13)
  %.60 = call %Statement.676550* %.50(%TypeChecker.676716* %.1, %StatementNode.676436* %.59)
  %stmt = alloca %Statement.676550*, align 8
  store %Statement.676550* %.60, %Statement.676550** %stmt, align 8
  %.64 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.8, align 8
  %.65 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.64, i64 0, i32 17
  %.66 = load i1 (%TypeChecker.676716*)*, i1 (%TypeChecker.676716*)** %.65, align 8
  %.67 = call i1 %.66(%TypeChecker.676716* %.1)
  br i1 %.67, label %.4.if, label %for.body.endif

for.end:                                          ; preds = %for.body.endif.endif.endif.endif.endif, %.4.endif, %for.body.endif.endif.endif.endif.if, %for.body.endif.endif.endif.if, %for.body.endif.endif.if.if.if, %for.body.endif.if
  %.148 = getelementptr inbounds %Scope.676628, %Scope.676628* %.27, i64 0, i32 6
  %3 = bitcast %ScopeId.676626** %.148 to i64*
  %.1492 = load i64, i64* %3, align 8
  store i64 %.1492, i64* %2, align 8
  %.152 = load %Block.676610*, %Block.676610** %block, align 8
  ret %Block.676610* %.152

for.body.endif:                                   ; preds = %for.body
  %.72 = load %"Array<Statement>.676612"*, %"Array<Statement>.676612"** %.71, align 8
  %.74 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.72, i64 0, i32 0
  %.75 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.74, align 8
  %.76 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.75, i64 0, i32 2
  %.77 = load void (%"Array<Statement>.676612"*, %Statement.676550*)*, void (%"Array<Statement>.676612"*, %Statement.676550*)** %.76, align 8
  call void %.77(%"Array<Statement>.676612"* %.72, %Statement.676550* %.60)
  %.80 = getelementptr inbounds %Statement.676550, %Statement.676550* %.60, i64 0, i32 1
  %.81 = load i64, i64* %.80, align 8
  switch i64 %.81, label %for.body.endif.endif.endif.endif.endif [
    i64 7, label %for.body.endif.if
    i64 0, label %for.body.endif.endif.if
    i64 5, label %for.body.endif.endif.endif.if
    i64 6, label %for.body.endif.endif.endif.endif.if
  ]

for.body.endif.if:                                ; preds = %for.body.endif
  %.85 = getelementptr inbounds %Block.676610, %Block.676610* %.70, i64 0, i32 2
  store i1 true, i1* %.85, align 1
  br label %for.end

for.body.endif.endif.if:                          ; preds = %for.body.endif
  %4 = bitcast %Statement.676550** %stmt to i64*
  %.9334 = load i64, i64* %4, align 8
  %if_stmt = alloca %IfStatement.676614*, align 8
  %5 = bitcast %IfStatement.676614** %if_stmt to i64*
  store i64 %.9334, i64* %5, align 8
  %.96.cast = inttoptr i64 %.9334 to %IfStatement.676614*
  %.97 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.96.cast, i64 0, i32 4
  %6 = bitcast %Block.676610** %.97 to i64*
  %.985 = load i64, i64* %6, align 8
  %.99 = trunc i64 %.985 to i32
  %.101.not = icmp eq i32 %.99, 0
  br i1 %.101.not, label %for.body.endif.endif.endif, label %for.body.endif.endif.if.if

for.body.endif.endif.endif:                       ; preds = %for.body.endif.endif.if.if, %for.body.endif.endif.if
  switch i64 %.81, label %for.body.endif.endif.endif.endif.endif [
    i64 5, label %for.body.endif.endif.endif.if
    i64 6, label %for.body.endif.endif.endif.endif.if
  ]

for.body.endif.endif.if.if:                       ; preds = %for.body.endif.endif.if
  %.103 = load %IfStatement.676614*, %IfStatement.676614** %if_stmt, align 8
  %.104 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.103, i64 0, i32 3
  %.105 = load %Block.676610*, %Block.676610** %.104, align 8
  %.106 = getelementptr inbounds %Block.676610, %Block.676610* %.105, i64 0, i32 2
  %.107 = load i1, i1* %.106, align 1
  %.109 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.103, i64 0, i32 4
  %.110 = load %Block.676610*, %Block.676610** %.109, align 8
  %.111 = getelementptr inbounds %Block.676610, %Block.676610* %.110, i64 0, i32 2
  %.112 = load i1, i1* %.111, align 1
  %.113 = and i1 %.107, %.112
  br i1 %.113, label %for.body.endif.endif.if.if.if, label %for.body.endif.endif.endif

for.body.endif.endif.if.if.if:                    ; preds = %for.body.endif.endif.if.if
  %.116 = getelementptr inbounds %Block.676610, %Block.676610* %.70, i64 0, i32 2
  store i1 true, i1* %.116, align 1
  br label %for.end

for.body.endif.endif.endif.if:                    ; preds = %for.body.endif, %for.body.endif.endif.endif
  %.127 = getelementptr inbounds %Block.676610, %Block.676610* %.70, i64 0, i32 3
  store i1 true, i1* %.127, align 1
  br label %for.end

for.body.endif.endif.endif.endif.if:              ; preds = %for.body.endif, %for.body.endif.endif.endif
  %.136 = getelementptr inbounds %Block.676610, %Block.676610* %.70, i64 0, i32 4
  store i1 true, i1* %.136, align 1
  br label %for.end

for.body.endif.endif.endif.endif.endif:           ; preds = %for.body.endif, %for.body.endif.endif.endif
  %.143 = add nuw nsw i64 %storemerge13, 1
  %.41 = load %"Array<StatementNode>.676440"*, %"Array<StatementNode>.676440"** %.40, align 8
  %.42 = getelementptr inbounds %"Array<StatementNode>.676440", %"Array<StatementNode>.676440"* %.41, i64 0, i32 2
  %.43 = load i64, i64* %.42, align 8
  %.44 = icmp slt i64 %.143, %.43
  br i1 %.44, label %for.body, label %for.end
}

declare void @LLVMShutdown() local_unnamed_addr

declare void @LLVMDisposeMessage(i8*) local_unnamed_addr

declare %LLVMContextRef.676725* @LLVMContextCreate() local_unnamed_addr

declare void @LLVMContextDispose(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMModuleRef.676726* @LLVMModuleCreateWithNameInContext(i8*, %LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMModuleRef.676726* @LLVMCloneModule(%LLVMModuleRef.676726*) local_unnamed_addr

declare void @LLVMDisposeModule(%LLVMModuleRef.676726*) local_unnamed_addr

declare %LLVMContextRef.676725* @LLVMGetModuleContext(%LLVMModuleRef.676726*) local_unnamed_addr

declare void @LLVMSetDataLayout(%LLVMModuleRef.676726*, i8*) local_unnamed_addr

declare void @LLVMSetTarget(%LLVMModuleRef.676726*, i8*) local_unnamed_addr

declare void @LLVMDumpModule(%LLVMModuleRef.676726*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMAddFunction(%LLVMModuleRef.676726*, i8*, %LLVMTypeRef.676727*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMGetNamedFunction(%LLVMModuleRef.676726*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMGetFirstFunction(%LLVMModuleRef.676726*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMGetNextFunction(%LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt1TypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt16TypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt32TypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt64TypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt128TypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725*, i64) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMInt32Type() local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMHalfTypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMFloatTypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMDoubleTypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMFunctionType(%LLVMTypeRef.676727*, %LLVMTypeRef.676727**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMStructTypeInContext(%LLVMContextRef.676725*, %LLVMTypeRef.676727**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMStructCreateNamed(%LLVMContextRef.676725*, i8*) local_unnamed_addr

declare void @LLVMStructSetBody(%LLVMTypeRef.676727*, %LLVMTypeRef.676727**, i64, i1) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMArrayType(%LLVMTypeRef.676727*, i64) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727*, i64) local_unnamed_addr

declare %LLVMTypeRef.676727* @LLVMVoidTypeInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare i1 @LLVMIsConstant(%LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstNull(%LLVMTypeRef.676727*) local_unnamed_addr

declare i1 @LLVMIsNull(%LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727*, i64, i1) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstReal(%LLVMTypeRef.676727*, double) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstStructInContext(%LLVMContextRef.676725*, %LLVMValueRef.676728**, i64, i1) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstArray(%LLVMTypeRef.676727*, %LLVMValueRef.676728**, i64) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMSizeOf(%LLVMTypeRef.676727*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstNeg(%LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstNot(%LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstAdd(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstSub(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstMul(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstAnd(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstOr(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstXor(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstICmp(i64, %LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstFCmp(i64, %LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstShl(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstAShr(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstSIToFP(%LLVMValueRef.676728*, %LLVMTypeRef.676727*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstFPToSI(%LLVMValueRef.676728*, %LLVMTypeRef.676727*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstBitCast(%LLVMValueRef.676728*, %LLVMTypeRef.676727*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstIntCast(%LLVMValueRef.676728*, %LLVMTypeRef.676727*, i1) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMConstFPCast(%LLVMValueRef.676728*, %LLVMTypeRef.676727*) local_unnamed_addr

declare void @LLVMSetLinkage(%LLVMValueRef.676728*, i64) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMAddGlobal(%LLVMModuleRef.676726*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMGetInitializer(%LLVMValueRef.676728*) local_unnamed_addr

declare void @LLVMSetInitializer(%LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare void @LLVMSetGlobalConstant(%LLVMValueRef.676728*, i1) local_unnamed_addr

declare i64 @LLVMGetAlignment(%LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMGetParam(%LLVMValueRef.676728*, i64) local_unnamed_addr

declare %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(%LLVMBasicBlockRef.676729*) local_unnamed_addr

declare void @LLVMAddIncoming(%LLVMValueRef.676728*, %LLVMValueRef.676728**, %LLVMBasicBlockRef.676729**, i64) local_unnamed_addr

declare %LLVMBuilderRef.676733* @LLVMCreateBuilderInContext(%LLVMContextRef.676725*) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733*, %LLVMBasicBlockRef.676729*) local_unnamed_addr

declare void @LLVMDisposeBuilder(%LLVMBuilderRef.676733*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildRetVoid(%LLVMBuilderRef.676733*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildRet(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733*, %LLVMBasicBlockRef.676729*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildCondBr(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMBasicBlockRef.676729*, %LLVMBasicBlockRef.676729*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildAdd(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFAdd(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildSub(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFSub(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildMul(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFMul(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildSDiv(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFDiv(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildSRem(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFRem(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildShl(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildAShr(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildAnd(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildOr(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildXor(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildNeg(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFNeg(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildNot(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildMalloc(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildArrayMalloc(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildMemSet(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i64) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildMemCpy(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i64, %LLVMValueRef.676728*, i64, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildMemMove(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i64, %LLVMValueRef.676728*, i64, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildArrayAlloca(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildLoad2(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMValueRef.676728*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, %LLVMValueRef.676728*, %LLVMValueRef.676728**, i64, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildGlobalString(%LLVMBuilderRef.676733*, i8*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFPToSI(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildSIToFP(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildBitCast(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildIntCast2(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMTypeRef.676727*, i1, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFPCast(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildICmp(%LLVMBuilderRef.676733*, i64, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildFCmp(%LLVMBuilderRef.676733*, i64, %LLVMValueRef.676728*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildPhi(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733*, %LLVMTypeRef.676727*, %LLVMValueRef.676728*, %LLVMValueRef.676728**, i64, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildIsNull(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMValueRef.676728* @LLVMBuildIsNotNull(%LLVMBuilderRef.676733*, %LLVMValueRef.676728*, i8*) local_unnamed_addr

declare %LLVMPassManagerRef.676736* @LLVMCreateFunctionPassManagerForModule(%LLVMModuleRef.676726*) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(%LLVMPassManagerRef.676736*, %LLVMValueRef.676728*) local_unnamed_addr

declare void @LLVMDisposePassManager(%LLVMPassManagerRef.676736*) local_unnamed_addr

declare i1 @LLVMLinkModules2(%LLVMModuleRef.676726*, %LLVMModuleRef.676726*) local_unnamed_addr

declare %LLVMDIBuilderRef.676734* @LLVMCreateDIBuilder(%LLVMModuleRef.676726*) local_unnamed_addr

declare %LLVMMetadataRef.676730* @LLVMDIBuilderCreateFile(%LLVMDIBuilderRef.676734*, i8*, i64, i8*, i64) local_unnamed_addr

declare %LLVMMetadataRef.676730* @LLVMDIBuilderCreateCompileUnit(%LLVMDIBuilderRef.676734*, i64, %LLVMMetadataRef.676730*, i8*, i64, i1, i8*, i64, i64, i8*, i64, i64, i64, i1, i1, i8*, i64, i8*, i64) local_unnamed_addr

declare void @LLVMDIBuilderFinalize(%LLVMDIBuilderRef.676734*) local_unnamed_addr

; Function Attrs: nofree nounwind
define void @"Array<LLVMMetadataRef>_constructor"(%"Array<LLVMMetadataRef>.676754"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMMetadataRef.676730*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMMetadataRef>_resize"(%"Array<LLVMMetadataRef>.676754"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMMetadataRef.676730*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<LLVMMetadataRef>_swap"(%"Array<LLVMMetadataRef>.676754"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %.48 = load %LLVMMetadataRef.676730**, %LLVMMetadataRef.676730*** %.47, align 8
  %.49 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.48, i64 %.2
  %4 = bitcast %LLVMMetadataRef.676730** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.48, i64 %.3
  %5 = bitcast %LLVMMetadataRef.676730** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %LLVMMetadataRef.676730**, %LLVMMetadataRef.676730*** %.47, align 8
  %.69 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.67, i64 %.3
  %6 = bitcast %LLVMMetadataRef.676730** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMMetadataRef>___sl__"(%"Array<LLVMMetadataRef>.676754"* %.1, %LLVMMetadataRef.676730* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %"Array<LLVMMetadataRef>_vtable_ty.676755"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.676755", %"Array<LLVMMetadataRef>_vtable_ty.676755"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMMetadataRef>.676754"*)*, void (%"Array<LLVMMetadataRef>.676754"*)** %.18, align 8
  call void %.19(%"Array<LLVMMetadataRef>.676754"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %.31 = load %LLVMMetadataRef.676730**, %LLVMMetadataRef.676730*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.31, i64 %.24
  store %LLVMMetadataRef.676730* %.2, %LLVMMetadataRef.676730** %.33, align 8
  ret void
}

define void @"Array<LLVMMetadataRef>___setitem__"(%"Array<LLVMMetadataRef>.676754"* nocapture readonly %.1, i64 %.2, %LLVMMetadataRef.676730* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %.30 = load %LLVMMetadataRef.676730**, %LLVMMetadataRef.676730*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.30, i64 %.2
  store %LLVMMetadataRef.676730* %.3, %LLVMMetadataRef.676730** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMMetadataRef>_append"(%"Array<LLVMMetadataRef>.676754"* %.1, %LLVMMetadataRef.676730* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %"Array<LLVMMetadataRef>_vtable_ty.676755"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.676755", %"Array<LLVMMetadataRef>_vtable_ty.676755"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)*, void (%"Array<LLVMMetadataRef>.676754"*, %LLVMMetadataRef.676730*)** %.10, align 8
  call void %.11(%"Array<LLVMMetadataRef>.676754"* %.1, %LLVMMetadataRef.676730* %.2)
  ret void
}

define %LLVMMetadataRef.676730* @"Array<LLVMMetadataRef>___getitem__"(%"Array<LLVMMetadataRef>.676754"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %.28 = load %LLVMMetadataRef.676730**, %LLVMMetadataRef.676730*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.28, i64 %.2
  %.30 = load %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.29, align 8
  ret %LLVMMetadataRef.676730* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMMetadataRef.676730* null
}

define i1 @"Array<LLVMMetadataRef>___eq__"(%"Array<LLVMMetadataRef>.676754"* %.1, %"Array<LLVMMetadataRef>.676754"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %"Array<LLVMMetadataRef>_vtable_ty.676755"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.676755", %"Array<LLVMMetadataRef>_vtable_ty.676755"* %.28, i64 0, i32 5
  %.30 = load %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)*, %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)** %.29, align 8
  %.31 = call %LLVMMetadataRef.676730* %.30(%"Array<LLVMMetadataRef>.676754"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %"Array<LLVMMetadataRef>_vtable_ty.676755"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.676755", %"Array<LLVMMetadataRef>_vtable_ty.676755"* %.35, i64 0, i32 5
  %.37 = load %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)*, %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)** %.36, align 8
  %.38 = call %LLVMMetadataRef.676730* %.37(%"Array<LLVMMetadataRef>.676754"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMMetadataRef.676730* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMMetadataRef.676730* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMMetadataRef>___in__"(%"Array<LLVMMetadataRef>.676754"* %.1, %LLVMMetadataRef.676730* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMMetadataRef.676730* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %"Array<LLVMMetadataRef>_vtable_ty.676755"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.676755", %"Array<LLVMMetadataRef>_vtable_ty.676755"* %.19, i64 0, i32 5
  %.21 = load %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)*, %LLVMMetadataRef.676730* (%"Array<LLVMMetadataRef>.676754"*, i64)** %.20, align 8
  %.22 = call %LLVMMetadataRef.676730* %.21(%"Array<LLVMMetadataRef>.676754"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMMetadataRef.676730* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMMetadataRef>_find"(%"Array<LLVMMetadataRef>.676754"* nocapture readonly %.1, %LLVMMetadataRef.676730* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 1
  %.19 = load %LLVMMetadataRef.676730**, %LLVMMetadataRef.676730*** %.18, align 8
  %0 = ptrtoint %LLVMMetadataRef.676730* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMMetadataRef.676730*, %LLVMMetadataRef.676730** %.19, i64 %storemerge5
  %1 = bitcast %LLVMMetadataRef.676730** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<LLVMMetadataRef>_join"(%"Array<LLVMMetadataRef>.676754"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.366, i64 0, i64 0), i64 16)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @str.366, i64 0, i64 0), i64 16)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<LLVMMetadataRef>___as_string__"(%"Array<LLVMMetadataRef>.676754"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMMetadataRef>.676754", %"Array<LLVMMetadataRef>.676754"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMMetadataRef>_vtable_ty.676755"*, %"Array<LLVMMetadataRef>_vtable_ty.676755"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMMetadataRef>_vtable_ty.676755", %"Array<LLVMMetadataRef>_vtable_ty.676755"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<LLVMMetadataRef>.676754"*, %string.676378*)*, %string.676378* (%"Array<LLVMMetadataRef>.676754"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<LLVMMetadataRef>.676754"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define void @DebugInfo_constructor(%DebugInfo.676752* nocapture %.1, %LLVMModuleRef.676726* %.2, %string.676378* %.3) local_unnamed_addr {
.5:
  %.11 = call %LLVMDIBuilderRef.676734* @LLVMCreateDIBuilder(%LLVMModuleRef.676726* %.2)
  %.12 = getelementptr inbounds %DebugInfo.676752, %DebugInfo.676752* %.1, i64 0, i32 1
  store %LLVMDIBuilderRef.676734* %.11, %LLVMDIBuilderRef.676734** %.12, align 8
  %.19 = getelementptr inbounds %string.676378, %string.676378* %.3, i64 0, i32 0
  %.20 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.19, align 8
  %.21 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.20, i64 0, i32 11
  %.22 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.21, align 8
  %.23 = call i8* %.22(%string.676378* %.3)
  %.25 = getelementptr inbounds %string.676378, %string.676378* %.3, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27 = call %LLVMMetadataRef.676730* @LLVMDIBuilderCreateFile(%LLVMDIBuilderRef.676734* %.11, i8* %.23, i64 %.26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.367, i64 0, i64 0), i64 1)
  %.28 = getelementptr inbounds %DebugInfo.676752, %DebugInfo.676752* %.1, i64 0, i32 4
  store %LLVMMetadataRef.676730* %.27, %LLVMMetadataRef.676730** %.28, align 8
  %.33 = load %LLVMDIBuilderRef.676734*, %LLVMDIBuilderRef.676734** %.12, align 8
  %.37 = call %LLVMMetadataRef.676730* @LLVMDIBuilderCreateCompileUnit(%LLVMDIBuilderRef.676734* %.33, i64 1, %LLVMMetadataRef.676730* %.27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.368, i64 0, i64 0), i64 12, i1 false, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i64 0, i64 1, i64 0, i1 false, i1 true, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.367, i64 0, i64 0), i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i64 0)
  %.38 = getelementptr inbounds %DebugInfo.676752, %DebugInfo.676752* %.1, i64 0, i32 2
  store %LLVMMetadataRef.676730* %.37, %LLVMMetadataRef.676730** %.38, align 8
  ret void
}

define void @DebugInfo_finalize(%DebugInfo.676752* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %DebugInfo.676752, %DebugInfo.676752* %.1, i64 0, i32 1
  %.7 = load %LLVMDIBuilderRef.676734*, %LLVMDIBuilderRef.676734** %.6, align 8
  call void @LLVMDIBuilderFinalize(%LLVMDIBuilderRef.676734* %.7)
  ret void
}

declare i1 @LLVMVerifyModule(%LLVMModuleRef.676726*, i64, i8**) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(%LLVMExecutionEngineRef.676749**, %LLVMModuleRef.676726*, i8**) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.676749*) local_unnamed_addr

declare i8* @LLVMGetFunctionAddress(%LLVMExecutionEngineRef.676749*, i8*) local_unnamed_addr

declare %LLVMPassManagerBuilderRef.676747* @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(%LLVMPassManagerBuilderRef.676747*) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(%LLVMPassManagerBuilderRef.676747*, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(%LLVMPassManagerBuilderRef.676747*, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(%LLVMPassManagerBuilderRef.676747*, %LLVMPassManagerRef.676736*) local_unnamed_addr

declare void @LLVMInitializeX86TargetInfo() local_unnamed_addr

declare void @LLVMInitializeX86Target() local_unnamed_addr

declare void @LLVMInitializeX86TargetMC() local_unnamed_addr

declare void @LLVMInitializeX86AsmPrinter() local_unnamed_addr

declare void @LLVMInitializeX86AsmParser() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyTargetInfo() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyTarget() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyTargetMC() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyAsmPrinter() local_unnamed_addr

declare void @LLVMInitializeWebAssemblyAsmParser() local_unnamed_addr

define void @LLVMInitializeNativeTarget() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86TargetInfo()
  call void @LLVMInitializeX86Target()
  call void @LLVMInitializeX86TargetMC()
  ret void
}

define void @LLVMInitializeNativeAsmParser() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmParser()
  ret void
}

define void @LLVMInitializeNativeAsmPrinter() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmPrinter()
  ret void
}

define void @LLVMInitializeAllTargets() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86Target()
  call void @LLVMInitializeWebAssemblyTarget()
  ret void
}

define void @LLVMInitializeAllTargetInfos() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86TargetInfo()
  call void @LLVMInitializeWebAssemblyTargetInfo()
  ret void
}

define void @LLVMInitializeAllTargetMCs() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86TargetMC()
  call void @LLVMInitializeWebAssemblyTargetMC()
  ret void
}

define void @LLVMInitializeAllTargetPrinters() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmPrinter()
  call void @LLVMInitializeWebAssemblyAsmPrinter()
  ret void
}

define void @LLVMInitializeAllTargetParsers() local_unnamed_addr {
.2:
  call void @LLVMInitializeX86AsmParser()
  call void @LLVMInitializeWebAssemblyAsmParser()
  ret void
}

declare %LLVMTargetRef.676745* @LLVMGetFirstTarget() local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(i8*, %LLVMTargetRef.676745**, i8**) local_unnamed_addr

declare i8* @LLVMCreateTargetDataLayout(%LLVMTargetMachineRef.676746*) local_unnamed_addr

declare i8* @LLVMGetHostCPUFeatures() local_unnamed_addr

declare %LLVMTargetMachineRef.676746* @LLVMCreateTargetMachine(%LLVMTargetRef.676745*, i8*, i8*, i8*, i64, i64, i64) local_unnamed_addr

declare void @LLVMDisposeTargetMachine(%LLVMTargetMachineRef.676746*) local_unnamed_addr

declare i8* @LLVMGetTargetMachineTriple(%LLVMTargetMachineRef.676746*) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(%LLVMTargetMachineRef.676746*, %LLVMModuleRef.676726*, i8*, i64, i8**) local_unnamed_addr

declare i8* @LLVMGetDefaultTargetTriple() local_unnamed_addr

define void @GeneratedModule_constructor(%GeneratedModule.676756* %.1, %LLVMModuleRef.676726* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 1
  store %LLVMModuleRef.676726* %.2, %LLVMModuleRef.676726** %.9, align 8
  %.12 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 2
  store i8* null, i8** %.12, align 8
  %.19 = call i1 @LLVMVerifyModule(%LLVMModuleRef.676726* %.2, i64 0, i8** nonnull %.12)
  %.21 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 0
  %.22 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.21, align 8
  %.23 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.22, i64 0, i32 0
  %.24 = load void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)** %.23, align 8
  call void %.24(%GeneratedModule.676756* %.1)
  call void @LLVMLinkInMCJIT()
  call void @LLVMInitializeAllTargets()
  call void @LLVMInitializeAllTargetInfos()
  call void @LLVMInitializeAllTargetMCs()
  call void @LLVMInitializeAllTargetPrinters()
  call void @LLVMInitializeAllTargetParsers()
  ret void
}

define void @GeneratedModule_check_errors(%GeneratedModule.676756* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 2
  %.7 = load i8*, i8** %.6, align 8
  %.9 = load i8, i8* %.7, align 1
  %.10.not = icmp eq i8 %.9, 0
  br i1 %.10.not, label %.3.endif, label %.3.if

.3.if:                                            ; preds = %.3
  %.15 = call %string.676378* @string_from_cstring(i8* nonnull %.7)
  %.16 = getelementptr inbounds %string.676378, %string.676378* %.15, i64 0, i32 0
  %.17 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.16, align 8
  %.18 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.17, i64 0, i32 11
  %.19 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.18, align 8
  %.20 = call i8* %.19(%string.676378* %.15)
  %.22 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.369, i64 0, i64 0), i8* %.20)
  %.24 = call i8* @malloc(i64 %.22)
  %.25 = call i64 (i8*, i8*, ...) @sprintf(i8* %.24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.369, i64 0, i64 0), i8* %.20)
  %.26 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.27 = bitcast i8* %.26 to %string.676378*
  %.28 = bitcast i8* %.26 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.28, align 8
  %.30 = getelementptr inbounds i8, i8* %.26, i64 8
  %0 = bitcast i8* %.30 to i8**
  store i8* %.24, i8** %0, align 8
  %.32 = getelementptr inbounds i8, i8* %.26, i64 16
  %1 = bitcast i8* %.32 to i64*
  store i64 %.22, i64* %1, align 8
  %.34 = getelementptr inbounds i8, i8* %.26, i64 24
  %2 = bitcast i8* %.34 to i64*
  store i64 %.22, i64* %2, align 8
  call void @println(%string.676378* %.27)
  %.39 = load i8*, i8** %.6, align 8
  call void @LLVMDisposeMessage(i8* %.39)
  br label %.3.endif

.3.endif:                                         ; preds = %.3, %.3.if
  ret void
}

define void @GeneratedModule_run_passes(%GeneratedModule.676756* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 1
  %.9 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.8, align 8
  %.10 = call %LLVMPassManagerRef.676736* @LLVMCreateFunctionPassManagerForModule(%LLVMModuleRef.676726* %.9)
  %.12 = call %LLVMPassManagerBuilderRef.676747* @LLVMPassManagerBuilderCreate()
  call void @LLVMPassManagerBuilderSetOptLevel(%LLVMPassManagerBuilderRef.676747* %.12, i64 %.2)
  call void @LLVMPassManagerBuilderUseInlinerWithThreshold(%LLVMPassManagerBuilderRef.676747* %.12, i64 255)
  %.21 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.8, align 8
  %.22 = call %LLVMValueRef.676728* @LLVMGetFirstFunction(%LLVMModuleRef.676726* %.21)
  call void @LLVMPassManagerBuilderPopulateFunctionPassManager(%LLVMPassManagerBuilderRef.676747* %.12, %LLVMPassManagerRef.676736* %.10)
  %0 = ptrtoint %LLVMValueRef.676728* %.22 to i64
  %.28 = trunc i64 %0 to i32
  %.30.not = icmp eq i32 %.28, 0
  br i1 %.30.not, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry
  %func.0 = phi %LLVMValueRef.676728* [ %.36, %while.entry ], [ %.22, %.4 ]
  %.34 = call i1 @LLVMRunFunctionPassManager(%LLVMPassManagerRef.676736* %.10, %LLVMValueRef.676728* %func.0)
  %.36 = call %LLVMValueRef.676728* @LLVMGetNextFunction(%LLVMValueRef.676728* %func.0)
  %1 = ptrtoint %LLVMValueRef.676728* %.36 to i64
  %.39 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, 0
  br i1 %.41.not, label %while.exit, label %while.entry

while.exit:                                       ; preds = %while.entry, %.4
  call void @LLVMDisposePassManager(%LLVMPassManagerRef.676736* %.10)
  call void @LLVMPassManagerBuilderDispose(%LLVMPassManagerBuilderRef.676747* %.12)
  ret void
}

define void @GeneratedModule_exec(%GeneratedModule.676756* %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 0
  %.7 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.6, align 8
  %.8 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.7, i64 0, i32 6
  %.9 = load %LLVMModuleRef.676726* (%GeneratedModule.676756*)*, %LLVMModuleRef.676726* (%GeneratedModule.676756*)** %.8, align 8
  %.10 = call %LLVMModuleRef.676726* %.9(%GeneratedModule.676756* %.1)
  %engine = alloca %LLVMExecutionEngineRef.676749*, align 8
  store %LLVMExecutionEngineRef.676749* null, %LLVMExecutionEngineRef.676749** %engine, align 8
  %.15 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 2
  %.16 = call i1 @LLVMCreateExecutionEngineForModule(%LLVMExecutionEngineRef.676749** nonnull %engine, %LLVMModuleRef.676726* %.10, i8** nonnull %.15)
  br i1 %.16, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.676378*
  %.20.repack = bitcast i8* %.19 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.20.repack, align 8
  %.20.repack4 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.20.repack4 to i8**
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.370, i64 0, i64 0), i8** %0, align 8
  %.20.repack5 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.20.repack5 to i64*
  store i64 33, i64* %1, align 8
  %.20.repack6 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.20.repack6 to i64*
  store i64 33, i64* %2, align 8
  call void @println(%string.676378* %.20)
  ret void

.3.endif:                                         ; preds = %.3
  %.24 = load %LLVMExecutionEngineRef.676749*, %LLVMExecutionEngineRef.676749** %engine, align 8
  %.25 = call i8* @LLVMGetFunctionAddress(%LLVMExecutionEngineRef.676749* %.24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.371, i64 0, i64 0))
  %main_fnc = alloca i64 ()*, align 8
  %3 = bitcast i64 ()** %main_fnc to i8**
  store i8* %.25, i8** %3, align 8
  %4 = ptrtoint i8* %.25 to i64
  %.29 = trunc i64 %4 to i32
  %.31 = icmp eq i32 %.29, 0
  br i1 %.31, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.33 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.34 = bitcast i8* %.33 to %string.676378*
  %.34.repack = bitcast i8* %.33 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.34.repack, align 8
  %.34.repack1 = getelementptr inbounds i8, i8* %.33, i64 8
  %5 = bitcast i8* %.34.repack1 to i8**
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.372, i64 0, i64 0), i8** %5, align 8
  %.34.repack2 = getelementptr inbounds i8, i8* %.33, i64 16
  %6 = bitcast i8* %.34.repack2 to i64*
  store i64 48, i64* %6, align 8
  %.34.repack3 = getelementptr inbounds i8, i8* %.33, i64 24
  %7 = bitcast i8* %.34.repack3 to i64*
  store i64 48, i64* %7, align 8
  call void @println(%string.676378* %.34)
  %.37 = load %LLVMExecutionEngineRef.676749*, %LLVMExecutionEngineRef.676749** %engine, align 8
  call void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.676749* %.37)
  ret void

.3.endif.endif:                                   ; preds = %.3.endif
  %.40 = load i64 ()*, i64 ()** %main_fnc, align 8
  %.41 = call i64 %.40()
  %.43 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.373, i64 0, i64 0), i64 %.41)
  %.45 = call i8* @malloc(i64 %.43)
  %.46 = call i64 (i8*, i8*, ...) @sprintf(i8* %.45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.373, i64 0, i64 0), i64 %.41)
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.676378*
  %.49 = bitcast i8* %.47 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.49, align 8
  %.51 = getelementptr inbounds i8, i8* %.47, i64 8
  %8 = bitcast i8* %.51 to i8**
  store i8* %.45, i8** %8, align 8
  %.53 = getelementptr inbounds i8, i8* %.47, i64 16
  %9 = bitcast i8* %.53 to i64*
  store i64 %.43, i64* %9, align 8
  %.55 = getelementptr inbounds i8, i8* %.47, i64 24
  %10 = bitcast i8* %.55 to i64*
  store i64 %.43, i64* %10, align 8
  call void @println(%string.676378* %.48)
  %.58 = load %LLVMExecutionEngineRef.676749*, %LLVMExecutionEngineRef.676749** %engine, align 8
  call void @LLVMDisposeExecutionEngine(%LLVMExecutionEngineRef.676749* %.58)
  ret void
}

define %LLVMTargetMachineRef.676746* @GeneratedModule_create_target_machine(%GeneratedModule.676756* %.1, %string.676378* %.2) {
.4:
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %string.676378*
  %.10 = bitcast i8* %.8 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %.18 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.14, i8 0, i64 16, i1 false)
  %.19 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.18, align 8
  %.20 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.19, i64 0, i32 4
  %.21 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.20, align 8
  %.22 = call i1 %.21(%string.676378* %.2, %string.676378* %.9)
  br i1 %.22, label %true_block, label %false_block

true_block:                                       ; preds = %.4
  %.24 = call i8* @LLVMGetDefaultTargetTriple()
  br label %end

false_block:                                      ; preds = %.4
  %.28 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.18, align 8
  %.29 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.28, i64 0, i32 11
  %.30 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.29, align 8
  %.31 = call i8* %.30(%string.676378* %.2)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.33 = phi i8* [ %.24, %true_block ], [ %.31, %false_block ]
  %.35 = call %LLVMTargetRef.676745* @LLVMGetFirstTarget()
  %target = alloca %LLVMTargetRef.676745*, align 8
  store %LLVMTargetRef.676745* %.35, %LLVMTargetRef.676745** %target, align 8
  %.39 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 2
  %.40 = call i1 @LLVMGetTargetFromTriple(i8* %.33, %LLVMTargetRef.676745** nonnull %target, i8** nonnull %.39)
  br i1 %.40, label %end.if, label %end.endif

end.if:                                           ; preds = %end
  %.45 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.18, align 8
  %.46 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.45, i64 0, i32 11
  %.47 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.46, align 8
  %.48 = call i8* %.47(%string.676378* %.2)
  %.50 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.374, i64 0, i64 0), i8* %.48)
  %.52 = call i8* @malloc(i64 %.50)
  %.53 = call i64 (i8*, i8*, ...) @sprintf(i8* %.52, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.374, i64 0, i64 0), i8* %.48)
  %.54 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.676378*
  %.56 = bitcast i8* %.54 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.56, align 8
  %.58 = getelementptr inbounds i8, i8* %.54, i64 8
  %1 = bitcast i8* %.58 to i8**
  store i8* %.52, i8** %1, align 8
  %.60 = getelementptr inbounds i8, i8* %.54, i64 16
  %2 = bitcast i8* %.60 to i64*
  store i64 %.50, i64* %2, align 8
  %.62 = getelementptr inbounds i8, i8* %.54, i64 24
  %3 = bitcast i8* %.62 to i64*
  store i64 %.50, i64* %3, align 8
  call void @println(%string.676378* %.55)
  br label %end.endif

end.endif:                                        ; preds = %end.if, %end
  %.67 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 0
  %.68 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.67, align 8
  %.69 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.68, i64 0, i32 0
  %.70 = load void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)** %.69, align 8
  call void %.70(%GeneratedModule.676756* %.1)
  %.73 = load %LLVMTargetRef.676745*, %LLVMTargetRef.676745** %target, align 8
  %.76 = call i8* @LLVMGetHostCPUFeatures()
  %.77 = call %LLVMTargetMachineRef.676746* @LLVMCreateTargetMachine(%LLVMTargetRef.676745* %.73, i8* %.33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.375, i64 0, i64 0), i8* %.76, i64 3, i64 0, i64 0)
  ret %LLVMTargetMachineRef.676746* %.77
}

define void @GeneratedModule_write_object(%GeneratedModule.676756* %.1, %string.676378* %.2, %string.676378* %.3) {
.5:
  %.10 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 0
  %.11 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.10, align 8
  %.12 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.11, i64 0, i32 3
  %.13 = load %LLVMTargetMachineRef.676746* (%GeneratedModule.676756*, %string.676378*)*, %LLVMTargetMachineRef.676746* (%GeneratedModule.676756*, %string.676378*)** %.12, align 8
  %.15 = call %LLVMTargetMachineRef.676746* %.13(%GeneratedModule.676756* %.1, %string.676378* %.3)
  %.19 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.10, align 8
  %.20 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.19, i64 0, i32 6
  %.21 = load %LLVMModuleRef.676726* (%GeneratedModule.676756*)*, %LLVMModuleRef.676726* (%GeneratedModule.676756*)** %.20, align 8
  %.22 = call %LLVMModuleRef.676726* %.21(%GeneratedModule.676756* %.1)
  %.26 = call i8* @LLVMCreateTargetDataLayout(%LLVMTargetMachineRef.676746* %.15)
  call void @LLVMSetDataLayout(%LLVMModuleRef.676726* %.22, i8* %.26)
  %.30 = call i8* @LLVMGetTargetMachineTriple(%LLVMTargetMachineRef.676746* %.15)
  call void @LLVMSetTarget(%LLVMModuleRef.676726* %.22, i8* %.30)
  %.35 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.36 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.35, align 8
  %.37 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.36, i64 0, i32 11
  %.38 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.37, align 8
  %.39 = call i8* %.38(%string.676378* %.2)
  %.41 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 2
  %.42 = call i1 @LLVMTargetMachineEmitToFile(%LLVMTargetMachineRef.676746* %.15, %LLVMModuleRef.676726* %.22, i8* %.39, i64 1, i8** nonnull %.41)
  br i1 %.42, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.45 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.46 = bitcast i8* %.45 to %string.676378*
  %.46.repack = bitcast i8* %.45 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.46.repack, align 8
  %.46.repack1 = getelementptr inbounds i8, i8* %.45, i64 8
  %0 = bitcast i8* %.46.repack1 to i8**
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.376, i64 0, i64 0), i8** %0, align 8
  %.46.repack2 = getelementptr inbounds i8, i8* %.45, i64 16
  %1 = bitcast i8* %.46.repack2 to i64*
  store i64 41, i64* %1, align 8
  %.46.repack3 = getelementptr inbounds i8, i8* %.45, i64 24
  %2 = bitcast i8* %.46.repack3 to i64*
  store i64 41, i64* %2, align 8
  call void @println(%string.676378* %.46)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.52 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.10, align 8
  %.53 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.52, i64 0, i32 0
  %.54 = load void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)** %.53, align 8
  call void %.54(%GeneratedModule.676756* %.1)
  call void @LLVMDisposeTargetMachine(%LLVMTargetMachineRef.676746* %.15)
  ret void
}

define void @GeneratedModule_print(%GeneratedModule.676756* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.6, align 8
  call void @LLVMDumpModule(%LLVMModuleRef.676726* %.7)
  ret void
}

define %LLVMModuleRef.676726* @GeneratedModule_copy_llvm_module(%GeneratedModule.676756* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.6, align 8
  %.8 = call %LLVMModuleRef.676726* @LLVMCloneModule(%LLVMModuleRef.676726* %.7)
  ret %LLVMModuleRef.676726* %.8
}

define void @GeneratedModule_destroy(%GeneratedModule.676756* nocapture readonly %.1) {
.3:
  %.6 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.1, i64 0, i32 1
  %.7 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.6, align 8
  %.8 = call %LLVMContextRef.676725* @LLVMGetModuleContext(%LLVMModuleRef.676726* %.7)
  %.12 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.6, align 8
  call void @LLVMDisposeModule(%LLVMModuleRef.676726* %.12)
  call void @LLVMContextDispose(%LLVMContextRef.676725* %.8)
  call void @LLVMShutdown()
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.676765"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, int>_set"(%"Bucket<string, int>.676765"* nocapture %.1, %string.676378* %.2, i64 %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.1, i64 0, i32 2
  store i64 %.3, i64* %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, int>_constructor"(%"Map<string, int>.676762"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.676765"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, int>.676765"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, int>_vtable_ty.676766"**
  store %"Bucket<string, int>_vtable_ty.676766"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.676766"** %.26, align 8
  call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.676765"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, int>.676765"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, int>_hash_fnc"(%"Map<string, int>.676762"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, int>_resize"(%"Map<string, int>.676762"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.676765"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, int>.676765"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, int>_vtable_ty.676766"**
  store %"Bucket<string, int>_vtable_ty.676766"* @"Bucket<string, int>_vtable_data", %"Bucket<string, int>_vtable_ty.676766"** %.45, align 8
  call void @"Bucket<string, int>_constructor"(%"Bucket<string, int>.676765"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, int>.676765"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, int>_set"(%"Map<string, int>.676762"* %.1, %string.676378* %.2, i64 %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, int>.676762"*, %string.676378*)*, i64 (%"Map<string, int>.676762"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, int>.676762"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, int>.676762"*)*, void (%"Map<string, int>.676762"*)** %.32, align 8
  call void %.33(%"Map<string, int>.676762"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.39, i64 %.19
  %.41 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, int>_vtable_ty.676766"*, %"Bucket<string, int>_vtable_ty.676766"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, int>_vtable_ty.676766", %"Bucket<string, int>_vtable_ty.676766"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, int>.676765"*, %string.676378*, i64)*, void (%"Bucket<string, int>.676765"*, %string.676378*, i64)** %.92, align 8
  call void %.93(%"Bucket<string, int>.676765"* %.89, %string.676378* %.2, i64 %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.70, i64 %.65
  %.72 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define i64 @"Map<string, int>_get"(%"Map<string, int>.676762"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, int>.676762"*, %string.676378*)*, i64 (%"Map<string, int>.676762"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, int>.676762"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.22, i64 %.17
  %.24 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.54, i64 %.48
  %.56 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret i64 0

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.91, i64 0, i32 2
  %.93 = load i64, i64* %.92, align 8
  ret i64 %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, int>>_constructor"(%"Array<Bucket<string, int>>.676767"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.676765"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, int>>_resize"(%"Array<Bucket<string, int>>.676767"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, int>.676765"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, int>>_swap"(%"Array<Bucket<string, int>>.676767"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, int>.676765"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, int>.676765"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, int>.676765"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, int>>___sl__"(%"Array<Bucket<string, int>>.676767"* %.1, %"Bucket<string, int>.676765"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, int>>.676767"*)*, void (%"Array<Bucket<string, int>>.676767"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, int>>.676767"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.31, i64 %.24
  store %"Bucket<string, int>.676765"* %.2, %"Bucket<string, int>.676765"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, int>>___setitem__"(%"Array<Bucket<string, int>>.676767"* nocapture readonly %.1, i64 %.2, %"Bucket<string, int>.676765"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.30, i64 %.2
  store %"Bucket<string, int>.676765"* %.3, %"Bucket<string, int>.676765"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, int>>_append"(%"Array<Bucket<string, int>>.676767"* %.1, %"Bucket<string, int>.676765"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)*, void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, int>>.676767"* %.1, %"Bucket<string, int>.676765"* %.2)
  ret void
}

define %"Bucket<string, int>.676765"* @"Array<Bucket<string, int>>___getitem__"(%"Array<Bucket<string, int>>.676767"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.28, i64 %.2
  %.30 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.29, align 8
  ret %"Bucket<string, int>.676765"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, int>.676765"* null
}

define i1 @"Array<Bucket<string, int>>___eq__"(%"Array<Bucket<string, int>>.676767"* %.1, %"Array<Bucket<string, int>>.676767"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)*, %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, int>.676765"* %.30(%"Array<Bucket<string, int>>.676767"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)*, %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, int>.676765"* %.37(%"Array<Bucket<string, int>>.676767"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, int>.676765"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, int>.676765"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, int>>___in__"(%"Array<Bucket<string, int>>.676767"* %.1, %"Bucket<string, int>.676765"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, int>.676765"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)*, %"Bucket<string, int>.676765"* (%"Array<Bucket<string, int>>.676767"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, int>.676765"* %.21(%"Array<Bucket<string, int>>.676767"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, int>.676765"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, int>>_find"(%"Array<Bucket<string, int>>.676767"* nocapture readonly %.1, %"Bucket<string, int>.676765"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, int>.676765"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, int>.676765"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, int>>_join"(%"Array<Bucket<string, int>>.676767"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.377, i64 0, i64 0), i64 20)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.377, i64 0, i64 0), i64 20)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, int>>___as_string__"(%"Array<Bucket<string, int>>.676767"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, int>>.676767", %"Array<Bucket<string, int>>.676767"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, int>>.676767"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, int>>.676767"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, int>>.676767"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, int>>.676767"* @"Map<string, int>_get_buckets"(%"Map<string, int>.676762"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, int>>.676767"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, int>>_vtable_ty.676768"**
  store %"Array<Bucket<string, int>>_vtable_ty.676768"* @"Array<Bucket<string, int>>_vtable_data", %"Array<Bucket<string, int>>_vtable_ty.676768"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, int>.676765"**, %"Bucket<string, int>.676765"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, int>.676765"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, int>.676765"*, align 8
  %4 = bitcast %"Bucket<string, int>.676765"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, int>.676765"*
  %.36 = getelementptr inbounds %"Bucket<string, int>.676765", %"Bucket<string, int>.676765"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, int>>.676767"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, int>.676765"*, %"Bucket<string, int>.676765"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, int>>_vtable_ty.676768"*, %"Array<Bucket<string, int>>_vtable_ty.676768"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, int>>_vtable_ty.676768", %"Array<Bucket<string, int>>_vtable_ty.676768"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)*, void (%"Array<Bucket<string, int>>.676767"*, %"Bucket<string, int>.676765"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, int>>.676767"* %.9, %"Bucket<string, int>.676765"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.676770"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, LLVMValueRef>_set"(%"Bucket<string, LLVMValueRef>.676770"* nocapture %.1, %string.676378* %.2, %LLVMValueRef.676728* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.1, i64 0, i32 2
  store %LLVMValueRef.676728* %.3, %LLVMValueRef.676728** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.676763"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.676770"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, LLVMValueRef>.676770"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, LLVMValueRef>_vtable_ty.676771"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.676771"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.676771"** %.26, align 8
  call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.676770"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, LLVMValueRef>_hash_fnc"(%"Map<string, LLVMValueRef>.676763"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, LLVMValueRef>_resize"(%"Map<string, LLVMValueRef>.676763"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.676770"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, LLVMValueRef>.676770"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, LLVMValueRef>_vtable_ty.676771"**
  store %"Bucket<string, LLVMValueRef>_vtable_ty.676771"* @"Bucket<string, LLVMValueRef>_vtable_data", %"Bucket<string, LLVMValueRef>_vtable_ty.676771"** %.45, align 8
  call void @"Bucket<string, LLVMValueRef>_constructor"(%"Bucket<string, LLVMValueRef>.676770"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, LLVMValueRef>_set"(%"Map<string, LLVMValueRef>.676763"* %.1, %string.676378* %.2, %LLVMValueRef.676728* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, i64 (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, LLVMValueRef>.676763"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, LLVMValueRef>.676763"*)*, void (%"Map<string, LLVMValueRef>.676763"*)** %.32, align 8
  call void %.33(%"Map<string, LLVMValueRef>.676763"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.39, i64 %.19
  %.41 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, LLVMValueRef>_vtable_ty.676771"*, %"Bucket<string, LLVMValueRef>_vtable_ty.676771"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, LLVMValueRef>_vtable_ty.676771", %"Bucket<string, LLVMValueRef>_vtable_ty.676771"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, LLVMValueRef>.676770"*, %string.676378*, %LLVMValueRef.676728*)*, void (%"Bucket<string, LLVMValueRef>.676770"*, %string.676378*, %LLVMValueRef.676728*)** %.92, align 8
  call void %.93(%"Bucket<string, LLVMValueRef>.676770"* %.89, %string.676378* %.2, %LLVMValueRef.676728* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.70, i64 %.65
  %.72 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %LLVMValueRef.676728* @"Map<string, LLVMValueRef>_get"(%"Map<string, LLVMValueRef>.676763"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, i64 (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, LLVMValueRef>.676763"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.22, i64 %.17
  %.24 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.54, i64 %.48
  %.56 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %LLVMValueRef.676728* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.91, i64 0, i32 2
  %.93 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.92, align 8
  ret %LLVMValueRef.676728* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_constructor"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.676770"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, LLVMValueRef>>_resize"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, LLVMValueRef>.676770"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>_swap"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>___sl__"(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, %"Bucket<string, LLVMValueRef>.676770"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, LLVMValueRef>>.676772"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.31, i64 %.24
  store %"Bucket<string, LLVMValueRef>.676770"* %.2, %"Bucket<string, LLVMValueRef>.676770"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>___setitem__"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture readonly %.1, i64 %.2, %"Bucket<string, LLVMValueRef>.676770"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.30, i64 %.2
  store %"Bucket<string, LLVMValueRef>.676770"* %.3, %"Bucket<string, LLVMValueRef>.676770"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, LLVMValueRef>>_append"(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, %"Bucket<string, LLVMValueRef>.676770"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, %"Bucket<string, LLVMValueRef>.676770"* %.2)
  ret void
}

define %"Bucket<string, LLVMValueRef>.676770"* @"Array<Bucket<string, LLVMValueRef>>___getitem__"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.28, i64 %.2
  %.30 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.29, align 8
  ret %"Bucket<string, LLVMValueRef>.676770"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, LLVMValueRef>.676770"* null
}

define i1 @"Array<Bucket<string, LLVMValueRef>>___eq__"(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, %"Array<Bucket<string, LLVMValueRef>>.676772"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)*, %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, LLVMValueRef>.676770"* %.30(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)*, %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, LLVMValueRef>.676770"* %.37(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.676770"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, LLVMValueRef>.676770"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, LLVMValueRef>>___in__"(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, %"Bucket<string, LLVMValueRef>.676770"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.676770"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)*, %"Bucket<string, LLVMValueRef>.676770"* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, LLVMValueRef>.676770"* %.21(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, LLVMValueRef>.676770"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, LLVMValueRef>>_find"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture readonly %.1, %"Bucket<string, LLVMValueRef>.676770"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, LLVMValueRef>.676770"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, LLVMValueRef>>_join"(%"Array<Bucket<string, LLVMValueRef>>.676772"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.378, i64 0, i64 0), i64 29)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @str.378, i64 0, i64 0), i64 29)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, LLVMValueRef>>___as_string__"(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>.676772", %"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, LLVMValueRef>>.676772"* @"Map<string, LLVMValueRef>_get_buckets"(%"Map<string, LLVMValueRef>.676763"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, LLVMValueRef>>.676772"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"**
  store %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* @"Array<Bucket<string, LLVMValueRef>>_vtable_data", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, LLVMValueRef>.676770"**, %"Bucket<string, LLVMValueRef>.676770"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, LLVMValueRef>.676770"*, align 8
  %4 = bitcast %"Bucket<string, LLVMValueRef>.676770"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, LLVMValueRef>.676770"*
  %.36 = getelementptr inbounds %"Bucket<string, LLVMValueRef>.676770", %"Bucket<string, LLVMValueRef>.676770"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, LLVMValueRef>>.676772"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, LLVMValueRef>.676770"*, %"Bucket<string, LLVMValueRef>.676770"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"*, %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773", %"Array<Bucket<string, LLVMValueRef>>_vtable_ty.676773"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)*, void (%"Array<Bucket<string, LLVMValueRef>>.676772"*, %"Bucket<string, LLVMValueRef>.676770"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, LLVMValueRef>>.676772"* %.9, %"Bucket<string, LLVMValueRef>.676770"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMTypeRef>_constructor"(%"Array<LLVMTypeRef>.676776"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMTypeRef.676727*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMTypeRef>_resize"(%"Array<LLVMTypeRef>.676776"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMTypeRef.676727*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<LLVMTypeRef>_swap"(%"Array<LLVMTypeRef>.676776"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %.48 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.47, align 8
  %.49 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.48, i64 %.2
  %4 = bitcast %LLVMTypeRef.676727** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.48, i64 %.3
  %5 = bitcast %LLVMTypeRef.676727** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.47, align 8
  %.69 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.67, i64 %.3
  %6 = bitcast %LLVMTypeRef.676727** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMTypeRef>___sl__"(%"Array<LLVMTypeRef>.676776"* %.1, %LLVMTypeRef.676727* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMTypeRef>.676776"*)*, void (%"Array<LLVMTypeRef>.676776"*)** %.18, align 8
  call void %.19(%"Array<LLVMTypeRef>.676776"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %.31 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.31, i64 %.24
  store %LLVMTypeRef.676727* %.2, %LLVMTypeRef.676727** %.33, align 8
  ret void
}

define void @"Array<LLVMTypeRef>___setitem__"(%"Array<LLVMTypeRef>.676776"* nocapture readonly %.1, i64 %.2, %LLVMTypeRef.676727* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %.30 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.30, i64 %.2
  store %LLVMTypeRef.676727* %.3, %LLVMTypeRef.676727** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMTypeRef>_append"(%"Array<LLVMTypeRef>.676776"* %.1, %LLVMTypeRef.676727* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)** %.10, align 8
  call void %.11(%"Array<LLVMTypeRef>.676776"* %.1, %LLVMTypeRef.676727* %.2)
  ret void
}

define %LLVMTypeRef.676727* @"Array<LLVMTypeRef>___getitem__"(%"Array<LLVMTypeRef>.676776"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %.28 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.28, i64 %.2
  %.30 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.29, align 8
  ret %LLVMTypeRef.676727* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMTypeRef.676727* null
}

define i1 @"Array<LLVMTypeRef>___eq__"(%"Array<LLVMTypeRef>.676776"* %.1, %"Array<LLVMTypeRef>.676776"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.28, i64 0, i32 5
  %.30 = load %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)*, %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)** %.29, align 8
  %.31 = call %LLVMTypeRef.676727* %.30(%"Array<LLVMTypeRef>.676776"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.35, i64 0, i32 5
  %.37 = load %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)*, %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)** %.36, align 8
  %.38 = call %LLVMTypeRef.676727* %.37(%"Array<LLVMTypeRef>.676776"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMTypeRef.676727* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMTypeRef.676727* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMTypeRef>___in__"(%"Array<LLVMTypeRef>.676776"* %.1, %LLVMTypeRef.676727* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMTypeRef.676727* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.19, i64 0, i32 5
  %.21 = load %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)*, %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)** %.20, align 8
  %.22 = call %LLVMTypeRef.676727* %.21(%"Array<LLVMTypeRef>.676776"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMTypeRef.676727* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMTypeRef>_find"(%"Array<LLVMTypeRef>.676776"* nocapture readonly %.1, %LLVMTypeRef.676727* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 1
  %.19 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.18, align 8
  %0 = ptrtoint %LLVMTypeRef.676727* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.19, i64 %storemerge5
  %1 = bitcast %LLVMTypeRef.676727** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<LLVMTypeRef>_join"(%"Array<LLVMTypeRef>.676776"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.379, i64 0, i64 0), i64 12)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.379, i64 0, i64 0), i64 12)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<LLVMTypeRef>___as_string__"(%"Array<LLVMTypeRef>.676776"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<LLVMTypeRef>.676776"*, %string.676378*)*, %string.676378* (%"Array<LLVMTypeRef>.676776"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<LLVMTypeRef>.676776"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define noalias %IntrinsicResult.676758* @get_intrinsic(%LLVMModuleRef.676726* %.1, %string.676378* %.2, %"Array<LLVMTypeRef>.676776"* nocapture readonly %.3, %LLVMTypeRef.676727* %.4, i1 %.5) local_unnamed_addr {
.7:
  %.14 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.16 = bitcast i8* %.14 to %IntrinsicResult_vtable_ty.676759**
  store %IntrinsicResult_vtable_ty.676759* @IntrinsicResult_vtable_data, %IntrinsicResult_vtable_ty.676759** %.16, align 8
  %.22 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.3, i64 0, i32 1
  %.23 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.22, align 8
  %.25 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.3, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.28 = call %LLVMTypeRef.676727* @LLVMFunctionType(%LLVMTypeRef.676727* %.4, %LLVMTypeRef.676727** %.23, i64 %.26, i1 %.5)
  %.29 = getelementptr inbounds i8, i8* %.14, i64 16
  %0 = bitcast i8* %.29 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.28, %LLVMTypeRef.676727** %0, align 8
  %.32 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.33 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.32, align 8
  %.34 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.33, i64 0, i32 11
  %.35 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.34, align 8
  %.36 = call i8* %.35(%string.676378* %.2)
  %.40 = call %LLVMValueRef.676728* @LLVMGetNamedFunction(%LLVMModuleRef.676726* %.1, i8* %.36)
  %1 = ptrtoint %LLVMValueRef.676728* %.40 to i64
  %.43 = trunc i64 %1 to i32
  %.45.not = icmp eq i32 %.43, 0
  br i1 %.45.not, label %.7.else, label %.7.endif

.7.else:                                          ; preds = %.7
  %.58 = call %LLVMValueRef.676728* @LLVMAddFunction(%LLVMModuleRef.676726* %.1, i8* %.36, %LLVMTypeRef.676727* %.28)
  br label %.7.endif

.7.endif:                                         ; preds = %.7, %.7.else
  %.58.sink = phi %LLVMValueRef.676728* [ %.58, %.7.else ], [ %.40, %.7 ]
  %.59 = getelementptr inbounds i8, i8* %.14, i64 8
  %2 = bitcast i8* %.59 to %LLVMValueRef.676728**
  store %LLVMValueRef.676728* %.58.sink, %LLVMValueRef.676728** %2, align 8
  %.15 = bitcast i8* %.14 to %IntrinsicResult.676758*
  ret %IntrinsicResult.676758* %.15
}

; Function Attrs: norecurse nounwind readonly
define i1 @is_terminated(%Block.676610* nocapture readonly %.1) local_unnamed_addr #4 {
.3:
  %.6 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 2
  %.7 = load i1, i1* %.6, align 1
  %.9 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 3
  %.10 = load i1, i1* %.9, align 1
  %.11 = or i1 %.7, %.10
  %.13 = getelementptr inbounds %Block.676610, %Block.676610* %.1, i64 0, i32 4
  %.14 = load i1, i1* %.13, align 1
  %.15 = or i1 %.11, %.14
  ret i1 %.15
}

define noalias %string.676378* @create_var_key(%VarId.676596* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.12 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.15 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.380, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.17 = call i8* @malloc(i64 %.15)
  %.18 = call i64 (i8*, i8*, ...) @sprintf(i8* %.17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.380, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.676378*
  %.21 = bitcast i8* %.19 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.21, align 8
  %.23 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.23 to i8**
  store i8* %.17, i8** %0, align 8
  %.25 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.25 to i64*
  store i64 %.15, i64* %1, align 8
  %.27 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.27 to i64*
  store i64 %.15, i64* %2, align 8
  ret %string.676378* %.20
}

define noalias %string.676378* @create_type_id_key(%TypeId.676552* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.1, i64 0, i32 1
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.12 = getelementptr inbounds %TypeId.676552, %TypeId.676552* %.1, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.15 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.380, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.17 = call i8* @malloc(i64 %.15)
  %.18 = call i64 (i8*, i8*, ...) @sprintf(i8* %.17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.380, i64 0, i64 0), i64 %.7, i64 %.10, i64 %.13)
  %.19 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.20 = bitcast i8* %.19 to %string.676378*
  %.21 = bitcast i8* %.19 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.21, align 8
  %.23 = getelementptr inbounds i8, i8* %.19, i64 8
  %0 = bitcast i8* %.23 to i8**
  store i8* %.17, i8** %0, align 8
  %.25 = getelementptr inbounds i8, i8* %.19, i64 16
  %1 = bitcast i8* %.25 to i64*
  store i64 %.15, i64* %1, align 8
  %.27 = getelementptr inbounds i8, i8* %.19, i64 24
  %2 = bitcast i8* %.27 to i64*
  store i64 %.15, i64* %2, align 8
  ret %string.676378* %.20
}

define noalias %string.676378* @create_type_key_from_var(%VarId.676596* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 2
  %.7 = load i64, i64* %.6, align 8
  %.9 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  %.11 = add i64 %.10, -3
  %.13 = getelementptr inbounds %VarId.676596, %VarId.676596* %.1, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  %.16 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.380, i64 0, i64 0), i64 %.7, i64 %.11, i64 %.14)
  %.18 = call i8* @malloc(i64 %.16)
  %.19 = call i64 (i8*, i8*, ...) @sprintf(i8* %.18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.380, i64 0, i64 0), i64 %.7, i64 %.11, i64 %.14)
  %.20 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.21 = bitcast i8* %.20 to %string.676378*
  %.22 = bitcast i8* %.20 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.22, align 8
  %.24 = getelementptr inbounds i8, i8* %.20, i64 8
  %0 = bitcast i8* %.24 to i8**
  store i8* %.18, i8** %0, align 8
  %.26 = getelementptr inbounds i8, i8* %.20, i64 16
  %1 = bitcast i8* %.26 to i64*
  store i64 %.16, i64* %1, align 8
  %.28 = getelementptr inbounds i8, i8* %.20, i64 24
  %2 = bitcast i8* %.28 to i64*
  store i64 %.16, i64* %2, align 8
  ret %string.676378* %.21
}

define noalias %string.676378* @create_prop_key(%PropId.676604* nocapture readonly %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %PropId.676604, %PropId.676604* %.1, i64 0, i32 2
  %.7 = load %TypeId.676552*, %TypeId.676552** %.6, align 8
  %.8 = call %string.676378* @create_type_id_key(%TypeId.676552* %.7)
  %.10 = getelementptr inbounds %PropId.676604, %PropId.676604* %.1, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.13 = getelementptr inbounds %PropId.676604, %PropId.676604* %.1, i64 0, i32 3
  %.14 = load i64, i64* %.13, align 8
  %.15 = getelementptr inbounds %string.676378, %string.676378* %.8, i64 0, i32 0
  %.16 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.15, align 8
  %.17 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.16, i64 0, i32 11
  %.18 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.17, align 8
  %.19 = call i8* %.18(%string.676378* %.8)
  %.21 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.381, i64 0, i64 0), i8* %.19, i64 %.11, i64 %.14)
  %.23 = call i8* @malloc(i64 %.21)
  %.24 = call i64 (i8*, i8*, ...) @sprintf(i8* %.23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.381, i64 0, i64 0), i8* %.19, i64 %.11, i64 %.14)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %string.676378*
  %.27 = bitcast i8* %.25 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %0, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %1 = bitcast i8* %.31 to i64*
  store i64 %.21, i64* %1, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %2 = bitcast i8* %.33 to i64*
  store i64 %.21, i64* %2, align 8
  ret %string.676378* %.26
}

define void @resize_type_array(%"Array<LLVMTypeRef>.676776"* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.15.not1 = icmp sgt i64 %.10, %.2
  br i1 %.15.not1, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge2 = phi i64 [ %.10, %for.body.lr.ph ], [ %.27, %for.body ]
  %.19 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.19, i64 0, i32 2
  %.21 = load void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)** %.20, align 8
  call void %.21(%"Array<LLVMTypeRef>.676776"* %.1, %LLVMTypeRef.676727* null)
  %.27 = add i64 %storemerge2, 1
  %.15.not = icmp sgt i64 %.27, %.2
  br i1 %.15.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret void
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMValueRef>_constructor"(%"Array<LLVMValueRef>.676778"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.676728*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMValueRef>_resize"(%"Array<LLVMValueRef>.676778"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMValueRef.676728*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<LLVMValueRef>_swap"(%"Array<LLVMValueRef>.676778"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %.48 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.47, align 8
  %.49 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.48, i64 %.2
  %4 = bitcast %LLVMValueRef.676728** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.48, i64 %.3
  %5 = bitcast %LLVMValueRef.676728** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.47, align 8
  %.69 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.67, i64 %.3
  %6 = bitcast %LLVMValueRef.676728** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMValueRef>___sl__"(%"Array<LLVMValueRef>.676778"* %.1, %LLVMValueRef.676728* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMValueRef>.676778"*)*, void (%"Array<LLVMValueRef>.676778"*)** %.18, align 8
  call void %.19(%"Array<LLVMValueRef>.676778"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %.31 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.31, i64 %.24
  store %LLVMValueRef.676728* %.2, %LLVMValueRef.676728** %.33, align 8
  ret void
}

define void @"Array<LLVMValueRef>___setitem__"(%"Array<LLVMValueRef>.676778"* nocapture readonly %.1, i64 %.2, %LLVMValueRef.676728* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %.30 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.30, i64 %.2
  store %LLVMValueRef.676728* %.3, %LLVMValueRef.676728** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMValueRef>_append"(%"Array<LLVMValueRef>.676778"* %.1, %LLVMValueRef.676728* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.10, align 8
  call void %.11(%"Array<LLVMValueRef>.676778"* %.1, %LLVMValueRef.676728* %.2)
  ret void
}

define %LLVMValueRef.676728* @"Array<LLVMValueRef>___getitem__"(%"Array<LLVMValueRef>.676778"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %.28 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.28, i64 %.2
  %.30 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.29, align 8
  ret %LLVMValueRef.676728* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMValueRef.676728* null
}

define i1 @"Array<LLVMValueRef>___eq__"(%"Array<LLVMValueRef>.676778"* %.1, %"Array<LLVMValueRef>.676778"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.28, i64 0, i32 5
  %.30 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.29, align 8
  %.31 = call %LLVMValueRef.676728* %.30(%"Array<LLVMValueRef>.676778"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.35, i64 0, i32 5
  %.37 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.36, align 8
  %.38 = call %LLVMValueRef.676728* %.37(%"Array<LLVMValueRef>.676778"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMValueRef.676728* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMValueRef.676728* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMValueRef>___in__"(%"Array<LLVMValueRef>.676778"* %.1, %LLVMValueRef.676728* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMValueRef.676728* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.19, i64 0, i32 5
  %.21 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.20, align 8
  %.22 = call %LLVMValueRef.676728* %.21(%"Array<LLVMValueRef>.676778"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMValueRef.676728* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMValueRef>_find"(%"Array<LLVMValueRef>.676778"* nocapture readonly %.1, %LLVMValueRef.676728* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 1
  %.19 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.18, align 8
  %0 = ptrtoint %LLVMValueRef.676728* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMValueRef.676728*, %LLVMValueRef.676728** %.19, i64 %storemerge5
  %1 = bitcast %LLVMValueRef.676728** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<LLVMValueRef>_join"(%"Array<LLVMValueRef>.676778"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.382, i64 0, i64 0), i64 13)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.382, i64 0, i64 0), i64 13)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<LLVMValueRef>___as_string__"(%"Array<LLVMValueRef>.676778"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<LLVMValueRef>.676778"*, %string.676378*)*, %string.676378* (%"Array<LLVMValueRef>.676778"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<LLVMValueRef>.676778"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define void @resize_value_array(%"Array<LLVMValueRef>.676778"* %.1, i64 %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.15.not1 = icmp sgt i64 %.10, %.2
  br i1 %.15.not1, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge2 = phi i64 [ %.10, %for.body.lr.ph ], [ %.27, %for.body ]
  %.19 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.19, i64 0, i32 2
  %.21 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.20, align 8
  call void %.21(%"Array<LLVMValueRef>.676778"* %.1, %LLVMValueRef.676728* null)
  %.27 = add i64 %storemerge2, 1
  %.15.not = icmp sgt i64 %.27, %.2
  br i1 %.15.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret void
}

; Function Attrs: nofree nounwind
define noalias %string.676378* @get_format_from_type(%Type.676538* nocapture readonly %.1) local_unnamed_addr #3 {
.3:
  %.6 = call i1 @is_int(%Type.676538* %.1)
  %.9 = getelementptr inbounds %Type.676538, %Type.676538* %.1, i64 0, i32 1
  %.10 = load i64, i64* %.9, align 8
  br i1 %.6, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %.11 = icmp eq i64 %.10, 6
  br i1 %.11, label %.3.if.if, label %.3.if.endif

.3.endif:                                         ; preds = %.3
  %0 = and i64 %.10, -2
  switch i64 %0, label %.3.endif.endif.endif [
    i64 8, label %.3.endif.if
    i64 10, label %.3.endif.endif.if
  ]

.3.if.if:                                         ; preds = %.3.if
  %.13 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.14 = bitcast i8* %.13 to %string.676378*
  %.14.repack = bitcast i8* %.13 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.14.repack, align 8
  %.14.repack19 = getelementptr inbounds i8, i8* %.13, i64 8
  %1 = bitcast i8* %.14.repack19 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.383, i64 0, i64 0), i8** %1, align 8
  %.14.repack20 = getelementptr inbounds i8, i8* %.13, i64 16
  %2 = bitcast i8* %.14.repack20 to i64*
  store i64 3, i64* %2, align 8
  %.14.repack21 = getelementptr inbounds i8, i8* %.13, i64 24
  %3 = bitcast i8* %.14.repack21 to i64*
  store i64 3, i64* %3, align 8
  ret %string.676378* %.14

.3.if.endif:                                      ; preds = %.3.if
  %.20 = icmp eq i64 %.10, 5
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.676378*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.23.repack, align 8
  %.23.repack16 = getelementptr inbounds i8, i8* %.22, i64 8
  %4 = bitcast i8* %.23.repack16 to i8**
  br i1 %.20, label %.3.if.endif.if, label %.3.if.endif.endif

.3.if.endif.if:                                   ; preds = %.3.if.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.384, i64 0, i64 0), i8** %4, align 8
  %.23.repack17 = getelementptr inbounds i8, i8* %.22, i64 16
  %5 = bitcast i8* %.23.repack17 to i64*
  store i64 2, i64* %5, align 8
  %.23.repack18 = getelementptr inbounds i8, i8* %.22, i64 24
  %6 = bitcast i8* %.23.repack18 to i64*
  store i64 2, i64* %6, align 8
  ret %string.676378* %.23

.3.if.endif.endif:                                ; preds = %.3.if.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.385, i64 0, i64 0), i8** %4, align 8
  %.27.repack14 = getelementptr inbounds i8, i8* %.22, i64 16
  %7 = bitcast i8* %.27.repack14 to i64*
  store i64 2, i64* %7, align 8
  %.27.repack15 = getelementptr inbounds i8, i8* %.22, i64 24
  %8 = bitcast i8* %.27.repack15 to i64*
  store i64 2, i64* %8, align 8
  ret %string.676378* %.23

.3.endif.if:                                      ; preds = %.3.endif
  %.40 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.41 = bitcast i8* %.40 to %string.676378*
  %.41.repack = bitcast i8* %.40 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.41.repack, align 8
  %.41.repack10 = getelementptr inbounds i8, i8* %.40, i64 8
  %9 = bitcast i8* %.41.repack10 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.386, i64 0, i64 0), i8** %9, align 8
  %.41.repack11 = getelementptr inbounds i8, i8* %.40, i64 16
  %10 = bitcast i8* %.41.repack11 to i64*
  store i64 2, i64* %10, align 8
  %.41.repack12 = getelementptr inbounds i8, i8* %.40, i64 24
  %11 = bitcast i8* %.41.repack12 to i64*
  store i64 2, i64* %11, align 8
  ret %string.676378* %.41

.3.endif.endif.if:                                ; preds = %.3.endif
  %.54 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.55 = bitcast i8* %.54 to %string.676378*
  %.55.repack = bitcast i8* %.54 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.55.repack, align 8
  %.55.repack7 = getelementptr inbounds i8, i8* %.54, i64 8
  %12 = bitcast i8* %.55.repack7 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.387, i64 0, i64 0), i8** %12, align 8
  %.55.repack8 = getelementptr inbounds i8, i8* %.54, i64 16
  %13 = bitcast i8* %.55.repack8 to i64*
  store i64 3, i64* %13, align 8
  %.55.repack9 = getelementptr inbounds i8, i8* %.54, i64 24
  %14 = bitcast i8* %.55.repack9 to i64*
  store i64 3, i64* %14, align 8
  ret %string.676378* %.55

.3.endif.endif.endif:                             ; preds = %.3.endif
  %.59 = call i1 @is_pointer(%Type.676538* %.1)
  %.61 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.62 = bitcast i8* %.61 to %string.676378*
  %.62.repack = bitcast i8* %.61 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.62.repack, align 8
  %.62.repack4 = getelementptr inbounds i8, i8* %.61, i64 8
  %15 = bitcast i8* %.62.repack4 to i8**
  br i1 %.59, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.388, i64 0, i64 0), i8** %15, align 8
  %.62.repack5 = getelementptr inbounds i8, i8* %.61, i64 16
  %16 = bitcast i8* %.62.repack5 to i64*
  store i64 2, i64* %16, align 8
  %.62.repack6 = getelementptr inbounds i8, i8* %.61, i64 24
  %17 = bitcast i8* %.62.repack6 to i64*
  store i64 2, i64* %17, align 8
  ret %string.676378* %.62

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.275, i64 0, i64 0), i8** %15, align 8
  %.66.repack2 = getelementptr inbounds i8, i8* %.61, i64 16
  %18 = bitcast i8* %.66.repack2 to i64*
  store i64 2, i64* %18, align 8
  %.66.repack3 = getelementptr inbounds i8, i8* %.61, i64 24
  %19 = bitcast i8* %.66.repack3 to i64*
  store i64 2, i64* %19, align 8
  ret %string.676378* %.62
}

; Function Attrs: nofree nounwind
define void @"Array<LLVMModuleRef>_constructor"(%"Array<LLVMModuleRef>.676782"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMModuleRef.676726*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<LLVMModuleRef>_resize"(%"Array<LLVMModuleRef>.676782"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %0 = bitcast %LLVMModuleRef.676726*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<LLVMModuleRef>_swap"(%"Array<LLVMModuleRef>.676782"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %.48 = load %LLVMModuleRef.676726**, %LLVMModuleRef.676726*** %.47, align 8
  %.49 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.48, i64 %.2
  %4 = bitcast %LLVMModuleRef.676726** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.48, i64 %.3
  %5 = bitcast %LLVMModuleRef.676726** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %LLVMModuleRef.676726**, %LLVMModuleRef.676726*** %.47, align 8
  %.69 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.67, i64 %.3
  %6 = bitcast %LLVMModuleRef.676726** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMModuleRef>___sl__"(%"Array<LLVMModuleRef>.676782"* %.1, %LLVMModuleRef.676726* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 0
  %.17 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<LLVMModuleRef>.676782"*)*, void (%"Array<LLVMModuleRef>.676782"*)** %.18, align 8
  call void %.19(%"Array<LLVMModuleRef>.676782"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %.31 = load %LLVMModuleRef.676726**, %LLVMModuleRef.676726*** %.30, align 8
  %.33 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.31, i64 %.24
  store %LLVMModuleRef.676726* %.2, %LLVMModuleRef.676726** %.33, align 8
  ret void
}

define void @"Array<LLVMModuleRef>___setitem__"(%"Array<LLVMModuleRef>.676782"* nocapture readonly %.1, i64 %.2, %LLVMModuleRef.676726* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %.30 = load %LLVMModuleRef.676726**, %LLVMModuleRef.676726*** %.29, align 8
  %.32 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.30, i64 %.2
  store %LLVMModuleRef.676726* %.3, %LLVMModuleRef.676726** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<LLVMModuleRef>_append"(%"Array<LLVMModuleRef>.676782"* %.1, %LLVMModuleRef.676726* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 0
  %.9 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)*, void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)** %.10, align 8
  call void %.11(%"Array<LLVMModuleRef>.676782"* %.1, %LLVMModuleRef.676726* %.2)
  ret void
}

define %LLVMModuleRef.676726* @"Array<LLVMModuleRef>___getitem__"(%"Array<LLVMModuleRef>.676782"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %.28 = load %LLVMModuleRef.676726**, %LLVMModuleRef.676726*** %.27, align 8
  %.29 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.28, i64 %.2
  %.30 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.29, align 8
  ret %LLVMModuleRef.676726* %.30

.4.endif:                                         ; preds = %.4
  ret %LLVMModuleRef.676726* null
}

define i1 @"Array<LLVMModuleRef>___eq__"(%"Array<LLVMModuleRef>.676782"* %.1, %"Array<LLVMModuleRef>.676782"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.28, i64 0, i32 5
  %.30 = load %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)** %.29, align 8
  %.31 = call %LLVMModuleRef.676726* %.30(%"Array<LLVMModuleRef>.676782"* %.1, i64 %storemerge3)
  %.35 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.35, i64 0, i32 5
  %.37 = load %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)** %.36, align 8
  %.38 = call %LLVMModuleRef.676726* %.37(%"Array<LLVMModuleRef>.676782"* %.2, i64 %storemerge3)
  %0 = ptrtoint %LLVMModuleRef.676726* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %LLVMModuleRef.676726* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<LLVMModuleRef>___in__"(%"Array<LLVMModuleRef>.676782"* %.1, %LLVMModuleRef.676726* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %LLVMModuleRef.676726* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.19, i64 0, i32 5
  %.21 = load %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)** %.20, align 8
  %.22 = call %LLVMModuleRef.676726* %.21(%"Array<LLVMModuleRef>.676782"* %.1, i64 %storemerge4)
  %1 = ptrtoint %LLVMModuleRef.676726* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<LLVMModuleRef>_find"(%"Array<LLVMModuleRef>.676782"* nocapture readonly %.1, %LLVMModuleRef.676726* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 1
  %.19 = load %LLVMModuleRef.676726**, %LLVMModuleRef.676726*** %.18, align 8
  %0 = ptrtoint %LLVMModuleRef.676726* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.19, i64 %storemerge5
  %1 = bitcast %LLVMModuleRef.676726** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<LLVMModuleRef>_join"(%"Array<LLVMModuleRef>.676782"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.389, i64 0, i64 0), i64 14)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.389, i64 0, i64 0), i64 14)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<LLVMModuleRef>___as_string__"(%"Array<LLVMModuleRef>.676782"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.1, i64 0, i32 0
  %.7 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<LLVMModuleRef>.676782"*, %string.676378*)*, %string.676378* (%"Array<LLVMModuleRef>.676782"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<LLVMModuleRef>.676782"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, IntrinsicResult>_constructor"(%"Bucket<string, IntrinsicResult>.676788"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, IntrinsicResult>_set"(%"Bucket<string, IntrinsicResult>.676788"* nocapture %.1, %string.676378* %.2, %IntrinsicResult.676758* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.1, i64 0, i32 2
  store %IntrinsicResult.676758* %.3, %IntrinsicResult.676758** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, IntrinsicResult>_constructor"(%"Map<string, IntrinsicResult>.676783"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.676788"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, IntrinsicResult>.676788"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, IntrinsicResult>_vtable_ty.676789"**
  store %"Bucket<string, IntrinsicResult>_vtable_ty.676789"* @"Bucket<string, IntrinsicResult>_vtable_data", %"Bucket<string, IntrinsicResult>_vtable_ty.676789"** %.26, align 8
  call void @"Bucket<string, IntrinsicResult>_constructor"(%"Bucket<string, IntrinsicResult>.676788"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, IntrinsicResult>_hash_fnc"(%"Map<string, IntrinsicResult>.676783"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, IntrinsicResult>_resize"(%"Map<string, IntrinsicResult>.676783"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.676788"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, IntrinsicResult>.676788"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, IntrinsicResult>_vtable_ty.676789"**
  store %"Bucket<string, IntrinsicResult>_vtable_ty.676789"* @"Bucket<string, IntrinsicResult>_vtable_data", %"Bucket<string, IntrinsicResult>_vtable_ty.676789"** %.45, align 8
  call void @"Bucket<string, IntrinsicResult>_constructor"(%"Bucket<string, IntrinsicResult>.676788"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, IntrinsicResult>_set"(%"Map<string, IntrinsicResult>.676783"* %.1, %string.676378* %.2, %IntrinsicResult.676758* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, IntrinsicResult>_vtable_ty.676787"*, %"Map<string, IntrinsicResult>_vtable_ty.676787"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.676787", %"Map<string, IntrinsicResult>_vtable_ty.676787"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)*, i64 (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, IntrinsicResult>.676783"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, IntrinsicResult>_vtable_ty.676787"*, %"Map<string, IntrinsicResult>_vtable_ty.676787"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.676787", %"Map<string, IntrinsicResult>_vtable_ty.676787"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, IntrinsicResult>.676783"*)*, void (%"Map<string, IntrinsicResult>.676783"*)** %.32, align 8
  call void %.33(%"Map<string, IntrinsicResult>.676783"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.39, i64 %.19
  %.41 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, IntrinsicResult>_vtable_ty.676789"*, %"Bucket<string, IntrinsicResult>_vtable_ty.676789"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, IntrinsicResult>_vtable_ty.676789", %"Bucket<string, IntrinsicResult>_vtable_ty.676789"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, IntrinsicResult>.676788"*, %string.676378*, %IntrinsicResult.676758*)*, void (%"Bucket<string, IntrinsicResult>.676788"*, %string.676378*, %IntrinsicResult.676758*)** %.92, align 8
  call void %.93(%"Bucket<string, IntrinsicResult>.676788"* %.89, %string.676378* %.2, %IntrinsicResult.676758* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.70, i64 %.65
  %.72 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %IntrinsicResult.676758* @"Map<string, IntrinsicResult>_get"(%"Map<string, IntrinsicResult>.676783"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, IntrinsicResult>_vtable_ty.676787"*, %"Map<string, IntrinsicResult>_vtable_ty.676787"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.676787", %"Map<string, IntrinsicResult>_vtable_ty.676787"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)*, i64 (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, IntrinsicResult>.676783"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.22, i64 %.17
  %.24 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.54, i64 %.48
  %.56 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %IntrinsicResult.676758* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.91, i64 0, i32 2
  %.93 = load %IntrinsicResult.676758*, %IntrinsicResult.676758** %.92, align 8
  ret %IntrinsicResult.676758* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, IntrinsicResult>>_constructor"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.676788"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, IntrinsicResult>>_resize"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, IntrinsicResult>.676788"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>_swap"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>___sl__"(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, %"Bucket<string, IntrinsicResult>.676788"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, IntrinsicResult>>.676790"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.31, i64 %.24
  store %"Bucket<string, IntrinsicResult>.676788"* %.2, %"Bucket<string, IntrinsicResult>.676788"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>___setitem__"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture readonly %.1, i64 %.2, %"Bucket<string, IntrinsicResult>.676788"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.30, i64 %.2
  store %"Bucket<string, IntrinsicResult>.676788"* %.3, %"Bucket<string, IntrinsicResult>.676788"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, IntrinsicResult>>_append"(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, %"Bucket<string, IntrinsicResult>.676788"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, %"Bucket<string, IntrinsicResult>.676788"* %.2)
  ret void
}

define %"Bucket<string, IntrinsicResult>.676788"* @"Array<Bucket<string, IntrinsicResult>>___getitem__"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.28, i64 %.2
  %.30 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.29, align 8
  ret %"Bucket<string, IntrinsicResult>.676788"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, IntrinsicResult>.676788"* null
}

define i1 @"Array<Bucket<string, IntrinsicResult>>___eq__"(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, %"Array<Bucket<string, IntrinsicResult>>.676790"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)*, %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, IntrinsicResult>.676788"* %.30(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)*, %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, IntrinsicResult>.676788"* %.37(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, IntrinsicResult>.676788"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, IntrinsicResult>.676788"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, IntrinsicResult>>___in__"(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, %"Bucket<string, IntrinsicResult>.676788"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, IntrinsicResult>.676788"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)*, %"Bucket<string, IntrinsicResult>.676788"* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, IntrinsicResult>.676788"* %.21(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, IntrinsicResult>.676788"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, IntrinsicResult>>_find"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture readonly %.1, %"Bucket<string, IntrinsicResult>.676788"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, IntrinsicResult>.676788"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, IntrinsicResult>>_join"(%"Array<Bucket<string, IntrinsicResult>>.676790"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.390, i64 0, i64 0), i64 32)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @str.390, i64 0, i64 0), i64 32)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, IntrinsicResult>>___as_string__"(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>.676790", %"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, IntrinsicResult>>.676790"* @"Map<string, IntrinsicResult>_get_buckets"(%"Map<string, IntrinsicResult>.676783"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, IntrinsicResult>>.676790"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"**
  store %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* @"Array<Bucket<string, IntrinsicResult>>_vtable_data", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, IntrinsicResult>.676788"**, %"Bucket<string, IntrinsicResult>.676788"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, IntrinsicResult>.676788"*, align 8
  %4 = bitcast %"Bucket<string, IntrinsicResult>.676788"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, IntrinsicResult>.676788"*
  %.36 = getelementptr inbounds %"Bucket<string, IntrinsicResult>.676788", %"Bucket<string, IntrinsicResult>.676788"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, IntrinsicResult>>.676790"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, IntrinsicResult>.676788"*, %"Bucket<string, IntrinsicResult>.676788"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"*, %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791", %"Array<Bucket<string, IntrinsicResult>>_vtable_ty.676791"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)*, void (%"Array<Bucket<string, IntrinsicResult>>.676790"*, %"Bucket<string, IntrinsicResult>.676788"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, IntrinsicResult>>.676790"* %.9, %"Bucket<string, IntrinsicResult>.676788"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.676793"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGClassType>_set"(%"Bucket<string, CGClassType>.676793"* nocapture %.1, %string.676378* %.2, %CGClassType.676760* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.1, i64 0, i32 2
  store %CGClassType.676760* %.3, %CGClassType.676760** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, CGClassType>_constructor"(%"Map<string, CGClassType>.676784"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.676793"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, CGClassType>.676793"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, CGClassType>_vtable_ty.676794"**
  store %"Bucket<string, CGClassType>_vtable_ty.676794"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.676794"** %.26, align 8
  call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.676793"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, CGClassType>.676793"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, CGClassType>_hash_fnc"(%"Map<string, CGClassType>.676784"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, CGClassType>_resize"(%"Map<string, CGClassType>.676784"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.676793"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, CGClassType>.676793"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, CGClassType>_vtable_ty.676794"**
  store %"Bucket<string, CGClassType>_vtable_ty.676794"* @"Bucket<string, CGClassType>_vtable_data", %"Bucket<string, CGClassType>_vtable_ty.676794"** %.45, align 8
  call void @"Bucket<string, CGClassType>_constructor"(%"Bucket<string, CGClassType>.676793"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGClassType>.676793"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, CGClassType>_set"(%"Map<string, CGClassType>.676784"* %.1, %string.676378* %.2, %CGClassType.676760* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.676792"*, %"Map<string, CGClassType>_vtable_ty.676792"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.676792", %"Map<string, CGClassType>_vtable_ty.676792"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, CGClassType>.676784"*, %string.676378*)*, i64 (%"Map<string, CGClassType>.676784"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, CGClassType>.676784"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, CGClassType>_vtable_ty.676792"*, %"Map<string, CGClassType>_vtable_ty.676792"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.676792", %"Map<string, CGClassType>_vtable_ty.676792"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, CGClassType>.676784"*)*, void (%"Map<string, CGClassType>.676784"*)** %.32, align 8
  call void %.33(%"Map<string, CGClassType>.676784"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.39, i64 %.19
  %.41 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, CGClassType>_vtable_ty.676794"*, %"Bucket<string, CGClassType>_vtable_ty.676794"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGClassType>_vtable_ty.676794", %"Bucket<string, CGClassType>_vtable_ty.676794"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, CGClassType>.676793"*, %string.676378*, %CGClassType.676760*)*, void (%"Bucket<string, CGClassType>.676793"*, %string.676378*, %CGClassType.676760*)** %.92, align 8
  call void %.93(%"Bucket<string, CGClassType>.676793"* %.89, %string.676378* %.2, %CGClassType.676760* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.70, i64 %.65
  %.72 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %CGClassType.676760* @"Map<string, CGClassType>_get"(%"Map<string, CGClassType>.676784"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, CGClassType>_vtable_ty.676792"*, %"Map<string, CGClassType>_vtable_ty.676792"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.676792", %"Map<string, CGClassType>_vtable_ty.676792"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, CGClassType>.676784"*, %string.676378*)*, i64 (%"Map<string, CGClassType>.676784"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, CGClassType>.676784"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.22, i64 %.17
  %.24 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.54, i64 %.48
  %.56 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %CGClassType.676760* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.91, i64 0, i32 2
  %.93 = load %CGClassType.676760*, %CGClassType.676760** %.92, align 8
  ret %CGClassType.676760* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, CGClassType>>_constructor"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.676793"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, CGClassType>>_resize"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGClassType>.676793"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, CGClassType>>_swap"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, CGClassType>.676793"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, CGClassType>.676793"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, CGClassType>.676793"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGClassType>>___sl__"(%"Array<Bucket<string, CGClassType>>.676795"* %.1, %"Bucket<string, CGClassType>.676793"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, CGClassType>>.676795"*)*, void (%"Array<Bucket<string, CGClassType>>.676795"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, CGClassType>>.676795"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.31, i64 %.24
  store %"Bucket<string, CGClassType>.676793"* %.2, %"Bucket<string, CGClassType>.676793"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, CGClassType>>___setitem__"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture readonly %.1, i64 %.2, %"Bucket<string, CGClassType>.676793"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.30, i64 %.2
  store %"Bucket<string, CGClassType>.676793"* %.3, %"Bucket<string, CGClassType>.676793"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGClassType>>_append"(%"Array<Bucket<string, CGClassType>>.676795"* %.1, %"Bucket<string, CGClassType>.676793"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)*, void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, CGClassType>>.676795"* %.1, %"Bucket<string, CGClassType>.676793"* %.2)
  ret void
}

define %"Bucket<string, CGClassType>.676793"* @"Array<Bucket<string, CGClassType>>___getitem__"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.28, i64 %.2
  %.30 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.29, align 8
  ret %"Bucket<string, CGClassType>.676793"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, CGClassType>.676793"* null
}

define i1 @"Array<Bucket<string, CGClassType>>___eq__"(%"Array<Bucket<string, CGClassType>>.676795"* %.1, %"Array<Bucket<string, CGClassType>>.676795"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)*, %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, CGClassType>.676793"* %.30(%"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)*, %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, CGClassType>.676793"* %.37(%"Array<Bucket<string, CGClassType>>.676795"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, CGClassType>.676793"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, CGClassType>.676793"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, CGClassType>>___in__"(%"Array<Bucket<string, CGClassType>>.676795"* %.1, %"Bucket<string, CGClassType>.676793"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, CGClassType>.676793"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)*, %"Bucket<string, CGClassType>.676793"* (%"Array<Bucket<string, CGClassType>>.676795"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, CGClassType>.676793"* %.21(%"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, CGClassType>.676793"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, CGClassType>>_find"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture readonly %.1, %"Bucket<string, CGClassType>.676793"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, CGClassType>.676793"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGClassType>.676793"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, CGClassType>>_join"(%"Array<Bucket<string, CGClassType>>.676795"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.391, i64 0, i64 0), i64 28)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.391, i64 0, i64 0), i64 28)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, CGClassType>>___as_string__"(%"Array<Bucket<string, CGClassType>>.676795"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>.676795", %"Array<Bucket<string, CGClassType>>.676795"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, CGClassType>>.676795"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, CGClassType>>.676795"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, CGClassType>>.676795"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, CGClassType>>.676795"* @"Map<string, CGClassType>_get_buckets"(%"Map<string, CGClassType>.676784"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, CGClassType>>.676795"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"**
  store %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* @"Array<Bucket<string, CGClassType>>_vtable_data", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, CGClassType>.676793"**, %"Bucket<string, CGClassType>.676793"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, CGClassType>.676793"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, CGClassType>.676793"*, align 8
  %4 = bitcast %"Bucket<string, CGClassType>.676793"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, CGClassType>.676793"*
  %.36 = getelementptr inbounds %"Bucket<string, CGClassType>.676793", %"Bucket<string, CGClassType>.676793"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, CGClassType>>.676795"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, CGClassType>.676793"*, %"Bucket<string, CGClassType>.676793"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"*, %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, CGClassType>>_vtable_ty.676796", %"Array<Bucket<string, CGClassType>>_vtable_ty.676796"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)*, void (%"Array<Bucket<string, CGClassType>>.676795"*, %"Bucket<string, CGClassType>.676793"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, CGClassType>>.676795"* %.9, %"Bucket<string, CGClassType>.676793"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.676798"* nocapture %.1) local_unnamed_addr #1 {
.3:
  %.6 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.1, i64 0, i32 3
  store i1 true, i1* %.6, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind writeonly
define void @"Bucket<string, CGEnumType>_set"(%"Bucket<string, CGEnumType>.676798"* nocapture %.1, %string.676378* %.2, %CGEnumType.676774* %.3) #1 {
.5:
  %.10 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.1, i64 0, i32 3
  store i1 false, i1* %.10, align 1
  %.14 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.1, i64 0, i32 1
  store %string.676378* %.2, %string.676378** %.14, align 8
  %.18 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.1, i64 0, i32 2
  store %CGEnumType.676774* %.3, %CGEnumType.676774** %.18, align 8
  ret void
}

; Function Attrs: nofree nounwind
define void @"Map<string, CGEnumType>_constructor"(%"Map<string, CGEnumType>.676785"* nocapture %.1) local_unnamed_addr #3 {
.3:
  %.9 = call dereferenceable_or_null(2048) i8* @malloc(i64 2048)
  %.11 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.676798"*** %.11 to i8**
  store i8* %.9, i8** %0, align 8
  br label %for.body

for.body:                                         ; preds = %for.body, %.3
  %storemerge2 = phi i64 [ 0, %.3 ], [ %.35, %for.body ]
  %.23 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.11, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Bucket<string, CGEnumType>.676798"*
  %.26 = bitcast i8* %.24 to %"Bucket<string, CGEnumType>_vtable_ty.676799"**
  store %"Bucket<string, CGEnumType>_vtable_ty.676799"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.676799"** %.26, align 8
  call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.676798"* %.25)
  %.29 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.23, i64 %storemerge2
  %1 = bitcast %"Bucket<string, CGEnumType>.676798"** %.29 to i8**
  store i8* %.24, i8** %1, align 8
  %.35 = add nuw nsw i64 %storemerge2, 1
  %exitcond.not = icmp eq i64 %.35, 256
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %.40 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 3
  store i64 256, i64* %.40, align 8
  %.43 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 2
  store i64 0, i64* %.43, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone
define i64 @"Map<string, CGEnumType>_hash_fnc"(%"Map<string, CGEnumType>.676785"* nocapture readnone %.1, %string.676378* nocapture readnone %.2) #6 {
.4:
  ret i64 5381
}

; Function Attrs: nounwind
define void @"Map<string, CGEnumType>_resize"(%"Map<string, CGEnumType>.676785"* nocapture %.1) #2 {
.3:
  %.6 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 3
  %.7 = load i64, i64* %.6, align 8
  %.13 = shl i64 %.7, 1
  store i64 %.13, i64* %.6, align 8
  %.18 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.676798"*** %.18 to i8**
  %.191 = load i8*, i8** %0, align 8
  %.23 = shl i64 %.7, 4
  %.25 = call i8* @realloc(i8* %.191, i64 %.23)
  store i8* %.25, i8** %0, align 8
  %.363 = load i64, i64* %.6, align 8
  %.374 = icmp slt i64 %.7, %.363
  br i1 %.374, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %storemerge5 = phi i64 [ %.54, %for.body ], [ %.7, %.3 ]
  %.42 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.18, align 8
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %"Bucket<string, CGEnumType>.676798"*
  %.45 = bitcast i8* %.43 to %"Bucket<string, CGEnumType>_vtable_ty.676799"**
  store %"Bucket<string, CGEnumType>_vtable_ty.676799"* @"Bucket<string, CGEnumType>_vtable_data", %"Bucket<string, CGEnumType>_vtable_ty.676799"** %.45, align 8
  call void @"Bucket<string, CGEnumType>_constructor"(%"Bucket<string, CGEnumType>.676798"* %.44)
  %.48 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.42, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGEnumType>.676798"** %.48 to i8**
  store i8* %.43, i8** %1, align 8
  %.54 = add nsw i64 %storemerge5, 1
  %.36 = load i64, i64* %.6, align 8
  %.37 = icmp slt i64 %.54, %.36
  br i1 %.37, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define void @"Map<string, CGEnumType>_set"(%"Map<string, CGEnumType>.676785"* %.1, %string.676378* %.2, %CGEnumType.676774* %.3) {
.5:
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Map<string, CGEnumType>_vtable_ty.676797"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.676797", %"Map<string, CGEnumType>_vtable_ty.676797"* %.11, i64 0, i32 0
  %.13 = load i64 (%"Map<string, CGEnumType>.676785"*, %string.676378*)*, i64 (%"Map<string, CGEnumType>.676785"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Map<string, CGEnumType>.676785"* %.1, %string.676378* %.2)
  %.17 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 3
  %.18 = load i64, i64* %.17, align 8
  %.19 = srem i64 %.15, %.18
  %.25 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 2
  %.26 = load i64, i64* %.25, align 8
  %.27.not = icmp sgt i64 %.18, %.26
  br i1 %.27.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = load %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Map<string, CGEnumType>_vtable_ty.676797"** %.10, align 8
  %.32 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.676797", %"Map<string, CGEnumType>_vtable_ty.676797"* %.31, i64 0, i32 1
  %.33 = load void (%"Map<string, CGEnumType>.676785"*)*, void (%"Map<string, CGEnumType>.676785"*)** %.32, align 8
  call void %.33(%"Map<string, CGEnumType>.676785"* %.1)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.38 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 1
  %.39 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.38, align 8
  %.40 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.39, i64 %.19
  %.41 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.40, align 8
  %.42 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.41, i64 0, i32 3
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.5.endif, %while.entry.endif
  %hash.0 = phi i64 [ %.65, %while.entry.endif ], [ %.19, %.5.endif ]
  %.49 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.38, align 8
  %.50 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.49, i64 %hash.0
  %.51 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.50, align 8
  %.52 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.51, i64 0, i32 1
  %.53 = load %string.676378*, %string.676378** %.52, align 8
  %.55 = getelementptr inbounds %string.676378, %string.676378* %.53, i64 0, i32 0
  %.56 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.55, align 8
  %.57 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.56, i64 0, i32 4
  %.58 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.57, align 8
  %.59 = call i1 %.58(%string.676378* %.53, %string.676378* %.2)
  br i1 %.59, label %while.exit, label %while.entry.endif

while.exit:                                       ; preds = %while.entry, %while.entry.endif, %.5.endif
  %hash.1 = phi i64 [ %.19, %.5.endif ], [ %.65, %while.entry.endif ], [ %hash.0, %while.entry ]
  %.79 = load i64, i64* %.25, align 8
  %.80 = add i64 %.79, 1
  store i64 %.80, i64* %.25, align 8
  %.87 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.38, align 8
  %.88 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.87, i64 %hash.1
  %.89 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.88, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.89, i64 0, i32 0
  %.91 = load %"Bucket<string, CGEnumType>_vtable_ty.676799"*, %"Bucket<string, CGEnumType>_vtable_ty.676799"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGEnumType>_vtable_ty.676799", %"Bucket<string, CGEnumType>_vtable_ty.676799"* %.91, i64 0, i32 0
  %.93 = load void (%"Bucket<string, CGEnumType>.676798"*, %string.676378*, %CGEnumType.676774*)*, void (%"Bucket<string, CGEnumType>.676798"*, %string.676378*, %CGEnumType.676774*)** %.92, align 8
  call void %.93(%"Bucket<string, CGEnumType>.676798"* %.89, %string.676378* %.2, %CGEnumType.676774* %.3)
  ret void

while.entry.endif:                                ; preds = %while.entry
  %.65 = add i64 %hash.0, 1
  %.70 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.38, align 8
  %.71 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.70, i64 %.65
  %.72 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.71, align 8
  %.73 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.72, i64 0, i32 3
  %.74 = load i1, i1* %.73, align 1
  br i1 %.74, label %while.exit, label %while.entry
}

define %CGEnumType.676774* @"Map<string, CGEnumType>_get"(%"Map<string, CGEnumType>.676785"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 0
  %.9 = load %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Map<string, CGEnumType>_vtable_ty.676797"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.676797", %"Map<string, CGEnumType>_vtable_ty.676797"* %.9, i64 0, i32 0
  %.11 = load i64 (%"Map<string, CGEnumType>.676785"*, %string.676378*)*, i64 (%"Map<string, CGEnumType>.676785"*, %string.676378*)** %.10, align 8
  %.13 = call i64 %.11(%"Map<string, CGEnumType>.676785"* %.1, %string.676378* %.2)
  %.15 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 3
  %.16 = load i64, i64* %.15, align 8
  %.17 = srem i64 %.13, %.16
  %.21 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 1
  %.22 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.21, align 8
  %.23 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.22, i64 %.17
  %.24 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.23, align 8
  %.25 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.24, i64 0, i32 3
  %.26 = load i1, i1* %.25, align 1
  br i1 %.26, label %while.exit, label %while.entry

while.entry:                                      ; preds = %.4, %while.entry.else
  %hash.0 = phi i64 [ %.48, %while.entry.else ], [ %.17, %.4 ]
  %.32 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.21, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.32, i64 %hash.0
  %.34 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.33, align 8
  %.35 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.34, i64 0, i32 1
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.36, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 4
  %.41 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call i1 %.41(%string.676378* %.36, %string.676378* %.2)
  br i1 %.42, label %while.exit, label %while.entry.else

while.exit:                                       ; preds = %while.entry, %while.entry.else, %.4
  %hash.1 = phi i64 [ %.17, %.4 ], [ %.48, %while.entry.else ], [ %hash.0, %while.entry ]
  %.64 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.21, align 8
  %.65 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.64, i64 %hash.1
  %.66 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.65, align 8
  %.67 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.66, i64 0, i32 3
  %.68 = load i1, i1* %.67, align 1
  br i1 %.68, label %while.exit.endif, label %while.exit.if

while.entry.else:                                 ; preds = %while.entry
  %.48 = add i64 %hash.0, 1
  %.54 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.21, align 8
  %.55 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.54, i64 %.48
  %.56 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.55, align 8
  %.57 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.56, i64 0, i32 3
  %.58 = load i1, i1* %.57, align 1
  br i1 %.58, label %while.exit, label %while.entry

while.exit.if:                                    ; preds = %while.exit
  %.77 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.66, i64 0, i32 1
  %.78 = load %string.676378*, %string.676378** %.77, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.78, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 4
  %.83 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.82, align 8
  %.84 = call i1 %.83(%string.676378* %.78, %string.676378* %.2)
  br i1 %.84, label %while.exit.if.if, label %while.exit.endif

while.exit.endif:                                 ; preds = %while.exit.if, %while.exit
  ret %CGEnumType.676774* null

while.exit.if.if:                                 ; preds = %while.exit.if
  %.89 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.21, align 8
  %.90 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.89, i64 %hash.1
  %.91 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.90, align 8
  %.92 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.91, i64 0, i32 2
  %.93 = load %CGEnumType.676774*, %CGEnumType.676774** %.92, align 8
  ret %CGEnumType.676774* %.93
}

; Function Attrs: nofree nounwind
define void @"Array<Bucket<string, CGEnumType>>_constructor"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.676798"*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Array<Bucket<string, CGEnumType>>_resize"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %0 = bitcast %"Bucket<string, CGEnumType>.676798"*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>_swap"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %.48 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.47, align 8
  %.49 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.48, i64 %.2
  %4 = bitcast %"Bucket<string, CGEnumType>.676798"** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.48, i64 %.3
  %5 = bitcast %"Bucket<string, CGEnumType>.676798"** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.47, align 8
  %.69 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.67, i64 %.3
  %6 = bitcast %"Bucket<string, CGEnumType>.676798"** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>___sl__"(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, %"Bucket<string, CGEnumType>.676798"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 0
  %.17 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.16, align 8
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.17, i64 0, i32 0
  %.19 = load void (%"Array<Bucket<string, CGEnumType>>.676800"*)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*)** %.18, align 8
  call void %.19(%"Array<Bucket<string, CGEnumType>>.676800"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %.31 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.30, align 8
  %.33 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.31, i64 %.24
  store %"Bucket<string, CGEnumType>.676798"* %.2, %"Bucket<string, CGEnumType>.676798"** %.33, align 8
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>___setitem__"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture readonly %.1, i64 %.2, %"Bucket<string, CGEnumType>.676798"* %.3) {
.5:
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %.30 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.29, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.30, i64 %.2
  store %"Bucket<string, CGEnumType>.676798"* %.3, %"Bucket<string, CGEnumType>.676798"** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Array<Bucket<string, CGEnumType>>_append"(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, %"Bucket<string, CGEnumType>.676798"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 0
  %.9 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.8, align 8
  %.10 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.9, i64 0, i32 2
  %.11 = load void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)** %.10, align 8
  call void %.11(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, %"Bucket<string, CGEnumType>.676798"* %.2)
  ret void
}

define %"Bucket<string, CGEnumType>.676798"* @"Array<Bucket<string, CGEnumType>>___getitem__"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %.28 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.27, align 8
  %.29 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.28, i64 %.2
  %.30 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.29, align 8
  ret %"Bucket<string, CGEnumType>.676798"* %.30

.4.endif:                                         ; preds = %.4
  ret %"Bucket<string, CGEnumType>.676798"* null
}

define i1 @"Array<Bucket<string, CGEnumType>>___eq__"(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, %"Array<Bucket<string, CGEnumType>>.676800"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.27 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 0
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.34 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.48, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.48, %for.cond ]
  %.28 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.27, align 8
  %.29 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.28, i64 0, i32 5
  %.30 = load %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)*, %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)** %.29, align 8
  %.31 = call %"Bucket<string, CGEnumType>.676798"* %.30(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 %storemerge3)
  %.35 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.34, align 8
  %.36 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.35, i64 0, i32 5
  %.37 = load %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)*, %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)** %.36, align 8
  %.38 = call %"Bucket<string, CGEnumType>.676798"* %.37(%"Array<Bucket<string, CGEnumType>>.676800"* %.2, i64 %storemerge3)
  %0 = ptrtoint %"Bucket<string, CGEnumType>.676798"* %.31 to i64
  %.39 = trunc i64 %0 to i32
  %1 = ptrtoint %"Bucket<string, CGEnumType>.676798"* %.38 to i64
  %.40 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, %.40
  %.48 = add nuw nsw i64 %storemerge3, 1
  br i1 %.41.not, label %for.cond, label %.4.if
}

define i1 @"Array<Bucket<string, CGEnumType>>___in__"(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, %"Bucket<string, CGEnumType>.676798"* %.2) {
.4:
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 0
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %0 = ptrtoint %"Bucket<string, CGEnumType>.676798"* %.2 to i64
  %.25 = trunc i64 %0 to i32
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.cond ]
  %.19 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.18, align 8
  %.20 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.19, i64 0, i32 5
  %.21 = load %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)*, %"Bucket<string, CGEnumType>.676798"* (%"Array<Bucket<string, CGEnumType>>.676800"*, i64)** %.20, align 8
  %.22 = call %"Bucket<string, CGEnumType>.676798"* %.21(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 %storemerge4)
  %1 = ptrtoint %"Bucket<string, CGEnumType>.676798"* %.22 to i64
  %.24 = trunc i64 %1 to i32
  %.26 = icmp eq i32 %.24, %.25
  %.33 = add nuw nsw i64 %storemerge4, 1
  br i1 %.26, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

; Function Attrs: norecurse nounwind readonly
define i64 @"Array<Bucket<string, CGEnumType>>_find"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture readonly %.1, %"Bucket<string, CGEnumType>.676798"* %.2) #4 {
.4:
  %.12 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  %.133 = load i64, i64* %.12, align 8
  %.144 = icmp sgt i64 %.133, 0
  br i1 %.144, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 1
  %.19 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.18, align 8
  %0 = ptrtoint %"Bucket<string, CGEnumType>.676798"* %.2 to i64
  %.24 = trunc i64 %0 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.33, %for.body.endif ]
  %.20 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.19, i64 %storemerge5
  %1 = bitcast %"Bucket<string, CGEnumType>.676798"** %.20 to i64*
  %.211 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.211 to i32
  %.25 = icmp eq i32 %.23, %.24
  br i1 %.25, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge5, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.33 = add nuw nsw i64 %storemerge5, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.33, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Array<Bucket<string, CGEnumType>>_join"(%"Array<Bucket<string, CGEnumType>>.676800"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.281 = icmp sgt i64 %.21, 0
  %.372 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.383 = bitcast i8* %.372 to %string.676378*
  %.394 = bitcast i8* %.372 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.394, align 8
  call void @string_constructor(%string.676378* %.383, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.392, i64 0, i64 0), i64 27)
  br i1 %.281, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.398 = phi %string_vtable_ty.676379** [ %.39, %for.body ], [ %.394, %.4 ]
  %.387 = phi %string.676378* [ %.38, %for.body ], [ %.383, %.4 ]
  %res.06 = phi %string.676378* [ %.52, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.58, %for.body ], [ 0, %.4 ]
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.398, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %.387, %string.676378* %.2)
  %.48 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.49 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.48, align 8
  %.50 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.49, i64 0, i32 0
  %.51 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.50, align 8
  %.52 = call %string.676378* %.51(%string.676378* %res.06, %string.676378* %.47)
  %.58 = add nuw nsw i64 %storemerge5, 1
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %string.676378*
  %.39 = bitcast i8* %.37 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.39, align 8
  call void @string_constructor(%string.676378* %.38, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.392, i64 0, i64 0), i64 27)
  %exitcond.not = icmp eq i64 %.58, %.21
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.38.le = bitcast i8* %.37 to %string.676378*
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %.4
  %res.0.lcssa = phi %string.676378* [ %.52, %for.cond.for.end_crit_edge ], [ %.8, %.4 ]
  %.38.lcssa = phi %string.676378* [ %.38.le, %for.cond.for.end_crit_edge ], [ %.383, %.4 ]
  %.73 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.74 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.73, align 8
  %.75 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.74, i64 0, i32 0
  %.76 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.75, align 8
  %.77 = call %string.676378* %.76(%string.676378* %res.0.lcssa, %string.676378* %.38.lcssa)
  ret %string.676378* %.77
}

define noalias %string.676378* @"Array<Bucket<string, CGEnumType>>___as_string__"(%"Array<Bucket<string, CGEnumType>>.676800"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>.676800", %"Array<Bucket<string, CGEnumType>>.676800"* %.1, i64 0, i32 0
  %.7 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.6, align 8
  %.8 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Array<Bucket<string, CGEnumType>>.676800"*, %string.676378*)*, %string.676378* (%"Array<Bucket<string, CGEnumType>>.676800"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Array<Bucket<string, CGEnumType>>.676800"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Array<Bucket<string, CGEnumType>>.676800"* @"Map<string, CGEnumType>_get_buckets"(%"Map<string, CGEnumType>.676785"* nocapture readonly %.1) {
.3:
  %.6 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Array<Bucket<string, CGEnumType>>.676800"*
  %.10 = bitcast i8* %.8 to %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"**
  store %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* @"Array<Bucket<string, CGEnumType>>_vtable_data", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.10, align 8
  %.12 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.12 to i8**
  store i8* %.6, i8** %0, align 8
  %.14 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.14 to i64*
  store i64 0, i64* %1, align 8
  %.16 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.16 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 3
  %.253 = load i64, i64* %.24, align 8
  %.264 = icmp sgt i64 %.253, 0
  br i1 %.264, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.3
  %.30 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge5 = phi i64 [ 0, %for.body.lr.ph ], [ %.52, %for.body.endif ]
  %.31 = load %"Bucket<string, CGEnumType>.676798"**, %"Bucket<string, CGEnumType>.676798"*** %.30, align 8
  %.32 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %.31, i64 %storemerge5
  %3 = bitcast %"Bucket<string, CGEnumType>.676798"** %.32 to i64*
  %.331 = load i64, i64* %3, align 8
  %current_bucket = alloca %"Bucket<string, CGEnumType>.676798"*, align 8
  %4 = bitcast %"Bucket<string, CGEnumType>.676798"** %current_bucket to i64*
  store i64 %.331, i64* %4, align 8
  %.35.cast = inttoptr i64 %.331 to %"Bucket<string, CGEnumType>.676798"*
  %.36 = getelementptr inbounds %"Bucket<string, CGEnumType>.676798", %"Bucket<string, CGEnumType>.676798"* %.35.cast, i64 0, i32 3
  %.37 = load i1, i1* %.36, align 1
  br i1 %.37, label %for.body.endif, label %for.body.if

for.end:                                          ; preds = %for.body.endif, %.3
  ret %"Array<Bucket<string, CGEnumType>>.676800"* %.9

for.body.if:                                      ; preds = %for.body
  %.41 = load %"Bucket<string, CGEnumType>.676798"*, %"Bucket<string, CGEnumType>.676798"** %current_bucket, align 8
  %.43 = load %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"*, %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"** %.10, align 8
  %.44 = getelementptr inbounds %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801", %"Array<Bucket<string, CGEnumType>>_vtable_ty.676801"* %.43, i64 0, i32 2
  %.45 = load void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)*, void (%"Array<Bucket<string, CGEnumType>>.676800"*, %"Bucket<string, CGEnumType>.676798"*)** %.44, align 8
  call void %.45(%"Array<Bucket<string, CGEnumType>>.676800"* %.9, %"Bucket<string, CGEnumType>.676798"* %.41)
  br label %for.body.endif

for.body.endif:                                   ; preds = %for.body, %for.body.if
  %.52 = add nuw nsw i64 %storemerge5, 1
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp slt i64 %.52, %.25
  br i1 %.26, label %for.body, label %for.end
}

define %GeneratedModule.676756* @CodeGen_codegen(%CodeGen.676780* %.1, %Program.676712* %.2) {
.4:
  %.9 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  store %Program.676712* %.2, %Program.676712** %.9, align 8
  %.13 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.15 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.15 to %"Array<LLVMModuleRef>_vtable_ty.676786"**
  store %"Array<LLVMModuleRef>_vtable_ty.676786"* @"Array<LLVMModuleRef>_vtable_data", %"Array<LLVMModuleRef>_vtable_ty.676786"** %.17, align 8
  %.19 = getelementptr inbounds i8, i8* %.15, i64 8
  %0 = bitcast i8* %.19 to i8**
  store i8* %.13, i8** %0, align 8
  %.21 = getelementptr inbounds i8, i8* %.15, i64 16
  %1 = bitcast i8* %.21 to i64*
  store i64 0, i64* %1, align 8
  %.23 = getelementptr inbounds i8, i8* %.15, i64 24
  %2 = bitcast i8* %.23 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 1
  %3 = bitcast %"Array<LLVMModuleRef>.676782"** %.25 to i8**
  store i8* %.15, i8** %3, align 8
  %.31 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 9
  %4 = bitcast %LLVMBasicBlockRef.676729** %.31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %4, i8 0, i64 16, i1 false)
  %.34 = call %LLVMContextRef.676725* @LLVMContextCreate()
  %.35 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  store %LLVMContextRef.676725* %.34, %LLVMContextRef.676725** %.35, align 8
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %"Map<string, LLVMValueRef>.676763"*
  %.40 = bitcast i8* %.38 to %"Map<string, LLVMValueRef>_vtable_ty.676769"**
  store %"Map<string, LLVMValueRef>_vtable_ty.676769"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.40, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.676763"* %.39)
  %.43 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 3
  %5 = bitcast %"Map<string, LLVMValueRef>.676763"** %.43 to i8**
  store i8* %.38, i8** %5, align 8
  %.50 = getelementptr inbounds %Program.676712, %Program.676712* %.2, i64 0, i32 1
  %.512 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.50, align 8
  %.523 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.512, i64 0, i32 2
  %.534 = load i64, i64* %.523, align 8
  %.545 = icmp sgt i64 %.534, 0
  br i1 %.545, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.60 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.517 = phi %"Array<Module>.676714"* [ %.512, %for.body.lr.ph ], [ %.51, %for.body ]
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.83, %for.body ]
  %.58 = load %"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"** %.25, align 8
  %.61 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.60, align 8
  %.62 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.61, i64 0, i32 12
  %.63 = load %LLVMModuleRef.676726* (%CodeGen.676780*, %Module.676696*)*, %LLVMModuleRef.676726* (%CodeGen.676780*, %Module.676696*)** %.62, align 8
  %.68 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.517, i64 0, i32 0
  %.69 = load %"Array<Module>_vtable_ty.676715"*, %"Array<Module>_vtable_ty.676715"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<Module>_vtable_ty.676715", %"Array<Module>_vtable_ty.676715"* %.69, i64 0, i32 5
  %.71 = load %Module.676696* (%"Array<Module>.676714"*, i64)*, %Module.676696* (%"Array<Module>.676714"*, i64)** %.70, align 8
  %.72 = call %Module.676696* %.71(%"Array<Module>.676714"* %.517, i64 %storemerge6)
  %.73 = call %LLVMModuleRef.676726* %.63(%CodeGen.676780* %.1, %Module.676696* %.72)
  %.74 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.58, i64 0, i32 0
  %.75 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.74, align 8
  %.76 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.75, i64 0, i32 2
  %.77 = load void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)*, void (%"Array<LLVMModuleRef>.676782"*, %LLVMModuleRef.676726*)** %.76, align 8
  call void %.77(%"Array<LLVMModuleRef>.676782"* %.58, %LLVMModuleRef.676726* %.73)
  %.83 = add nuw nsw i64 %storemerge6, 1
  %.51 = load %"Array<Module>.676714"*, %"Array<Module>.676714"** %.50, align 8
  %.52 = getelementptr inbounds %"Array<Module>.676714", %"Array<Module>.676714"* %.51, i64 0, i32 2
  %.53 = load i64, i64* %.52, align 8
  %.54 = icmp slt i64 %.83, %.53
  br i1 %.54, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4
  %.87 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.88 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.87, align 8
  %.89 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.88, i64 0, i32 1
  %.90 = load void (%CodeGen.676780*)*, void (%CodeGen.676780*)** %.89, align 8
  call void %.90(%CodeGen.676780* %.1)
  %.94 = load %"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"** %.25, align 8
  %.95 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.94, i64 0, i32 0
  %.96 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.95, align 8
  %.97 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.96, i64 0, i32 5
  %.98 = load %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)** %.97, align 8
  %.99 = call %LLVMModuleRef.676726* %.98(%"Array<LLVMModuleRef>.676782"* %.94, i64 0)
  %.100 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.101 = bitcast i8* %.100 to %GeneratedModule.676756*
  %.102 = bitcast i8* %.100 to %GeneratedModule_vtable_ty.676757**
  store %GeneratedModule_vtable_ty.676757* @GeneratedModule_vtable_data, %GeneratedModule_vtable_ty.676757** %.102, align 8
  call void @GeneratedModule_constructor(%GeneratedModule.676756* %.101, %LLVMModuleRef.676726* %.99)
  ret %GeneratedModule.676756* %.101
}

define void @CodeGen_link_modules(%CodeGen.676780* nocapture readonly %.1) {
.3:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 1
  %.112 = load %"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"** %.10, align 8
  %.123 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.112, i64 0, i32 2
  %.134 = load i64, i64* %.123, align 8
  %.145 = icmp sgt i64 %.134, 1
  br i1 %.145, label %for.body, label %for.end

for.body:                                         ; preds = %.3, %for.body
  %.117 = phi %"Array<LLVMModuleRef>.676782"* [ %.11, %for.body ], [ %.112, %.3 ]
  %storemerge6 = phi i64 [ %.38, %for.body ], [ 1, %.3 ]
  %.19 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.117, i64 0, i32 0
  %.20 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.19, align 8
  %.21 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.20, i64 0, i32 5
  %.22 = load %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)** %.21, align 8
  %.23 = call %LLVMModuleRef.676726* %.22(%"Array<LLVMModuleRef>.676782"* %.117, i64 0)
  %.27 = load %"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"** %.10, align 8
  %.28 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.27, i64 0, i32 0
  %.29 = load %"Array<LLVMModuleRef>_vtable_ty.676786"*, %"Array<LLVMModuleRef>_vtable_ty.676786"** %.28, align 8
  %.30 = getelementptr inbounds %"Array<LLVMModuleRef>_vtable_ty.676786", %"Array<LLVMModuleRef>_vtable_ty.676786"* %.29, i64 0, i32 5
  %.31 = load %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)*, %LLVMModuleRef.676726* (%"Array<LLVMModuleRef>.676782"*, i64)** %.30, align 8
  %.32 = call %LLVMModuleRef.676726* %.31(%"Array<LLVMModuleRef>.676782"* %.27, i64 %storemerge6)
  %.33 = call i1 @LLVMLinkModules2(%LLVMModuleRef.676726* %.23, %LLVMModuleRef.676726* %.32)
  %.38 = add nuw nsw i64 %storemerge6, 1
  %.11 = load %"Array<LLVMModuleRef>.676782"*, %"Array<LLVMModuleRef>.676782"** %.10, align 8
  %.12 = getelementptr inbounds %"Array<LLVMModuleRef>.676782", %"Array<LLVMModuleRef>.676782"* %.11, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.38, %.13
  br i1 %.14, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.3
  ret void
}

define %LLVMValueRef.676728* @CodeGen_get_var_from_varid(%CodeGen.676780* nocapture readonly %.1, %VarId.676596* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 3
  %.9 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.11, i64 0, i32 3
  %.13 = load %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.12, align 8
  %.15 = call %string.676378* @create_var_key(%VarId.676596* %.2)
  %.16 = call %LLVMValueRef.676728* %.13(%"Map<string, LLVMValueRef>.676763"* %.9, %string.676378* %.15)
  ret %LLVMValueRef.676728* %.16
}

define %CGClassType.676760* @CodeGen_get_class_from_typeid(%CodeGen.676780* nocapture readonly %.1, %TypeId.676552* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 6
  %.9 = load %"Map<string, CGClassType>.676784"*, %"Map<string, CGClassType>.676784"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.676792"*, %"Map<string, CGClassType>_vtable_ty.676792"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.676792", %"Map<string, CGClassType>_vtable_ty.676792"* %.11, i64 0, i32 3
  %.13 = load %CGClassType.676760* (%"Map<string, CGClassType>.676784"*, %string.676378*)*, %CGClassType.676760* (%"Map<string, CGClassType>.676784"*, %string.676378*)** %.12, align 8
  %.15 = call %string.676378* @create_type_id_key(%TypeId.676552* %.2)
  %.16 = call %CGClassType.676760* %.13(%"Map<string, CGClassType>.676784"* %.9, %string.676378* %.15)
  ret %CGClassType.676760* %.16
}

define %CGEnumType.676774* @CodeGen_get_enum_from_typeid(%CodeGen.676780* nocapture readonly %.1, %TypeId.676552* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 7
  %.9 = load %"Map<string, CGEnumType>.676785"*, %"Map<string, CGEnumType>.676785"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Map<string, CGEnumType>_vtable_ty.676797"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.676797", %"Map<string, CGEnumType>_vtable_ty.676797"* %.11, i64 0, i32 3
  %.13 = load %CGEnumType.676774* (%"Map<string, CGEnumType>.676785"*, %string.676378*)*, %CGEnumType.676774* (%"Map<string, CGEnumType>.676785"*, %string.676378*)** %.12, align 8
  %.15 = call %string.676378* @create_type_id_key(%TypeId.676552* %.2)
  %.16 = call %CGEnumType.676774* %.13(%"Map<string, CGEnumType>.676785"* %.9, %string.676378* %.15)
  ret %CGEnumType.676774* %.16
}

define %CGClassType.676760* @CodeGen_get_class_from_varid(%CodeGen.676780* nocapture readonly %.1, %VarId.676596* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 6
  %.9 = load %"Map<string, CGClassType>.676784"*, %"Map<string, CGClassType>.676784"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGClassType>_vtable_ty.676792"*, %"Map<string, CGClassType>_vtable_ty.676792"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.676792", %"Map<string, CGClassType>_vtable_ty.676792"* %.11, i64 0, i32 3
  %.13 = load %CGClassType.676760* (%"Map<string, CGClassType>.676784"*, %string.676378*)*, %CGClassType.676760* (%"Map<string, CGClassType>.676784"*, %string.676378*)** %.12, align 8
  %.15 = call %string.676378* @create_type_key_from_var(%VarId.676596* %.2)
  %.16 = call %CGClassType.676760* %.13(%"Map<string, CGClassType>.676784"* %.9, %string.676378* %.15)
  ret %CGClassType.676760* %.16
}

define %CGEnumType.676774* @CodeGen_get_enum_from_varid(%CodeGen.676780* nocapture readonly %.1, %VarId.676596* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 7
  %.9 = load %"Map<string, CGEnumType>.676785"*, %"Map<string, CGEnumType>.676785"** %.8, align 8
  %.10 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.9, i64 0, i32 0
  %.11 = load %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Map<string, CGEnumType>_vtable_ty.676797"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.676797", %"Map<string, CGEnumType>_vtable_ty.676797"* %.11, i64 0, i32 3
  %.13 = load %CGEnumType.676774* (%"Map<string, CGEnumType>.676785"*, %string.676378*)*, %CGEnumType.676774* (%"Map<string, CGEnumType>.676785"*, %string.676378*)** %.12, align 8
  %.15 = call %string.676378* @create_type_key_from_var(%VarId.676596* %.2)
  %.16 = call %CGEnumType.676774* %.13(%"Map<string, CGEnumType>.676785"* %.9, %string.676378* %.15)
  ret %CGEnumType.676774* %.16
}

define void @CodeGen_add_class(%CodeGen.676780* nocapture readonly %.1, %TypeId.676552* nocapture readonly %.2, %CGClassType.676760* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 6
  %.11 = load %"Map<string, CGClassType>.676784"*, %"Map<string, CGClassType>.676784"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGClassType>.676784", %"Map<string, CGClassType>.676784"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, CGClassType>_vtable_ty.676792"*, %"Map<string, CGClassType>_vtable_ty.676792"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, CGClassType>_vtable_ty.676792", %"Map<string, CGClassType>_vtable_ty.676792"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, CGClassType>.676784"*, %string.676378*, %CGClassType.676760*)*, void (%"Map<string, CGClassType>.676784"*, %string.676378*, %CGClassType.676760*)** %.14, align 8
  %.17 = call %string.676378* @create_type_id_key(%TypeId.676552* %.2)
  call void %.15(%"Map<string, CGClassType>.676784"* %.11, %string.676378* %.17, %CGClassType.676760* %.3)
  ret void
}

define void @CodeGen_add_enum(%CodeGen.676780* nocapture readonly %.1, %TypeId.676552* nocapture readonly %.2, %CGEnumType.676774* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 7
  %.11 = load %"Map<string, CGEnumType>.676785"*, %"Map<string, CGEnumType>.676785"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, CGEnumType>.676785", %"Map<string, CGEnumType>.676785"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, CGEnumType>_vtable_ty.676797"*, %"Map<string, CGEnumType>_vtable_ty.676797"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, CGEnumType>_vtable_ty.676797", %"Map<string, CGEnumType>_vtable_ty.676797"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, CGEnumType>.676785"*, %string.676378*, %CGEnumType.676774*)*, void (%"Map<string, CGEnumType>.676785"*, %string.676378*, %CGEnumType.676774*)** %.14, align 8
  %.17 = call %string.676378* @create_type_id_key(%TypeId.676552* %.2)
  call void %.15(%"Map<string, CGEnumType>.676785"* %.11, %string.676378* %.17, %CGEnumType.676774* %.3)
  ret void
}

define void @CodeGen_add_var(%CodeGen.676780* nocapture readonly %.1, %VarId.676596* nocapture readonly %.2, %LLVMValueRef.676728* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 3
  %.11 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.10, align 8
  %.12 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.11, i64 0, i32 0
  %.13 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.13, i64 0, i32 2
  %.15 = load void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)*, void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)** %.14, align 8
  %.17 = call %string.676378* @create_var_key(%VarId.676596* %.2)
  call void %.15(%"Map<string, LLVMValueRef>.676763"* %.11, %string.676378* %.17, %LLVMValueRef.676728* %.3)
  ret void
}

define %LLVMValueRef.676728* @CodeGen_neg_int(%LLVMBuilderRef.676733* %.1, %LLVMValueRef.676728* %.2) local_unnamed_addr {
.4:
  %.8 = call i1 @LLVMIsConstant(%LLVMValueRef.676728* %.2)
  br i1 %.8, label %true_block, label %false_block

true_block:                                       ; preds = %.4
  %.11 = call %LLVMValueRef.676728* @LLVMConstNeg(%LLVMValueRef.676728* %.2)
  br label %end

false_block:                                      ; preds = %.4
  %.15 = call %LLVMValueRef.676728* @LLVMBuildNeg(%LLVMBuilderRef.676733* %.1, %LLVMValueRef.676728* %.2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.17 = phi %LLVMValueRef.676728* [ %.11, %true_block ], [ %.15, %false_block ]
  ret %LLVMValueRef.676728* %.17
}

define %LLVMValueRef.676728* @CodeGen_createLLVMBool(%CodeGen.676780* nocapture readonly %.1, i1 %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.9 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.8, align 8
  %.10 = call %LLVMTypeRef.676727* @LLVMInt1TypeInContext(%LLVMContextRef.676725* %.9)
  %.12 = zext i1 %.2 to i64
  %.13 = call %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727* %.10, i64 %.12, i1 false)
  ret %LLVMValueRef.676728* %.13
}

define %LLVMValueRef.676728* @CodeGen_createLLVMInt(%CodeGen.676780* nocapture readonly %.1, i64 %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.9 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.8, align 8
  %.10 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.9, i64 64)
  %.12 = call %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727* %.10, i64 %.2, i1 false)
  ret %LLVMValueRef.676728* %.12
}

define %LLVMModuleRef.676726* @CodeGen_codegen_module(%CodeGen.676780* %.1, %Module.676696* nocapture readonly %.2) {
.4:
  %.8 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.8 to %"Map<string, LLVMValueRef>.676763"*
  %.10 = bitcast i8* %.8 to %"Map<string, LLVMValueRef>_vtable_ty.676769"**
  store %"Map<string, LLVMValueRef>_vtable_ty.676769"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.10, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.676763"* %.9)
  %.13 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 5
  %0 = bitcast %"Map<string, LLVMValueRef>.676763"** %.13 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %"Map<string, IntrinsicResult>.676783"*
  %.18 = bitcast i8* %.16 to %"Map<string, IntrinsicResult>_vtable_ty.676787"**
  store %"Map<string, IntrinsicResult>_vtable_ty.676787"* @"Map<string, IntrinsicResult>_vtable_data", %"Map<string, IntrinsicResult>_vtable_ty.676787"** %.18, align 8
  call void @"Map<string, IntrinsicResult>_constructor"(%"Map<string, IntrinsicResult>.676783"* %.17)
  %.21 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 4
  %1 = bitcast %"Map<string, IntrinsicResult>.676783"** %.21 to i8**
  store i8* %.16, i8** %1, align 8
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %"Map<string, CGClassType>.676784"*
  %.26 = bitcast i8* %.24 to %"Map<string, CGClassType>_vtable_ty.676792"**
  store %"Map<string, CGClassType>_vtable_ty.676792"* @"Map<string, CGClassType>_vtable_data", %"Map<string, CGClassType>_vtable_ty.676792"** %.26, align 8
  call void @"Map<string, CGClassType>_constructor"(%"Map<string, CGClassType>.676784"* %.25)
  %.29 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 6
  %2 = bitcast %"Map<string, CGClassType>.676784"** %.29 to i8**
  store i8* %.24, i8** %2, align 8
  %.32 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.33 = bitcast i8* %.32 to %"Map<string, CGEnumType>.676785"*
  %.34 = bitcast i8* %.32 to %"Map<string, CGEnumType>_vtable_ty.676797"**
  store %"Map<string, CGEnumType>_vtable_ty.676797"* @"Map<string, CGEnumType>_vtable_data", %"Map<string, CGEnumType>_vtable_ty.676797"** %.34, align 8
  call void @"Map<string, CGEnumType>_constructor"(%"Map<string, CGEnumType>.676785"* %.33)
  %.37 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 7
  %3 = bitcast %"Map<string, CGEnumType>.676785"** %.37 to i8**
  store i8* %.32, i8** %3, align 8
  %.41 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 2
  %.42 = load %string.676378*, %string.676378** %.41, align 8
  %.43 = getelementptr inbounds %string.676378, %string.676378* %.42, i64 0, i32 0
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 11
  %.46 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.45, align 8
  %.47 = call i8* %.46(%string.676378* %.42)
  %.49 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.50 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.49, align 8
  %.51 = call %LLVMModuleRef.676726* @LLVMModuleCreateWithNameInContext(i8* %.47, %LLVMContextRef.676725* %.50)
  %.52 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  store %LLVMModuleRef.676726* %.51, %LLVMModuleRef.676726** %.52, align 8
  %.60 = load %string.676378*, %string.676378** %.41, align 8
  %.61 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.62 = bitcast i8* %.61 to %DebugInfo.676752*
  %.63 = bitcast i8* %.61 to %DebugInfo_vtable_ty.676753**
  store %DebugInfo_vtable_ty.676753* @DebugInfo_vtable_data, %DebugInfo_vtable_ty.676753** %.63, align 8
  call void @DebugInfo_constructor(%DebugInfo.676752* %.62, %LLVMModuleRef.676726* %.51, %string.676378* %.60)
  %.66 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 14
  %4 = bitcast %DebugInfo.676752** %.66 to i8**
  store i8* %.61, i8** %4, align 8
  %.69 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.70 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.71 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.70, i64 0, i32 13
  %.72 = load void (%CodeGen.676780*, %ImportedSymbols.676686*)*, void (%CodeGen.676780*, %ImportedSymbols.676686*)** %.71, align 8
  %.74 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 11
  %.75 = load %ImportedSymbols.676686*, %ImportedSymbols.676686** %.74, align 8
  call void %.72(%CodeGen.676780* %.1, %ImportedSymbols.676686* %.75)
  %.78 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 12
  store i1 true, i1* %.78, align 1
  %.85 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 9
  %.8666 = load %"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"** %.85, align 8
  %.8767 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.8666, i64 0, i32 2
  %.8868 = load i64, i64* %.8767, align 8
  %.8969 = icmp sgt i64 %.8868, 0
  br i1 %.8969, label %for.body, label %for.cond.1.preheader

for.cond.1.preheader:                             ; preds = %for.body, %.4
  %.118 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 10
  %.11960 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.118, align 8
  %.12061 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.11960, i64 0, i32 2
  %.12162 = load i64, i64* %.12061, align 8
  %.12263 = icmp sgt i64 %.12162, 0
  br i1 %.12263, label %for.body.1, label %for.cond.2.preheader

for.body:                                         ; preds = %.4, %for.body
  %.8671 = phi %"Array<ConstDeclaration>.676704"* [ %.86, %for.body ], [ %.8666, %.4 ]
  %storemerge70 = phi i64 [ %.110, %for.body ], [ 0, %.4 ]
  %.93 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.94 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.93, i64 0, i32 51
  %.95 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ConstDeclaration.676618*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ConstDeclaration.676618*)** %.94, align 8
  %.100 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.8671, i64 0, i32 0
  %.101 = load %"Array<ConstDeclaration>_vtable_ty.676711"*, %"Array<ConstDeclaration>_vtable_ty.676711"** %.100, align 8
  %.102 = getelementptr inbounds %"Array<ConstDeclaration>_vtable_ty.676711", %"Array<ConstDeclaration>_vtable_ty.676711"* %.101, i64 0, i32 5
  %.103 = load %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)*, %ConstDeclaration.676618* (%"Array<ConstDeclaration>.676704"*, i64)** %.102, align 8
  %.104 = call %ConstDeclaration.676618* %.103(%"Array<ConstDeclaration>.676704"* %.8671, i64 %storemerge70)
  call void %.95(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* null, %ConstDeclaration.676618* %.104)
  %.110 = add nuw nsw i64 %storemerge70, 1
  %.86 = load %"Array<ConstDeclaration>.676704"*, %"Array<ConstDeclaration>.676704"** %.85, align 8
  %.87 = getelementptr inbounds %"Array<ConstDeclaration>.676704", %"Array<ConstDeclaration>.676704"* %.86, i64 0, i32 2
  %.88 = load i64, i64* %.87, align 8
  %.89 = icmp slt i64 %.110, %.88
  br i1 %.89, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.151 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 5
  %.15253 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.151, align 8
  %.15354 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.15253, i64 0, i32 2
  %.15455 = load i64, i64* %.15354, align 8
  %.15556 = icmp sgt i64 %.15455, 0
  br i1 %.15556, label %for.body.2, label %for.cond.3.preheader

for.body.1:                                       ; preds = %for.cond.1.preheader, %for.body.1
  %.11965 = phi %"Array<VarDeclaration>.676688"* [ %.119, %for.body.1 ], [ %.11960, %for.cond.1.preheader ]
  %storemerge164 = phi i64 [ %.143, %for.body.1 ], [ 0, %for.cond.1.preheader ]
  %.126 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.127 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.126, i64 0, i32 50
  %.128 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarDeclaration.676616*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarDeclaration.676616*)** %.127, align 8
  %.133 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.11965, i64 0, i32 0
  %.134 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.133, align 8
  %.135 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.134, i64 0, i32 5
  %.136 = load %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)** %.135, align 8
  %.137 = call %VarDeclaration.676616* %.136(%"Array<VarDeclaration>.676688"* %.11965, i64 %storemerge164)
  call void %.128(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* null, %VarDeclaration.676616* %.137)
  %.143 = add nuw nsw i64 %storemerge164, 1
  %.119 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.118, align 8
  %.120 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.119, i64 0, i32 2
  %.121 = load i64, i64* %.120, align 8
  %.122 = icmp slt i64 %.143, %.121
  br i1 %.122, label %for.body.1, label %for.cond.2.preheader

for.cond.3.preheader:                             ; preds = %for.body.2, %for.cond.2.preheader
  %.18547 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.151, align 8
  %.18648 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.18547, i64 0, i32 2
  %.18749 = load i64, i64* %.18648, align 8
  %.18850 = icmp sgt i64 %.18749, 0
  br i1 %.18850, label %for.body.3, label %for.cond.4.preheader

for.body.2:                                       ; preds = %for.cond.2.preheader, %for.body.2
  %.15258 = phi %"Array<Class>.676700"* [ %.152, %for.body.2 ], [ %.15253, %for.cond.2.preheader ]
  %storemerge257 = phi i64 [ %.176, %for.body.2 ], [ 0, %for.cond.2.preheader ]
  %.159 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.160 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.159, i64 0, i32 60
  %.161 = load void (%CodeGen.676780*, %Class.676668*)*, void (%CodeGen.676780*, %Class.676668*)** %.160, align 8
  %.166 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.15258, i64 0, i32 0
  %.167 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.166, align 8
  %.168 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.167, i64 0, i32 5
  %.169 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.168, align 8
  %.170 = call %Class.676668* %.169(%"Array<Class>.676700"* %.15258, i64 %storemerge257)
  call void %.161(%CodeGen.676780* %.1, %Class.676668* %.170)
  %.176 = add nuw nsw i64 %storemerge257, 1
  %.152 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.151, align 8
  %.153 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.152, i64 0, i32 2
  %.154 = load i64, i64* %.153, align 8
  %.155 = icmp slt i64 %.176, %.154
  br i1 %.155, label %for.body.2, label %for.cond.3.preheader

for.cond.4.preheader:                             ; preds = %for.body.3, %for.cond.3.preheader
  %.217 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 7
  %.21841 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.217, align 8
  %.21942 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.21841, i64 0, i32 2
  %.22043 = load i64, i64* %.21942, align 8
  %.22144 = icmp sgt i64 %.22043, 0
  br i1 %.22144, label %for.body.4, label %for.cond.5.preheader

for.body.3:                                       ; preds = %for.cond.3.preheader, %for.body.3
  %.18552 = phi %"Array<Class>.676700"* [ %.185, %for.body.3 ], [ %.18547, %for.cond.3.preheader ]
  %storemerge351 = phi i64 [ %.209, %for.body.3 ], [ 0, %for.cond.3.preheader ]
  %.192 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.193 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.192, i64 0, i32 61
  %.194 = load void (%CodeGen.676780*, %Class.676668*, i1)*, void (%CodeGen.676780*, %Class.676668*, i1)** %.193, align 8
  %.199 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.18552, i64 0, i32 0
  %.200 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.199, align 8
  %.201 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.200, i64 0, i32 5
  %.202 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.201, align 8
  %.203 = call %Class.676668* %.202(%"Array<Class>.676700"* %.18552, i64 %storemerge351)
  call void %.194(%CodeGen.676780* %.1, %Class.676668* %.203, i1 true)
  %.209 = add nuw nsw i64 %storemerge351, 1
  %.185 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.151, align 8
  %.186 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.185, i64 0, i32 2
  %.187 = load i64, i64* %.186, align 8
  %.188 = icmp slt i64 %.209, %.187
  br i1 %.188, label %for.body.3, label %for.cond.4.preheader

for.cond.5.preheader:                             ; preds = %for.body.4, %for.cond.4.preheader
  %.250 = getelementptr inbounds %Module.676696, %Module.676696* %.2, i64 0, i32 6
  %.25135 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.250, align 8
  %.25236 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.25135, i64 0, i32 2
  %.25337 = load i64, i64* %.25236, align 8
  %.25438 = icmp sgt i64 %.25337, 0
  br i1 %.25438, label %for.body.5, label %for.end.5

for.body.4:                                       ; preds = %for.cond.4.preheader, %for.body.4
  %.21846 = phi %"Array<Enum>.676702"* [ %.218, %for.body.4 ], [ %.21841, %for.cond.4.preheader ]
  %storemerge445 = phi i64 [ %.242, %for.body.4 ], [ 0, %for.cond.4.preheader ]
  %.225 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.226 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.225, i64 0, i32 62
  %.227 = load void (%CodeGen.676780*, %Enum.676682*)*, void (%CodeGen.676780*, %Enum.676682*)** %.226, align 8
  %.232 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.21846, i64 0, i32 0
  %.233 = load %"Array<Enum>_vtable_ty.676709"*, %"Array<Enum>_vtable_ty.676709"** %.232, align 8
  %.234 = getelementptr inbounds %"Array<Enum>_vtable_ty.676709", %"Array<Enum>_vtable_ty.676709"* %.233, i64 0, i32 5
  %.235 = load %Enum.676682* (%"Array<Enum>.676702"*, i64)*, %Enum.676682* (%"Array<Enum>.676702"*, i64)** %.234, align 8
  %.236 = call %Enum.676682* %.235(%"Array<Enum>.676702"* %.21846, i64 %storemerge445)
  call void %.227(%CodeGen.676780* %.1, %Enum.676682* %.236)
  %.242 = add nuw nsw i64 %storemerge445, 1
  %.218 = load %"Array<Enum>.676702"*, %"Array<Enum>.676702"** %.217, align 8
  %.219 = getelementptr inbounds %"Array<Enum>.676702", %"Array<Enum>.676702"* %.218, i64 0, i32 2
  %.220 = load i64, i64* %.219, align 8
  %.221 = icmp slt i64 %.242, %.220
  br i1 %.221, label %for.body.4, label %for.cond.5.preheader

for.body.5:                                       ; preds = %for.cond.5.preheader, %for.body.5
  %.25140 = phi %"Array<Function>.676701"* [ %.251, %for.body.5 ], [ %.25135, %for.cond.5.preheader ]
  %storemerge539 = phi i64 [ %.275, %for.body.5 ], [ 0, %for.cond.5.preheader ]
  %.258 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.259 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.258, i64 0, i32 56
  %.260 = load void (%CodeGen.676780*, %Function.676656*)*, void (%CodeGen.676780*, %Function.676656*)** %.259, align 8
  %.265 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.25140, i64 0, i32 0
  %.266 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.265, align 8
  %.267 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.266, i64 0, i32 5
  %.268 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.267, align 8
  %.269 = call %Function.676656* %.268(%"Array<Function>.676701"* %.25140, i64 %storemerge539)
  call void %.260(%CodeGen.676780* %.1, %Function.676656* %.269)
  %.275 = add nuw nsw i64 %storemerge539, 1
  %.251 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.250, align 8
  %.252 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.251, i64 0, i32 2
  %.253 = load i64, i64* %.252, align 8
  %.254 = icmp slt i64 %.275, %.253
  br i1 %.254, label %for.body.5, label %for.end.5

for.end.5:                                        ; preds = %for.body.5, %for.cond.5.preheader
  store i1 false, i1* %.78, align 1
  %.28729 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.151, align 8
  %.28830 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.28729, i64 0, i32 2
  %.28931 = load i64, i64* %.28830, align 8
  %.29032 = icmp sgt i64 %.28931, 0
  br i1 %.29032, label %for.body.6, label %for.cond.7.preheader

for.cond.7.preheader:                             ; preds = %for.body.6, %for.end.5
  %.32023 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.250, align 8
  %.32124 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.32023, i64 0, i32 2
  %.32225 = load i64, i64* %.32124, align 8
  %.32326 = icmp sgt i64 %.32225, 0
  br i1 %.32326, label %for.body.7, label %for.end.7

for.body.6:                                       ; preds = %for.end.5, %for.body.6
  %.28734 = phi %"Array<Class>.676700"* [ %.287, %for.body.6 ], [ %.28729, %for.end.5 ]
  %storemerge633 = phi i64 [ %.311, %for.body.6 ], [ 0, %for.end.5 ]
  %.294 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.295 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.294, i64 0, i32 55
  %.296 = load void (%CodeGen.676780*, %Class.676668*)*, void (%CodeGen.676780*, %Class.676668*)** %.295, align 8
  %.301 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.28734, i64 0, i32 0
  %.302 = load %"Array<Class>_vtable_ty.676707"*, %"Array<Class>_vtable_ty.676707"** %.301, align 8
  %.303 = getelementptr inbounds %"Array<Class>_vtable_ty.676707", %"Array<Class>_vtable_ty.676707"* %.302, i64 0, i32 5
  %.304 = load %Class.676668* (%"Array<Class>.676700"*, i64)*, %Class.676668* (%"Array<Class>.676700"*, i64)** %.303, align 8
  %.305 = call %Class.676668* %.304(%"Array<Class>.676700"* %.28734, i64 %storemerge633)
  call void %.296(%CodeGen.676780* %.1, %Class.676668* %.305)
  %.311 = add nuw nsw i64 %storemerge633, 1
  %.287 = load %"Array<Class>.676700"*, %"Array<Class>.676700"** %.151, align 8
  %.288 = getelementptr inbounds %"Array<Class>.676700", %"Array<Class>.676700"* %.287, i64 0, i32 2
  %.289 = load i64, i64* %.288, align 8
  %.290 = icmp slt i64 %.311, %.289
  br i1 %.290, label %for.body.6, label %for.cond.7.preheader

for.body.7:                                       ; preds = %for.cond.7.preheader, %for.body.7
  %.32028 = phi %"Array<Function>.676701"* [ %.320, %for.body.7 ], [ %.32023, %for.cond.7.preheader ]
  %storemerge727 = phi i64 [ %.344, %for.body.7 ], [ 0, %for.cond.7.preheader ]
  %.327 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.69, align 8
  %.328 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.327, i64 0, i32 54
  %.329 = load void (%CodeGen.676780*, %Function.676656*)*, void (%CodeGen.676780*, %Function.676656*)** %.328, align 8
  %.334 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.32028, i64 0, i32 0
  %.335 = load %"Array<Function>_vtable_ty.676708"*, %"Array<Function>_vtable_ty.676708"** %.334, align 8
  %.336 = getelementptr inbounds %"Array<Function>_vtable_ty.676708", %"Array<Function>_vtable_ty.676708"* %.335, i64 0, i32 5
  %.337 = load %Function.676656* (%"Array<Function>.676701"*, i64)*, %Function.676656* (%"Array<Function>.676701"*, i64)** %.336, align 8
  %.338 = call %Function.676656* %.337(%"Array<Function>.676701"* %.32028, i64 %storemerge727)
  call void %.329(%CodeGen.676780* %.1, %Function.676656* %.338)
  %.344 = add nuw nsw i64 %storemerge727, 1
  %.320 = load %"Array<Function>.676701"*, %"Array<Function>.676701"** %.250, align 8
  %.321 = getelementptr inbounds %"Array<Function>.676701", %"Array<Function>.676701"* %.320, i64 0, i32 2
  %.322 = load i64, i64* %.321, align 8
  %.323 = icmp slt i64 %.344, %.322
  br i1 %.323, label %for.body.7, label %for.end.7

for.end.7:                                        ; preds = %for.body.7, %for.cond.7.preheader
  %.349 = load %DebugInfo.676752*, %DebugInfo.676752** %.66, align 8
  %.350 = getelementptr inbounds %DebugInfo.676752, %DebugInfo.676752* %.349, i64 0, i32 0
  %.351 = load %DebugInfo_vtable_ty.676753*, %DebugInfo_vtable_ty.676753** %.350, align 8
  %.352 = getelementptr inbounds %DebugInfo_vtable_ty.676753, %DebugInfo_vtable_ty.676753* %.351, i64 0, i32 0
  %.353 = load void (%DebugInfo.676752*)*, void (%DebugInfo.676752*)** %.352, align 8
  call void %.353(%DebugInfo.676752* %.349)
  %.357 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.52, align 8
  ret %LLVMModuleRef.676726* %.357
}

define void @CodeGen_codegen_imported_symbols(%CodeGen.676780* %.1, %ImportedSymbols.676686* nocapture readonly %.2) {
.4:
  %.12 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.2, i64 0, i32 4
  %.1329 = load %"Array<ClassId>.676691"*, %"Array<ClassId>.676691"** %.12, align 8
  %.1430 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1329, i64 0, i32 2
  %.1531 = load i64, i64* %.1430, align 8
  %.1632 = icmp sgt i64 %.1531, 0
  br i1 %.1632, label %for.body.lr.ph, label %for.cond.1.preheader

for.body.lr.ph:                                   ; preds = %.4
  %.19 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.33 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body

for.cond.1.preheader:                             ; preds = %for.body, %.4
  %.58 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.2, i64 0, i32 3
  %.5923 = load %"Array<EnumId>.676690"*, %"Array<EnumId>.676690"** %.58, align 8
  %.6024 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.5923, i64 0, i32 2
  %.6125 = load i64, i64* %.6024, align 8
  %.6226 = icmp sgt i64 %.6125, 0
  br i1 %.6226, label %for.body.1.lr.ph, label %for.cond.2.preheader

for.body.1.lr.ph:                                 ; preds = %for.cond.1.preheader
  %.65 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.79 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body.1

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.1334 = phi %"Array<ClassId>.676691"* [ %.1329, %for.body.lr.ph ], [ %.13, %for.body ]
  %storemerge33 = phi i64 [ 0, %for.body.lr.ph ], [ %.50, %for.body ]
  %.20 = load %Program.676712*, %Program.676712** %.19, align 8
  %.25 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.1334, i64 0, i32 0
  %.26 = load %"Array<ClassId>_vtable_ty.676695"*, %"Array<ClassId>_vtable_ty.676695"** %.25, align 8
  %.27 = getelementptr inbounds %"Array<ClassId>_vtable_ty.676695", %"Array<ClassId>_vtable_ty.676695"* %.26, i64 0, i32 5
  %.28 = load %ClassId.676554* (%"Array<ClassId>.676691"*, i64)*, %ClassId.676554* (%"Array<ClassId>.676691"*, i64)** %.27, align 8
  %.29 = call %ClassId.676554* %.28(%"Array<ClassId>.676691"* %.1334, i64 %storemerge33)
  %.30 = call %Class.676668* @get_class(%Program.676712* %.20, %ClassId.676554* %.29)
  %.34 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.33, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.34, i64 0, i32 60
  %.36 = load void (%CodeGen.676780*, %Class.676668*)*, void (%CodeGen.676780*, %Class.676668*)** %.35, align 8
  call void %.36(%CodeGen.676780* %.1, %Class.676668* %.30)
  %.41 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.33, align 8
  %.42 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.41, i64 0, i32 61
  %.43 = load void (%CodeGen.676780*, %Class.676668*, i1)*, void (%CodeGen.676780*, %Class.676668*, i1)** %.42, align 8
  call void %.43(%CodeGen.676780* %.1, %Class.676668* %.30, i1 false)
  %.50 = add nuw nsw i64 %storemerge33, 1
  %.13 = load %"Array<ClassId>.676691"*, %"Array<ClassId>.676691"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<ClassId>.676691", %"Array<ClassId>.676691"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp slt i64 %.50, %.15
  br i1 %.16, label %for.body, label %for.cond.1.preheader

for.cond.2.preheader:                             ; preds = %for.body.1, %for.cond.1.preheader
  %.97 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.2, i64 0, i32 1
  %.9817 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.97, align 8
  %.9918 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.9817, i64 0, i32 2
  %.10019 = load i64, i64* %.9918, align 8
  %.10120 = icmp sgt i64 %.10019, 0
  br i1 %.10120, label %for.body.2.lr.ph, label %for.cond.3.preheader

for.body.2.lr.ph:                                 ; preds = %for.cond.2.preheader
  %.114 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.122 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.132 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  br label %for.body.2

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.5928 = phi %"Array<EnumId>.676690"* [ %.5923, %for.body.1.lr.ph ], [ %.59, %for.body.1 ]
  %storemerge127 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.89, %for.body.1 ]
  %.66 = load %Program.676712*, %Program.676712** %.65, align 8
  %.71 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.5928, i64 0, i32 0
  %.72 = load %"Array<EnumId>_vtable_ty.676694"*, %"Array<EnumId>_vtable_ty.676694"** %.71, align 8
  %.73 = getelementptr inbounds %"Array<EnumId>_vtable_ty.676694", %"Array<EnumId>_vtable_ty.676694"* %.72, i64 0, i32 5
  %.74 = load %EnumId.676556* (%"Array<EnumId>.676690"*, i64)*, %EnumId.676556* (%"Array<EnumId>.676690"*, i64)** %.73, align 8
  %.75 = call %EnumId.676556* %.74(%"Array<EnumId>.676690"* %.5928, i64 %storemerge127)
  %.76 = call %Enum.676682* @get_enum(%Program.676712* %.66, %EnumId.676556* %.75)
  %.80 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.79, align 8
  %.81 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.80, i64 0, i32 62
  %.82 = load void (%CodeGen.676780*, %Enum.676682*)*, void (%CodeGen.676780*, %Enum.676682*)** %.81, align 8
  call void %.82(%CodeGen.676780* %.1, %Enum.676682* %.76)
  %.89 = add nuw nsw i64 %storemerge127, 1
  %.59 = load %"Array<EnumId>.676690"*, %"Array<EnumId>.676690"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<EnumId>.676690", %"Array<EnumId>.676690"* %.59, i64 0, i32 2
  %.61 = load i64, i64* %.60, align 8
  %.62 = icmp slt i64 %.89, %.61
  br i1 %.62, label %for.body.1, label %for.cond.2.preheader

for.cond.3.preheader:                             ; preds = %for.body.2, %for.cond.2.preheader
  %.157 = getelementptr inbounds %ImportedSymbols.676686, %ImportedSymbols.676686* %.2, i64 0, i32 2
  %.15811 = load %"Array<VarId>.676689"*, %"Array<VarId>.676689"** %.157, align 8
  %.15912 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.15811, i64 0, i32 2
  %.16013 = load i64, i64* %.15912, align 8
  %.16114 = icmp sgt i64 %.16013, 0
  br i1 %.16114, label %for.body.3.lr.ph, label %for.end.3

for.body.3.lr.ph:                                 ; preds = %for.cond.3.preheader
  %.164 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.178 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body.3

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %.9822 = phi %"Array<VarDeclaration>.676688"* [ %.9817, %for.body.2.lr.ph ], [ %.98, %for.body.2 ]
  %storemerge221 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.149, %for.body.2 ]
  %.107 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.9822, i64 0, i32 0
  %.108 = load %"Array<VarDeclaration>_vtable_ty.676692"*, %"Array<VarDeclaration>_vtable_ty.676692"** %.107, align 8
  %.109 = getelementptr inbounds %"Array<VarDeclaration>_vtable_ty.676692", %"Array<VarDeclaration>_vtable_ty.676692"* %.108, i64 0, i32 5
  %.110 = load %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)*, %VarDeclaration.676616* (%"Array<VarDeclaration>.676688"*, i64)** %.109, align 8
  %.111 = call %VarDeclaration.676616* %.110(%"Array<VarDeclaration>.676688"* %.9822, i64 %storemerge221)
  %.115 = load %Program.676712*, %Program.676712** %.114, align 8
  %.117 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.111, i64 0, i32 3
  %.118 = load %VarId.676596*, %VarId.676596** %.117, align 8
  %.119 = call %Var.676660* @get_var(%Program.676712* %.115, %VarId.676596* %.118)
  %.123 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.122, align 8
  %.124 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.123, i64 0, i32 14
  %.125 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.124, align 8
  %.127 = getelementptr inbounds %Var.676660, %Var.676660* %.119, i64 0, i32 1
  %.128 = load %Type.676538*, %Type.676538** %.127, align 8
  %.129 = call %LLVMTypeRef.676727* %.125(%CodeGen.676780* %.1, %Type.676538* %.128, i1 true)
  %.133 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.132, align 8
  %.136 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.111, i64 0, i32 2
  %.137 = load %string.676378*, %string.676378** %.136, align 8
  %.138 = getelementptr inbounds %string.676378, %string.676378* %.137, i64 0, i32 0
  %.139 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.138, align 8
  %.140 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.139, i64 0, i32 11
  %.141 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.140, align 8
  %.142 = call i8* %.141(%string.676378* %.137)
  %.143 = call %LLVMValueRef.676728* @LLVMAddGlobal(%LLVMModuleRef.676726* %.133, %LLVMTypeRef.676727* %.129, i8* %.142)
  %.149 = add nuw nsw i64 %storemerge221, 1
  %.98 = load %"Array<VarDeclaration>.676688"*, %"Array<VarDeclaration>.676688"** %.97, align 8
  %.99 = getelementptr inbounds %"Array<VarDeclaration>.676688", %"Array<VarDeclaration>.676688"* %.98, i64 0, i32 2
  %.100 = load i64, i64* %.99, align 8
  %.101 = icmp slt i64 %.149, %.100
  br i1 %.101, label %for.body.2, label %for.cond.3.preheader

for.body.3:                                       ; preds = %for.body.3.lr.ph, %for.body.3
  %.15816 = phi %"Array<VarId>.676689"* [ %.15811, %for.body.3.lr.ph ], [ %.158, %for.body.3 ]
  %storemerge315 = phi i64 [ 0, %for.body.3.lr.ph ], [ %.188, %for.body.3 ]
  %.165 = load %Program.676712*, %Program.676712** %.164, align 8
  %.170 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.15816, i64 0, i32 0
  %.171 = load %"Array<VarId>_vtable_ty.676693"*, %"Array<VarId>_vtable_ty.676693"** %.170, align 8
  %.172 = getelementptr inbounds %"Array<VarId>_vtable_ty.676693", %"Array<VarId>_vtable_ty.676693"* %.171, i64 0, i32 5
  %.173 = load %VarId.676596* (%"Array<VarId>.676689"*, i64)*, %VarId.676596* (%"Array<VarId>.676689"*, i64)** %.172, align 8
  %.174 = call %VarId.676596* %.173(%"Array<VarId>.676689"* %.15816, i64 %storemerge315)
  %.175 = call %Function.676656* @get_func(%Program.676712* %.165, %VarId.676596* %.174)
  %.179 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.178, align 8
  %.180 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.179, i64 0, i32 56
  %.181 = load void (%CodeGen.676780*, %Function.676656*)*, void (%CodeGen.676780*, %Function.676656*)** %.180, align 8
  call void %.181(%CodeGen.676780* %.1, %Function.676656* %.175)
  %.188 = add nuw nsw i64 %storemerge315, 1
  %.158 = load %"Array<VarId>.676689"*, %"Array<VarId>.676689"** %.157, align 8
  %.159 = getelementptr inbounds %"Array<VarId>.676689", %"Array<VarId>.676689"* %.158, i64 0, i32 2
  %.160 = load i64, i64* %.159, align 8
  %.161 = icmp slt i64 %.188, %.160
  br i1 %.161, label %for.body.3, label %for.end.3

for.end.3:                                        ; preds = %for.body.3, %for.cond.3.preheader
  ret void
}

define %LLVMTypeRef.676727* @CodeGen_codegen_type(%CodeGen.676780* %.1, %Type.676538* %.2, i1 %.3) {
.5:
  %.10 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.endif [
    i64 12, label %.5.if
    i64 0, label %.5.endif.if
    i64 1, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.endif.if
    i64 3, label %.5.endif.endif.endif.endif.if
    i64 4, label %.5.endif.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 5, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 6, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endi...if
    i64 9, label %.5.endif.endif.endif.endi...endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.16 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.15, align 8
  %.17 = call %LLVMTypeRef.676727* @LLVMVoidTypeInContext(%LLVMContextRef.676725* %.16)
  ret %LLVMTypeRef.676727* %.17

.5.endif.if:                                      ; preds = %.5
  %.25 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.26 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.25, align 8
  %.27 = call %LLVMTypeRef.676727* @LLVMInt1TypeInContext(%LLVMContextRef.676725* %.26)
  ret %LLVMTypeRef.676727* %.27

.5.endif.endif.if:                                ; preds = %.5
  %.35 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.36 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.35, align 8
  %.37 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.36, i64 4)
  ret %LLVMTypeRef.676727* %.37

.5.endif.endif.endif.if:                          ; preds = %.5
  %.45 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.46 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.45, align 8
  %.47 = call %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725* %.46)
  ret %LLVMTypeRef.676727* %.47

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.55 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.56 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.55, align 8
  %.57 = call %LLVMTypeRef.676727* @LLVMInt16TypeInContext(%LLVMContextRef.676725* %.56)
  ret %LLVMTypeRef.676727* %.57

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.65 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.66 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.65, align 8
  %.67 = call %LLVMTypeRef.676727* @LLVMInt32TypeInContext(%LLVMContextRef.676725* %.66)
  ret %LLVMTypeRef.676727* %.67

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.75 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.76 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.75, align 8
  %.77 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.76, i64 64)
  ret %LLVMTypeRef.676727* %.77

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.85 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.86 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.85, align 8
  %.87 = call %LLVMTypeRef.676727* @LLVMInt64TypeInContext(%LLVMContextRef.676725* %.86)
  ret %LLVMTypeRef.676727* %.87

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.95 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.96 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.95, align 8
  %.97 = call %LLVMTypeRef.676727* @LLVMInt128TypeInContext(%LLVMContextRef.676725* %.96)
  ret %LLVMTypeRef.676727* %.97

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.105 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.106 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.105, align 8
  %.107 = call %LLVMTypeRef.676727* @LLVMHalfTypeInContext(%LLVMContextRef.676725* %.106)
  ret %LLVMTypeRef.676727* %.107

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.115 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.116 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.115, align 8
  %.117 = call %LLVMTypeRef.676727* @LLVMFloatTypeInContext(%LLVMContextRef.676725* %.116)
  ret %LLVMTypeRef.676727* %.117

.5.endif.endif.endif.endi...endif.endif:          ; preds = %.5
  %0 = and i64 %.11, -2
  %1 = icmp eq i64 %0, 10
  br i1 %1, label %.5.endif.endif.endif.endi...endif.endif.if, label %.5.endif.endif.endif.endi...endif.endif.endif

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5.endif.endif.endif.endi...endif.endif
  %.130 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.131 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.130, align 8
  %.132 = call %LLVMTypeRef.676727* @LLVMDoubleTypeInContext(%LLVMContextRef.676725* %.131)
  ret %LLVMTypeRef.676727* %.132

.5.endif.endif.endif.endi...endif.endif.endif:    ; preds = %.5.endif.endif.endif.endi...endif.endif
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1.endif.endif [
    i64 15, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 16, label %.5.endif.endif.endif.endi...if.1
    i64 17, label %.5.endif.endif.endif.endi...endif.1.if
    i64 13, label %.5.endif.endif.endif.endi...endif.1.endif.if
  ]

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.140 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.141 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.140, align 8
  %.142 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.141, i64 0, i32 14
  %.143 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.142, align 8
  %.146 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %2 = bitcast %Type.676538* %.146 to %Type.676538**
  %.147 = load %Type.676538*, %Type.676538** %2, align 8
  %.148 = call %LLVMTypeRef.676727* %.143(%CodeGen.676780* %.1, %Type.676538* %.147, i1 true)
  %.149 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.148, i64 0)
  ret %LLVMTypeRef.676727* %.149

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %arr_ty = alloca %ArrayType.676560*, align 8
  %3 = bitcast %ArrayType.676560** %arr_ty to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %3, align 8
  %.160 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.161 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.160, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.161, i64 0, i32 14
  %.163 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.162, align 8
  %.165 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %4 = bitcast %Type.676538* %.165 to %Type.676538**
  %.166 = load %Type.676538*, %Type.676538** %4, align 8
  %.167 = call %LLVMTypeRef.676727* %.163(%CodeGen.676780* %.1, %Type.676538* %.166, i1 true)
  %.170 = load %ArrayType.676560*, %ArrayType.676560** %arr_ty, align 8
  %.171 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.170, i64 0, i32 3
  %.172 = load i64, i64* %.171, align 8
  %.173 = call %LLVMTypeRef.676727* @LLVMArrayType(%LLVMTypeRef.676727* %.167, i64 %.172)
  ret %LLVMTypeRef.676727* %.173

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.181 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.183 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.185 = bitcast i8* %.183 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.185, align 8
  %.187 = getelementptr inbounds i8, i8* %.183, i64 8
  %5 = bitcast i8* %.187 to i8**
  store i8* %.181, i8** %5, align 8
  %.189 = getelementptr inbounds i8, i8* %.183, i64 16
  %6 = bitcast i8* %.189 to i64*
  store i64 0, i64* %6, align 8
  %.191 = getelementptr inbounds i8, i8* %.183, i64 24
  %7 = bitcast i8* %.191 to i64*
  store i64 8, i64* %7, align 8
  %param_types = alloca %"Array<LLVMTypeRef>.676776"*, align 8
  %8 = bitcast %"Array<LLVMTypeRef>.676776"** %param_types to i8**
  store i8* %.183, i8** %8, align 8
  %func_ty = alloca %FunctionType.676544*, align 8
  %9 = bitcast %FunctionType.676544** %func_ty to %Type.676538**
  store %Type.676538* %.2, %Type.676538** %9, align 8
  %.2013.cast = bitcast %Type.676538* %.2 to %FunctionType.676544*
  %.2024 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %10 = bitcast %Type.676538* %.2024 to %"Array<Type>.676546"**
  %.2035 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %10, align 8
  %.2046 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.2035, i64 0, i32 2
  %.2057 = load i64, i64* %.2046, align 8
  %.2068 = icmp sgt i64 %.2057, 0
  br i1 %.2068, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.endif.endif.endif.endi...endif.1.if
  %.208 = load %"Array<LLVMTypeRef>.676776"*, %"Array<LLVMTypeRef>.676776"** %param_types, align 8
  %.210 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.224 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.208, i64 0, i32 0
  %.201 = load %FunctionType.676544*, %FunctionType.676544** %func_ty, align 8
  %.202 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.201, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.20310 = phi %"Array<Type>.676546"* [ %.2035, %for.body.lr.ph ], [ %.203, %for.body ]
  %storemerge9 = phi i64 [ 0, %for.body.lr.ph ], [ %.233, %for.body ]
  %.211 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.210, align 8
  %.212 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.211, i64 0, i32 14
  %.213 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.212, align 8
  %.218 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.20310, i64 0, i32 0
  %.219 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.218, align 8
  %.220 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.219, i64 0, i32 5
  %.221 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.220, align 8
  %.222 = call %Type.676538* %.221(%"Array<Type>.676546"* %.20310, i64 %storemerge9)
  %.223 = call %LLVMTypeRef.676727* %.213(%CodeGen.676780* %.1, %Type.676538* %.222, i1 true)
  %.225 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.224, align 8
  %.226 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.225, i64 0, i32 2
  %.227 = load void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)** %.226, align 8
  call void %.227(%"Array<LLVMTypeRef>.676776"* %.208, %LLVMTypeRef.676727* %.223)
  %.233 = add nuw nsw i64 %storemerge9, 1
  %.203 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.202, align 8
  %.204 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.203, i64 0, i32 2
  %.205 = load i64, i64* %.204, align 8
  %.206 = icmp slt i64 %.233, %.205
  br i1 %.206, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5.endif.endif.endif.endi...endif.1.if
  %.201.lcssa = phi %FunctionType.676544* [ %.2013.cast, %.5.endif.endif.endif.endi...endif.1.if ], [ %.201, %for.body ]
  %.237 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.238 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.237, align 8
  %.239 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.238, i64 0, i32 14
  %.240 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.239, align 8
  %.242 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.201.lcssa, i64 0, i32 3
  %.243 = load %Type.676538*, %Type.676538** %.242, align 8
  %.244 = call %LLVMTypeRef.676727* %.240(%CodeGen.676780* %.1, %Type.676538* %.243, i1 true)
  %.247 = load %"Array<LLVMTypeRef>.676776"*, %"Array<LLVMTypeRef>.676776"** %param_types, align 8
  %.248 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.247, i64 0, i32 1
  %.249 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %.248, align 8
  %.251 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.247, i64 0, i32 2
  %.252 = load i64, i64* %.251, align 8
  %.253 = call %LLVMTypeRef.676727* @LLVMFunctionType(%LLVMTypeRef.676727* %.244, %LLVMTypeRef.676727** %.249, i64 %.252, i1 false)
  br i1 %.3, label %true_block, label %end

true_block:                                       ; preds = %for.end
  %.258 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.253, i64 0)
  br label %end

end:                                              ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if, %.5.endif.endif.endif.endi...endif.1.endif.endif, %true_block.1, %.5.endif.endif.endif.endi...endif.1.endif.if.if, %for.end, %true_block
  %.262 = phi %LLVMTypeRef.676727* [ %.258, %true_block ], [ %.253, %for.end ], [ %.291, %true_block.1 ], [ %.290, %.5.endif.endif.endif.endi...endif.1.endif.if.if ], [ null, %.5.endif.endif.endif.endi...endif.1.endif.endif ], [ null, %.5.endif.endif.endif.endi...endif.1.endif.endif.if ]
  ret %LLVMTypeRef.676727* %.262

.5.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.5.endif.endif.endif.endi...endif.endif.endif
  %.270 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.271 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.270, align 8
  %.272 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.271, i64 0, i32 3
  %.273 = load %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)** %.272, align 8
  %.276 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %11 = bitcast %Type.676538* %.276 to %TypeId.676552**
  %.2772 = load %TypeId.676552*, %TypeId.676552** %11, align 8
  %.279 = call %CGClassType.676760* %.273(%CodeGen.676780* %.1, %TypeId.676552* %.2772)
  %12 = ptrtoint %CGClassType.676760* %.279 to i64
  %.282 = trunc i64 %12 to i32
  %.284.not = icmp eq i32 %.282, 0
  br i1 %.284.not, label %.5.endif.endif.endif.endi...endif.1.endif.endif, label %.5.endif.endif.endif.endi...endif.1.endif.if.if

.5.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.5.endif.endif.endif.endi...endif.endif.endif, %.5.endif.endif.endif.endi...endif.1.endif.if
  %.302 = load i64, i64* %.10, align 8
  %.303 = icmp eq i64 %.302, 14
  br i1 %.303, label %.5.endif.endif.endif.endi...endif.1.endif.endif.if, label %end

.5.endif.endif.endif.endi...endif.1.endif.if.if:  ; preds = %.5.endif.endif.endif.endi...endif.1.endif.if
  %.289 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.279, i64 0, i32 1
  %.290 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.289, align 8
  br i1 %.3, label %true_block.1, label %end

true_block.1:                                     ; preds = %.5.endif.endif.endif.endi...endif.1.endif.if.if
  %.291 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.290, i64 0)
  br label %end

.5.endif.endif.endif.endi...endif.1.endif.endif.if: ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif
  %.306 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.307 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.306, align 8
  %.308 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.307, i64 0, i32 4
  %.309 = load %CGEnumType.676774* (%CodeGen.676780*, %TypeId.676552*)*, %CGEnumType.676774* (%CodeGen.676780*, %TypeId.676552*)** %.308, align 8
  %.312 = getelementptr inbounds %Type.676538, %Type.676538* %.2, i64 1
  %13 = bitcast %Type.676538* %.312 to %TypeId.676552**
  %.3131 = load %TypeId.676552*, %TypeId.676552** %13, align 8
  %.315 = call %CGEnumType.676774* %.309(%CodeGen.676780* %.1, %TypeId.676552* %.3131)
  %14 = ptrtoint %CGEnumType.676774* %.315 to i64
  %.318 = trunc i64 %14 to i32
  %.320.not = icmp eq i32 %.318, 0
  br i1 %.320.not, label %end, label %.5.endif.endif.endif.endi...endif.1.endif.endif.if.if

.5.endif.endif.endif.endi...endif.1.endif.endif.if.if: ; preds = %.5.endif.endif.endif.endi...endif.1.endif.endif.if
  %.323 = getelementptr inbounds %CGEnumType.676774, %CGEnumType.676774* %.315, i64 0, i32 1
  %.324 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.323, align 8
  ret %LLVMTypeRef.676727* %.324
}

define void @CodeGen_codegen_return_stmt(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ReturnStatement.676624* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %ReturnStatement.676624, %ReturnStatement.676624* %.3, i64 0, i32 2
  %0 = bitcast %Expression.676558** %.10 to i64*
  %.111 = load i64, i64* %0, align 8
  %.12 = trunc i64 %.111 to i32
  %.14.not = icmp eq i32 %.12, 0
  br i1 %.14.not, label %.5.else, label %.5.if

.5.if:                                            ; preds = %.5
  %.18 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.19, i64 0, i32 44
  %.21 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.20, align 8
  %.25 = load %Expression.676558*, %Expression.676558** %.10, align 8
  %.26 = call %LLVMValueRef.676728* %.21(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.25)
  %.27 = call %LLVMValueRef.676728* @LLVMBuildRet(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.26)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.30 = call %LLVMValueRef.676728* @LLVMBuildRetVoid(%LLVMBuilderRef.676733* %.2)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  ret void
}

define %LLVMValueRef.676728* @CodeGen_codegen_int(%CodeGen.676780* %.1, %IntExpression.676566* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.9, i64 0, i32 14
  %.11 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %IntExpression.676566, %IntExpression.676566* %.2, i64 0, i32 4
  %.14 = load %Type.676538*, %Type.676538** %.13, align 8
  %.15 = call %LLVMTypeRef.676727* %.11(%CodeGen.676780* %.1, %Type.676538* %.14, i1 true)
  %.17 = getelementptr inbounds %IntExpression.676566, %IntExpression.676566* %.2, i64 0, i32 5
  %.18 = load i64, i64* %.17, align 8
  %.19 = call %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727* %.15, i64 %.18, i1 true)
  ret %LLVMValueRef.676728* %.19
}

define %LLVMValueRef.676728* @CodeGen_codegen_float(%CodeGen.676780* %.1, %FloatExpression.676570* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.9, i64 0, i32 14
  %.11 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %FloatExpression.676570, %FloatExpression.676570* %.2, i64 0, i32 4
  %.14 = load %Type.676538*, %Type.676538** %.13, align 8
  %.15 = call %LLVMTypeRef.676727* %.11(%CodeGen.676780* %.1, %Type.676538* %.14, i1 true)
  %.17 = getelementptr inbounds %FloatExpression.676570, %FloatExpression.676570* %.2, i64 0, i32 5
  %.18 = load double, double* %.17, align 8
  %.19 = call %LLVMValueRef.676728* @LLVMConstReal(%LLVMTypeRef.676727* %.15, double %.18)
  ret %LLVMValueRef.676728* %.19
}

define %LLVMValueRef.676728* @CodeGen_codegen_bool(%CodeGen.676780* nocapture readonly %.1, %BooleanExpression.676568* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %BooleanExpression.676568, %BooleanExpression.676568* %.2, i64 0, i32 5
  %.9 = load i64, i64* %.8, align 8
  %.12 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.13 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.12, align 8
  %.14 = call %LLVMTypeRef.676727* @LLVMInt1TypeInContext(%LLVMContextRef.676725* %.13)
  %.16 = call %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727* %.14, i64 %.9, i1 false)
  ret %LLVMValueRef.676728* %.16
}

define %LLVMValueRef.676728* @CodeGen_codegen_snprintf_call(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.12 = call %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725* %.11)
  %.15 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.12, i64 0)
  %.19 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.20 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.19, i64 64)
  %.23 = call %LLVMValueRef.676728* @LLVMConstNull(%LLVMTypeRef.676727* %.15)
  %.25 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.26 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.27 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.26, i64 0, i32 11
  %.28 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.27, align 8
  %.29 = call %LLVMValueRef.676728* %.28(%CodeGen.676780* %.1, i64 0)
  %.31 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.32 = bitcast i8* %.31 to %LLVMValueRef.676728**
  store %LLVMValueRef.676728* %.23, %LLVMValueRef.676728** %.32, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %0 = bitcast i8* %.35 to %LLVMValueRef.676728**
  store %LLVMValueRef.676728* %.29, %LLVMValueRef.676728** %0, align 8
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %"Array<LLVMValueRef>.676778"*
  %.39 = bitcast i8* %.37 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.39, align 8
  %.41 = getelementptr inbounds i8, i8* %.37, i64 8
  %1 = bitcast i8* %.41 to i8**
  store i8* %.31, i8** %1, align 8
  %.43 = getelementptr inbounds i8, i8* %.37, i64 16
  %2 = bitcast i8* %.43 to i64*
  store i64 2, i64* %2, align 8
  %.45 = getelementptr inbounds i8, i8* %.37, i64 24
  %3 = bitcast i8* %.45 to i64*
  store i64 16, i64* %3, align 8
  %.49 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.50 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.49, align 8
  %.51 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %string.676378*
  %.52.repack = bitcast i8* %.51 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.52.repack, align 8
  %.52.repack1 = getelementptr inbounds i8, i8* %.51, i64 8
  %4 = bitcast i8* %.52.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.393, i64 0, i64 0), i8** %4, align 8
  %.52.repack2 = getelementptr inbounds i8, i8* %.51, i64 16
  %5 = bitcast i8* %.52.repack2 to i64*
  store i64 8, i64* %5, align 8
  %.52.repack3 = getelementptr inbounds i8, i8* %.51, i64 24
  %6 = bitcast i8* %.52.repack3 to i64*
  store i64 8, i64* %6, align 8
  %.58 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.59 = bitcast i8* %.58 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.15, %LLVMTypeRef.676727** %.59, align 8
  %.62 = getelementptr inbounds i8, i8* %.58, i64 8
  %7 = bitcast i8* %.62 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.20, %LLVMTypeRef.676727** %7, align 8
  %.64 = getelementptr inbounds i8, i8* %.58, i64 16
  %8 = bitcast i8* %.64 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.15, %LLVMTypeRef.676727** %8, align 8
  %.66 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.67 = bitcast i8* %.66 to %"Array<LLVMTypeRef>.676776"*
  %.68 = bitcast i8* %.66 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.68, align 8
  %.70 = getelementptr inbounds i8, i8* %.66, i64 8
  %9 = bitcast i8* %.70 to i8**
  store i8* %.58, i8** %9, align 8
  %.72 = getelementptr inbounds i8, i8* %.66, i64 16
  %10 = bitcast i8* %.72 to i64*
  store i64 3, i64* %10, align 8
  %.74 = getelementptr inbounds i8, i8* %.66, i64 24
  %11 = bitcast i8* %.74 to i64*
  store i64 24, i64* %11, align 8
  %.77 = call %IntrinsicResult.676758* @get_intrinsic(%LLVMModuleRef.676726* %.50, %string.676378* %.52, %"Array<LLVMTypeRef>.676776"* %.67, %LLVMTypeRef.676727* %.20, i1 true)
  %.84 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 2
  %.855 = load i64, i64* %.84, align 8
  %.866 = icmp sgt i64 %.855, 0
  br i1 %.866, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.91 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.105, %for.body ]
  %.92 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.91, align 8
  %.93 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.92, i64 0, i32 5
  %.94 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.93, align 8
  %.95 = call %LLVMValueRef.676728* %.94(%"Array<LLVMValueRef>.676778"* %.3, i64 %storemerge7)
  %.97 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.39, align 8
  %.98 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.97, i64 0, i32 2
  %.99 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.98, align 8
  call void %.99(%"Array<LLVMValueRef>.676778"* %.38, %LLVMValueRef.676728* %.95)
  %.105 = add nuw nsw i64 %storemerge7, 1
  %.85 = load i64, i64* %.84, align 8
  %.86 = icmp slt i64 %.105, %.85
  br i1 %.86, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %.110 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.77, i64 0, i32 2
  %.111 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.110, align 8
  %.113 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.77, i64 0, i32 1
  %.114 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.113, align 8
  %12 = bitcast i8* %.41 to %LLVMValueRef.676728***
  %.117 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %12, align 8
  %.120 = load i64, i64* %2, align 8
  %.121 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.111, %LLVMValueRef.676728* %.114, %LLVMValueRef.676728** %.117, i64 %.120, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.121
}

define %LLVMValueRef.676728* @CodeGen_codegen_realloc_call(%CodeGen.676780* nocapture readonly %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.12 = call %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725* %.11)
  %.13 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.12, i64 0)
  %.17 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.18 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.17, i64 64)
  %.21 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.22 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.21, align 8
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.676378*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.394, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 7, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 7, i64* %2, align 8
  %.29 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.30 = bitcast i8* %.29 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.13, %LLVMTypeRef.676727** %.30, align 8
  %.33 = getelementptr inbounds i8, i8* %.29, i64 8
  %3 = bitcast i8* %.33 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.18, %LLVMTypeRef.676727** %3, align 8
  %.35 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.36 = bitcast i8* %.35 to %"Array<LLVMTypeRef>.676776"*
  %.37 = bitcast i8* %.35 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.37, align 8
  %.39 = getelementptr inbounds i8, i8* %.35, i64 8
  %4 = bitcast i8* %.39 to i8**
  store i8* %.29, i8** %4, align 8
  %.41 = getelementptr inbounds i8, i8* %.35, i64 16
  %5 = bitcast i8* %.41 to i64*
  store i64 2, i64* %5, align 8
  %.43 = getelementptr inbounds i8, i8* %.35, i64 24
  %6 = bitcast i8* %.43 to i64*
  store i64 16, i64* %6, align 8
  %.46 = call %IntrinsicResult.676758* @get_intrinsic(%LLVMModuleRef.676726* %.22, %string.676378* %.24, %"Array<LLVMTypeRef>.676776"* %.36, %LLVMTypeRef.676727* %.13, i1 false)
  %.50 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.46, i64 0, i32 2
  %.51 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.50, align 8
  %.53 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.46, i64 0, i32 1
  %.54 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.53, align 8
  %.56 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 1
  %.57 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.56, align 8
  %.59 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 2
  %.60 = load i64, i64* %.59, align 8
  %.61 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.51, %LLVMValueRef.676728* %.54, %LLVMValueRef.676728** %.57, i64 %.60, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.61
}

define %LLVMValueRef.676728* @CodeGen_codegen_memcmp_call(%CodeGen.676780* nocapture readonly %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.12 = call %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725* %.11)
  %.13 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.12, i64 0)
  %.17 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.18 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.17, i64 64)
  %.21 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.22 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.21, align 8
  %.23 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.24 = bitcast i8* %.23 to %string.676378*
  %.24.repack = bitcast i8* %.23 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.24.repack, align 8
  %.24.repack1 = getelementptr inbounds i8, i8* %.23, i64 8
  %0 = bitcast i8* %.24.repack1 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.395, i64 0, i64 0), i8** %0, align 8
  %.24.repack2 = getelementptr inbounds i8, i8* %.23, i64 16
  %1 = bitcast i8* %.24.repack2 to i64*
  store i64 6, i64* %1, align 8
  %.24.repack3 = getelementptr inbounds i8, i8* %.23, i64 24
  %2 = bitcast i8* %.24.repack3 to i64*
  store i64 6, i64* %2, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.13, %LLVMTypeRef.676727** %.31, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %3 = bitcast i8* %.34 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.13, %LLVMTypeRef.676727** %3, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %4 = bitcast i8* %.36 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.18, %LLVMTypeRef.676727** %4, align 8
  %.38 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.39 = bitcast i8* %.38 to %"Array<LLVMTypeRef>.676776"*
  %.40 = bitcast i8* %.38 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.40, align 8
  %.42 = getelementptr inbounds i8, i8* %.38, i64 8
  %5 = bitcast i8* %.42 to i8**
  store i8* %.30, i8** %5, align 8
  %.44 = getelementptr inbounds i8, i8* %.38, i64 16
  %6 = bitcast i8* %.44 to i64*
  store i64 3, i64* %6, align 8
  %.46 = getelementptr inbounds i8, i8* %.38, i64 24
  %7 = bitcast i8* %.46 to i64*
  store i64 24, i64* %7, align 8
  %.49 = call %IntrinsicResult.676758* @get_intrinsic(%LLVMModuleRef.676726* %.22, %string.676378* %.24, %"Array<LLVMTypeRef>.676776"* %.39, %LLVMTypeRef.676727* %.18, i1 false)
  %.53 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.49, i64 0, i32 2
  %.54 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.53, align 8
  %.56 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.49, i64 0, i32 1
  %.57 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.56, align 8
  %.59 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 1
  %.60 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.59, align 8
  %.62 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 2
  %.63 = load i64, i64* %.62, align 8
  %.64 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.54, %LLVMValueRef.676728* %.57, %LLVMValueRef.676728** %.60, i64 %.63, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.64
}

define %LLVMValueRef.676728* @CodeGen_codegen_sprintf_call(%CodeGen.676780* nocapture readonly %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.3, %LLVMValueRef.676728* %.4, i1 %.5) {
.7:
  %.14 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.15 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.14, align 8
  %.16 = call %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725* %.15)
  %.19 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.16, i64 0)
  %.23 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.14, align 8
  %.24 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.23, i64 64)
  br i1 %.5, label %true_block, label %false_block

true_block:                                       ; preds = %.7
  %.31 = call %LLVMValueRef.676728* @LLVMBuildArrayMalloc(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.16, %LLVMValueRef.676728* %.4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

false_block:                                      ; preds = %.7
  %.36 = call %LLVMValueRef.676728* @LLVMBuildArrayAlloca(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.16, %LLVMValueRef.676728* %.4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

end:                                              ; preds = %false_block, %true_block
  %.38 = phi %LLVMValueRef.676728* [ %.31, %true_block ], [ %.36, %false_block ]
  %.401.cast = ptrtoint %LLVMValueRef.676728* %.38 to i64
  %.42 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %0 = bitcast i8* %.42 to i64*
  store i64 %.401.cast, i64* %0, align 8
  %.46 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.46 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.48, align 8
  %.50 = getelementptr inbounds i8, i8* %.46, i64 8
  %1 = bitcast i8* %.50 to i8**
  store i8* %.42, i8** %1, align 8
  %.52 = getelementptr inbounds i8, i8* %.46, i64 16
  %2 = bitcast i8* %.52 to i64*
  store i64 1, i64* %2, align 8
  %.54 = getelementptr inbounds i8, i8* %.46, i64 24
  %3 = bitcast i8* %.54 to i64*
  store i64 8, i64* %3, align 8
  %args = alloca %"Array<LLVMValueRef>.676778"*, align 8
  %4 = bitcast %"Array<LLVMValueRef>.676778"** %args to i8**
  store i8* %.46, i8** %4, align 8
  %.62 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 2
  %.635 = load i64, i64* %.62, align 8
  %.646 = icmp sgt i64 %.635, 0
  br i1 %.646, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %end
  %.66 = load %"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"** %args, align 8
  %.69 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 0
  %.74 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.66, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.83, %for.body ]
  %.70 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.69, align 8
  %.71 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.70, i64 0, i32 5
  %.72 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.71, align 8
  %.73 = call %LLVMValueRef.676728* %.72(%"Array<LLVMValueRef>.676778"* %.3, i64 %storemerge7)
  %.75 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.74, align 8
  %.76 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.75, i64 0, i32 2
  %.77 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.76, align 8
  call void %.77(%"Array<LLVMValueRef>.676778"* %.66, %LLVMValueRef.676728* %.73)
  %.83 = add nuw nsw i64 %storemerge7, 1
  %.63 = load i64, i64* %.62, align 8
  %.64 = icmp slt i64 %.83, %.63
  br i1 %.64, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %end
  %.87 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.88 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.87, align 8
  %.89 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.90 = bitcast i8* %.89 to %string.676378*
  %.90.repack = bitcast i8* %.89 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.90.repack, align 8
  %.90.repack2 = getelementptr inbounds i8, i8* %.89, i64 8
  %5 = bitcast i8* %.90.repack2 to i8**
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.396, i64 0, i64 0), i8** %5, align 8
  %.90.repack3 = getelementptr inbounds i8, i8* %.89, i64 16
  %6 = bitcast i8* %.90.repack3 to i64*
  store i64 7, i64* %6, align 8
  %.90.repack4 = getelementptr inbounds i8, i8* %.89, i64 24
  %7 = bitcast i8* %.90.repack4 to i64*
  store i64 7, i64* %7, align 8
  %.95 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.96 = bitcast i8* %.95 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.19, %LLVMTypeRef.676727** %.96, align 8
  %.99 = getelementptr inbounds i8, i8* %.95, i64 8
  %8 = bitcast i8* %.99 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.19, %LLVMTypeRef.676727** %8, align 8
  %.101 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.102 = bitcast i8* %.101 to %"Array<LLVMTypeRef>.676776"*
  %.103 = bitcast i8* %.101 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.103, align 8
  %.105 = getelementptr inbounds i8, i8* %.101, i64 8
  %9 = bitcast i8* %.105 to i8**
  store i8* %.95, i8** %9, align 8
  %.107 = getelementptr inbounds i8, i8* %.101, i64 16
  %10 = bitcast i8* %.107 to i64*
  store i64 2, i64* %10, align 8
  %.109 = getelementptr inbounds i8, i8* %.101, i64 24
  %11 = bitcast i8* %.109 to i64*
  store i64 16, i64* %11, align 8
  %.112 = call %IntrinsicResult.676758* @get_intrinsic(%LLVMModuleRef.676726* %.88, %string.676378* %.90, %"Array<LLVMTypeRef>.676776"* %.102, %LLVMTypeRef.676727* %.24, i1 true)
  %.116 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.112, i64 0, i32 2
  %.117 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.116, align 8
  %.119 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.112, i64 0, i32 1
  %.120 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.119, align 8
  %.121 = load %"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"** %args, align 8
  %.122 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.121, i64 0, i32 1
  %.123 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.122, align 8
  %.125 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.121, i64 0, i32 2
  %.126 = load i64, i64* %.125, align 8
  %.127 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.117, %LLVMValueRef.676728* %.120, %LLVMValueRef.676728** %.123, i64 %.126, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.38
}

define %LLVMValueRef.676728* @CodeGen_codegen_string(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %StringExpression.676572* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.3, i64 0, i32 5
  %.11 = load %string.676378*, %string.676378** %.10, align 8
  %.14 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %"Array<LLVMValueRef>.676778"*
  %.18 = bitcast i8* %.16 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 0, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 8, i64* %2, align 8
  %.31 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** getelementptr inbounds (%"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", i64 0, i32 2), align 16
  call void %.31(%"Array<LLVMValueRef>.676778"* %.17, %LLVMValueRef.676728* null)
  %.38 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.3, i64 0, i32 6
  %.3911 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.38, align 8
  %.4012 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.3911, i64 0, i32 2
  %.4113 = load i64, i64* %.4012, align 8
  %.4214 = icmp sgt i64 %.4113, 0
  br i1 %.4214, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.59 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.3917 = phi %"Array<Expression>.676574"* [ %.3911, %for.body.lr.ph ], [ %.39, %for.body ]
  %str_value.016 = phi %string.676378* [ %.11, %for.body.lr.ph ], [ %.88, %for.body ]
  %storemerge15 = phi i64 [ 0, %for.body.lr.ph ], [ %.94, %for.body ]
  %.48 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.3917, i64 0, i32 0
  %.49 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.48, align 8
  %.50 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.49, i64 0, i32 5
  %.51 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.50, align 8
  %.52 = call %Expression.676558* %.51(%"Array<Expression>.676574"* %.3917, i64 %storemerge15)
  %.53 = getelementptr inbounds %Expression.676558, %Expression.676558* %.52, i64 0, i32 4
  %.54 = load %Type.676538*, %Type.676538** %.53, align 8
  %.55 = call %string.676378* @get_format_from_type(%Type.676538* %.54)
  %.60 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.59, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.60, i64 0, i32 44
  %.62 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.61, align 8
  %.67 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.38, align 8
  %.68 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.67, i64 0, i32 0
  %.69 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.69, i64 0, i32 5
  %.71 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.70, align 8
  %.72 = call %Expression.676558* %.71(%"Array<Expression>.676574"* %.67, i64 %storemerge15)
  %.73 = call %LLVMValueRef.676728* %.62(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.72)
  %.75 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.76 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.75, i64 0, i32 2
  %.77 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.76, align 8
  call void %.77(%"Array<LLVMValueRef>.676778"* %.17, %LLVMValueRef.676728* %.73)
  %.80 = getelementptr inbounds %string.676378, %string.676378* %str_value.016, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 10
  %.83 = load %string.676378* (%string.676378*, %string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*, %string.676378*)** %.82, align 8
  %.84 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.85 = bitcast i8* %.84 to %string.676378*
  %.85.repack = bitcast i8* %.84 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.85.repack, align 8
  %.85.repack6 = getelementptr inbounds i8, i8* %.84, i64 8
  %3 = bitcast i8* %.85.repack6 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.397, i64 0, i64 0), i8** %3, align 8
  %.85.repack7 = getelementptr inbounds i8, i8* %.84, i64 16
  %4 = bitcast i8* %.85.repack7 to i64*
  store i64 1, i64* %4, align 8
  %.85.repack8 = getelementptr inbounds i8, i8* %.84, i64 24
  %5 = bitcast i8* %.85.repack8 to i64*
  store i64 1, i64* %5, align 8
  %.88 = call %string.676378* %.83(%string.676378* %str_value.016, %string.676378* %.85, %string.676378* %.55)
  %.94 = add nuw nsw i64 %storemerge15, 1
  %.39 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.38, align 8
  %.40 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.39, i64 0, i32 2
  %.41 = load i64, i64* %.40, align 8
  %.42 = icmp slt i64 %.94, %.41
  br i1 %.42, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %str_value.0.lcssa = phi %string.676378* [ %.11, %.5 ], [ %.88, %for.body ]
  %.98 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.99 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.98, align 8
  %.100 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.99, i64 0, i32 11
  %.101 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.100, align 8
  %.103 = getelementptr inbounds %string.676378, %string.676378* %str_value.0.lcssa, i64 0, i32 2
  %.104 = load i64, i64* %.103, align 8
  %.105 = call %LLVMValueRef.676728* %.101(%CodeGen.676780* %.1, i64 %.104)
  %str_len = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.105, %LLVMValueRef.676728** %str_len, align 8
  %.108 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 5
  %.109 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.108, align 8
  %.110 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.109, i64 0, i32 0
  %.111 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.110, align 8
  %.112 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.111, i64 0, i32 3
  %.113 = load %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.112, align 8
  %.115 = call %LLVMValueRef.676728* %.113(%"Map<string, LLVMValueRef>.676763"* %.109, %string.676378* %str_value.0.lcssa)
  %str = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.115, %LLVMValueRef.676728** %str, align 8
  %6 = ptrtoint %LLVMValueRef.676728* %.115 to i64
  %.118 = trunc i64 %6 to i32
  %.120 = icmp eq i32 %.118, 0
  br i1 %.120, label %for.end.if, label %for.end.endif

for.end.if:                                       ; preds = %for.end
  %.124 = getelementptr inbounds %string.676378, %string.676378* %str_value.0.lcssa, i64 0, i32 0
  %.125 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.124, align 8
  %.126 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.125, i64 0, i32 11
  %.127 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.126, align 8
  %.128 = call i8* %.127(%string.676378* %str_value.0.lcssa)
  %.129 = call %LLVMValueRef.676728* @LLVMBuildGlobalString(%LLVMBuilderRef.676733* %.2, i8* %.128, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  store %LLVMValueRef.676728* %.129, %LLVMValueRef.676728** %str, align 8
  %.133 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.108, align 8
  %.134 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.133, i64 0, i32 0
  %.135 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.134, align 8
  %.136 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.135, i64 0, i32 2
  %.137 = load void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)*, void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)** %.136, align 8
  call void %.137(%"Map<string, LLVMValueRef>.676763"* %.133, %string.676378* %str_value.0.lcssa, %LLVMValueRef.676728* %.129)
  br label %for.end.endif

for.end.endif:                                    ; preds = %for.end.if, %for.end
  %.143 = getelementptr inbounds %StringExpression.676572, %StringExpression.676572* %.3, i64 0, i32 4
  %.144 = load %Type.676538*, %Type.676538** %.143, align 8
  %.145 = call i1 @is_object(%Type.676538* %.144)
  %.149 = load i64, i64* %1, align 8
  %.150 = icmp sgt i64 %.149, 1
  br i1 %.150, label %for.end.endif.if, label %for.end.endif.endif

for.end.endif.if:                                 ; preds = %for.end.endif
  %.153 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %str, align 8
  %.155 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.156 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.155, i64 0, i32 3
  %.157 = load void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)** %.156, align 8
  call void %.157(%"Array<LLVMValueRef>.676778"* %.17, i64 0, %LLVMValueRef.676728* %.153)
  %.161 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.98, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.161, i64 0, i32 19
  %.163 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)** %.162, align 8
  %.166 = call %LLVMValueRef.676728* %.163(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.17)
  store %LLVMValueRef.676728* %.166, %LLVMValueRef.676728** %str_len, align 8
  %.170 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.98, align 8
  %.171 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.170, i64 0, i32 22
  %.172 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*, i1)** %.171, align 8
  %.177 = call %LLVMValueRef.676728* %.172(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.17, %LLVMValueRef.676728* %.166, i1 %.145)
  store %LLVMValueRef.676728* %.177, %LLVMValueRef.676728** %str, align 8
  br label %for.end.endif.endif

for.end.endif.endif:                              ; preds = %for.end.endif.if, %for.end.endif
  br i1 %.145, label %for.end.endif.endif.if, label %for.end.endif.endif.endif

for.end.endif.endif.if:                           ; preds = %for.end.endif.endif
  %.185 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.98, align 8
  %.186 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.185, i64 0, i32 14
  %.187 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.186, align 8
  %.190 = load %Type.676538*, %Type.676538** %.143, align 8
  %.191 = call %LLVMTypeRef.676727* %.187(%CodeGen.676780* %.1, %Type.676538* %.190, i1 true)
  %.192 = call %LLVMValueRef.676728* @LLVMBuildMalloc(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.191, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %self = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.192, %LLVMValueRef.676728** %self, align 8
  %.196 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.98, align 8
  %.197 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.196, i64 0, i32 49
  %.198 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ObjectType.676562*, %"Array<LLVMValueRef>.676778"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ObjectType.676562*, %"Array<LLVMValueRef>.676778"*)** %.197, align 8
  %7 = bitcast %Type.676538** %.143 to %ObjectType.676562**
  %.2021 = load %ObjectType.676562*, %ObjectType.676562** %7, align 8
  %8 = bitcast %LLVMValueRef.676728** %self to i64*
  %.2042 = load i64, i64* %8, align 8
  %9 = bitcast %LLVMValueRef.676728** %str to i64*
  %.2053 = load i64, i64* %9, align 8
  %10 = bitcast %LLVMValueRef.676728** %str_len to i64*
  %.2064 = load i64, i64* %10, align 8
  %.208 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %11 = bitcast i8* %.208 to i64*
  store i64 %.2042, i64* %11, align 8
  %.212 = getelementptr inbounds i8, i8* %.208, i64 8
  %12 = bitcast i8* %.212 to i64*
  store i64 %.2053, i64* %12, align 8
  %.214 = getelementptr inbounds i8, i8* %.208, i64 16
  %13 = bitcast i8* %.214 to i64*
  store i64 %.2064, i64* %13, align 8
  %.216 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.217 = bitcast i8* %.216 to %"Array<LLVMValueRef>.676778"*
  %.218 = bitcast i8* %.216 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.218, align 8
  %.220 = getelementptr inbounds i8, i8* %.216, i64 8
  %14 = bitcast i8* %.220 to i8**
  store i8* %.208, i8** %14, align 8
  %.222 = getelementptr inbounds i8, i8* %.216, i64 16
  %15 = bitcast i8* %.222 to i64*
  store i64 3, i64* %15, align 8
  %.224 = getelementptr inbounds i8, i8* %.216, i64 24
  %16 = bitcast i8* %.224 to i64*
  store i64 24, i64* %16, align 8
  call void %.198(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ObjectType.676562* %.2021, %"Array<LLVMValueRef>.676778"* %.217)
  store i64 %.2042, i64* %9, align 8
  br label %for.end.endif.endif.endif

for.end.endif.endif.endif:                        ; preds = %for.end.endif.endif.if, %for.end.endif.endif
  %.230 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %str, align 8
  ret %LLVMValueRef.676728* %.230
}

define %LLVMValueRef.676728* @CodeGen_store_array_elements(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.3, %ArrayExpression.676578* nocapture readonly %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.13, i64 0, i32 11
  %.15 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.14, align 8
  %.16 = call %LLVMValueRef.676728* %.15(%CodeGen.676780* %.1, i64 0)
  %args = alloca [2 x %LLVMValueRef.676728*], align 8
  %.20 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %args, i64 0, i64 0
  store %LLVMValueRef.676728* %.16, %LLVMValueRef.676728** %.20, align 8
  %.22 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %args, i64 0, i64 1
  store %LLVMValueRef.676728* %.16, %LLVMValueRef.676728** %.22, align 8
  %.26 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.27 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.26, i64 0, i32 11
  %.28 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.27, align 8
  %.29 = call %LLVMValueRef.676728* %.28(%CodeGen.676780* %.1, i64 1)
  %next_args = alloca [1 x %LLVMValueRef.676728*], align 8
  %.30 = getelementptr inbounds [1 x %LLVMValueRef.676728*], [1 x %LLVMValueRef.676728*]* %next_args, i64 0, i64 0
  store %LLVMValueRef.676728* %.29, %LLVMValueRef.676728** %.30, align 8
  %.34 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.34, i64 0, i32 14
  %.36 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.35, align 8
  %.38 = getelementptr inbounds %ArrayExpression.676578, %ArrayExpression.676578* %.4, i64 0, i32 4
  %.39 = load %Type.676538*, %Type.676538** %.38, align 8
  %.40 = call %LLVMTypeRef.676727* %.36(%CodeGen.676780* %.1, %Type.676538* %.39, i1 true)
  %.44 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.44, i64 0, i32 14
  %.46 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.45, align 8
  %0 = bitcast %Type.676538** %.38 to %ArrayType.676560**
  %.491 = load %ArrayType.676560*, %ArrayType.676560** %0, align 8
  %.51 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.491, i64 0, i32 2
  %.52 = load %Type.676538*, %Type.676538** %.51, align 8
  %.53 = call %LLVMTypeRef.676727* %.46(%CodeGen.676780* %.1, %Type.676538* %.52, i1 true)
  %.54 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.53, i64 0)
  %.61 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.40, %LLVMValueRef.676728* %.3, %LLVMValueRef.676728** nonnull %.20, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.68 = getelementptr inbounds %ArrayExpression.676578, %ArrayExpression.676578* %.4, i64 0, i32 5
  %.693 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.68, align 8
  %.704 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.693, i64 0, i32 2
  %.715 = load i64, i64* %.704, align 8
  %.726 = icmp sgt i64 %.715, 0
  br i1 %.726, label %for.body, label %for.end

for.body:                                         ; preds = %.6, %for.body
  %.699 = phi %"Array<Expression>.676574"* [ %.69, %for.body ], [ %.693, %.6 ]
  %addr.08 = phi %LLVMValueRef.676728* [ %.98, %for.body ], [ %.61, %.6 ]
  %storemerge7 = phi i64 [ %.104, %for.body ], [ 0, %.6 ]
  %.77 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.78 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.77, i64 0, i32 44
  %.79 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.78, align 8
  %.85 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.699, i64 0, i32 0
  %.86 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.85, align 8
  %.87 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.86, i64 0, i32 5
  %.88 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.87, align 8
  %.89 = call %Expression.676558* %.88(%"Array<Expression>.676574"* %.699, i64 %storemerge7)
  %.90 = call %LLVMValueRef.676728* %.79(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.89)
  %.92 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.90, %LLVMValueRef.676728* %addr.08)
  %.98 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.54, %LLVMValueRef.676728* %addr.08, %LLVMValueRef.676728** nonnull %.30, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.104 = add nuw nsw i64 %storemerge7, 1
  %.69 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.68, align 8
  %.70 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.69, i64 0, i32 2
  %.71 = load i64, i64* %.70, align 8
  %.72 = icmp slt i64 %.104, %.71
  br i1 %.72, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.6
  %addr.0.lcssa = phi %LLVMValueRef.676728* [ %.61, %.6 ], [ %.98, %for.body ]
  ret %LLVMValueRef.676728* %addr.0.lcssa
}

define %LLVMValueRef.676728* @CodeGen_codegen_array_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ArrayExpression.676578* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 14
  %.13 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.12, align 8
  %.15 = getelementptr inbounds %ArrayExpression.676578, %ArrayExpression.676578* %.3, i64 0, i32 4
  %0 = bitcast %Type.676538** %.15 to %ArrayType.676560**
  %.161 = load %ArrayType.676560*, %ArrayType.676560** %0, align 8
  %.18 = getelementptr inbounds %ArrayType.676560, %ArrayType.676560* %.161, i64 0, i32 2
  %.19 = load %Type.676538*, %Type.676538** %.18, align 8
  %.20 = call %LLVMTypeRef.676727* %.13(%CodeGen.676780* %.1, %Type.676538* %.19, i1 true)
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %"Array<LLVMValueRef>.676778"*
  %.27 = bitcast i8* %.25 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %1 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %1, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %2 = bitcast i8* %.31 to i64*
  store i64 0, i64* %2, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %3 = bitcast i8* %.33 to i64*
  store i64 8, i64* %3, align 8
  %.41 = getelementptr inbounds %ArrayExpression.676578, %ArrayExpression.676578* %.3, i64 0, i32 5
  %.423 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.41, align 8
  %.434 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.423, i64 0, i32 2
  %.445 = load i64, i64* %.434, align 8
  %.456 = icmp sgt i64 %.445, 0
  br i1 %.456, label %for.body, label %for.end

for.body:                                         ; preds = %.5, %for.body
  %.428 = phi %"Array<Expression>.676574"* [ %.42, %for.body ], [ %.423, %.5 ]
  %storemerge7 = phi i64 [ %.73, %for.body ], [ 0, %.5 ]
  %.50 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.51 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.50, i64 0, i32 44
  %.52 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.51, align 8
  %.58 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.428, i64 0, i32 0
  %.59 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.58, align 8
  %.60 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.59, i64 0, i32 5
  %.61 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.60, align 8
  %.62 = call %Expression.676558* %.61(%"Array<Expression>.676574"* %.428, i64 %storemerge7)
  %.63 = call %LLVMValueRef.676728* %.52(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.62)
  %.65 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.27, align 8
  %.66 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.65, i64 0, i32 2
  %.67 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.66, align 8
  call void %.67(%"Array<LLVMValueRef>.676778"* %.26, %LLVMValueRef.676728* %.63)
  %.73 = add nuw nsw i64 %storemerge7, 1
  %.42 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.41, align 8
  %.43 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.42, i64 0, i32 2
  %.44 = load i64, i64* %.43, align 8
  %.45 = icmp slt i64 %.73, %.44
  br i1 %.45, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  %4 = bitcast i8* %.29 to %LLVMValueRef.676728***
  %.79 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %4, align 8
  %.82 = load i64, i64* %2, align 8
  %.83 = call %LLVMValueRef.676728* @LLVMConstArray(%LLVMTypeRef.676727* %.20, %LLVMValueRef.676728** %.79, i64 %.82)
  ret %LLVMValueRef.676728* %.83
}

define %LLVMValueRef.676728* @CodeGen_get_var_expr_mem(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* nocapture readnone %.2, %VarAccessExpression.676608* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 2
  %.13 = load %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)** %.12, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.676608, %VarAccessExpression.676608* %.3, i64 0, i32 5
  %.16 = load %VarId.676596*, %VarId.676596** %.15, align 8
  %.17 = call %LLVMValueRef.676728* %.13(%CodeGen.676780* %.1, %VarId.676596* %.16)
  %0 = ptrtoint %LLVMValueRef.676728* %.17 to i64
  %.20 = trunc i64 %0 to i32
  %.22 = icmp eq i32 %.20, 0
  br i1 %.22, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.25.repack = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.25.repack, align 8
  %.25.repack1 = getelementptr inbounds i8, i8* %.24, i64 8
  %1 = bitcast i8* %.25.repack1 to i8**
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @str.398, i64 0, i64 0), i8** %1, align 8
  %.25.repack2 = getelementptr inbounds i8, i8* %.24, i64 16
  %2 = bitcast i8* %.25.repack2 to i64*
  store i64 45, i64* %2, align 8
  %.25.repack3 = getelementptr inbounds i8, i8* %.24, i64 24
  %3 = bitcast i8* %.25.repack3 to i64*
  store i64 45, i64* %3, align 8
  call void @println(%string.676378* %.25)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret %LLVMValueRef.676728* %.17
}

define %LLVMValueRef.676728* @CodeGen_get_index_expr_mem(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IndexExpression.676590* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 44
  %.13 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.12, align 8
  %.16 = getelementptr inbounds %IndexExpression.676590, %IndexExpression.676590* %.3, i64 0, i32 6
  %.17 = load %Expression.676558*, %Expression.676558** %.16, align 8
  %.18 = call %LLVMValueRef.676728* %.13(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.17)
  %.22 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.22, i64 0, i32 14
  %.24 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.23, align 8
  %.26 = getelementptr inbounds %IndexExpression.676590, %IndexExpression.676590* %.3, i64 0, i32 5
  %.27 = load %Expression.676558*, %Expression.676558** %.26, align 8
  %.28 = getelementptr inbounds %Expression.676558, %Expression.676558* %.27, i64 0, i32 4
  %.29 = load %Type.676538*, %Type.676538** %.28, align 8
  %.30 = call %LLVMTypeRef.676727* %.24(%CodeGen.676780* %.1, %Type.676538* %.29, i1 true)
  %.35 = load %Expression.676558*, %Expression.676558** %.26, align 8
  %.36 = getelementptr inbounds %Expression.676558, %Expression.676558* %.35, i64 0, i32 4
  %.37 = load %Type.676538*, %Type.676538** %.36, align 8
  %.38 = getelementptr inbounds %Type.676538, %Type.676538* %.37, i64 0, i32 1
  %.39 = load i64, i64* %.38, align 8
  %.40 = icmp eq i64 %.39, 16
  br i1 %.40, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.44 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.44, i64 0, i32 11
  %.46 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.45, align 8
  %.47 = call %LLVMValueRef.676728* %.46(%CodeGen.676780* %.1, i64 0)
  %indices = alloca [2 x %LLVMValueRef.676728*], align 8
  %.49 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %indices, i64 0, i64 0
  store %LLVMValueRef.676728* %.47, %LLVMValueRef.676728** %.49, align 8
  %.51 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %indices, i64 0, i64 1
  store %LLVMValueRef.676728* %.18, %LLVMValueRef.676728** %.51, align 8
  %.55 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.56 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.55, i64 0, i32 29
  %.57 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.56, align 8
  %.61 = load %Expression.676558*, %Expression.676558** %.26, align 8
  %.62 = call %LLVMValueRef.676728* %.57(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.61)
  %.69 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.30, %LLVMValueRef.676728* %.62, %LLVMValueRef.676728** nonnull %.49, i64 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.399, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.69

.5.endif:                                         ; preds = %.5
  %indices_1 = alloca [1 x %LLVMValueRef.676728*], align 8
  %.72 = getelementptr inbounds [1 x %LLVMValueRef.676728*], [1 x %LLVMValueRef.676728*]* %indices_1, i64 0, i64 0
  store %LLVMValueRef.676728* %.18, %LLVMValueRef.676728** %.72, align 8
  %.76 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.77 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.76, i64 0, i32 44
  %.78 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.77, align 8
  %.83 = call %LLVMValueRef.676728* %.78(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.35)
  %.90 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.30, %LLVMValueRef.676728* %.83, %LLVMValueRef.676728** nonnull %.72, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.400, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.90
}

define %LLVMValueRef.676728* @CodeGen_get_member_expr_mem(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %MemberExpression.676606* nocapture readonly %.3, %LLVMValueRef.676728* %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.13 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.14 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.13, i64 0, i32 3
  %.15 = load %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)** %.14, align 8
  %.17 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 6
  %.18 = load %PropId.676604*, %PropId.676604** %.17, align 8
  %.19 = getelementptr inbounds %PropId.676604, %PropId.676604* %.18, i64 0, i32 2
  %.20 = load %TypeId.676552*, %TypeId.676552** %.19, align 8
  %.21 = call %CGClassType.676760* %.15(%CodeGen.676780* %.1, %TypeId.676552* %.20)
  %.24 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 4
  %.25 = load %Type.676538*, %Type.676538** %.24, align 8
  %.26 = getelementptr inbounds %Type.676538, %Type.676538* %.25, i64 0, i32 1
  %.27 = load i64, i64* %.26, align 8
  %.28.not = icmp eq i64 %.27, 17
  %.32 = load %PropId.676604*, %PropId.676604** %.17, align 8
  %.33 = call %string.676378* @create_prop_key(%PropId.676604* %.32)
  %.36 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.21, i64 0, i32 1
  %.37 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.36, align 8
  %.38 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.37, i64 0)
  %.41 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.21, i64 0, i32 4
  %.42 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.41, align 8
  %.43 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.42, i64 0, i32 0
  %.44 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.43, align 8
  %.45 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.44, i64 0, i32 3
  %.46 = load %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.45, align 8
  %.48 = call %LLVMValueRef.676728* %.46(%"Map<string, LLVMValueRef>.676763"* %.42, %string.676378* %.33)
  %0 = ptrtoint %LLVMValueRef.676728* %.48 to i64
  %.51 = trunc i64 %0 to i32
  %.53.not = icmp eq i32 %.51, 0
  br i1 %.53.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  ret %LLVMValueRef.676728* %.48

.6.endif:                                         ; preds = %.6
  %1 = ptrtoint %LLVMValueRef.676728* %.4 to i64
  %.58 = trunc i64 %1 to i32
  %.60 = icmp eq i32 %.58, 0
  br i1 %.60, label %.6.endif.if, label %.6.endif.endif

.6.endif.if:                                      ; preds = %.6.endif
  %.64 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.65 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.64, i64 0, i32 44
  %.66 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.65, align 8
  %.69 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 5
  %.70 = load %Expression.676558*, %Expression.676558** %.69, align 8
  %.71 = call %LLVMValueRef.676728* %.66(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.70)
  br label %.6.endif.endif

.6.endif.endif:                                   ; preds = %.6.endif.if, %.6.endif
  %ptr.0 = phi %LLVMValueRef.676728* [ %.71, %.6.endif.if ], [ %.4, %.6.endif ]
  %.75 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.77 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.79 = bitcast i8* %.77 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.79, align 8
  %.81 = getelementptr inbounds i8, i8* %.77, i64 8
  %2 = bitcast i8* %.81 to i8**
  store i8* %.75, i8** %2, align 8
  %.83 = getelementptr inbounds i8, i8* %.77, i64 16
  %3 = bitcast i8* %.83 to i64*
  store i64 0, i64* %3, align 8
  %.85 = getelementptr inbounds i8, i8* %.77, i64 24
  %4 = bitcast i8* %.85 to i64*
  store i64 8, i64* %4, align 8
  %indices = alloca %"Array<LLVMValueRef>.676778"*, align 8
  %5 = bitcast %"Array<LLVMValueRef>.676778"** %indices to i8**
  store i8* %.77, i8** %5, align 8
  br i1 %.28.not, label %.6.endif.endif.else, label %.6.endif.endif.if

.6.endif.endif.if:                                ; preds = %.6.endif.endif
  %.92 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.21, i64 0, i32 6
  %6 = bitcast %LLVMTypeRef.676727** %.92 to i64*
  %.931 = load i64, i64* %6, align 8
  %.94 = trunc i64 %.931 to i32
  %.96 = icmp ne i32 %.94, 0
  %. = zext i1 %.96 to i64
  %.102 = load %"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"** %indices, align 8
  %.105 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.106 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.105, i64 0, i32 11
  %.107 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.106, align 8
  %.109 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.21, i64 0, i32 3
  %.110 = load %"Map<string, int>.676762"*, %"Map<string, int>.676762"** %.109, align 8
  %.111 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.110, i64 0, i32 0
  %.112 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.111, align 8
  %.113 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.112, i64 0, i32 3
  %.114 = load i64 (%"Map<string, int>.676762"*, %string.676378*)*, i64 (%"Map<string, int>.676762"*, %string.676378*)** %.113, align 8
  %.116 = call i64 %.114(%"Map<string, int>.676762"* %.110, %string.676378* %.33)
  %.118 = add i64 %.116, %.
  %.119 = call %LLVMValueRef.676728* %.107(%CodeGen.676780* %.1, i64 %.118)
  %.120 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.102, i64 0, i32 0
  %.121 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.120, align 8
  %.122 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.121, i64 0, i32 2
  %.123 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.122, align 8
  call void %.123(%"Array<LLVMValueRef>.676778"* %.102, %LLVMValueRef.676728* %.119)
  br label %.6.endif.endif.endif

.6.endif.endif.else:                              ; preds = %.6.endif.endif
  %.126 = load %"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"** %indices, align 8
  %.129 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.130 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.129, i64 0, i32 11
  %.131 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.130, align 8
  %.132 = call %LLVMValueRef.676728* %.131(%CodeGen.676780* %.1, i64 0)
  %.133 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.126, i64 0, i32 0
  %.134 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.133, align 8
  %.135 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.134, i64 0, i32 2
  %.136 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.135, align 8
  call void %.136(%"Array<LLVMValueRef>.676778"* %.126, %LLVMValueRef.676728* %.132)
  %.142 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.126, i64 0, i32 1
  %.143 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.142, align 8
  %.145 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.126, i64 0, i32 2
  %.146 = load i64, i64* %.145, align 8
  %.147 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.38, %LLVMValueRef.676728* %ptr.0, %LLVMValueRef.676728** %.143, i64 %.146, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.151 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.21, i64 0, i32 6
  %.152 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.151, align 8
  %.153 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.152, i64 0)
  %.155 = call %LLVMValueRef.676728* @LLVMBuildLoad2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.153, %LLVMValueRef.676728* %.147, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.160 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.12, align 8
  %.161 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.160, i64 0, i32 11
  %.162 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.161, align 8
  %.164 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.21, i64 0, i32 2
  %.165 = load %"Map<string, int>.676762"*, %"Map<string, int>.676762"** %.164, align 8
  %.166 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.165, i64 0, i32 0
  %.167 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.166, align 8
  %.168 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.167, i64 0, i32 3
  %.169 = load i64 (%"Map<string, int>.676762"*, %string.676378*)*, i64 (%"Map<string, int>.676762"*, %string.676378*)** %.168, align 8
  %.171 = call i64 %.169(%"Map<string, int>.676762"* %.165, %string.676378* %.33)
  %.172 = call %LLVMValueRef.676728* %.162(%CodeGen.676780* %.1, i64 %.171)
  %.174 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.133, align 8
  %.175 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.174, i64 0, i32 3
  %.176 = load void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)** %.175, align 8
  call void %.176(%"Array<LLVMValueRef>.676778"* %.126, i64 0, %LLVMValueRef.676728* %.172)
  br label %.6.endif.endif.endif

.6.endif.endif.endif:                             ; preds = %.6.endif.endif.if, %.6.endif.endif.else
  %ptr.1 = phi %LLVMValueRef.676728* [ %ptr.0, %.6.endif.endif.if ], [ %.155, %.6.endif.endif.else ]
  %.182 = load %"Array<LLVMValueRef>.676778"*, %"Array<LLVMValueRef>.676778"** %indices, align 8
  %.183 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.182, i64 0, i32 1
  %.184 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.183, align 8
  %.186 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.182, i64 0, i32 2
  %.187 = load i64, i64* %.186, align 8
  %.188 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.38, %LLVMValueRef.676728* %ptr.1, %LLVMValueRef.676728** %.184, i64 %.187, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.401, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.188
}

define %LLVMValueRef.676728* @CodeGen_get_expr_mem(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.676558, %Expression.676558* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif [
    i64 7, label %.5.if
    i64 13, label %.5.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.16, i64 0, i32 26
  %.18 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)** %.17, align 8
  %.21 = bitcast %Expression.676558* %.3 to %VarAccessExpression.676608*
  %.22 = call %LLVMValueRef.676728* %.18(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %VarAccessExpression.676608* %.21)
  ret %LLVMValueRef.676728* %.22

.5.endif.if:                                      ; preds = %.5
  %.30 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.31, i64 0, i32 27
  %.33 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)** %.32, align 8
  %.36 = bitcast %Expression.676558* %.3 to %IndexExpression.676590*
  %.37 = call %LLVMValueRef.676728* %.33(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IndexExpression.676590* %.36)
  ret %LLVMValueRef.676728* %.37

.5.endif.endif:                                   ; preds = %.5
  %.42 = icmp eq i64 %.11, 12
  %.45 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.45, align 8
  br i1 %.42, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.46, i64 0, i32 28
  %.48 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)** %.47, align 8
  %.51 = bitcast %Expression.676558* %.3 to %MemberExpression.676606*
  %.52 = call %LLVMValueRef.676728* %.48(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %MemberExpression.676606* %.51, %LLVMValueRef.676728* null)
  ret %LLVMValueRef.676728* %.52

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.57 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.46, i64 0, i32 44
  %.58 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.57, align 8
  %.61 = call %LLVMValueRef.676728* %.58(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.3)
  ret %LLVMValueRef.676728* %.61
}

define %LLVMValueRef.676728* @CodeGen_store_expr_to_mem(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.3, %Expression.676558* %.4) {
.6:
  %.12 = getelementptr inbounds %Expression.676558, %Expression.676558* %.4, i64 0, i32 3
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp eq i64 %.13, 6
  %.16 = getelementptr inbounds %Expression.676558, %Expression.676558* %.4, i64 0, i32 2
  %.17 = load i1, i1* %.16, align 1
  %.18 = xor i1 %.17, true
  %.19 = and i1 %.14, %.18
  %.22 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.22, align 8
  br i1 %.19, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.23, i64 0, i32 24
  %.25 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %ArrayExpression.676578*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %ArrayExpression.676578*)** %.24, align 8
  %.29 = bitcast %Expression.676558* %.4 to %ArrayExpression.676578*
  %.30 = call %LLVMValueRef.676728* %.25(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.3, %ArrayExpression.676578* %.29)
  ret %LLVMValueRef.676728* %.30

.6.endif:                                         ; preds = %.6
  %.35 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.23, i64 0, i32 44
  %.36 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.35, align 8
  %.39 = call %LLVMValueRef.676728* %.36(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.4)
  %.44 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.39, %LLVMValueRef.676728* %.3)
  ret %LLVMValueRef.676728* %.39
}

define %LLVMValueRef.676728* @CodeGen_codegen_assignment(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %BinaryExpression.676580* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 29
  %.13 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.12, align 8
  %.16 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.3, i64 0, i32 5
  %.17 = load %Expression.676558*, %Expression.676558** %.16, align 8
  %.18 = call %LLVMValueRef.676728* %.13(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.17)
  %.22 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.22, i64 0, i32 30
  %.24 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)** %.23, align 8
  %.28 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.3, i64 0, i32 7
  %.29 = load %Expression.676558*, %Expression.676558** %.28, align 8
  %.30 = call %LLVMValueRef.676728* %.24(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.18, %Expression.676558* %.29)
  ret %LLVMValueRef.676728* %.30
}

define %LLVMValueRef.676728* @CodeGen_codegen_pow_expr(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Type.676538* %.3, %LLVMValueRef.676728* %.4, %LLVMValueRef.676728* %.5) {
.7:
  %args = alloca [2 x %LLVMValueRef.676728*], align 8
  %.15 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %args, i64 0, i64 0
  store %LLVMValueRef.676728* %.4, %LLVMValueRef.676728** %.15, align 8
  %.17 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %args, i64 0, i64 1
  store %LLVMValueRef.676728* %.5, %LLVMValueRef.676728** %.17, align 8
  %.20 = call %string.676378* @dump_type(%Type.676538* %.3, i1 true)
  %.21 = getelementptr inbounds %string.676378, %string.676378* %.20, i64 0, i32 0
  %.22 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.21, align 8
  %.23 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.22, i64 0, i32 11
  %.24 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.23, align 8
  %.25 = call i8* %.24(%string.676378* %.20)
  %.27 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.402, i64 0, i64 0), i8* %.25)
  %.29 = call i8* @malloc(i64 %.27)
  %.30 = call i64 (i8*, i8*, ...) @sprintf(i8* %.29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.402, i64 0, i64 0), i8* %.25)
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %string.676378*
  %.33 = bitcast i8* %.31 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.33, align 8
  %.35 = getelementptr inbounds i8, i8* %.31, i64 8
  %0 = bitcast i8* %.35 to i8**
  store i8* %.29, i8** %0, align 8
  %.37 = getelementptr inbounds i8, i8* %.31, i64 16
  %1 = bitcast i8* %.37 to i64*
  store i64 %.27, i64* %1, align 8
  %.39 = getelementptr inbounds i8, i8* %.31, i64 24
  %2 = bitcast i8* %.39 to i64*
  store i64 %.27, i64* %2, align 8
  %.43 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.44 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.43, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.44, i64 0, i32 14
  %.46 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.45, align 8
  %.48 = call %LLVMTypeRef.676727* %.46(%CodeGen.676780* %.1, %Type.676538* %.3, i1 true)
  %.51 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 4
  %.52 = load %"Map<string, IntrinsicResult>.676783"*, %"Map<string, IntrinsicResult>.676783"** %.51, align 8
  %.53 = getelementptr inbounds %"Map<string, IntrinsicResult>.676783", %"Map<string, IntrinsicResult>.676783"* %.52, i64 0, i32 0
  %.54 = load %"Map<string, IntrinsicResult>_vtable_ty.676787"*, %"Map<string, IntrinsicResult>_vtable_ty.676787"** %.53, align 8
  %.55 = getelementptr inbounds %"Map<string, IntrinsicResult>_vtable_ty.676787", %"Map<string, IntrinsicResult>_vtable_ty.676787"* %.54, i64 0, i32 3
  %.56 = load %IntrinsicResult.676758* (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)*, %IntrinsicResult.676758* (%"Map<string, IntrinsicResult>.676783"*, %string.676378*)** %.55, align 8
  %.58 = call %IntrinsicResult.676758* %.56(%"Map<string, IntrinsicResult>.676783"* %.52, %string.676378* %.32)
  %.61 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.62 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.61, align 8
  %.67 = call dereferenceable_or_null(16) i8* @malloc(i64 16)
  %.68 = bitcast i8* %.67 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.48, %LLVMTypeRef.676727** %.68, align 8
  %.71 = getelementptr inbounds i8, i8* %.67, i64 8
  %3 = bitcast i8* %.71 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.48, %LLVMTypeRef.676727** %3, align 8
  %.73 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.74 = bitcast i8* %.73 to %"Array<LLVMTypeRef>.676776"*
  %.75 = bitcast i8* %.73 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.75, align 8
  %.77 = getelementptr inbounds i8, i8* %.73, i64 8
  %4 = bitcast i8* %.77 to i8**
  store i8* %.67, i8** %4, align 8
  %.79 = getelementptr inbounds i8, i8* %.73, i64 16
  %5 = bitcast i8* %.79 to i64*
  store i64 2, i64* %5, align 8
  %.81 = getelementptr inbounds i8, i8* %.73, i64 24
  %6 = bitcast i8* %.81 to i64*
  store i64 16, i64* %6, align 8
  %.84 = call %IntrinsicResult.676758* @get_intrinsic(%LLVMModuleRef.676726* %.62, %string.676378* %.32, %"Array<LLVMTypeRef>.676776"* %.74, %LLVMTypeRef.676727* %.48, i1 false)
  %.88 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.84, i64 0, i32 2
  %.89 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.88, align 8
  %.91 = getelementptr inbounds %IntrinsicResult.676758, %IntrinsicResult.676758* %.84, i64 0, i32 1
  %.92 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.91, align 8
  %.95 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.89, %LLVMValueRef.676728* %.92, %LLVMValueRef.676728** nonnull %.15, i64 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.95
}

define %LLVMValueRef.676728* @CodeGen_codegen_bin_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %BinaryExpression.676580* %.3) {
.5:
  %.10 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.3, i64 0, i32 6
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.3, i64 0, i32 5
  %.15 = load %Expression.676558*, %Expression.676558** %.14, align 8
  %.16 = getelementptr inbounds %Expression.676558, %Expression.676558* %.15, i64 0, i32 4
  %0 = bitcast %Type.676538** %.16 to i64*
  %.171 = load i64, i64* %0, align 8
  %.19 = getelementptr inbounds %BinaryExpression.676580, %BinaryExpression.676580* %.3, i64 0, i32 7
  %.20 = load %Expression.676558*, %Expression.676558** %.19, align 8
  %.21 = getelementptr inbounds %Expression.676558, %Expression.676558* %.20, i64 0, i32 4
  %1 = bitcast %Type.676538** %.21 to i64*
  %.225 = load i64, i64* %1, align 8
  %.23 = trunc i64 %.171 to i32
  %.24 = trunc i64 %.225 to i32
  %.25.not = icmp eq i32 %.23, %.24
  br i1 %.25.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  switch i64 %.11, label %.5.endif [
    i64 10, label %.5.if.if
    i64 11, label %.5.if.else.if
  ]

.5.endif:                                         ; preds = %.5.if, %.5
  %.50 = icmp eq i64 %.11, 18
  %.53 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.54 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.53, align 8
  br i1 %.50, label %.5.endif.if, label %.5.endif.endif

.5.if.if:                                         ; preds = %.5.if
  %.31 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.32 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.31, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.32, i64 0, i32 10
  %.34 = load %LLVMValueRef.676728* (%CodeGen.676780*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, i1)** %.33, align 8
  %.35 = call %LLVMValueRef.676728* %.34(%CodeGen.676780* %.1, i1 false)
  ret %LLVMValueRef.676728* %.35

.5.if.else.if:                                    ; preds = %.5.if
  %.41 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.42 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.41, align 8
  %.43 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.42, i64 0, i32 10
  %.44 = load %LLVMValueRef.676728* (%CodeGen.676780*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, i1)** %.43, align 8
  %.45 = call %LLVMValueRef.676728* %.44(%CodeGen.676780* %.1, i1 true)
  ret %LLVMValueRef.676728* %.45

.5.endif.if:                                      ; preds = %.5.endif
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.54, i64 0, i32 31
  %.56 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)** %.55, align 8
  %.59 = call %LLVMValueRef.676728* %.56(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %BinaryExpression.676580* %.3)
  ret %LLVMValueRef.676728* %.59

.5.endif.endif:                                   ; preds = %.5.endif
  %.64 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.54, i64 0, i32 44
  %.65 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.64, align 8
  %.70 = call %LLVMValueRef.676728* %.65(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.15)
  %lhs = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.70, %LLVMValueRef.676728** %lhs, align 8
  %.74 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.53, align 8
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.74, i64 0, i32 44
  %.76 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.75, align 8
  %.80 = load %Expression.676558*, %Expression.676558** %.19, align 8
  %.81 = call %LLVMValueRef.676728* %.76(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.80)
  %rhs = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.81, %LLVMValueRef.676728** %rhs, align 8
  %.85 = load %Expression.676558*, %Expression.676558** %.19, align 8
  %.86 = call i1 @is_null(%Expression.676558* %.85)
  %.88 = icmp eq i64 %.11, 10
  %.89 = and i1 %.88, %.86
  %.91 = icmp eq i64 %.11, 11
  %.92 = or i1 %.91, %.89
  br i1 %.92, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.94 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.95 = call i1 @LLVMIsConstant(%LLVMValueRef.676728* %.94)
  br i1 %.95, label %.5.endif.endif.if.if, label %.5.endif.endif.if.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.129 = load %Expression.676558*, %Expression.676558** %.14, align 8
  %.130 = getelementptr inbounds %Expression.676558, %Expression.676558* %.129, i64 0, i32 4
  %2 = bitcast %Type.676538** %.130 to i64*
  %.1316 = load i64, i64* %2, align 8
  %lty = alloca %Type.676538*, align 8
  %3 = bitcast %Type.676538** %lty to i64*
  store i64 %.1316, i64* %3, align 8
  %.136 = getelementptr inbounds %Expression.676558, %Expression.676558* %.85, i64 0, i32 4
  %4 = bitcast %Type.676538** %.136 to i64*
  %.1377 = load i64, i64* %4, align 8
  %rty = alloca %Type.676538*, align 8
  %5 = bitcast %Type.676538** %rty to i64*
  store i64 %.1377, i64* %5, align 8
  %.139.cast = inttoptr i64 %.1377 to %Type.676538*
  %.140 = call i1 @is_numeric(%Type.676538* %.139.cast)
  %.142 = icmp eq i64 %.11, 5
  %.143 = and i1 %.142, %.140
  br i1 %.143, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.if.if:                             ; preds = %.5.endif.endif.if
  %.99 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.53, align 8
  %.100 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.99, i64 0, i32 10
  %.101 = load %LLVMValueRef.676728* (%CodeGen.676780*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, i1)** %.100, align 8
  %.105 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.106 = call i1 @LLVMIsNull(%LLVMValueRef.676728* %.105)
  %.112 = call %LLVMValueRef.676728* %.101(%CodeGen.676780* %.1, i1 %.106)
  ret %LLVMValueRef.676728* %.112

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.118 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  br i1 %.88, label %true_block.1, label %false_block.1

true_block.1:                                     ; preds = %.5.endif.endif.if.endif
  %.119 = call %LLVMValueRef.676728* @LLVMBuildIsNull(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.118, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

false_block.1:                                    ; preds = %.5.endif.endif.if.endif
  %.123 = call %LLVMValueRef.676728* @LLVMBuildIsNotNull(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.118, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

end.1:                                            ; preds = %true_block.17, %false_block.17, %true_block.16, %false_block.16, %true_block.15, %false_block.15, %true_block.13, %false_block.13, %true_block.12, %false_block.12, %true_block.11, %false_block.11, %true_block.10, %false_block.10, %true_block.9, %false_block.9, %true_block.8, %false_block.8, %true_block.7, %false_block.7, %true_block.6, %false_block.6, %true_block.5, %false_block.5, %true_block.4, %false_block.4, %true_block.3, %false_block.3, %false_block.1, %true_block.1
  %.125 = phi %LLVMValueRef.676728* [ %.119, %true_block.1 ], [ %.123, %false_block.1 ], [ %.203, %true_block.3 ], [ %.208, %false_block.3 ], [ %.219, %true_block.4 ], [ %.224, %false_block.4 ], [ %.235, %true_block.5 ], [ %.240, %false_block.5 ], [ %.275, %true_block.6 ], [ %.281, %false_block.6 ], [ %.300, %true_block.7 ], [ %.306, %false_block.7 ], [ %.317, %true_block.8 ], [ %.322, %false_block.8 ], [ %.333, %true_block.9 ], [ %.338, %false_block.9 ], [ %.349, %true_block.10 ], [ %.354, %false_block.10 ], [ %.365, %true_block.11 ], [ %.370, %false_block.11 ], [ %.381, %true_block.12 ], [ %.386, %false_block.12 ], [ %.460, %true_block.13 ], [ %.466, %false_block.13 ], [ %.488, %true_block.15 ], [ %.494, %false_block.15 ], [ %.515, %true_block.16 ], [ %.520, %false_block.16 ], [ %.531, %true_block.17 ], [ %.536, %false_block.17 ]
  ret %LLVMValueRef.676728* %.125

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.147 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.53, align 8
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.147, i64 0, i32 32
  %.149 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Type.676538*, %LLVMValueRef.676728*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Type.676538*, %LLVMValueRef.676728*, %LLVMValueRef.676728*)** %.148, align 8
  %.151 = load %Type.676538*, %Type.676538** %rty, align 8
  %.152 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.154 = call %LLVMValueRef.676728* %.149(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Type.676538* %.151, %LLVMValueRef.676728* %.152, %LLVMValueRef.676728* %.81)
  ret %LLVMValueRef.676728* %.154

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif
  %.156 = load %Type.676538*, %Type.676538** %lty, align 8
  %.157 = call i1 @is_pointer(%Type.676538* %.156)
  br i1 %.157, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.160 = icmp eq i64 %.11, 0
  br i1 %.160, label %end.2, label %false_block.2

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif
  %.187 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.188 = call i1 @LLVMIsConstant(%LLVMValueRef.676728* %.187)
  %.189 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.190 = call i1 @LLVMIsConstant(%LLVMValueRef.676728* %.189)
  %.191 = and i1 %.188, %.190
  %.193 = load %Type.676538*, %Type.676538** %rty, align 8
  %.194 = call i1 @is_int(%Type.676538* %.193)
  br i1 %.194, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.else

false_block.2:                                    ; preds = %.5.endif.endif.endif.endif.if
  %.166 = call %LLVMValueRef.676728* @CodeGen_neg_int(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.81)
  br label %end.2

end.2:                                            ; preds = %.5.endif.endif.endif.endif.if, %false_block.2
  %.168 = phi %LLVMValueRef.676728* [ %.166, %false_block.2 ], [ %.81, %.5.endif.endif.endif.endif.if ]
  %indices = alloca [1 x %LLVMValueRef.676728*], align 8
  %.169 = getelementptr inbounds [1 x %LLVMValueRef.676728*], [1 x %LLVMValueRef.676728*]* %indices, i64 0, i64 0
  store %LLVMValueRef.676728* %.168, %LLVMValueRef.676728** %.169, align 8
  %.173 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.53, align 8
  %.174 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.173, i64 0, i32 14
  %.175 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.174, align 8
  %.177 = call %LLVMTypeRef.676727* %.175(%CodeGen.676780* %.1, %Type.676538* %.156, i1 true)
  %.181 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.184 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.177, %LLVMValueRef.676728* %.181, %LLVMValueRef.676728** nonnull %.169, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.184

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  switch i64 %.11, label %.5.endif.endif.endif.endi...else [
    i64 0, label %.5.endif.endif.endif.endif.endif.if.if
    i64 1, label %.5.endif.endif.endif.endif.endif.if.else.if
    i64 2, label %.5.endif.endif.endif.endif.endif.if.else.else.if
    i64 3, label %.5.endif.endif.endif.endif.endif.if.else.else.else.if
    i64 4, label %.5.endif.endif.endif.endi...if
  ]

.5.endif.endif.endif.endif.endif.else:            ; preds = %.5.endif.endif.endif.endif.endif
  %.403 = call i1 @is_float(%Type.676538* %.193)
  br i1 %.403, label %.5.endif.endif.endif.endif.endif.else.if, label %.5.endif.endif.endif.endif.endif.else.else

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.else.else.if, %.5.endif.endif.endif.endif.endif.else.else, %.5.endif.endif.endif.endi...else.2.else.else, %.5.endif.endif.endif.endi...else.else.else
  %.544 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  ret %LLVMValueRef.676728* %.544

.5.endif.endif.endif.endif.endif.if.if:           ; preds = %.5.endif.endif.endif.endif.endif.if
  %.201 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.202 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.3, label %false_block.3

true_block.3:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.if
  %.203 = call %LLVMValueRef.676728* @LLVMConstAdd(%LLVMValueRef.676728* %.201, %LLVMValueRef.676728* %.202)
  br label %end.1

false_block.3:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.if
  %.208 = call %LLVMValueRef.676728* @LLVMBuildAdd(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.201, %LLVMValueRef.676728* %.202, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.if:      ; preds = %.5.endif.endif.endif.endif.endif.if
  %.217 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.218 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.4, label %false_block.4

true_block.4:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.else.if
  %.219 = call %LLVMValueRef.676728* @LLVMConstSub(%LLVMValueRef.676728* %.217, %LLVMValueRef.676728* %.218)
  br label %end.1

false_block.4:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.else.if
  %.224 = call %LLVMValueRef.676728* @LLVMBuildSub(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.217, %LLVMValueRef.676728* %.218, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.if
  %.233 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.234 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.5, label %false_block.5

true_block.5:                                     ; preds = %.5.endif.endif.endif.endif.endif.if.else.else.if
  %.235 = call %LLVMValueRef.676728* @LLVMConstMul(%LLVMValueRef.676728* %.233, %LLVMValueRef.676728* %.234)
  br label %end.1

false_block.5:                                    ; preds = %.5.endif.endif.endif.endif.endif.if.else.else.if
  %.240 = call %LLVMValueRef.676728* @LLVMBuildMul(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.233, %LLVMValueRef.676728* %.234, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.if.else.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.if
  %.248 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.249 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.250 = call %LLVMValueRef.676728* @LLVMBuildSDiv(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.248, %LLVMValueRef.676728* %.249, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.250

.5.endif.endif.endif.endi...if:                   ; preds = %.5.endif.endif.endif.endif.endif.if
  %.256 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.257 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.258 = call %LLVMValueRef.676728* @LLVMBuildSRem(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.256, %LLVMValueRef.676728* %.257, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.258

.5.endif.endif.endif.endi...else:                 ; preds = %.5.endif.endif.endif.endif.endif.if
  %.11.off9 = add i64 %.11, -6
  %6 = icmp ult i64 %.11.off9, 4
  br i1 %6, label %.5.endif.endif.endif.endi...else.if, label %.5.endif.endif.endif.endi...else.else

.5.endif.endif.endif.endi...else.if:              ; preds = %.5.endif.endif.endif.endi...else
  %.268 = add i64 %.11, 32
  %.273 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.274 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.6, label %false_block.6

.5.endif.endif.endif.endi...else.else:            ; preds = %.5.endif.endif.endif.endi...else
  %7 = and i64 %.11, -2
  %8 = icmp eq i64 %7, 10
  br i1 %8, label %.5.endif.endif.endif.endi...else.else.if, label %.5.endif.endif.endif.endi...else.else.else

true_block.6:                                     ; preds = %.5.endif.endif.endif.endi...else.if
  %.275 = call %LLVMValueRef.676728* @LLVMConstICmp(i64 %.268, %LLVMValueRef.676728* %.273, %LLVMValueRef.676728* %.274)
  br label %end.1

false_block.6:                                    ; preds = %.5.endif.endif.endif.endi...else.if
  %.281 = call %LLVMValueRef.676728* @LLVMBuildICmp(%LLVMBuilderRef.676733* %.2, i64 %.268, %LLVMValueRef.676728* %.273, %LLVMValueRef.676728* %.274, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.if:         ; preds = %.5.endif.endif.endif.endi...else.else
  %.293 = add i64 %.11, 22
  %.298 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.299 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.7, label %false_block.7

.5.endif.endif.endif.endi...else.else.else:       ; preds = %.5.endif.endif.endif.endi...else.else
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 12, label %.5.endif.endif.endif.endi...else.else.else.if
    i64 13, label %.5.endif.endif.endif.endi...else.else.else.else.if
    i64 14, label %.5.endif.endif.endif.endi...if.1
    i64 15, label %.5.endif.endif.endif.endi...else.1.if
    i64 16, label %.5.endif.endif.endif.endi...else.1.else.if
  ]

true_block.7:                                     ; preds = %.5.endif.endif.endif.endi...else.else.if
  %.300 = call %LLVMValueRef.676728* @LLVMConstICmp(i64 %.293, %LLVMValueRef.676728* %.298, %LLVMValueRef.676728* %.299)
  br label %end.1

false_block.7:                                    ; preds = %.5.endif.endif.endif.endi...else.else.if
  %.306 = call %LLVMValueRef.676728* @LLVMBuildICmp(%LLVMBuilderRef.676733* %.2, i64 %.293, %LLVMValueRef.676728* %.298, %LLVMValueRef.676728* %.299, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.else.if:    ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.315 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.316 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.8, label %false_block.8

true_block.8:                                     ; preds = %.5.endif.endif.endif.endi...else.else.else.if
  %.317 = call %LLVMValueRef.676728* @LLVMConstShl(%LLVMValueRef.676728* %.315, %LLVMValueRef.676728* %.316)
  br label %end.1

false_block.8:                                    ; preds = %.5.endif.endif.endif.endi...else.else.else.if
  %.322 = call %LLVMValueRef.676728* @LLVMBuildShl(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.315, %LLVMValueRef.676728* %.316, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.else.else.else.if: ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.331 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.332 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.9, label %false_block.9

true_block.9:                                     ; preds = %.5.endif.endif.endif.endi...else.else.else.else.if
  %.333 = call %LLVMValueRef.676728* @LLVMConstAShr(%LLVMValueRef.676728* %.331, %LLVMValueRef.676728* %.332)
  br label %end.1

false_block.9:                                    ; preds = %.5.endif.endif.endif.endi...else.else.else.else.if
  %.338 = call %LLVMValueRef.676728* @LLVMBuildAShr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.331, %LLVMValueRef.676728* %.332, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.347 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.348 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.10, label %false_block.10

true_block.10:                                    ; preds = %.5.endif.endif.endif.endi...if.1
  %.349 = call %LLVMValueRef.676728* @LLVMConstOr(%LLVMValueRef.676728* %.347, %LLVMValueRef.676728* %.348)
  br label %end.1

false_block.10:                                   ; preds = %.5.endif.endif.endif.endi...if.1
  %.354 = call %LLVMValueRef.676728* @LLVMBuildOr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.347, %LLVMValueRef.676728* %.348, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.1.if:            ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.363 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.364 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.11, label %false_block.11

true_block.11:                                    ; preds = %.5.endif.endif.endif.endi...else.1.if
  %.365 = call %LLVMValueRef.676728* @LLVMConstAnd(%LLVMValueRef.676728* %.363, %LLVMValueRef.676728* %.364)
  br label %end.1

false_block.11:                                   ; preds = %.5.endif.endif.endif.endi...else.1.if
  %.370 = call %LLVMValueRef.676728* @LLVMBuildAnd(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.363, %LLVMValueRef.676728* %.364, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.1.else.if:       ; preds = %.5.endif.endif.endif.endi...else.else.else
  %.379 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.380 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.12, label %false_block.12

true_block.12:                                    ; preds = %.5.endif.endif.endif.endi...else.1.else.if
  %.381 = call %LLVMValueRef.676728* @LLVMConstXor(%LLVMValueRef.676728* %.379, %LLVMValueRef.676728* %.380)
  br label %end.1

false_block.12:                                   ; preds = %.5.endif.endif.endif.endi...else.1.else.if
  %.386 = call %LLVMValueRef.676728* @LLVMBuildXor(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.379, %LLVMValueRef.676728* %.380, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.if:         ; preds = %.5.endif.endif.endif.endif.endif.else
  switch i64 %.11, label %.5.endif.endif.endif.endi...else.2.else [
    i64 0, label %.5.endif.endif.endif.endif.endif.else.if.if
    i64 1, label %.5.endif.endif.endif.endif.endif.else.if.else.if
    i64 2, label %.5.endif.endif.endif.endif.endif.else.if.else.else.if
    i64 3, label %.5.endif.endif.endif.endi...if.2
    i64 4, label %.5.endif.endif.endif.endi...else.2.if
  ]

.5.endif.endif.endif.endif.endif.else.else:       ; preds = %.5.endif.endif.endif.endif.endif.else
  %.506 = call i1 @is_bool(%Type.676538* %.193)
  br i1 %.506, label %.5.endif.endif.endif.endif.endif.else.else.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.else.if.if:      ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.409 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.410 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.411 = call %LLVMValueRef.676728* @LLVMBuildFAdd(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.409, %LLVMValueRef.676728* %.410, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.411

.5.endif.endif.endif.endif.endif.else.if.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.417 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.418 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.419 = call %LLVMValueRef.676728* @LLVMBuildFSub(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.417, %LLVMValueRef.676728* %.418, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.419

.5.endif.endif.endif.endif.endif.else.if.else.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.425 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.426 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.427 = call %LLVMValueRef.676728* @LLVMBuildFMul(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.425, %LLVMValueRef.676728* %.426, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.427

.5.endif.endif.endif.endi...if.2:                 ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.433 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.434 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.435 = call %LLVMValueRef.676728* @LLVMBuildFDiv(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.433, %LLVMValueRef.676728* %.434, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.435

.5.endif.endif.endif.endi...else.2.if:            ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.441 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.442 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  %.443 = call %LLVMValueRef.676728* @LLVMBuildFRem(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.441, %LLVMValueRef.676728* %.442, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.443

.5.endif.endif.endif.endi...else.2.else:          ; preds = %.5.endif.endif.endif.endif.endif.else.if
  %.11.off = add i64 %.11, -6
  %9 = icmp ult i64 %.11.off, 4
  br i1 %9, label %.5.endif.endif.endif.endi...else.2.else.if, label %.5.endif.endif.endif.endi...else.2.else.else

.5.endif.endif.endif.endi...else.2.else.if:       ; preds = %.5.endif.endif.endif.endi...else.2.else
  %.453 = add i64 %.11, -4
  %.458 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.459 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.13, label %false_block.13

.5.endif.endif.endif.endi...else.2.else.else:     ; preds = %.5.endif.endif.endif.endi...else.2.else
  %10 = and i64 %.11, -2
  %11 = icmp eq i64 %10, 10
  br i1 %11, label %.5.endif.endif.endif.endi...else.2.else.else.if, label %.5.endif.endif.endif.endif.endif.endif

true_block.13:                                    ; preds = %.5.endif.endif.endif.endi...else.2.else.if
  %.460 = call %LLVMValueRef.676728* @LLVMConstFCmp(i64 %.453, %LLVMValueRef.676728* %.458, %LLVMValueRef.676728* %.459)
  br label %end.1

false_block.13:                                   ; preds = %.5.endif.endif.endif.endi...else.2.else.if
  %.466 = call %LLVMValueRef.676728* @LLVMBuildFCmp(%LLVMBuilderRef.676733* %.2, i64 %.453, %LLVMValueRef.676728* %.458, %LLVMValueRef.676728* %.459, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endi...else.2.else.else.if:  ; preds = %.5.endif.endif.endif.endi...else.2.else.else
  %.486 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.487 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.15, label %false_block.15

true_block.15:                                    ; preds = %.5.endif.endif.endif.endi...else.2.else.else.if
  %.488 = call %LLVMValueRef.676728* @LLVMConstFCmp(i64 1, %LLVMValueRef.676728* %.486, %LLVMValueRef.676728* %.487)
  br label %end.1

false_block.15:                                   ; preds = %.5.endif.endif.endif.endi...else.2.else.else.if
  %.494 = call %LLVMValueRef.676728* @LLVMBuildFCmp(%LLVMBuilderRef.676733* %.2, i64 1, %LLVMValueRef.676728* %.486, %LLVMValueRef.676728* %.487, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.else.if:    ; preds = %.5.endif.endif.endif.endif.endif.else.else
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif.endif [
    i64 15, label %.5.endif.endif.endif.endif.endif.else.else.if.if
    i64 14, label %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  ]

.5.endif.endif.endif.endif.endif.else.else.if.if: ; preds = %.5.endif.endif.endif.endif.endif.else.else.if
  %.513 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.514 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.16, label %false_block.16

true_block.16:                                    ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.if
  %.515 = call %LLVMValueRef.676728* @LLVMConstAnd(%LLVMValueRef.676728* %.513, %LLVMValueRef.676728* %.514)
  br label %end.1

false_block.16:                                   ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.if
  %.520 = call %LLVMValueRef.676728* @LLVMBuildAnd(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.513, %LLVMValueRef.676728* %.514, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1

.5.endif.endif.endif.endif.endif.else.else.if.else.if: ; preds = %.5.endif.endif.endif.endif.endif.else.else.if
  %.529 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %lhs, align 8
  %.530 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %rhs, align 8
  br i1 %.191, label %true_block.17, label %false_block.17

true_block.17:                                    ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  %.531 = call %LLVMValueRef.676728* @LLVMConstOr(%LLVMValueRef.676728* %.529, %LLVMValueRef.676728* %.530)
  br label %end.1

false_block.17:                                   ; preds = %.5.endif.endif.endif.endif.endif.else.else.if.else.if
  %.536 = call %LLVMValueRef.676728* @LLVMBuildOr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.529, %LLVMValueRef.676728* %.530, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end.1
}

define %LLVMValueRef.676728* @CodeGen_codegen_typecast_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %TypeCastExpression.676586* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %TypeCastExpression.676586, %TypeCastExpression.676586* %.3, i64 0, i32 5
  %.11 = load %Expression.676558*, %Expression.676558** %.10, align 8
  %.14 = getelementptr inbounds %TypeCastExpression.676586, %TypeCastExpression.676586* %.3, i64 0, i32 4
  %.15 = load %Type.676538*, %Type.676538** %.14, align 8
  %.18 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.19, i64 0, i32 44
  %.21 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.20, align 8
  %.24 = call %LLVMValueRef.676728* %.21(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.11)
  %.28 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.29 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.28, i64 0, i32 14
  %.30 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.29, align 8
  %.32 = call %LLVMTypeRef.676727* %.30(%CodeGen.676780* %.1, %Type.676538* %.15, i1 true)
  %.35 = call i1 @LLVMIsConstant(%LLVMValueRef.676728* %.24)
  %.38 = call i1 @is_bool(%Type.676538* %.15)
  br i1 %.38, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  br i1 %.35, label %true_block, label %false_block

.5.endif:                                         ; preds = %.5
  %.59 = getelementptr inbounds %Expression.676558, %Expression.676558* %.11, i64 0, i32 4
  %.60 = load %Type.676538*, %Type.676538** %.59, align 8
  %.61 = call i1 @is_int(%Type.676538* %.60)
  %.63 = call i1 @is_float(%Type.676538* %.15)
  %.64 = and i1 %.61, %.63
  br i1 %.64, label %.5.endif.if, label %.5.endif.else

true_block:                                       ; preds = %.5.if
  %.44 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.44, i64 0, i32 10
  %.46 = load %LLVMValueRef.676728* (%CodeGen.676780*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, i1)** %.45, align 8
  %.48 = call i1 @LLVMIsNull(%LLVMValueRef.676728* %.24)
  %.49 = xor i1 %.48, true
  %.50 = call %LLVMValueRef.676728* %.46(%CodeGen.676780* %.1, i1 %.49)
  br label %end

false_block:                                      ; preds = %.5.if
  %.54 = call %LLVMValueRef.676728* @LLVMBuildIsNotNull(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

end:                                              ; preds = %true_block.5, %false_block.5, %true_block.4, %false_block.4, %true_block.3, %false_block.3, %true_block.2, %false_block.2, %true_block.1, %false_block.1, %false_block, %true_block
  %.56 = phi %LLVMValueRef.676728* [ %.50, %true_block ], [ %.54, %false_block ], [ %.70, %true_block.1 ], [ %.75, %false_block.1 ], [ %.91, %true_block.2 ], [ %.96, %false_block.2 ], [ %.112, %true_block.3 ], [ %.117, %false_block.3 ], [ %.133, %true_block.4 ], [ %.138, %false_block.4 ], [ %.149, %true_block.5 ], [ %.154, %false_block.5 ]
  ret %LLVMValueRef.676728* %.56

.5.endif.if:                                      ; preds = %.5.endif
  br i1 %.35, label %true_block.1, label %false_block.1

.5.endif.else:                                    ; preds = %.5.endif
  %.82 = call i1 @is_float(%Type.676538* %.60)
  %.84 = call i1 @is_int(%Type.676538* %.15)
  %.85 = and i1 %.82, %.84
  br i1 %.85, label %.5.endif.else.if, label %.5.endif.else.else

true_block.1:                                     ; preds = %.5.endif.if
  %.70 = call %LLVMValueRef.676728* @LLVMConstSIToFP(%LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32)
  br label %end

false_block.1:                                    ; preds = %.5.endif.if
  %.75 = call %LLVMValueRef.676728* @LLVMBuildSIToFP(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

.5.endif.else.if:                                 ; preds = %.5.endif.else
  br i1 %.35, label %true_block.2, label %false_block.2

.5.endif.else.else:                               ; preds = %.5.endif.else
  %.106 = and i1 %.61, %.84
  br i1 %.106, label %.5.endif.else.else.if, label %.5.endif.else.else.else

true_block.2:                                     ; preds = %.5.endif.else.if
  %.91 = call %LLVMValueRef.676728* @LLVMConstFPToSI(%LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32)
  br label %end

false_block.2:                                    ; preds = %.5.endif.else.if
  %.96 = call %LLVMValueRef.676728* @LLVMBuildFPToSI(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

.5.endif.else.else.if:                            ; preds = %.5.endif.else.else
  br i1 %.35, label %true_block.3, label %false_block.3

.5.endif.else.else.else:                          ; preds = %.5.endif.else.else
  %.127 = and i1 %.63, %.82
  br i1 %.127, label %.5.endif.else.else.else.if, label %.5.endif.else.else.else.endif

true_block.3:                                     ; preds = %.5.endif.else.else.if
  %.112 = call %LLVMValueRef.676728* @LLVMConstIntCast(%LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32, i1 true)
  br label %end

false_block.3:                                    ; preds = %.5.endif.else.else.if
  %.117 = call %LLVMValueRef.676728* @LLVMBuildIntCast2(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32, i1 true, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

.5.endif.else.else.else.if:                       ; preds = %.5.endif.else.else.else
  br i1 %.35, label %true_block.4, label %false_block.4

.5.endif.else.else.else.endif:                    ; preds = %.5.endif.else.else.else
  br i1 %.35, label %true_block.5, label %false_block.5

true_block.4:                                     ; preds = %.5.endif.else.else.else.if
  %.133 = call %LLVMValueRef.676728* @LLVMConstFPCast(%LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32)
  br label %end

false_block.4:                                    ; preds = %.5.endif.else.else.else.if
  %.138 = call %LLVMValueRef.676728* @LLVMBuildFPCast(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

true_block.5:                                     ; preds = %.5.endif.else.else.else.endif
  %.149 = call %LLVMValueRef.676728* @LLVMConstBitCast(%LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32)
  br label %end

false_block.5:                                    ; preds = %.5.endif.else.else.else.endif
  %.154 = call %LLVMValueRef.676728* @LLVMBuildBitCast(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, %LLVMTypeRef.676727* %.32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end
}

define %LLVMValueRef.676728* @CodeGen_codegen_unary_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %UnaryExpression.676582* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %UnaryExpression.676582, %UnaryExpression.676582* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.14 = getelementptr inbounds %UnaryExpression.676582, %UnaryExpression.676582* %.3, i64 0, i32 6
  %.15 = load %Expression.676558*, %Expression.676558** %.14, align 8
  %.18 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.19 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.20 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.19, i64 0, i32 44
  %.21 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.20, align 8
  %.24 = call %LLVMValueRef.676728* %.21(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.15)
  switch i64 %.11, label %end [
    i64 4, label %.5.if
    i64 5, label %.5.endif.if
    i64 6, label %.5.endif.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.if
    i64 1, label %.5.endif.endif.if
    i64 0, label %.5.endif.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.30 = getelementptr inbounds %Expression.676558, %Expression.676558* %.15, i64 0, i32 4
  %.31 = load %Type.676538*, %Type.676538** %.30, align 8
  %.32 = call i1 @is_int(%Type.676538* %.31)
  br i1 %.32, label %.5.if.if, label %.5.if.else

.5.if.if:                                         ; preds = %.5.if
  %.36 = call %LLVMValueRef.676728* @CodeGen_neg_int(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24)
  ret %LLVMValueRef.676728* %.36

.5.if.else:                                       ; preds = %.5.if
  %.41 = call i1 @is_float(%Type.676538* %.31)
  br i1 %.41, label %.5.if.else.if, label %.5.if.else.endif

.5.if.else.if:                                    ; preds = %.5.if.else
  %.45 = call %LLVMValueRef.676728* @LLVMBuildFNeg(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.45

.5.if.else.endif:                                 ; preds = %.5.if.else
  switch i64 %.11, label %end [
    i64 5, label %.5.endif.if
    i64 6, label %.5.endif.endif.if
    i64 3, label %.5.endif.endif.if
    i64 2, label %.5.endif.endif.if
    i64 1, label %.5.endif.endif.if
    i64 0, label %.5.endif.endif.if
  ]

.5.endif.if:                                      ; preds = %.5, %.5.if.else.endif
  %.53 = call i1 @LLVMIsConstant(%LLVMValueRef.676728* %.24)
  br i1 %.53, label %true_block, label %false_block

true_block:                                       ; preds = %.5.endif.if
  %.56 = call %LLVMValueRef.676728* @LLVMConstNot(%LLVMValueRef.676728* %.24)
  br label %end

false_block:                                      ; preds = %.5.endif.if
  %.60 = call %LLVMValueRef.676728* @LLVMBuildNot(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %end

end:                                              ; preds = %.5.endif.endif.if, %.5, %.5.if.else.endif, %end.1.endif, %false_block, %true_block
  %.62 = phi %LLVMValueRef.676728* [ %.56, %true_block ], [ %.60, %false_block ], [ %.171, %end.1.endif ], [ %.24, %.5.if.else.endif ], [ %.24, %.5 ], [ %.80, %.5.endif.endif.if ]
  ret %LLVMValueRef.676728* %.62

.5.endif.endif.if:                                ; preds = %.5, %.5, %.5, %.5, %.5, %.5.if.else.endif, %.5.if.else.endif, %.5.if.else.endif, %.5.if.else.endif, %.5.if.else.endif
  %.75 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.76 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.75, i64 0, i32 29
  %.77 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.76, align 8
  %.80 = call %LLVMValueRef.676728* %.77(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.15)
  %.83 = icmp eq i64 %.11, 6
  br i1 %.83, label %end, label %.5.endif.endif.if.endif

.5.endif.endif.if.endif:                          ; preds = %.5.endif.endif.if
  %.89 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.89, i64 0, i32 14
  %.91 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.90, align 8
  %.93 = getelementptr inbounds %Expression.676558, %Expression.676558* %.15, i64 0, i32 4
  %.94 = load %Type.676538*, %Type.676538** %.93, align 8
  %.95 = call %LLVMTypeRef.676727* %.91(%CodeGen.676780* %.1, %Type.676538* %.94, i1 true)
  %0 = and i64 %.11, -3
  %1 = icmp eq i64 %0, 0
  %. = select i1 %1, i64 1, i64 -1
  %new_value = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* null, %LLVMValueRef.676728** %new_value, align 8
  %.111 = load %Type.676538*, %Type.676538** %.93, align 8
  %.112 = call i1 @is_pointer(%Type.676538* %.111)
  br i1 %.112, label %end.1.if, label %end.1.else

end.1.if:                                         ; preds = %.5.endif.endif.if.endif
  %.116 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.18, align 8
  %.117 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.116, i64 0, i32 11
  %.118 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.117, align 8
  %.120 = call %LLVMValueRef.676728* %.118(%CodeGen.676780* %.1, i64 %.)
  %indices = alloca [1 x %LLVMValueRef.676728*], align 8
  %.121 = getelementptr inbounds [1 x %LLVMValueRef.676728*], [1 x %LLVMValueRef.676728*]* %indices, i64 0, i64 0
  store %LLVMValueRef.676728* %.120, %LLVMValueRef.676728** %.121, align 8
  %.128 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.95, %LLVMValueRef.676728* %.24, %LLVMValueRef.676728** nonnull %.121, i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.403, i64 0, i64 0))
  store %LLVMValueRef.676728* %.128, %LLVMValueRef.676728** %new_value, align 8
  br label %end.1.endif

end.1.else:                                       ; preds = %.5.endif.endif.if.endif
  %.134 = call i1 @is_numeric(%Type.676538* %.111)
  br i1 %.134, label %end.1.else.if, label %end.1.endif

end.1.endif:                                      ; preds = %end.1.else, %end.2, %end.1.if
  %.161 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %new_value, align 8
  %.163 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.161, %LLVMValueRef.676728* %.80)
  %.165 = icmp sgt i64 %.11, 0
  %.171 = select i1 %.165, %LLVMValueRef.676728* %.24, %LLVMValueRef.676728* %.161
  br label %end

end.1.else.if:                                    ; preds = %end.1.else
  %.139 = call i1 @is_int(%Type.676538* %.111)
  br i1 %.139, label %true_block.2, label %false_block.2

true_block.2:                                     ; preds = %end.1.else.if
  %.143 = call %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727* %.95, i64 %., i1 false)
  br label %end.2

false_block.2:                                    ; preds = %end.1.else.if
  %.147 = sitofp i64 %. to double
  %.149 = call %LLVMValueRef.676728* @LLVMConstReal(%LLVMTypeRef.676727* %.95, double %.147)
  br label %end.2

end.2:                                            ; preds = %false_block.2, %true_block.2
  %.151 = phi %LLVMValueRef.676728* [ %.143, %true_block.2 ], [ %.149, %false_block.2 ]
  %.156 = call %LLVMValueRef.676728* @LLVMBuildAdd(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.24, %LLVMValueRef.676728* %.151, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  store %LLVMValueRef.676728* %.156, %LLVMValueRef.676728** %new_value, align 8
  br label %end.1.endif
}

define %LLVMValueRef.676728* @CodeGen_codegen_var_access_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %VarAccessExpression.676608* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 2
  %.13 = load %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)** %.12, align 8
  %.15 = getelementptr inbounds %VarAccessExpression.676608, %VarAccessExpression.676608* %.3, i64 0, i32 5
  %.16 = load %VarId.676596*, %VarId.676596** %.15, align 8
  %.17 = call %LLVMValueRef.676728* %.13(%CodeGen.676780* %.1, %VarId.676596* %.16)
  %.21 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.22 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.21, i64 0, i32 14
  %.23 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.22, align 8
  %.25 = getelementptr inbounds %VarAccessExpression.676608, %VarAccessExpression.676608* %.3, i64 0, i32 4
  %.26 = load %Type.676538*, %Type.676538** %.25, align 8
  %.27 = call %LLVMTypeRef.676727* %.23(%CodeGen.676780* %.1, %Type.676538* %.26, i1 true)
  %0 = ptrtoint %LLVMValueRef.676728* %.17 to i64
  %.30 = trunc i64 %0 to i32
  %.32 = icmp eq i32 %.30, 0
  br i1 %.32, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.34 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.35 = bitcast i8* %.34 to %string.676378*
  %.35.repack = bitcast i8* %.34 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.35.repack, align 8
  %.35.repack1 = getelementptr inbounds i8, i8* %.34, i64 8
  %1 = bitcast i8* %.35.repack1 to i8**
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str.404, i64 0, i64 0), i8** %1, align 8
  %.35.repack2 = getelementptr inbounds i8, i8* %.34, i64 16
  %2 = bitcast i8* %.35.repack2 to i64*
  store i64 50, i64* %2, align 8
  %.35.repack3 = getelementptr inbounds i8, i8* %.34, i64 24
  %3 = bitcast i8* %.35.repack3 to i64*
  store i64 50, i64* %3, align 8
  call void @println(%string.676378* %.35)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.41 = load %VarId.676596*, %VarId.676596** %.15, align 8
  %.42 = getelementptr inbounds %VarId.676596, %VarId.676596* %.41, i64 0, i32 1
  %.43 = load i64, i64* %.42, align 8
  %.44 = icmp eq i64 %.43, 0
  br i1 %.44, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  ret %LLVMValueRef.676728* %.17

.5.endif.endif:                                   ; preds = %.5.endif
  %.49 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 12
  %.50 = load i1, i1* %.49, align 1
  br i1 %.50, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.53 = call %LLVMValueRef.676728* @LLVMGetInitializer(%LLVMValueRef.676728* %.17)
  ret %LLVMValueRef.676728* %.53

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.58 = call %LLVMValueRef.676728* @LLVMBuildLoad2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.27, %LLVMValueRef.676728* %.17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.58
}

define %LLVMValueRef.676728* @CodeGen_codegen_null(%CodeGen.676780* %.1, %NullExpression.676576* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.9, i64 0, i32 14
  %.11 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.10, align 8
  %.13 = getelementptr inbounds %NullExpression.676576, %NullExpression.676576* %.2, i64 0, i32 4
  %.14 = load %Type.676538*, %Type.676538** %.13, align 8
  %.15 = call %LLVMTypeRef.676727* %.11(%CodeGen.676780* %.1, %Type.676538* %.14, i1 true)
  %.16 = call %LLVMValueRef.676728* @LLVMConstNull(%LLVMTypeRef.676727* %.15)
  ret %LLVMValueRef.676728* %.16
}

define %LLVMValueRef.676728* @CodeGen_codegen_ternary_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %TernaryExpression.676584* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 8
  %.14 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.15 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.11, %LLVMValueRef.676728* %.14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.405, i64 0, i64 0))
  %.19 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.22 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.23 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.19, %LLVMValueRef.676728* %.22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.406, i64 0, i64 0))
  %.27 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.30 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.31 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.27, %LLVMValueRef.676728* %.30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.407, i64 0, i64 0))
  %.34 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.35 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.34, align 8
  %.36 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.35, i64 0, i32 44
  %.37 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.36, align 8
  %.40 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.3, i64 0, i32 5
  %.41 = load %Expression.676558*, %Expression.676558** %.40, align 8
  %.42 = call %LLVMValueRef.676728* %.37(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.41)
  %.48 = call %LLVMValueRef.676728* @LLVMBuildCondBr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.42, %LLVMBasicBlockRef.676729* %.15, %LLVMBasicBlockRef.676729* %.23)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.15)
  %.54 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.34, align 8
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.54, i64 0, i32 44
  %.56 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.55, align 8
  %.59 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.3, i64 0, i32 6
  %.60 = load %Expression.676558*, %Expression.676558** %.59, align 8
  %.61 = call %LLVMValueRef.676728* %.56(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.60)
  %.65 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.31)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.23)
  %.71 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.34, align 8
  %.72 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.71, i64 0, i32 44
  %.73 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.72, align 8
  %.76 = getelementptr inbounds %TernaryExpression.676584, %TernaryExpression.676584* %.3, i64 0, i32 7
  %.77 = load %Expression.676558*, %Expression.676558** %.76, align 8
  %.78 = call %LLVMValueRef.676728* %.73(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.77)
  %.82 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.31)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.31)
  %.89 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.34, align 8
  %.90 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.89, i64 0, i32 14
  %.91 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.90, align 8
  %.94 = load %Expression.676558*, %Expression.676558** %.59, align 8
  %.95 = getelementptr inbounds %Expression.676558, %Expression.676558* %.94, i64 0, i32 4
  %.96 = load %Type.676538*, %Type.676538** %.95, align 8
  %.97 = call %LLVMTypeRef.676727* %.91(%CodeGen.676780* %.1, %Type.676538* %.96, i1 true)
  %.98 = call %LLVMValueRef.676728* @LLVMBuildPhi(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.408, i64 0, i64 0))
  %incomming_vals = alloca [2 x %LLVMValueRef.676728*], align 8
  %.102 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %incomming_vals, i64 0, i64 0
  store %LLVMValueRef.676728* %.61, %LLVMValueRef.676728** %.102, align 8
  %.104 = getelementptr inbounds [2 x %LLVMValueRef.676728*], [2 x %LLVMValueRef.676728*]* %incomming_vals, i64 0, i64 1
  store %LLVMValueRef.676728* %.78, %LLVMValueRef.676728** %.104, align 8
  %blocks = alloca [2 x %LLVMBasicBlockRef.676729*], align 8
  %.108 = getelementptr inbounds [2 x %LLVMBasicBlockRef.676729*], [2 x %LLVMBasicBlockRef.676729*]* %blocks, i64 0, i64 0
  store %LLVMBasicBlockRef.676729* %.15, %LLVMBasicBlockRef.676729** %.108, align 8
  %.110 = getelementptr inbounds [2 x %LLVMBasicBlockRef.676729*], [2 x %LLVMBasicBlockRef.676729*]* %blocks, i64 0, i64 1
  store %LLVMBasicBlockRef.676729* %.23, %LLVMBasicBlockRef.676729** %.110, align 8
  call void @LLVMAddIncoming(%LLVMValueRef.676728* %.98, %LLVMValueRef.676728** nonnull %.102, %LLVMBasicBlockRef.676729** nonnull %.108, i64 2)
  ret %LLVMValueRef.676728* %.98
}

define %LLVMValueRef.676728* @CodeGen_codegen_call_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %CallExpression.676592* nocapture readonly %.3) {
.5:
  %.10 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Array<LLVMValueRef>.676778"*
  %.14 = bitcast i8* %.12 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.25 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.26 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.27 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.26, i64 0, i32 14
  %.28 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.27, align 8
  %.30 = getelementptr inbounds %CallExpression.676592, %CallExpression.676592* %.3, i64 0, i32 5
  %.31 = load %Expression.676558*, %Expression.676558** %.30, align 8
  %.32 = getelementptr inbounds %Expression.676558, %Expression.676558* %.31, i64 0, i32 4
  %.33 = load %Type.676538*, %Type.676538** %.32, align 8
  %.34 = call %LLVMTypeRef.676727* %.28(%CodeGen.676780* %.1, %Type.676538* %.33, i1 false)
  %.38 = load %Expression.676558*, %Expression.676558** %.30, align 8
  %.39 = getelementptr inbounds %Expression.676558, %Expression.676558* %.38, i64 0, i32 3
  %.40 = load i64, i64* %.39, align 8
  %.41 = icmp eq i64 %.40, 12
  br i1 %.41, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %3 = bitcast %Expression.676558** %.30 to i64*
  %.4512 = load i64, i64* %3, align 8
  %member_exp = alloca %MemberExpression.676606*, align 8
  %4 = bitcast %MemberExpression.676606** %member_exp to i64*
  store i64 %.4512, i64* %4, align 8
  %.48.cast = inttoptr i64 %.4512 to %MemberExpression.676606*
  %.49 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.48.cast, i64 0, i32 5
  %.50 = load %Expression.676558*, %Expression.676558** %.49, align 8
  %.51 = getelementptr inbounds %Expression.676558, %Expression.676558* %.50, i64 0, i32 4
  %.52 = load %Type.676538*, %Type.676538** %.51, align 8
  %.53 = getelementptr inbounds %Type.676538, %Type.676538* %.52, i64 0, i32 1
  %.54 = load i64, i64* %.53, align 8
  %.55 = icmp eq i64 %.54, 13
  br i1 %.55, label %.5.if.if, label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5.if.if, %.5
  %func.0 = phi %LLVMValueRef.676728* [ null, %.5 ], [ %.88, %.5.if.if ], [ null, %.5.if ]
  %.101 = load i64, i64* %1, align 8
  %.102 = icmp eq i64 %.101, 0
  br i1 %.102, label %.5.endif.if, label %for.entry

.5.if.if:                                         ; preds = %.5.if
  %.59 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.60 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.59, i64 0, i32 3
  %.61 = load %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)** %.60, align 8
  %.62 = load %MemberExpression.676606*, %MemberExpression.676606** %member_exp, align 8
  %.63 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.62, i64 0, i32 6
  %.64 = load %PropId.676604*, %PropId.676604** %.63, align 8
  %.65 = getelementptr inbounds %PropId.676604, %PropId.676604* %.64, i64 0, i32 2
  %.66 = load %TypeId.676552*, %TypeId.676552** %.65, align 8
  %.67 = call %CGClassType.676760* %.61(%CodeGen.676780* %.1, %TypeId.676552* %.66)
  %.71 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.72 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.71, i64 0, i32 44
  %.73 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.72, align 8
  %.76 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.62, i64 0, i32 5
  %.77 = load %Expression.676558*, %Expression.676558** %.76, align 8
  %.78 = call %LLVMValueRef.676728* %.73(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.77)
  %.82 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.83 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.82, i64 0, i32 42
  %.84 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)** %.83, align 8
  %.88 = call %LLVMValueRef.676728* %.84(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %MemberExpression.676606* %.62, %LLVMValueRef.676728* %.78)
  %.93 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.14, align 8
  %.94 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.93, i64 0, i32 2
  %.95 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.94, align 8
  call void %.95(%"Array<LLVMValueRef>.676778"* %.13, %LLVMValueRef.676728* %.78)
  br label %.5.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.106 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.107 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.106, i64 0, i32 44
  %.108 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.107, align 8
  %.112 = load %Expression.676558*, %Expression.676558** %.30, align 8
  %.113 = call %LLVMValueRef.676728* %.108(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.112)
  br label %for.entry

for.entry:                                        ; preds = %.5.endif, %.5.endif.if
  %func.2 = phi %LLVMValueRef.676728* [ %.113, %.5.endif.if ], [ %func.0, %.5.endif ]
  %.121 = getelementptr inbounds %CallExpression.676592, %CallExpression.676592* %.3, i64 0, i32 6
  %.1223 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.121, align 8
  %.1234 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1223, i64 0, i32 2
  %.1245 = load i64, i64* %.1234, align 8
  %.1256 = icmp sgt i64 %.1245, 0
  br i1 %.1256, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %.1228 = phi %"Array<Expression>.676574"* [ %.122, %for.body ], [ %.1223, %for.entry ]
  %storemerge7 = phi i64 [ %.153, %for.body ], [ 0, %for.entry ]
  %.130 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.25, align 8
  %.131 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.130, i64 0, i32 44
  %.132 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.131, align 8
  %.138 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.1228, i64 0, i32 0
  %.139 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.138, align 8
  %.140 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.139, i64 0, i32 5
  %.141 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.140, align 8
  %.142 = call %Expression.676558* %.141(%"Array<Expression>.676574"* %.1228, i64 %storemerge7)
  %.143 = call %LLVMValueRef.676728* %.132(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.142)
  %.145 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.14, align 8
  %.146 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.145, i64 0, i32 2
  %.147 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.146, align 8
  call void %.147(%"Array<LLVMValueRef>.676778"* %.13, %LLVMValueRef.676728* %.143)
  %.153 = add nuw nsw i64 %storemerge7, 1
  %.122 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.121, align 8
  %.123 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.122, i64 0, i32 2
  %.124 = load i64, i64* %.123, align 8
  %.125 = icmp slt i64 %.153, %.124
  br i1 %.125, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %5 = bitcast i8* %.16 to %LLVMValueRef.676728***
  %.161 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %5, align 8
  %.164 = load i64, i64* %1, align 8
  %.165 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.34, %LLVMValueRef.676728* %func.2, %LLVMValueRef.676728** %.161, i64 %.164, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.165
}

define %LLVMValueRef.676728* @CodeGen_codegen_index_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IndexExpression.676590* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 29
  %.13 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.12, align 8
  %.16 = bitcast %IndexExpression.676590* %.3 to %Expression.676558*
  %.17 = call %LLVMValueRef.676728* %.13(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.16)
  %.22 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.22, i64 0, i32 14
  %.24 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.23, align 8
  %.26 = getelementptr inbounds %IndexExpression.676590, %IndexExpression.676590* %.3, i64 0, i32 4
  %.27 = load %Type.676538*, %Type.676538** %.26, align 8
  %.28 = call %LLVMTypeRef.676727* %.24(%CodeGen.676780* %.1, %Type.676538* %.27, i1 true)
  %.30 = call %LLVMValueRef.676728* @LLVMBuildLoad2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.28, %LLVMValueRef.676728* %.17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.30
}

define %LLVMValueRef.676728* @CodeGen_codegen_new_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %NewExpression.676588* nocapture readonly %.3) {
.5:
  %.11 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.3, i64 0, i32 7
  %.12 = load %Type.676538*, %Type.676538** %.11, align 8
  %.15 = call i1 @is_pointer(%Type.676538* %.12)
  %.19 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.21 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.22 = bitcast i8* %.21 to %"Array<LLVMValueRef>.676778"*
  %.23 = bitcast i8* %.21 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.23, align 8
  %.25 = getelementptr inbounds i8, i8* %.21, i64 8
  %0 = bitcast i8* %.25 to i8**
  store i8* %.19, i8** %0, align 8
  %.27 = getelementptr inbounds i8, i8* %.21, i64 16
  %1 = bitcast i8* %.27 to i64*
  store i64 0, i64* %1, align 8
  %.29 = getelementptr inbounds i8, i8* %.21, i64 24
  %2 = bitcast i8* %.29 to i64*
  store i64 8, i64* %2, align 8
  br i1 %.15, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.35 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.36 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.35, align 8
  %.37 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.36, i64 0, i32 14
  %.38 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.37, align 8
  %.41 = getelementptr inbounds %Type.676538, %Type.676538* %.12, i64 1
  %3 = bitcast %Type.676538* %.41 to %Type.676538**
  %.42 = load %Type.676538*, %Type.676538** %3, align 8
  %.43 = call %LLVMTypeRef.676727* %.38(%CodeGen.676780* %.1, %Type.676538* %.42, i1 false)
  %.47 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.35, align 8
  %.48 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.47, i64 0, i32 48
  %.49 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)** %.48, align 8
  %.53 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.3, i64 0, i32 5
  %.54 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.53, align 8
  call void %.49(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.22, %"Array<Expression>.676574"* %.54)
  %.57 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.3, i64 0, i32 6
  %.58 = load i1, i1* %.57, align 1
  %.64 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.23, align 8
  %.65 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.64, i64 0, i32 5
  %.66 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.65, align 8
  %.67 = call %LLVMValueRef.676728* %.66(%"Array<LLVMValueRef>.676778"* %.22, i64 0)
  br i1 %.58, label %.5.if.if, label %.5.if.else

.5.else:                                          ; preds = %.5
  %.84 = call i1 @is_object(%Type.676538* %.12)
  br i1 %.84, label %.5.else.if, label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.else.if.endif, %.5.if.if, %.5.if.else
  %ptr.0 = phi %LLVMValueRef.676728* [ %.68, %.5.if.if ], [ %.79, %.5.if.else ], [ %ptr.3, %.5.else.if.endif ], [ null, %.5.else ]
  ret %LLVMValueRef.676728* %ptr.0

.5.if.if:                                         ; preds = %.5.if
  %.68 = call %LLVMValueRef.676728* @LLVMBuildArrayMalloc(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.43, %LLVMValueRef.676728* %.67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %.5.endif

.5.if.else:                                       ; preds = %.5.if
  %.79 = call %LLVMValueRef.676728* @LLVMBuildArrayAlloca(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.43, %LLVMValueRef.676728* %.67, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %.5.endif

.5.else.if:                                       ; preds = %.5.else
  %.87 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.88 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.87, align 8
  %.89 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.88, i64 0, i32 14
  %.90 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.89, align 8
  %.92 = call %LLVMTypeRef.676727* %.90(%CodeGen.676780* %.1, %Type.676538* %.12, i1 false)
  %.95 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.3, i64 0, i32 6
  %.96 = load i1, i1* %.95, align 1
  br i1 %.96, label %.5.else.if.if, label %.5.else.if.else

.5.else.if.if:                                    ; preds = %.5.else.if
  %.100 = call %LLVMValueRef.676728* @LLVMBuildMalloc(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.92, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %.5.else.if.endif

.5.else.if.else:                                  ; preds = %.5.else.if
  %.105 = call %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.92, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %.5.else.if.endif

.5.else.if.endif:                                 ; preds = %.5.else.if.else, %.5.else.if.if
  %ptr.3 = phi %LLVMValueRef.676728* [ %.100, %.5.else.if.if ], [ %.105, %.5.else.if.else ]
  %.111 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.23, align 8
  %.112 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.111, i64 0, i32 2
  %.113 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.112, align 8
  call void %.113(%"Array<LLVMValueRef>.676778"* %.22, %LLVMValueRef.676728* %ptr.3)
  %.117 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.87, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.117, i64 0, i32 48
  %.119 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)** %.118, align 8
  %.123 = getelementptr inbounds %NewExpression.676588, %NewExpression.676588* %.3, i64 0, i32 5
  %.124 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.123, align 8
  call void %.119(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.22, %"Array<Expression>.676574"* %.124)
  %.128 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.87, align 8
  %.129 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.128, i64 0, i32 49
  %.130 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ObjectType.676562*, %"Array<LLVMValueRef>.676778"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ObjectType.676562*, %"Array<LLVMValueRef>.676778"*)** %.129, align 8
  %.133 = bitcast %Type.676538* %.12 to %ObjectType.676562*
  call void %.130(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ObjectType.676562* %.133, %"Array<LLVMValueRef>.676778"* %.22)
  br label %.5.endif
}

define %LLVMValueRef.676728* @CodeGen_codegen_member_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %MemberExpression.676606* %.3, %LLVMValueRef.676728* %.4) {
.6:
  %.12 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 5
  %.13 = load %Expression.676558*, %Expression.676558** %.12, align 8
  %.14 = getelementptr inbounds %Expression.676558, %Expression.676558* %.13, i64 0, i32 4
  %.15 = load %Type.676538*, %Type.676538** %.14, align 8
  %.16 = getelementptr inbounds %Type.676538, %Type.676538* %.15, i64 0, i32 1
  %.17 = load i64, i64* %.16, align 8
  %.23 = getelementptr inbounds %Expression.676558, %Expression.676558* %.13, i64 1
  %0 = bitcast %Expression.676558* %.23 to %VarId.676596**
  %.24 = load %VarId.676596*, %VarId.676596** %0, align 8
  %.27 = icmp eq i64 %.17, 13
  br i1 %.27, label %.6.if, label %.6.endif

.6.if:                                            ; preds = %.6
  %.30 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.31, i64 0, i32 28
  %.33 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)** %.32, align 8
  %.37 = call %LLVMValueRef.676728* %.33(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %MemberExpression.676606* %.3, %LLVMValueRef.676728* %.4)
  %.40 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.41 = load %Program.676712*, %Program.676712** %.40, align 8
  %.43 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 6
  %.44 = load %PropId.676604*, %PropId.676604** %.43, align 8
  %.45 = call i64 @get_class_prop_visibility(%Program.676712* %.41, %PropId.676604* %.44)
  %.46 = icmp eq i64 %.45, 0
  %.48 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 4
  %.49 = load %Type.676538*, %Type.676538** %.48, align 8
  %.50 = getelementptr inbounds %Type.676538, %Type.676538* %.49, i64 0, i32 1
  %.51 = load i64, i64* %.50, align 8
  %.52 = icmp eq i64 %.51, 17
  %.53 = and i1 %.46, %.52
  br i1 %.53, label %.6.if.if, label %.6.if.endif

.6.endif:                                         ; preds = %.6
  %.71 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 6
  %.72 = load %PropId.676604*, %PropId.676604** %.71, align 8
  %.73 = call %string.676378* @create_prop_key(%PropId.676604* %.72)
  %.76 = getelementptr inbounds %VarId.676596, %VarId.676596* %.24, i64 0, i32 1
  %.77 = load i64, i64* %.76, align 8
  switch i64 %.77, label %.6.if.if [
    i64 3, label %.6.endif.if
    i64 4, label %.6.endif.endif.if
  ]

.6.if.if:                                         ; preds = %.6.endif, %.6.endif.if.endif.endif, %.6.if
  %merge = phi %LLVMValueRef.676728* [ %.37, %.6.if ], [ %.106, %.6.endif.if.endif.endif ], [ null, %.6.endif ]
  ret %LLVMValueRef.676728* %merge

.6.if.endif:                                      ; preds = %.6.if
  %.60 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.30, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.60, i64 0, i32 14
  %.62 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.61, align 8
  %.66 = call %LLVMTypeRef.676727* %.62(%CodeGen.676780* %.1, %Type.676538* %.49, i1 true)
  %.68 = call %LLVMValueRef.676728* @LLVMBuildLoad2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.66, %LLVMValueRef.676728* %.37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.68

.6.endif.if:                                      ; preds = %.6.endif
  %.81 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.82 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.81, align 8
  %.83 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.82, i64 0, i32 5
  %.84 = load %CGClassType.676760* (%CodeGen.676780*, %VarId.676596*)*, %CGClassType.676760* (%CodeGen.676780*, %VarId.676596*)** %.83, align 8
  %.86 = call %CGClassType.676760* %.84(%CodeGen.676780* %.1, %VarId.676596* %.24)
  %1 = ptrtoint %CGClassType.676760* %.86 to i64
  %.89 = trunc i64 %1 to i32
  %.91 = icmp eq i32 %.89, 0
  br i1 %.91, label %.6.endif.if.if, label %.6.endif.if.endif

.6.endif.if.if:                                   ; preds = %.6.endif.if
  %.93 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.94 = bitcast i8* %.93 to %string.676378*
  %.94.repack = bitcast i8* %.93 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.94.repack, align 8
  %.94.repack8 = getelementptr inbounds i8, i8* %.93, i64 8
  %2 = bitcast i8* %.94.repack8 to i8**
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @str.409, i64 0, i64 0), i8** %2, align 8
  %.94.repack9 = getelementptr inbounds i8, i8* %.93, i64 16
  %3 = bitcast i8* %.94.repack9 to i64*
  store i64 51, i64* %3, align 8
  %.94.repack10 = getelementptr inbounds i8, i8* %.93, i64 24
  %4 = bitcast i8* %.94.repack10 to i64*
  store i64 51, i64* %4, align 8
  call void @println(%string.676378* %.94)
  br label %.6.endif.if.endif

.6.endif.if.endif:                                ; preds = %.6.endif.if.if, %.6.endif.if
  %.99 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.86, i64 0, i32 4
  %.100 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.99, align 8
  %.101 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.100, i64 0, i32 0
  %.102 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.101, align 8
  %.103 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.102, i64 0, i32 3
  %.104 = load %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.103, align 8
  %.106 = call %LLVMValueRef.676728* %.104(%"Map<string, LLVMValueRef>.676763"* %.100, %string.676378* %.73)
  %5 = ptrtoint %LLVMValueRef.676728* %.106 to i64
  %.109 = trunc i64 %5 to i32
  %.111 = icmp eq i32 %.109, 0
  br i1 %.111, label %.6.endif.if.endif.if, label %.6.endif.if.endif.endif

.6.endif.if.endif.if:                             ; preds = %.6.endif.if.endif
  %.113 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.114 = bitcast i8* %.113 to %string.676378*
  %.114.repack = bitcast i8* %.113 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.114.repack, align 8
  %.114.repack5 = getelementptr inbounds i8, i8* %.113, i64 8
  %6 = bitcast i8* %.114.repack5 to i8**
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @str.410, i64 0, i64 0), i8** %6, align 8
  %.114.repack6 = getelementptr inbounds i8, i8* %.113, i64 16
  %7 = bitcast i8* %.114.repack6 to i64*
  store i64 59, i64* %7, align 8
  %.114.repack7 = getelementptr inbounds i8, i8* %.113, i64 24
  %8 = bitcast i8* %.114.repack7 to i64*
  store i64 59, i64* %8, align 8
  call void @println(%string.676378* %.114)
  br label %.6.endif.if.endif.endif

.6.endif.if.endif.endif:                          ; preds = %.6.endif.if.endif.if, %.6.endif.if.endif
  %.119 = getelementptr inbounds %MemberExpression.676606, %MemberExpression.676606* %.3, i64 0, i32 4
  %.120 = load %Type.676538*, %Type.676538** %.119, align 8
  %.121 = getelementptr inbounds %Type.676538, %Type.676538* %.120, i64 0, i32 1
  %.122 = load i64, i64* %.121, align 8
  %.123 = icmp eq i64 %.122, 17
  br i1 %.123, label %.6.if.if, label %.6.endif.if.endif.endif.endif

.6.endif.if.endif.endif.endif:                    ; preds = %.6.endif.if.endif.endif
  %.130 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.81, align 8
  %.131 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.130, i64 0, i32 14
  %.132 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.131, align 8
  %.136 = call %LLVMTypeRef.676727* %.132(%CodeGen.676780* %.1, %Type.676538* %.120, i1 true)
  %.138 = call %LLVMValueRef.676728* @LLVMBuildLoad2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.136, %LLVMValueRef.676728* %.106, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  ret %LLVMValueRef.676728* %.138

.6.endif.endif.if:                                ; preds = %.6.endif
  %.146 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.147 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.146, align 8
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.147, i64 0, i32 6
  %.149 = load %CGEnumType.676774* (%CodeGen.676780*, %VarId.676596*)*, %CGEnumType.676774* (%CodeGen.676780*, %VarId.676596*)** %.148, align 8
  %.151 = call %CGEnumType.676774* %.149(%CodeGen.676780* %.1, %VarId.676596* %.24)
  %9 = ptrtoint %CGEnumType.676774* %.151 to i64
  %.154 = trunc i64 %9 to i32
  %.156 = icmp eq i32 %.154, 0
  br i1 %.156, label %.6.endif.endif.if.if, label %.6.endif.endif.if.endif

.6.endif.endif.if.if:                             ; preds = %.6.endif.endif.if
  %.158 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.159 = bitcast i8* %.158 to %string.676378*
  %.159.repack = bitcast i8* %.158 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.159.repack, align 8
  %.159.repack2 = getelementptr inbounds i8, i8* %.158, i64 8
  %10 = bitcast i8* %.159.repack2 to i8**
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @str.411, i64 0, i64 0), i8** %10, align 8
  %.159.repack3 = getelementptr inbounds i8, i8* %.158, i64 16
  %11 = bitcast i8* %.159.repack3 to i64*
  store i64 50, i64* %11, align 8
  %.159.repack4 = getelementptr inbounds i8, i8* %.158, i64 24
  %12 = bitcast i8* %.159.repack4 to i64*
  store i64 50, i64* %12, align 8
  call void @println(%string.676378* %.159)
  br label %.6.endif.endif.if.endif

.6.endif.endif.if.endif:                          ; preds = %.6.endif.endif.if.if, %.6.endif.endif.if
  %.164 = getelementptr inbounds %CGEnumType.676774, %CGEnumType.676774* %.151, i64 0, i32 2
  %.165 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.164, align 8
  %.166 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.165, i64 0, i32 0
  %.167 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.166, align 8
  %.168 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.167, i64 0, i32 3
  %.169 = load %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.168, align 8
  %.171 = call %LLVMValueRef.676728* %.169(%"Map<string, LLVMValueRef>.676763"* %.165, %string.676378* %.73)
  ret %LLVMValueRef.676728* %.171
}

define %LLVMValueRef.676728* @CodeGen_codegen_intrinsic_exp(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IntrinsicCall.676594* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.3, i64 0, i32 5
  %.11 = load i64, i64* %.10, align 8
  %.14 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %"Array<LLVMValueRef>.676778"*
  %.18 = bitcast i8* %.16 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 0, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 8, i64* %2, align 8
  %.28 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.29 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.29, i64 0, i32 48
  %.31 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*, %"Array<Expression>.676574"*)** %.30, align 8
  %.35 = getelementptr inbounds %IntrinsicCall.676594, %IntrinsicCall.676594* %.3, i64 0, i32 6
  %.36 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.35, align 8
  call void %.31(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.17, %"Array<Expression>.676574"* %.36)
  %.40 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.41 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.40, i64 0, i32 14
  %.42 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.41, align 8
  %.45 = load %"Array<Expression>.676574"*, %"Array<Expression>.676574"** %.35, align 8
  %.46 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.45, i64 0, i32 0
  %.47 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.46, align 8
  %.48 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.47, i64 0, i32 5
  %.49 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.48, align 8
  %.50 = call %Expression.676558* %.49(%"Array<Expression>.676574"* %.45, i64 0)
  %.51 = getelementptr inbounds %Expression.676558, %Expression.676558* %.50, i64 0, i32 4
  %3 = bitcast %Type.676538** %.51 to %PointerType.676542**
  %.521 = load %PointerType.676542*, %PointerType.676542** %3, align 8
  %.54 = getelementptr inbounds %PointerType.676542, %PointerType.676542* %.521, i64 0, i32 2
  %.55 = load %Type.676538*, %Type.676538** %.54, align 8
  %.56 = call %LLVMTypeRef.676727* %.42(%CodeGen.676780* %.1, %Type.676538* %.55, i1 true)
  %.57 = call %LLVMValueRef.676728* @LLVMSizeOf(%LLVMTypeRef.676727* %.56)
  %.60 = icmp eq i64 %.11, 3
  %.66 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.67 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.66, i64 0, i32 5
  %.68 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.67, align 8
  br i1 %.60, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.69 = call %LLVMValueRef.676728* %.68(%"Array<LLVMValueRef>.676778"* %.17, i64 1)
  %.71 = call %LLVMValueRef.676728* @LLVMBuildMul(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.69, %LLVMValueRef.676728* %.57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.73 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.74 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.73, i64 0, i32 3
  %.75 = load void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)** %.74, align 8
  call void %.75(%"Array<LLVMValueRef>.676778"* %.17, i64 1, %LLVMValueRef.676728* %.71)
  %.79 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.80 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.79, i64 0, i32 20
  %.81 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)** %.80, align 8
  %.84 = call %LLVMValueRef.676728* %.81(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.17)
  ret %LLVMValueRef.676728* %.84

.5.endif:                                         ; preds = %.5
  %.93 = call %LLVMValueRef.676728* %.68(%"Array<LLVMValueRef>.676778"* %.17, i64 2)
  %.95 = call %LLVMValueRef.676728* @LLVMBuildMul(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.93, %LLVMValueRef.676728* %.57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.97 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.98 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.97, i64 0, i32 3
  %.99 = load void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)** %.98, align 8
  call void %.99(%"Array<LLVMValueRef>.676778"* %.17, i64 2, %LLVMValueRef.676728* %.95)
  %.102 = icmp eq i64 %.11, 4
  br i1 %.102, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.106 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.107 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.106, i64 0, i32 21
  %.108 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %"Array<LLVMValueRef>.676778"*)** %.107, align 8
  %.111 = call %LLVMValueRef.676728* %.108(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.17)
  ret %LLVMValueRef.676728* %.111

.5.endif.endif:                                   ; preds = %.5.endif
  %.115 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.116 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.115, i64 0, i32 5
  %.117 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.116, align 8
  %.118 = call %LLVMValueRef.676728* %.117(%"Array<LLVMValueRef>.676778"* %.17, i64 0)
  %.119 = call i64 @LLVMGetAlignment(%LLVMValueRef.676728* %.118)
  %.122 = icmp eq i64 %.11, 2
  %.127 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.128 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.127, i64 0, i32 5
  %.129 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.128, align 8
  br i1 %.122, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.130 = call %LLVMValueRef.676728* %.129(%"Array<LLVMValueRef>.676778"* %.17, i64 0)
  %.134 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.135 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.134, i64 0, i32 5
  %.136 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.135, align 8
  %.137 = call %LLVMValueRef.676728* %.136(%"Array<LLVMValueRef>.676778"* %.17, i64 1)
  %.139 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.140 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.139, align 8
  %.141 = call %LLVMTypeRef.676727* @LLVMInt8TypeInContext(%LLVMContextRef.676725* %.140)
  %.142 = call %LLVMValueRef.676728* @LLVMBuildIntCast2(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.137, %LLVMTypeRef.676727* %.141, i1 false, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.145 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.146 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.145, i64 0, i32 5
  %.147 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.146, align 8
  %.148 = call %LLVMValueRef.676728* %.147(%"Array<LLVMValueRef>.676778"* %.17, i64 2)
  %.150 = call %LLVMValueRef.676728* @LLVMBuildMemSet(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.130, %LLVMValueRef.676728* %.142, %LLVMValueRef.676728* %.148, i64 %.119)
  ret %LLVMValueRef.676728* %.150

.5.endif.endif.endif:                             ; preds = %.5.endif.endif
  %.157 = call %LLVMValueRef.676728* %.129(%"Array<LLVMValueRef>.676778"* %.17, i64 1)
  %.158 = call i64 @LLVMGetAlignment(%LLVMValueRef.676728* %.157)
  switch i64 %.11, label %.5.endif.endif.endif.endif.endif [
    i64 0, label %.5.endif.endif.endif.if
    i64 1, label %.5.endif.endif.endif.endif.if
  ]

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.166 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.167 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.166, i64 0, i32 5
  %.168 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.167, align 8
  %.169 = call %LLVMValueRef.676728* %.168(%"Array<LLVMValueRef>.676778"* %.17, i64 0)
  %.173 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.174 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.173, i64 0, i32 5
  %.175 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.174, align 8
  %.176 = call %LLVMValueRef.676728* %.175(%"Array<LLVMValueRef>.676778"* %.17, i64 1)
  %.180 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.181 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.180, i64 0, i32 5
  %.182 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.181, align 8
  %.183 = call %LLVMValueRef.676728* %.182(%"Array<LLVMValueRef>.676778"* %.17, i64 2)
  %.184 = call %LLVMValueRef.676728* @LLVMBuildMemCpy(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.169, i64 %.119, %LLVMValueRef.676728* %.176, i64 %.158, %LLVMValueRef.676728* %.183)
  ret %LLVMValueRef.676728* %.184

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif
  %.192 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.193 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.192, i64 0, i32 5
  %.194 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.193, align 8
  %.195 = call %LLVMValueRef.676728* %.194(%"Array<LLVMValueRef>.676778"* %.17, i64 0)
  %.199 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.200 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.199, i64 0, i32 5
  %.201 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.200, align 8
  %.202 = call %LLVMValueRef.676728* %.201(%"Array<LLVMValueRef>.676778"* %.17, i64 1)
  %.206 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.18, align 8
  %.207 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.206, i64 0, i32 5
  %.208 = load %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)*, %LLVMValueRef.676728* (%"Array<LLVMValueRef>.676778"*, i64)** %.207, align 8
  %.209 = call %LLVMValueRef.676728* %.208(%"Array<LLVMValueRef>.676778"* %.17, i64 2)
  %.210 = call %LLVMValueRef.676728* @LLVMBuildMemMove(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.195, i64 %.119, %LLVMValueRef.676728* %.202, i64 %.158, %LLVMValueRef.676728* %.209)
  ret %LLVMValueRef.676728* %.210

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif
  ret %LLVMValueRef.676728* null
}

define %LLVMValueRef.676728* @CodeGen_codegen_expression(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.3) {
.5:
  %.10 = getelementptr inbounds %Expression.676558, %Expression.676558* %.3, i64 0, i32 3
  %.11 = load i64, i64* %.10, align 8
  switch i64 %.11, label %.5.endif.endif.endif.endi...endif.1.endif.endif [
    i64 4, label %.5.if
    i64 0, label %.5.endif.if
    i64 1, label %.5.endif.endif.if
    i64 5, label %.5.endif.endif.endif.if
    i64 2, label %.5.endif.endif.endif.endif.if
    i64 7, label %.5.endif.endif.endif.endif.endif.if
    i64 8, label %.5.endif.endif.endif.endif.endif.endif.if
    i64 9, label %.5.endif.endif.endif.endif.endif.endif.endif.if
    i64 14, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if
    i64 13, label %.5.endif.endif.endif.endi...if
    i64 12, label %.5.endif.endif.endif.endi...endif.if
    i64 11, label %.5.endif.endif.endif.endi...endif.endif.if
    i64 15, label %.5.endif.endif.endif.endi...endif.endif.endif.if
    i64 10, label %.5.endif.endif.endif.endi...if.1
    i64 6, label %.5.endif.endif.endif.endi...endif.1.if
    i64 16, label %.5.endif.endif.endif.endi...endif.1.endif.if
  ]

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.16, i64 0, i32 18
  %.18 = load %LLVMValueRef.676728* (%CodeGen.676780*, %BooleanExpression.676568*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %BooleanExpression.676568*)** %.17, align 8
  %.20 = bitcast %Expression.676558* %.3 to %BooleanExpression.676568*
  %.21 = call %LLVMValueRef.676728* %.18(%CodeGen.676780* %.1, %BooleanExpression.676568* %.20)
  ret %LLVMValueRef.676728* %.21

.5.endif.if:                                      ; preds = %.5
  %.29 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.30 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.29, align 8
  %.31 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.30, i64 0, i32 16
  %.32 = load %LLVMValueRef.676728* (%CodeGen.676780*, %IntExpression.676566*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %IntExpression.676566*)** %.31, align 8
  %.34 = bitcast %Expression.676558* %.3 to %IntExpression.676566*
  %.35 = call %LLVMValueRef.676728* %.32(%CodeGen.676780* %.1, %IntExpression.676566* %.34)
  ret %LLVMValueRef.676728* %.35

.5.endif.endif.if:                                ; preds = %.5
  %.43 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.44 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.43, align 8
  %.45 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.44, i64 0, i32 17
  %.46 = load %LLVMValueRef.676728* (%CodeGen.676780*, %FloatExpression.676570*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %FloatExpression.676570*)** %.45, align 8
  %.48 = bitcast %Expression.676558* %.3 to %FloatExpression.676570*
  %.49 = call %LLVMValueRef.676728* %.46(%CodeGen.676780* %.1, %FloatExpression.676570* %.48)
  ret %LLVMValueRef.676728* %.49

.5.endif.endif.endif.if:                          ; preds = %.5
  %.57 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.58 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.57, align 8
  %.59 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.58, i64 0, i32 37
  %.60 = load %LLVMValueRef.676728* (%CodeGen.676780*, %NullExpression.676576*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %NullExpression.676576*)** %.59, align 8
  %.62 = bitcast %Expression.676558* %.3 to %NullExpression.676576*
  %.63 = call %LLVMValueRef.676728* %.60(%CodeGen.676780* %.1, %NullExpression.676576* %.62)
  ret %LLVMValueRef.676728* %.63

.5.endif.endif.endif.endif.if:                    ; preds = %.5
  %.71 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.72 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.71, align 8
  %.73 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.72, i64 0, i32 23
  %.74 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %StringExpression.676572*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %StringExpression.676572*)** %.73, align 8
  %.77 = bitcast %Expression.676558* %.3 to %StringExpression.676572*
  %.78 = call %LLVMValueRef.676728* %.74(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %StringExpression.676572* %.77)
  ret %LLVMValueRef.676728* %.78

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5
  %.86 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.87 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.86, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.87, i64 0, i32 36
  %.89 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarAccessExpression.676608*)** %.88, align 8
  %.92 = bitcast %Expression.676558* %.3 to %VarAccessExpression.676608*
  %.93 = call %LLVMValueRef.676728* %.89(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %VarAccessExpression.676608* %.92)
  ret %LLVMValueRef.676728* %.93

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5
  %.101 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.102 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.101, align 8
  %.103 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.102, i64 0, i32 33
  %.104 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %BinaryExpression.676580*)** %.103, align 8
  %.107 = bitcast %Expression.676558* %.3 to %BinaryExpression.676580*
  %.108 = call %LLVMValueRef.676728* %.104(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %BinaryExpression.676580* %.107)
  ret %LLVMValueRef.676728* %.108

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5
  %.116 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.117 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.116, align 8
  %.118 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.117, i64 0, i32 35
  %.119 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %UnaryExpression.676582*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %UnaryExpression.676582*)** %.118, align 8
  %.122 = bitcast %Expression.676558* %.3 to %UnaryExpression.676582*
  %.123 = call %LLVMValueRef.676728* %.119(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %UnaryExpression.676582* %.122)
  ret %LLVMValueRef.676728* %.123

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5
  %.131 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.132 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.131, align 8
  %.133 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.132, i64 0, i32 39
  %.134 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %CallExpression.676592*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %CallExpression.676592*)** %.133, align 8
  %.137 = bitcast %Expression.676558* %.3 to %CallExpression.676592*
  %.138 = call %LLVMValueRef.676728* %.134(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %CallExpression.676592* %.137)
  ret %LLVMValueRef.676728* %.138

.5.endif.endif.endif.endi...if:                   ; preds = %.5
  %.146 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.147 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.146, align 8
  %.148 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.147, i64 0, i32 40
  %.149 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IndexExpression.676590*)** %.148, align 8
  %.152 = bitcast %Expression.676558* %.3 to %IndexExpression.676590*
  %.153 = call %LLVMValueRef.676728* %.149(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IndexExpression.676590* %.152)
  ret %LLVMValueRef.676728* %.153

.5.endif.endif.endif.endi...endif.if:             ; preds = %.5
  %.161 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.162 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.161, align 8
  %.163 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.162, i64 0, i32 42
  %.164 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %MemberExpression.676606*, %LLVMValueRef.676728*)** %.163, align 8
  %.167 = bitcast %Expression.676558* %.3 to %MemberExpression.676606*
  %.168 = call %LLVMValueRef.676728* %.164(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %MemberExpression.676606* %.167, %LLVMValueRef.676728* null)
  ret %LLVMValueRef.676728* %.168

.5.endif.endif.endif.endi...endif.endif.if:       ; preds = %.5
  %.176 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.177 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.176, align 8
  %.178 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.177, i64 0, i32 41
  %.179 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %NewExpression.676588*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %NewExpression.676588*)** %.178, align 8
  %.182 = bitcast %Expression.676558* %.3 to %NewExpression.676588*
  %.183 = call %LLVMValueRef.676728* %.179(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %NewExpression.676588* %.182)
  ret %LLVMValueRef.676728* %.183

.5.endif.endif.endif.endi...endif.endif.endif.if: ; preds = %.5
  %.191 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.192 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.191, align 8
  %.193 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.192, i64 0, i32 38
  %.194 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TernaryExpression.676584*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TernaryExpression.676584*)** %.193, align 8
  %.197 = bitcast %Expression.676558* %.3 to %TernaryExpression.676584*
  %.198 = call %LLVMValueRef.676728* %.194(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %TernaryExpression.676584* %.197)
  ret %LLVMValueRef.676728* %.198

.5.endif.endif.endif.endi...if.1:                 ; preds = %.5
  %.206 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.207 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.206, align 8
  %.208 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.207, i64 0, i32 34
  %.209 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TypeCastExpression.676586*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %TypeCastExpression.676586*)** %.208, align 8
  %.212 = bitcast %Expression.676558* %.3 to %TypeCastExpression.676586*
  %.213 = call %LLVMValueRef.676728* %.209(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %TypeCastExpression.676586* %.212)
  ret %LLVMValueRef.676728* %.213

.5.endif.endif.endif.endi...endif.1.if:           ; preds = %.5
  %.221 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.222 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.221, align 8
  %.223 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.222, i64 0, i32 25
  %.224 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ArrayExpression.676578*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ArrayExpression.676578*)** %.223, align 8
  %.227 = bitcast %Expression.676558* %.3 to %ArrayExpression.676578*
  %.228 = call %LLVMValueRef.676728* %.224(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ArrayExpression.676578* %.227)
  ret %LLVMValueRef.676728* %.228

.5.endif.endif.endif.endi...endif.1.endif.if:     ; preds = %.5
  %.236 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.237 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.236, align 8
  %.238 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.237, i64 0, i32 43
  %.239 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IntrinsicCall.676594*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IntrinsicCall.676594*)** %.238, align 8
  %.242 = bitcast %Expression.676558* %.3 to %IntrinsicCall.676594*
  %.243 = call %LLVMValueRef.676728* %.239(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IntrinsicCall.676594* %.242)
  ret %LLVMValueRef.676728* %.243

.5.endif.endif.endif.endi...endif.1.endif.endif:  ; preds = %.5
  %.245 = call %LLVMTypeRef.676727* @LLVMInt32Type()
  %.246 = call %LLVMValueRef.676728* @LLVMConstInt(%LLVMTypeRef.676727* %.245, i64 0, i1 false)
  ret %LLVMValueRef.676728* %.246
}

define void @CodeGen_codegen_if_stmt(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IfStatement.676614* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.11 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.12 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.11, i64 0, i32 44
  %.13 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.12, align 8
  %.16 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.3, i64 0, i32 2
  %.17 = load %Expression.676558*, %Expression.676558** %.16, align 8
  %.18 = call %LLVMValueRef.676728* %.13(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.17)
  %.21 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.22 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.21, align 8
  %.24 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 8
  %.25 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.24, align 8
  %.26 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.22, %LLVMValueRef.676728* %.25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.412, i64 0, i64 0))
  %.30 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.21, align 8
  %.33 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.24, align 8
  %.34 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.30, %LLVMValueRef.676728* %.33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.32, i64 0, i64 0))
  %.38 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.21, align 8
  %.41 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.24, align 8
  %.42 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.38, %LLVMValueRef.676728* %.41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.413, i64 0, i64 0))
  %.48 = call %LLVMValueRef.676728* @LLVMBuildCondBr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.18, %LLVMBasicBlockRef.676729* %.26, %LLVMBasicBlockRef.676729* %.34)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.26)
  %.54 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.55 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.54, i64 0, i32 53
  %.56 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)** %.55, align 8
  %.59 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.3, i64 0, i32 3
  %.60 = load %Block.676610*, %Block.676610** %.59, align 8
  call void %.56(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Block.676610* %.60)
  %.64 = load %Block.676610*, %Block.676610** %.59, align 8
  %.65 = call i1 @is_terminated(%Block.676610* %.64)
  br i1 %.65, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.72 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.42)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.34)
  %else_terminated = alloca i1, align 1
  store i1 false, i1* %else_terminated, align 1
  %.79 = getelementptr inbounds %IfStatement.676614, %IfStatement.676614* %.3, i64 0, i32 4
  %0 = bitcast %Block.676610** %.79 to i64*
  %.801 = load i64, i64* %0, align 8
  %.81 = trunc i64 %.801 to i32
  %.83.not = icmp eq i32 %.81, 0
  br i1 %.83.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.87 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.10, align 8
  %.88 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.87, i64 0, i32 53
  %.89 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)** %.88, align 8
  %.93 = load %Block.676610*, %Block.676610** %.79, align 8
  call void %.89(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Block.676610* %.93)
  %.97 = load %Block.676610*, %Block.676610** %.79, align 8
  %.98 = call i1 @is_terminated(%Block.676610* %.97)
  store i1 %.98, i1* %else_terminated, align 1
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.if
  %.101 = load i1, i1* %else_terminated, align 1
  br i1 %.101, label %.5.endif.endif.else, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.106 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.42)
  br label %.5.endif.endif.endif

.5.endif.endif.else:                              ; preds = %.5.endif.endif
  br i1 %.65, label %.5.endif.endif.else.if, label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.else, %.5.endif.endif.else.if, %.5.endif.endif.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.42)
  ret void

.5.endif.endif.else.if:                           ; preds = %.5.endif.endif.else
  call void @LLVMDeleteBasicBlock(%LLVMBasicBlockRef.676729* %.42)
  br label %.5.endif.endif.endif
}

define void @CodeGen_codegen_for_stmt(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ForStatement.676620* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 8
  %.14 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.15 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.11, %LLVMValueRef.676728* %.14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.414, i64 0, i64 0))
  %.19 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.15)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.15)
  %.24 = getelementptr inbounds %ForStatement.676620, %ForStatement.676620* %.3, i64 0, i32 2
  %0 = bitcast %Statement.676550** %.24 to i64*
  %.251 = load i64, i64* %0, align 8
  %.26 = trunc i64 %.251 to i32
  %.28.not = icmp eq i32 %.26, 0
  br i1 %.28.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.31 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.32 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.31, align 8
  %.33 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.32, i64 0, i32 52
  %.34 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Statement.676550*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Statement.676550*)** %.33, align 8
  %.38 = load %Statement.676550*, %Statement.676550** %.24, align 8
  call void %.34(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Statement.676550* %.38)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  %.43 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.46 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.47 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.43, %LLVMValueRef.676728* %.46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.415, i64 0, i64 0))
  %.51 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.54 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.55 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.51, %LLVMValueRef.676728* %.54, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.416, i64 0, i64 0))
  %.59 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.62 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.63 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.59, %LLVMValueRef.676728* %.62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.417, i64 0, i64 0))
  %for_incr_block = alloca %LLVMBasicBlockRef.676729*, align 8
  store %LLVMBasicBlockRef.676729* %.63, %LLVMBasicBlockRef.676729** %for_incr_block, align 8
  %.67 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.70 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.71 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.67, %LLVMValueRef.676728* %.70, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.418, i64 0, i64 0))
  %for_end_block = alloca %LLVMBasicBlockRef.676729*, align 8
  store %LLVMBasicBlockRef.676729* %.71, %LLVMBasicBlockRef.676729** %for_end_block, align 8
  %.74 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 9
  %1 = bitcast %LLVMBasicBlockRef.676729** %.74 to i64*
  %.752 = load i64, i64* %1, align 8
  %.78 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 10
  %2 = bitcast %LLVMBasicBlockRef.676729** %.78 to i64*
  %.793 = load i64, i64* %2, align 8
  %3 = bitcast %LLVMBasicBlockRef.676729** %for_end_block to i64*
  %.824 = load i64, i64* %3, align 8
  store i64 %.824, i64* %1, align 8
  %4 = bitcast %LLVMBasicBlockRef.676729** %for_incr_block to i64*
  %.865 = load i64, i64* %4, align 8
  store i64 %.865, i64* %2, align 8
  %.91 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.47)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.47)
  %.96 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.97 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.96, align 8
  %.98 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.97, i64 0, i32 10
  %.99 = load %LLVMValueRef.676728* (%CodeGen.676780*, i1)*, %LLVMValueRef.676728* (%CodeGen.676780*, i1)** %.98, align 8
  %.100 = call %LLVMValueRef.676728* %.99(%CodeGen.676780* %.1, i1 true)
  %condition = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.100, %LLVMValueRef.676728** %condition, align 8
  %.103 = getelementptr inbounds %ForStatement.676620, %ForStatement.676620* %.3, i64 0, i32 3
  %5 = bitcast %Expression.676558** %.103 to i64*
  %.1046 = load i64, i64* %5, align 8
  %.105 = trunc i64 %.1046 to i32
  %.107.not = icmp eq i32 %.105, 0
  br i1 %.107.not, label %.5.endif.endif, label %.5.endif.if

.5.endif.if:                                      ; preds = %.5.endif
  %.111 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.96, align 8
  %.112 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.111, i64 0, i32 44
  %.113 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.112, align 8
  %.117 = load %Expression.676558*, %Expression.676558** %.103, align 8
  %.118 = call %LLVMValueRef.676728* %.113(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.117)
  store %LLVMValueRef.676728* %.118, %LLVMValueRef.676728** %condition, align 8
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif, %.5.endif.if
  %.122 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %condition, align 8
  %.125 = call %LLVMValueRef.676728* @LLVMBuildCondBr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.122, %LLVMBasicBlockRef.676729* %.55, %LLVMBasicBlockRef.676729* %.71)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.55)
  %.131 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.96, align 8
  %.132 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.131, i64 0, i32 53
  %.133 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)** %.132, align 8
  %.136 = getelementptr inbounds %ForStatement.676620, %ForStatement.676620* %.3, i64 0, i32 5
  %.137 = load %Block.676610*, %Block.676610** %.136, align 8
  call void %.133(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Block.676610* %.137)
  %.141 = load %Block.676610*, %Block.676610** %.136, align 8
  %.142 = call i1 @is_terminated(%Block.676610* %.141)
  br i1 %.142, label %.5.endif.endif.endif, label %.5.endif.endif.if

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.147 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.63)
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif, %.5.endif.endif.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.63)
  %.153 = getelementptr inbounds %ForStatement.676620, %ForStatement.676620* %.3, i64 0, i32 4
  %6 = bitcast %Expression.676558** %.153 to i64*
  %.1547 = load i64, i64* %6, align 8
  %.155 = trunc i64 %.1547 to i32
  %.157.not = icmp eq i32 %.155, 0
  br i1 %.157.not, label %.5.endif.endif.endif.endif, label %.5.endif.endif.endif.if

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.161 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.96, align 8
  %.162 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.161, i64 0, i32 44
  %.163 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.162, align 8
  %.167 = load %Expression.676558*, %Expression.676558** %.153, align 8
  %.168 = call %LLVMValueRef.676728* %.163(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.167)
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif, %.5.endif.endif.endif.if
  %.172 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.47)
  store i64 %.752, i64* %1, align 8
  store i64 %.793, i64* %2, align 8
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.71)
  ret void
}

define void @CodeGen_codegen_while_stmt(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %WhileStatement.676622* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.11 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.13 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 8
  %.14 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.15 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.11, %LLVMValueRef.676728* %.14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.419, i64 0, i64 0))
  %.19 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.10, align 8
  %.22 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.13, align 8
  %.23 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.19, %LLVMValueRef.676728* %.22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.420, i64 0, i64 0))
  %.26 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 9
  %0 = bitcast %LLVMBasicBlockRef.676729** %.26 to i64*
  %.271 = load i64, i64* %0, align 8
  %.30 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 10
  %1 = bitcast %LLVMBasicBlockRef.676729** %.30 to i64*
  %.312 = load i64, i64* %1, align 8
  store %LLVMBasicBlockRef.676729* %.23, %LLVMBasicBlockRef.676729** %.26, align 8
  store %LLVMBasicBlockRef.676729* %.15, %LLVMBasicBlockRef.676729** %.30, align 8
  %.42 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.43 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.42, align 8
  %.44 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.43, i64 0, i32 44
  %.45 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.44, align 8
  %.48 = getelementptr inbounds %WhileStatement.676622, %WhileStatement.676622* %.3, i64 0, i32 2
  %.49 = load %Expression.676558*, %Expression.676558** %.48, align 8
  %.50 = call %LLVMValueRef.676728* %.45(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.49)
  %.56 = call %LLVMValueRef.676728* @LLVMBuildCondBr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.50, %LLVMBasicBlockRef.676729* %.15, %LLVMBasicBlockRef.676729* %.23)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.15)
  %.62 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.42, align 8
  %.63 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.62, i64 0, i32 53
  %.64 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)** %.63, align 8
  %.67 = getelementptr inbounds %WhileStatement.676622, %WhileStatement.676622* %.3, i64 0, i32 3
  %.68 = load %Block.676610*, %Block.676610** %.67, align 8
  call void %.64(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Block.676610* %.68)
  %.72 = load %Block.676610*, %Block.676610** %.67, align 8
  %.73 = call i1 @is_terminated(%Block.676610* %.72)
  br i1 %.73, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.78 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.42, align 8
  %.79 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.78, i64 0, i32 44
  %.80 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.79, align 8
  %.84 = load %Expression.676558*, %Expression.676558** %.48, align 8
  %.85 = call %LLVMValueRef.676728* %.80(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.84)
  %.91 = call %LLVMValueRef.676728* @LLVMBuildCondBr(%LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.85, %LLVMBasicBlockRef.676729* %.15, %LLVMBasicBlockRef.676729* %.23)
  br label %.5.endif

.5.endif:                                         ; preds = %.5, %.5.if
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.23)
  store i64 %.271, i64* %0, align 8
  store i64 %.312, i64* %1, align 8
  ret void
}

define void @CodeGen_evaluate_expression_list(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %"Array<LLVMValueRef>.676778"* %.3, %"Array<Expression>.676574"* %.4) {
.6:
  %.16 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.4, i64 0, i32 2
  %.172 = load i64, i64* %.16, align 8
  %.183 = icmp sgt i64 %.172, 0
  br i1 %.183, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.22 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.29 = getelementptr inbounds %"Array<Expression>.676574", %"Array<Expression>.676574"* %.4, i64 0, i32 0
  %.35 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.3, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.44, %for.body ]
  %.23 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.23, i64 0, i32 44
  %.25 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.24, align 8
  %.30 = load %"Array<Expression>_vtable_ty.676575"*, %"Array<Expression>_vtable_ty.676575"** %.29, align 8
  %.31 = getelementptr inbounds %"Array<Expression>_vtable_ty.676575", %"Array<Expression>_vtable_ty.676575"* %.30, i64 0, i32 5
  %.32 = load %Expression.676558* (%"Array<Expression>.676574"*, i64)*, %Expression.676558* (%"Array<Expression>.676574"*, i64)** %.31, align 8
  %.33 = call %Expression.676558* %.32(%"Array<Expression>.676574"* %.4, i64 %storemerge4)
  %.34 = call %LLVMValueRef.676728* %.25(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.33)
  %.36 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.35, align 8
  %.37 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.36, i64 0, i32 2
  %.38 = load void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, %LLVMValueRef.676728*)** %.37, align 8
  call void %.38(%"Array<LLVMValueRef>.676778"* %.3, %LLVMValueRef.676728* %.34)
  %.44 = add nuw nsw i64 %storemerge4, 1
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp slt i64 %.44, %.17
  br i1 %.18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.6
  ret void
}

define void @CodeGen_build_constructor_call(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ObjectType.676562* nocapture readonly %.3, %"Array<LLVMValueRef>.676778"* nocapture readonly %.4) {
.6:
  %.12 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.13 = load %Program.676712*, %Program.676712** %.12, align 8
  %.15 = getelementptr inbounds %ObjectType.676562, %ObjectType.676562* %.3, i64 0, i32 2
  %.16 = load %ClassId.676554*, %ClassId.676554** %.15, align 8
  %.17 = call %Class.676668* @get_class(%Program.676712* %.13, %ClassId.676554* %.16)
  %.20 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.21 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.20, align 8
  %.22 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.21, i64 0, i32 3
  %.23 = load %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)** %.22, align 8
  %0 = bitcast %ClassId.676554** %.15 to %TypeId.676552**
  %.261 = load %TypeId.676552*, %TypeId.676552** %0, align 8
  %.28 = call %CGClassType.676760* %.23(%CodeGen.676780* %.1, %TypeId.676552* %.261)
  %.29 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.28, i64 0, i32 7
  %.30 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.29, align 8
  %1 = ptrtoint %LLVMValueRef.676728* %.30 to i64
  %.39 = trunc i64 %1 to i32
  %.41.not = icmp eq i32 %.39, 0
  br i1 %.41.not, label %.6.endif, label %.6.if

.6.if:                                            ; preds = %.6
  %.33 = getelementptr inbounds %Class.676668, %Class.676668* %.17, i64 0, i32 4
  %.34 = load %PropId.676604*, %PropId.676604** %.33, align 8
  %.35 = getelementptr inbounds %PropId.676604, %PropId.676604* %.34, i64 0, i32 3
  %.36 = load i64, i64* %.35, align 8
  %.45 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.20, align 8
  %.46 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.45, i64 0, i32 14
  %.47 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.46, align 8
  %.50 = getelementptr inbounds %Class.676668, %Class.676668* %.17, i64 0, i32 6
  %.51 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.50, align 8
  %.52 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.51, i64 0, i32 0
  %.53 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.52, align 8
  %.54 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.53, i64 0, i32 5
  %.55 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.54, align 8
  %.56 = call %ClassMethod.676666* %.55(%"Array<ClassMethod>.676671"* %.51, i64 %.36)
  %.57 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.56, i64 0, i32 5
  %2 = bitcast %FunctionType.676544** %.57 to %Type.676538**
  %.582 = load %Type.676538*, %Type.676538** %2, align 8
  %.60 = call %LLVMTypeRef.676727* %.47(%CodeGen.676780* %.1, %Type.676538* %.582, i1 false)
  %.66 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.4, i64 0, i32 1
  %.67 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %.66, align 8
  %.69 = getelementptr inbounds %"Array<LLVMValueRef>.676778", %"Array<LLVMValueRef>.676778"* %.4, i64 0, i32 2
  %.70 = load i64, i64* %.69, align 8
  %.71 = call %LLVMValueRef.676728* @LLVMBuildCall2(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.60, %LLVMValueRef.676728* %.30, %LLVMValueRef.676728** %.67, i64 %.70, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  br label %.6.endif

.6.endif:                                         ; preds = %.6, %.6.if
  ret void
}

define void @CodeGen_codegen_var_declaration(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %VarDeclaration.676616* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.3, i64 0, i32 3
  %.11 = load %VarId.676596*, %VarId.676596** %.10, align 8
  %.14 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.15 = load %Program.676712*, %Program.676712** %.14, align 8
  %.17 = call %Var.676660* @get_var(%Program.676712* %.15, %VarId.676596* %.11)
  %.20 = getelementptr inbounds %Var.676660, %Var.676660* %.17, i64 0, i32 3
  %.21 = load %Expression.676558*, %Expression.676558** %.20, align 8
  %.24 = getelementptr inbounds %Var.676660, %Var.676660* %.17, i64 0, i32 1
  %.25 = load %Type.676538*, %Type.676538** %.24, align 8
  %.28 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.29 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.30 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.29, i64 0, i32 14
  %.31 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.30, align 8
  %.33 = call %LLVMTypeRef.676727* %.31(%CodeGen.676780* %.1, %Type.676538* %.25, i1 true)
  %.36 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.3, i64 0, i32 2
  %.37 = load %string.676378*, %string.676378** %.36, align 8
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.37, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 11
  %.41 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.40, align 8
  %.42 = call i8* %.41(%string.676378* %.37)
  %.46 = getelementptr inbounds %VarDeclaration.676616, %VarDeclaration.676616* %.3, i64 0, i32 4
  %.47 = load i1, i1* %.46, align 1
  br i1 %.47, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.51 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.52 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.51, i64 0, i32 44
  %.53 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.52, align 8
  %.56 = call %LLVMValueRef.676728* %.53(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.21)
  %.59 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.60 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.59, align 8
  %.63 = call %LLVMValueRef.676728* @LLVMAddGlobal(%LLVMModuleRef.676726* %.60, %LLVMTypeRef.676727* %.33, i8* %.42)
  call void @LLVMSetInitializer(%LLVMValueRef.676728* %.63, %LLVMValueRef.676728* %.56)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.72 = call %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.33, i8* %.42)
  %0 = ptrtoint %Expression.676558* %.21 to i64
  %.75 = trunc i64 %0 to i32
  %.77.not = icmp eq i32 %.75, 0
  br i1 %.77.not, label %.5.endif, label %.5.else.if

.5.endif:                                         ; preds = %.5.else.if, %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.676728* [ %.63, %.5.if ], [ %.72, %.5.else ], [ %.72, %.5.else.if ]
  %.92 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.93 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.92, i64 0, i32 9
  %.94 = load void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)** %.93, align 8
  call void %.94(%CodeGen.676780* %.1, %VarId.676596* %.11, %LLVMValueRef.676728* %ptr.0)
  ret void

.5.else.if:                                       ; preds = %.5.else
  %.81 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.28, align 8
  %.82 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.81, i64 0, i32 30
  %.83 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)** %.82, align 8
  %.87 = call %LLVMValueRef.676728* %.83(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.72, %Expression.676558* %.21)
  br label %.5.endif
}

define void @CodeGen_codegen_const_declaration(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ConstDeclaration.676618* nocapture readonly %.3) {
.5:
  %.10 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.3, i64 0, i32 3
  %.11 = load %ConstId.676602*, %ConstId.676602** %.10, align 8
  %.14 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.15 = load %Program.676712*, %Program.676712** %.14, align 8
  %.17 = call %Const.676662* @get_const(%Program.676712* %.15, %ConstId.676602* %.11)
  %.18 = getelementptr inbounds %Const.676662, %Const.676662* %.17, i64 0, i32 3
  %.19 = load %Expression.676558*, %Expression.676558** %.18, align 8
  %.22 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.23 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.22, align 8
  %.24 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.23, i64 0, i32 14
  %.25 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.24, align 8
  %.27 = getelementptr inbounds %Expression.676558, %Expression.676558* %.19, i64 0, i32 4
  %.28 = load %Type.676538*, %Type.676538** %.27, align 8
  %.29 = call %LLVMTypeRef.676727* %.25(%CodeGen.676780* %.1, %Type.676538* %.28, i1 true)
  %.32 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.3, i64 0, i32 2
  %.33 = load %string.676378*, %string.676378** %.32, align 8
  %.34 = getelementptr inbounds %string.676378, %string.676378* %.33, i64 0, i32 0
  %.35 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.34, align 8
  %.36 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.35, i64 0, i32 11
  %.37 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.36, align 8
  %.38 = call i8* %.37(%string.676378* %.33)
  %.42 = getelementptr inbounds %ConstDeclaration.676618, %ConstDeclaration.676618* %.3, i64 0, i32 4
  %.43 = load i1, i1* %.42, align 1
  br i1 %.43, label %.5.if, label %.5.else

.5.if:                                            ; preds = %.5
  %.47 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.22, align 8
  %.48 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.47, i64 0, i32 44
  %.49 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.48, align 8
  %.52 = call %LLVMValueRef.676728* %.49(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.19)
  %.55 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.56 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.55, align 8
  %.59 = call %LLVMValueRef.676728* @LLVMAddGlobal(%LLVMModuleRef.676726* %.56, %LLVMTypeRef.676727* %.29, i8* %.38)
  call void @LLVMSetInitializer(%LLVMValueRef.676728* %.59, %LLVMValueRef.676728* %.52)
  call void @LLVMSetGlobalConstant(%LLVMValueRef.676728* %.59, i1 true)
  br label %.5.endif

.5.else:                                          ; preds = %.5
  %.70 = call %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733* %.2, %LLVMTypeRef.676727* %.29, i8* %.38)
  %.74 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.22, align 8
  %.75 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.74, i64 0, i32 30
  %.76 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %LLVMValueRef.676728*, %Expression.676558*)** %.75, align 8
  %.80 = call %LLVMValueRef.676728* %.76(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %LLVMValueRef.676728* %.70, %Expression.676558* %.19)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.else, %.5.if
  %ptr.0 = phi %LLVMValueRef.676728* [ %.59, %.5.if ], [ %.70, %.5.else ]
  %.84 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.22, align 8
  %.85 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.84, i64 0, i32 9
  %.86 = load void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)** %.85, align 8
  %.88 = bitcast %ConstId.676602* %.11 to %VarId.676596*
  call void %.86(%CodeGen.676780* %.1, %VarId.676596* %.88, %LLVMValueRef.676728* %ptr.0)
  ret void
}

define void @CodeGen_codegen_statement(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Statement.676550* %.3) {
.5:
  %.10 = getelementptr inbounds %Statement.676550, %Statement.676550* %.3, i64 0, i32 1
  %.11 = load i64, i64* %.10, align 8
  %.12 = icmp eq i64 %.11, 0
  br i1 %.12, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.15 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.16 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.15, align 8
  %.17 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.16, i64 0, i32 45
  %.18 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IfStatement.676614*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %IfStatement.676614*)** %.17, align 8
  %.21 = bitcast %Statement.676550* %.3 to %IfStatement.676614*
  call void %.18(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %IfStatement.676614* %.21)
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  %.26 = load i64, i64* %.10, align 8
  %.27 = icmp eq i64 %.26, 3
  br i1 %.27, label %.5.endif.if, label %.5.endif.endif

.5.endif.if:                                      ; preds = %.5.endif
  %.30 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.31, i64 0, i32 46
  %.33 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ForStatement.676620*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ForStatement.676620*)** %.32, align 8
  %.36 = bitcast %Statement.676550* %.3 to %ForStatement.676620*
  call void %.33(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ForStatement.676620* %.36)
  br label %.5.endif.endif

.5.endif.endif:                                   ; preds = %.5.endif.if, %.5.endif
  %.41 = load i64, i64* %.10, align 8
  %.42 = icmp eq i64 %.41, 4
  br i1 %.42, label %.5.endif.endif.if, label %.5.endif.endif.endif

.5.endif.endif.if:                                ; preds = %.5.endif.endif
  %.45 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.45, align 8
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.46, i64 0, i32 47
  %.48 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %WhileStatement.676622*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %WhileStatement.676622*)** %.47, align 8
  %.51 = bitcast %Statement.676550* %.3 to %WhileStatement.676622*
  call void %.48(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %WhileStatement.676622* %.51)
  br label %.5.endif.endif.endif

.5.endif.endif.endif:                             ; preds = %.5.endif.endif.if, %.5.endif.endif
  %.56 = load i64, i64* %.10, align 8
  %.57 = icmp eq i64 %.56, 5
  br i1 %.57, label %.5.endif.endif.endif.if, label %.5.endif.endif.endif.endif

.5.endif.endif.endif.if:                          ; preds = %.5.endif.endif.endif
  %.61 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 10
  %.62 = load %LLVMBasicBlockRef.676729*, %LLVMBasicBlockRef.676729** %.61, align 8
  %.63 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.62)
  br label %.5.endif.endif.endif.endif

.5.endif.endif.endif.endif:                       ; preds = %.5.endif.endif.endif.if, %.5.endif.endif.endif
  %.67 = load i64, i64* %.10, align 8
  %.68 = icmp eq i64 %.67, 6
  br i1 %.68, label %.5.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.if:                    ; preds = %.5.endif.endif.endif.endif
  %.72 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 9
  %.73 = load %LLVMBasicBlockRef.676729*, %LLVMBasicBlockRef.676729** %.72, align 8
  %.74 = call %LLVMValueRef.676728* @LLVMBuildBr(%LLVMBuilderRef.676733* %.2, %LLVMBasicBlockRef.676729* %.73)
  br label %.5.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif:                 ; preds = %.5.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif
  %.78 = load i64, i64* %.10, align 8
  %.79 = icmp eq i64 %.78, 1
  br i1 %.79, label %.5.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.if:              ; preds = %.5.endif.endif.endif.endif.endif
  %.82 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.83 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.82, align 8
  %.84 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.83, i64 0, i32 50
  %.85 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarDeclaration.676616*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %VarDeclaration.676616*)** %.84, align 8
  %.88 = bitcast %Statement.676550* %.3 to %VarDeclaration.676616*
  call void %.85(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %VarDeclaration.676616* %.88)
  br label %.5.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif:           ; preds = %.5.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif
  %.93 = load i64, i64* %.10, align 8
  %.94 = icmp eq i64 %.93, 2
  br i1 %.94, label %.5.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.if:        ; preds = %.5.endif.endif.endif.endif.endif.endif
  %.97 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.98 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.97, align 8
  %.99 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.98, i64 0, i32 51
  %.100 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ConstDeclaration.676618*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ConstDeclaration.676618*)** %.99, align 8
  %.103 = bitcast %Statement.676550* %.3 to %ConstDeclaration.676618*
  call void %.100(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ConstDeclaration.676618* %.103)
  br label %.5.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif:     ; preds = %.5.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif
  %.108 = load i64, i64* %.10, align 8
  %.109 = icmp eq i64 %.108, 7
  br i1 %.109, label %.5.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.5.endif.endif.endif.endif.endif.endif.endif
  %.112 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.113 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.112, align 8
  %.114 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.113, i64 0, i32 15
  %.115 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ReturnStatement.676624*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %ReturnStatement.676624*)** %.114, align 8
  %.118 = bitcast %Statement.676550* %.3 to %ReturnStatement.676624*
  call void %.115(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %ReturnStatement.676624* %.118)
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif
  %.123 = load i64, i64* %.10, align 8
  %.124 = icmp eq i64 %.123, 8
  br i1 %.124, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif
  %.127 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.128 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.127, align 8
  %.129 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.128, i64 0, i32 44
  %.130 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.129, align 8
  %.133 = bitcast %Statement.676550* %.3 to %Expression.676558*
  %.134 = call %LLVMValueRef.676728* %.130(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Expression.676558* %.133)
  br label %.5.endif.endif.endif.endif.endif.endif.endif.endif.endif

.5.endif.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.5.endif.endif.endif.endif.endif.endif.endif.endif.if, %.5.endif.endif.endif.endif.endif.endif.endif.endif
  ret void
}

define void @CodeGen_codegen_block(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Block.676610* nocapture readonly %.3) {
.5:
  %.14 = getelementptr inbounds %Block.676610, %Block.676610* %.3, i64 0, i32 1
  %.152 = load %"Array<Statement>.676612"*, %"Array<Statement>.676612"** %.14, align 8
  %.163 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.152, i64 0, i32 2
  %.174 = load i64, i64* %.163, align 8
  %.185 = icmp sgt i64 %.174, 0
  br i1 %.185, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5
  %.21 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.157 = phi %"Array<Statement>.676612"* [ %.152, %for.body.lr.ph ], [ %.15, %for.body ]
  %storemerge6 = phi i64 [ 0, %for.body.lr.ph ], [ %.40, %for.body ]
  %.22 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.21, align 8
  %.23 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.22, i64 0, i32 52
  %.24 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Statement.676550*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Statement.676550*)** %.23, align 8
  %.30 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.157, i64 0, i32 0
  %.31 = load %"Array<Statement>_vtable_ty.676613"*, %"Array<Statement>_vtable_ty.676613"** %.30, align 8
  %.32 = getelementptr inbounds %"Array<Statement>_vtable_ty.676613", %"Array<Statement>_vtable_ty.676613"* %.31, i64 0, i32 5
  %.33 = load %Statement.676550* (%"Array<Statement>.676612"*, i64)*, %Statement.676550* (%"Array<Statement>.676612"*, i64)** %.32, align 8
  %.34 = call %Statement.676550* %.33(%"Array<Statement>.676612"* %.157, i64 %storemerge6)
  call void %.24(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.2, %Statement.676550* %.34)
  %.40 = add nuw nsw i64 %storemerge6, 1
  %.15 = load %"Array<Statement>.676612"*, %"Array<Statement>.676612"** %.14, align 8
  %.16 = getelementptr inbounds %"Array<Statement>.676612", %"Array<Statement>.676612"* %.15, i64 0, i32 2
  %.17 = load i64, i64* %.16, align 8
  %.18 = icmp slt i64 %.40, %.17
  br i1 %.18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5
  ret void
}

define void @CodeGen_codegen_function(%CodeGen.676780* %.1, %Function.676656* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.9 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.10 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.9, i64 0, i32 2
  %.11 = load %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %VarId.676596*)** %.10, align 8
  %.13 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 1
  %.14 = load %VarId.676596*, %VarId.676596** %.13, align 8
  %.15 = call %LLVMValueRef.676728* %.11(%CodeGen.676780* %.1, %VarId.676596* %.14)
  %.18 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 7
  %.19 = load i1, i1* %.18, align 1
  br i1 %.19, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  call void @LLVMSetLinkage(%LLVMValueRef.676728* %.15, i64 0)
  ret void

.4.endif:                                         ; preds = %.4
  %0 = ptrtoint %LLVMValueRef.676728* %.15 to i64
  %.25 = trunc i64 %0 to i32
  %.27 = icmp eq i32 %.25, 0
  br i1 %.27, label %.4.endif.if, label %.4.endif.endif

.4.endif.if:                                      ; preds = %.4.endif
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %string.676378*
  %.30.repack = bitcast i8* %.29 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.30.repack, align 8
  %.30.repack1 = getelementptr inbounds i8, i8* %.29, i64 8
  %1 = bitcast i8* %.30.repack1 to i8**
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.421, i64 0, i64 0), i8** %1, align 8
  %.30.repack2 = getelementptr inbounds i8, i8* %.29, i64 16
  %2 = bitcast i8* %.30.repack2 to i64*
  store i64 44, i64* %2, align 8
  %.30.repack3 = getelementptr inbounds i8, i8* %.29, i64 24
  %3 = bitcast i8* %.30.repack3 to i64*
  store i64 44, i64* %3, align 8
  call void @println(%string.676378* %.30)
  br label %.4.endif.endif

.4.endif.endif:                                   ; preds = %.4.endif.if, %.4.endif
  %.35 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.36 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.35, align 8
  %.38 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.36, %LLVMValueRef.676728* %.15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.42 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.35, align 8
  %.43 = call %LLVMBuilderRef.676733* @LLVMCreateBuilderInContext(%LLVMContextRef.676725* %.42)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.43, %LLVMBasicBlockRef.676729* %.38)
  %.53 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 3
  %.544 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.53, align 8
  %.555 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.544, i64 0, i32 2
  %.566 = load i64, i64* %.555, align 8
  %.577 = icmp sgt i64 %.566, 0
  br i1 %.577, label %for.body, label %for.end

for.body:                                         ; preds = %.4.endif.endif, %for.body
  %.549 = phi %"Array<FunctionArg>.676658"* [ %.54, %for.body ], [ %.544, %.4.endif.endif ]
  %storemerge8 = phi i64 [ %.111, %for.body ], [ 0, %.4.endif.endif ]
  %.63 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.549, i64 0, i32 0
  %.64 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.63, align 8
  %.65 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.64, i64 0, i32 5
  %.66 = load %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)** %.65, align 8
  %.67 = call %FunctionArg.676654* %.66(%"Array<FunctionArg>.676658"* %.549, i64 %storemerge8)
  %.71 = call %LLVMValueRef.676728* @LLVMGetParam(%LLVMValueRef.676728* %.15, i64 %storemerge8)
  %.76 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.77 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.76, i64 0, i32 14
  %.78 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.77, align 8
  %.80 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.67, i64 0, i32 4
  %.81 = load %Type.676538*, %Type.676538** %.80, align 8
  %.82 = call %LLVMTypeRef.676727* %.78(%CodeGen.676780* %.1, %Type.676538* %.81, i1 true)
  %.84 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.67, i64 0, i32 6
  %.85 = load %string.676378*, %string.676378** %.84, align 8
  %.86 = getelementptr inbounds %string.676378, %string.676378* %.85, i64 0, i32 0
  %.87 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.86, align 8
  %.88 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.87, i64 0, i32 11
  %.89 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.88, align 8
  %.90 = call i8* %.89(%string.676378* %.85)
  %.91 = call %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733* %.43, %LLVMTypeRef.676727* %.82, i8* %.90)
  %.96 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.43, %LLVMValueRef.676728* %.71, %LLVMValueRef.676728* %.91)
  %.99 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.100 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.99, i64 0, i32 9
  %.101 = load void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)** %.100, align 8
  %.103 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.67, i64 0, i32 5
  %.104 = load %VarId.676596*, %VarId.676596** %.103, align 8
  call void %.101(%CodeGen.676780* %.1, %VarId.676596* %.104, %LLVMValueRef.676728* %.91)
  %.111 = add nuw nsw i64 %storemerge8, 1
  %.54 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.53, align 8
  %.55 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.54, i64 0, i32 2
  %.56 = load i64, i64* %.55, align 8
  %.57 = icmp slt i64 %.111, %.56
  br i1 %.57, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.4.endif.endif
  %.116 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 8
  store %LLVMValueRef.676728* %.15, %LLVMValueRef.676728** %.116, align 8
  %.120 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.8, align 8
  %.121 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.120, i64 0, i32 53
  %.122 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)** %.121, align 8
  %.125 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 4
  %.126 = load %Block.676610*, %Block.676610** %.125, align 8
  call void %.122(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.43, %Block.676610* %.126)
  call void @LLVMDisposeBuilder(%LLVMBuilderRef.676733* %.43)
  ret void
}

define void @CodeGen_codegen_class(%CodeGen.676780* %.1, %Class.676668* nocapture readonly %.2) {
.4:
  %.12 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 6
  %.1322 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.12, align 8
  %.1423 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.1322, i64 0, i32 2
  %.1524 = load i64, i64* %.1423, align 8
  %.1625 = icmp sgt i64 %.1524, 0
  br i1 %.1625, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.19 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.24 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 1
  %0 = bitcast %ClassId.676554** %.24 to %TypeId.676552**
  %.72 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.75 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.113 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.145 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.277 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 8
  %1 = bitcast %LLVMValueRef.676728** %.277 to i64*
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge26 = phi i64 [ 0, %for.body.lr.ph ], [ %.295, %for.incr ]
  %.20 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.19, align 8
  %.21 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.20, i64 0, i32 3
  %.22 = load %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)** %.21, align 8
  %.253 = load %TypeId.676552*, %TypeId.676552** %0, align 8
  %.27 = call %CGClassType.676760* %.22(%CodeGen.676780* %.1, %TypeId.676552* %.253)
  %.32 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.12, align 8
  %.33 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.32, i64 0, i32 0
  %.34 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.33, align 8
  %.35 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.34, i64 0, i32 5
  %.36 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.35, align 8
  %.37 = call %ClassMethod.676666* %.36(%"Array<ClassMethod>.676671"* %.32, i64 %storemerge26)
  %method = alloca %ClassMethod.676666*, align 8
  store %ClassMethod.676666* %.37, %ClassMethod.676666** %method, align 8
  %.40 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.37, i64 0, i32 8
  %.41 = load i1, i1* %.40, align 1
  br i1 %.41, label %for.incr, label %for.body.endif

for.incr:                                         ; preds = %for.body, %for.end.1
  %.295 = add nuw nsw i64 %storemerge26, 1
  %.13 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.12, align 8
  %.14 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.13, i64 0, i32 2
  %.15 = load i64, i64* %.14, align 8
  %.16 = icmp slt i64 %.295, %.15
  br i1 %.16, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.4
  ret void

for.body.endif:                                   ; preds = %for.body
  %.45 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.37, i64 0, i32 1
  %.46 = load %PropId.676604*, %PropId.676604** %.45, align 8
  %.47 = call %string.676378* @create_prop_key(%PropId.676604* %.46)
  %.50 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.27, i64 0, i32 4
  %.51 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.50, align 8
  %.52 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.51, i64 0, i32 0
  %.53 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.52, align 8
  %.54 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.53, i64 0, i32 3
  %.55 = load %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)*, %LLVMValueRef.676728* (%"Map<string, LLVMValueRef>.676763"*, %string.676378*)** %.54, align 8
  %.57 = call %LLVMValueRef.676728* %.55(%"Map<string, LLVMValueRef>.676763"* %.51, %string.676378* %.47)
  %llvm_fnc = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* %.57, %LLVMValueRef.676728** %llvm_fnc, align 8
  %.60 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.37, i64 0, i32 4
  %.61 = load %string.676378*, %string.676378** %.60, align 8
  %.62 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.63 = bitcast i8* %.62 to %string.676378*
  %.63.repack = bitcast i8* %.62 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.63.repack, align 8
  %.63.repack4 = getelementptr inbounds i8, i8* %.62, i64 8
  %2 = bitcast i8* %.63.repack4 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.300, i64 0, i64 0), i8** %2, align 8
  %.63.repack5 = getelementptr inbounds i8, i8* %.62, i64 16
  %3 = bitcast i8* %.63.repack5 to i64*
  store i64 11, i64* %3, align 8
  %.63.repack6 = getelementptr inbounds i8, i8* %.62, i64 24
  %4 = bitcast i8* %.63.repack6 to i64*
  store i64 11, i64* %4, align 8
  %.65 = getelementptr inbounds %string.676378, %string.676378* %.61, i64 0, i32 0
  %.66 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.65, align 8
  %.67 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.66, i64 0, i32 4
  %.68 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.67, align 8
  %.69 = call i1 %.68(%string.676378* %.61, %string.676378* %.63)
  %.73 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.72, align 8
  %.76 = load %string.676378*, %string.676378** %.75, align 8
  %.79 = load %string.676378*, %string.676378** %.60, align 8
  %.80 = getelementptr inbounds %string.676378, %string.676378* %.76, i64 0, i32 0
  %.81 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.80, align 8
  %.82 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.81, i64 0, i32 11
  %.83 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.82, align 8
  %.84 = call i8* %.83(%string.676378* %.76)
  %.85 = getelementptr inbounds %string.676378, %string.676378* %.79, i64 0, i32 0
  %.86 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.85, align 8
  %.87 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.86, i64 0, i32 11
  %.88 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.87, align 8
  %.89 = call i8* %.88(%string.676378* %.79)
  %.91 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.84, i8* %.89)
  %.93 = call i8* @malloc(i64 %.91)
  %.94 = call i64 (i8*, i8*, ...) @sprintf(i8* %.93, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.84, i8* %.89)
  %.95 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.96 = bitcast i8* %.95 to %string.676378*
  %.97 = bitcast i8* %.95 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.97, align 8
  %.99 = getelementptr inbounds i8, i8* %.95, i64 8
  %5 = bitcast i8* %.99 to i8**
  store i8* %.93, i8** %5, align 8
  %.101 = getelementptr inbounds i8, i8* %.95, i64 16
  %6 = bitcast i8* %.101 to i64*
  store i64 %.91, i64* %6, align 8
  %.103 = getelementptr inbounds i8, i8* %.95, i64 24
  %7 = bitcast i8* %.103 to i64*
  store i64 %.91, i64* %7, align 8
  %.108 = load i8* (%string.676378*)*, i8* (%string.676378*)** getelementptr inbounds (%string_vtable_ty.676379, %string_vtable_ty.676379* @string_vtable_data, i64 0, i32 11), align 8
  %.109 = call i8* %.108(%string.676378* %.96)
  %.110 = call %LLVMValueRef.676728* @LLVMGetNamedFunction(%LLVMModuleRef.676726* %.73, i8* %.109)
  store %LLVMValueRef.676728* %.110, %LLVMValueRef.676728** %llvm_fnc, align 8
  %.114 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.113, align 8
  %.116 = call %LLVMBasicBlockRef.676729* @LLVMAppendBasicBlockInContext(%LLVMContextRef.676725* %.114, %LLVMValueRef.676728* %.110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.120 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.113, align 8
  %.121 = call %LLVMBuilderRef.676733* @LLVMCreateBuilderInContext(%LLVMContextRef.676725* %.120)
  call void @LLVMPositionBuilderAtEnd(%LLVMBuilderRef.676733* %.121, %LLVMBasicBlockRef.676729* %.116)
  %offset = alloca i64, align 8
  store i64 0, i64* %offset, align 8
  %.128 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.37, i64 0, i32 2
  %.129 = load i1, i1* %.128, align 1
  br i1 %.129, label %for.entry.1, label %for.body.endif.if

for.body.endif.if:                                ; preds = %for.body.endif
  %.133 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.27, i64 0, i32 1
  %.134 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.133, align 8
  %.135 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.134, i64 0)
  %.138 = call %LLVMValueRef.676728* @LLVMGetParam(%LLVMValueRef.676728* %.110, i64 0)
  %.142 = call %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733* %.121, %LLVMTypeRef.676727* %.135, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.181, i64 0, i64 0))
  %.146 = load %Program.676712*, %Program.676712** %.145, align 8
  %.148 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.37, i64 0, i32 9
  %.149 = load %ScopeId.676626*, %ScopeId.676626** %.148, align 8
  %.150 = call %Scope.676628* @get_scope(%Program.676712* %.146, %ScopeId.676626* %.149)
  %.151 = getelementptr inbounds %Scope.676628, %Scope.676628* %.150, i64 0, i32 2
  %.152 = load %"Map<string, VarId>.676630"*, %"Map<string, VarId>.676630"** %.151, align 8
  %.153 = getelementptr inbounds %"Map<string, VarId>.676630", %"Map<string, VarId>.676630"* %.152, i64 0, i32 0
  %.154 = load %"Map<string, VarId>_vtable_ty.676634"*, %"Map<string, VarId>_vtable_ty.676634"** %.153, align 8
  %.155 = getelementptr inbounds %"Map<string, VarId>_vtable_ty.676634", %"Map<string, VarId>_vtable_ty.676634"* %.154, i64 0, i32 3
  %.156 = load %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)*, %VarId.676596* (%"Map<string, VarId>.676630"*, %string.676378*)** %.155, align 8
  %.157 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.158 = bitcast i8* %.157 to %string.676378*
  %.158.repack = bitcast i8* %.157 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.158.repack, align 8
  %.158.repack9 = getelementptr inbounds i8, i8* %.157, i64 8
  %8 = bitcast i8* %.158.repack9 to i8**
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.181, i64 0, i64 0), i8** %8, align 8
  %.158.repack10 = getelementptr inbounds i8, i8* %.157, i64 16
  %9 = bitcast i8* %.158.repack10 to i64*
  store i64 4, i64* %9, align 8
  %.158.repack11 = getelementptr inbounds i8, i8* %.157, i64 24
  %10 = bitcast i8* %.158.repack11 to i64*
  store i64 4, i64* %10, align 8
  %.160 = call %VarId.676596* %.156(%"Map<string, VarId>.676630"* %.152, %string.676378* %.158)
  %.165 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.121, %LLVMValueRef.676728* %.138, %LLVMValueRef.676728* %.142)
  %.168 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.27, i64 0, i32 5
  %11 = bitcast %LLVMValueRef.676728** %.168 to i64*
  %.16912 = load i64, i64* %11, align 8
  %.170 = trunc i64 %.16912 to i32
  %.172 = icmp ne i32 %.170, 0
  %.173 = and i1 %.69, %.172
  br i1 %.173, label %for.body.endif.if.if, label %for.body.endif.if.endif

for.body.endif.if.if:                             ; preds = %for.body.endif.if
  %.177 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.19, align 8
  %.178 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.177, i64 0, i32 11
  %.179 = load %LLVMValueRef.676728* (%CodeGen.676780*, i64)*, %LLVMValueRef.676728* (%CodeGen.676780*, i64)** %.178, align 8
  %.180 = call %LLVMValueRef.676728* %.179(%CodeGen.676780* %.1, i64 0)
  %index = alloca [1 x %LLVMValueRef.676728*], align 8
  %.181 = getelementptr inbounds [1 x %LLVMValueRef.676728*], [1 x %LLVMValueRef.676728*]* %index, i64 0, i64 0
  store %LLVMValueRef.676728* %.180, %LLVMValueRef.676728** %.181, align 8
  %.188 = call %LLVMValueRef.676728* @LLVMBuildInBoundsGEP2(%LLVMBuilderRef.676733* %.121, %LLVMTypeRef.676727* %.135, %LLVMValueRef.676728* %.138, %LLVMValueRef.676728** nonnull %.181, i64 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0))
  %.193 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.168, align 8
  %.195 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.121, %LLVMValueRef.676728* %.193, %LLVMValueRef.676728* %.188)
  br label %for.body.endif.if.endif

for.body.endif.if.endif:                          ; preds = %for.body.endif.if.if, %for.body.endif.if
  %.199 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.19, align 8
  %.200 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.199, i64 0, i32 9
  %.201 = load void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)** %.200, align 8
  call void %.201(%CodeGen.676780* %.1, %VarId.676596* %.160, %LLVMValueRef.676728* %.142)
  store i64 1, i64* %offset, align 8
  br label %for.entry.1

for.entry.1:                                      ; preds = %for.body.endif.if.endif, %for.body.endif
  %.21114 = load %ClassMethod.676666*, %ClassMethod.676666** %method, align 8
  %.21215 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.21114, i64 0, i32 7
  %.21316 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.21215, align 8
  %.21417 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.21316, i64 0, i32 2
  %.21518 = load i64, i64* %.21417, align 8
  %.21619 = icmp sgt i64 %.21518, 0
  br i1 %.21619, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.entry.1
  %.230 = load i64, i64* %offset, align 8
  %.211 = load %ClassMethod.676666*, %ClassMethod.676666** %method, align 8
  %.212 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.211, i64 0, i32 7
  br label %for.body.1

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.21321 = phi %"Array<FunctionArg>.676658"* [ %.21316, %for.body.1.lr.ph ], [ %.213, %for.body.1 ]
  %storemerge720 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.272, %for.body.1 ]
  %.222 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.21321, i64 0, i32 0
  %.223 = load %"Array<FunctionArg>_vtable_ty.676659"*, %"Array<FunctionArg>_vtable_ty.676659"** %.222, align 8
  %.224 = getelementptr inbounds %"Array<FunctionArg>_vtable_ty.676659", %"Array<FunctionArg>_vtable_ty.676659"* %.223, i64 0, i32 5
  %.225 = load %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)*, %FunctionArg.676654* (%"Array<FunctionArg>.676658"*, i64)** %.224, align 8
  %.226 = call %FunctionArg.676654* %.225(%"Array<FunctionArg>.676658"* %.21321, i64 %storemerge720)
  %.231 = add i64 %.230, %storemerge720
  %.232 = call %LLVMValueRef.676728* @LLVMGetParam(%LLVMValueRef.676728* %.110, i64 %.231)
  %.237 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.19, align 8
  %.238 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.237, i64 0, i32 14
  %.239 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.238, align 8
  %.241 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.226, i64 0, i32 4
  %.242 = load %Type.676538*, %Type.676538** %.241, align 8
  %.243 = call %LLVMTypeRef.676727* %.239(%CodeGen.676780* %.1, %Type.676538* %.242, i1 true)
  %.245 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.226, i64 0, i32 6
  %.246 = load %string.676378*, %string.676378** %.245, align 8
  %.247 = getelementptr inbounds %string.676378, %string.676378* %.246, i64 0, i32 0
  %.248 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.247, align 8
  %.249 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.248, i64 0, i32 11
  %.250 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.249, align 8
  %.251 = call i8* %.250(%string.676378* %.246)
  %.252 = call %LLVMValueRef.676728* @LLVMBuildAlloca(%LLVMBuilderRef.676733* %.121, %LLVMTypeRef.676727* %.243, i8* %.251)
  %.257 = call %LLVMValueRef.676728* @LLVMBuildStore(%LLVMBuilderRef.676733* %.121, %LLVMValueRef.676728* %.232, %LLVMValueRef.676728* %.252)
  %.260 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.19, align 8
  %.261 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.260, i64 0, i32 9
  %.262 = load void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)** %.261, align 8
  %.264 = getelementptr inbounds %FunctionArg.676654, %FunctionArg.676654* %.226, i64 0, i32 5
  %.265 = load %VarId.676596*, %VarId.676596** %.264, align 8
  call void %.262(%CodeGen.676780* %.1, %VarId.676596* %.265, %LLVMValueRef.676728* %.252)
  %.272 = add nuw nsw i64 %storemerge720, 1
  %.213 = load %"Array<FunctionArg>.676658"*, %"Array<FunctionArg>.676658"** %.212, align 8
  %.214 = getelementptr inbounds %"Array<FunctionArg>.676658", %"Array<FunctionArg>.676658"* %.213, i64 0, i32 2
  %.215 = load i64, i64* %.214, align 8
  %.216 = icmp slt i64 %.272, %.215
  br i1 %.216, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.entry.1
  %.211.lcssa = phi %ClassMethod.676666* [ %.21114, %for.entry.1 ], [ %.211, %for.body.1 ]
  %12 = bitcast %LLVMValueRef.676728** %llvm_fnc to i64*
  %.2768 = load i64, i64* %12, align 8
  store i64 %.2768, i64* %1, align 8
  %.281 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.19, align 8
  %.282 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.281, i64 0, i32 53
  %.283 = load void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)*, void (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Block.676610*)** %.282, align 8
  %.286 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.211.lcssa, i64 0, i32 6
  %.287 = load %Block.676610*, %Block.676610** %.286, align 8
  call void %.283(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* %.121, %Block.676610* %.287)
  call void @LLVMDisposeBuilder(%LLVMBuilderRef.676733* %.121)
  br label %for.incr
}

define void @CodeGen_declare_function(%CodeGen.676780* %.1, %Function.676656* nocapture readonly %.2) {
.4:
  %.8 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 2
  %.9 = load %string.676378*, %string.676378** %.8, align 8
  %.10 = getelementptr inbounds %string.676378, %string.676378* %.9, i64 0, i32 0
  %.11 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.10, align 8
  %.12 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.11, i64 0, i32 11
  %.13 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.12, align 8
  %.14 = call i8* %.13(%string.676378* %.9)
  %.17 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.18 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.17, align 8
  %.20 = call %LLVMValueRef.676728* @LLVMGetNamedFunction(%LLVMModuleRef.676726* %.18, i8* %.14)
  %0 = ptrtoint %LLVMValueRef.676728* %.20 to i64
  %.23 = trunc i64 %0 to i32
  %.25 = icmp eq i32 %.23, 0
  br i1 %.25, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.29 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.17, align 8
  %.32 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.33 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.32, align 8
  %.34 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.33, i64 0, i32 14
  %.35 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.34, align 8
  %.37 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 5
  %1 = bitcast %FunctionType.676544** %.37 to %Type.676538**
  %.381 = load %Type.676538*, %Type.676538** %1, align 8
  %.40 = call %LLVMTypeRef.676727* %.35(%CodeGen.676780* %.1, %Type.676538* %.381, i1 false)
  %.41 = call %LLVMValueRef.676728* @LLVMAddFunction(%LLVMModuleRef.676726* %.29, i8* %.14, %LLVMTypeRef.676727* %.40)
  br label %.4.endif

.4.endif:                                         ; preds = %.4.if, %.4
  %llvm_fnc.0 = phi %LLVMValueRef.676728* [ %.41, %.4.if ], [ %.20, %.4 ]
  %.45 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.46 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.45, align 8
  %.47 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.46, i64 0, i32 9
  %.48 = load void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)*, void (%CodeGen.676780*, %VarId.676596*, %LLVMValueRef.676728*)** %.47, align 8
  %.50 = getelementptr inbounds %Function.676656, %Function.676656* %.2, i64 0, i32 1
  %.51 = load %VarId.676596*, %VarId.676596** %.50, align 8
  call void %.48(%CodeGen.676780* %.1, %VarId.676596* %.51, %LLVMValueRef.676728* %llvm_fnc.0)
  ret void
}

define %LLVMValueRef.676728* @CodeGen_declare_method(%CodeGen.676780* nocapture readonly %.1, %string.676378* %.2, %LLVMTypeRef.676727* %.3) {
.5:
  %.10 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.11 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.10, align 8
  %.13 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.14 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.13, align 8
  %.15 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.14, i64 0, i32 11
  %.16 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.15, align 8
  %.17 = call i8* %.16(%string.676378* %.2)
  %.19 = call %LLVMValueRef.676728* @LLVMAddFunction(%LLVMModuleRef.676726* %.11, i8* %.17, %LLVMTypeRef.676727* %.3)
  ret %LLVMValueRef.676728* %.19
}

define void @CodeGen_declare_static_props(%CodeGen.676780* %.1, %CGClassType.676760* nocapture readonly %.2, %Class.676668* nocapture readonly %.3, i1 %.4) {
.6:
  %.12 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 8
  %.13 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.12, align 8
  %.14 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.13, i64 0, i32 0
  %.15 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.14, align 8
  %.16 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.15, i64 0, i32 4
  %.17 = load %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)*, %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)** %.16, align 8
  %.18 = call %"Array<Bucket<string, PropId>>.676678"* %.17(%"Map<string, PropId>.676672"* %.13)
  %.25 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.18, i64 0, i32 2
  %.265 = load i64, i64* %.25, align 8
  %.276 = icmp sgt i64 %.265, 0
  br i1 %.276, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.6
  %.31 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.18, i64 0, i32 0
  %.43 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.59 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.67 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 2
  %.113 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.137 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 5
  %.153 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.2, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.166, %for.incr ]
  %.32 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.31, align 8
  %.33 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.32, i64 0, i32 5
  %.34 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.33, align 8
  %.35 = call %"Bucket<string, PropId>.676676"* %.34(%"Array<Bucket<string, PropId>>.676678"* %.18, i64 %storemerge7)
  %.36 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.35, i64 0, i32 2
  %0 = bitcast %PropId.676604** %.36 to i64*
  %.371 = load i64, i64* %0, align 8
  %.39.cast = inttoptr i64 %.371 to %PropId.676604*
  %.40 = call %string.676378* @create_prop_key(%PropId.676604* %.39.cast)
  %.44 = load %Program.676712*, %Program.676712** %.43, align 8
  %.45.cast = inttoptr i64 %.371 to %PropId.676604*
  %.46 = call %Type.676538* @get_class_prop_type(%Program.676712* %.44, %PropId.676604* %.45.cast)
  %.51 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.31, align 8
  %.52 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.51, i64 0, i32 5
  %.53 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.52, align 8
  %.54 = call %"Bucket<string, PropId>.676676"* %.53(%"Array<Bucket<string, PropId>>.676678"* %.18, i64 %storemerge7)
  %.55 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.54, i64 0, i32 1
  %.5628 = load %string.676378*, %string.676378** %.55, align 8
  %.60 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.59, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.60, i64 0, i32 14
  %.62 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.61, align 8
  %.64 = call %LLVMTypeRef.676727* %.62(%CodeGen.676780* %.1, %Type.676538* %.46, i1 false)
  %.68 = load %string.676378*, %string.676378** %.67, align 8
  %.70 = getelementptr inbounds %string.676378, %string.676378* %.68, i64 0, i32 0
  %.71 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.70, align 8
  %.72 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.71, i64 0, i32 11
  %.73 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.72, align 8
  %.74 = call i8* %.73(%string.676378* %.68)
  %.75 = getelementptr inbounds %string.676378, %string.676378* %.5628, i64 0, i32 0
  %.76 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.75, align 8
  %.77 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.76, i64 0, i32 11
  %.78 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.77, align 8
  %.79 = call i8* %.78(%string.676378* %.5628)
  %.81 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.74, i8* %.79)
  %.83 = call i8* @malloc(i64 %.81)
  %.84 = call i64 (i8*, i8*, ...) @sprintf(i8* %.83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.74, i8* %.79)
  %.85 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.87 = bitcast i8* %.85 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.87, align 8
  %.89 = getelementptr inbounds i8, i8* %.85, i64 8
  %1 = bitcast i8* %.89 to i8**
  store i8* %.83, i8** %1, align 8
  %.91 = getelementptr inbounds i8, i8* %.85, i64 16
  %2 = bitcast i8* %.91 to i64*
  store i64 %.81, i64* %2, align 8
  %.93 = getelementptr inbounds i8, i8* %.85, i64 24
  %3 = bitcast i8* %.93 to i64*
  store i64 %.81, i64* %3, align 8
  %static_prop_name_concat = alloca %string.676378*, align 8
  %4 = bitcast %string.676378** %static_prop_name_concat to i8**
  store i8* %.85, i8** %4, align 8
  %static_prop_value = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* null, %LLVMValueRef.676728** %static_prop_value, align 8
  %.98 = getelementptr inbounds %PropId.676604, %PropId.676604* %.45.cast, i64 0, i32 1
  %.99 = load i64, i64* %.98, align 8
  %.100 = icmp eq i64 %.99, 0
  br i1 %.100, label %for.body.if, label %for.body.else

for.incr:                                         ; preds = %for.body.else, %for.body.endif
  %.166 = add nuw nsw i64 %storemerge7, 1
  %.26 = load i64, i64* %.25, align 8
  %.27 = icmp slt i64 %.166, %.26
  br i1 %.27, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.6
  ret void

for.body.if:                                      ; preds = %for.body
  %.104 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.59, align 8
  %.105 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.104, i64 0, i32 57
  %.106 = load %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)** %.105, align 8
  %.107 = load %string.676378*, %string.676378** %static_prop_name_concat, align 8
  %.109 = call %LLVMValueRef.676728* %.106(%CodeGen.676780* %.1, %string.676378* %.107, %LLVMTypeRef.676727* %.64)
  store %LLVMValueRef.676728* %.109, %LLVMValueRef.676728** %static_prop_value, align 8
  br label %for.body.endif

for.body.else:                                    ; preds = %for.body
  %.114 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.113, align 8
  %.116 = load %string.676378*, %string.676378** %static_prop_name_concat, align 8
  %.117 = getelementptr inbounds %string.676378, %string.676378* %.116, i64 0, i32 0
  %.118 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.117, align 8
  %.119 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.118, i64 0, i32 11
  %.120 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.119, align 8
  %.121 = call i8* %.120(%string.676378* %.116)
  %.122 = call %LLVMValueRef.676728* @LLVMAddGlobal(%LLVMModuleRef.676726* %.114, %LLVMTypeRef.676727* %.64, i8* %.121)
  store %LLVMValueRef.676728* %.122, %LLVMValueRef.676728** %static_prop_value, align 8
  br i1 %.4, label %for.body.else.endif, label %for.incr

for.body.endif:                                   ; preds = %for.body.else.endif, %for.body.if
  %.154 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.153, align 8
  %.155 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.154, i64 0, i32 0
  %.156 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.155, align 8
  %.157 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.156, i64 0, i32 2
  %.158 = load void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)*, void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)** %.157, align 8
  %.160 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %static_prop_value, align 8
  call void %.158(%"Map<string, LLVMValueRef>.676763"* %.154, %string.676378* %.40, %LLVMValueRef.676728* %.160)
  br label %for.incr

for.body.else.endif:                              ; preds = %for.body.else
  %.130 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.59, align 8
  %.131 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.130, i64 0, i32 44
  %.132 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.131, align 8
  %.134 = getelementptr inbounds %PropId.676604, %PropId.676604* %.45.cast, i64 0, i32 3
  %.135 = load i64, i64* %.134, align 8
  %.138 = load %"Array<ClassField>.676670"*, %"Array<ClassField>.676670"** %.137, align 8
  %.139 = getelementptr inbounds %"Array<ClassField>.676670", %"Array<ClassField>.676670"* %.138, i64 0, i32 0
  %.140 = load %"Array<ClassField>_vtable_ty.676673"*, %"Array<ClassField>_vtable_ty.676673"** %.139, align 8
  %.141 = getelementptr inbounds %"Array<ClassField>_vtable_ty.676673", %"Array<ClassField>_vtable_ty.676673"* %.140, i64 0, i32 5
  %.142 = load %ClassField.676664* (%"Array<ClassField>.676670"*, i64)*, %ClassField.676664* (%"Array<ClassField>.676670"*, i64)** %.141, align 8
  %.143 = call %ClassField.676664* %.142(%"Array<ClassField>.676670"* %.138, i64 %.135)
  %.144 = getelementptr inbounds %ClassField.676664, %ClassField.676664* %.143, i64 0, i32 6
  %.145 = load %Expression.676558*, %Expression.676558** %.144, align 8
  %.146 = call %LLVMValueRef.676728* %.132(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* null, %Expression.676558* %.145)
  call void @LLVMSetInitializer(%LLVMValueRef.676728* %.122, %LLVMValueRef.676728* %.146)
  br label %for.body.endif
}

define void @CodeGen_declare_class_props(%CodeGen.676780* %.1, %CGClassType.676760* nocapture %.2, %Class.676668* nocapture readonly %.3, %"Array<LLVMTypeRef>.676776"* %.4, i1 %.5) {
.7:
  %.14 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 7
  %.15 = load %"Map<string, PropId>.676672"*, %"Map<string, PropId>.676672"** %.14, align 8
  %.16 = getelementptr inbounds %"Map<string, PropId>.676672", %"Map<string, PropId>.676672"* %.15, i64 0, i32 0
  %.17 = load %"Map<string, PropId>_vtable_ty.676675"*, %"Map<string, PropId>_vtable_ty.676675"** %.16, align 8
  %.18 = getelementptr inbounds %"Map<string, PropId>_vtable_ty.676675", %"Map<string, PropId>_vtable_ty.676675"* %.17, i64 0, i32 4
  %.19 = load %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)*, %"Array<Bucket<string, PropId>>.676678"* (%"Map<string, PropId>.676672"*)** %.18, align 8
  %.20 = call %"Array<Bucket<string, PropId>>.676678"* %.19(%"Map<string, PropId>.676672"* %.15)
  %.23 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.25 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.26 = bitcast i8* %.25 to %"Array<LLVMValueRef>.676778"*
  %.27 = bitcast i8* %.25 to %"Array<LLVMValueRef>_vtable_ty.676779"**
  store %"Array<LLVMValueRef>_vtable_ty.676779"* @"Array<LLVMValueRef>_vtable_data", %"Array<LLVMValueRef>_vtable_ty.676779"** %.27, align 8
  %.29 = getelementptr inbounds i8, i8* %.25, i64 8
  %0 = bitcast i8* %.29 to i8**
  store i8* %.23, i8** %0, align 8
  %.31 = getelementptr inbounds i8, i8* %.25, i64 16
  %1 = bitcast i8* %.31 to i64*
  store i64 0, i64* %1, align 8
  %.33 = getelementptr inbounds i8, i8* %.25, i64 24
  %2 = bitcast i8* %.33 to i64*
  store i64 8, i64* %2, align 8
  %.37 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %"Array<LLVMTypeRef>.676776"*
  %.41 = bitcast i8* %.39 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.41, align 8
  %.43 = getelementptr inbounds i8, i8* %.39, i64 8
  %3 = bitcast i8* %.43 to i8**
  store i8* %.37, i8** %3, align 8
  %.45 = getelementptr inbounds i8, i8* %.39, i64 16
  %4 = bitcast i8* %.45 to i64*
  store i64 0, i64* %4, align 8
  %.47 = getelementptr inbounds i8, i8* %.39, i64 24
  %5 = bitcast i8* %.47 to i64*
  store i64 8, i64* %5, align 8
  %.51 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.53 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.54 = bitcast i8* %.53 to %"Array<LLVMTypeRef>.676776"*
  %.55 = bitcast i8* %.53 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.55, align 8
  %.57 = getelementptr inbounds i8, i8* %.53, i64 8
  %6 = bitcast i8* %.57 to i8**
  store i8* %.51, i8** %6, align 8
  %.59 = getelementptr inbounds i8, i8* %.53, i64 16
  %7 = bitcast i8* %.59 to i64*
  store i64 0, i64* %7, align 8
  %.61 = getelementptr inbounds i8, i8* %.53, i64 24
  %8 = bitcast i8* %.61 to i64*
  store i64 8, i64* %8, align 8
  %.69 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.20, i64 0, i32 2
  %.7029 = load i64, i64* %.69, align 8
  %.7130 = icmp sgt i64 %.7029, 0
  br i1 %.7130, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.7
  %.75 = getelementptr inbounds %"Array<Bucket<string, PropId>>.676678", %"Array<Bucket<string, PropId>>.676678"* %.20, i64 0, i32 0
  %.87 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.152 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 1
  %9 = bitcast %ClassId.676554** %.152 to i64*
  %.311 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.331 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.230 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.242 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 6
  %.259 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 2
  %.369 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.2, i64 0, i32 2
  %.385 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 6
  %.299 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.2, i64 0, i32 4
  %.114 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.122 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.2, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %storemerge31 = phi i64 [ 0, %for.body.lr.ph ], [ %.422, %for.incr ]
  %.76 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.75, align 8
  %.77 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.76, i64 0, i32 5
  %.78 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.77, align 8
  %.79 = call %"Bucket<string, PropId>.676676"* %.78(%"Array<Bucket<string, PropId>>.676678"* %.20, i64 %storemerge31)
  %.80 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.79, i64 0, i32 2
  %10 = bitcast %PropId.676604** %.80 to i64*
  %.813 = load i64, i64* %10, align 8
  %.83.cast = inttoptr i64 %.813 to %PropId.676604*
  %.84 = call %string.676378* @create_prop_key(%PropId.676604* %.83.cast)
  %.88 = load %Program.676712*, %Program.676712** %.87, align 8
  %.89.cast = inttoptr i64 %.813 to %PropId.676604*
  %.90 = call %Type.676538* @get_class_prop_type(%Program.676712* %.88, %PropId.676604* %.89.cast)
  %prop_type = alloca %Type.676538*, align 8
  store %Type.676538* %.90, %Type.676538** %prop_type, align 8
  %.95 = load %"Array<Bucket<string, PropId>>_vtable_ty.676679"*, %"Array<Bucket<string, PropId>>_vtable_ty.676679"** %.75, align 8
  %.96 = getelementptr inbounds %"Array<Bucket<string, PropId>>_vtable_ty.676679", %"Array<Bucket<string, PropId>>_vtable_ty.676679"* %.95, i64 0, i32 5
  %.97 = load %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)*, %"Bucket<string, PropId>.676676"* (%"Array<Bucket<string, PropId>>.676678"*, i64)** %.96, align 8
  %.98 = call %"Bucket<string, PropId>.676676"* %.97(%"Array<Bucket<string, PropId>>.676678"* %.20, i64 %storemerge31)
  %.99 = getelementptr inbounds %"Bucket<string, PropId>.676676", %"Bucket<string, PropId>.676676"* %.98, i64 0, i32 1
  %11 = bitcast %string.676378** %.99 to i64*
  %.1004 = load i64, i64* %11, align 8
  %prop_name = alloca %string.676378*, align 8
  %12 = bitcast %string.676378** %prop_name to i64*
  store i64 %.1004, i64* %12, align 8
  %.104 = load %Program.676712*, %Program.676712** %.87, align 8
  %.106 = call i64 @get_vtable_index(%Program.676712* %.104, %PropId.676604* %.89.cast)
  %.109 = getelementptr inbounds %PropId.676604, %PropId.676604* %.89.cast, i64 0, i32 1
  %.110 = load i64, i64* %.109, align 8
  %.111 = icmp eq i64 %.110, 1
  br i1 %.111, label %for.body.if, label %for.body.else

for.incr:                                         ; preds = %for.body.if, %for.body.else.endif.endif, %for.body.else.if.endif.endif.if
  %.422 = add nuw nsw i64 %storemerge31, 1
  %.70 = load i64, i64* %.69, align 8
  %.71 = icmp slt i64 %.422, %.70
  br i1 %.71, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %.7
  %.427 = load i64, i64* %4, align 8
  %.428 = icmp sgt i64 %.427, 0
  br i1 %.428, label %for.end.if, label %for.entry.2

for.body.if:                                      ; preds = %for.body
  %.115 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.114, align 8
  %.116 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.115, i64 0, i32 14
  %.117 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.116, align 8
  %.119 = call %LLVMTypeRef.676727* %.117(%CodeGen.676780* %.1, %Type.676538* %.90, i1 true)
  %.123 = load %"Map<string, int>.676762"*, %"Map<string, int>.676762"** %.122, align 8
  %.124 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.123, i64 0, i32 0
  %.125 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.124, align 8
  %.126 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.125, i64 0, i32 2
  %.127 = load void (%"Map<string, int>.676762"*, %string.676378*, i64)*, void (%"Map<string, int>.676762"*, %string.676378*, i64)** %.126, align 8
  call void %.127(%"Map<string, int>.676762"* %.123, %string.676378* %.84, i64 %.106)
  call void @resize_type_array(%"Array<LLVMTypeRef>.676776"* %.54, i64 %.106)
  %.138 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.55, align 8
  %.139 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.138, i64 0, i32 3
  %.140 = load void (%"Array<LLVMTypeRef>.676776"*, i64, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, i64, %LLVMTypeRef.676727*)** %.139, align 8
  call void %.140(%"Array<LLVMTypeRef>.676776"* %.54, i64 %.106, %LLVMTypeRef.676727* %.119)
  br label %for.incr

for.body.else:                                    ; preds = %for.body
  %13 = bitcast %Type.676538** %prop_type to i64*
  %.14356 = load i64, i64* %13, align 8
  %method_type = alloca %FunctionType.676544*, align 8
  %14 = bitcast %FunctionType.676544** %method_type to i64*
  store i64 %.14356, i64* %14, align 8
  %llvm_method_val = alloca %LLVMValueRef.676728*, align 8
  store %LLVMValueRef.676728* null, %LLVMValueRef.676728** %llvm_method_val, align 8
  %llvm_method_type = alloca %LLVMTypeRef.676727*, align 8
  store %LLVMTypeRef.676727* null, %LLVMTypeRef.676727** %llvm_method_type, align 8
  %.149 = getelementptr inbounds %PropId.676604, %PropId.676604* %.89.cast, i64 0, i32 2
  %15 = bitcast %TypeId.676552** %.149 to i64*
  %.1507 = load i64, i64* %15, align 8
  %.1538 = load i64, i64* %9, align 8
  %.154 = trunc i64 %.1507 to i32
  %.155 = trunc i64 %.1538 to i32
  %.156 = icmp eq i32 %.154, %.155
  br i1 %.156, label %for.body.else.if, label %for.body.else.else

for.body.else.if:                                 ; preds = %for.body.else
  %.158 = load %FunctionType.676544*, %FunctionType.676544** %method_type, align 8
  %.159 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.158, i64 0, i32 4
  %.160 = load i1, i1* %.159, align 1
  br i1 %.160, label %for.body.else.if.endif, label %for.body.else.if.if

for.body.else.else:                               ; preds = %for.body.else
  %.312 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.311, align 8
  %.313 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.312, i64 0, i32 14
  %.314 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.313, align 8
  %16 = bitcast %FunctionType.676544** %method_type to %Type.676538**
  %.3159 = load %Type.676538*, %Type.676538** %16, align 8
  %.317 = call %LLVMTypeRef.676727* %.314(%CodeGen.676780* %.1, %Type.676538* %.3159, i1 false)
  store %LLVMTypeRef.676727* %.317, %LLVMTypeRef.676727** %llvm_method_type, align 8
  %.321 = load %Program.676712*, %Program.676712** %.87, align 8
  %17 = bitcast %TypeId.676552** %.149 to %ClassId.676554**
  %.32410 = load %ClassId.676554*, %ClassId.676554** %17, align 8
  %.326 = call %Class.676668* @get_class(%Program.676712* %.321, %ClassId.676554* %.32410)
  %.327 = getelementptr inbounds %Class.676668, %Class.676668* %.326, i64 0, i32 2
  %.3281112 = load %string.676378*, %string.676378** %.327, align 8
  %.332 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.331, align 8
  %.334 = load %string.676378*, %string.676378** %prop_name, align 8
  %.335 = getelementptr inbounds %string.676378, %string.676378* %.3281112, i64 0, i32 0
  %.336 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.335, align 8
  %.337 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.336, i64 0, i32 11
  %.338 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.337, align 8
  %.339 = call i8* %.338(%string.676378* %.3281112)
  %.340 = getelementptr inbounds %string.676378, %string.676378* %.334, i64 0, i32 0
  %.341 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.340, align 8
  %.342 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.341, i64 0, i32 11
  %.343 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.342, align 8
  %.344 = call i8* %.343(%string.676378* %.334)
  %.346 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.339, i8* %.344)
  %.348 = call i8* @malloc(i64 %.346)
  %.349 = call i64 (i8*, i8*, ...) @sprintf(i8* %.348, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.339, i8* %.344)
  %.350 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.351 = bitcast i8* %.350 to %string.676378*
  %.352 = bitcast i8* %.350 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.352, align 8
  %.354 = getelementptr inbounds i8, i8* %.350, i64 8
  %18 = bitcast i8* %.354 to i8**
  store i8* %.348, i8** %18, align 8
  %.356 = getelementptr inbounds i8, i8* %.350, i64 16
  %19 = bitcast i8* %.356 to i64*
  store i64 %.346, i64* %19, align 8
  %.358 = getelementptr inbounds i8, i8* %.350, i64 24
  %20 = bitcast i8* %.358 to i64*
  store i64 %.346, i64* %20, align 8
  %.363 = load i8* (%string.676378*)*, i8* (%string.676378*)** getelementptr inbounds (%string_vtable_ty.676379, %string_vtable_ty.676379* @string_vtable_data, i64 0, i32 11), align 8
  %.364 = call i8* %.363(%string.676378* %.351)
  %.365 = call %LLVMValueRef.676728* @LLVMGetNamedFunction(%LLVMModuleRef.676726* %.332, i8* %.364)
  store %LLVMValueRef.676728* %.365, %LLVMValueRef.676728** %llvm_method_val, align 8
  br label %for.body.else.endif

for.body.else.endif:                              ; preds = %for.body.else.if.endif.endif, %for.body.else.else
  %.370 = load %"Map<string, int>.676762"*, %"Map<string, int>.676762"** %.369, align 8
  %.371 = getelementptr inbounds %"Map<string, int>.676762", %"Map<string, int>.676762"* %.370, i64 0, i32 0
  %.372 = load %"Map<string, int>_vtable_ty.676764"*, %"Map<string, int>_vtable_ty.676764"** %.371, align 8
  %.373 = getelementptr inbounds %"Map<string, int>_vtable_ty.676764", %"Map<string, int>_vtable_ty.676764"* %.372, i64 0, i32 2
  %.374 = load void (%"Map<string, int>.676762"*, %string.676378*, i64)*, void (%"Map<string, int>.676762"*, %string.676378*, i64)** %.373, align 8
  call void %.374(%"Map<string, int>.676762"* %.370, %string.676378* %.84, i64 %.106)
  call void @resize_type_array(%"Array<LLVMTypeRef>.676776"* %.40, i64 %.106)
  %.382 = getelementptr inbounds %PropId.676604, %PropId.676604* %.89.cast, i64 0, i32 3
  %.383 = load i64, i64* %.382, align 8
  %.386 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.385, align 8
  %.387 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.386, i64 0, i32 0
  %.388 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.387, align 8
  %.389 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.388, i64 0, i32 5
  %.390 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.389, align 8
  %.391 = call %ClassMethod.676666* %.390(%"Array<ClassMethod>.676671"* %.386, i64 %.383)
  %.392 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.391, i64 0, i32 8
  %.393 = load i1, i1* %.392, align 1
  br i1 %.393, label %for.body.else.endif.endif, label %for.body.else.endif.if

for.body.else.if.if:                              ; preds = %for.body.else.if
  %.165 = load %ClassId.676554*, %ClassId.676554** %.152, align 8
  %.166 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.167 = bitcast i8* %.166 to %ObjectType.676562*
  %.168 = bitcast i8* %.166 to %ObjectType_vtable_ty.676563**
  store %ObjectType_vtable_ty.676563* @ObjectType_vtable_data, %ObjectType_vtable_ty.676563** %.168, align 8
  call void @ObjectType_constructor(%ObjectType.676562* %.167, %ClassId.676554* %.165)
  %.173 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %21 = bitcast i8* %.173 to i8**
  store i8* %.166, i8** %21, align 8
  %.177 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.179 = bitcast i8* %.177 to %"Array<Type>_vtable_ty.676547"**
  store %"Array<Type>_vtable_ty.676547"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.676547"** %.179, align 8
  %.181 = getelementptr inbounds i8, i8* %.177, i64 8
  %22 = bitcast i8* %.181 to i8**
  store i8* %.173, i8** %22, align 8
  %.183 = getelementptr inbounds i8, i8* %.177, i64 16
  %23 = bitcast i8* %.183 to i64*
  store i64 1, i64* %23, align 8
  %.185 = getelementptr inbounds i8, i8* %.177, i64 24
  %24 = bitcast i8* %.185 to i64*
  store i64 8, i64* %24, align 8
  %arg_types = alloca %"Array<Type>.676546"*, align 8
  %25 = bitcast %"Array<Type>.676546"** %arg_types to i8**
  store i8* %.177, i8** %25, align 8
  %.193 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.158, i64 0, i32 2
  %.19423 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.193, align 8
  %.19524 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.19423, i64 0, i32 2
  %.19625 = load i64, i64* %.19524, align 8
  %.19726 = icmp sgt i64 %.19625, 0
  br i1 %.19726, label %for.body.1.lr.ph, label %for.end.1

for.body.1.lr.ph:                                 ; preds = %for.body.else.if.if
  %.199 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %arg_types, align 8
  %.209 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.199, i64 0, i32 0
  br label %for.body.1

for.body.else.if.endif:                           ; preds = %for.body.else.if, %for.end.1
  store i1 true, i1* %.159, align 1
  %.231 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.230, align 8
  %.232 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.231, i64 0, i32 14
  %.233 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.232, align 8
  %26 = bitcast %FunctionType.676544** %method_type to %Type.676538**
  %.23413 = load %Type.676538*, %Type.676538** %26, align 8
  %.236 = call %LLVMTypeRef.676727* %.233(%CodeGen.676780* %.1, %Type.676538* %.23413, i1 false)
  store %LLVMTypeRef.676727* %.236, %LLVMTypeRef.676727** %llvm_method_type, align 8
  %.239 = getelementptr inbounds %PropId.676604, %PropId.676604* %.89.cast, i64 0, i32 3
  %.240 = load i64, i64* %.239, align 8
  %.243 = load %"Array<ClassMethod>.676671"*, %"Array<ClassMethod>.676671"** %.242, align 8
  %.244 = getelementptr inbounds %"Array<ClassMethod>.676671", %"Array<ClassMethod>.676671"* %.243, i64 0, i32 0
  %.245 = load %"Array<ClassMethod>_vtable_ty.676674"*, %"Array<ClassMethod>_vtable_ty.676674"** %.244, align 8
  %.246 = getelementptr inbounds %"Array<ClassMethod>_vtable_ty.676674", %"Array<ClassMethod>_vtable_ty.676674"* %.245, i64 0, i32 5
  %.247 = load %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)*, %ClassMethod.676666* (%"Array<ClassMethod>.676671"*, i64)** %.246, align 8
  %.248 = call %ClassMethod.676666* %.247(%"Array<ClassMethod>.676671"* %.243, i64 %.240)
  %.249 = getelementptr inbounds %ClassMethod.676666, %ClassMethod.676666* %.248, i64 0, i32 8
  %.250 = load i1, i1* %.249, align 1
  br i1 %.250, label %for.body.else.if.endif.endif, label %for.body.else.if.endif.if

for.body.1:                                       ; preds = %for.body.1.lr.ph, %for.body.1
  %.19428 = phi %"Array<Type>.676546"* [ %.19423, %for.body.1.lr.ph ], [ %.194, %for.body.1 ]
  %storemerge1427 = phi i64 [ 0, %for.body.1.lr.ph ], [ %.218, %for.body.1 ]
  %.204 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.19428, i64 0, i32 0
  %.205 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.204, align 8
  %.206 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.205, i64 0, i32 5
  %.207 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.206, align 8
  %.208 = call %Type.676538* %.207(%"Array<Type>.676546"* %.19428, i64 %storemerge1427)
  %.210 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.209, align 8
  %.211 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.210, i64 0, i32 2
  %.212 = load void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)** %.211, align 8
  call void %.212(%"Array<Type>.676546"* %.199, %Type.676538* %.208)
  %.218 = add nuw nsw i64 %storemerge1427, 1
  %.194 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.193, align 8
  %.195 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.194, i64 0, i32 2
  %.196 = load i64, i64* %.195, align 8
  %.197 = icmp slt i64 %.218, %.196
  br i1 %.197, label %for.body.1, label %for.end.1

for.end.1:                                        ; preds = %for.body.1, %for.body.else.if.if
  %27 = bitcast %"Array<Type>.676546"** %arg_types to i64*
  %.22215 = load i64, i64* %27, align 8
  %28 = bitcast %"Array<Type>.676546"** %.193 to i64*
  store i64 %.22215, i64* %28, align 8
  br label %for.body.else.if.endif

for.body.else.if.endif.if:                        ; preds = %for.body.else.if.endif
  %.255 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.230, align 8
  %.256 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.255, i64 0, i32 57
  %.257 = load %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)** %.256, align 8
  %.260 = load %string.676378*, %string.676378** %.259, align 8
  %.261 = load %string.676378*, %string.676378** %prop_name, align 8
  %.262 = getelementptr inbounds %string.676378, %string.676378* %.260, i64 0, i32 0
  %.263 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.262, align 8
  %.264 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.263, i64 0, i32 11
  %.265 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.264, align 8
  %.266 = call i8* %.265(%string.676378* %.260)
  %.267 = getelementptr inbounds %string.676378, %string.676378* %.261, i64 0, i32 0
  %.268 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.267, align 8
  %.269 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.268, i64 0, i32 11
  %.270 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.269, align 8
  %.271 = call i8* %.270(%string.676378* %.261)
  %.273 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.266, i8* %.271)
  %.275 = call i8* @malloc(i64 %.273)
  %.276 = call i64 (i8*, i8*, ...) @sprintf(i8* %.275, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.422, i64 0, i64 0), i8* %.266, i8* %.271)
  %.277 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.278 = bitcast i8* %.277 to %string.676378*
  %.279 = bitcast i8* %.277 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.279, align 8
  %.281 = getelementptr inbounds i8, i8* %.277, i64 8
  %29 = bitcast i8* %.281 to i8**
  store i8* %.275, i8** %29, align 8
  %.283 = getelementptr inbounds i8, i8* %.277, i64 16
  %30 = bitcast i8* %.283 to i64*
  store i64 %.273, i64* %30, align 8
  %.285 = getelementptr inbounds i8, i8* %.277, i64 24
  %31 = bitcast i8* %.285 to i64*
  store i64 %.273, i64* %31, align 8
  %.288 = call %LLVMValueRef.676728* %.257(%CodeGen.676780* %.1, %string.676378* %.278, %LLVMTypeRef.676727* %.236)
  store %LLVMValueRef.676728* %.288, %LLVMValueRef.676728** %llvm_method_val, align 8
  br label %for.body.else.if.endif.endif

for.body.else.if.endif.endif:                     ; preds = %for.body.else.if.endif, %for.body.else.if.endif.if
  %.293 = load %Program.676712*, %Program.676712** %.87, align 8
  %.295 = call i64 @get_class_prop_visibility(%Program.676712* %.293, %PropId.676604* %.89.cast)
  %.296 = icmp eq i64 %.295, 0
  br i1 %.296, label %for.body.else.if.endif.endif.if, label %for.body.else.endif

for.body.else.if.endif.endif.if:                  ; preds = %for.body.else.if.endif.endif
  %.300 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %.299, align 8
  %.301 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.300, i64 0, i32 0
  %.302 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.301, align 8
  %.303 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.302, i64 0, i32 2
  %.304 = load void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)*, void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)** %.303, align 8
  %.306 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %llvm_method_val, align 8
  call void %.304(%"Map<string, LLVMValueRef>.676763"* %.300, %string.676378* %.84, %LLVMValueRef.676728* %.306)
  br label %for.incr

for.body.else.endif.if:                           ; preds = %for.body.else.endif
  call void @resize_value_array(%"Array<LLVMValueRef>.676778"* %.26, i64 %.106)
  %.401 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %llvm_method_val, align 8
  %.403 = load %"Array<LLVMValueRef>_vtable_ty.676779"*, %"Array<LLVMValueRef>_vtable_ty.676779"** %.27, align 8
  %.404 = getelementptr inbounds %"Array<LLVMValueRef>_vtable_ty.676779", %"Array<LLVMValueRef>_vtable_ty.676779"* %.403, i64 0, i32 3
  %.405 = load void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)*, void (%"Array<LLVMValueRef>.676778"*, i64, %LLVMValueRef.676728*)** %.404, align 8
  call void %.405(%"Array<LLVMValueRef>.676778"* %.26, i64 %.106, %LLVMValueRef.676728* %.401)
  br label %for.body.else.endif.endif

for.body.else.endif.endif:                        ; preds = %for.body.else.endif, %for.body.else.endif.if
  %.410 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %llvm_method_type, align 8
  %.411 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.410, i64 0)
  %.413 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.41, align 8
  %.414 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.413, i64 0, i32 3
  %.415 = load void (%"Array<LLVMTypeRef>.676776"*, i64, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, i64, %LLVMTypeRef.676727*)** %.414, align 8
  call void %.415(%"Array<LLVMTypeRef>.676776"* %.40, i64 %.106, %LLVMTypeRef.676727* %.411)
  br label %for.incr

for.end.if:                                       ; preds = %for.end
  %.431 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.432 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.431, align 8
  %32 = bitcast i8* %.43 to %LLVMTypeRef.676727***
  %.435 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %32, align 8
  %.439 = call %LLVMTypeRef.676727* @LLVMStructTypeInContext(%LLVMContextRef.676725* %.432, %LLVMTypeRef.676727** %.435, i64 %.427, i1 true)
  %vtable_struct_ty = alloca %LLVMTypeRef.676727*, align 8
  store %LLVMTypeRef.676727* %.439, %LLVMTypeRef.676727** %vtable_struct_ty, align 8
  %.442 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 11
  %.443 = load i1, i1* %.442, align 1
  %.444 = xor i1 %.443, true
  %.446 = and i1 %.444, %.5
  br i1 %.446, label %for.end.if.if, label %for.end.if.endif

for.end.if.if:                                    ; preds = %for.end.if
  %.450 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 2
  %.451 = load %LLVMModuleRef.676726*, %LLVMModuleRef.676726** %.450, align 8
  %.454 = getelementptr inbounds %Class.676668, %Class.676668* %.3, i64 0, i32 2
  %.455 = load %string.676378*, %string.676378** %.454, align 8
  %.456 = getelementptr inbounds %string.676378, %string.676378* %.455, i64 0, i32 0
  %.457 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.456, align 8
  %.458 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.457, i64 0, i32 11
  %.459 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.458, align 8
  %.460 = call i8* %.459(%string.676378* %.455)
  %.462 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.423, i64 0, i64 0), i8* %.460)
  %.464 = call i8* @malloc(i64 %.462)
  %.465 = call i64 (i8*, i8*, ...) @sprintf(i8* %.464, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.423, i64 0, i64 0), i8* %.460)
  %.466 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.467 = bitcast i8* %.466 to %string.676378*
  %.468 = bitcast i8* %.466 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.468, align 8
  %.470 = getelementptr inbounds i8, i8* %.466, i64 8
  %33 = bitcast i8* %.470 to i8**
  store i8* %.464, i8** %33, align 8
  %.472 = getelementptr inbounds i8, i8* %.466, i64 16
  %34 = bitcast i8* %.472 to i64*
  store i64 %.462, i64* %34, align 8
  %.474 = getelementptr inbounds i8, i8* %.466, i64 24
  %35 = bitcast i8* %.474 to i64*
  store i64 %.462, i64* %35, align 8
  %.479 = load i8* (%string.676378*)*, i8* (%string.676378*)** getelementptr inbounds (%string_vtable_ty.676379, %string_vtable_ty.676379* @string_vtable_data, i64 0, i32 11), align 8
  %.480 = call i8* %.479(%string.676378* %.467)
  %.481 = call %LLVMValueRef.676728* @LLVMAddGlobal(%LLVMModuleRef.676726* %.451, %LLVMTypeRef.676727* %.439, i8* %.480)
  %.482 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.2, i64 0, i32 5
  store %LLVMValueRef.676728* %.481, %LLVMValueRef.676728** %.482, align 8
  %.486 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.431, align 8
  %36 = bitcast i8* %.29 to %LLVMValueRef.676728***
  %.489 = load %LLVMValueRef.676728**, %LLVMValueRef.676728*** %36, align 8
  %.492 = load i64, i64* %1, align 8
  %.493 = call %LLVMValueRef.676728* @LLVMConstStructInContext(%LLVMContextRef.676725* %.486, %LLVMValueRef.676728** %.489, i64 %.492, i1 true)
  %.497 = load %LLVMValueRef.676728*, %LLVMValueRef.676728** %.482, align 8
  call void @LLVMSetInitializer(%LLVMValueRef.676728* %.497, %LLVMValueRef.676728* %.493)
  br label %for.end.if.endif

for.end.if.endif:                                 ; preds = %for.end.if.if, %for.end.if
  %37 = bitcast %LLVMTypeRef.676727** %vtable_struct_ty to i64*
  %.5022 = load i64, i64* %37, align 8
  %.503 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.2, i64 0, i32 6
  %38 = bitcast %LLVMTypeRef.676727** %.503 to i64*
  store i64 %.5022, i64* %38, align 8
  %.506.cast = inttoptr i64 %.5022 to %LLVMTypeRef.676727*
  %.507 = call %LLVMTypeRef.676727* @LLVMPointerType(%LLVMTypeRef.676727* %.506.cast, i64 0)
  %.508 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.4, i64 0, i32 0
  %.509 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.508, align 8
  %.510 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.509, i64 0, i32 2
  %.511 = load void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)** %.510, align 8
  call void %.511(%"Array<LLVMTypeRef>.676776"* %.4, %LLVMTypeRef.676727* %.507)
  br label %for.entry.2

for.entry.2:                                      ; preds = %for.end, %for.end.if.endif
  %.52020 = load i64, i64* %7, align 8
  %.52121 = icmp sgt i64 %.52020, 0
  br i1 %.52121, label %for.body.2.lr.ph, label %for.end.2

for.body.2.lr.ph:                                 ; preds = %for.entry.2
  %.531 = getelementptr inbounds %"Array<LLVMTypeRef>.676776", %"Array<LLVMTypeRef>.676776"* %.4, i64 0, i32 0
  br label %for.body.2

for.body.2:                                       ; preds = %for.body.2.lr.ph, %for.body.2
  %storemerge122 = phi i64 [ 0, %for.body.2.lr.ph ], [ %.540, %for.body.2 ]
  %.527 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.55, align 8
  %.528 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.527, i64 0, i32 5
  %.529 = load %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)*, %LLVMTypeRef.676727* (%"Array<LLVMTypeRef>.676776"*, i64)** %.528, align 8
  %.530 = call %LLVMTypeRef.676727* %.529(%"Array<LLVMTypeRef>.676776"* %.54, i64 %storemerge122)
  %.532 = load %"Array<LLVMTypeRef>_vtable_ty.676777"*, %"Array<LLVMTypeRef>_vtable_ty.676777"** %.531, align 8
  %.533 = getelementptr inbounds %"Array<LLVMTypeRef>_vtable_ty.676777", %"Array<LLVMTypeRef>_vtable_ty.676777"* %.532, i64 0, i32 2
  %.534 = load void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)*, void (%"Array<LLVMTypeRef>.676776"*, %LLVMTypeRef.676727*)** %.533, align 8
  call void %.534(%"Array<LLVMTypeRef>.676776"* %.4, %LLVMTypeRef.676727* %.530)
  %.540 = add nuw nsw i64 %storemerge122, 1
  %.520 = load i64, i64* %7, align 8
  %.521 = icmp slt i64 %.540, %.520
  br i1 %.521, label %for.body.2, label %for.end.2

for.end.2:                                        ; preds = %for.body.2, %for.entry.2
  ret void
}

define void @CodeGen_declare_class(%CodeGen.676780* %.1, %Class.676668* nocapture readonly %.2) {
.4:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.9 = bitcast i8* %.8 to %CGClassType.676760*
  %.10 = bitcast i8* %.8 to %CGClassType_vtable_ty.676761**
  store %CGClassType_vtable_ty.676761* @CGClassType_vtable_data, %CGClassType_vtable_ty.676761** %.10, align 8
  %.15 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.16 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.15, align 8
  %.18 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.19 = load %string.676378*, %string.676378** %.18, align 8
  %.20 = getelementptr inbounds %string.676378, %string.676378* %.19, i64 0, i32 0
  %.21 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.20, align 8
  %.22 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.21, i64 0, i32 11
  %.23 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.22, align 8
  %.24 = call i8* %.23(%string.676378* %.19)
  %.25 = call %LLVMTypeRef.676727* @LLVMStructCreateNamed(%LLVMContextRef.676725* %.16, i8* %.24)
  %.26 = getelementptr inbounds i8, i8* %.8, i64 8
  %0 = bitcast i8* %.26 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.25, %LLVMTypeRef.676727** %0, align 8
  %.29 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.30 = bitcast i8* %.29 to %"Map<string, int>.676762"*
  %.31 = bitcast i8* %.29 to %"Map<string, int>_vtable_ty.676764"**
  store %"Map<string, int>_vtable_ty.676764"* @"Map<string, int>_vtable_data", %"Map<string, int>_vtable_ty.676764"** %.31, align 8
  call void @"Map<string, int>_constructor"(%"Map<string, int>.676762"* %.30)
  %.34 = getelementptr inbounds i8, i8* %.8, i64 16
  %1 = bitcast i8* %.34 to i8**
  store i8* %.29, i8** %1, align 8
  %.37 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.38 = bitcast i8* %.37 to %"Map<string, int>.676762"*
  %.39 = bitcast i8* %.37 to %"Map<string, int>_vtable_ty.676764"**
  store %"Map<string, int>_vtable_ty.676764"* @"Map<string, int>_vtable_data", %"Map<string, int>_vtable_ty.676764"** %.39, align 8
  call void @"Map<string, int>_constructor"(%"Map<string, int>.676762"* %.38)
  %.42 = getelementptr inbounds i8, i8* %.8, i64 24
  %2 = bitcast i8* %.42 to i8**
  store i8* %.37, i8** %2, align 8
  %.45 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.46 = bitcast i8* %.45 to %"Map<string, LLVMValueRef>.676763"*
  %.47 = bitcast i8* %.45 to %"Map<string, LLVMValueRef>_vtable_ty.676769"**
  store %"Map<string, LLVMValueRef>_vtable_ty.676769"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.47, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.676763"* %.46)
  %.50 = getelementptr inbounds i8, i8* %.8, i64 32
  %3 = bitcast i8* %.50 to i8**
  store i8* %.45, i8** %3, align 8
  %.53 = getelementptr inbounds i8, i8* %.8, i64 40
  %.59 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.53, i8 0, i64 16, i1 false)
  %.60 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.59, align 8
  %.61 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.60, i64 0, i32 7
  %.62 = load void (%CodeGen.676780*, %TypeId.676552*, %CGClassType.676760*)*, void (%CodeGen.676780*, %TypeId.676552*, %CGClassType.676760*)** %.61, align 8
  %.64 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 1
  %4 = bitcast %ClassId.676554** %.64 to %TypeId.676552**
  %.651 = load %TypeId.676552*, %TypeId.676552** %4, align 8
  call void %.62(%CodeGen.676780* %.1, %TypeId.676552* %.651, %CGClassType.676760* %.9)
  ret void
}

define void @CodeGen_declare_class_struct(%CodeGen.676780* %.1, %Class.676668* %.2, i1 %.3) {
.5:
  %.10 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.12 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.13 = bitcast i8* %.12 to %"Array<LLVMTypeRef>.676776"*
  %.14 = bitcast i8* %.12 to %"Array<LLVMTypeRef>_vtable_ty.676777"**
  store %"Array<LLVMTypeRef>_vtable_ty.676777"* @"Array<LLVMTypeRef>_vtable_data", %"Array<LLVMTypeRef>_vtable_ty.676777"** %.14, align 8
  %.16 = getelementptr inbounds i8, i8* %.12, i64 8
  %0 = bitcast i8* %.16 to i8**
  store i8* %.10, i8** %0, align 8
  %.18 = getelementptr inbounds i8, i8* %.12, i64 16
  %1 = bitcast i8* %.18 to i64*
  store i64 0, i64* %1, align 8
  %.20 = getelementptr inbounds i8, i8* %.12, i64 24
  %2 = bitcast i8* %.20 to i64*
  store i64 8, i64* %2, align 8
  %.24 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.25 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.24, align 8
  %.26 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.25, i64 0, i32 3
  %.27 = load %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)*, %CGClassType.676760* (%CodeGen.676780*, %TypeId.676552*)** %.26, align 8
  %.29 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 1
  %3 = bitcast %ClassId.676554** %.29 to %TypeId.676552**
  %.301 = load %TypeId.676552*, %TypeId.676552** %3, align 8
  %.32 = call %CGClassType.676760* %.27(%CodeGen.676780* %.1, %TypeId.676552* %.301)
  %.36 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.24, align 8
  %.37 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.36, i64 0, i32 58
  %.38 = load void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, i1)*, void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, i1)** %.37, align 8
  call void %.38(%CodeGen.676780* %.1, %CGClassType.676760* %.32, %Class.676668* %.2, i1 %.3)
  %.45 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.24, align 8
  %.46 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.45, i64 0, i32 59
  %.47 = load void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, %"Array<LLVMTypeRef>.676776"*, i1)*, void (%CodeGen.676780*, %CGClassType.676760*, %Class.676668*, %"Array<LLVMTypeRef>.676776"*, i1)** %.46, align 8
  call void %.47(%CodeGen.676780* %.1, %CGClassType.676760* %.32, %Class.676668* %.2, %"Array<LLVMTypeRef>.676776"* %.13, i1 %.3)
  %.54 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.32, i64 0, i32 1
  %.55 = load %LLVMTypeRef.676727*, %LLVMTypeRef.676727** %.54, align 8
  %4 = bitcast i8* %.16 to %LLVMTypeRef.676727***
  %.58 = load %LLVMTypeRef.676727**, %LLVMTypeRef.676727*** %4, align 8
  %.61 = load i64, i64* %1, align 8
  call void @LLVMStructSetBody(%LLVMTypeRef.676727* %.55, %LLVMTypeRef.676727** %.58, i64 %.61, i1 true)
  %.64 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 4
  %5 = bitcast %PropId.676604** %.64 to i64*
  %.652 = load i64, i64* %5, align 8
  %.66 = trunc i64 %.652 to i32
  %.68.not = icmp eq i32 %.66, 0
  br i1 %.68.not, label %.5.else, label %.5.if

.5.if:                                            ; preds = %.5
  %.71 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 11
  %.72 = load %Program.676712*, %Program.676712** %.71, align 8
  %.75 = load %PropId.676604*, %PropId.676604** %.64, align 8
  %.76 = call %Type.676538* @get_class_prop_type(%Program.676712* %.72, %PropId.676604* %.75)
  %constructor_type = alloca %FunctionType.676544*, align 8
  %6 = bitcast %FunctionType.676544** %constructor_type to %Type.676538**
  store %Type.676538* %.76, %Type.676538** %6, align 8
  %.80 = getelementptr inbounds %Type.676538, %Type.676538* %.76, i64 2
  %7 = bitcast %Type.676538* %.80 to i1*
  %.81 = load i1, i1* %7, align 1
  br i1 %.81, label %.5.if.endif, label %.5.if.if

.5.else:                                          ; preds = %.5
  %.194 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.32, i64 0, i32 7
  store %LLVMValueRef.676728* null, %LLVMValueRef.676728** %.194, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if.endif, %.5.else
  ret void

.5.if.if:                                         ; preds = %.5.if
  %.86 = load %ClassId.676554*, %ClassId.676554** %.29, align 8
  %.87 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.88 = bitcast i8* %.87 to %ObjectType.676562*
  %.89 = bitcast i8* %.87 to %ObjectType_vtable_ty.676563**
  store %ObjectType_vtable_ty.676563* @ObjectType_vtable_data, %ObjectType_vtable_ty.676563** %.89, align 8
  call void @ObjectType_constructor(%ObjectType.676562* %.88, %ClassId.676554* %.86)
  %.94 = call dereferenceable_or_null(8) i8* @malloc(i64 8)
  %8 = bitcast i8* %.94 to i8**
  store i8* %.87, i8** %8, align 8
  %.98 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.100 = bitcast i8* %.98 to %"Array<Type>_vtable_ty.676547"**
  store %"Array<Type>_vtable_ty.676547"* @"Array<Type>_vtable_data", %"Array<Type>_vtable_ty.676547"** %.100, align 8
  %.102 = getelementptr inbounds i8, i8* %.98, i64 8
  %9 = bitcast i8* %.102 to i8**
  store i8* %.94, i8** %9, align 8
  %.104 = getelementptr inbounds i8, i8* %.98, i64 16
  %10 = bitcast i8* %.104 to i64*
  store i64 1, i64* %10, align 8
  %.106 = getelementptr inbounds i8, i8* %.98, i64 24
  %11 = bitcast i8* %.106 to i64*
  store i64 8, i64* %11, align 8
  %arg_types = alloca %"Array<Type>.676546"*, align 8
  %12 = bitcast %"Array<Type>.676546"** %arg_types to i8**
  store i8* %.98, i8** %12, align 8
  %.1135 = load %FunctionType.676544*, %FunctionType.676544** %constructor_type, align 8
  %.1146 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.1135, i64 0, i32 2
  %.1157 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.1146, align 8
  %.1168 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.1157, i64 0, i32 2
  %.1179 = load i64, i64* %.1168, align 8
  %.11810 = icmp sgt i64 %.1179, 0
  br i1 %.11810, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.5.if.if
  %.120 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %arg_types, align 8
  %.130 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.120, i64 0, i32 0
  %.113 = load %FunctionType.676544*, %FunctionType.676544** %constructor_type, align 8
  %.114 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.113, i64 0, i32 2
  br label %for.body

.5.if.endif:                                      ; preds = %.5.if, %for.end
  %.149 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.24, align 8
  %.150 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.149, i64 0, i32 14
  %.151 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.150, align 8
  %.154 = call %LLVMTypeRef.676727* %.151(%CodeGen.676780* %.1, %Type.676538* %.76, i1 false)
  %.159 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.24, align 8
  %.160 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.159, i64 0, i32 57
  %.161 = load %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %string.676378*, %LLVMTypeRef.676727*)** %.160, align 8
  %.163 = getelementptr inbounds %Class.676668, %Class.676668* %.2, i64 0, i32 2
  %.164 = load %string.676378*, %string.676378** %.163, align 8
  %.165 = getelementptr inbounds %string.676378, %string.676378* %.164, i64 0, i32 0
  %.166 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.165, align 8
  %.167 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.166, i64 0, i32 11
  %.168 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.167, align 8
  %.169 = call i8* %.168(%string.676378* %.164)
  %.171 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.424, i64 0, i64 0), i8* %.169)
  %.173 = call i8* @malloc(i64 %.171)
  %.174 = call i64 (i8*, i8*, ...) @sprintf(i8* %.173, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.424, i64 0, i64 0), i8* %.169)
  %.175 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.176 = bitcast i8* %.175 to %string.676378*
  %.177 = bitcast i8* %.175 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.177, align 8
  %.179 = getelementptr inbounds i8, i8* %.175, i64 8
  %13 = bitcast i8* %.179 to i8**
  store i8* %.173, i8** %13, align 8
  %.181 = getelementptr inbounds i8, i8* %.175, i64 16
  %14 = bitcast i8* %.181 to i64*
  store i64 %.171, i64* %14, align 8
  %.183 = getelementptr inbounds i8, i8* %.175, i64 24
  %15 = bitcast i8* %.183 to i64*
  store i64 %.171, i64* %15, align 8
  %.186 = call %LLVMValueRef.676728* %.161(%CodeGen.676780* %.1, %string.676378* %.176, %LLVMTypeRef.676727* %.154)
  %.187 = getelementptr inbounds %CGClassType.676760, %CGClassType.676760* %.32, i64 0, i32 7
  store %LLVMValueRef.676728* %.186, %LLVMValueRef.676728** %.187, align 8
  %.189 = load %FunctionType.676544*, %FunctionType.676544** %constructor_type, align 8
  %.190 = getelementptr inbounds %FunctionType.676544, %FunctionType.676544* %.189, i64 0, i32 4
  store i1 true, i1* %.190, align 1
  br label %.5.endif

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.11512 = phi %"Array<Type>.676546"* [ %.1157, %for.body.lr.ph ], [ %.115, %for.body ]
  %storemerge11 = phi i64 [ 0, %for.body.lr.ph ], [ %.139, %for.body ]
  %.125 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.11512, i64 0, i32 0
  %.126 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.125, align 8
  %.127 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.126, i64 0, i32 5
  %.128 = load %Type.676538* (%"Array<Type>.676546"*, i64)*, %Type.676538* (%"Array<Type>.676546"*, i64)** %.127, align 8
  %.129 = call %Type.676538* %.128(%"Array<Type>.676546"* %.11512, i64 %storemerge11)
  %.131 = load %"Array<Type>_vtable_ty.676547"*, %"Array<Type>_vtable_ty.676547"** %.130, align 8
  %.132 = getelementptr inbounds %"Array<Type>_vtable_ty.676547", %"Array<Type>_vtable_ty.676547"* %.131, i64 0, i32 2
  %.133 = load void (%"Array<Type>.676546"*, %Type.676538*)*, void (%"Array<Type>.676546"*, %Type.676538*)** %.132, align 8
  call void %.133(%"Array<Type>.676546"* %.120, %Type.676538* %.129)
  %.139 = add nuw nsw i64 %storemerge11, 1
  %.115 = load %"Array<Type>.676546"*, %"Array<Type>.676546"** %.114, align 8
  %.116 = getelementptr inbounds %"Array<Type>.676546", %"Array<Type>.676546"* %.115, i64 0, i32 2
  %.117 = load i64, i64* %.116, align 8
  %.118 = icmp slt i64 %.139, %.117
  br i1 %.118, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %.5.if.if
  %.114.lcssa = phi %"Array<Type>.676546"** [ %.1146, %.5.if.if ], [ %.114, %for.body ]
  %16 = bitcast %"Array<Type>.676546"** %arg_types to i64*
  %.1434 = load i64, i64* %16, align 8
  %17 = bitcast %"Array<Type>.676546"** %.114.lcssa to i64*
  store i64 %.1434, i64* %17, align 8
  br label %.5.if.endif
}

define void @CodeGen_declare_enum(%CodeGen.676780* %.1, %Enum.676682* nocapture readonly %.2) {
.4:
  %.8 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.10 = bitcast i8* %.8 to %CGEnumType_vtable_ty.676775**
  store %CGEnumType_vtable_ty.676775* @CGEnumType_vtable_data, %CGEnumType_vtable_ty.676775** %.10, align 8
  %.14 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.15 = bitcast i8* %.14 to %"Map<string, LLVMValueRef>.676763"*
  %.16 = bitcast i8* %.14 to %"Map<string, LLVMValueRef>_vtable_ty.676769"**
  store %"Map<string, LLVMValueRef>_vtable_ty.676769"* @"Map<string, LLVMValueRef>_vtable_data", %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.16, align 8
  call void @"Map<string, LLVMValueRef>_constructor"(%"Map<string, LLVMValueRef>.676763"* %.15)
  %.19 = getelementptr inbounds i8, i8* %.8, i64 16
  %0 = bitcast i8* %.19 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds %Enum.676682, %Enum.676682* %.2, i64 0, i32 3
  %.23 = load %"Array<EnumField>.676684"*, %"Array<EnumField>.676684"** %.22, align 8
  %.24 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.23, i64 0, i32 2
  %.25 = load i64, i64* %.24, align 8
  %.26 = icmp sgt i64 %.25, 0
  br i1 %.26, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  %.30 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.31 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.30, align 8
  %.32 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.31, i64 0, i32 14
  %.33 = load %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)*, %LLVMTypeRef.676727* (%CodeGen.676780*, %Type.676538*, i1)** %.32, align 8
  %.37 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.23, i64 0, i32 0
  %.38 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.37, align 8
  %.39 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.38, i64 0, i32 5
  %.40 = load %EnumField.676680* (%"Array<EnumField>.676684"*, i64)*, %EnumField.676680* (%"Array<EnumField>.676684"*, i64)** %.39, align 8
  %.41 = call %EnumField.676680* %.40(%"Array<EnumField>.676684"* %.23, i64 0)
  %.42 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.41, i64 0, i32 3
  %.43 = load %Expression.676558*, %Expression.676558** %.42, align 8
  %.44 = getelementptr inbounds %Expression.676558, %Expression.676558* %.43, i64 0, i32 4
  %.45 = load %Type.676538*, %Type.676538** %.44, align 8
  %.46 = call %LLVMTypeRef.676727* %.33(%CodeGen.676780* %.1, %Type.676538* %.45, i1 true)
  br label %for.entry

.4.else:                                          ; preds = %.4
  %.52 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 13
  %.53 = load %LLVMContextRef.676725*, %LLVMContextRef.676725** %.52, align 8
  %.54 = call %LLVMTypeRef.676727* @LLVMIntTypeInContext(%LLVMContextRef.676725* %.53, i64 64)
  br label %for.entry

for.entry:                                        ; preds = %.4.if, %.4.else
  %.46.sink = phi %LLVMTypeRef.676727* [ %.46, %.4.if ], [ %.54, %.4.else ]
  %.47 = getelementptr inbounds i8, i8* %.8, i64 8
  %1 = bitcast i8* %.47 to %LLVMTypeRef.676727**
  store %LLVMTypeRef.676727* %.46.sink, %LLVMTypeRef.676727** %1, align 8
  %.643 = load %"Array<EnumField>.676684"*, %"Array<EnumField>.676684"** %.22, align 8
  %.654 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.643, i64 0, i32 2
  %.665 = load i64, i64* %.654, align 8
  %.676 = icmp sgt i64 %.665, 0
  br i1 %.676, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %2 = bitcast i8* %.19 to %"Map<string, LLVMValueRef>.676763"**
  %.93 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %.648 = phi %"Array<EnumField>.676684"* [ %.643, %for.body.lr.ph ], [ %.64, %for.body ]
  %storemerge7 = phi i64 [ 0, %for.body.lr.ph ], [ %.106, %for.body ]
  %.73 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.648, i64 0, i32 0
  %.74 = load %"Array<EnumField>_vtable_ty.676685"*, %"Array<EnumField>_vtable_ty.676685"** %.73, align 8
  %.75 = getelementptr inbounds %"Array<EnumField>_vtable_ty.676685", %"Array<EnumField>_vtable_ty.676685"* %.74, i64 0, i32 5
  %.76 = load %EnumField.676680* (%"Array<EnumField>.676684"*, i64)*, %EnumField.676680* (%"Array<EnumField>.676684"*, i64)** %.75, align 8
  %.77 = call %EnumField.676680* %.76(%"Array<EnumField>.676684"* %.648, i64 %storemerge7)
  %.80 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.77, i64 0, i32 1
  %.8129 = load %PropId.676604*, %PropId.676604** %.80, align 8
  %.85 = load %"Map<string, LLVMValueRef>.676763"*, %"Map<string, LLVMValueRef>.676763"** %2, align 8
  %.86 = getelementptr inbounds %"Map<string, LLVMValueRef>.676763", %"Map<string, LLVMValueRef>.676763"* %.85, i64 0, i32 0
  %.87 = load %"Map<string, LLVMValueRef>_vtable_ty.676769"*, %"Map<string, LLVMValueRef>_vtable_ty.676769"** %.86, align 8
  %.88 = getelementptr inbounds %"Map<string, LLVMValueRef>_vtable_ty.676769", %"Map<string, LLVMValueRef>_vtable_ty.676769"* %.87, i64 0, i32 2
  %.89 = load void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)*, void (%"Map<string, LLVMValueRef>.676763"*, %string.676378*, %LLVMValueRef.676728*)** %.88, align 8
  %.91 = call %string.676378* @create_prop_key(%PropId.676604* %.8129)
  %.94 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.93, align 8
  %.95 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.94, i64 0, i32 44
  %.96 = load %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)*, %LLVMValueRef.676728* (%CodeGen.676780*, %LLVMBuilderRef.676733*, %Expression.676558*)** %.95, align 8
  %.98 = getelementptr inbounds %EnumField.676680, %EnumField.676680* %.77, i64 0, i32 3
  %.99 = load %Expression.676558*, %Expression.676558** %.98, align 8
  %.100 = call %LLVMValueRef.676728* %.96(%CodeGen.676780* %.1, %LLVMBuilderRef.676733* null, %Expression.676558* %.99)
  call void %.89(%"Map<string, LLVMValueRef>.676763"* %.85, %string.676378* %.91, %LLVMValueRef.676728* %.100)
  %.106 = add nuw nsw i64 %storemerge7, 1
  %.64 = load %"Array<EnumField>.676684"*, %"Array<EnumField>.676684"** %.22, align 8
  %.65 = getelementptr inbounds %"Array<EnumField>.676684", %"Array<EnumField>.676684"* %.64, i64 0, i32 2
  %.66 = load i64, i64* %.65, align 8
  %.67 = icmp slt i64 %.106, %.66
  br i1 %.67, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %.9 = bitcast i8* %.8 to %CGEnumType.676774*
  %.110 = getelementptr inbounds %CodeGen.676780, %CodeGen.676780* %.1, i64 0, i32 0
  %.111 = load %CodeGen_vtable_ty.676781*, %CodeGen_vtable_ty.676781** %.110, align 8
  %.112 = getelementptr inbounds %CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* %.111, i64 0, i32 8
  %.113 = load void (%CodeGen.676780*, %TypeId.676552*, %CGEnumType.676774*)*, void (%CodeGen.676780*, %TypeId.676552*, %CGEnumType.676774*)** %.112, align 8
  %.115 = getelementptr inbounds %Enum.676682, %Enum.676682* %.2, i64 0, i32 1
  %3 = bitcast %EnumId.676556** %.115 to %TypeId.676552**
  %.1161 = load %TypeId.676552*, %TypeId.676552** %3, align 8
  call void %.113(%CodeGen.676780* %.1, %TypeId.676552* %.1161, %CGEnumType.676774* %.9)
  ret void
}

; Function Attrs: nofree nounwind
define void @"Arraymain.flo_constructor"(%"Arraymain.flo.676802"* nocapture %.1, i64 %.2) local_unnamed_addr #3 {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  store i64 0, i64* %.8, align 8
  %.12 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 3
  store i64 %.2, i64* %.12, align 8
  %.16 = shl i64 %.2, 3
  %.17 = call i8* @malloc(i64 %.16)
  %.19 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %0 = bitcast %string.676378*** %.19 to i8**
  store i8* %.17, i8** %0, align 8
  ret void
}

; Function Attrs: nounwind
define void @"Arraymain.flo_resize"(%"Arraymain.flo.676802"* nocapture %.1) #2 {
.3:
  %.7 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 3
  %.8 = load i64, i64* %.7, align 8
  %.9 = shl i64 %.8, 1
  store i64 %.9, i64* %.7, align 8
  %.14 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %0 = bitcast %string.676378*** %.14 to i8**
  %.151 = load i8*, i8** %0, align 8
  %.19 = shl i64 %.8, 4
  %.21 = call i8* @realloc(i8* %.151, i64 %.19)
  store i8* %.21, i8** %0, align 8
  ret void
}

define void @"Arraymain.flo_swap"(%"Arraymain.flo.676802"* nocapture readonly %.1, i64 %.2, i64 %.3) {
.5:
  %.11 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  %.29 = load i64, i64* %.11, align 8
  %.30 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.31 = bitcast i8* %.30 to %Range.676380*
  %.32 = bitcast i8* %.30 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.32, align 8
  %.34 = getelementptr inbounds i8, i8* %.30, i64 8
  %2 = bitcast i8* %.34 to i64*
  store i64 0, i64* %2, align 8
  %.36 = getelementptr inbounds i8, i8* %.30, i64 16
  %3 = bitcast i8* %.36 to i64*
  store i64 %.29, i64* %3, align 8
  %.41 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.42 = call i1 %.41(%Range.676380* %.31, i64 %.3)
  %.43 = and i1 %.25, %.42
  br i1 %.43, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.47 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %.48 = load %string.676378**, %string.676378*** %.47, align 8
  %.49 = getelementptr inbounds %string.676378*, %string.676378** %.48, i64 %.2
  %4 = bitcast %string.676378** %.49 to i64*
  %.501 = load i64, i64* %4, align 8
  %.60 = getelementptr inbounds %string.676378*, %string.676378** %.48, i64 %.3
  %5 = bitcast %string.676378** %.60 to i64*
  %.612 = load i64, i64* %5, align 8
  store i64 %.612, i64* %4, align 8
  %.67 = load %string.676378**, %string.676378*** %.47, align 8
  %.69 = getelementptr inbounds %string.676378*, %string.676378** %.67, i64 %.3
  %6 = bitcast %string.676378** %.69 to i64*
  store i64 %.501, i64* %6, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Arraymain.flo___sl__"(%"Arraymain.flo.676802"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 3
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp slt i64 %.9, %.12
  br i1 %.13.not, label %.4.endif, label %.4.if

.4.if:                                            ; preds = %.4
  %.16 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  %.17 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.16, align 8
  %.18 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.17, i64 0, i32 0
  %.19 = load void (%"Arraymain.flo.676802"*)*, void (%"Arraymain.flo.676802"*)** %.18, align 8
  call void %.19(%"Arraymain.flo.676802"* %.1)
  br label %.4.endif

.4.endif:                                         ; preds = %.4, %.4.if
  %.24 = load i64, i64* %.8, align 8
  %.25 = add i64 %.24, 1
  store i64 %.25, i64* %.8, align 8
  %.30 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %.31 = load %string.676378**, %string.676378*** %.30, align 8
  %.33 = getelementptr inbounds %string.676378*, %string.676378** %.31, i64 %.24
  store %string.676378* %.2, %string.676378** %.33, align 8
  ret void
}

define void @"Arraymain.flo___setitem__"(%"Arraymain.flo.676802"* nocapture readonly %.1, i64 %.2, %string.676378* %.3) {
.5:
  %.11 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.14 = bitcast i8* %.13 to %Range.676380*
  %.15 = bitcast i8* %.13 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.15, align 8
  %.17 = getelementptr inbounds i8, i8* %.13, i64 8
  %0 = bitcast i8* %.17 to i64*
  store i64 0, i64* %0, align 8
  %.19 = getelementptr inbounds i8, i8* %.13, i64 16
  %1 = bitcast i8* %.19 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.25 = call i1 %.24(%Range.676380* %.14, i64 %.2)
  br i1 %.25, label %.5.if, label %.5.endif

.5.if:                                            ; preds = %.5
  %.29 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %.30 = load %string.676378**, %string.676378*** %.29, align 8
  %.32 = getelementptr inbounds %string.676378*, %string.676378** %.30, i64 %.2
  store %string.676378* %.3, %string.676378** %.32, align 8
  br label %.5.endif

.5.endif:                                         ; preds = %.5.if, %.5
  ret void
}

define void @"Arraymain.flo_append"(%"Arraymain.flo.676802"* %.1, %string.676378* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  %.9 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.8, align 8
  %.10 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.9, i64 0, i32 2
  %.11 = load void (%"Arraymain.flo.676802"*, %string.676378*)*, void (%"Arraymain.flo.676802"*, %string.676378*)** %.10, align 8
  call void %.11(%"Arraymain.flo.676802"* %.1, %string.676378* %.2)
  ret void
}

define %string.676378* @"Arraymain.flo___getitem__"(%"Arraymain.flo.676802"* nocapture readonly %.1, i64 %.2) {
.4:
  %.9 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.10 = load i64, i64* %.9, align 8
  %.11 = call dereferenceable_or_null(24) i8* @malloc(i64 24)
  %.12 = bitcast i8* %.11 to %Range.676380*
  %.13 = bitcast i8* %.11 to %Range_vtable_ty.676381**
  store %Range_vtable_ty.676381* @Range_vtable_data, %Range_vtable_ty.676381** %.13, align 8
  %.15 = getelementptr inbounds i8, i8* %.11, i64 8
  %0 = bitcast i8* %.15 to i64*
  store i64 0, i64* %0, align 8
  %.17 = getelementptr inbounds i8, i8* %.11, i64 16
  %1 = bitcast i8* %.17 to i64*
  store i64 %.10, i64* %1, align 8
  %.22 = load i1 (%Range.676380*, i64)*, i1 (%Range.676380*, i64)** getelementptr inbounds (%Range_vtable_ty.676381, %Range_vtable_ty.676381* @Range_vtable_data, i64 0, i32 0), align 8
  %.23 = call i1 %.22(%Range.676380* %.12, i64 %.2)
  br i1 %.23, label %.4.if, label %.4.endif

.4.if:                                            ; preds = %.4
  %.27 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %.28 = load %string.676378**, %string.676378*** %.27, align 8
  %.29 = getelementptr inbounds %string.676378*, %string.676378** %.28, i64 %.2
  %.30 = load %string.676378*, %string.676378** %.29, align 8
  ret %string.676378* %.30

.4.endif:                                         ; preds = %.4
  ret %string.676378* null
}

define i1 @"Arraymain.flo___eq__"(%"Arraymain.flo.676802"* %.1, %"Arraymain.flo.676802"* %.2) {
.4:
  %.8 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.9 = load i64, i64* %.8, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.2, i64 0, i32 2
  %.12 = load i64, i64* %.11, align 8
  %.13.not = icmp eq i64 %.9, %.12
  br i1 %.13.not, label %for.cond.preheader, label %.4.if

for.cond.preheader:                               ; preds = %.4
  %.221 = load i64, i64* %.8, align 8
  %.232 = icmp sgt i64 %.221, 0
  br i1 %.232, label %for.body.lr.ph, label %.4.if

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.27 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  %.34 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.2, i64 0, i32 0
  br label %for.body

.4.if:                                            ; preds = %for.cond, %for.body, %for.cond.preheader, %.4
  %merge = phi i1 [ false, %.4 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %merge

for.cond:                                         ; preds = %for.body
  %.22 = load i64, i64* %.8, align 8
  %.23 = icmp slt i64 %.51, %.22
  br i1 %.23, label %for.body, label %.4.if

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge3 = phi i64 [ 0, %for.body.lr.ph ], [ %.51, %for.cond ]
  %.28 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.27, align 8
  %.29 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.28, i64 0, i32 5
  %.30 = load %string.676378* (%"Arraymain.flo.676802"*, i64)*, %string.676378* (%"Arraymain.flo.676802"*, i64)** %.29, align 8
  %.31 = call %string.676378* %.30(%"Arraymain.flo.676802"* %.1, i64 %storemerge3)
  %.35 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.34, align 8
  %.36 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.35, i64 0, i32 5
  %.37 = load %string.676378* (%"Arraymain.flo.676802"*, i64)*, %string.676378* (%"Arraymain.flo.676802"*, i64)** %.36, align 8
  %.38 = call %string.676378* %.37(%"Arraymain.flo.676802"* %.2, i64 %storemerge3)
  %.39 = getelementptr inbounds %string.676378, %string.676378* %.31, i64 0, i32 0
  %.40 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.39, align 8
  %.41 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.40, i64 0, i32 4
  %.42 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.41, align 8
  %.43 = call i1 %.42(%string.676378* %.31, %string.676378* %.38)
  %.51 = add nuw nsw i64 %storemerge3, 1
  br i1 %.43, label %for.cond, label %.4.if
}

define i1 @"Arraymain.flo___in__"(%"Arraymain.flo.676802"* %.1, %string.676378* %.2) {
.4:
  %.12 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.cond ]
  %.19 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.18, align 8
  %.20 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.19, i64 0, i32 5
  %.21 = load %string.676378* (%"Arraymain.flo.676802"*, i64)*, %string.676378* (%"Arraymain.flo.676802"*, i64)** %.20, align 8
  %.22 = call %string.676378* %.21(%"Arraymain.flo.676802"* %.1, i64 %storemerge4)
  %.24 = getelementptr inbounds %string.676378, %string.676378* %.22, i64 0, i32 0
  %.25 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.24, align 8
  %.26 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.25, i64 0, i32 4
  %.27 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.26, align 8
  %.28 = call i1 %.27(%string.676378* %.22, %string.676378* %.2)
  %.35 = add nuw nsw i64 %storemerge4, 1
  br i1 %.28, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond, %for.body, %.4
  %merge = phi i1 [ false, %.4 ], [ false, %for.cond ], [ true, %for.body ]
  ret i1 %merge
}

define i64 @"Arraymain.flo_find"(%"Arraymain.flo.676802"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.12 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.132 = load i64, i64* %.12, align 8
  %.143 = icmp sgt i64 %.132, 0
  br i1 %.143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %.4
  %.18 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body.endif
  %storemerge4 = phi i64 [ 0, %for.body.lr.ph ], [ %.35, %for.body.endif ]
  %.19 = load %string.676378**, %string.676378*** %.18, align 8
  %.20 = getelementptr inbounds %string.676378*, %string.676378** %.19, i64 %storemerge4
  %.21 = load %string.676378*, %string.676378** %.20, align 8
  %.23 = getelementptr inbounds %string.676378, %string.676378* %.21, i64 0, i32 0
  %.24 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.23, align 8
  %.25 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.24, i64 0, i32 4
  %.26 = load i1 (%string.676378*, %string.676378*)*, i1 (%string.676378*, %string.676378*)** %.25, align 8
  %.27 = call i1 %.26(%string.676378* %.21, %string.676378* %.2)
  br i1 %.27, label %for.end, label %for.body.endif

for.end:                                          ; preds = %for.body.endif, %for.body, %.4
  %merge = phi i64 [ -1, %.4 ], [ -1, %for.body.endif ], [ %storemerge4, %for.body ]
  ret i64 %merge

for.body.endif:                                   ; preds = %for.body
  %.35 = add nuw nsw i64 %storemerge4, 1
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp slt i64 %.35, %.13
  br i1 %.14, label %for.body, label %for.end
}

define %string.676378* @"Arraymain.flo_join"(%"Arraymain.flo.676802"* nocapture readonly %.1, %string.676378* %.2) {
.4:
  %.7 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.9 = bitcast i8* %.7 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.9, align 8
  %.11 = getelementptr inbounds i8, i8* %.7, i64 8
  %0 = bitcast i8* %.11 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %0, align 8
  %.13 = getelementptr inbounds i8, i8* %.7, i64 16
  %.19 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.13, i8 0, i64 16, i1 false)
  %.20 = load i64, i64* %.19, align 8
  %.21 = add i64 %.20, -1
  %.8 = bitcast i8* %.7 to %string.676378*
  %.282 = icmp sgt i64 %.21, 0
  %.33 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 1
  %.343 = load %string.676378**, %string.676378*** %.33, align 8
  %.364 = load %string.676378*, %string.676378** %.343, align 8
  br i1 %.282, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %.367 = phi %string.676378* [ %.36, %for.body ], [ %.364, %.4 ]
  %res.06 = phi %string.676378* [ %.47, %for.body ], [ %.8, %.4 ]
  %storemerge5 = phi i64 [ %.53, %for.body ], [ 0, %.4 ]
  %.38 = getelementptr inbounds %string.676378, %string.676378* %.367, i64 0, i32 0
  %.39 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.38, align 8
  %.40 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.39, i64 0, i32 0
  %.41 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.40, align 8
  %.42 = call %string.676378* %.41(%string.676378* %.367, %string.676378* %.2)
  %.43 = getelementptr inbounds %string.676378, %string.676378* %res.06, i64 0, i32 0
  %.44 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.43, align 8
  %.45 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.44, i64 0, i32 0
  %.46 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.45, align 8
  %.47 = call %string.676378* %.46(%string.676378* %res.06, %string.676378* %.42)
  %.53 = add nuw nsw i64 %storemerge5, 1
  %.34 = load %string.676378**, %string.676378*** %.33, align 8
  %.35 = getelementptr inbounds %string.676378*, %string.676378** %.34, i64 %.53
  %.36 = load %string.676378*, %string.676378** %.35, align 8
  %exitcond.not = icmp eq i64 %.53, %.21
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  %res.0.lcssa = phi %string.676378* [ %.8, %.4 ], [ %.47, %for.body ]
  %.36.lcssa = phi %string.676378* [ %.364, %.4 ], [ %.36, %for.body ]
  %.63 = getelementptr inbounds %string.676378, %string.676378* %res.0.lcssa, i64 0, i32 0
  %.64 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.63, align 8
  %.65 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.64, i64 0, i32 0
  %.66 = load %string.676378* (%string.676378*, %string.676378*)*, %string.676378* (%string.676378*, %string.676378*)** %.65, align 8
  %.67 = call %string.676378* %.66(%string.676378* %res.0.lcssa, %string.676378* %.36.lcssa)
  ret %string.676378* %.67
}

define noalias %string.676378* @"Arraymain.flo___as_string__"(%"Arraymain.flo.676802"* %.1) {
.3:
  %.6 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  %.7 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.6, align 8
  %.8 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.7, i64 0, i32 9
  %.9 = load %string.676378* (%"Arraymain.flo.676802"*, %string.676378*)*, %string.676378* (%"Arraymain.flo.676802"*, %string.676378*)** %.8, align 8
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %string.676378*
  %.11.repack = bitcast i8* %.10 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.11.repack, align 8
  %.11.repack1 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.11.repack1 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.17, i64 0, i64 0), i8** %0, align 8
  %.11.repack2 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.11.repack2 to i64*
  store i64 2, i64* %1, align 8
  %.11.repack3 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.11.repack3 to i64*
  store i64 2, i64* %2, align 8
  %.13 = call %string.676378* %.9(%"Arraymain.flo.676802"* %.1, %string.676378* %.11)
  %.14 = getelementptr inbounds %string.676378, %string.676378* %.13, i64 0, i32 0
  %.15 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.14, align 8
  %.16 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.15, i64 0, i32 11
  %.17 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.16, align 8
  %.18 = call i8* %.17(%string.676378* %.13)
  %.20 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.22 = call i8* @malloc(i64 %.20)
  %.23 = call i64 (i8*, i8*, ...) @sprintf(i8* %.22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.18, i64 0, i64 0), i8* %.18)
  %.24 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.25 = bitcast i8* %.24 to %string.676378*
  %.26 = bitcast i8* %.24 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.26, align 8
  %.28 = getelementptr inbounds i8, i8* %.24, i64 8
  %3 = bitcast i8* %.28 to i8**
  store i8* %.22, i8** %3, align 8
  %.30 = getelementptr inbounds i8, i8* %.24, i64 16
  %4 = bitcast i8* %.30 to i64*
  store i64 %.20, i64* %4, align 8
  %.32 = getelementptr inbounds i8, i8* %.24, i64 24
  %5 = bitcast i8* %.32 to i64*
  store i64 %.20, i64* %5, align 8
  ret %string.676378* %.25
}

define %"Arraymain.flo.676802"* @parse_args(i64 %.1, i8** nocapture readonly %.2) local_unnamed_addr {
.4:
  %.8 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.10 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.11 = bitcast i8* %.10 to %"Arraymain.flo.676802"*
  %.12 = bitcast i8* %.10 to %"Arraymain.flo_vtable_ty.676803"**
  store %"Arraymain.flo_vtable_ty.676803"* @"Arraymain.flo_vtable_data", %"Arraymain.flo_vtable_ty.676803"** %.12, align 8
  %.14 = getelementptr inbounds i8, i8* %.10, i64 8
  %0 = bitcast i8* %.14 to i8**
  store i8* %.8, i8** %0, align 8
  %.16 = getelementptr inbounds i8, i8* %.10, i64 16
  %1 = bitcast i8* %.16 to i64*
  store i64 0, i64* %1, align 8
  %.18 = getelementptr inbounds i8, i8* %.10, i64 24
  %2 = bitcast i8* %.18 to i64*
  store i64 8, i64* %2, align 8
  %.262 = icmp sgt i64 %.1, 0
  br i1 %.262, label %for.body, label %for.end

for.body:                                         ; preds = %.4, %for.body
  %storemerge3 = phi i64 [ %.43, %for.body ], [ 0, %.4 ]
  %.31 = getelementptr inbounds i8*, i8** %.2, i64 %storemerge3
  %.32 = load i8*, i8** %.31, align 8
  %.33 = call %string.676378* @string_from_cstring(i8* %.32)
  %.35 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.12, align 8
  %.36 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.35, i64 0, i32 2
  %.37 = load void (%"Arraymain.flo.676802"*, %string.676378*)*, void (%"Arraymain.flo.676802"*, %string.676378*)** %.36, align 8
  call void %.37(%"Arraymain.flo.676802"* %.11, %string.676378* %.33)
  %.43 = add nuw nsw i64 %storemerge3, 1
  %exitcond.not = icmp eq i64 %.43, %.1
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %.4
  ret %"Arraymain.flo.676802"* %.11
}

define void @help(%string.676378* %.1) local_unnamed_addr {
.3:
  %.6 = getelementptr inbounds %string.676378, %string.676378* %.1, i64 0, i32 0
  %.7 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.6, align 8
  %.8 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.7, i64 0, i32 11
  %.9 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.8, align 8
  %.10 = call i8* %.9(%string.676378* %.1)
  %.12 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.425, i64 0, i64 0), i8* %.10)
  %.14 = call i8* @malloc(i64 %.12)
  %.15 = call i64 (i8*, i8*, ...) @sprintf(i8* %.14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.425, i64 0, i64 0), i8* %.10)
  %.16 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.17 = bitcast i8* %.16 to %string.676378*
  %.18 = bitcast i8* %.16 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.18, align 8
  %.20 = getelementptr inbounds i8, i8* %.16, i64 8
  %0 = bitcast i8* %.20 to i8**
  store i8* %.14, i8** %0, align 8
  %.22 = getelementptr inbounds i8, i8* %.16, i64 16
  %1 = bitcast i8* %.22 to i64*
  store i64 %.12, i64* %1, align 8
  %.24 = getelementptr inbounds i8, i8* %.16, i64 24
  %2 = bitcast i8* %.24 to i64*
  store i64 %.12, i64* %2, align 8
  call void @println(%string.676378* %.17)
  %.27 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.28 = bitcast i8* %.27 to %string.676378*
  %.28.repack = bitcast i8* %.27 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.28.repack, align 8
  %.28.repack1 = getelementptr inbounds i8, i8* %.27, i64 8
  %3 = bitcast i8* %.28.repack1 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.426, i64 0, i64 0), i8** %3, align 8
  %.28.repack2 = getelementptr inbounds i8, i8* %.27, i64 16
  %4 = bitcast i8* %.28.repack2 to i64*
  store i64 8, i64* %4, align 8
  %.28.repack3 = getelementptr inbounds i8, i8* %.27, i64 24
  %5 = bitcast i8* %.28.repack3 to i64*
  store i64 8, i64* %5, align 8
  call void @println(%string.676378* %.28)
  %.31 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.32 = bitcast i8* %.31 to %string.676378*
  %.32.repack = bitcast i8* %.31 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.32.repack, align 8
  %.32.repack4 = getelementptr inbounds i8, i8* %.31, i64 8
  %6 = bitcast i8* %.32.repack4 to i8**
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.427, i64 0, i64 0), i8** %6, align 8
  %.32.repack5 = getelementptr inbounds i8, i8* %.31, i64 16
  %7 = bitcast i8* %.32.repack5 to i64*
  store i64 37, i64* %7, align 8
  %.32.repack6 = getelementptr inbounds i8, i8* %.31, i64 24
  %8 = bitcast i8* %.32.repack6 to i64*
  store i64 37, i64* %8, align 8
  call void @println(%string.676378* %.32)
  %.35 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.36 = bitcast i8* %.35 to %string.676378*
  %.36.repack = bitcast i8* %.35 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.36.repack, align 8
  %.36.repack7 = getelementptr inbounds i8, i8* %.35, i64 8
  %9 = bitcast i8* %.36.repack7 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.428, i64 0, i64 0), i8** %9, align 8
  %.36.repack8 = getelementptr inbounds i8, i8* %.35, i64 16
  %10 = bitcast i8* %.36.repack8 to i64*
  store i64 40, i64* %10, align 8
  %.36.repack9 = getelementptr inbounds i8, i8* %.35, i64 24
  %11 = bitcast i8* %.36.repack9 to i64*
  store i64 40, i64* %11, align 8
  call void @println(%string.676378* %.36)
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.676378*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.40.repack, align 8
  %.40.repack10 = getelementptr inbounds i8, i8* %.39, i64 8
  %12 = bitcast i8* %.40.repack10 to i8**
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @str.429, i64 0, i64 0), i8** %12, align 8
  %.40.repack11 = getelementptr inbounds i8, i8* %.39, i64 16
  %13 = bitcast i8* %.40.repack11 to i64*
  store i64 35, i64* %13, align 8
  %.40.repack12 = getelementptr inbounds i8, i8* %.39, i64 24
  %14 = bitcast i8* %.40.repack12 to i64*
  store i64 35, i64* %14, align 8
  call void @println(%string.676378* %.40)
  %.43 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.44 = bitcast i8* %.43 to %string.676378*
  %.44.repack = bitcast i8* %.43 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.44.repack, align 8
  %.44.repack13 = getelementptr inbounds i8, i8* %.43, i64 8
  %15 = bitcast i8* %.44.repack13 to i8**
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.430, i64 0, i64 0), i8** %15, align 8
  %.44.repack14 = getelementptr inbounds i8, i8* %.43, i64 16
  %16 = bitcast i8* %.44.repack14 to i64*
  store i64 40, i64* %16, align 8
  %.44.repack15 = getelementptr inbounds i8, i8* %.43, i64 24
  %17 = bitcast i8* %.44.repack15 to i64*
  store i64 40, i64* %17, align 8
  call void @println(%string.676378* %.44)
  %.47 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.48 = bitcast i8* %.47 to %string.676378*
  %.48.repack = bitcast i8* %.47 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.48.repack, align 8
  %.48.repack16 = getelementptr inbounds i8, i8* %.47, i64 8
  %18 = bitcast i8* %.48.repack16 to i8**
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @str.431, i64 0, i64 0), i8** %18, align 8
  %.48.repack17 = getelementptr inbounds i8, i8* %.47, i64 16
  %19 = bitcast i8* %.48.repack17 to i64*
  store i64 42, i64* %19, align 8
  %.48.repack18 = getelementptr inbounds i8, i8* %.47, i64 24
  %20 = bitcast i8* %.48.repack18 to i64*
  store i64 42, i64* %20, align 8
  call void @println(%string.676378* %.48)
  %.51 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.52 = bitcast i8* %.51 to %string.676378*
  %.52.repack = bitcast i8* %.51 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.52.repack, align 8
  %.52.repack19 = getelementptr inbounds i8, i8* %.51, i64 8
  %21 = bitcast i8* %.52.repack19 to i8**
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.432, i64 0, i64 0), i8** %21, align 8
  %.52.repack20 = getelementptr inbounds i8, i8* %.51, i64 16
  %22 = bitcast i8* %.52.repack20 to i64*
  store i64 38, i64* %22, align 8
  %.52.repack21 = getelementptr inbounds i8, i8* %.51, i64 24
  %23 = bitcast i8* %.52.repack21 to i64*
  store i64 38, i64* %23, align 8
  call void @println(%string.676378* %.52)
  %.55 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.56 = bitcast i8* %.55 to %string.676378*
  %.56.repack = bitcast i8* %.55 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.56.repack, align 8
  %.56.repack22 = getelementptr inbounds i8, i8* %.55, i64 8
  %24 = bitcast i8* %.56.repack22 to i8**
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.433, i64 0, i64 0), i8** %24, align 8
  %.56.repack23 = getelementptr inbounds i8, i8* %.55, i64 16
  %25 = bitcast i8* %.56.repack23 to i64*
  store i64 46, i64* %25, align 8
  %.56.repack24 = getelementptr inbounds i8, i8* %.55, i64 24
  %26 = bitcast i8* %.56.repack24 to i64*
  store i64 46, i64* %26, align 8
  call void @println(%string.676378* %.56)
  %.59 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.60 = bitcast i8* %.59 to %string.676378*
  %.60.repack = bitcast i8* %.59 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.60.repack, align 8
  %.60.repack25 = getelementptr inbounds i8, i8* %.59, i64 8
  %27 = bitcast i8* %.60.repack25 to i8**
  store i8* getelementptr inbounds ([93 x i8], [93 x i8]* @str.434, i64 0, i64 0), i8** %27, align 8
  %.60.repack26 = getelementptr inbounds i8, i8* %.59, i64 16
  %28 = bitcast i8* %.60.repack26 to i64*
  store i64 92, i64* %28, align 8
  %.60.repack27 = getelementptr inbounds i8, i8* %.59, i64 24
  %29 = bitcast i8* %.60.repack27 to i64*
  store i64 92, i64* %29, align 8
  call void @println(%string.676378* %.60)
  %.63 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.64 = bitcast i8* %.63 to %string.676378*
  %.64.repack = bitcast i8* %.63 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.64.repack, align 8
  %.64.repack28 = getelementptr inbounds i8, i8* %.63, i64 8
  %30 = bitcast i8* %.64.repack28 to i8**
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @str.435, i64 0, i64 0), i8** %30, align 8
  %.64.repack29 = getelementptr inbounds i8, i8* %.63, i64 16
  %31 = bitcast i8* %.64.repack29 to i64*
  store i64 46, i64* %31, align 8
  %.64.repack30 = getelementptr inbounds i8, i8* %.63, i64 24
  %32 = bitcast i8* %.64.repack30 to i64*
  store i64 46, i64* %32, align 8
  call void @println(%string.676378* %.64)
  %.67 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.68 = bitcast i8* %.67 to %string.676378*
  %.68.repack = bitcast i8* %.67 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.68.repack, align 8
  %.68.repack31 = getelementptr inbounds i8, i8* %.67, i64 8
  %33 = bitcast i8* %.68.repack31 to i8**
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @str.436, i64 0, i64 0), i8** %33, align 8
  %.68.repack32 = getelementptr inbounds i8, i8* %.67, i64 16
  %34 = bitcast i8* %.68.repack32 to i64*
  store i64 30, i64* %34, align 8
  %.68.repack33 = getelementptr inbounds i8, i8* %.67, i64 24
  %35 = bitcast i8* %.68.repack33 to i64*
  store i64 30, i64* %35, align 8
  call void @println(%string.676378* %.68)
  ret void
}

define i1 @flag(%"Arraymain.flo.676802"* %.1, %string.676378* %.2) local_unnamed_addr {
.4:
  %.9 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  %.10 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.9, align 8
  %.11 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.10, i64 0, i32 7
  %.12 = load i1 (%"Arraymain.flo.676802"*, %string.676378*)*, i1 (%"Arraymain.flo.676802"*, %string.676378*)** %.11, align 8
  %.13 = call i1 %.12(%"Arraymain.flo.676802"* %.1, %string.676378* %.2)
  ret i1 %.13
}

define %string.676378* @flag_value_or(%"Arraymain.flo.676802"* %.1, %string.676378* %.2, %string.676378* readnone %.3) local_unnamed_addr {
.5:
  %.10 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 0
  %.11 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.10, align 8
  %.12 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.11, i64 0, i32 8
  %.13 = load i64 (%"Arraymain.flo.676802"*, %string.676378*)*, i64 (%"Arraymain.flo.676802"*, %string.676378*)** %.12, align 8
  %.15 = call i64 %.13(%"Arraymain.flo.676802"* %.1, %string.676378* %.2)
  %.19.not = icmp eq i64 %.15, -1
  br i1 %.19.not, label %.5.endif, label %.5.if

.5.if:                                            ; preds = %.5
  %.22 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.1, i64 0, i32 2
  %.23 = load i64, i64* %.22, align 8
  %.25 = add i64 %.15, 1
  %.29 = icmp sgt i64 %.23, %.25
  br i1 %.29, label %.5.if.if, label %.5.if.else

.5.endif:                                         ; preds = %.5, %.5.if.else
  ret %string.676378* %.3

.5.if.if:                                         ; preds = %.5.if
  %.34 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.10, align 8
  %.35 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.34, i64 0, i32 5
  %.36 = load %string.676378* (%"Arraymain.flo.676802"*, i64)*, %string.676378* (%"Arraymain.flo.676802"*, i64)** %.35, align 8
  %.37 = call %string.676378* %.36(%"Arraymain.flo.676802"* %.1, i64 %.25)
  ret %string.676378* %.37

.5.if.else:                                       ; preds = %.5.if
  %.40 = getelementptr inbounds %string.676378, %string.676378* %.2, i64 0, i32 0
  %.41 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.40, align 8
  %.42 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.41, i64 0, i32 11
  %.43 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.42, align 8
  %.44 = call i8* %.43(%string.676378* %.2)
  %.46 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.437, i64 0, i64 0), i8* %.44)
  %.48 = call i8* @malloc(i64 %.46)
  %.49 = call i64 (i8*, i8*, ...) @sprintf(i8* %.48, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str.437, i64 0, i64 0), i8* %.44)
  %.50 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.51 = bitcast i8* %.50 to %string.676378*
  %.52 = bitcast i8* %.50 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.52, align 8
  %.54 = getelementptr inbounds i8, i8* %.50, i64 8
  %0 = bitcast i8* %.54 to i8**
  store i8* %.48, i8** %0, align 8
  %.56 = getelementptr inbounds i8, i8* %.50, i64 16
  %1 = bitcast i8* %.56 to i64*
  store i64 %.46, i64* %1, align 8
  %.58 = getelementptr inbounds i8, i8* %.50, i64 24
  %2 = bitcast i8* %.58 to i64*
  store i64 %.46, i64* %2, align 8
  call void @print_message_error(i64 4, %string.676378* %.51)
  br label %.5.endif
}

define i64 @main(i64 %.1, i8** nocapture readonly %.2) local_unnamed_addr {
.4:
  %.9 = call %"Arraymain.flo.676802"* @parse_args(i64 %.1, i8** %.2)
  %.12 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.9, i64 0, i32 2
  %.13 = load i64, i64* %.12, align 8
  %.14 = icmp sgt i64 %.13, 1
  %.17 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.18 = bitcast i8* %.17 to %string.676378*
  %.18.repack = bitcast i8* %.17 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.18.repack, align 8
  %.18.repack4 = getelementptr inbounds i8, i8* %.17, i64 8
  %0 = bitcast i8* %.18.repack4 to i8**
  br i1 %.14, label %.4.if, label %.4.else

.4.if:                                            ; preds = %.4
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.438, i64 0, i64 0), i8** %0, align 8
  %.18.repack5 = getelementptr inbounds i8, i8* %.17, i64 16
  %1 = bitcast i8* %.18.repack5 to i64*
  store i64 2, i64* %1, align 8
  %.18.repack6 = getelementptr inbounds i8, i8* %.17, i64 24
  %2 = bitcast i8* %.18.repack6 to i64*
  store i64 2, i64* %2, align 8
  %.20 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.18)
  %.22 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.23 = bitcast i8* %.22 to %string.676378*
  %.23.repack = bitcast i8* %.22 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.23.repack, align 8
  %.23.repack7 = getelementptr inbounds i8, i8* %.22, i64 8
  %3 = bitcast i8* %.23.repack7 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.439, i64 0, i64 0), i8** %3, align 8
  %.23.repack8 = getelementptr inbounds i8, i8* %.22, i64 16
  %4 = bitcast i8* %.23.repack8 to i64*
  store i64 9, i64* %4, align 8
  %.23.repack9 = getelementptr inbounds i8, i8* %.22, i64 24
  %5 = bitcast i8* %.23.repack9 to i64*
  store i64 9, i64* %5, align 8
  %.25 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.23)
  %.26 = or i1 %.20, %.25
  %.28 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.29 = bitcast i8* %.28 to %string.676378*
  %.29.repack = bitcast i8* %.28 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.29.repack, align 8
  %.29.repack46 = getelementptr inbounds i8, i8* %.28, i64 8
  %6 = bitcast i8* %.29.repack46 to i8**
  br i1 %.26, label %.4.if.if, label %.4.if.endif

.4.else:                                          ; preds = %.4
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str.453, i64 0, i64 0), i8** %0, align 8
  %.306.repack2 = getelementptr inbounds i8, i8* %.17, i64 16
  %7 = bitcast i8* %.306.repack2 to i64*
  store i64 24, i64* %7, align 8
  %.306.repack3 = getelementptr inbounds i8, i8* %.17, i64 24
  %8 = bitcast i8* %.306.repack3 to i64*
  store i64 24, i64* %8, align 8
  call void @print_message_error(i64 4, %string.676378* %.18)
  ret i64 1

.4.endif:                                         ; preds = %.4.if.endif.endif.endif.endif.endif.endif, %.4.if.endif.endif.endif.endif.endif, %.4.if.endif.endif.endif, %.4.if.endif.endif.endif.e...endif.endif
  %merge = phi i64 [ 0, %.4.if.endif.endif.endif.e...endif.endif ], [ 1, %.4.if.endif.endif.endif ], [ 1, %.4.if.endif.endif.endif.endif.endif ], [ 1, %.4.if.endif.endif.endif.endif.endif.endif ]
  ret i64 %merge

.4.if.if:                                         ; preds = %.4.if
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @str.440, i64 0, i64 0), i8** %6, align 8
  %.29.repack47 = getelementptr inbounds i8, i8* %.28, i64 16
  %9 = bitcast i8* %.29.repack47 to i64*
  store i64 19, i64* %9, align 8
  %.29.repack48 = getelementptr inbounds i8, i8* %.28, i64 24
  %10 = bitcast i8* %.29.repack48 to i64*
  store i64 19, i64* %10, align 8
  call void @println(%string.676378* %.29)
  ret i64 0

.4.if.endif:                                      ; preds = %.4.if
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.441, i64 0, i64 0), i8** %6, align 8
  %.35.repack11 = getelementptr inbounds i8, i8* %.28, i64 16
  %11 = bitcast i8* %.35.repack11 to i64*
  store i64 2, i64* %11, align 8
  %.35.repack12 = getelementptr inbounds i8, i8* %.28, i64 24
  %12 = bitcast i8* %.35.repack12 to i64*
  store i64 2, i64* %12, align 8
  %.37 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.29)
  %.39 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.40 = bitcast i8* %.39 to %string.676378*
  %.40.repack = bitcast i8* %.39 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.40.repack, align 8
  %.40.repack13 = getelementptr inbounds i8, i8* %.39, i64 8
  %13 = bitcast i8* %.40.repack13 to i8**
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.442, i64 0, i64 0), i8** %13, align 8
  %.40.repack14 = getelementptr inbounds i8, i8* %.39, i64 16
  %14 = bitcast i8* %.40.repack14 to i64*
  store i64 6, i64* %14, align 8
  %.40.repack15 = getelementptr inbounds i8, i8* %.39, i64 24
  %15 = bitcast i8* %.40.repack15 to i64*
  store i64 6, i64* %15, align 8
  %.42 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.40)
  %.43 = or i1 %.37, %.42
  %.46 = getelementptr inbounds %"Arraymain.flo.676802", %"Arraymain.flo.676802"* %.9, i64 0, i32 0
  %.47 = load %"Arraymain.flo_vtable_ty.676803"*, %"Arraymain.flo_vtable_ty.676803"** %.46, align 8
  %.48 = getelementptr inbounds %"Arraymain.flo_vtable_ty.676803", %"Arraymain.flo_vtable_ty.676803"* %.47, i64 0, i32 5
  %.49 = load %string.676378* (%"Arraymain.flo.676802"*, i64)*, %string.676378* (%"Arraymain.flo.676802"*, i64)** %.48, align 8
  br i1 %.43, label %.4.if.endif.if, label %.4.if.endif.endif

.4.if.endif.if:                                   ; preds = %.4.if.endif
  %.50 = call %string.676378* %.49(%"Arraymain.flo.676802"* %.9, i64 0)
  call void @help(%string.676378* %.50)
  ret i64 0

.4.if.endif.endif:                                ; preds = %.4.if.endif
  %.58 = call %string.676378* %.49(%"Arraymain.flo.676802"* %.9, i64 1)
  %.60 = call dereferenceable_or_null(64) i8* @malloc(i64 64)
  %.61 = bitcast i8* %.60 to %Compiler.676394*
  %.62 = bitcast i8* %.60 to %Compiler_vtable_ty.676395**
  store %Compiler_vtable_ty.676395* @Compiler_vtable_data, %Compiler_vtable_ty.676395** %.62, align 8
  call void @Compiler_constructor(%Compiler.676394* %.61)
  %.68 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.62, align 8
  %.69 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.68, i64 0, i32 1
  %.70 = load %FileId.676390* (%Compiler.676394*, %string.676378*)*, %FileId.676390* (%Compiler.676394*, %string.676378*)** %.69, align 8
  %.72 = call %FileId.676390* %.70(%Compiler.676394* %.61, %string.676378* %.58)
  %.74.cast = bitcast i8* %.60 to %Compiler.676394*
  %.75 = bitcast i8* %.60 to %Compiler_vtable_ty.676395**
  %.76 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.75, align 8
  %.77 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.76, i64 0, i32 2
  %.78 = load i1 (%Compiler.676394*, %FileId.676390*)*, i1 (%Compiler.676394*, %FileId.676390*)** %.77, align 8
  %.80 = call i1 %.78(%Compiler.676394* %.74.cast, %FileId.676390* %.72)
  br i1 %.80, label %.4.if.endif.endif.endif, label %.4.if.endif.endif.if

.4.if.endif.endif.if:                             ; preds = %.4.if.endif.endif
  %.84 = getelementptr inbounds %string.676378, %string.676378* %.58, i64 0, i32 0
  %.85 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.84, align 8
  %.86 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.85, i64 0, i32 11
  %.87 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.86, align 8
  %.88 = call i8* %.87(%string.676378* %.58)
  %.90 = call i64 (i8*, i64, i8*, ...) @snprintf(i8* null, i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.282, i64 0, i64 0), i8* %.88)
  %.92 = call i8* @malloc(i64 %.90)
  %.93 = call i64 (i8*, i8*, ...) @sprintf(i8* %.92, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.282, i64 0, i64 0), i8* %.88)
  %.94 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.95 = bitcast i8* %.94 to %string.676378*
  %.96 = bitcast i8* %.94 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.96, align 8
  %.98 = getelementptr inbounds i8, i8* %.94, i64 8
  %16 = bitcast i8* %.98 to i8**
  store i8* %.92, i8** %16, align 8
  %.100 = getelementptr inbounds i8, i8* %.94, i64 16
  %17 = bitcast i8* %.100 to i64*
  store i64 %.90, i64* %17, align 8
  %.102 = getelementptr inbounds i8, i8* %.94, i64 24
  %18 = bitcast i8* %.102 to i64*
  store i64 %.90, i64* %18, align 8
  call void @print_message_error(i64 3, %string.676378* %.95)
  ret i64 1

.4.if.endif.endif.endif:                          ; preds = %.4.if.endif.endif
  %.106 = call dereferenceable_or_null(56) i8* @malloc(i64 56)
  %.107 = bitcast i8* %.106 to %Lexer.676422*
  %.108 = bitcast i8* %.106 to %Lexer_vtable_ty.676423**
  store %Lexer_vtable_ty.676423* @Lexer_vtable_data, %Lexer_vtable_ty.676423** %.108, align 8
  call void @Lexer_constructor(%Lexer.676422* %.107)
  %.114 = load %Lexer_vtable_ty.676423*, %Lexer_vtable_ty.676423** %.108, align 8
  %.115 = getelementptr inbounds %Lexer_vtable_ty.676423, %Lexer_vtable_ty.676423* %.114, i64 0, i32 22
  %.116 = load %"Array<Token>.676417"* (%Lexer.676422*, %string.676378*, %"Array<FloError>.676397"*)*, %"Array<Token>.676417"* (%Lexer.676422*, %string.676378*, %"Array<FloError>.676397"*)** %.115, align 8
  %.118 = getelementptr inbounds i8, i8* %.60, i64 24
  %19 = bitcast i8* %.118 to %string.676378**
  %.119 = load %string.676378*, %string.676378** %19, align 8
  %.121 = getelementptr inbounds i8, i8* %.60, i64 48
  %20 = bitcast i8* %.121 to %"Array<FloError>.676397"**
  %.122 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %20, align 8
  %.123 = call %"Array<Token>.676417"* %.116(%Lexer.676422* %.107, %string.676378* %.119, %"Array<FloError>.676397"* %.122)
  %.127 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.75, align 8
  %.128 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.127, i64 0, i32 3
  %.129 = load i1 (%Compiler.676394*)*, i1 (%Compiler.676394*)** %.128, align 8
  %.130 = call i1 %.129(%Compiler.676394* %.74.cast)
  br i1 %.130, label %.4.endif, label %.4.if.endif.endif.endif.endif

.4.if.endif.endif.endif.endif:                    ; preds = %.4.if.endif.endif.endif
  %.134 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.135 = bitcast i8* %.134 to %string.676378*
  %.135.repack = bitcast i8* %.134 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.135.repack, align 8
  %.135.repack16 = getelementptr inbounds i8, i8* %.134, i64 8
  %21 = bitcast i8* %.135.repack16 to i8**
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @str.443, i64 0, i64 0), i8** %21, align 8
  %.135.repack17 = getelementptr inbounds i8, i8* %.134, i64 16
  %22 = bitcast i8* %.135.repack17 to i64*
  store i64 14, i64* %22, align 8
  %.135.repack18 = getelementptr inbounds i8, i8* %.134, i64 24
  %23 = bitcast i8* %.135.repack18 to i64*
  store i64 14, i64* %23, align 8
  %.137 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.135)
  br i1 %.137, label %.4.if.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.if:                 ; preds = %.4.if.endif.endif.endif.endif
  %.142 = load %string.676378*, %string.676378** %19, align 8
  call void @print_tokens(%"Array<Token>.676417"* %.123, %string.676378* %.142)
  br label %.4.if.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif:              ; preds = %.4.if.endif.endif.endif.endif.if, %.4.if.endif.endif.endif.endif
  %.145 = call dereferenceable_or_null(40) i8* @malloc(i64 40)
  %.146 = bitcast i8* %.145 to %Parser.676536*
  %.147 = bitcast i8* %.145 to %Parser_vtable_ty.676537**
  store %Parser_vtable_ty.676537* @Parser_vtable_data, %Parser_vtable_ty.676537** %.147, align 8
  call void @Parser_constructor(%Parser.676536* %.146)
  %.153 = load %Parser_vtable_ty.676537*, %Parser_vtable_ty.676537** %.147, align 8
  %.154 = getelementptr inbounds %Parser_vtable_ty.676537, %Parser_vtable_ty.676537* %.153, i64 0, i32 56
  %.155 = load %ModuleAST.676520* (%Parser.676536*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*)*, %ModuleAST.676520* (%Parser.676536*, %"Array<Token>.676417"*, %"Array<FloError>.676397"*)** %.154, align 8
  %.159 = load %"Array<FloError>.676397"*, %"Array<FloError>.676397"** %20, align 8
  %.160 = call %ModuleAST.676520* %.155(%Parser.676536* %.146, %"Array<Token>.676417"* %.123, %"Array<FloError>.676397"* %.159)
  %.164 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.75, align 8
  %.165 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.164, i64 0, i32 3
  %.166 = load i1 (%Compiler.676394*)*, i1 (%Compiler.676394*)** %.165, align 8
  %.167 = call i1 %.166(%Compiler.676394* %.74.cast)
  br i1 %.167, label %.4.endif, label %.4.if.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif:        ; preds = %.4.if.endif.endif.endif.endif.endif
  %.170 = call dereferenceable_or_null(80) i8* @malloc(i64 80)
  %.171 = bitcast i8* %.170 to %TypeChecker.676716*
  %.172 = bitcast i8* %.170 to %TypeChecker_vtable_ty.676717**
  store %TypeChecker_vtable_ty.676717* @TypeChecker_vtable_data, %TypeChecker_vtable_ty.676717** %.172, align 8
  call void @TypeChecker_constructor(%TypeChecker.676716* %.171)
  %.178 = load %TypeChecker_vtable_ty.676717*, %TypeChecker_vtable_ty.676717** %.172, align 8
  %.179 = getelementptr inbounds %TypeChecker_vtable_ty.676717, %TypeChecker_vtable_ty.676717* %.178, i64 0, i32 18
  %.180 = load %Program.676712* (%TypeChecker.676716*, %ModuleAST.676520*, %Compiler.676394*, %string.676378*)*, %Program.676712* (%TypeChecker.676716*, %ModuleAST.676520*, %Compiler.676394*, %string.676378*)** %.179, align 8
  %.184 = call %Program.676712* %.180(%TypeChecker.676716* %.171, %ModuleAST.676520* %.160, %Compiler.676394* %.74.cast, %string.676378* %.58)
  %.188 = load %Compiler_vtable_ty.676395*, %Compiler_vtable_ty.676395** %.75, align 8
  %.189 = getelementptr inbounds %Compiler_vtable_ty.676395, %Compiler_vtable_ty.676395* %.188, i64 0, i32 3
  %.190 = load i1 (%Compiler.676394*)*, i1 (%Compiler.676394*)** %.189, align 8
  %.191 = call i1 %.190(%Compiler.676394* %.74.cast)
  br i1 %.191, label %.4.endif, label %.4.if.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif:  ; preds = %.4.if.endif.endif.endif.endif.endif.endif
  %.195 = call dereferenceable_or_null(120) i8* @malloc(i64 120)
  %.197 = bitcast i8* %.195 to %CodeGen_vtable_ty.676781**
  store %CodeGen_vtable_ty.676781* @CodeGen_vtable_data, %CodeGen_vtable_ty.676781** %.197, align 8
  %.200.cast = bitcast i8* %.195 to %CodeGen.676780*
  %.204 = load %GeneratedModule.676756* (%CodeGen.676780*, %Program.676712*)*, %GeneratedModule.676756* (%CodeGen.676780*, %Program.676712*)** getelementptr inbounds (%CodeGen_vtable_ty.676781, %CodeGen_vtable_ty.676781* @CodeGen_vtable_data, i64 0, i32 0), align 16
  %.206 = call %GeneratedModule.676756* %.204(%CodeGen.676780* %.200.cast, %Program.676712* %.184)
  %flo_module = alloca %GeneratedModule.676756*, align 8
  store %GeneratedModule.676756* %.206, %GeneratedModule.676756** %flo_module, align 8
  %.209 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.206, i64 0, i32 0
  %.210 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.209, align 8
  %.211 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.210, i64 0, i32 1
  %.212 = load void (%GeneratedModule.676756*, i64)*, void (%GeneratedModule.676756*, i64)** %.211, align 8
  %.214 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.215 = bitcast i8* %.214 to %string.676378*
  %.215.repack = bitcast i8* %.214 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.215.repack, align 8
  %.215.repack19 = getelementptr inbounds i8, i8* %.214, i64 8
  %24 = bitcast i8* %.215.repack19 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.444, i64 0, i64 0), i8** %24, align 8
  %.215.repack20 = getelementptr inbounds i8, i8* %.214, i64 16
  %25 = bitcast i8* %.215.repack20 to i64*
  store i64 2, i64* %25, align 8
  %.215.repack21 = getelementptr inbounds i8, i8* %.214, i64 24
  %26 = bitcast i8* %.215.repack21 to i64*
  store i64 2, i64* %26, align 8
  %.217 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.218 = bitcast i8* %.217 to %string.676378*
  %.218.repack = bitcast i8* %.217 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.218.repack, align 8
  %.218.repack22 = getelementptr inbounds i8, i8* %.217, i64 8
  %27 = bitcast i8* %.218.repack22 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.445, i64 0, i64 0), i8** %27, align 8
  %.218.repack23 = getelementptr inbounds i8, i8* %.217, i64 16
  %28 = bitcast i8* %.218.repack23 to i64*
  store i64 1, i64* %28, align 8
  %.218.repack24 = getelementptr inbounds i8, i8* %.217, i64 24
  %29 = bitcast i8* %.218.repack24 to i64*
  store i64 1, i64* %29, align 8
  %.220 = call %string.676378* @flag_value_or(%"Arraymain.flo.676802"* %.9, %string.676378* %.215, %string.676378* %.218)
  %.221 = getelementptr inbounds %string.676378, %string.676378* %.220, i64 0, i32 0
  %.222 = load %string_vtable_ty.676379*, %string_vtable_ty.676379** %.221, align 8
  %.223 = getelementptr inbounds %string_vtable_ty.676379, %string_vtable_ty.676379* %.222, i64 0, i32 11
  %.224 = load i8* (%string.676378*)*, i8* (%string.676378*)** %.223, align 8
  %.225 = call i8* %.224(%string.676378* %.220)
  %.226 = call i32 @atoi(i8* %.225)
  %.227 = zext i32 %.226 to i64
  call void %.212(%GeneratedModule.676756* %.206, i64 %.227)
  %.230 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.231 = bitcast i8* %.230 to %string.676378*
  %.231.repack = bitcast i8* %.230 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.231.repack, align 8
  %.231.repack25 = getelementptr inbounds i8, i8* %.230, i64 8
  %30 = bitcast i8* %.231.repack25 to i8**
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str.446, i64 0, i64 0), i8** %30, align 8
  %.231.repack26 = getelementptr inbounds i8, i8* %.230, i64 16
  %31 = bitcast i8* %.231.repack26 to i64*
  store i64 12, i64* %31, align 8
  %.231.repack27 = getelementptr inbounds i8, i8* %.230, i64 24
  %32 = bitcast i8* %.231.repack27 to i64*
  store i64 12, i64* %32, align 8
  %.233 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.231)
  br i1 %.233, label %.4.if.endif.endif.endif.endif.endif.endif.endif.if, label %.4.if.endif.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif.if: ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif
  %.237 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.209, align 8
  %.238 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.237, i64 0, i32 5
  %.239 = load void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)** %.238, align 8
  call void %.239(%GeneratedModule.676756* %.206)
  br label %.4.if.endif.endif.endif.endif.endif.endif.endif.endif

.4.if.endif.endif.endif.endif.endif.endif.endif.endif: ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.if, %.4.if.endif.endif.endif.endif.endif.endif.endif
  %.243 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.244 = bitcast i8* %.243 to %string.676378*
  %.244.repack = bitcast i8* %.243 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.244.repack, align 8
  %.244.repack28 = getelementptr inbounds i8, i8* %.243, i64 8
  %33 = bitcast i8* %.244.repack28 to i8**
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.447, i64 0, i64 0), i8** %33, align 8
  %.244.repack29 = getelementptr inbounds i8, i8* %.243, i64 16
  %34 = bitcast i8* %.244.repack29 to i64*
  store i64 11, i64* %34, align 8
  %.244.repack30 = getelementptr inbounds i8, i8* %.243, i64 24
  %35 = bitcast i8* %.244.repack30 to i64*
  store i64 11, i64* %35, align 8
  %.246 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.244)
  br i1 %.246, label %.4.if.endif.endif.endif.e...endif, label %.4.if.endif.endif.endif.e...if

.4.if.endif.endif.endif.e...if:                   ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.endif
  %.251 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.209, align 8
  %.252 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.251, i64 0, i32 4
  %.253 = load void (%GeneratedModule.676756*, %string.676378*, %string.676378*)*, void (%GeneratedModule.676756*, %string.676378*, %string.676378*)** %.252, align 8
  %.255 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.256 = bitcast i8* %.255 to %string.676378*
  %.256.repack = bitcast i8* %.255 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.256.repack, align 8
  %.256.repack37 = getelementptr inbounds i8, i8* %.255, i64 8
  %36 = bitcast i8* %.256.repack37 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.448, i64 0, i64 0), i8** %36, align 8
  %.256.repack38 = getelementptr inbounds i8, i8* %.255, i64 16
  %37 = bitcast i8* %.256.repack38 to i64*
  store i64 2, i64* %37, align 8
  %.256.repack39 = getelementptr inbounds i8, i8* %.255, i64 24
  %38 = bitcast i8* %.256.repack39 to i64*
  store i64 2, i64* %38, align 8
  %.258 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.259 = bitcast i8* %.258 to %string.676378*
  %.259.repack = bitcast i8* %.258 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.259.repack, align 8
  %.259.repack40 = getelementptr inbounds i8, i8* %.258, i64 8
  %39 = bitcast i8* %.259.repack40 to i8**
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.449, i64 0, i64 0), i8** %39, align 8
  %.259.repack41 = getelementptr inbounds i8, i8* %.258, i64 16
  %40 = bitcast i8* %.259.repack41 to i64*
  store i64 3, i64* %40, align 8
  %.259.repack42 = getelementptr inbounds i8, i8* %.258, i64 24
  %41 = bitcast i8* %.259.repack42 to i64*
  store i64 3, i64* %41, align 8
  %.261 = call %string.676378* @flag_value_or(%"Arraymain.flo.676802"* %.9, %string.676378* %.256, %string.676378* %.259)
  %.263 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.264 = bitcast i8* %.263 to %string.676378*
  %.264.repack = bitcast i8* %.263 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.264.repack, align 8
  %.264.repack43 = getelementptr inbounds i8, i8* %.263, i64 8
  %42 = bitcast i8* %.264.repack43 to i8**
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.450, i64 0, i64 0), i8** %42, align 8
  %.264.repack44 = getelementptr inbounds i8, i8* %.263, i64 16
  %43 = bitcast i8* %.264.repack44 to i64*
  store i64 8, i64* %43, align 8
  %.264.repack45 = getelementptr inbounds i8, i8* %.263, i64 24
  %44 = bitcast i8* %.264.repack45 to i64*
  store i64 8, i64* %44, align 8
  %.266 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.267 = bitcast i8* %.266 to %string.676378*
  %.268 = bitcast i8* %.266 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.268, align 8
  %.270 = getelementptr inbounds i8, i8* %.266, i64 8
  %45 = bitcast i8* %.270 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.6, i64 0, i64 0), i8** %45, align 8
  %.272 = getelementptr inbounds i8, i8* %.266, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %.272, i8 0, i64 16, i1 false)
  %.276 = call %string.676378* @flag_value_or(%"Arraymain.flo.676802"* %.9, %string.676378* %.264, %string.676378* %.267)
  call void %.253(%GeneratedModule.676756* %.206, %string.676378* %.261, %string.676378* %.276)
  br label %.4.if.endif.endif.endif.e...endif

.4.if.endif.endif.endif.e...endif:                ; preds = %.4.if.endif.endif.endif.endif.endif.endif.endif.endif, %.4.if.endif.endif.endif.e...if
  %.280 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.281 = bitcast i8* %.280 to %string.676378*
  %.281.repack = bitcast i8* %.280 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.281.repack, align 8
  %.281.repack31 = getelementptr inbounds i8, i8* %.280, i64 8
  %46 = bitcast i8* %.281.repack31 to i8**
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.451, i64 0, i64 0), i8** %46, align 8
  %.281.repack32 = getelementptr inbounds i8, i8* %.280, i64 16
  %47 = bitcast i8* %.281.repack32 to i64*
  store i64 2, i64* %47, align 8
  %.281.repack33 = getelementptr inbounds i8, i8* %.280, i64 24
  %48 = bitcast i8* %.281.repack33 to i64*
  store i64 2, i64* %48, align 8
  %.283 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.281)
  %.285 = call dereferenceable_or_null(32) i8* @malloc(i64 32)
  %.286 = bitcast i8* %.285 to %string.676378*
  %.286.repack = bitcast i8* %.285 to %string_vtable_ty.676379**
  store %string_vtable_ty.676379* @string_vtable_data, %string_vtable_ty.676379** %.286.repack, align 8
  %.286.repack34 = getelementptr inbounds i8, i8* %.285, i64 8
  %49 = bitcast i8* %.286.repack34 to i8**
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.452, i64 0, i64 0), i8** %49, align 8
  %.286.repack35 = getelementptr inbounds i8, i8* %.285, i64 16
  %50 = bitcast i8* %.286.repack35 to i64*
  store i64 9, i64* %50, align 8
  %.286.repack36 = getelementptr inbounds i8, i8* %.285, i64 24
  %51 = bitcast i8* %.286.repack36 to i64*
  store i64 9, i64* %51, align 8
  %.288 = call i1 @flag(%"Arraymain.flo.676802"* %.9, %string.676378* %.286)
  %.289 = or i1 %.283, %.288
  br i1 %.289, label %.4.if.endif.endif.endif.e...endif.if, label %.4.if.endif.endif.endif.e...endif.endif

.4.if.endif.endif.endif.e...endif.if:             ; preds = %.4.if.endif.endif.endif.e...endif
  %.293 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.209, align 8
  %.294 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.293, i64 0, i32 2
  %.295 = load void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)** %.294, align 8
  call void %.295(%GeneratedModule.676756* %.206)
  br label %.4.if.endif.endif.endif.e...endif.endif

.4.if.endif.endif.endif.e...endif.endif:          ; preds = %.4.if.endif.endif.endif.e...endif.if, %.4.if.endif.endif.endif.e...endif
  %.298 = load %GeneratedModule.676756*, %GeneratedModule.676756** %flo_module, align 8
  %.299 = getelementptr inbounds %GeneratedModule.676756, %GeneratedModule.676756* %.298, i64 0, i32 0
  %.300 = load %GeneratedModule_vtable_ty.676757*, %GeneratedModule_vtable_ty.676757** %.299, align 8
  %.301 = getelementptr inbounds %GeneratedModule_vtable_ty.676757, %GeneratedModule_vtable_ty.676757* %.300, i64 0, i32 7
  %.302 = load void (%GeneratedModule.676756*)*, void (%GeneratedModule.676756*)** %.301, align 8
  call void %.302(%GeneratedModule.676756* %.298)
  br label %.4.endif
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

attributes #0 = { argmemonly nofree nounwind readonly }
attributes #1 = { nofree norecurse nounwind writeonly }
attributes #2 = { nounwind }
attributes #3 = { nofree nounwind }
attributes #4 = { norecurse nounwind readonly }
attributes #5 = { nofree }
attributes #6 = { norecurse nounwind readnone }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nofree norecurse nounwind }
attributes #9 = { argmemonly nounwind willreturn writeonly }
